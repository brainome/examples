#!/usr/bin/env python3
#
# This code has been produced by a free evaluation version of Daimensions(tm).
# Portions of this code copyright (c) 2019, 2020 by Brainome, Inc. All Rights Reserved.
# Brainome grants an exclusive (subject to our continuing rights to use and modify models),
# worldwide, non-sublicensable, and non-transferable limited license to use and modify this
# predictor produced through the input of your data:
# (i) for users accessing the service through a free evaluation account, solely for your
# own non-commercial purposes, including for the purpose of evaluating this service, and
# (ii) for users accessing the service through a paid, commercial use account, for your
# own internal  and commercial purposes.
# Please contact support@brainome.ai with any questions.
# Use of predictions results at your own risk.
#
# Output of Brainome Daimensions(tm) 0.991 Table Compiler v0.99.
# Invocation: btc train.csv -headerless -f NN -o NN.py -riskoverfit --yes
# Total compiler execution time: 0:04:52.92. Finished on: Mar-03-2021 09:02:35.
# This source code requires Python 3.
#
"""
Classifier Type:                    Neural Network
System Type:                         5-way classifier
Best-guess accuracy:                 22.82%
Overall Model accuracy:              89.32% (3731/4177 correct)
Overall Improvement over best guess: 66.50% (of possible 77.18%)
Model capacity (MEC):                2 bits
Generalization ratio:                4316.42 bits/bit
Model efficiency:                    33.25%/parameter
Confusion Matrix:
 [19.89% 0.31% 0.41% 0.00% 0.00%]
 [0.43% 17.52% 0.53% 0.00% 0.00%]
 [0.41% 0.81% 15.61% 0.00% 0.00%]
 [0.00% 0.00% 0.00% 16.57% 4.69%]
 [0.00% 0.00% 0.00% 3.09% 19.73%]
Generalization index:                1488.25
Percent of Data Memorized:           0.07%
Note: Unable to split dataset. The predictor was trained and evaluated on the same data.
Note: Labels have been remapped to '1.0'=0, '2.0'=1, '3.0'=2, '4.0'=3, '5.0'=4.
"""

# Imports -- Python3 standard library
import sys
import math
import os
import argparse
import tempfile
import csv
import binascii
import faulthandler

# Imports -- external
try:
    import numpy as np # For numpy see: http://numpy.org
    from numpy import array
except:
    print("This predictor requires the Numpy library. For installation instructions please refer to: http://numpy.org")

# Magic constants follow
# I/O buffer for clean. Reduce this constant for low memory devices. 
IOBUF = 100000000

# Ugly workaround for large classifiers
sys.setrecursionlimit(1000000)

# Training file given to compiler
TRAINFILE = "train.csv"


#Number of output logits
num_output_logits = 5

#Number of attributes
num_attr = 12
num_attr_before_transform = 561
n_classes = 5

mappings = []
list_of_cols_to_normalize = []

transform_true = True

def column_norm(column,mappings):
    listy = []
    for i,val in enumerate(column.reshape(-1)):
        if not (val in mappings):
            mappings[val] = int(max(mappings.values())) + 1
        listy.append(mappings[val])
    return np.array(listy)

def Normalize(data_arr):
    if list_of_cols_to_normalize:
        for i,mapping in zip(list_of_cols_to_normalize, mappings):
            if i >= data_arr.shape[1]:
                break
            col = data_arr[:, i]
            normcol = column_norm(col,mapping)
            data_arr[:, i] = normcol
        return data_arr
    else:
        return data_arr

def transform(X):
    mean = None
    components = None
    whiten = None
    explained_variance = None
    if (transform_true):
        mean = np.array([0.275642437155853, -0.01728716303567155, -0.10953451520229886, -0.5238415322001451, -0.4069437227675374, -0.5371374503231996, -0.5550209624132163, -0.42545814220732586, -0.5399346157529324, -0.3626337993775445, -0.2488612090016761, -0.5091051448407947, 0.4585532080440514, 0.324748051232943, 0.5465226167105576, -0.46051287526933204, -0.7838744792913532, -0.8817043332535152, -0.8268208977735042, -0.6233362317452725, -0.5689075460857087, -0.5716657792674162, -0.04184439071103683, -0.032982362939909464, -0.08820973904716313, -0.14093308355278975, 0.13105223844864766, -0.04065501556140774, 0.13420286090495578, -0.07930796025855852, 0.06200963370840325, 0.1461756021067749, -0.024320921714148975, -0.04126489346420911, 0.06702866650706259, 0.01456589657649029, -0.07656645678716786, -0.16832167344984497, -0.177821809911419, 0.18449192961455568, 0.9111714148910715, -0.14138293990902595, -0.01579232702896825, -0.9699820445295542, -0.9522474742638254, -0.9362480009576234, -0.9706602824993882, -0.9532743595882218, -0.9375841991860181, 0.8475149628920237, -0.15118952597558052, -0.00959348096720126, 0.9213818530045524, -0.1273041848216421, -0.02902599952118756, -0.15615111323916717, 0.7701471127603526, -0.9018886760833108, -0.9183251137179773, -0.9723986114436073, -0.9567143643763446, -0.9423771845822362, -0.6797103543212839, -0.9071344553507293, -0.6775173713191314, -0.48154556619583394, 0.5268805865453657, -0.5713977615513529, 0.6150859995211874, -0.36152376825472776, 0.35413531481924787, -0.3897336293990898, 0.4421778836485518, -0.44794378501316795, 0.47585701939190833, -0.5031153148192486, 0.5269963682068481, 0.18449008618625815, -0.03682928896337079, 0.20748793631793175, 0.08060190567392882, 0.00550662197749581, -0.00548550155614077, -0.5588178884366762, -0.5214978118266714, -0.7107678429494826, -0.5549343404357183, -0.5039803950203512, -0.7032919703136215, -0.6337709600191497, -0.6929137012209701, -0.7796646492698086, 0.529381115633229, 0.617478654536748, 0.6823313933445039, -0.5678663873593469, -0.8138215393823246, -0.7856656763227079, -0.9136062724443234, -0.5433170457265949, -0.5845292793871212, -0.7211364567871678, 0.04335812544888575, 0.045115894182427986, -0.0024250179554704734, -0.14011466124012445, 0.1746917596361024, 0.06172676562125925, 0.12651038065597336, -0.12183625568589872, 0.07433318889154915, 0.15808202298300225, 0.3029233349293758, -0.07525923629399098, 0.0941515944457745, -0.01773057696911658, 0.1144052645439312, -0.1554494254249462, -0.02095589897055289, 0.10655495331577634, -0.03371933684462526, -0.07094594445774487, 0.07911235815178355, -0.6627012544888715, -0.6176811204213561, -0.5816979267416814, -0.6687509384725883, -0.6314126669858744, -0.5976711659085456, -0.5959053555183147, -0.6927545247785508, -0.42983460857074385, 0.5860654656452017, 0.6970031960737364, 0.5000706559731853, -0.5238308451041411, -0.877561141967911, -0.8584226454392958, -0.8459083696432713, -0.6714014531960764, -0.6587853818530048, -0.6610949988029692, -0.10044307397653784, -0.04354447689729492, 0.005230892985396339, -0.26401929135743346, 0.17805633468996948, 0.11932576490304055, -0.08870684941345461, -0.22609345702657288, 0.18704149868326536, -0.050015226238927374, 0.15748562844146508, -0.14269852525736224, 0.11548403160162783, -0.040613548000957546, 0.1625492482643043, -0.1353121738089535, -0.010943890351927192, -0.10394406751256889, -0.09699162556858996, -0.04320363897534115, -0.05144171893703626, -0.6718199664831245, -0.7386699736653093, -0.6814940651185034, -0.66954209719895, -0.7508182738807724, -0.6892163706009086, -0.691645319607376, -0.7697182954273348, -0.6863647833373214, 0.7083749844385963, 0.7933131074934119, 0.754703066794351, -0.7141605314819257, -0.8954363466602727, -0.9240389274598917, -0.8991900526693712, -0.6779682283935855, -0.7651380488388795, -0.7122010079004052, 0.09954165429734224, 0.11596022983002185, 0.11380352884845593, -0.1089159683983719, 0.05273813981326339, 0.15092711276035514, 0.15879215465645236, -0.18963140770888157, 0.20222350251376556, 0.07034909983241551, 0.07814985396217368, -0.09199551352645448, 0.0781032702896816, 0.06253184342829787, 0.016562676562125928, 0.05161510414172847, 0.03821357912377307, -0.12239248503710794, -0.4557403615034723, -0.5108600718218813, -0.5724852022982999, -0.46990951879339293, -0.8063296049796488, -0.4557403615034723, -0.7274120876226863, -0.6440549293751475, 0.2661669068709603, -0.10621927699305717, 0.0518355494373952, 0.03615451520229831, -0.030124824036389806, -0.4557403615034723, -0.5108600718218813, -0.5724852022982999, -0.46990951879339293, -0.8063296049796488, -0.4557403615034723, -0.7274120876226863, -0.6440549293751475, 0.2661669068709603, -0.10621927699305717, 0.0518355494373952, 0.03615451520229831, -0.030124824036389806, -0.5708565166387342, -0.5454225065836703, -0.5682065956428033, -0.5585009504429014, -0.7425382643045257, -0.5708565166387342, -0.814870375867838, -0.631115192722048, 0.08736107493416333, 0.04640428776633935, 0.004701747665788747, -0.09495192482643057, -0.039365539861144425, -0.5267205697869286, -0.5965585587742389, -0.5574394158486947, -0.634842267177399, -0.679859030404595, -0.5267205697869286, -0.7966809025616381, -0.5849544074694769, 0.2948626885324409, -0.038155975580560234, -0.06144437634666037, 0.10575169739047159, -0.04627665788843668, -0.7086113646157542, -0.7301251185061055, -0.7473703974144116, -0.7393955781661476, -0.7581935360306412, -0.7086113646157542, -0.9144520948048758, -0.7640216495092168, 0.26169101029446984, 0.26422084510414234, -0.20168258558774252, -0.06634169020828352, -0.1123626741680633, -0.540189540339957, -0.43843368925065906, -0.5966457720852291, -0.5191108594685205, -0.42977715106535797, -0.5444422384486467, -0.5015187335408188, -0.41961646157529403, -0.558310172372517, -0.5786429087862112, -0.5887827412018205, -0.5693789490064642, -0.8257203710797157, -0.8576609288963335, -0.9013982762748335, -0.4595148455829543, -0.7840516710557769, -0.6947611252094728, -0.8068488077567484, -0.5776194828824495, -0.5739283289442179, -0.6925294493655741, -0.06505018673689264, -0.03759420397414392, -0.07563070864256528, -0.7335591094086675, -0.8055696672252728, -0.846591644721084, -0.2101826143164944, -0.01717554225520705, 0.012288532439549894, -0.17492562365333925, -0.5147178333732346, -0.2659446157529331, -0.5905155853483357, -0.2252627579602585, -0.47139844385922897, -0.774581991860185, -0.8594522959061475, -0.8245910270529009, -0.8691005242997276, -0.8945922791477071, -0.8898158486952285, -0.9323282020588873, -0.9449304189609734, -0.7786433133828073, -0.8104144864735373, -0.8928081158726281, -0.9365481924826389, -0.7819109552310233, -0.854998316973896, -0.7401827771127495, -0.8088481158726258, -0.8279927196552443, -0.8807747258798017, -0.873335736174269, -0.8550580943260525, -0.8797605219056573, -0.9405341393344427, -0.7025822911180187, -0.7993406176681728, -0.8518275700263186, -0.9015086904476758, -0.6978542470672645, -0.8657282259995066, -0.8300435360306292, -0.8761005602106611, -0.907868611443605, -0.9517653100311111, -0.9547358391189666, -0.9245130093368125, -0.9299058415130215, -0.9521335887000127, -0.8241995594924427, -0.9237981446013757, -0.9437100071821691, -0.9359926023461609, -0.8113406870959861, -0.9494848455829414, -0.5797251280823542, -0.5473576466363431, -0.6876540507541286, -0.5771882571223347, -0.526365764903041, -0.7328193703615004, -0.5038829614555885, -0.5408869164472101, -0.7124868206846994, -0.6465226765621266, -0.6122474982044503, -0.7587392626286789, -0.859206408905906, -0.830284393105095, -0.8613116088101486, -0.5356893679674393, -0.8135891333492867, -0.7857671893703496, -0.913634426621963, -0.5531645942063668, -0.6593751352645415, -0.7217963969356002, -0.11189929853962222, -0.1110457385683509, -0.23644009815657158, -0.4390615274120162, -0.42085707445535053, -0.3499545128082364, -0.08186129758199708, -0.2650775341153946, -0.16622959540339868, -0.28540802011012717, -0.6947195211874557, -0.3783150682307876, -0.8110115585348338, -0.47460693559971157, -0.8093431242518548, -0.8348853291836218, -0.8584538903519208, -0.843721778788596, -0.8731881733301325, -0.9036371079722215, -0.8782141752453848, -0.9310592291117958, -0.9810326071343068, -0.8354887646636293, -0.8202172157050439, -0.8851652669379863, -0.9285794828824451, -0.808419815657164, -0.8291990615274025, -0.7952384510414101, -0.835483768254717, -0.7982319942542389, -0.8873965357912225, -0.8960940627244259, -0.848124388316953, -0.9054084989226531, -0.9651155374670765, -0.8025833038065494, -0.7996760210677387, -0.850643993296604, -0.9129416088101342, -0.7675569834809576, -0.8717192650227278, -0.8789982283935691, -0.8754320253770486, -0.914059516399316, -0.9534522145080094, -0.958848120660748, -0.9296697534115063, -0.9167992099592636, -0.9649335408187585, -0.8504736054584477, -0.9333429279387006, -0.9472794828824326, -0.9170363155374301, -0.8748422552070726, -0.9510516399329544, -0.6023586497486265, -0.6447662844146516, -0.5697507445535063, -0.6840530691884159, -0.6082788987311469, -0.6264116183864024, -0.6225204716303582, -0.6522377854919793, -0.565940220253771, -0.6811491094086684, -0.6811813239166847, -0.7152579004069898, -0.9185609528369479, -0.8845254297342486, -0.8942162317452648, -0.5885755566195833, -0.8949641680631927, -0.8595394254249324, -0.8400971797940978, -0.6431305027531729, -0.6992968350490799, -0.6303693966961926, 0.03047811108451138, 0.07065826669858852, -0.01929540818769424, -0.876878932248037, -0.783381134785726, -0.7975569786928508, -0.11997514484079497, -0.18108395977974548, -0.08955693799377529, -0.1855168949006468, -0.5095291046205409, -0.20042090016758435, -0.5610634259037597, -0.20613228872396497, -0.5304493248743113, -0.9122081541776302, -0.8849614555901264, -0.9001937395259673, -0.9473504668422223, -0.9358687096001815, -0.938743332535303, -0.9548080679913735, -0.9694520804405032, -0.9005546803926149, -0.8982291836245998, -0.9305887479051839, -0.9612881015082523, -0.8968195714627611, -0.9419349054345133, -0.8529219607373582, -0.9466880775676244, -0.9503233014124924, -0.9581563562365285, -0.9719095044290118, -0.9477148671295117, -0.9412083959779647, -0.9715742877663353, -0.8662947570026199, -0.9408626837443085, -0.9666515441704517, -0.946364259037578, -0.851986183864005, -0.9575703854440936, -0.8770225281302223, -0.9172006463969262, -0.9141107493416237, -0.9560949245870166, -0.9637830979171571, -0.9507695235815069, -0.9408741680631917, -0.963908403160156, -0.8552535503950052, -0.8968379865932394, -0.9601564280584056, -0.9508934019631219, -0.8443965932487298, -0.9573579123772956, -0.500263873593489, -0.5948855159205166, -0.5152733277471877, -0.7125584558295429, -0.875238975341151, -0.500263873593489, -0.7832390112520841, -0.6289050251376564, -0.04985613598276399, -0.7278916686617252, 0.06630301173090743, -0.3713988125448886, -0.6553176586066547, -0.5366016040220234, -0.5610938544409843, -0.5292464663634172, -0.6127303231984672, -0.7566180344745032, -0.5366016040220234, -0.8026111826669778, -0.6047374215944463, -0.20160724922193002, -0.881518314579826, 0.1499681230548241, -0.2583730524299739, -0.5664230739765399, -0.6354224994014852, -0.6432308474982068, -0.6187319224323685, -0.6859523006942774, -0.8701982044529518, -0.6354224994014852, -0.8537300167584267, -0.6645086114436204, 0.04292903758678538, -0.8730146516638819, -0.043932003830500346, -0.2877352789083061, -0.6032552238448651, -0.7316812736413709, -0.7481704381134792, -0.7245320110126878, -0.7699571534594181, -0.8431167440746903, -0.7316812736413709, -0.9223687574814387, -0.7229091740483607, -0.1526109791716547, -0.8981590854680275, 0.11997738807756748, -0.2934834857553273, -0.6128630237012206, 0.004067620301651902, 0.0010005458463011715, 0.014768187694517603, -0.009584809672013363, -0.7308161120421339, 0.18050864256643517, 0.03268274120181948])
        components = np.array([array([ 6.05406575e-05, -3.49346243e-04, -3.47169236e-04,  7.41352618e-02,
        8.38331315e-02,  6.34677799e-02,  6.96504299e-02,  8.06408913e-02,
        6.22707130e-02,  8.98706313e-02,  4.52786738e-02,  4.43504359e-02,
       -5.98246790e-02, -5.52673739e-02, -4.43214018e-02,  7.89379157e-02,
        3.80616013e-02,  1.93518996e-02,  2.73618770e-02,  5.93785789e-02,
        5.95105318e-02,  5.64223450e-02,  7.10140672e-02,  6.21801128e-02,
        5.04030937e-02, -4.25801736e-02,  2.64010445e-02, -1.72790600e-02,
        1.11723632e-02, -2.18924672e-02,  2.02633053e-02, -6.55948556e-03,
        1.53630389e-03, -2.40116116e-02,  2.11943108e-02, -1.11509578e-02,
        6.75597031e-03, -2.04298631e-02, -6.04461898e-03, -1.99136194e-03,
        5.19635439e-05, -1.46524389e-02, -1.30276508e-02,  2.61388874e-03,
        2.46362730e-03,  3.30979770e-03,  2.57129754e-03,  2.43320248e-03,
        3.23802167e-03,  1.04911327e-03, -1.34848333e-02, -1.21559473e-02,
       -8.81861380e-04, -1.51301716e-02, -1.38675340e-02,  1.69009594e-03,
       -4.46380848e-04,  7.98735441e-04, -1.42171668e-03,  2.47904980e-03,
        2.33087857e-03,  2.96898457e-03,  3.02862238e-02, -9.32640302e-03,
       -4.24110302e-04, -1.05261319e-02,  1.40260859e-02, -1.73972358e-02,
        2.06239573e-02,  1.70765705e-02, -1.31115484e-02,  7.82505654e-03,
       -2.25172495e-03,  1.16443070e-02, -8.56802492e-03,  5.53672289e-03,
       -2.55539140e-03,  2.05204360e-02,  1.12765053e-02, -1.75616360e-02,
        9.67831368e-04, -5.88648786e-04, -5.67360937e-04,  6.95834165e-02,
        7.27763964e-02,  4.55335226e-02,  7.03952896e-02,  7.52427487e-02,
        4.66123327e-02,  5.86730463e-02,  4.72587579e-02,  3.48811342e-02,
       -7.14831090e-02, -5.74736067e-02, -4.88710830e-02,  6.77003011e-02,
        3.37893753e-02,  3.76632446e-02,  1.63748068e-02,  7.21643164e-02,
        6.24753344e-02,  4.34344018e-02,  1.07021190e-01,  1.02056996e-01,
        9.98598514e-02, -4.19756817e-02, -7.68291116e-04, -2.07290266e-02,
       -1.59292448e-02, -2.66745772e-02,  1.09287416e-02, -4.55842080e-03,
       -4.59445412e-03, -2.66632441e-02,  9.81280128e-03, -7.88212417e-03,
       -7.27410435e-03, -1.30647569e-02, -1.37751648e-02,  1.10674391e-02,
       -7.30353539e-04,  2.06902957e-04, -5.04081028e-04,  4.84475439e-02,
        5.66707037e-02,  5.96234097e-02,  4.77516235e-02,  5.45335737e-02,
        5.73497698e-02,  4.18839742e-02,  4.05186868e-02,  4.83204938e-02,
       -3.78877957e-02, -3.32131914e-02, -4.80759948e-02,  6.74677807e-02,
        2.05929095e-02,  2.48114710e-02,  2.48931262e-02,  4.77229585e-02,
        5.03159621e-02,  4.84753374e-02,  4.19857071e-02,  3.85139368e-02,
        5.15267050e-02, -1.97810272e-02,  1.79325038e-02, -7.68711375e-03,
       -8.81844846e-03, -8.43026644e-03,  1.44856006e-02, -1.09157783e-02,
        6.97053450e-03, -2.85501924e-02,  3.18054308e-02, -2.42731822e-02,
        1.45589970e-02, -1.04535458e-03, -7.21992579e-03,  3.11840043e-02,
        4.20115147e-04, -1.71796282e-04,  1.17316530e-04,  5.02377326e-02,
        4.29495896e-02,  5.03412691e-02,  5.07160990e-02,  4.10126790e-02,
        4.91442495e-02,  4.69004274e-02,  3.76389448e-02,  4.89639680e-02,
       -4.44468132e-02, -3.39551574e-02, -3.90826451e-02,  4.57082440e-02,
        1.91100214e-02,  1.55011234e-02,  1.90586433e-02,  4.94586633e-02,
        3.85855322e-02,  4.54824345e-02,  8.85092884e-02,  8.73502327e-02,
        9.18873021e-02, -1.63503170e-02,  1.31724982e-02, -4.10416219e-03,
        1.52585568e-03, -1.24845718e-02,  1.23756684e-02, -3.96226338e-03,
       -6.43660995e-04, -3.56648704e-02,  2.41982523e-02, -1.43169188e-02,
       -6.89678602e-03,  5.70879451e-03, -1.95861803e-04,  2.09894588e-03,
        7.98054834e-02,  7.16001550e-02,  6.23574330e-02,  7.78705435e-02,
        2.75259902e-02,  7.98054834e-02,  4.63723164e-02,  5.13491807e-02,
        1.05116115e-01, -2.02395796e-02,  1.72980972e-02, -1.61895787e-02,
        1.57565792e-02,  7.98054834e-02,  7.16001550e-02,  6.23574330e-02,
        7.78705435e-02,  2.75259902e-02,  7.98054834e-02,  4.63723164e-02,
        5.13491807e-02,  1.05116115e-01, -2.02395796e-02,  1.72980972e-02,
       -1.61895787e-02,  1.57565792e-02,  6.71200648e-02,  7.11737074e-02,
        6.79332934e-02,  6.82770127e-02,  3.83064401e-02,  6.71200648e-02,
        3.35836068e-02,  5.82694045e-02,  1.20228302e-01, -2.46389722e-02,
        2.17774612e-02, -4.22582959e-03,  9.41237575e-03,  6.71351405e-02,
        5.69293927e-02,  6.23259637e-02,  5.25285293e-02,  4.30881676e-02,
        6.71351405e-02,  3.44948642e-02,  5.85084094e-02,  4.21846148e-02,
        8.87719456e-03, -4.51249853e-03, -1.52278897e-03, -7.74055483e-04,
        4.67118523e-02,  4.35256787e-02,  4.07698504e-02,  4.18572779e-02,
        3.77498481e-02,  4.67118523e-02,  1.67906682e-02,  3.80138628e-02,
        1.10337500e-01, -6.76144455e-03,  3.32545187e-03, -5.53242792e-03,
        9.94603487e-03,  7.17324428e-02,  8.16584432e-02,  5.87777606e-02,
        7.48395068e-02,  7.94120531e-02,  6.05742157e-02,  7.76475975e-02,
        8.37242185e-02,  6.25161828e-02,  6.54262610e-02,  5.48151062e-02,
        5.36574639e-02,  2.63478288e-02,  1.87348578e-02,  1.24304183e-02,
        8.15852525e-02,  3.80551444e-02,  5.03177122e-02,  3.08159301e-02,
        6.59378201e-02,  6.44459082e-02,  4.69469720e-02,  1.22794289e-01,
        1.08400362e-01,  1.00734650e-01, -7.16408726e-03,  1.46186280e-02,
        1.40665704e-02, -2.83529173e-02, -2.90322603e-03, -4.42028719e-03,
        3.40276036e-02,  3.02186231e-02, -1.54838073e-02, -1.83932176e-02,
       -1.28284227e-02, -1.53241043e-02,  3.93959493e-02,  2.53968594e-02,
        3.14929286e-02,  2.38999623e-02,  1.89206502e-02,  1.99526630e-02,
        1.21236920e-02,  9.42092342e-03,  3.89320685e-02,  3.41567302e-02,
        1.93073640e-02,  1.12195423e-02,  3.84032666e-02,  2.63463772e-02,
        4.04389739e-02,  3.42904295e-02,  2.99898941e-02,  2.05314425e-02,
        2.23148761e-02,  2.51332614e-02,  2.04736885e-02,  9.63181761e-03,
        4.86236105e-02,  3.49110807e-02,  2.59526086e-02,  1.65638791e-02,
        4.97249691e-02,  2.32616161e-02,  2.48545017e-02,  2.24034224e-02,
        1.75128438e-02,  9.72759149e-03,  8.96379421e-03,  1.42072047e-02,
        1.24714608e-02,  7.27917274e-03,  2.70914517e-02,  1.46914216e-02,
        1.09632111e-02,  1.10228751e-02,  2.97597911e-02,  1.00787359e-02,
        6.62908678e-02,  6.86563572e-02,  4.89547821e-02,  6.66845103e-02,
        7.22626874e-02,  4.20621686e-02,  7.81211395e-02,  7.00051198e-02,
        4.52386312e-02,  5.59270756e-02,  5.90409970e-02,  3.78166248e-02,
        2.18311603e-02,  2.46434863e-02,  1.99653827e-02,  7.25746555e-02,
        3.38329637e-02,  3.76473298e-02,  1.63707957e-02,  7.04121484e-02,
        5.17126645e-02,  4.34573512e-02,  1.26412086e-01,  1.22952582e-01,
        1.07813801e-01, -3.26936034e-02, -7.76638226e-03, -1.17656328e-02,
       -4.08904324e-02, -2.56507107e-02, -2.39613904e-02,  2.46844048e-02,
        1.68687030e-02,  1.52802122e-02,  7.94199784e-03,  1.61145777e-02,
        9.00758796e-03,  3.01320552e-02,  2.54384647e-02,  2.82163753e-02,
        2.33872985e-02,  1.75885483e-02,  2.23759764e-02,  1.27679768e-02,
        3.45863051e-03,  2.97708251e-02,  3.26762993e-02,  2.10215468e-02,
        1.32155096e-02,  3.46439566e-02,  3.13902196e-02,  3.47047880e-02,
        2.95252655e-02,  3.50612998e-02,  1.95421214e-02,  1.86166714e-02,
        2.68267983e-02,  1.65614324e-02,  6.17686822e-03,  3.49475184e-02,
        3.47975922e-02,  2.65972132e-02,  1.52528537e-02,  4.08581347e-02,
        2.25285256e-02,  1.99081244e-02,  2.27379811e-02,  1.64896927e-02,
        9.50226024e-03,  8.34616852e-03,  1.36173255e-02,  1.56933632e-02,
        6.34501836e-03,  2.65218668e-02,  1.30720985e-02,  1.04999761e-02,
        1.56177918e-02,  2.30574475e-02,  9.89468943e-03,  5.84261961e-02,
        5.48980022e-02,  6.37915554e-02,  4.50220375e-02,  5.68302547e-02,
        5.23648393e-02,  5.46285399e-02,  5.25916308e-02,  6.30759353e-02,
        4.51412251e-02,  4.44125310e-02,  3.87358973e-02,  1.08810475e-02,
        1.69899801e-02,  1.40844957e-02,  6.19917347e-02,  1.80343455e-02,
        2.47896589e-02,  2.64026131e-02,  5.44610058e-02,  4.86883141e-02,
        5.77515354e-02,  9.83294146e-02,  1.00478550e-01,  9.73949700e-02,
       -4.74285887e-04,  1.91968567e-02,  1.79880759e-02, -4.29285462e-03,
        8.74056684e-03, -3.02999143e-03,  5.44603114e-03,  5.23093070e-03,
       -1.03236605e-02, -8.63472034e-03, -6.70643162e-03, -6.45796444e-03,
        1.49095447e-02,  2.02221893e-02,  1.78939312e-02,  1.00958599e-02,
        1.24148885e-02,  1.14346430e-02,  8.11235460e-03,  5.12209234e-03,
        1.69883494e-02,  1.85120339e-02,  1.32635268e-02,  6.78944223e-03,
        1.76715975e-02,  1.11198195e-02,  2.29643234e-02,  1.09373046e-02,
        1.00605493e-02,  9.01699572e-03,  5.96782238e-03,  1.07318887e-02,
        1.16437194e-02,  5.11397562e-03,  2.25737744e-02,  1.21407259e-02,
        7.00745627e-03,  1.03995964e-02,  2.57909373e-02,  9.08628291e-03,
        1.91355790e-02,  1.56554076e-02,  1.64007147e-02,  8.85136549e-03,
        7.25655252e-03,  9.48421087e-03,  1.06871515e-02,  6.00869595e-03,
        2.34497254e-02,  1.99207218e-02,  7.88183944e-03,  8.65311866e-03,
        2.55411942e-02,  8.55068354e-03,  7.56319660e-02,  5.78389717e-02,
        7.12018558e-02,  3.99627795e-02,  1.69623157e-02,  7.56319660e-02,
        3.77371945e-02,  5.70424081e-02,  1.12741798e-01,  2.13390956e-02,
       -1.53170753e-03, -6.92449868e-03, -9.01010586e-03,  7.26882375e-02,
        6.83316534e-02,  7.32336162e-02,  6.03806112e-02,  3.72266967e-02,
        7.26882375e-02,  3.59538579e-02,  6.15630234e-02,  1.13058179e-01,
       -1.79280776e-03, -1.99858622e-02,  3.35170108e-02,  2.92893611e-02,
        5.42404967e-02,  4.85011987e-02,  5.34745222e-02,  4.17463803e-02,
        1.84608791e-02,  5.42404967e-02,  2.53529324e-02,  5.05524477e-02,
        9.86538144e-02,  1.01567689e-02,  1.55345830e-02, -1.36302757e-02,
       -1.22369383e-02,  4.33874136e-02,  4.04266044e-02,  4.43109647e-02,
        3.67972274e-02,  2.50023454e-02,  4.33874136e-02,  1.55732021e-02,
        4.44153395e-02,  1.04803902e-01,  2.39861932e-03, -4.22452876e-03,
        1.31697153e-02,  1.03005187e-02, -1.06316733e-03, -2.58390097e-03,
        1.74596494e-03, -2.50832990e-03,  6.79723848e-04,  1.02872419e-02,
        9.37446223e-03]), array([ 0.00291933, -0.00040996, -0.00061918,  0.01302701, -0.01549564,
       -0.03625672,  0.014951  , -0.02047441, -0.04168533,  0.01139827,
       -0.00811537, -0.01496041, -0.008131  , -0.00933761, -0.00155519,
       -0.01015345,  0.03423395,  0.00706556, -0.00778785,  0.01821637,
       -0.02363522, -0.04724464, -0.07363204, -0.06013174, -0.04423426,
        0.07272807, -0.0374846 ,  0.01949354,  0.00264438,  0.07241733,
       -0.03242921,  0.01638536, -0.00381527,  0.09873206, -0.03370262,
        0.02849707, -0.02501303, -0.00640025,  0.00179739,  0.01527537,
        0.00355106,  0.01963985,  0.01723384, -0.00646468, -0.01436973,
       -0.01784209, -0.00623067, -0.01393737, -0.01735837,  0.00143851,
        0.01510183,  0.01278841,  0.00610283,  0.02395604,  0.0215438 ,
       -0.03790206,  0.0091031 , -0.00562701, -0.00929687, -0.00545637,
       -0.01257956, -0.01573776, -0.05643839, -0.02235136, -0.05142181,
        0.05851684, -0.0555849 ,  0.05269878, -0.04989176,  0.09979963,
       -0.10230426,  0.09813592, -0.09127605,  0.11506283, -0.11081079,
        0.10656592, -0.10213461, -0.06005674, -0.01404443,  0.04363029,
        0.00157487,  0.00017822, -0.00027033,  0.03785083,  0.03855418,
        0.03578828,  0.03778964,  0.03593545,  0.03526253,  0.0438609 ,
        0.03351846,  0.03319808, -0.02344702, -0.02928344, -0.03417723,
        0.03873432,  0.04868949,  0.05173062,  0.03038747,  0.03651255,
        0.02328912,  0.03021506, -0.07273118, -0.06647773, -0.04504061,
        0.06100377,  0.0030475 ,  0.03367947,  0.01741887,  0.06257734,
        0.01131162,  0.03950149,  0.03012826,  0.08075463,  0.02882531,
        0.05458933,  0.05025141,  0.00728467, -0.00274688, -0.00298742,
       -0.01090888,  0.0036053 ,  0.00769391, -0.00241171, -0.00235055,
       -0.02129919, -0.0023353 , -0.00656208, -0.02333615, -0.00718228,
        0.01579833,  0.00245408, -0.01234347, -0.01085255,  0.00453157,
       -0.01973978,  0.00850369,  0.01314357, -0.0055346 , -0.00137328,
       -0.01163499, -0.02208478, -0.05386174, -0.05029498, -0.05534895,
        0.08751858, -0.05338325,  0.02250796,  0.00814345,  0.0720177 ,
       -0.04119872,  0.03333717, -0.00863439,  0.10371845, -0.06379128,
        0.03151397,  0.00126875,  0.00542528,  0.01269929, -0.04466605,
        0.00511021,  0.00045675, -0.00325659,  0.03449747,  0.04598946,
        0.03574483,  0.03320234,  0.04214408,  0.03248646,  0.03336616,
        0.04251561,  0.03897903, -0.03351306, -0.03978681, -0.03322386,
        0.03766207,  0.03448428,  0.03709212,  0.03351083,  0.02876882,
        0.036504  ,  0.02677969, -0.07134776, -0.07024615, -0.07289999,
        0.07103075, -0.01174137,  0.03030364,  0.02025689,  0.0590555 ,
       -0.00217881,  0.03316826,  0.03980733,  0.09473579, -0.01018165,
        0.03444726,  0.04112285, -0.0187975 ,  0.00576595, -0.02083083,
       -0.00798941,  0.00423429,  0.00249839,  0.0068267 , -0.00665378,
       -0.00798941,  0.02752617,  0.00034422, -0.12027721,  0.11157848,
       -0.08191796,  0.06171225, -0.0653684 , -0.00798941,  0.00423429,
        0.00249839,  0.0068267 , -0.00665378, -0.00798941,  0.02752617,
        0.00034422, -0.12027721,  0.11157848, -0.08191796,  0.06171225,
       -0.0653684 ,  0.03763566,  0.04598487,  0.0456179 ,  0.0390476 ,
        0.01457652,  0.03763566,  0.05061267,  0.04056507, -0.06124114,
        0.05131859, -0.05806171,  0.00257297,  0.01040669, -0.01859179,
       -0.00657954, -0.00976332,  0.00235708, -0.02794813, -0.01859179,
        0.01216482, -0.01137376, -0.15546485,  0.1230452 , -0.10488442,
        0.06265665, -0.05028192,  0.03926468,  0.04713197,  0.04311187,
        0.0442677 ,  0.02266136,  0.03926468,  0.03619954,  0.03737565,
       -0.10417287,  0.07269413, -0.06153368, -0.00997952,  0.02310785,
        0.02379272,  0.01044341,  0.0044134 ,  0.00880236, -0.02696933,
       -0.05368188,  0.01806783, -0.00239213, -0.01744842, -0.00030116,
       -0.0396291 , -0.07854715,  0.00971599,  0.00132559, -0.00126283,
        0.01685573,  0.03437199,  0.02047623, -0.00735395,  0.03316386,
        0.03068217,  0.03120382, -0.05521418, -0.0610035 , -0.04242887,
        0.02952544,  0.03119986,  0.03564778,  0.0674685 ,  0.08205669,
        0.13046424, -0.07857226, -0.07947643, -0.08031066, -0.0726069 ,
       -0.13745839, -0.12582459,  0.02925816,  0.03142754,  0.05219224,
        0.04052326,  0.02659526,  0.03000855,  0.0172355 ,  0.00932781,
        0.03261521,  0.05687803,  0.02787699,  0.01458934,  0.03400478,
        0.04233332, -0.0169063 ,  0.04606461,  0.04895837,  0.03067638,
        0.02965477,  0.03239152,  0.02467285,  0.00773159,  0.01074452,
        0.05617671,  0.03410397,  0.01831767,  0.0184522 ,  0.03330419,
       -0.03602964,  0.0270888 ,  0.03776084,  0.02381413,  0.0198551 ,
        0.0264416 ,  0.01826823,  0.00113857, -0.02007012,  0.03271351,
        0.02297515,  0.0132865 , -0.01150841,  0.02357244,  0.03758033,
        0.03511716,  0.03742751,  0.03467357,  0.03968671,  0.03412036,
        0.04234373,  0.03743161,  0.0361703 ,  0.02832027,  0.03374975,
        0.03164876,  0.01277188,  0.01203654,  0.01157671,  0.04361318,
        0.04876474,  0.05172007,  0.03038787,  0.04167891,  0.02606453,
        0.03485054, -0.03121616, -0.03225109, -0.01017079,  0.05587943,
        0.06041129,  0.08325068,  0.06468468,  0.07384579,  0.09624359,
       -0.0244273 , -0.01614381, -0.00982433, -0.00469525, -0.00419252,
       -0.00229126,  0.03409475,  0.0324932 ,  0.04863091,  0.04156801,
        0.02695049,  0.03635742,  0.02184559,  0.00562301,  0.03606226,
        0.05687332,  0.03306492,  0.02254761,  0.04752736,  0.05290634,
        0.01499181,  0.04096753,  0.05771356,  0.03002187,  0.02636445,
        0.03798495,  0.02314735,  0.01008216,  0.0406816 ,  0.05627105,
        0.03767358,  0.02149894,  0.05500423,  0.03337347, -0.00186688,
        0.03130569,  0.03690916,  0.02398319,  0.01970733,  0.02816863,
        0.03015549,  0.01014519,  0.026128  ,  0.03059146,  0.0235756 ,
        0.02977592,  0.03687996,  0.02382827,  0.01382396,  0.02557114,
        0.00757306, -0.00694917, -0.01704405, -0.02922172,  0.0028281 ,
        0.01031739, -0.01025418, -0.01357443, -0.03962146, -0.03572225,
       -0.00209356,  0.00878545, -0.00125602,  0.01862325,  0.01243933,
        0.01409432, -0.00291375,  0.03283532,  0.04115394,  0.03548512,
       -0.06133647, -0.05877604, -0.05514961,  0.0255041 ,  0.05724175,
        0.04138359,  0.06846584,  0.0929458 ,  0.09552249, -0.06186934,
       -0.05669465, -0.08653126, -0.08475992, -0.08100351, -0.07319922,
        0.00622455,  0.02795887,  0.03201109,  0.02345377,  0.02706863,
        0.0207791 ,  0.01191554,  0.00328943,  0.00994519,  0.03531142,
        0.02723028,  0.00809496,  0.01151663,  0.02479869, -0.02340264,
        0.02123025,  0.02542095,  0.02604945,  0.01600699,  0.02584909,
        0.02582867,  0.0066395 , -0.00195475,  0.03166716,  0.0181924 ,
        0.02103553,  0.01039969,  0.02559765, -0.01714549,  0.02020592,
        0.03307504,  0.02281131,  0.01694428,  0.01824067,  0.01418409,
        0.00167699, -0.00954041,  0.0425736 ,  0.01735688,  0.00874991,
       -0.00505172,  0.02111746,  0.02474074, -0.00810222,  0.00130224,
       -0.01054474,  0.009399  ,  0.02474074,  0.03218848,  0.01949993,
       -0.06370347,  0.02650124,  0.10390215, -0.07552072, -0.06152407,
        0.0466817 ,  0.04458919,  0.04524264,  0.04023354,  0.02837427,
        0.0466817 ,  0.05737331,  0.03393161, -0.01442017,  0.01606304,
        0.05026575, -0.04040896, -0.03320676,  0.01905243, -0.02255622,
       -0.01319091, -0.02438411,  0.01780585,  0.01905243,  0.01442828,
        0.01473098, -0.06333455,  0.01263662,  0.100223  , -0.06200386,
       -0.05021308,  0.04521623,  0.04625694,  0.04753495,  0.04396423,
        0.02597528,  0.04521623,  0.03762823,  0.04137609, -0.03078644,
        0.00475768,  0.05371225, -0.01045249, -0.00705195, -0.01077215,
       -0.00340392,  0.03936027, -0.00901688, -0.01239869, -0.0136579 ,
       -0.01242801]), array([-4.02418402e-03, -1.89914514e-04, -2.22233469e-03, -1.94168317e-03,
        1.70799298e-03,  8.88292177e-02, -3.16101581e-03,  5.78249391e-03,
        8.34790609e-02, -6.04411321e-03, -2.24346030e-04,  4.65833588e-02,
        1.13020188e-03,  1.04873208e-02, -6.35383793e-02,  2.41513595e-02,
        1.80776562e-02,  1.25467211e-02,  8.89635306e-02, -6.15921299e-03,
        1.36421304e-02,  6.43907421e-02, -6.00973200e-02, -5.79088195e-02,
       -2.28462520e-02,  3.47976041e-02, -4.83650417e-02,  3.29887385e-02,
       -1.63063857e-02,  2.82410683e-02, -4.43321861e-02,  1.15413472e-02,
        1.16773474e-02,  1.81568960e-02, -3.12157650e-02,  6.42906492e-03,
        2.94182299e-02, -1.29185429e-02, -3.95960065e-02,  1.19999420e-02,
       -2.63339687e-02, -3.42791408e-03, -5.09522930e-02,  9.66439338e-03,
        9.60437994e-03,  1.59290662e-02,  9.54694541e-03,  9.24788347e-03,
        1.56657564e-02, -2.30038838e-02, -6.97890473e-04, -4.68664044e-02,
       -2.91636373e-02, -6.55874023e-03, -5.48095449e-02,  1.11512571e-01,
       -6.34124577e-02,  1.66378488e-02,  4.21395172e-02,  9.16061505e-03,
        8.25094541e-03,  1.44998970e-02,  1.29748147e-01,  1.78152097e-02,
       -6.60789921e-02, -5.55662955e-02,  4.87618930e-02, -4.24082256e-02,
        3.65487070e-02, -9.53454503e-02,  9.07885562e-02, -7.96963102e-02,
        6.64317572e-02, -5.39201292e-02,  5.28497049e-02, -5.19456108e-02,
        5.11463720e-02,  6.09583013e-02,  1.17280060e-01,  3.07116088e-02,
       -2.33397364e-03,  4.27137464e-03,  2.93986155e-03, -9.89525157e-03,
       -4.74090282e-02,  3.28315846e-02, -8.22279969e-03, -4.21543245e-02,
        3.61577657e-02, -3.42826584e-03, -2.82881049e-02,  2.85688387e-02,
        1.87612690e-02,  4.87054310e-02, -2.61589397e-02, -2.31380696e-03,
        1.58552025e-02, -1.66687995e-02,  3.55041978e-02, -3.98928189e-03,
       -2.18758192e-02,  3.77927467e-02, -9.89492292e-02, -9.86789754e-02,
       -5.61926350e-02,  4.06876875e-02, -3.25402972e-02,  1.04548738e-02,
        1.62055064e-02,  3.93232299e-02, -4.07999040e-02, -1.94329928e-02,
        8.49440771e-03,  1.58158477e-02, -3.51985776e-02, -2.05599061e-02,
        2.82331905e-03, -3.71195502e-02, -2.23574751e-02,  3.60878239e-03,
        1.13030494e-02, -7.04620709e-03, -1.13538607e-02,  3.64745949e-03,
        9.13832440e-02,  5.88642040e-02,  2.14336711e-03,  8.62132780e-02,
        6.23879031e-02,  9.85587287e-03,  6.99484359e-02,  2.52064186e-02,
        7.34157452e-03, -5.20384016e-02, -3.43616945e-02,  6.65393444e-02,
        2.35649644e-02,  9.37322429e-02,  7.27142311e-02, -2.74242320e-03,
        7.59659150e-02,  6.25189549e-02, -5.10455730e-02, -7.39382561e-02,
       -5.18385891e-02,  4.30720432e-02, -5.62989732e-02,  3.55270858e-02,
        2.37992114e-03,  3.74412011e-03, -1.72820071e-02,  2.89650689e-02,
       -3.22632863e-02,  1.96682841e-02, -4.52967486e-02,  3.89600250e-02,
       -2.34207897e-02,  1.97059041e-02, -1.89538699e-02, -2.09945569e-02,
       -6.82375592e-03,  4.94179149e-03,  3.26456561e-03, -3.30947320e-02,
        5.48487389e-02, -3.36971813e-03, -3.18971426e-02,  5.25863238e-02,
        1.41680196e-04, -3.07599866e-02,  4.63214956e-02, -1.72320738e-02,
        2.90189353e-02, -4.23256937e-02,  1.62639267e-03,  1.77825087e-02,
       -2.06068199e-03,  5.01538177e-02,  1.34041320e-02, -2.67809769e-02,
        4.91856041e-02,  6.61499315e-03, -9.76423873e-02, -8.04957943e-02,
       -7.02121112e-02,  4.56610770e-02, -4.36588003e-02, -4.92953870e-03,
        1.59369923e-02,  1.54141150e-02, -1.74687018e-02,  1.27917667e-02,
        8.57234217e-03,  3.71380984e-02, -4.87175018e-02,  3.94137326e-03,
        7.81204579e-03, -6.35398803e-04,  1.02037855e-02, -1.88982427e-02,
        1.86698585e-02,  2.27207340e-02,  2.11936278e-02,  1.59354232e-02,
       -5.24063301e-03,  1.86698585e-02,  4.38952288e-02,  2.06242767e-02,
       -6.30470544e-02, -2.11585947e-02,  1.16675956e-02,  1.32965585e-02,
       -2.02676515e-02,  1.86698585e-02,  2.27207340e-02,  2.11936278e-02,
        1.59354232e-02, -5.24063301e-03,  1.86698585e-02,  4.38952288e-02,
        2.06242767e-02, -6.30470544e-02, -2.11585947e-02,  1.16675956e-02,
        1.32965585e-02, -2.02676515e-02, -4.90528415e-03, -1.63748604e-02,
       -1.73241891e-02, -9.39084201e-03,  6.91356916e-03, -4.90528415e-03,
        1.88403820e-02, -1.68871104e-02, -9.44858129e-02,  1.53768780e-02,
        4.23208324e-03,  2.38197644e-02, -5.75239526e-02,  6.55793075e-02,
        6.54900794e-02,  6.89690027e-02,  6.20157445e-02,  4.77514469e-02,
        6.55793075e-02,  8.47055128e-02,  6.18146270e-02, -2.14084561e-01,
       -1.78298030e-02,  1.69421604e-02, -1.95279399e-02,  1.69979523e-02,
        2.34102358e-02,  2.96291098e-02,  2.49898010e-02,  3.22117495e-02,
        1.80078217e-02,  2.34102358e-02,  3.45042787e-02,  1.86749449e-02,
       -1.23573766e-01,  2.56372238e-02, -5.64430649e-03,  1.25095469e-02,
       -3.49315087e-02, -3.56936922e-03, -1.97425515e-02,  6.17952333e-02,
       -1.21497030e-03,  1.18294294e-02,  9.40147043e-02, -2.15438407e-03,
       -1.20171279e-02,  7.58120017e-02, -1.08292876e-03,  2.62876558e-02,
        9.65512653e-02, -1.12374970e-03, -4.86953771e-03,  1.07152012e-02,
        1.30415453e-02,  1.78327648e-02,  3.13193416e-02,  9.94281531e-02,
       -6.72020016e-03, -3.94980401e-02,  3.12784486e-02, -7.15839647e-02,
       -8.18705751e-02, -2.78895892e-02, -3.23117386e-02, -4.02752367e-02,
       -4.08380073e-03, -1.02508123e-02, -4.01915124e-02, -3.85383288e-02,
        2.75448761e-02,  3.05974853e-02,  1.01010535e-01,  1.05084062e-01,
        7.74377501e-02,  8.11853730e-02,  1.52484183e-02,  2.52183564e-02,
        7.41381385e-04,  1.12518535e-03,  5.71809554e-03,  1.14181204e-02,
        8.10487177e-03,  3.12578139e-03,  1.95994230e-02,  9.70957619e-04,
        7.86083910e-03,  6.44489800e-03,  1.82495159e-02,  4.58321046e-03,
        5.82678964e-02, -3.82203484e-03, -3.41008924e-02, -1.89850433e-02,
        2.03534049e-03,  3.91987411e-03, -4.86803361e-04, -9.83797537e-04,
        4.26885218e-02, -3.84325212e-02,  2.98916444e-03, -7.07576472e-04,
        3.29997050e-02, -1.31157962e-02,  9.69350453e-02,  5.42789767e-02,
        2.88990304e-02,  2.11937356e-02,  2.41293667e-02,  3.48338120e-02,
        2.65981754e-02,  1.55528025e-02,  9.49999683e-02,  2.61040560e-02,
        2.86228674e-02,  2.35179306e-02,  9.76172672e-02,  2.33138771e-02,
       -7.73529609e-03, -3.76808969e-02,  3.75273144e-02, -1.13553665e-02,
       -5.52614966e-02,  2.79108740e-02, -1.30296735e-02, -5.03616033e-02,
        3.09290716e-02, -1.18274510e-02, -4.55313307e-02,  2.52569692e-02,
        3.29593468e-03, -6.50184903e-03,  1.95501860e-02, -1.63898709e-03,
        1.58844290e-02, -1.66641688e-02,  3.54969507e-02, -9.16252861e-03,
       -2.81755290e-02,  3.47485989e-02, -7.36744604e-02, -9.63553843e-02,
       -2.64036816e-02, -2.38993749e-03, -2.17080885e-02, -3.65678484e-02,
        2.84621621e-02,  3.17384346e-02,  5.29095181e-03, -2.77002251e-02,
       -1.67181965e-02, -3.17534861e-02, -1.30381624e-02, -1.74230778e-02,
       -6.49393673e-03,  1.84124222e-02,  2.19107485e-02, -1.81433983e-04,
        2.16689857e-03,  6.58244866e-03,  1.48345693e-02,  1.12501678e-02,
        2.16737661e-03,  2.22731253e-02,  8.13405748e-04,  1.05307704e-02,
        1.14702239e-02,  1.77258807e-02,  8.67606063e-03,  2.59936417e-02,
       -6.42016298e-03, -4.39943431e-02, -1.73738471e-02,  4.27515486e-03,
        6.46373133e-03,  6.13166360e-04,  2.17069913e-03,  3.02025766e-04,
       -4.02906813e-02,  6.23394909e-03,  8.12923125e-04, -1.91421848e-02,
       -8.48592544e-03,  6.73181513e-02,  5.12396516e-02,  2.60356364e-02,
        2.08773188e-02,  2.28942676e-02,  3.29463903e-02,  3.25335516e-02,
        1.20123100e-02,  6.77399827e-02,  2.35178640e-02,  2.74647682e-02,
        3.22431639e-02,  4.78795865e-02,  2.34564846e-02, -9.13421968e-03,
        7.70876851e-02,  3.48120252e-02,  7.21952296e-03,  9.67511829e-02,
        6.07662314e-02, -5.45776102e-03,  8.09643355e-02,  4.70363870e-02,
        1.58856321e-02,  9.05729299e-02,  6.36490332e-02, -1.97144414e-04,
        1.77498989e-02,  9.29903351e-03,  4.04032191e-02,  1.72663896e-02,
        9.35424870e-02,  7.22609183e-02, -3.30170537e-02,  6.91626200e-02,
       -5.13630440e-04, -9.01790399e-02, -4.78147747e-02, -6.36256766e-02,
       -2.46724114e-02, -3.42255374e-02, -5.99227379e-02, -2.04373637e-02,
       -2.80571332e-02, -4.30234367e-02,  5.52703941e-02,  5.48701695e-02,
        6.37588779e-02,  7.45929984e-02,  9.53101639e-02,  9.78880521e-02,
        2.00112482e-02, -4.68437061e-03, -1.37593717e-02,  3.96952724e-03,
        1.08129210e-02,  1.12326182e-02,  7.68406779e-03,  4.30756888e-03,
        1.81578920e-02, -9.44029603e-03,  1.20790456e-02,  6.19235725e-03,
        1.70944456e-02,  6.34761345e-03,  8.75910412e-02,  4.74132123e-02,
        3.10742578e-02,  2.95770843e-02,  1.97536917e-02,  3.35884121e-02,
        3.36637690e-02,  1.34384180e-02,  8.98053665e-02,  3.80273342e-02,
        2.27953213e-02,  2.94817349e-02,  9.83113175e-02,  2.97460150e-02,
        6.68067607e-02,  2.51379792e-02, -7.54554502e-04,  5.97831274e-03,
        9.18968544e-03,  1.43345853e-02,  1.38044746e-02,  1.32988182e-02,
        7.19834412e-02,  2.17166091e-03,  1.06130604e-02,  1.35816621e-02,
        7.15422660e-02,  7.42554978e-03,  1.70114137e-02,  2.19143055e-02,
        2.37810285e-02,  1.88464664e-02,  3.19076131e-03,  1.70114137e-02,
        3.71586100e-02,  1.52622679e-02, -5.00517691e-02, -2.82036285e-02,
       -3.45055569e-02,  3.63369583e-02,  3.87992065e-02, -7.70282379e-03,
       -2.79978382e-02, -1.70985200e-02, -3.39323859e-02,  1.03217438e-03,
       -7.70282379e-03,  1.31230651e-02, -2.45060655e-03, -6.14726314e-02,
        1.62377007e-02,  4.46253066e-02, -1.04072130e-01, -9.36136112e-02,
        5.39848191e-02,  6.01956238e-02,  6.00940031e-02,  5.77442506e-02,
        2.20950752e-02,  5.39848191e-02,  6.95998066e-02,  4.35887105e-02,
       -4.95465210e-02, -3.67051092e-02, -4.38275137e-02,  5.65470860e-02,
        5.31764902e-02,  3.50967152e-02,  2.00766172e-02,  3.22636486e-02,
        5.87105315e-03,  2.09148569e-02,  3.50967152e-02,  3.68165175e-02,
        4.16907537e-02, -4.99749964e-02,  1.12948494e-02,  4.17961089e-02,
       -1.13441323e-01, -1.05375865e-01,  6.42397115e-03,  8.17367854e-03,
       -3.33208491e-02,  1.96005441e-02,  4.64929851e-02,  2.80299133e-03,
        3.66466234e-02]), array([ 2.56458641e-03,  1.79730039e-03,  7.70747326e-04,  9.20670647e-02,
        2.00593781e-02, -6.92579548e-02,  8.84647346e-02,  1.91386078e-02,
       -6.61697219e-02,  9.64826637e-02,  1.35997288e-02, -2.03288465e-02,
       -4.52578772e-02, -1.48491205e-02,  5.94395692e-02,  3.69411872e-02,
        9.90644941e-02,  1.30315314e-02, -4.79994325e-02,  7.53841083e-02,
        1.36013467e-02, -5.32504297e-02, -3.62122329e-02,  8.52709719e-05,
       -4.45489850e-02,  8.41713685e-03, -3.06520414e-02, -1.17483500e-02,
        3.19005961e-02,  1.50456283e-02, -2.09372803e-02, -5.80602003e-03,
        3.67891798e-02,  4.61695163e-02, -4.45607433e-02,  1.09525707e-02,
        1.17905355e-02, -9.77880362e-02,  1.45125647e-02, -1.33983548e-02,
        1.86111342e-03,  3.44954959e-02,  8.98880610e-02,  9.50028522e-03,
        1.57415579e-02,  1.46768095e-02,  9.28063092e-03,  1.55526654e-02,
        1.43988780e-02,  5.32452485e-03,  3.74829858e-02,  9.20984485e-02,
       -1.54434309e-03,  2.87583817e-02,  8.58630588e-02, -7.23790819e-02,
        6.23400179e-03,  5.06286381e-04, -1.85716344e-02,  8.75780015e-03,
        1.47084482e-02,  1.31273260e-02,  3.27741656e-02,  5.08214313e-02,
        1.87674341e-01, -7.75541995e-02,  7.20394815e-02, -6.68572821e-02,
        6.20647548e-02, -6.22001996e-02,  6.86713932e-02, -7.16634150e-02,
        7.32774700e-02, -5.15389204e-02,  4.41279205e-02, -3.68582418e-02,
        2.96919222e-02, -1.34940141e-01, -2.02545640e-01,  8.82262838e-02,
        7.90958361e-03, -9.33519265e-03, -3.90144741e-03,  4.54446672e-02,
        8.88283906e-03, -4.98605022e-02,  4.53694767e-02,  8.75142663e-03,
       -5.15483340e-02,  6.02099008e-02,  1.73598234e-02, -2.56323630e-02,
       -1.26511553e-02, -9.74266070e-04,  5.78256067e-02,  2.91669210e-03,
        5.23294056e-02,  2.20681643e-02, -2.23925280e-02,  4.38270631e-02,
        6.73450272e-03, -4.68205476e-02, -5.85989052e-02, -4.75082364e-02,
       -8.92053504e-02,  1.23221762e-02, -3.20253854e-02, -2.56612727e-02,
       -1.40666848e-02,  9.93612269e-03, -2.29429656e-02, -2.55826052e-02,
       -2.08424108e-03,  5.01308438e-02, -2.91208102e-02,  3.68580320e-04,
       -2.57177120e-03, -2.88449055e-02,  5.93992225e-02, -2.89819928e-02,
       -3.23075312e-02,  1.17352216e-02,  4.86893771e-03,  3.32168038e-02,
       -5.52767235e-02, -4.00202708e-02,  3.10144188e-02, -4.48716811e-02,
       -4.09632042e-02,  6.53155025e-03, -5.81612245e-02, -1.26690994e-02,
       -4.37829052e-02,  3.73348847e-02,  1.94896174e-02, -1.61434932e-03,
        4.19119268e-02, -3.84201002e-02, -2.65990467e-02,  2.68256490e-02,
       -2.82679001e-02, -3.86789503e-02, -9.59019218e-02,  5.54778780e-03,
       -2.47951610e-02,  3.66061343e-03, -1.68298578e-02,  1.36153039e-02,
       -1.56210837e-02,  7.65684576e-03, -3.34311189e-02,  9.64388604e-03,
        9.16778834e-03,  6.17778239e-02, -5.37712431e-02,  4.22769078e-02,
       -2.18053457e-02, -3.81043017e-02,  3.58590518e-02, -8.62361126e-02,
        4.22479574e-03, -1.23063180e-04,  3.59065551e-03,  5.63279512e-03,
       -6.55411923e-02,  1.23138766e-02,  7.52160092e-03, -5.90217961e-02,
        9.90715875e-03,  4.20016368e-03, -6.33545909e-02,  2.45381868e-02,
       -5.04482915e-03,  5.49270107e-02, -1.32613110e-02, -2.53722460e-02,
        1.24851345e-02, -3.52611497e-02,  1.85408494e-02,  1.31026477e-02,
       -5.05282810e-02,  8.17843001e-03, -4.97126675e-02, -5.80428088e-02,
       -4.40478167e-02,  1.56870074e-02, -1.87471178e-02,  6.39248775e-03,
       -9.08735413e-03,  1.89088413e-02, -4.09407926e-02, -8.66650272e-03,
       -2.34854358e-02,  6.70499054e-02, -3.03599134e-02,  2.88970453e-02,
        1.44056181e-02, -2.25094778e-02, -3.12285403e-02,  3.33532115e-03,
        4.75154521e-02,  7.83815064e-02,  7.16613925e-02,  5.51491808e-02,
       -8.69580248e-03,  4.75154521e-02,  6.89125419e-02,  5.80650044e-02,
       -2.14524639e-03, -7.25618910e-02,  4.50766727e-02, -1.70788183e-02,
        3.75800502e-02,  4.75154521e-02,  7.83815064e-02,  7.16613925e-02,
        5.51491808e-02, -8.69580248e-03,  4.75154521e-02,  6.89125419e-02,
        5.80650044e-02, -2.14524639e-03, -7.25618910e-02,  4.50766727e-02,
       -1.70788183e-02,  3.75800502e-02,  7.88521708e-03,  1.85743724e-02,
        1.75291940e-02,  1.40044772e-02, -4.98254694e-03,  7.88521708e-03,
        2.28754510e-02,  1.25860023e-02, -4.59548099e-02, -2.26364834e-02,
        1.84683118e-02,  2.70927462e-02, -1.86149571e-02,  1.93938705e-03,
       -7.42596163e-03, -4.03636428e-03, -1.59182367e-02,  1.30912743e-02,
        1.93938705e-03,  4.74850209e-03,  1.31942595e-03, -3.37418372e-02,
       -6.60529104e-02,  4.00006208e-02, -9.61504798e-04,  7.31227552e-03,
       -3.10120404e-02, -5.02263854e-02, -4.33291429e-02, -4.86700939e-02,
       -9.38053013e-03, -3.10120404e-02, -1.81603790e-02, -3.30221455e-02,
       -7.05275913e-02, -1.97465836e-02,  2.10848916e-03,  5.11120540e-02,
       -4.06216322e-02,  6.63018677e-02,  2.13595511e-02, -5.82021548e-02,
        1.01595654e-01,  1.78176454e-02, -7.06636625e-02,  7.64943828e-02,
        1.74469670e-02, -7.19637322e-02,  1.08627967e-01,  1.86002298e-02,
       -6.15261843e-02,  3.01583018e-02,  1.67678245e-02, -5.16391857e-03,
        2.07309311e-02,  9.89035536e-02,  3.18883703e-02, -5.56980398e-02,
        3.34976985e-02,  1.50516415e-02, -4.25935036e-02, -7.87363028e-03,
       -1.84157707e-02, -5.76715818e-02, -3.57744219e-02, -1.36815686e-03,
       -2.48301544e-02, -3.76301596e-02, -7.28177820e-03, -1.64811975e-02,
        1.00603157e-01,  1.12166691e-01,  6.05467435e-02,  6.95422269e-02,
        5.63994318e-02,  6.78209457e-02,  1.20933552e-01,  3.73314270e-02,
        9.98341719e-03,  3.89639199e-02,  3.81911917e-02,  4.13559475e-02,
        2.19310872e-02,  1.95399548e-02,  1.07550703e-01,  2.01936554e-02,
        3.93728459e-02,  2.11293855e-02,  1.00615483e-01,  4.67619206e-02,
        2.01621229e-02,  3.76379335e-02, -2.38771152e-03,  1.10419261e-02,
        2.24361482e-02,  2.20299553e-02,  1.68949986e-02,  1.38820775e-02,
        3.48062393e-02,  8.79873332e-04,  2.48561567e-02,  1.61655595e-02,
        3.13963339e-02,  1.59043436e-02, -4.81077478e-02, -3.81274692e-02,
       -3.48897089e-02, -4.20747289e-03, -2.17485740e-03, -8.04421709e-03,
       -1.01853244e-02, -8.85046332e-03, -5.07467843e-02, -2.37695571e-02,
       -3.84990492e-03, -9.87712414e-03, -5.61833756e-02, -4.10181937e-03,
        4.50692108e-02,  1.22465828e-02, -4.66072068e-02,  4.15875976e-02,
        4.59509949e-03, -5.31067040e-02,  4.42239989e-02,  9.89385609e-03,
       -5.04761649e-02,  4.88039243e-02, -5.00518677e-03, -5.67314932e-02,
        1.88116258e-02, -3.51728328e-03, -1.90541586e-02,  7.14721415e-03,
        5.23729206e-02,  2.20405394e-02, -2.23820957e-02,  4.61883813e-02,
        1.27484430e-02, -3.69574251e-02, -1.30829044e-02, -2.54897456e-02,
       -8.03086428e-02, -5.81409343e-02, -2.83177387e-02,  5.19155112e-03,
        9.71147463e-03,  6.91778040e-03,  4.15163690e-02,  3.57846748e-03,
        1.78508612e-02, -3.00455254e-02, -2.06278100e-02, -5.14217409e-02,
       -3.48776726e-02,  9.29007242e-02,  2.81988762e-02,  9.05220827e-03,
        3.84680846e-02,  3.54224959e-02,  4.57835092e-02,  2.16332272e-02,
        5.54974111e-03,  5.95870393e-02,  2.40981927e-02,  4.26356144e-02,
        2.23309249e-02,  5.10839211e-02,  5.70566406e-02,  4.51084692e-02,
        2.73726481e-02, -5.92236185e-03,  1.03145171e-02,  1.68206514e-02,
        1.99432132e-02,  8.32181119e-03, -9.59766254e-04,  3.54445116e-02,
        5.43504112e-04,  2.22095755e-02,  7.14582143e-03,  2.31816448e-02,
        1.50411258e-02, -4.68052483e-02, -4.05725739e-02, -2.96053916e-02,
       -3.43598583e-03, -1.28719441e-03, -6.53772692e-03, -1.06113771e-02,
       -6.51570841e-03, -5.13352394e-02, -1.68009111e-02, -2.96199560e-03,
       -1.08104505e-02, -4.30429405e-02, -3.25201025e-03,  3.17059871e-02,
       -5.88296485e-02, -7.23974734e-03,  3.32588089e-02, -5.37259437e-02,
       -4.76436419e-02,  3.43100039e-02, -6.07178889e-02, -2.60349219e-02,
        3.48946229e-02, -3.17346344e-02, -5.48074658e-02,  5.66249638e-03,
       -1.23225389e-02,  1.08782349e-03, -1.71024941e-02,  3.16680450e-02,
       -4.04960077e-02, -2.86718020e-02,  2.11950363e-02, -6.02478518e-02,
        2.66908861e-02, -3.45843938e-02, -6.70778051e-02, -1.21543580e-02,
       -2.41091114e-02, -8.06263035e-02, -8.05955806e-03, -1.93174238e-02,
       -5.34354812e-02,  3.90566976e-02,  2.88028362e-02,  2.78943078e-02,
        8.76008575e-02,  9.33244745e-02, -3.02839025e-02, -2.34131101e-02,
        3.15714610e-02,  1.29354695e-02,  8.35787609e-03,  4.54288803e-03,
        1.28438424e-02,  1.13137658e-02,  8.05443269e-03,  7.11331598e-03,
        3.16074626e-02,  8.57291666e-03,  1.35035370e-02,  7.63841424e-03,
        3.15175205e-02,  7.18216852e-03, -2.02532659e-02, -2.06120968e-02,
       -3.71992059e-02, -1.31505490e-02, -1.19637638e-03, -6.73622281e-03,
       -1.38121818e-02, -5.39777244e-03, -2.70371719e-02, -3.87870033e-02,
       -2.35264970e-03, -1.20401444e-02, -4.29902043e-02, -1.07798727e-02,
       -4.15323752e-02,  1.96760617e-02,  1.98619761e-02,  1.49699410e-02,
        1.16993636e-02,  1.13040926e-02,  8.14222778e-03, -2.75355885e-03,
       -3.29179614e-02,  2.61926849e-02,  1.16259689e-02,  3.40088172e-03,
       -3.00969129e-02,  1.39389414e-02,  6.38881242e-02,  7.40747961e-02,
        7.79263624e-02,  5.97372706e-02,  2.06462662e-02,  6.38881242e-02,
        7.79962447e-02,  4.39596929e-02,  7.32881916e-03,  2.28143784e-02,
       -5.95417689e-02,  6.89613129e-02,  6.45792261e-02,  2.30991333e-02,
        1.24324320e-02,  2.26184876e-02,  8.53669119e-03,  9.29639129e-03,
        2.30991333e-02,  3.03114235e-02,  2.68419161e-02, -1.23970754e-02,
        1.03119948e-02,  4.87012909e-03, -5.09914782e-02, -4.68003810e-02,
       -2.32494146e-02,  4.38928618e-03, -2.15498533e-03,  1.39198575e-03,
       -1.23537099e-02, -2.32494146e-02, -1.08675081e-03, -2.56181262e-02,
       -4.95138726e-02, -3.02022955e-02, -8.46263587e-02,  5.62474985e-02,
        4.81071295e-02, -4.55709665e-02, -5.25435659e-02, -5.20930846e-02,
       -5.35051780e-02, -2.37278063e-02, -4.55709665e-02, -2.76826457e-02,
       -4.82196290e-02, -7.70406585e-02,  8.95690149e-03, -4.15091772e-04,
       -6.07759991e-02, -5.72375434e-02, -1.19130865e-02, -1.53929794e-02,
        1.07161885e-01, -1.94513715e-02, -1.75884295e-02, -2.39167116e-02,
       -6.42664659e-02]), array([ 2.57195144e-03, -1.26274016e-03, -8.71438644e-04,  4.87442566e-02,
       -9.58539414e-03, -2.51789864e-02,  4.82015258e-02, -1.08401146e-02,
       -2.79260536e-02,  4.85464568e-02, -5.49431060e-03, -3.23105044e-02,
       -1.40986204e-02,  4.88069694e-04, -5.81731644e-03,  1.64559495e-02,
        5.04917612e-02, -1.77188215e-03, -1.96325488e-02,  4.07770689e-02,
       -1.09803375e-02, -3.14927244e-02, -2.43244219e-02, -8.30383733e-03,
        1.37964902e-02,  4.57468612e-03, -1.09911115e-02, -4.56444642e-03,
        3.53728580e-02, -2.12983132e-02,  9.21072692e-03, -8.18300492e-03,
        7.24409356e-03, -2.25718196e-03,  2.54655528e-03,  6.26506025e-03,
        4.23768891e-03,  7.90300243e-02,  1.06213784e-01,  7.26311516e-02,
        1.19007162e-02, -7.14726517e-02, -9.17050462e-02,  6.23825042e-03,
        8.28834338e-03,  7.01991681e-03,  6.26387251e-03,  8.32444322e-03,
        7.15726298e-03,  1.37057702e-02, -6.73433654e-02, -8.97343236e-02,
        9.26735755e-03, -7.28270387e-02, -9.34670357e-02,  1.09288557e-02,
        2.51630444e-02, -3.54902485e-03, -1.24735332e-02,  6.06616451e-03,
        8.09866412e-03,  7.16556082e-03,  4.68583610e-02, -6.28426849e-02,
       -1.27200552e-01, -2.47484894e-02,  2.50705164e-02, -2.57423773e-02,
        2.67532146e-02, -4.46448391e-02,  4.46638390e-02, -4.19565362e-02,
        3.84154707e-02, -1.30720734e-02,  1.47264585e-02, -1.65957523e-02,
        1.86502270e-02,  4.46644017e-01,  6.08633503e-01,  2.28966777e-01,
        6.53743247e-03, -5.06752292e-03, -8.30368377e-04,  1.79492887e-02,
       -1.52977748e-02, -3.19844374e-03,  1.97314918e-02, -1.61013658e-02,
       -4.32175018e-03,  2.74768660e-02, -3.35498920e-03,  1.28534794e-03,
        7.52138290e-03,  1.56704870e-02,  3.19746271e-03,  2.19123856e-03,
        1.80390311e-02, -1.00990284e-02, -3.88091768e-03,  2.36846377e-02,
       -1.45629238e-02, -5.79271075e-03, -2.04814412e-02, -1.89675975e-02,
       -7.06380208e-03, -6.48107279e-03, -1.41548217e-02, -2.83644281e-02,
        1.18433496e-02, -2.05085941e-02, -2.31857932e-03, -1.68929399e-02,
       -4.70191845e-03, -9.32738451e-03, -4.69163863e-04, -4.13857720e-03,
        1.72936907e-02, -9.85033457e-03, -1.02136101e-02,  3.60375014e-02,
       -1.41268922e-02,  9.81063323e-03,  4.77995801e-03, -5.84039100e-03,
       -7.14832659e-02, -6.87116130e-03, -6.33075661e-03, -7.06216205e-02,
       -3.39232346e-03, -1.29088231e-02, -4.50197108e-02,  5.31712886e-04,
       -7.49923160e-03,  2.66219077e-02,  1.14798797e-02, -2.75199175e-02,
        6.38915636e-03, -5.44717008e-02, -6.40828798e-03, -5.68938464e-03,
       -6.85561724e-02,  3.28136912e-03,  5.77756237e-03,  3.68686364e-02,
       -1.38164098e-02, -1.68377500e-02, -1.26666377e-03, -7.94301379e-03,
        2.53045696e-02,  3.60475340e-02, -2.52474666e-02,  2.92757729e-02,
       -1.67177217e-02,  9.22603871e-03, -1.03690006e-02,  7.67027618e-03,
        3.45909139e-03,  5.85624708e-02, -5.45446766e-02, -5.62690995e-02,
        8.68334917e-03, -2.34902210e-03,  1.17772660e-03, -1.38543977e-02,
       -2.18233423e-02,  2.31482992e-03, -1.55290304e-02, -2.04291509e-02,
        9.39083012e-04, -8.59182569e-03, -1.58482718e-02,  7.37380861e-03,
        7.05166341e-03,  1.72417898e-02, -5.85985934e-03, -1.43362108e-02,
       -7.34127946e-03, -1.62088085e-02,  4.16081899e-03, -1.65881282e-02,
       -1.88655112e-02, -5.30815026e-04,  1.98808689e-03, -1.38295143e-03,
       -1.00764024e-02, -1.67695471e-02, -1.30930758e-02, -3.08599333e-02,
        5.00067709e-04,  3.16048143e-02, -3.51638100e-03,  1.42112042e-02,
        3.89079116e-02,  6.79437487e-03, -5.97445114e-03, -7.70286949e-03,
        2.00890044e-02,  3.16953306e-02, -2.18028783e-02, -7.14243480e-02,
        2.10411752e-02,  3.79460395e-02,  3.28022976e-02,  2.76684752e-02,
       -5.48749970e-03,  2.10411752e-02,  3.18244123e-02,  2.08479019e-02,
       -1.95049926e-03, -4.47612265e-02,  3.18187463e-02, -8.03096380e-03,
        8.85529569e-03,  2.10411752e-02,  3.79460395e-02,  3.28022976e-02,
        2.76684752e-02, -5.48749970e-03,  2.10411752e-02,  3.18244123e-02,
        2.08479019e-02, -1.95049926e-03, -4.47612265e-02,  3.18187463e-02,
       -8.03096380e-03,  8.85529569e-03,  2.74457377e-03,  5.28332414e-03,
        6.84043907e-03,  8.88095587e-04, -2.66032381e-03,  2.74457377e-03,
        5.05723299e-03,  7.07438271e-03, -7.21198262e-03, -2.65245753e-02,
        2.68660495e-02,  2.49373023e-02, -2.75163108e-02, -2.75891215e-02,
       -3.76899971e-02, -4.22247500e-02, -2.86235136e-02, -8.09544772e-03,
       -2.75891215e-02, -2.59066506e-02, -4.17182005e-02,  3.42700265e-02,
        2.19671769e-02, -3.49129753e-02,  4.55668022e-02, -3.05909540e-02,
       -1.64413412e-02, -1.74793164e-02, -1.63743101e-02, -1.43648046e-02,
       -1.25986549e-02, -1.64413412e-02, -1.16588606e-02, -1.47961354e-02,
       -1.29189588e-03,  3.02028587e-03, -1.31896260e-02,  1.24604910e-02,
        4.80969253e-03,  3.14205025e-02, -8.38032659e-03, -6.43330483e-03,
        5.52183269e-02, -9.35006008e-03, -3.17793792e-02,  3.93764265e-02,
       -4.30209301e-03, -9.48268528e-03,  6.01493185e-02, -1.19119550e-02,
       -5.08179263e-02,  1.25660264e-02, -8.65489497e-03, -1.24393322e-03,
        1.13114942e-02,  5.04486841e-02, -5.01733861e-03, -2.30404747e-02,
        8.65843496e-03,  9.74767983e-04,  6.59476398e-03, -2.21473477e-03,
       -7.27328680e-03, -4.75965392e-05,  1.66544756e-02, -7.52398637e-04,
        1.78167541e-02, -9.78722616e-03, -2.86336759e-02,  5.81881782e-03,
        1.22311367e-02,  1.55818203e-02, -2.17665836e-03, -4.46199500e-03,
       -6.88534158e-02, -7.06887535e-02,  6.24399133e-02,  2.21476652e-02,
       -8.63666954e-03,  6.25783077e-03,  1.50088133e-02,  1.54645547e-02,
        7.61084994e-03,  8.87881271e-03,  5.63760029e-02, -5.54550763e-03,
        1.51786876e-02,  8.03868972e-03,  5.17522188e-02,  1.17669861e-02,
       -5.42354004e-04, -3.07549957e-03, -1.34828315e-02, -1.18277513e-02,
       -8.94800481e-03, -1.05660403e-02, -1.17927117e-02, -4.61965366e-03,
       -2.01164139e-03, -1.64541125e-02, -1.05793914e-02, -9.14567381e-03,
       -4.20719218e-03, -1.20442666e-02, -3.00305130e-02,  5.99675519e-03,
       -7.61956131e-03, -4.13877914e-03, -3.72075476e-03, -3.26628898e-03,
       -3.24516297e-03, -2.36124390e-03, -2.20644011e-02, -6.36024462e-03,
       -3.87274227e-03, -3.01461616e-03, -2.28747498e-02, -4.05310263e-03,
        1.63364448e-02, -1.35645334e-02, -2.51920655e-03,  1.79745203e-02,
       -1.61592227e-02, -3.75235429e-03,  1.50251267e-02, -1.25588963e-02,
       -2.59885926e-03,  2.75690034e-02, -1.87521412e-02, -5.44266030e-03,
        7.82034333e-03, -1.28853065e-02, -6.06279497e-03,  2.16631685e-03,
        1.80566428e-02, -1.00917264e-02, -3.88472838e-03,  1.33773288e-02,
       -6.89854972e-03, -1.16084498e-03, -3.44653235e-03, -1.79262828e-02,
       -2.03269607e-03, -4.70237798e-02, -2.09647517e-02, -4.43029012e-04,
       -9.29929415e-03, -2.48810312e-02, -1.00018311e-02,  2.62642418e-02,
        3.03968903e-02, -9.23354145e-03, -8.56439057e-03, -2.69963504e-03,
       -2.76721763e-03,  4.40022526e-02,  1.31828574e-02, -8.45879758e-03,
        5.56947050e-03,  1.31949584e-02,  1.61930810e-02,  5.51555347e-03,
        5.34148553e-04,  2.81138114e-02, -4.26634057e-03,  1.55219416e-02,
        5.51432564e-03,  1.91963051e-02,  1.45422281e-02,  8.54391626e-03,
       -3.74472976e-03, -1.71865968e-02, -1.09764745e-02, -6.72620473e-03,
       -1.07796889e-02, -9.40835106e-03, -3.25529109e-03, -1.38721858e-03,
       -1.77150591e-02, -1.00831292e-02, -8.62591764e-03, -8.57086433e-03,
       -1.07756125e-02, -3.18592667e-03,  3.45821328e-03, -6.81329775e-03,
       -3.97745249e-03, -3.71980460e-03, -2.89559230e-03, -2.98335242e-03,
       -2.34429466e-03,  1.83193821e-03, -5.42205241e-03, -3.71546331e-03,
       -3.09234663e-03, -3.85627878e-03, -3.87573154e-03, -4.60468102e-03,
       -3.93564558e-02,  3.85129548e-05, -6.19014042e-03, -8.75275942e-02,
       -8.83027170e-03, -6.24189348e-03, -5.22693797e-02, -4.35126667e-03,
       -9.80039673e-03, -9.92271748e-02, -1.03310764e-02,  1.95013891e-04,
       -9.88795041e-03, -3.36264053e-04, -1.97390353e-02, -2.26259837e-03,
       -5.58408326e-02, -7.60446222e-03, -3.75475460e-03, -1.77520250e-02,
        1.18540942e-02,  6.71793152e-03, -6.09132893e-03, -8.24855322e-03,
       -6.11107729e-03,  1.63843187e-02,  5.06076517e-03, -3.60163215e-02,
        5.26768639e-02, -2.44438813e-03,  3.11372703e-04, -8.89551397e-03,
       -1.06205919e-01, -1.11206272e-01, -2.30997488e-02, -2.22936808e-02,
        3.45218068e-04, -1.51191220e-02, -5.49120210e-03, -4.07798359e-03,
       -1.51566147e-03, -8.42906907e-04, -5.48507094e-04,  4.78059037e-04,
       -1.86410622e-03, -6.07742575e-03, -1.40183881e-03, -9.19893911e-05,
       -2.14577781e-03, -3.34596169e-03, -7.82698589e-02, -8.76495513e-03,
       -1.48759169e-02, -5.83657211e-03, -6.44201121e-04, -3.74309043e-03,
       -8.69865998e-03, -6.29303882e-03, -5.83983778e-02, -1.56821398e-02,
       -1.28972758e-03, -8.84490025e-03, -6.13560340e-02, -4.86588465e-03,
       -1.18342807e-02,  7.13366497e-03,  7.56129335e-03,  1.90225724e-03,
        1.88595381e-03,  1.47323815e-03,  1.55168063e-03, -3.14898635e-04,
       -8.84980977e-03,  8.13257552e-03,  1.77652049e-03,  7.31050725e-04,
       -7.79904954e-03,  1.85730587e-03,  3.06857500e-02,  3.66707477e-02,
        4.11791689e-02,  2.77803024e-02, -1.08993496e-03,  3.06857500e-02,
        3.95218888e-02,  2.75658435e-02,  9.49650630e-03,  3.20834203e-02,
       -2.19722413e-02,  1.08079933e-02,  7.95154099e-03,  6.18087104e-03,
        3.91155333e-03,  5.73434021e-03,  5.54223252e-03, -5.33508765e-04,
        6.18087104e-03,  7.14415880e-03,  8.10488216e-03, -2.21465355e-03,
       -5.71448902e-03, -6.26092907e-03, -9.41618541e-03, -7.99973806e-03,
       -2.92990347e-02, -3.60658243e-02, -3.44091275e-02, -3.81571723e-02,
       -7.64739928e-03, -2.92990347e-02, -2.89965126e-02, -2.94114366e-02,
       -1.49103179e-02, -8.86232392e-03, -1.23507297e-03, -2.93952405e-02,
       -3.08044635e-02, -1.59809647e-02, -1.81516175e-02, -2.01589113e-02,
       -1.76498592e-02, -8.16838126e-03, -1.59809647e-02, -1.34464520e-02,
       -2.17023131e-02, -1.26852257e-02, -4.28782614e-04, -5.74589793e-03,
       -7.78262254e-03, -9.14318428e-03, -1.47229962e-02, -1.56339427e-02,
        5.79237639e-02, -3.37615569e-02, -6.99185304e-03,  4.98013257e-02,
        6.51621603e-02]), array([ 2.02003040e-03,  3.64571463e-03,  3.00393516e-03,  2.34191901e-02,
       -6.94603027e-02,  5.71433815e-02,  2.41955650e-02, -7.08310913e-02,
        4.90648391e-02,  2.82013840e-02, -2.38793218e-02,  1.05088972e-03,
        8.19948065e-03,  4.70695700e-02, -8.34063593e-02,  8.73488153e-03,
        2.41477925e-02, -3.04303084e-02,  3.71072734e-02,  1.81337935e-02,
       -5.67349159e-02,  2.71967503e-02, -5.69025706e-03,  8.83731777e-03,
        8.29483452e-02, -1.50649134e-02, -1.00118253e-02,  1.38555460e-02,
       -1.98358990e-02,  5.08590462e-03, -5.41016865e-03,  4.03805731e-03,
       -1.06006365e-02, -3.25978956e-02,  2.57636645e-02, -1.31023534e-02,
        1.52441616e-02, -1.03297064e-01, -1.23734537e-01,  8.47878895e-02,
       -1.47637151e-02,  7.77581385e-02, -1.12443854e-02,  8.87535682e-03,
        1.22193217e-02,  1.61492087e-02,  8.65648244e-03,  1.17488984e-02,
        1.59691885e-02, -1.14471050e-02,  7.85144306e-02, -7.76638541e-03,
       -1.75303260e-02,  7.18642676e-02, -1.53879402e-02,  4.80139384e-02,
       -3.38084866e-02, -1.31174714e-02,  3.88787911e-02,  8.07168324e-03,
        1.01313620e-02,  1.47142229e-02,  5.44368452e-02,  1.03735111e-01,
       -1.85548277e-02, -3.27887679e-02,  3.07091242e-02, -2.85622328e-02,
        2.63501404e-02, -2.46976771e-02,  2.03055364e-02, -1.40848935e-02,
        7.38737009e-03, -7.26810913e-03,  1.50458501e-02, -2.29078660e-02,
        3.07918869e-02, -3.30711234e-01, -7.72979319e-02,  9.68532055e-02,
        1.05888531e-02, -1.12773243e-02, -7.37539534e-03,  8.95551452e-03,
       -5.71068951e-02,  6.10292437e-02,  6.77741470e-03, -6.16596537e-02,
        5.52147007e-02,  3.02565044e-02, -2.89945926e-02,  5.72866218e-02,
        1.66812377e-02,  4.57076115e-02, -6.81214687e-02,  5.38849179e-03,
        1.09642106e-02, -5.29194419e-02,  3.71426682e-02,  2.10787414e-03,
       -5.59854694e-02,  3.75669691e-02, -5.00528615e-03, -2.25928306e-02,
        3.51570306e-02, -4.50775149e-03, -1.96760906e-02, -5.15754145e-03,
        5.66625659e-04,  1.37816151e-02, -8.71980367e-03,  2.00375649e-02,
       -2.49276329e-02, -4.06265821e-02,  9.73665376e-03, -1.79251362e-02,
       -2.36932906e-03, -3.81658170e-02, -5.15310595e-02,  3.10263051e-02,
       -6.65704335e-02,  3.95465754e-02,  2.43866755e-02, -6.04290249e-02,
       -4.19778813e-02, -1.56101602e-02, -5.90032093e-02, -5.09300586e-02,
       -1.04655579e-02, -8.07259864e-02,  9.42087086e-03, -6.35079656e-03,
        1.17501808e-02,  6.32577795e-03,  2.89224015e-02, -4.21841819e-02,
       -3.34138750e-02, -2.93995294e-02, -1.55646185e-02, -5.50098347e-02,
       -6.20908132e-02,  7.81375090e-04, -1.20834622e-01,  6.02392492e-02,
        3.55436655e-02,  5.41264181e-02, -3.50830313e-02, -1.73122259e-03,
        2.17548386e-02,  5.30948144e-02, -2.40978543e-02,  4.15505796e-02,
       -2.57264756e-02, -2.54994834e-02,  1.81565209e-02, -2.67221752e-02,
        1.89510235e-02,  9.88261296e-02,  7.02632953e-02, -4.52591580e-02,
        1.00727572e-02, -4.16589025e-03, -1.27432160e-03, -4.39398849e-02,
        3.70822657e-02, -1.93071218e-02, -4.87578546e-02,  2.99377996e-02,
       -1.96480882e-02, -3.53841195e-02,  4.79135588e-02, -1.37616805e-02,
        2.54931815e-02, -3.43980183e-02,  1.37438476e-02, -2.77328785e-03,
       -2.59861211e-02,  2.62670660e-02, -1.32535079e-02, -5.35092907e-02,
        1.97535115e-02, -1.86975981e-02, -1.39634739e-02,  1.48585017e-02,
       -1.54065841e-03,  4.73554552e-02, -8.86326315e-03,  9.42579584e-03,
       -3.86292395e-03,  4.09101520e-02,  8.73547319e-03,  3.04842557e-02,
        5.51398143e-02, -2.05493018e-02,  6.01637473e-03, -1.74097298e-02,
       -3.02364687e-02, -1.09024073e-02,  1.11202428e-01, -2.83918840e-02,
        7.02119852e-03,  4.41527946e-02,  3.46790991e-02,  3.67707958e-02,
        5.85086868e-04,  7.02119852e-03,  1.13828975e-02,  1.59291217e-02,
        4.27124249e-02, -4.83370702e-02,  3.92785457e-02, -2.65558355e-02,
        2.13842312e-02,  7.02119852e-03,  4.41527946e-02,  3.46790991e-02,
        3.67707958e-02,  5.85086868e-04,  7.02119852e-03,  1.13828975e-02,
        1.59291217e-02,  4.27124249e-02, -4.83370702e-02,  3.92785457e-02,
       -2.65558355e-02,  2.13842312e-02,  2.04522511e-03,  1.83154583e-02,
        2.02128929e-02,  8.86931222e-03, -1.34767766e-02,  2.04522511e-03,
        7.94362168e-03,  1.87241172e-02,  1.27539715e-02, -1.97148059e-02,
        1.52473353e-02,  1.00875383e-02, -1.88571347e-03, -4.27422388e-02,
       -5.12453610e-02, -6.25300556e-02, -2.21074371e-02,  1.86762210e-03,
       -4.27422388e-02, -4.44454959e-02, -6.46275028e-02,  1.16213322e-01,
        9.49976041e-02, -7.85272852e-02,  2.94616287e-02, -1.57931775e-02,
        1.07680900e-03,  2.89785007e-02,  2.02745373e-02,  3.30010966e-02,
       -1.55846219e-02,  1.07680900e-03,  1.01446209e-02,  6.13497755e-03,
        6.62670076e-03,  4.76268005e-02, -5.13375720e-02, -2.39527183e-02,
        6.23499346e-02,  9.40807627e-03, -6.45750351e-02,  6.64134713e-02,
        2.84628230e-02, -6.77029538e-02,  4.84532744e-02,  1.36598028e-02,
       -6.85341512e-02,  6.69037399e-02,  3.88866811e-02, -5.31614050e-02,
        2.84215388e-02, -1.41075925e-04, -1.72853082e-02,  1.59910579e-02,
        7.50819671e-03,  2.40212793e-02, -8.13169605e-02,  4.05418379e-02,
        6.76517687e-04, -3.95864375e-02,  6.33505867e-02,  1.58812012e-02,
       -6.35581585e-03,  6.66733492e-02, -3.12504181e-02, -8.51330546e-03,
        3.41643456e-02, -2.86738910e-02, -1.15965615e-02,  4.90576977e-03,
        9.52630738e-02,  1.06210763e-01,  2.68209135e-02,  3.41458217e-02,
       -9.18040652e-03, -9.01102180e-03,  2.64783416e-02,  1.95540610e-02,
       -1.25286377e-03, -5.97793928e-03,  4.60637953e-03,  6.28962113e-03,
        3.52287366e-03,  1.61304768e-03,  2.68993005e-02, -2.86573095e-03,
        5.23994806e-03,  2.89146113e-03,  2.49015999e-02, -1.74643645e-03,
       -6.49591800e-02, -6.24814483e-02, -3.53920141e-02, -2.09015694e-02,
       -3.23751720e-02, -3.51378401e-02, -3.16863126e-02, -2.52324258e-02,
       -8.19055394e-02, -4.02424202e-02, -3.71386586e-02, -2.99904585e-02,
       -8.10957274e-02, -2.70219038e-02,  1.24691240e-02,  6.34913908e-02,
        4.30540564e-02,  1.72975980e-02,  1.68691166e-02,  2.58901301e-02,
        2.24710995e-02,  1.46312443e-02,  3.04300242e-02,  3.37201937e-02,
        2.04060588e-02,  2.03191153e-02,  3.82950154e-02,  1.81795074e-02,
        4.82685676e-03, -5.19491061e-02,  6.18802609e-02,  1.23378434e-02,
       -5.90339418e-02,  6.01087030e-02,  6.69555801e-03, -5.45566998e-02,
        6.27415437e-02,  2.06585610e-02, -5.14268376e-02,  5.77475323e-02,
       -3.40924657e-03, -2.51406724e-02,  1.82813487e-02,  8.87336674e-03,
        1.09934841e-02, -5.28883937e-02,  3.71326135e-02,  4.53293568e-04,
       -3.56983956e-02,  5.71143453e-02,  6.91849170e-04, -3.33584530e-02,
        6.47331474e-02, -2.33865291e-02,  1.31393251e-02, -1.35817236e-02,
       -1.01050812e-02,  1.10676070e-02, -3.29816041e-02,  3.48204588e-02,
        3.31808119e-02, -7.68738392e-03, -3.98977858e-03,  2.12711897e-02,
        1.60865566e-02,  1.96881671e-02,  1.53971777e-02, -1.66846602e-03,
       -5.61871548e-03,  4.58744891e-03,  7.72095176e-03,  2.87117971e-03,
       -1.38254604e-03,  1.86687791e-02, -3.79781761e-03,  6.26162546e-03,
        2.54734553e-03,  1.42760683e-02,  6.28783704e-05, -5.59270927e-02,
       -5.25408332e-02, -3.92714338e-02, -1.76664598e-02, -2.26113910e-02,
       -3.09075449e-02, -1.61017816e-02, -7.80657634e-03, -6.08052091e-02,
       -3.69845485e-02, -3.15909363e-02, -1.50577639e-02, -6.15199458e-02,
       -2.32692033e-02,  4.34115485e-02,  6.41141425e-02,  3.89888394e-02,
        1.65063491e-02,  1.55687112e-02,  2.41697868e-02,  2.77012704e-02,
        1.36226918e-02,  7.02739356e-02,  2.79910921e-02,  1.92116114e-02,
        2.78430403e-02,  5.78741467e-02,  1.75678859e-02, -5.78358673e-02,
        2.83611698e-03, -2.08414071e-02, -6.05352432e-02, -6.59636895e-02,
       -1.22374022e-02, -6.65481447e-02, -1.83246763e-02, -2.31503411e-02,
       -6.46950843e-02, -9.82718593e-02,  1.01495313e-04, -9.50251218e-03,
        1.96557705e-03, -1.02883430e-03, -2.49300325e-02, -3.74101240e-02,
       -2.94214664e-02, -2.18811766e-02, -4.40039672e-02,  2.97264389e-02,
       -1.82535277e-02, -1.53049095e-02,  4.35376445e-02,  1.32703962e-02,
        1.18184384e-02,  8.93290208e-02, -1.36372208e-02,  4.63450228e-02,
        9.61956623e-02, -1.51478744e-02, -3.07469563e-02, -2.75744075e-02,
       -1.25768045e-01, -1.24193076e-01,  7.06644376e-02,  7.80838923e-02,
       -3.13898556e-02, -4.95874709e-02, -2.24765892e-02, -3.41158473e-03,
       -7.60594557e-03, -8.22446671e-03, -7.66210969e-03, -8.42329706e-03,
       -3.67911827e-02, -1.94716490e-02, -8.61769251e-03, -7.99958104e-03,
       -3.74026465e-02, -4.95862284e-03, -9.01357490e-02,  1.50667706e-02,
        2.17888548e-02,  1.90033137e-02,  1.15306426e-02,  1.97805354e-02,
        1.73492496e-02, -2.01675205e-03, -5.08762216e-02,  2.61502470e-02,
        1.33412091e-02,  1.13170696e-02, -3.67622543e-02,  1.86938934e-02,
       -1.53027185e-02, -1.49041301e-02, -1.61954992e-02, -1.80303343e-03,
       -2.09668042e-03, -5.54712477e-03, -1.09505389e-02, -6.88891313e-03,
       -1.95516530e-02, -1.63103777e-02, -3.04900458e-03, -9.18110663e-03,
       -2.16333284e-02, -2.18840914e-03,  3.32071888e-02,  4.30426082e-02,
        3.95727740e-02,  3.76970020e-02,  1.37799231e-02,  3.32071888e-02,
        3.62078447e-02,  2.30980433e-02,  3.49110773e-02, -5.08809284e-03,
       -3.69961202e-02,  7.43845148e-02,  7.07736156e-02,  1.07687610e-02,
        2.82512845e-02,  1.19945308e-02,  4.52887951e-02,  8.46478482e-03,
        1.07687610e-02,  1.77651270e-02,  6.46367821e-03,  7.58374861e-03,
       -9.50684210e-03, -2.68068772e-02,  1.02694721e-01,  1.05362021e-01,
       -2.19700355e-02, -6.23306850e-02, -6.14779062e-02, -5.17119566e-02,
        1.76260082e-02, -2.19700355e-02, -3.93400420e-02, -3.57786486e-02,
        1.05062550e-02, -7.05826976e-03,  7.30304612e-02,  7.28854681e-03,
        1.98680288e-02,  2.58531207e-02,  3.10835199e-02,  2.75367717e-02,
        3.33299304e-02,  1.83154455e-02,  2.58531207e-02,  2.23056580e-02,
        1.71268482e-02,  2.38304759e-02, -1.22288196e-02, -4.51103221e-03,
        6.32221151e-02,  5.61318556e-02, -2.00697949e-02, -3.47773390e-02,
        2.49606364e-01, -5.53473187e-02,  1.42150465e-02, -5.42180451e-02,
        7.31784030e-03]), array([ 8.60821184e-04,  1.49201149e-03, -2.54622209e-03, -6.71432581e-02,
        4.55059692e-03, -3.68285198e-02, -6.45435361e-02,  2.06214792e-04,
       -3.61671039e-02, -7.19773809e-02, -5.36571411e-03, -2.06581264e-02,
        3.83999714e-02, -1.53551029e-02,  1.76826835e-02, -4.60006593e-02,
       -3.49894507e-02,  9.40448720e-03, -1.82902729e-02, -5.45301867e-02,
       -9.41308974e-03, -2.78835406e-02, -1.25809422e-02,  3.92088555e-02,
       -1.51203414e-03,  5.16994239e-03,  9.00393333e-03,  1.53394844e-02,
       -5.64758537e-02, -4.09437763e-02,  1.01863961e-02,  1.45218558e-02,
       -2.49178621e-02, -4.44725937e-03, -7.19292986e-03,  2.48588725e-02,
       -4.50877395e-02,  5.17479365e-02, -3.30814211e-03,  7.56415213e-02,
        2.07888610e-02, -2.43419768e-02,  1.77297644e-02,  1.06331544e-03,
        8.19822311e-03,  1.03626282e-02,  9.30399037e-04,  8.17470207e-03,
        1.03036355e-02,  2.05900127e-02, -2.18700948e-02,  2.00924706e-02,
        1.95480034e-02, -2.67850729e-02,  1.53548638e-02, -9.30162032e-02,
        4.94868663e-02, -1.29862560e-02, -3.49188056e-02,  6.54939939e-04,
        7.74029386e-03,  9.66457666e-03, -3.45103548e-02,  5.76654248e-03,
        7.85356726e-02,  1.76894743e-02, -1.88496424e-02,  2.00989650e-02,
       -2.14349876e-02, -4.50935163e-02,  5.29961006e-02, -5.82380736e-02,
        6.20471503e-02, -1.86834543e-02,  1.68179882e-02, -1.48750969e-02,
        1.28464434e-02,  1.21222353e-01,  4.16477862e-02,  1.23429868e-01,
        6.28521674e-03, -2.05859261e-02,  2.03778388e-03, -2.35241128e-02,
        2.61720989e-02,  2.90184705e-03, -2.84628902e-02,  1.76488818e-02,
        2.55922057e-03, -9.12683639e-03,  2.59349272e-02,  1.13098387e-02,
        1.76603065e-02, -2.86082995e-02,  4.20054383e-03, -6.01840080e-03,
        4.23801485e-03,  4.79860829e-02,  1.79604218e-02, -3.79073788e-02,
       -7.71560863e-04,  2.11662018e-03, -4.95578214e-02, -2.61565011e-02,
       -4.93448429e-02,  1.94577017e-02,  2.13078055e-02,  4.75003072e-02,
       -7.04402043e-03, -3.27786457e-02, -1.95273982e-02, -8.07865224e-03,
       -4.36510554e-03,  1.27729660e-02, -6.39681206e-03,  1.88797472e-02,
        3.25673904e-03, -2.22213643e-03, -7.99178423e-02,  4.72053191e-02,
       -1.28563314e-01,  7.12431439e-02,  2.48467980e-02,  2.60166968e-02,
        3.25031703e-02, -4.89382310e-02,  2.50008371e-02,  2.38013792e-02,
       -5.75601905e-02, -4.11112612e-02,  5.31606685e-02, -5.22950945e-04,
       -7.90202989e-02, -1.91515057e-02,  2.07044600e-02,  1.09516995e-03,
        1.52095549e-02,  3.73666418e-02, -3.23357526e-02,  2.35949039e-02,
        1.18088600e-02, -6.53907872e-02, -1.69706177e-01,  7.97796362e-02,
        1.69609000e-02, -6.72268175e-02,  4.73626023e-02, -4.26752629e-02,
        3.99474446e-02, -5.09788358e-02,  4.84161111e-02, -4.30054682e-02,
        2.51273537e-02, -6.23775747e-03, -1.76255085e-03,  1.46913183e-02,
        5.78108608e-04, -3.17255935e-02,  1.20956721e-02, -9.77825876e-02,
        2.01327052e-02, -1.15345333e-03, -1.45173512e-03,  4.31973344e-02,
        5.46792609e-02,  2.17356572e-02,  3.78650101e-02,  4.49431919e-02,
        1.42075156e-02,  4.43283198e-02,  5.83474372e-02,  2.77348673e-02,
       -4.63474548e-02, -5.44696891e-02, -3.10185434e-02,  3.62127727e-02,
        4.30939801e-02,  5.12328001e-02,  3.11048501e-02,  2.56702984e-02,
        3.14862122e-02,  2.51076411e-03,  3.05598974e-02, -3.30474419e-03,
       -1.56520032e-02, -6.75218096e-02,  1.44793984e-02, -4.55845303e-02,
       -2.45879379e-02, -5.26501747e-02,  2.20988517e-02, -2.34207758e-02,
       -3.85048928e-02, -1.01354732e-02, -1.57417084e-02,  6.02035068e-04,
       -7.93360197e-03, -1.79521048e-02, -2.55777220e-02, -6.93585013e-02,
       -4.94995158e-02, -2.62543194e-02, -2.44257399e-02, -2.34683301e-02,
       -8.82388745e-03, -4.94995158e-02, -2.60112480e-02, -2.13919128e-02,
        2.31105024e-02, -1.72783394e-02,  1.14469357e-02, -2.78442702e-02,
        3.78975301e-02, -4.94995158e-02, -2.62543194e-02, -2.44257399e-02,
       -2.34683301e-02, -8.82388745e-03, -4.94995158e-02, -2.60112480e-02,
       -2.13919128e-02,  2.31105024e-02, -1.72783394e-02,  1.14469357e-02,
       -2.78442702e-02,  3.78975301e-02, -7.91108449e-03,  8.32287825e-03,
        6.46784467e-03,  5.09530906e-03, -1.23789483e-02, -7.91108449e-03,
        2.17299588e-02,  5.56749778e-04, -3.77458591e-02,  5.43116483e-03,
       -6.81838152e-03, -1.63417030e-03,  3.68946635e-03,  5.53667827e-03,
        5.01868257e-02,  5.12981640e-02,  4.25414322e-02, -1.81374190e-02,
        5.53667827e-03,  2.40479683e-02,  4.07214482e-02,  5.10713767e-02,
       -5.77203246e-02,  6.68457255e-02, -8.47044773e-02,  8.12693095e-02,
        3.94126837e-02,  6.64003133e-02,  5.82310031e-02,  6.23167034e-02,
        5.36275813e-03,  3.94126837e-02,  4.69835000e-02,  4.58826425e-02,
       -7.05106292e-03, -6.07453073e-02,  5.10650017e-02, -4.35644469e-02,
        4.62287970e-02, -4.21114090e-02,  1.14455936e-02, -2.22168797e-02,
       -7.66347477e-02,  7.34095748e-04, -4.25017900e-02, -5.37826365e-02,
        1.15934170e-02, -3.60952006e-02, -8.53705989e-02, -1.00509451e-02,
       -4.06824617e-02, -1.72289293e-02,  4.34542886e-03, -3.94764200e-03,
       -2.55403967e-02, -3.50206341e-02,  2.38738693e-02, -2.14954271e-02,
       -1.11749971e-02,  1.71612680e-02, -2.05464013e-03, -5.22389660e-02,
        6.36492387e-03, -1.62007247e-02, -4.33581280e-03, -1.43494968e-02,
       -1.33256835e-02,  2.53784508e-02, -4.76702251e-02, -2.28764665e-02,
       -5.59949605e-02, -6.04657116e-02,  5.70293607e-02,  6.00623429e-02,
        9.61568260e-02,  1.06792933e-01, -5.10387234e-02, -4.04538814e-03,
        3.73049113e-02,  7.22798373e-03, -7.89272197e-03, -4.43140933e-03,
       -9.92819998e-04, -4.70550544e-03, -4.19527180e-02,  3.41521647e-02,
       -6.59522047e-03, -2.23605343e-03, -3.63193232e-02,  1.98548699e-03,
       -1.68424285e-02,  5.63387949e-02,  5.06379717e-02,  7.60796640e-03,
        1.12638304e-02,  1.58659346e-02,  1.66263173e-02,  5.68540938e-03,
        1.60802235e-02,  5.11225671e-02,  1.43242428e-02,  1.25434245e-02,
        2.36235301e-02,  1.01026495e-02, -4.27718899e-02,  7.44710635e-03,
        3.05725598e-02,  1.46474747e-02,  1.16326914e-02,  1.20082642e-02,
        5.46160367e-03, -5.11825810e-03, -3.17837910e-02,  2.47990646e-02,
        1.25525469e-02,  2.34686069e-03, -2.42989676e-02,  1.40563211e-02,
       -2.11406968e-02,  1.83131020e-02, -1.61669588e-04, -2.37583849e-02,
        3.34382338e-02,  5.97505927e-03, -1.96622997e-02,  2.77291806e-02,
        3.71806581e-03, -3.53664465e-02,  3.04197674e-02,  1.15463212e-02,
       -1.08873903e-02,  3.80469997e-03, -4.77534376e-03, -3.87664465e-03,
        4.26978072e-03,  4.79692638e-02,  1.79625938e-02, -1.30802873e-02,
        1.01117526e-02,  1.07595099e-03, -6.86018051e-02, -3.14702832e-02,
       -4.53233043e-02,  7.10970823e-02, -2.91730611e-02,  1.09054037e-02,
        2.15887024e-02, -4.66264278e-02,  6.66976352e-03, -4.64389276e-02,
       -4.83175103e-02,  1.69664536e-02,  9.39176736e-03,  8.93250906e-03,
        1.31857129e-02, -2.85378570e-02,  2.09192976e-03,  3.53835484e-02,
        9.04618589e-03, -5.30601680e-03, -3.56166935e-03,  2.57591544e-03,
       -2.07066626e-04, -1.14106448e-02,  3.20463983e-02, -5.03135458e-03,
        2.47823278e-03,  4.51049133e-03,  3.30686950e-03,  1.05402478e-02,
        5.00246027e-02,  5.83072196e-02,  7.31713523e-03,  9.77865247e-03,
        1.91964344e-02,  1.44097465e-02,  7.28610383e-03,  4.78502520e-02,
        4.60054328e-02,  1.61574706e-02,  1.35130311e-02,  6.04875243e-02,
        1.08210289e-02, -2.56536681e-02,  1.58383596e-02,  2.84830953e-02,
        1.52354771e-02,  1.20478468e-02,  1.40906602e-02,  1.33035526e-02,
        3.54944618e-03,  4.45086231e-03,  2.19983101e-02,  1.34752074e-02,
        1.30255662e-02,  2.14868660e-02,  1.45506339e-02,  3.18543211e-02,
        3.93090522e-02, -1.41096625e-02,  2.38641668e-02,  2.82273541e-02,
       -5.63143128e-02,  2.73125312e-02,  3.49435404e-02, -3.15044684e-02,
        2.80358698e-02,  1.05703687e-02, -6.63456566e-02,  8.01173466e-03,
        1.12616237e-02, -4.14386445e-03,  2.63168717e-02,  2.38043284e-02,
        3.78136777e-02, -3.28793115e-02,  3.55717475e-02,  4.37702143e-02,
        2.21031712e-02,  3.57651126e-02,  2.03229159e-02,  1.93372642e-02,
       -7.23875007e-03,  3.35578407e-02,  2.84904598e-02, -4.81548137e-02,
       -2.13301361e-02,  4.14753080e-03,  5.99858128e-02,  5.43782200e-02,
        1.36098705e-02,  9.06322494e-03, -4.17427411e-02, -4.90876618e-02,
        1.51503908e-02,  4.55877696e-02,  4.18150840e-02,  2.70264131e-02,
        2.79580973e-02,  1.77314733e-02,  1.21615015e-02,  4.46861398e-03,
        2.09198898e-02,  4.46550467e-02,  2.66077417e-02,  8.75280908e-03,
        2.28450791e-02,  2.72035931e-02, -9.40501379e-04,  2.70818184e-02,
        4.19879121e-02,  3.26691841e-02,  1.51126494e-02,  2.13762931e-02,
        2.76789556e-02,  8.60473097e-03,  1.69837903e-02,  4.91766727e-02,
        1.65543949e-02,  2.31806533e-02,  3.59609675e-02,  3.01416140e-02,
       -4.72553048e-02,  1.41888953e-02,  3.85520762e-02,  2.17773118e-02,
        1.34298156e-02,  1.45500413e-02,  7.37372568e-03, -5.07399478e-03,
       -4.02166065e-02,  4.73065022e-02,  1.37881956e-02,  1.96556983e-03,
       -3.48460996e-02,  1.93014557e-02, -1.79921733e-02, -2.81983954e-02,
       -3.47151427e-02, -1.88217673e-02,  1.51365337e-02, -1.79921733e-02,
       -1.10615330e-02, -1.89178545e-02, -9.85779548e-03, -9.07455198e-02,
       -7.12561629e-02,  9.78354601e-02,  9.17915790e-02,  2.33660933e-03,
        1.66297591e-02,  5.68805874e-03,  2.22612510e-02,  7.18175018e-03,
        2.33660933e-03,  3.13719645e-02, -6.22809039e-03, -3.71777299e-02,
       -2.92665719e-02, -4.48210638e-02,  7.55455838e-02,  6.57119662e-02,
        5.34930667e-02,  3.72356952e-02,  3.48032059e-02,  4.54169339e-02,
        3.69363115e-02,  5.34930667e-02,  4.37040736e-02,  3.90368346e-02,
        5.32824234e-02, -2.42827930e-02, -4.29622735e-02,  9.04230853e-02,
        8.96783696e-02,  5.75716814e-02,  7.32680458e-02,  7.13077541e-02,
        7.41296442e-02,  2.26591660e-02,  5.75716814e-02,  5.66347233e-02,
        5.86996061e-02,  2.93189572e-02, -2.56791743e-02, -9.69448549e-02,
        1.12970930e-01,  9.50085690e-02,  1.41485018e-03, -2.14930271e-02,
        4.71031093e-01, -9.45117138e-02, -3.54056991e-02,  1.69046825e-02,
       -1.24554779e-02]), array([-1.97621686e-03,  3.41889589e-03,  9.11446655e-03, -2.17708679e-02,
       -7.30347988e-04, -1.29633364e-02, -1.88355558e-02, -1.25819537e-03,
       -8.78319352e-03, -3.67703525e-02, -5.26730002e-04,  1.72518611e-04,
        6.87464703e-03,  2.85012019e-03,  2.11379791e-02, -1.17708542e-02,
       -6.39851191e-03,  1.80225901e-03, -9.29966794e-03, -1.19112459e-02,
       -2.88534760e-03, -2.41249155e-03,  1.34258351e-02,  3.69729984e-02,
        3.29606832e-02,  6.07681878e-03, -5.23823817e-03,  2.01961429e-02,
       -5.93715335e-02, -9.51747836e-03,  2.04207844e-03, -4.68637005e-03,
       -9.18602091e-03,  3.56670696e-03, -1.01558599e-02,  1.10028217e-02,
       -3.79478639e-02,  2.31488309e-03,  9.19798284e-03,  1.61181361e-01,
        1.11882334e-02,  3.89913700e-03,  2.46310898e-02,  6.42191744e-03,
        1.58958965e-02,  1.92175658e-02,  6.31103678e-03,  1.57250272e-02,
        1.90765580e-02,  1.33123015e-02,  7.75157353e-03,  2.82461086e-02,
        8.69213147e-03, -1.40562904e-03,  1.96682996e-02, -5.76732167e-02,
        2.70778829e-02, -7.14122582e-03, -1.99503901e-02,  6.08123261e-03,
        1.46556628e-02,  1.81576182e-02,  3.47697615e-03,  4.20132533e-02,
        1.02898832e-01,  1.56810121e-03, -3.44903801e-03,  5.55679635e-03,
       -7.90897316e-03, -2.51324107e-02,  3.12692308e-02, -3.59917062e-02,
        3.98102860e-02, -2.50139968e-02,  2.45077753e-02, -2.39073112e-02,
        2.31869058e-02, -9.07155194e-02,  5.00979465e-02,  3.75006632e-01,
       -4.58348485e-04,  1.25634668e-02, -1.29287441e-02,  2.62326471e-03,
        1.96461596e-02,  1.07211541e-02,  2.21035608e-03,  1.42806050e-02,
        1.02793748e-02,  4.40105098e-03,  1.25267738e-02,  5.60478256e-03,
       -5.71610347e-03, -2.18074494e-02, -9.39990542e-03,  8.66571217e-03,
        1.32784360e-02,  2.78527805e-02,  1.43524722e-02,  6.83504905e-04,
        1.70066029e-03,  6.56859763e-03, -2.37762220e-02, -1.31026035e-02,
       -1.93121556e-02,  2.79212941e-02,  1.28440638e-03,  5.16628354e-02,
       -1.86561051e-02,  1.11568424e-03, -5.22753723e-03,  7.77316726e-03,
       -2.76775327e-02,  2.38087051e-02, -7.70010860e-03,  2.80407094e-02,
       -2.85273467e-02, -1.59957221e-02, -4.20012241e-02,  4.53265586e-02,
        1.52878076e-01, -7.97197457e-02, -3.62178124e-02, -3.77414006e-02,
        3.21189866e-03, -4.21910087e-02, -3.79063894e-02, -2.89368961e-03,
       -4.47951836e-02,  5.27933127e-02,  5.68195458e-03, -2.31694985e-02,
        8.39734654e-02, -2.42687620e-02,  1.09308780e-02, -3.32719421e-02,
       -2.93917756e-02,  6.97174705e-03, -2.98674640e-02, -3.86637674e-02,
       -9.89204639e-03, -4.26809944e-02,  2.80203740e-01, -5.89911743e-02,
       -1.81489723e-02,  1.14927249e-02, -2.30957064e-03, -1.15114255e-02,
        1.99387277e-02,  4.04360943e-04,  2.96077189e-03, -9.94637104e-04,
        1.56940030e-03,  2.97472663e-02, -2.60842170e-02,  1.56571564e-02,
        1.23703421e-03,  3.55856887e-02, -2.23799096e-02, -1.29443783e-01,
       -4.79640430e-03, -5.02572524e-03, -1.49662212e-03,  2.45462983e-02,
        3.61625540e-02,  1.27150445e-02,  2.19956417e-02,  3.06457120e-02,
        1.03350962e-02,  2.65257319e-02,  3.79006294e-02,  1.27213295e-02,
       -2.41200523e-02, -3.57579281e-02, -1.52379089e-02,  2.37442020e-02,
        2.15158311e-02,  3.11518432e-02,  1.51687079e-02,  1.49261000e-02,
        2.36825325e-02,  6.38282210e-03,  2.42517197e-03,  5.87018534e-04,
       -1.12139415e-02,  3.26615399e-03,  5.87338465e-03, -8.51745343e-03,
        2.91690328e-03, -1.15635918e-03,  2.80459252e-04,  4.45218001e-03,
       -1.44819170e-02,  3.10793065e-02, -1.98449718e-02,  1.22894574e-02,
       -5.27523685e-03, -5.78379682e-03,  2.97942423e-03, -7.06523948e-02,
       -1.29399706e-02, -1.44031444e-03,  4.43615379e-04, -3.35883203e-03,
       -6.82189448e-03, -1.29399706e-02, -6.28883445e-03,  3.25920730e-03,
        4.17602261e-02, -1.51924069e-02,  9.70483794e-03, -1.92089488e-02,
        2.41766809e-02, -1.29399706e-02, -1.44031444e-03,  4.43615379e-04,
       -3.35883203e-03, -6.82189448e-03, -1.29399706e-02, -6.28883445e-03,
        3.25920730e-03,  4.17602261e-02, -1.51924069e-02,  9.70483794e-03,
       -1.92089488e-02,  2.41766809e-02,  8.25426697e-03,  1.63914190e-02,
        1.51516557e-02,  1.55625443e-02,  2.40513523e-03,  8.25426697e-03,
        1.97998937e-02,  1.23451497e-02, -1.75612631e-02,  2.02380031e-02,
       -2.19644402e-02, -1.67128726e-02,  2.23649738e-02, -3.46218328e-02,
       -1.99173342e-02, -2.51396499e-02, -8.58832250e-03, -3.21675187e-02,
       -3.46218328e-02, -2.51888501e-02, -2.48936546e-02,  8.03261935e-02,
        1.65929383e-02, -4.98508300e-03, -1.99339672e-02,  2.15277517e-02,
        2.55406523e-02,  4.07111720e-02,  3.55590727e-02,  3.91395945e-02,
        1.18478701e-02,  2.55406523e-02,  2.70932613e-02,  2.68416714e-02,
       -6.57381068e-03,  4.95189948e-03, -2.10538220e-03, -3.37359568e-02,
        3.98164871e-02, -1.78417859e-02,  4.99537731e-03, -6.69233274e-03,
       -2.35838600e-02, -3.93739927e-03, -1.56112427e-02, -2.45283101e-02,
       -6.59768518e-03, -1.77097841e-02, -1.79166585e-02,  6.59302455e-03,
       -6.30084045e-03, -4.47088179e-03,  2.02921939e-02,  5.49431261e-03,
       -9.85203633e-03, -6.57771582e-03,  1.82525615e-03, -1.22203258e-02,
       -1.92818163e-03,  7.62601050e-03, -3.67043481e-04, -2.07030777e-02,
        9.59705681e-03,  3.02030264e-03, -2.34192627e-02, -1.12866109e-02,
       -1.96479510e-02,  1.15815478e-02, -5.58996319e-03, -2.25767209e-02,
        4.44263091e-02,  5.28284044e-02,  1.05295861e-01,  1.19608388e-01,
        1.42466159e-01,  1.53871452e-01, -1.28247741e-02,  6.45151028e-05,
        3.44432506e-02,  1.04476522e-02, -1.38949512e-03,  2.25221647e-03,
       -8.04884294e-04, -6.81233523e-03, -1.02123383e-02,  3.26764619e-02,
       -1.71140047e-05, -2.81936279e-03, -7.04202040e-03,  7.44329603e-03,
       -1.84698734e-02,  1.31566296e-02,  3.92234754e-02,  2.23961660e-02,
        1.59027757e-02,  1.77691161e-02,  1.70464580e-02,  9.65440367e-03,
       -7.37904463e-03,  4.43764925e-02,  1.84389450e-02,  1.44718585e-02,
        1.76148653e-04,  2.23108157e-02, -2.76616943e-02,  6.73719163e-03,
        2.34394886e-02,  1.18574185e-02,  8.49266134e-03,  1.07342657e-02,
        4.42830987e-03, -4.34086682e-03, -1.99470010e-02,  1.92452470e-02,
        9.69358574e-03,  1.83785187e-03, -1.43626196e-02,  1.12373700e-02,
       -8.53659599e-04,  1.60895778e-02,  7.59734490e-03,  5.99807483e-03,
        2.20836221e-02,  1.37695397e-02,  4.38476099e-03,  2.02301526e-02,
        1.09325641e-02,  5.58503289e-03,  1.69277782e-02,  1.69971099e-02,
       -2.70457128e-03,  8.64026710e-03, -1.53059565e-03,  7.85063901e-03,
        1.33201554e-02,  2.78411054e-02,  1.43552003e-02, -3.91817739e-03,
        1.04101580e-02,  6.07224760e-03, -3.38375270e-02, -1.31094204e-02,
       -1.87974160e-02,  4.86838300e-02, -3.65908331e-03,  1.62796769e-02,
        3.37823875e-02,  4.41751942e-03,  2.59584241e-02,  5.27352991e-03,
        3.59661208e-03, -8.87725118e-04, -3.52487169e-04,  1.45225242e-02,
        1.66227893e-02, -6.09811242e-03,  6.22141648e-03,  3.40322383e-02,
        1.16266367e-02,  2.42632187e-04,  6.98282244e-03,  5.58477824e-03,
        2.13338341e-03,  1.25450918e-03,  3.21253550e-02,  3.03055960e-03,
        5.90900145e-03,  1.40942127e-02,  1.06382463e-02, -2.14107382e-03,
        1.26263133e-02,  4.71514972e-02,  2.08188024e-02,  1.24760978e-02,
        1.83185271e-02,  1.11756363e-02,  7.83780068e-03,  1.09469601e-02,
        4.42185184e-02,  1.79674198e-02,  1.07542139e-02,  2.87193313e-02,
        2.00073345e-02, -1.31159942e-02,  1.09289708e-02,  2.23249661e-02,
        1.21371119e-02,  8.62299287e-03,  1.21873087e-02,  1.15049431e-02,
        2.65585042e-03,  4.70433360e-03,  1.73405998e-02,  1.02805244e-02,
        1.12110130e-02,  1.73805096e-02,  1.14056567e-02, -1.74161718e-02,
        1.42883997e-02, -2.01880240e-02, -4.32104420e-02, -2.97162125e-03,
       -4.53685238e-02, -2.85955090e-02,  5.75483607e-03, -3.65659511e-02,
       -6.08795579e-02, -1.19057704e-02, -4.33676005e-02, -9.68037539e-03,
        7.54061786e-03, -4.13573810e-03, -4.69265626e-03, -2.26712816e-02,
        7.44268330e-03, -3.11244995e-02,  1.68408799e-02,  1.85574013e-02,
        2.62860611e-03,  1.42827896e-02,  1.51670807e-02,  1.08513608e-02,
        2.38030305e-02,  3.08770129e-02,  1.83989270e-02,  2.15016821e-02,
        1.30610331e-02,  2.36642725e-02, -4.89030936e-02, -5.20411400e-02,
        3.29970537e-02,  3.67424315e-02,  1.25302325e-02,  1.05009537e-02,
       -2.88990883e-02,  1.46524473e-02,  2.28382847e-02,  1.66461435e-02,
        1.32722890e-02,  7.27960190e-03, -1.57910093e-04, -6.01471964e-03,
       -2.50592662e-02,  2.51642373e-02,  1.21770041e-02, -2.76308196e-03,
       -2.33777447e-02,  1.55467513e-02, -2.61700682e-02,  1.20597981e-02,
        2.81953975e-02,  2.02342240e-02,  8.27656710e-03,  1.41809788e-02,
        1.80369158e-02,  4.43566980e-03, -9.78370117e-03,  3.24859448e-02,
        9.57923893e-03,  1.46008458e-02,  4.47276144e-03,  1.84601124e-02,
       -3.78201257e-02,  2.19513271e-03,  2.05943810e-02,  1.29689614e-02,
        9.14885750e-03,  6.96471100e-03,  2.75939462e-03, -5.60837710e-03,
       -3.52317036e-02,  2.59197475e-02,  8.59476031e-03, -8.82836286e-04,
       -3.22942519e-02,  1.16000702e-02, -7.66244922e-04, -3.04086951e-03,
       -1.50648724e-02,  7.98742477e-03,  1.54414114e-02, -7.66244922e-04,
       -1.29344990e-03, -1.08153159e-02,  7.86422243e-03, -5.34389944e-02,
       -4.54348314e-02,  1.22125175e-01,  1.20525932e-01,  1.33582772e-02,
        2.02125387e-02,  1.24727775e-02,  2.51295674e-02,  1.55223005e-02,
        1.33582772e-02,  2.43390400e-02,  1.64260038e-03, -1.20702755e-02,
       -1.25519418e-02, -8.76539387e-03,  4.11490196e-02,  3.78219388e-02,
        5.41304950e-03, -3.40113123e-02, -2.62493047e-02, -3.54067340e-02,
        1.83127184e-02,  5.41304950e-03, -1.44014715e-02,  3.85598465e-03,
        2.39699220e-02,  1.22091288e-02,  2.41170037e-02,  1.43771560e-02,
        2.01373822e-02,  3.50108441e-02,  4.52300257e-02,  4.15012623e-02,
        4.85284505e-02,  1.90221837e-02,  3.50108441e-02,  3.29621235e-02,
        3.27124990e-02,  1.48046373e-02, -1.24301673e-02, -2.27901529e-02,
        7.60702098e-02,  6.96181187e-02,  1.74625311e-03, -3.72332187e-03,
       -5.74172109e-01,  4.00541235e-02, -2.23834820e-02, -2.72181172e-03,
       -1.77965992e-02]), array([ 3.29889413e-03, -2.15213431e-04,  2.59889279e-03,  3.12547222e-02,
       -7.44023434e-02,  3.04665970e-03,  2.48450975e-02, -7.88785810e-02,
       -3.97487785e-03,  5.68031593e-02, -2.58840990e-02,  4.65984841e-03,
        2.67495162e-03,  4.53856779e-02, -2.72216683e-02, -8.30393819e-03,
        5.56022429e-02, -2.12175272e-02,  1.77416837e-02,  2.94500483e-03,
       -6.79992247e-02, -1.64791837e-02, -8.38295686e-02, -2.59931262e-02,
        2.05488548e-03, -5.62951991e-03,  2.05555994e-02, -1.14311038e-02,
        4.88075830e-02, -4.61895149e-02,  2.77662011e-02, -2.48090029e-02,
        6.07956249e-02, -2.05258096e-02,  2.38556311e-02, -2.61052212e-02,
        4.27774279e-02,  1.39959250e-02, -7.36865057e-02, -1.11165591e-01,
        2.74909266e-02,  1.95228553e-02,  1.47650494e-02, -3.98860708e-03,
       -2.93198424e-03,  7.40004036e-04, -3.83211415e-03, -2.71907684e-03,
        8.28222412e-04,  2.59967623e-02,  1.80474820e-02,  1.43130083e-02,
        2.84147948e-02,  2.03405275e-02,  1.42208426e-02, -1.81536289e-01,
        6.51548735e-02, -4.48674122e-02, -3.50274527e-02, -3.38962012e-03,
       -2.02804222e-03,  1.17612926e-03, -7.04707223e-02, -5.95946792e-03,
        4.61788192e-02,  3.04720885e-02, -2.66876571e-02,  2.24778880e-02,
       -1.78468026e-02, -4.78591492e-02,  4.92608228e-02, -4.79724124e-02,
        4.59187107e-02,  9.70251142e-03, -9.70177829e-03,  9.48557744e-03,
       -9.06748135e-03,  8.77545738e-02, -1.61125599e-01, -1.10935704e-01,
        8.91919857e-03,  9.63283322e-04,  2.46873721e-03,  8.24103526e-03,
       -7.36048465e-02,  1.79697175e-02,  1.81618997e-03, -7.70911455e-02,
        1.38822873e-02,  5.19686611e-02, -3.45960438e-02,  3.93914526e-02,
        2.73852923e-02,  6.93067589e-02, -1.07736907e-02, -1.60838699e-02,
        2.89018057e-02, -5.07322233e-02,  2.41028976e-02, -1.11620867e-02,
       -6.44942712e-02,  7.96470255e-03, -7.02370188e-02, -4.01087595e-02,
       -4.56437867e-02, -3.57927494e-02,  1.55638891e-02, -3.65047589e-02,
        3.07914914e-02, -7.01650223e-02,  7.31835558e-06, -7.72021117e-02,
        1.90367183e-02, -3.75094173e-02,  2.34337230e-02, -5.11499334e-02,
        4.16411335e-02,  6.73027478e-03, -7.81877896e-02, -6.22090061e-02,
        5.62643947e-02, -3.13852618e-02, -7.57587504e-03,  3.03902383e-02,
        2.30520979e-02, -5.04491743e-02,  2.63590628e-02,  1.68201695e-02,
       -5.32999067e-02,  4.25319960e-02,  2.60106819e-02, -2.90646453e-02,
       -5.28089758e-03, -2.99596870e-02,  2.06355109e-02, -4.62591655e-04,
        2.82241876e-02,  2.99940989e-02, -3.25542429e-02,  1.71157749e-02,
        8.04517949e-03, -5.16648916e-02,  1.57708400e-01, -2.67463500e-02,
       -1.76319246e-02, -9.80655263e-02,  6.81677470e-02, -7.03132323e-02,
        8.18182891e-02, -3.52313899e-02,  3.63856505e-02, -3.07803924e-02,
        5.14873962e-02, -4.03108282e-02,  2.78151880e-02,  6.23612912e-03,
        7.96306173e-03, -3.96746625e-02,  6.50529381e-03, -4.03747137e-02,
       -1.00131893e-02, -8.07874632e-05, -4.35939286e-03, -1.82059364e-02,
        2.74198141e-02, -1.06193519e-02, -2.03069810e-02,  2.18395603e-02,
       -1.21593434e-02, -1.40265238e-02,  3.44324761e-02, -3.40170444e-03,
        8.08368721e-03, -2.61378760e-02,  4.06969356e-03,  2.61603327e-03,
       -9.87267655e-04,  3.23034647e-02,  3.66569336e-03, -2.05987668e-02,
        1.28984849e-02, -1.20101726e-02,  1.19778875e-02, -8.13040816e-03,
       -1.26208644e-02, -1.05495802e-01,  2.70639433e-02, -1.01885542e-01,
        8.10866279e-04, -5.44670234e-02,  1.99946151e-02, -4.76018765e-02,
        2.61771880e-02, -6.02502849e-02,  1.02696587e-02, -3.81324203e-02,
        4.83289935e-02, -9.24253913e-02,  2.30929050e-02, -2.31276544e-02,
       -4.54590113e-03,  4.76449601e-02,  3.62053354e-02,  3.39274040e-02,
       -1.44515878e-02, -4.54590113e-03,  3.49524242e-02,  1.24526856e-02,
       -2.48838888e-02, -6.86396314e-02,  5.39160589e-02, -2.21664307e-02,
        1.80747390e-02, -4.54590113e-03,  4.76449601e-02,  3.62053354e-02,
        3.39274040e-02, -1.44515878e-02, -4.54590113e-03,  3.49524242e-02,
        1.24526856e-02, -2.48838888e-02, -6.86396314e-02,  5.39160589e-02,
       -2.21664307e-02,  1.80747390e-02, -1.61137688e-02,  6.19281791e-03,
        5.41941757e-03, -1.36724386e-03, -2.54411841e-02, -1.61137688e-02,
        1.21845320e-02, -1.19047569e-03, -2.73368424e-02, -6.83135524e-02,
        6.75756975e-02,  1.92511280e-02, -1.74476002e-02,  6.56527008e-03,
        4.38879738e-02,  4.22212615e-02,  3.95704473e-02, -2.23634180e-02,
        6.56527008e-03,  2.98153539e-02,  2.82442615e-02, -2.98964642e-02,
       -6.01075319e-02,  5.18690656e-02, -3.27159925e-02,  3.36654207e-02,
        6.50362535e-03,  2.42634658e-02,  1.82460185e-02,  2.83759712e-02,
       -7.28937012e-03,  6.50362535e-03,  2.16182030e-02,  8.58448322e-03,
        4.44204296e-04, -9.39436299e-02,  7.12761355e-02, -2.16035346e-02,
        3.03076331e-02,  2.89095212e-02, -6.47499570e-02,  1.81593058e-02,
        3.21227338e-02, -7.39886837e-02, -6.10920416e-03,  4.33716884e-02,
       -5.56316363e-02,  1.67430398e-02,  1.46989622e-02, -8.04084260e-02,
       -3.13698734e-02,  2.15313119e-03, -2.72638942e-02,  3.87254264e-04,
        1.07406202e-03,  5.56457279e-02, -5.42598110e-02,  2.00628059e-02,
        1.71393374e-02, -4.17721205e-02,  3.04560617e-02, -3.94749473e-02,
       -3.89880675e-02, -2.72374377e-03,  6.72100295e-02,  2.37009590e-02,
        2.65046982e-02,  4.47229846e-03, -4.98046207e-02, -1.01480399e-04,
       -1.41268293e-01, -1.55128856e-01, -1.23218078e-01, -1.41462639e-01,
       -1.21332187e-01, -1.22798322e-01,  5.90509060e-02,  4.85944429e-02,
        3.94542018e-03, -2.72923297e-03,  1.06972543e-02,  1.54282155e-02,
        1.09351854e-02,  1.47281191e-02,  6.14759980e-02,  2.57390884e-03,
        1.24744744e-02,  1.21919705e-02,  5.73832028e-02,  4.04734017e-03,
       -4.59134315e-02, -2.02943682e-02, -5.88927292e-02, -4.38636432e-02,
       -3.70807730e-02, -4.05862388e-02, -3.42688280e-02, -1.64434542e-02,
       -4.56089291e-02, -6.95823039e-02, -4.26817603e-02, -2.78709889e-02,
       -5.20738378e-02, -4.57335797e-02,  1.22664624e-04,  4.01033162e-02,
        2.59386019e-02,  1.39310140e-02,  1.70051488e-02,  1.75697844e-02,
        1.01293896e-02,  2.63111486e-03,  1.30195878e-02,  2.15934843e-02,
        1.83616832e-02,  7.97311282e-03,  1.79444275e-02,  1.51967140e-02,
        7.92174449e-03, -6.61850288e-02,  2.10032889e-02,  7.78720493e-03,
       -7.65921828e-02,  1.48922158e-02,  1.07481435e-02, -6.68395439e-02,
        2.07400405e-02,  3.78730482e-03, -7.41013038e-02,  7.45744838e-03,
        3.20694705e-03, -3.10150253e-02,  2.76969688e-03, -1.01443609e-02,
        2.89112662e-02, -5.07133463e-02,  2.41043871e-02,  1.14072981e-02,
       -4.46014042e-02,  2.78087907e-02, -3.93398676e-02, -7.01012458e-02,
       -1.17974512e-02, -1.79110027e-02, -6.35419851e-02, -1.97227241e-02,
       -4.49228213e-02, -7.99133457e-02, -3.81057448e-02, -2.39028731e-02,
       -2.07631789e-02, -2.24556504e-02, -2.31251049e-02, -3.15681550e-02,
       -2.31903512e-02,  4.78919340e-02,  3.90845080e-02, -6.05749037e-04,
       -4.96164662e-03,  6.50822990e-03,  1.22130103e-02,  6.02733855e-03,
        1.31146945e-03,  4.64427888e-02, -2.66459035e-03,  9.40182182e-03,
        6.17119778e-03,  3.68668281e-02,  2.66710479e-03, -2.10365154e-02,
       -2.20498356e-02, -7.16308199e-02, -4.05158158e-02, -2.90254183e-02,
       -4.25558729e-02, -2.76888312e-02, -1.09865509e-02, -2.49446799e-02,
       -7.13737815e-02, -4.17849440e-02, -2.55946176e-02, -4.96897480e-02,
       -4.15507959e-02,  6.58693379e-04,  4.33734252e-02,  2.38922365e-02,
        1.43800944e-02,  1.67351960e-02,  1.73716864e-02,  1.47082843e-02,
        6.15383767e-03,  3.73441506e-02,  1.92361211e-02,  1.80470087e-02,
        1.46676523e-02,  3.29274260e-02,  1.58261517e-02,  1.68986055e-02,
        2.96082853e-02, -2.69537646e-02,  3.34591279e-02,  1.79966632e-02,
       -5.34160887e-02,  2.52558255e-02,  2.80906811e-02, -2.83181885e-02,
        4.20327883e-02, -2.50439418e-03, -6.43415129e-02,  5.48282491e-03,
        1.17033030e-02, -1.47732489e-02,  1.32945786e-02,  2.54549329e-02,
        3.12919667e-02, -3.17845984e-02, -6.77239873e-03,  3.41447309e-02,
        3.46978050e-03,  1.33281983e-02,  6.40092726e-03, -1.03029101e-02,
        1.25175094e-04,  4.94239382e-02,  2.62787088e-02, -9.32902550e-02,
       -2.62879102e-02, -2.32179282e-02,  2.09173766e-02,  1.37747456e-02,
       -9.76921452e-02, -1.05324855e-01, -1.56868459e-01, -1.71965874e-01,
        2.86087218e-02, -3.14417652e-03, -1.15777355e-02,  3.39503067e-03,
        7.88822375e-03,  5.75826248e-03,  5.04423949e-03,  5.23440218e-03,
        2.64685045e-02, -7.93361579e-03,  7.81921251e-03,  5.12516607e-03,
        2.53705893e-02,  4.71590687e-03,  4.75840333e-03,  2.90130467e-02,
        2.17279987e-02,  1.94530764e-02,  1.22924736e-02,  2.02511496e-02,
        2.11346974e-02,  6.44191618e-03,  2.20723727e-02,  2.62067542e-02,
        1.40605200e-02,  1.76322799e-02,  3.09448218e-02,  1.92511896e-02,
       -3.90687670e-02,  1.41103741e-02,  2.39778584e-03,  2.45010199e-03,
        1.46652175e-03, -1.00723014e-03, -1.02402313e-02, -1.21022573e-02,
       -3.24320750e-02,  3.49842588e-03,  8.13917185e-04, -1.10497440e-02,
       -3.19511151e-02,  1.94676098e-03,  4.07273860e-02,  4.47615170e-02,
        6.18488908e-02,  2.22163769e-02, -8.87395102e-03,  4.07273860e-02,
        6.50870581e-02,  4.34962992e-02,  1.35099412e-03, -2.00346521e-02,
       -6.52539552e-02, -3.80534408e-02, -4.88810698e-02,  3.66963518e-03,
        9.83585430e-03,  1.14359804e-02,  7.23785639e-03, -1.71503263e-03,
        3.66963518e-03,  2.50519313e-02,  1.01585141e-02, -1.84708897e-02,
       -2.55310066e-02, -8.92693904e-02,  2.63585926e-02,  1.13156827e-02,
        3.57064291e-02,  3.94213649e-02,  3.94324817e-02,  3.42880200e-02,
        1.35219424e-02,  3.57064291e-02,  4.16855166e-02,  2.19243724e-02,
        2.37204115e-02, -3.48570064e-02, -7.03740629e-02, -2.36646515e-02,
       -3.36057075e-02,  2.50816815e-02,  2.16795161e-02,  2.94419448e-02,
        9.77989293e-03,  1.06642698e-02,  2.50816815e-02,  2.83860606e-02,
        2.99679683e-02,  1.82648182e-02, -2.28207622e-02, -1.13141724e-01,
        9.45170720e-03, -1.10833981e-02, -5.88751882e-03, -8.55781421e-03,
       -2.01629469e-01,  6.25106893e-02, -6.59904233e-02, -1.30932569e-02,
       -9.81277342e-03]), array([ 2.94393517e-03,  1.71354303e-03,  2.16597283e-03, -5.85800703e-03,
       -9.46481288e-03, -1.89399302e-02, -3.87706983e-03, -1.06852065e-02,
       -2.31549647e-02, -4.33115480e-04, -1.90473574e-03, -2.11052422e-02,
        1.52299020e-02,  1.15611840e-04, -1.51734514e-02, -1.21834377e-02,
        1.14780912e-02, -1.20707058e-03, -1.27746846e-02, -1.65415292e-03,
       -9.04200987e-03, -2.78192096e-02, -1.12839451e-02,  1.56116302e-02,
        1.58878734e-02,  3.68951728e-02, -3.16911506e-02,  1.18559595e-02,
       -2.90455200e-02,  9.32614725e-03, -1.80807138e-02,  3.54607045e-03,
       -2.21997710e-02,  3.42213207e-02, -1.80314639e-02,  5.36007176e-03,
       -1.20073018e-02,  7.65319537e-02,  9.12384983e-03, -8.34150544e-02,
        1.51786698e-03, -1.95871138e-02, -3.10263151e-02,  3.38559240e-04,
        1.26654728e-03, -4.68816863e-03,  2.84361775e-04,  1.10247915e-03,
       -4.71963116e-03,  1.59163540e-03, -1.88198703e-02, -3.16559573e-02,
        1.27173649e-03, -1.98578814e-02, -2.95436368e-02,  8.78795129e-03,
        3.22560452e-03,  1.72987371e-03, -3.38319471e-03,  1.26011094e-04,
        7.41411390e-04, -4.55751582e-03,  6.00561364e-03,  1.14208901e-02,
       -7.28310175e-02, -1.43124985e-02,  1.16389042e-02, -8.81583717e-03,
        5.84616476e-03, -5.27741426e-02,  5.10214505e-02, -4.53804909e-02,
        3.81864274e-02, -6.64690269e-03,  8.75343155e-03, -1.07665658e-02,
        1.26805830e-02,  2.28458378e-01, -6.19556286e-02, -6.25607781e-01,
        2.82218097e-03,  3.81728170e-03, -1.08819045e-03,  1.82160604e-02,
        2.87096434e-03,  2.25075297e-02,  1.32603830e-02, -5.49437284e-05,
        1.89655762e-02,  2.53407887e-02,  9.08585483e-03,  2.36663718e-02,
       -2.22708858e-02, -2.96768576e-03, -2.43155352e-02,  1.23572998e-02,
        3.20997039e-02,  1.67895189e-02,  1.90645120e-02,  3.49210784e-03,
       -5.94292829e-03,  9.20543831e-03, -2.48192836e-02, -3.20278899e-02,
       -1.76039130e-02,  5.20857239e-02, -6.00431436e-03,  3.09988668e-02,
       -1.24321703e-02,  3.15564868e-02, -1.54297963e-02,  1.66203349e-02,
       -2.78393661e-02,  3.65172459e-02, -1.09086473e-03,  2.66793588e-02,
       -1.62013721e-02,  3.29970792e-02, -2.56500668e-02, -3.89542864e-02,
        3.36786644e-02, -1.65012778e-02, -2.21203893e-02,  1.87376683e-02,
       -5.60832364e-02, -4.08068884e-03,  2.15231789e-02, -5.74916871e-02,
       -2.04538368e-03,  1.93524148e-02, -2.80719067e-02, -1.90458189e-02,
       -6.08395059e-04,  1.83600416e-02, -5.80835105e-03, -1.80400090e-02,
        8.96005143e-03, -3.69295339e-02, -2.89936194e-03,  2.71984030e-02,
       -5.98564923e-02,  7.61450781e-04,  8.99752337e-02, -2.15860828e-03,
       -1.10227937e-02,  7.58917726e-03, -2.16369687e-02, -8.08239917e-03,
        2.58954742e-02,  5.11023231e-02, -3.95011249e-02,  2.33481982e-02,
       -1.16352129e-02,  1.28902090e-02, -1.55657204e-02, -2.33300345e-02,
        3.43606073e-02, -1.20202522e-02, -2.04856967e-04,  9.50233811e-02,
       -1.56052961e-03, -8.94553025e-04, -2.63183692e-03,  9.02635977e-03,
       -1.38837093e-03, -2.78508654e-03,  5.19416517e-03, -3.41017317e-03,
       -4.67575033e-03,  1.32107446e-02, -5.33941153e-04,  4.63602030e-03,
       -1.50181264e-02, -3.13308703e-03,  1.21730567e-03, -1.36754796e-03,
        1.37195355e-02,  3.52953848e-03,  4.54140282e-03, -2.21702990e-03,
       -7.56097549e-03, -6.81917376e-03, -1.21474525e-02, -2.07169832e-02,
       -2.57964429e-02,  1.58076613e-02, -2.70571749e-02, -1.02253616e-02,
       -3.82263961e-02,  5.29564277e-02, -1.63630110e-02,  2.68030280e-02,
       -5.36417951e-03,  2.34484973e-02, -1.55766033e-02, -1.41146295e-02,
       -4.65272075e-02, -5.83383009e-03,  2.49046592e-02,  2.47468583e-02,
       -1.05174676e-02, -1.20280020e-03, -3.87790443e-03,  2.17251026e-03,
       -8.02848461e-03, -1.05174676e-02,  4.60424229e-03, -8.77330875e-03,
        8.40432285e-03,  8.28850670e-03, -1.61817798e-02,  1.66623748e-02,
       -4.00370702e-04, -1.05174676e-02, -1.20280020e-03, -3.87790443e-03,
        2.17251026e-03, -8.02848461e-03, -1.05174676e-02,  4.60424229e-03,
       -8.77330875e-03,  8.40432285e-03,  8.28850670e-03, -1.61817798e-02,
        1.66623748e-02, -4.00370702e-04,  1.15929378e-02,  2.59035257e-02,
        2.47213395e-02,  2.29290084e-02, -7.01079928e-03,  1.15929378e-02,
        2.86344361e-02,  2.11307996e-02, -2.72626526e-02,  4.27405480e-02,
       -5.09979568e-02, -2.10131445e-03,  1.78095846e-02, -1.90433803e-02,
       -1.57850103e-02, -1.48197500e-02, -1.66661259e-02, -1.57506916e-02,
       -1.90433803e-02, -1.37377592e-02, -1.22723776e-02,  8.06005802e-02,
        1.77759903e-02, -3.14829562e-02,  1.36418746e-02,  2.18937712e-02,
       -2.02653533e-03,  5.94170576e-03,  5.72750172e-03,  1.05716371e-03,
       -5.38195395e-03, -2.02653533e-03,  5.79736528e-03,  2.76424455e-03,
       -2.35755425e-02,  2.89309176e-02, -4.49524079e-02, -1.30685813e-02,
        5.60838402e-02, -4.79000692e-03, -8.30830230e-03,  3.82602317e-03,
       -6.37705147e-03, -9.85222914e-03, -2.88644460e-02, -1.99950164e-02,
       -1.96012753e-02, -1.31872365e-02,  1.45519996e-02,  7.94280608e-03,
       -3.70235370e-02, -9.23976948e-04,  3.48076499e-03,  2.69049261e-03,
       -3.69338908e-03,  1.16421846e-02, -2.41537241e-03, -1.39057123e-02,
        6.73419391e-03, -4.05772548e-03,  1.80877593e-02, -1.54267164e-02,
       -6.61179592e-03,  3.82358388e-03, -4.08979142e-02, -4.79434541e-02,
        1.12376571e-03,  2.19642857e-02, -2.49638928e-02,  3.25966922e-02,
        7.60268594e-02,  9.44443804e-02,  1.35607561e-01,  1.45499942e-01,
        2.82988877e-02,  3.23650582e-02,  1.02501847e-02,  1.10425643e-03,
        3.42377312e-02,  4.80227691e-02,  2.83809382e-02,  2.71125863e-02,
        1.23101230e-02, -6.11196047e-04,  8.51004997e-03,  4.37090833e-02,
        2.79088234e-02,  7.98148993e-03,  1.03433725e-02,  4.77199359e-02,
       -5.15078384e-03, -1.10290966e-02,  2.33116959e-02,  3.17874199e-02,
        2.26026598e-02,  1.56856628e-02,  6.86715903e-03, -3.80689716e-03,
       -9.60425413e-03,  3.17079218e-02,  2.25483367e-02,  2.58647489e-03,
       -4.66110284e-03,  3.05376432e-02, -3.05529699e-02,  5.67732885e-03,
        2.11517271e-02,  1.95868517e-02,  1.42805748e-02,  1.88937656e-02,
        1.66521672e-02,  1.81222813e-03, -2.25918275e-02,  2.05838808e-02,
        1.64994278e-02,  1.23495377e-02, -1.73888987e-02,  1.86972368e-02,
        2.12528991e-02,  5.31108038e-03,  2.48674094e-02,  1.29521164e-02,
       -3.37794565e-04,  2.00627740e-02,  1.82883605e-02,  2.73246439e-03,
        2.27474029e-02,  9.39481633e-03, -4.49296146e-03,  1.43740141e-02,
        9.54767675e-03,  5.30219393e-04,  6.77235264e-03,  2.12742525e-02,
        3.21699492e-02,  1.67952672e-02,  1.90615334e-02,  2.68620035e-02,
        8.07627589e-03,  2.39541684e-02, -2.43584410e-02, -3.00112577e-02,
       -1.95833810e-03,  2.58000544e-02,  2.09142802e-02,  3.95489388e-02,
        6.37735669e-02,  3.22845223e-02,  4.76306277e-02, -2.86736927e-02,
       -1.66318833e-02, -1.76863884e-02, -8.41190133e-03, -1.58177095e-02,
       -1.23865033e-02,  1.77131149e-02,  5.90968620e-03,  3.51420363e-02,
        5.07972882e-02,  3.24935243e-02,  3.72764364e-02,  2.33930382e-02,
        7.01535169e-03,  1.16949335e-02,  5.02349295e-02,  3.71700181e-02,
        2.43429935e-02,  2.28735380e-02,  6.24800358e-02,  1.97000298e-04,
       -7.30762538e-03,  3.03313578e-02,  3.23734937e-02,  2.18782852e-02,
        2.22873994e-02,  1.20467692e-02,  3.15427461e-03, -6.57566817e-03,
        3.73985945e-02,  2.73243384e-02,  1.09181825e-02,  8.57456507e-03,
        3.08681572e-02,  5.09650104e-03,  6.90739791e-03,  2.26887702e-02,
        1.95442372e-02,  1.41696009e-02,  1.99652669e-02,  2.73203267e-02,
        9.22918508e-03,  7.72407695e-03,  2.11615217e-02,  1.68791058e-02,
        2.69796230e-02,  1.89867541e-02,  1.84963668e-02,  1.43401163e-02,
       -2.21106646e-02, -7.64993287e-03,  1.97944336e-02, -7.32516945e-02,
       -3.09403038e-03,  1.05882134e-02, -3.89276538e-02, -1.76912678e-02,
        3.03479556e-02, -9.19493729e-02,  8.10289940e-03, -1.33530868e-03,
       -1.36855564e-03,  8.83661110e-04, -6.72992872e-03,  1.69303750e-02,
       -3.70179990e-02, -5.09717984e-03,  6.80308369e-03, -4.98827498e-03,
       -8.79981454e-03,  2.05593161e-02, -4.66350419e-03,  6.50423221e-03,
       -4.17957192e-02, -3.86257145e-03, -3.11644524e-02, -4.24553950e-02,
        4.71150860e-02, -2.38189703e-02,  1.23621206e-01,  1.21612443e-01,
       -5.43368116e-02, -6.49653047e-02,  1.28538969e-01,  1.33443038e-01,
        1.73170773e-02, -4.39614572e-03,  1.87456909e-02,  1.47267765e-02,
        1.66926333e-02,  1.26686277e-02,  6.05777640e-03,  8.39682936e-04,
        1.56588256e-02,  2.10762528e-02,  1.67521470e-02,  3.75050838e-03,
        1.64100333e-02,  1.54629218e-02, -6.31764270e-02, -6.24179587e-03,
       -1.32106473e-03,  1.12816468e-02,  1.09588689e-02,  1.37885859e-02,
        7.28177961e-03, -3.72181214e-03, -4.66009866e-02,  2.18316620e-03,
        1.16590604e-02,  3.50633961e-03, -4.38939846e-02,  1.22749201e-02,
       -2.03414738e-03, -1.34945891e-02, -7.10859006e-04,  1.55475634e-02,
        1.19305698e-02,  9.58494988e-03,  3.20420495e-03, -2.52719487e-03,
       -6.44308432e-03,  6.86442218e-03,  1.13395254e-02,  7.02610280e-04,
       -6.51389602e-03,  1.42308835e-02,  5.61160311e-03, -5.70148185e-03,
       -1.34899615e-02,  3.26964322e-03,  1.83213251e-02,  5.61160311e-03,
        8.02710438e-03, -5.88671786e-03, -8.67603654e-03, -3.25991236e-02,
       -2.17379084e-02,  1.05360649e-01,  1.01326302e-01,  1.93375295e-02,
        3.43083781e-02,  1.28147113e-02,  5.92497645e-02,  1.01400168e-02,
        1.93375295e-02,  3.79175248e-02,  2.79792500e-03, -2.40840986e-02,
       -1.00729279e-02,  2.25243017e-02,  1.15486181e-01,  1.30508022e-01,
       -1.39542568e-02, -1.50353249e-02, -2.98176568e-02,  7.48716135e-04,
        1.69919834e-02, -1.39542568e-02, -1.01573580e-02, -3.64123591e-02,
       -3.90098333e-03, -2.24368542e-02, -2.11351322e-02,  1.33661897e-01,
        1.27764485e-01,  1.11406146e-03,  1.20039228e-02, -5.26109918e-04,
        2.90833720e-02,  5.21961575e-03,  1.11406146e-03,  6.52772766e-03,
       -1.13971134e-02, -2.33995015e-02, -8.70963961e-03,  4.62744006e-03,
        1.34702510e-01,  1.38806872e-01, -2.76877064e-03, -1.70245810e-02,
       -1.38152212e-01, -5.82178831e-03,  1.42106846e-04,  1.35933745e-02,
        2.19349119e-02]), array([ 1.31424435e-03,  2.78672818e-03, -1.12738094e-03, -2.77076360e-02,
        9.56225011e-02, -5.21482695e-02, -2.17702162e-02,  9.04550597e-02,
       -5.61741107e-02, -5.93305431e-02,  4.40277711e-02, -3.94273770e-02,
        2.14348493e-02, -6.01375778e-02,  1.85289268e-02, -3.15178266e-03,
       -5.48717404e-03,  4.81665708e-02, -2.70256026e-02, -8.77212610e-03,
        5.87110853e-02, -5.85296560e-02, -1.20983493e-02,  1.94951175e-02,
       -1.10213620e-02, -3.57627337e-02,  1.22140020e-02, -1.62788203e-02,
        1.41121729e-02, -6.72961197e-02,  2.74727523e-02,  4.25659126e-03,
        7.94254379e-03, -1.57178497e-02,  2.03693419e-02,  7.02215484e-03,
        2.32726386e-02, -5.86666139e-02, -9.53903364e-02,  2.48275695e-02,
       -4.27451919e-02,  1.36175860e-02,  1.29363788e-02,  8.12472020e-03,
        1.60586635e-02, -8.57895630e-04,  8.07499047e-03,  1.55968826e-02,
       -7.83965257e-04, -3.95480184e-02,  1.66378556e-02,  1.22567380e-02,
       -4.44507034e-02,  7.11569861e-03,  1.28354626e-02,  1.96456074e-01,
       -1.00240675e-01,  5.19569275e-02,  5.13088700e-02,  7.73672502e-03,
        1.41378178e-02, -1.10122614e-03,  1.13164621e-01,  3.55933968e-02,
       -4.48309778e-02, -5.30502894e-02,  4.98977198e-02, -4.70283187e-02,
        4.44832964e-02, -5.29155551e-02,  6.02651488e-02, -6.45964035e-02,
        6.75418160e-02,  3.19517464e-02, -2.83766393e-02,  2.46595595e-02,
       -2.07757851e-02, -1.17301428e-01, -8.50814076e-02, -5.04861995e-02,
       -6.60660010e-03, -9.24341174e-03, -1.67036498e-04, -5.99576960e-02,
        3.33132888e-02, -4.96622949e-03, -5.33336194e-02,  3.23262155e-02,
       -2.37522805e-03, -5.05218353e-02,  2.46568880e-02, -1.68321083e-03,
        9.23382057e-02, -1.52321123e-02,  1.45824137e-02, -1.40886867e-02,
       -3.47350436e-02,  5.30426781e-02,  9.65575216e-06, -4.35469045e-02,
        2.08918061e-02, -6.77109872e-05, -6.51307298e-02, -3.40758511e-02,
       -3.55659904e-02, -3.41521252e-02, -4.22617966e-03, -4.14764937e-02,
        6.14913796e-03, -7.09935039e-02, -2.15065471e-02, -4.14361335e-02,
        1.02970970e-03, -4.15116752e-02,  1.50590850e-02, -3.43307798e-02,
        6.07237210e-02, -1.96144981e-02, -4.94675826e-02,  2.11157169e-02,
        2.49021063e-02, -1.17773860e-02, -1.68929787e-02,  5.47938955e-03,
       -5.21119194e-02,  7.40266263e-02,  4.70387694e-03, -5.59316510e-02,
        6.88389184e-02,  2.90867088e-02, -2.78355375e-02,  5.39591451e-02,
        1.68369086e-03,  4.38280958e-04, -6.41865212e-02, -5.09591291e-04,
        8.76003906e-03, -2.64336779e-02,  7.58130788e-02,  5.26025576e-03,
       -6.28672570e-02,  5.53266917e-02, -5.72242191e-03, -2.20187770e-02,
        2.09317312e-03, -1.59610962e-02,  1.65639777e-02, -1.20555800e-02,
        2.35191671e-02, -2.04378995e-02,  2.54164546e-02,  1.77376205e-02,
       -3.29812216e-02, -3.18260293e-02,  1.23587185e-02,  3.88729473e-02,
       -4.86300624e-02,  1.60764113e-02, -3.63064492e-02, -1.14094787e-03,
       -1.15832634e-02,  1.54376899e-02,  1.18855682e-03,  2.85409364e-02,
        7.64066438e-03,  5.28775566e-02,  2.53830705e-02,  7.69217070e-03,
        4.41123124e-02,  3.54674788e-02,  6.88549930e-03,  4.86651126e-02,
       -2.77908638e-02, -4.81400210e-03, -6.14922202e-02,  2.08338313e-02,
        3.48464540e-02,  3.80515231e-03,  5.17523539e-02,  2.01079450e-02,
        8.02813895e-03,  2.93454551e-02, -4.00364448e-02, -1.19929088e-02,
       -2.00859302e-02, -2.74020527e-02,  1.32579086e-02, -3.11143823e-02,
        3.21392150e-02, -2.74050986e-02,  2.72875569e-02, -1.90789478e-03,
        6.01965142e-02, -2.70048037e-02, -1.55943003e-02,  2.53500509e-02,
        4.22437296e-03, -1.36107386e-02,  6.74048073e-03, -3.47630145e-02,
       -4.16592326e-03, -3.65238733e-03,  2.10899982e-03, -1.42316489e-02,
       -1.02998437e-02, -4.16592326e-03,  1.49568382e-02,  1.00877587e-02,
       -2.56346979e-02, -6.32259765e-02,  5.83932160e-02, -5.64978135e-02,
        4.01139559e-02, -4.16592326e-03, -3.65238733e-03,  2.10899982e-03,
       -1.42316489e-02, -1.02998437e-02, -4.16592326e-03,  1.49568382e-02,
        1.00877587e-02, -2.56346979e-02, -6.32259765e-02,  5.83932160e-02,
       -5.64978135e-02,  4.01139559e-02, -1.74273941e-02, -3.80319730e-02,
       -3.05043084e-02, -4.17384653e-02, -5.19240189e-03, -1.74273941e-02,
       -4.46628508e-03, -1.77943769e-02, -4.38118262e-02, -4.12714596e-02,
        5.52636549e-02,  7.00941439e-03, -3.95433061e-02, -6.57740306e-03,
       -1.24152411e-02, -1.51343571e-02, -4.07607299e-03,  5.15502692e-03,
       -6.57740306e-03,  9.81202566e-03, -1.71678204e-02, -5.19243954e-02,
       -2.47281644e-02,  3.16779159e-02, -3.10900323e-02,  1.88381078e-02,
        1.78831864e-02,  1.67280733e-02,  1.77368394e-02,  1.05448430e-02,
        9.93842895e-03,  1.78831864e-02,  1.67851592e-02,  1.81188934e-02,
       -3.21808257e-02, -4.04054628e-02,  4.05105124e-02, -2.14428552e-02,
        6.47216042e-03, -4.86746302e-02,  6.51211580e-02, -2.02516466e-02,
       -1.95340166e-02,  1.04825160e-01, -6.23854898e-02, -3.87973611e-02,
        9.21234810e-02, -2.41251136e-02, -3.39538056e-03,  8.35968885e-02,
       -1.02762469e-01, -2.67605058e-02,  1.90638535e-02, -5.24548166e-03,
       -1.17786720e-02, -5.82689783e-03,  1.22255170e-01, -3.11351527e-02,
       -5.91500763e-02,  2.80878516e-02,  7.06441411e-05, -6.55287910e-02,
       -8.63293134e-03, -2.24990089e-02, -2.73285759e-02,  1.49922533e-02,
        5.65587365e-02, -5.37911175e-02, -6.21640499e-02,  4.31009164e-02,
        5.34055101e-02,  5.80625976e-02,  2.43033315e-02,  1.40444153e-02,
       -1.89128157e-01, -2.01176173e-01,  5.77659003e-03, -1.68834410e-02,
       -5.65168338e-02, -4.33069752e-02, -2.71046387e-02, -3.12397870e-02,
       -2.11765412e-02, -1.49718154e-02, -3.59452811e-04, -6.14328697e-02,
       -2.86454522e-02, -1.90946738e-02, -4.34276748e-03, -4.47115958e-02,
        1.09738018e-01,  9.33426442e-02,  2.92279186e-02, -2.38793352e-02,
        9.50077521e-03,  1.80558154e-02,  2.53389522e-02,  2.60319922e-02,
        1.32111984e-01,  2.13414989e-02,  1.38755049e-02,  2.64594347e-02,
        1.25910846e-01, -1.33476801e-02, -4.59640119e-02,  1.40819372e-02,
        1.52372692e-04, -4.36991513e-03, -3.09348567e-03, -7.97866146e-03,
       -1.05686600e-02, -7.63571628e-03, -3.22065697e-02, -1.48439624e-03,
       -4.56991266e-03, -9.78804958e-03, -3.10240119e-02, -4.43037383e-03,
       -6.17961015e-02,  2.11486830e-02, -9.43994331e-03, -5.24502235e-02,
        4.47006291e-02, -1.60660966e-04, -6.85070790e-02,  3.41686820e-02,
       -2.33638917e-03, -3.61368519e-02,  4.49045830e-02,  1.44519012e-03,
       -2.06959846e-02,  1.10512940e-02, -1.16867025e-02, -2.54744254e-02,
       -3.47696274e-02,  5.30027092e-02,  1.00860478e-05, -6.95298947e-02,
        8.36582478e-03, -6.94445398e-03, -9.01244442e-02, -2.57566466e-02,
       -2.89596357e-02, -3.72566942e-02, -6.65537309e-02, -2.23904237e-02,
       -3.68132572e-02, -8.84327233e-02, -3.71440719e-02,  1.28571388e-02,
        1.40212438e-02,  3.54021532e-02,  2.58919039e-02,  1.32263046e-02,
        6.67209921e-03,  2.53908577e-03, -2.17388326e-02, -5.08998967e-02,
       -4.17598535e-02, -2.30928323e-02, -3.36426693e-02, -2.23988370e-02,
       -5.15528084e-03, -1.27951151e-02, -5.87471243e-02, -2.93500148e-02,
       -2.30159410e-02, -2.98121716e-02, -5.05459233e-02,  8.95416121e-02,
        7.99226665e-02,  2.48779020e-02, -2.63757031e-02,  2.63629528e-03,
        9.50352553e-03,  8.20723624e-03,  7.04430764e-03,  9.35558617e-02,
        5.72688643e-03,  6.21120525e-03,  8.06736465e-03,  7.90113828e-02,
       -1.41507759e-02, -7.54739109e-03,  1.65103210e-02, -7.67402312e-04,
       -4.00976042e-03, -1.94659641e-03, -5.93201436e-03, -1.21128026e-02,
       -6.84800131e-03,  1.14525305e-02, -2.36435875e-03, -3.29262215e-03,
       -1.22755493e-02,  4.54733661e-03, -3.73504396e-03,  2.21004839e-02,
       -1.31573885e-02,  6.67893115e-02,  6.22147502e-04, -6.99991849e-02,
        6.80059743e-02,  1.77977106e-02, -1.80068844e-02,  7.47059760e-02,
       -1.60374610e-02, -9.88500608e-02,  5.65342174e-02,  5.55012580e-03,
       -8.61647110e-03,  1.42701759e-02,  1.81675021e-02,  1.08266810e-02,
       -2.87217125e-02,  7.71527614e-02,  3.15309304e-02,  2.17969738e-02,
        5.82784604e-02, -2.46856471e-02, -1.41902610e-02,  2.40582034e-03,
        1.81747574e-02,  3.73320394e-02,  3.21860980e-02,  1.29570961e-02,
        4.52843127e-02, -2.41250333e-02, -9.14318713e-02, -9.75573538e-02,
       -1.85275588e-01, -2.06163026e-01, -2.50168069e-03,  1.80853522e-03,
        2.86161387e-03,  3.96287192e-02,  3.34165727e-02,  1.63859992e-02,
        2.22323792e-02,  1.61784291e-02,  9.42921141e-03,  6.30126763e-03,
        8.48706549e-03,  3.35586556e-02,  2.19919959e-02,  8.04628881e-03,
        1.01728705e-02,  1.81817987e-02, -6.72986378e-02,  1.49045617e-02,
        3.13556474e-03, -1.99027164e-03, -2.46064146e-03, -4.37532905e-03,
       -7.64112233e-03, -3.65225354e-03, -3.56264370e-02,  2.32909709e-03,
       -2.88611892e-03, -6.94334220e-03, -3.15575053e-02, -2.43400458e-03,
        5.12820771e-02,  5.65274630e-02,  6.30872268e-02,  1.17815240e-02,
        1.15922463e-02,  1.94988671e-02,  2.98258042e-02,  2.06578140e-02,
        6.77174821e-02,  6.58522064e-02,  1.37615304e-02,  2.58402625e-02,
        7.58916696e-02,  1.24014301e-02, -1.54002603e-02,  3.61078467e-03,
       -1.09074564e-03,  7.53407492e-03, -5.67098175e-03, -1.54002603e-02,
        8.17442473e-03, -4.54619602e-03, -2.72278011e-02, -5.85121391e-03,
       -3.92155809e-02,  1.33203894e-02,  1.51952539e-02, -4.24115030e-02,
       -3.23472510e-02, -3.77228960e-02, -2.53110746e-02, -3.27038333e-02,
       -4.24115030e-02, -1.76469408e-02, -2.95306146e-02, -5.75029034e-02,
       -5.71798494e-03, -4.65972892e-02,  3.23401978e-02,  3.25989576e-02,
        2.81154172e-03, -1.93485900e-02, -3.66510916e-03, -3.20271547e-02,
       -3.19629529e-03,  2.81154172e-03,  3.38621984e-05,  2.64646116e-02,
       -7.39862355e-03, -7.92515025e-03, -2.22022588e-03, -5.78856154e-02,
       -5.18427433e-02,  1.27806486e-02,  2.05888561e-02,  1.85680638e-02,
        2.18764431e-02,  2.56004586e-03,  1.27806486e-02,  1.16050448e-02,
        1.35078451e-02, -4.39261154e-03, -2.43195658e-02, -7.13953180e-02,
        7.09248220e-02,  6.17234932e-02, -4.01551704e-02,  2.85778255e-02,
       -7.10159198e-02,  8.68038161e-02,  8.10146819e-02, -9.75283448e-03,
       -9.98424977e-03]), array([-2.44770601e-03, -3.11010433e-04, -8.74436923e-03, -1.91042002e-02,
       -9.54436157e-03, -2.03842831e-02, -1.65784636e-02, -1.00056341e-02,
       -2.55860612e-02, -2.20136143e-02,  3.92321140e-03, -1.31858701e-02,
        4.92557085e-03,  1.99107721e-03, -9.77321492e-03, -1.92042712e-02,
       -1.07037668e-02, -2.87950859e-03, -1.20286580e-02, -9.18660725e-03,
       -2.79710866e-03, -3.64406236e-02, -7.01366170e-03,  1.70175928e-03,
        9.91720928e-04,  5.76516901e-02, -4.36549828e-02,  3.65513623e-02,
        3.96604398e-03, -2.10116650e-04, -5.43782983e-03, -1.67507306e-02,
        2.30576630e-02,  2.89567634e-02, -1.85188196e-02,  8.86114915e-03,
        4.45993714e-03, -8.56461557e-03,  2.26562962e-02,  3.16888759e-02,
        1.70434155e-02,  2.19291171e-02, -3.75225092e-02, -9.53966791e-03,
       -1.27424007e-02, -1.32209226e-02, -9.23199782e-03, -1.27362430e-02,
       -1.28507398e-02,  1.38592942e-02,  1.82390079e-02, -3.95083863e-02,
        2.03313984e-02,  2.55834401e-02, -3.34406033e-02, -8.43636142e-02,
        3.91057430e-02, -3.41031241e-02, -8.62076538e-03, -8.57886920e-03,
       -1.23482555e-02, -1.14802059e-02, -8.94308087e-02,  4.56671703e-02,
       -4.53601573e-02,  3.18467178e-02, -2.70139310e-02,  2.22922537e-02,
       -1.76878997e-02, -4.82769746e-02,  4.56326316e-02, -3.93771296e-02,
        3.17472417e-02, -1.09671155e-02,  1.54508666e-02, -2.00109304e-02,
        2.45761514e-02, -4.30954851e-01,  2.04873932e-01,  2.22191763e-01,
        2.72995237e-03,  2.81180505e-03,  8.26787218e-03,  1.17062029e-02,
        8.92452436e-04,  1.82751900e-02,  9.43140016e-03,  2.16332595e-03,
        1.73437858e-02,  2.96760918e-03,  8.90405953e-03,  4.55928055e-03,
       -2.49907164e-02, -3.78668539e-04, -3.11834527e-02,  1.08217347e-02,
        1.40185849e-02,  3.53436121e-03,  7.15078563e-03,  5.07550868e-03,
        7.94363225e-03,  1.24682597e-02,  5.96584953e-03,  1.60640900e-03,
        3.03797066e-02,  4.26936714e-02, -1.96133837e-02,  1.33470254e-02,
        2.78665666e-02, -4.23335691e-05, -1.16757870e-04, -3.70528050e-02,
        4.08307999e-03,  2.04493837e-02, -8.46713982e-03,  7.67804989e-03,
        6.54150114e-03,  6.56691003e-02,  4.85502041e-02, -4.01678376e-02,
        8.87728906e-04, -6.87712325e-03, -1.32144846e-02,  8.95887003e-02,
       -5.37953168e-02,  6.02232140e-02,  9.15749823e-02, -5.16626096e-02,
        6.59283174e-02,  5.17399185e-02, -3.82364302e-02,  1.04370048e-02,
       -5.27262570e-02,  2.59648268e-02, -3.76567713e-02,  2.93481451e-02,
        4.98774579e-02, -3.84233839e-02,  4.33044583e-02,  9.55351102e-02,
       -4.75422329e-02,  6.94132751e-02,  5.29682348e-02,  2.72814872e-02,
        3.31791177e-02, -3.91942618e-02,  5.14810312e-03, -2.02551567e-02,
        3.55110378e-02,  5.13112682e-03, -1.85790788e-02,  6.20397722e-03,
        1.87485710e-02, -7.53497813e-02,  4.56577180e-02, -7.42192823e-02,
        8.67817130e-02, -3.55383708e-02,  2.91523254e-02,  4.89242232e-02,
       -1.08917517e-02,  6.47352838e-03, -7.57519239e-03,  4.38961547e-03,
       -2.95766260e-02, -1.24846484e-02,  5.37120081e-03, -2.69833387e-02,
       -9.69385264e-03,  5.80842050e-03, -2.88531711e-02, -1.34857719e-02,
       -6.99205608e-04,  2.70199710e-02,  1.64725185e-02, -1.43036249e-02,
        2.99802809e-03, -1.91563356e-02, -1.14928075e-02,  7.80018704e-03,
       -2.27819532e-02, -4.81470680e-03,  1.11180432e-02, -1.04564606e-03,
       -2.08626532e-03, -2.85467818e-02, -2.48011088e-02, -3.29800708e-02,
       -4.35745338e-02,  8.58335977e-04, -1.87977828e-02, -2.34901690e-02,
        1.73476920e-02, -7.95508441e-02,  7.85677315e-03, -8.52772662e-02,
       -4.80013330e-02, -1.51942741e-02,  4.61214910e-02,  4.42261047e-02,
       -1.69806215e-02, -3.89085697e-02, -3.65919763e-02, -2.42459477e-02,
        7.25290449e-03, -1.69806215e-02, -1.27968776e-02, -3.22009530e-02,
        1.34230694e-04,  4.11444945e-02, -4.68794519e-02,  6.34132143e-02,
       -4.65654447e-02, -1.69806215e-02, -3.89085697e-02, -3.65919763e-02,
       -2.42459477e-02,  7.25290449e-03, -1.69806215e-02, -1.27968776e-02,
       -3.22009530e-02,  1.34230694e-04,  4.11444945e-02, -4.68794519e-02,
        6.34132143e-02, -4.65654447e-02,  1.18412497e-02,  6.37615503e-03,
        5.79712284e-03,  7.74163126e-03,  9.14455727e-03,  1.18412497e-02,
        1.10441624e-02,  5.31501712e-03,  7.77133524e-04,  1.80842079e-02,
       -3.40041645e-02,  4.06466659e-02, -1.98548667e-02,  2.89612213e-02,
        3.07747596e-02,  3.71705520e-02,  1.11547763e-02,  1.73644669e-02,
        2.89612213e-02,  2.67867118e-02,  3.28927287e-02,  3.35993303e-02,
       -8.76079260e-02,  5.37433192e-02, -1.99314766e-02,  4.60025295e-02,
       -1.59476663e-02, -2.70121166e-02, -2.33275386e-02, -2.85987751e-02,
       -1.75164591e-03, -1.59476663e-02, -1.35725448e-02, -1.81342973e-02,
        1.27851925e-02, -4.30895346e-02,  1.73428253e-02,  3.33517634e-02,
       -1.29440090e-02,  4.21616183e-03,  4.28786337e-03,  1.40684129e-02,
       -2.75808844e-02, -1.56373134e-02, -3.40876309e-02, -9.66883440e-03,
       -6.58516283e-03,  3.09061448e-03, -4.30047498e-02, -2.50676600e-02,
       -6.98284132e-02,  2.05577763e-02,  3.75653809e-03,  2.45190550e-03,
        8.23622526e-03, -1.05169248e-02, -4.46333596e-03, -1.21786930e-02,
        6.56682971e-03,  2.59805462e-03,  1.76977525e-02, -7.13552510e-03,
        1.31818525e-02,  2.36704165e-02,  4.28540508e-02, -2.68236530e-02,
        1.62545497e-02,  4.89711036e-02, -2.76311643e-02,  3.43371933e-02,
       -9.57505027e-02, -1.09781030e-01, -1.88143448e-03, -1.32513958e-02,
       -1.24857754e-01, -1.43930558e-01, -1.87598655e-02,  4.10124322e-03,
        1.07841181e-02,  2.72694591e-02,  2.07145023e-02,  2.54026270e-02,
        1.73978552e-02,  1.04878611e-02, -1.37839962e-02,  1.73867663e-02,
        2.24763117e-02,  1.50744375e-02, -1.20370851e-02,  3.02786105e-02,
       -1.26498869e-03, -1.13557457e-02, -3.10756364e-03,  2.67896563e-02,
        3.17485340e-02,  2.19291699e-02,  1.32904169e-02,  6.72827290e-03,
       -6.82255157e-03,  4.74801686e-03,  3.16136831e-02,  1.09494576e-02,
       -6.76579174e-03,  2.96611322e-02, -2.10800434e-02,  5.07267713e-03,
        2.25553918e-03,  1.05290340e-02,  6.80289530e-03,  1.25010359e-02,
        1.38663940e-02,  8.06735097e-03, -1.51969077e-02,  5.24454098e-03,
        8.76448120e-03,  1.22423623e-02, -1.41858577e-02,  1.00198795e-02,
        1.94745972e-02,  9.62807056e-03,  2.29439083e-02,  2.39950056e-03,
       -9.15110758e-03,  1.35253378e-02,  9.05575834e-03, -3.96707193e-03,
        1.54268511e-02, -2.49568209e-03, -7.79243622e-03,  9.30781131e-03,
        1.67872922e-02,  1.20566379e-02,  1.04886212e-02,  2.11362118e-02,
        1.40275406e-02,  3.53834824e-03,  7.13640989e-03,  1.80018288e-02,
        1.12731400e-02,  1.66989264e-02,  3.48418872e-04, -2.54864816e-03,
        2.22491907e-02,  3.55910508e-02, -7.03431797e-04,  3.88226550e-02,
        3.78760862e-02,  7.09346294e-03,  1.96089384e-02, -3.03277150e-02,
       -2.23366534e-02, -2.29233285e-02, -1.04368943e-02, -1.51073334e-02,
       -1.04179716e-02, -8.37747219e-04,  5.59750593e-03,  9.66942247e-03,
        2.74416891e-02,  2.04345759e-02,  3.09735806e-02,  2.00504820e-02,
        5.44328013e-03,  3.22077986e-03,  1.97555734e-02,  2.64565126e-02,
        2.07596244e-02,  6.29316793e-03,  3.80415205e-02, -3.99544485e-03,
       -1.16079586e-02, -1.11107168e-03,  2.65465405e-02,  2.64062966e-02,
        2.51224641e-02,  9.45424807e-03,  6.45378940e-03, -1.14649630e-02,
        1.17034545e-02,  3.22340874e-02,  9.07297144e-03, -8.82875843e-03,
        2.90982461e-02,  1.41579885e-02, -1.12833853e-03,  3.93251934e-03,
        9.80892403e-03,  6.35978639e-03,  1.04353862e-02,  1.67176466e-02,
        4.63949495e-03,  4.05905370e-03,  6.80032875e-03,  8.02091797e-03,
        1.64073780e-02,  4.48937726e-03,  9.10127974e-03,  5.97366827e-02,
       -2.99681192e-02,  2.60992290e-02,  9.71214069e-02, -6.40330705e-02,
        6.56614952e-02,  7.07071414e-02, -3.48520274e-02,  4.03024771e-02,
        1.29345342e-01, -7.99408225e-02,  7.12514466e-02,  1.59794723e-02,
       -4.20502313e-03,  4.32421633e-03,  1.44649825e-02,  5.86632991e-02,
       -3.79625515e-02,  4.51128365e-02,  6.51131526e-03, -2.15927525e-02,
       -1.38224056e-02,  3.33553140e-02, -2.55973147e-03,  1.72363157e-02,
       -7.19461990e-02, -3.61650114e-02, -4.49273884e-02, -1.18596900e-01,
       -2.58736513e-02, -1.13682767e-01,  2.14570873e-01,  2.09804577e-01,
       -5.98456717e-02, -8.82585294e-02,  1.41118121e-01,  1.32258785e-01,
        6.33311526e-02,  1.93279673e-03, -2.52790929e-03,  2.40056322e-03,
        7.17847382e-03,  1.42454824e-02,  1.23087992e-02,  1.30062892e-02,
        5.98920739e-02, -1.05761841e-03,  1.07751482e-02,  1.26211358e-02,
        5.87428647e-02,  4.84181794e-03, -3.89724404e-02, -1.19395337e-02,
       -2.02089211e-02, -6.98631845e-03, -8.49949633e-04, -1.54373888e-03,
       -2.74013617e-03, -2.25683051e-04, -3.40009449e-02, -2.10221966e-02,
       -1.00039721e-03, -2.02120244e-03, -4.12827246e-02, -5.64801386e-03,
        5.65819917e-02, -1.47346470e-02, -2.46482138e-02, -3.25349903e-03,
       -5.33121940e-05, -1.84266667e-03,  2.51482289e-04,  5.48717743e-03,
        4.89166735e-02, -2.50706343e-02, -5.39016174e-04,  2.52076868e-03,
        4.53522689e-02, -2.40464774e-03, -1.71412788e-02, -4.51288304e-02,
       -3.73692852e-02, -4.41797560e-02, -1.23272909e-03, -1.71412788e-02,
       -2.78249103e-02, -1.59572581e-02, -4.16841258e-03, -1.86391984e-02,
        2.38600904e-03, -2.72180751e-02, -2.95556263e-02,  1.22600421e-02,
       -1.46248442e-03,  6.91994047e-03, -1.34986106e-02,  8.21552694e-03,
        1.22600421e-02,  7.95811667e-03,  4.74437124e-03, -4.58455082e-04,
       -3.70719478e-03,  6.44774225e-03, -3.72431293e-02, -4.29311029e-02,
       -1.31632223e-03,  4.69051751e-02,  2.58780118e-02,  5.36728586e-02,
       -4.84524024e-03, -1.31632223e-03,  2.34528445e-02, -2.02125629e-02,
        1.07582384e-02, -1.70512284e-02, -1.15615322e-01,  1.39058756e-01,
        1.17130209e-01, -2.47754572e-02, -2.80928742e-02, -2.82193153e-02,
       -2.88843721e-02, -1.37755948e-02, -2.47754572e-02, -1.86623761e-02,
       -2.63698282e-02, -1.62202612e-02, -8.82676915e-03, -2.94891610e-02,
       -4.24572339e-03, -7.50427596e-03,  2.68992004e-02, -8.08420917e-03,
       -4.46903922e-02,  2.87318550e-02, -3.62814911e-02, -1.47254232e-02,
        2.76010510e-02])])
        whiten = False
        explained_variance = np.array([33.85108042742329, 2.5392782359167514, 1.0965502349220406, 0.9843573510996297, 0.7544351114623395, 0.6721915644719091, 0.6317360557477203, 0.551369466388124, 0.5243214541380234, 0.41829426378042855, 0.3877635452307354, 0.33302214340637537])
        X = X - mean

    X_transformed = np.dot(X, components.T)
    if whiten:
        X_transformed /= np.sqrt(explained_variance)
    return X_transformed

# Preprocessor for CSV files

ignorelabels=[]
ignorecolumns=[]
target=""
important_idxs=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560]

def preprocess(inputcsvfile, outputcsvfile, headerless=False, testfile=False, target='', ignorecolumns=[], ignorelabels=[], trim=False):
    #This function streams in a csv and outputs a csv with the correct columns and target column on the right hand side. 
    #Precursor to clean

    il=[]

    ignorelabels=[]
    ignorecolumns=[]
    target=""
    important_idxs=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560]
    if ignorelabels == [] and ignorecolumns == [] and target == "":
        return -1
    if not trim:
        ignorecolumns = []
    if (testfile):
        target = ''
        hc = -1 
    with open(outputcsvfile, "w+", encoding='utf-8') as outputfile:
        with open(inputcsvfile, "r", encoding='utf-8') as csvfile:      # hardcoded utf-8 encoding per #717
            reader = csv.reader(csvfile)
            if (headerless == False):
                header=next(reader, None)
                try:
                    if not testfile:
                        if (target != ''): 
                            hc = header.index(target)
                        else:
                            hc = len(header) - 1
                            target=header[hc]
                except:
                    raise NameError("Target '" + target + "' not found! Header must be same as in file passed to btc.")
                for i in range(0, len(ignorecolumns)):
                    try:
                        col = header.index(ignorecolumns[i])
                        if not testfile:
                            if (col == hc):
                                raise ValueError("Attribute '" + ignorecolumns[i] + "' is the target. Header must be same as in file passed to btc.")
                        il = il + [col]
                    except ValueError:
                        raise
                    except:
                        raise NameError("Attribute '" + ignorecolumns[i] + "' not found in header. Header must be same as in file passed to btc.")
                first = True
                for i in range(0, len(header)):

                    if (i == hc):
                        continue
                    if (i in il):
                        continue
                    if first:
                        first = False
                    else:
                        print(",", end='', file=outputfile)
                    print(header[i], end='', file=outputfile)
                if not testfile:
                    print("," + header[hc], file=outputfile)
                else:
                    print("", file=outputfile)

                for row in csv.DictReader(open(inputcsvfile, encoding='utf-8')):
                    if target and (row[target] in ignorelabels):
                        continue
                    first = True
                    for name in header:
                        if (name in ignorecolumns):
                            continue
                        if (name == target):
                            continue
                        if first:
                            first = False
                        else:
                            print(",", end='', file=outputfile)
                        if (',' in row[name]):
                            print('"' + row[name].replace('"', '') + '"', end='', file=outputfile)
                        else:
                            print(row[name].replace('"', ''), end='', file=outputfile)
                    if not testfile:
                        print("," + row[target], file=outputfile)
                    else:
                        if len(important_idxs) == 1:
                            print(",", file=outputfile)
                        else:
                            print("", file=outputfile)

            else:
                try:
                    if (target != ""): 
                        hc = int(target)
                    else:
                        hc = -1
                except:
                    raise NameError("No header found but attribute name given as target. Header must be same as in file passed to btc.")
                for i in range(0, len(ignorecolumns)):
                    try:
                        col = int(ignorecolumns[i])
                        if (col == hc):
                            raise ValueError("Attribute " + str(col) + " is the target. Cannot ignore. Header must be same as in file passed to btc.")
                        il = il + [col]
                    except ValueError:
                        raise
                    except:
                        raise ValueError("No header found but attribute name given in ignore column list. Header must be same as in file passed to btc.")
                for row in reader:
                    first = True
                    if (hc == -1) and (not testfile):
                        hc = len(row) - 1
                    if (row[hc] in ignorelabels):
                        continue
                    for i in range(0, len(row)):
                        if (i in il):
                            continue
                        if (i == hc):
                            continue
                        if first:
                            first = False
                        else:
                            print(",", end='', file=outputfile)
                        if (',' in row[i]):
                            print('"' + row[i].replace('"', '') + '"', end='', file=outputfile)
                        else:
                            print(row[i].replace('"', ''), end = '', file=outputfile)
                    if not testfile:
                        print("," + row[hc], file=outputfile)
                    else:
                        if len(important_idxs) == 1:
                            print(",", file=outputfile)
                        else:
                            print("", file=outputfile)


def clean(filename, outfile, rounding=-1, headerless=False, testfile=False, trim=False):
    #This function takes a preprocessed csv and cleans it to real numbers for prediction or validation


    clean.classlist = []
    clean.testfile = testfile
    clean.mapping = {}
    clean.mapping={'1.0': 0, '2.0': 1, '3.0': 2, '4.0': 3, '5.0': 4}

    def convert(cell):
        value = str(cell)
        try:
            result = int(value)
            return result
        except:
            try:
                result=float(value)
                if math.isnan(result):
                    #if nan parse to string
                    raise ValueError('')
                if (rounding != -1):
                    result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
                return result
            except:
                result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
                return result

    #Function to return key for any value 
    def get_key(val, clean_classmapping):
        if clean_classmapping == {}:
            return val
        for key, value in clean_classmapping.items(): 
            if val == value:
                return key
        if val not in list(clean_classmapping.values):
            raise ValueError("Label key does not exist")


    #Function to convert the class label
    def convertclassid(cell):
        if (clean.testfile):
            return convert(cell)
        value = str(cell)
        if (value == ''):
            raise ValueError("All cells in the target column must contain a class label.")

        if (not clean.mapping == {}):
            result = -1
            try:
                result = clean.mapping[cell]
            except:
                raise ValueError("Class label '" + value + "' encountered in input not defined in user-provided mapping.")
            if (not result == int(result)):
                raise ValueError("Class labels must be mapped to integer.")
            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
            return result
        try:
            result = float(cell)
            if (rounding != -1):
                result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
            else:
                result = int(int(result * 100) / 100)  # round classes to two digits

            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
        except:
            result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
            if (result in clean.classlist):
                result = clean.classlist.index(result)
            else:
                clean.classlist = clean.classlist + [result]
                result = clean.classlist.index(result)
            if (not result == int(result)):
                raise ValueError("Class labels must be mappable to integer.")
        finally:
            if (result < 0):
                raise ValueError("Integer class labels must be positive and contiguous.")

        return result


    #Main Cleaning Code
    rowcount = 0
    with open(filename, encoding='utf-8') as csv_file:
        reader = csv.reader(csv_file)
        f = open(outfile, "w+", encoding='utf-8')
        if (headerless == False):
            next(reader, None)
        outbuf = []
        for row in reader:
            if (row == []):  # Skip empty rows
                continue
            rowcount = rowcount + 1
            if not transform_true:
                rowlen = num_attr if trim else num_attr + len(ignorecolumns)
            else:
                rowlen = num_attr_before_transform if trim else num_attr_before_transform + len(ignorecolumns)      # noqa
            if (not testfile):
                rowlen = rowlen + 1    
            if ((len(row) - (1 if ((testfile and len(important_idxs) == 1)) else 0))  != rowlen) and not (row == ['','']):
                raise ValueError("Column count must match trained predictor. Row " + str(rowcount) + " differs. Expected Row length: " + str(rowlen) + ", Actual Row Length: " + str(len(row)))
            i = 0
            for elem in row:
                if(i + 1 < len(row)):
                    outbuf.append(str(convert(elem)))
                    outbuf.append(',')
                else:
                    classid = str(convertclassid(elem))
                    outbuf.append(classid)
                i = i + 1
            if (len(outbuf) < IOBUF):
                outbuf.append(os.linesep)
            else:
                print(''.join(outbuf), file=f)
                outbuf = []
        print(''.join(outbuf), end="", file=f)
        f.close()

        if (testfile == False and not len(clean.classlist) >= 2):
            raise ValueError("Number of classes must be at least 2.")

        return get_key, clean.mapping


# Helper (save an import)
def argmax(l):
    f = lambda i: l[i]
    return max(range(len(l)), key=f)
# Classifier

def single_classify(row, return_probabilities=False):
    #inits
    x = row
    o = [0] * num_output_logits


    #Nueron Equations
    h_0 = max((((0.045271482 * float(x[0]))+ (0.6350462 * float(x[1]))+ (-0.89987177 * float(x[2]))+ (-0.09123826 * float(x[3]))+ (-0.4439982 * float(x[4]))+ (-0.6255008 * float(x[5]))+ (0.79292476 * float(x[6]))+ (-0.010203833 * float(x[7]))+ (-0.0988564 * float(x[8]))+ (-0.1303251 * float(x[9]))+ (0.5602452 * float(x[10]))+ (1.6689829 * float(x[11]))) + 1.2199869), 0)
    h_1 = max((((-0.82431984 * float(x[0]))+ (-0.4008158 * float(x[1]))+ (1.2007433 * float(x[2]))+ (0.7318835 * float(x[3]))+ (0.719919 * float(x[4]))+ (1.4495431 * float(x[5]))+ (-0.7433188 * float(x[6]))+ (-0.39213675 * float(x[7]))+ (0.06542314 * float(x[8]))+ (1.1475772 * float(x[9]))+ (1.2476181 * float(x[10]))+ (1.2969251 * float(x[11]))) + 2.7598934), 0)
    h_2 = max((((0.33783835 * float(x[0]))+ (-0.6031549 * float(x[1]))+ (0.5778057 * float(x[2]))+ (1.2870513 * float(x[3]))+ (0.3373686 * float(x[4]))+ (-0.8738478 * float(x[5]))+ (0.16319178 * float(x[6]))+ (-0.15228939 * float(x[7]))+ (-0.98345023 * float(x[8]))+ (-0.2706301 * float(x[9]))+ (0.18835282 * float(x[10]))+ (0.15287302 * float(x[11]))) + 0.6467174), 0)
    h_3 = max((((-0.50235754 * float(x[0]))+ (-0.40696874 * float(x[1]))+ (0.1243637 * float(x[2]))+ (-0.7541641 * float(x[3]))+ (-0.76146257 * float(x[4]))+ (1.3349776 * float(x[5]))+ (-0.8266018 * float(x[6]))+ (-0.6717346 * float(x[7]))+ (-0.16724749 * float(x[8]))+ (-0.43516278 * float(x[9]))+ (0.28818402 * float(x[10]))+ (0.8587265 * float(x[11]))) + 0.012654986), 0)
    h_4 = max((((0.65243864 * float(x[0]))+ (0.015203242 * float(x[1]))+ (0.31045637 * float(x[2]))+ (0.7949923 * float(x[3]))+ (0.76719904 * float(x[4]))+ (0.723232 * float(x[5]))+ (-0.29282656 * float(x[6]))+ (-0.2685841 * float(x[7]))+ (1.4847741 * float(x[8]))+ (-0.1866349 * float(x[9]))+ (0.43003145 * float(x[10]))+ (0.38955733 * float(x[11]))) + 1.2728355), 0)
    h_5 = max((((1.1776063 * float(x[0]))+ (-1.2342879 * float(x[1]))+ (-0.3065666 * float(x[2]))+ (-1.3594909 * float(x[3]))+ (0.060024712 * float(x[4]))+ (-0.67103165 * float(x[5]))+ (-0.58987033 * float(x[6]))+ (-0.56827855 * float(x[7]))+ (-0.68385667 * float(x[8]))+ (-0.2920939 * float(x[9]))+ (-0.269741 * float(x[10]))+ (0.38074437 * float(x[11]))) + 0.63986206), 0)
    o[0] = (1.0821213 * h_0)+ (-3.552235 * h_1)+ (-1.1178766 * h_2)+ (0.6689392 * h_3)+ (-0.617118 * h_4)+ (1.3600531 * h_5) + -0.4519536
    o[1] = (-1.0230731 * h_0)+ (-0.63053495 * h_1)+ (0.86842555 * h_2)+ (-1.2937171 * h_3)+ (-0.00907785 * h_4)+ (0.7061961 * h_5) + -0.11101173
    o[2] = (-0.14475393 * h_0)+ (-1.5849082 * h_1)+ (0.02945982 * h_2)+ (-1.6021429 * h_3)+ (1.4747133 * h_4)+ (-0.49040288 * h_5) + 2.7915869
    o[3] = (-0.43713474 * h_0)+ (0.24114227 * h_1)+ (1.0744027 * h_2)+ (1.2044628 * h_3)+ (-0.103452645 * h_4)+ (-2.5569293 * h_5) + -0.22685018
    o[4] = (1.1464046 * h_0)+ (0.5326374 * h_1)+ (-0.07138828 * h_2)+ (-0.736405 * h_3)+ (-2.432138 * h_4)+ (-0.75539654 * h_5) + 1.5595139



    #Output Decision Rule
    if num_output_logits==1:
        if return_probabilities:
            exp_o = 1./(1. + np.exp(-o[0]))
            return np.array([1.-exp_o, exp_o])
        else:
            return o[0]>=0
    else:
        if return_probabilities:
            exps = np.exp(o)
            Z = sum(exps).reshape(-1, 1)
            return exps/Z
        else:
            return argmax(o)


def classify(arr, transform_true=False, return_probabilities=False):
    #apply transformation if necessary
    if transform_true:
        arr = transform(arr)
    #init
    w_h = np.array([[0.045271482318639755, 0.6350461840629578, -0.8998717665672302, -0.09123826026916504, -0.44399818778038025, -0.6255007982254028, 0.7929247617721558, -0.010203832760453224, -0.09885639697313309, -0.1303250938653946, 0.5602452158927917, 1.6689828634262085], [-0.8243198394775391, -0.40081581473350525, 1.200743317604065, 0.7318835258483887, 0.7199190258979797, 1.4495431184768677, -0.7433187961578369, -0.39213675260543823, 0.0654231384396553, 1.147577166557312, 1.2476180791854858, 1.2969250679016113], [0.337838351726532, -0.6031548976898193, 0.5778056979179382, 1.2870513200759888, 0.33736860752105713, -0.8738477826118469, 0.1631917804479599, -0.15228939056396484, -0.9834502339363098, -0.2706300914287567, 0.1883528232574463, 0.15287302434444427], [-0.502357542514801, -0.40696874260902405, 0.12436369806528091, -0.7541640996932983, -0.7614625692367554, 1.334977626800537, -0.8266018033027649, -0.6717345714569092, -0.1672474890947342, -0.4351627826690674, 0.2881840169429779, 0.8587265014648438], [0.6524386405944824, 0.015203242190182209, 0.31045636534690857, 0.7949923276901245, 0.7671990394592285, 0.7232319712638855, -0.2928265631198883, -0.26858410239219666, 1.484774112701416, -0.18663489818572998, 0.4300314486026764, 0.3895573318004608], [1.1776063442230225, -1.2342878580093384, -0.30656659603118896, -1.3594908714294434, 0.06002471223473549, -0.671031653881073, -0.5898703336715698, -0.5682785511016846, -0.6838566660881042, -0.2920939028263092, -0.2697409987449646, 0.3807443678379059]])
    b_h = np.array([1.219986915588379, 2.7598934173583984, 0.6467174291610718, 0.01265498623251915, 1.2728354930877686, 0.639862060546875])
    w_o = np.array([[1.0821212530136108, -3.5522348880767822, -1.117876648902893, 0.6689391732215881, -0.6171180009841919, 1.3600530624389648], [-1.0230730772018433, -0.6305349469184875, 0.8684255480766296, -1.2937171459197998, -0.009077849797904491, 0.706196129322052], [-0.14475393295288086, -1.5849082469940186, 0.029459819197654724, -1.6021429300308228, 1.4747133255004883, -0.49040287733078003], [-0.4371347427368164, 0.24114227294921875, 1.0744026899337769, 1.2044627666473389, -0.1034526452422142, -2.556929349899292], [1.1464046239852905, 0.5326374173164368, -0.07138828188180923, -0.7364050149917603, -2.432137966156006, -0.7553965449333191]])
    b_o = np.array([-0.45195358991622925, -0.11101172864437103, 2.7915868759155273, -0.22685018181800842, 1.5595139265060425])

    #Hidden Layer
    h = np.dot(arr, w_h.T) + b_h
    
    relu = np.maximum(h, np.zeros_like(h))


    #Output
    out = np.dot(relu, w_o.T) + b_o
    if num_output_logits == 1:
        if return_probabilities:
            exp_o = 1./(1. + np.exp(-out))
            return np.concatenate((1.-exp_o, exp_o), axis=1)
        else:
            return (out >= 0).astype('int').reshape(-1)
    else:
        if return_probabilities:
            exps = np.exp(out)
            Z = np.sum(exps, axis=1).reshape(-1, 1)
            return exps/Z
        else:
            return (np.argmax(out, axis=1)).reshape(-1)



def Predict(arr,headerless,csvfile, get_key, classmapping):
    with open(csvfile, 'r', encoding='utf-8') as csvinput:
        #readers and writers
        reader = csv.reader(csvinput)

        #print original header
        if (not headerless):
            print(','.join(next(reader, None) + ["Prediction"]))
        
        outputs = classify(arr)
        for i, row in enumerate(reader):
            #use the transformed array as input to predictor
            pred = str(get_key(int(outputs[i]), classmapping))
            #use original untransformed line to write out
            row.append(pred)
            print(','.join(['"' + field + '"' if ',' in field else field for field in row]))


def Validate(cleanarr):
    if n_classes == 2:
        #note that classification is a single line of code
        outputs = classify(cleanarr[:, :-1])


        #metrics
        count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0 = 0, 0, 0, 0, 0, 0, 0, 0
        correct_count = int(np.sum(outputs.reshape(-1) == cleanarr[:, -1].reshape(-1)))
        count = outputs.shape[0]
        num_TP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, cleanarr[:, -1].reshape(-1) == 1)))
        num_TN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, cleanarr[:, -1].reshape(-1) == 0)))
        num_FN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, cleanarr[:, -1].reshape(-1) == 1)))
        num_FP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, cleanarr[:, -1].reshape(-1) == 0)))
        num_class_0 = int(np.sum(cleanarr[:, -1].reshape(-1) == 0))
        num_class_1 = int(np.sum(cleanarr[:, -1].reshape(-1) == 1))
        return count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0, outputs


    else:
        #validation
        outputs = classify(cleanarr[:, :-1])


        #metrics
        count, correct_count = 0, 0
        numeachclass = {}
        for k, o in enumerate(outputs):
            if int(o) == int(float(cleanarr[k, -1])):
                correct_count += 1
            if int(float(cleanarr[k, -1])) in numeachclass.keys():
                numeachclass[int(float(cleanarr[k, -1]))] += 1
            else:
                numeachclass[int(float(cleanarr[k, -1]))] = 1
            count += 1
        return count, correct_count, numeachclass, outputs
    


# Main method
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on '+TRAINFILE)
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-cleanfile',action='store_true',help='Use this flag to save prediction time if the csvfile you are passing has already been preprocessed. Implies headerless.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    parser.add_argument('-json', action="store_true", default=False, help="report measurements as json")
    parser.add_argument('-trim', action="store_true", help="If true, the prediction will not output ignored columns.")
    args = parser.parse_args()
    faulthandler.enable()

    if args.validate:
        args.trim = True


    #clean if not already clean
    if not args.cleanfile:
        cleanfile = tempfile.NamedTemporaryFile().name
        preprocessedfile = tempfile.NamedTemporaryFile().name
        output = preprocess(args.csvfile,preprocessedfile,args.headerless,(not args.validate), trim=args.trim)
        get_key, classmapping = clean(preprocessedfile if output!=-1 else args.csvfile, cleanfile, -1, args.headerless, (not args.validate), trim=args.trim)
    else:
        cleanfile=args.csvfile
        preprocessedfile=args.csvfile
        get_key = lambda x, y: x
        classmapping = {}
        output = None


    #load file
    cleanarr = np.loadtxt(cleanfile, delimiter=',', dtype='float64')
    if not args.trim and ignorecolumns != []:
        cleanarr = cleanarr[:, important_idxs]


    #Normalize
    cleanarr = Normalize(cleanarr)


    #Transform
    if transform_true:
        if args.validate:
            trans = transform(cleanarr[:, :-1])
            cleanarr = np.concatenate((trans, cleanarr[:, -1].reshape(-1, 1)), axis = 1)
        else:
            cleanarr = transform(cleanarr)


    #Predict
    if not args.validate:
        Predict(cleanarr, args.headerless, preprocessedfile if output!=-1 else args.csvfile, get_key, classmapping)


    #Validate
    else:
        classifier_type = 'NN'
        if n_classes == 2:
            count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0, preds = Validate(cleanarr)
        else:
            count, correct_count, numeachclass, preds = Validate(cleanarr)
        #Correct Labels
        true_labels = cleanarr[:, -1]


        #Report Metrics
        model_cap = 2
        if args.json:
            import json
        if n_classes == 2:
            #Base metrics
            FN = float(num_FN) * 100.0 / float(count)
            FP = float(num_FP) * 100.0 / float(count)
            TN = float(num_TN) * 100.0 / float(count)
            TP = float(num_TP) * 100.0 / float(count)
            num_correct = correct_count

            #Calculated Metrics
            if int(num_TP + num_FN) != 0:
                TPR = num_TP / (num_TP + num_FN) # Sensitivity, Recall
            if int(num_TN + num_FP) != 0:
                TNR = num_TN / (num_TN + num_FP) # Specificity
            if int(num_TP + num_FP) != 0:
                PPV = num_TP / (num_TP + num_FP) # Recall
            if int(num_FN + num_TP) != 0:
                FNR = num_FN / (num_FN + num_TP) # Miss rate
            if int(2 * num_TP + num_FP + num_FN) != 0:
                FONE = 2 * num_TP / (2 * num_TP + num_FP + num_FN) # F1 Score
            if int(num_TP + num_FN + num_FP) != 0:
                TS = num_TP / (num_TP + num_FN + num_FP) # Critical Success Index
            #Best Guess Accuracy
            randguess = int(float(10000.0 * max(num_class_1, num_class_0)) / count) / 100.0
            #Model Accuracy
            classbalance = [float(num_class_0)/count, float(num_class_1)/count]
            H = float(-1.0 * sum([classbalance[i] * math.log(classbalance[i]) / math.log(2) for i in range(len(classbalance))]))

            modelacc = int(float(num_correct * 10000) / count) / 100.0
            #Report
            json_dict = {'instance_count':                        count ,
                         'classifier_type':                        classifier_type,
                         'classes':                            2 ,
                         'false_negative_instances':    num_FN ,
                         'false_positive_instances':    num_FP ,
                         'true_positive_instances':    num_TP ,
                         'true_negative_instances':    num_TN,
                         'false_negatives':                        FN ,
                         'false_positives':                        FP ,
                         'true_negatives':                        TN ,
                         'true_positives':                        TP ,
                         'number_correct':                        num_correct ,
                         'accuracy': {
                             'best_guess': randguess,
                             'improvement': modelacc-randguess,
                             'model_accuracy': modelacc,
                         },
                         'model_capacity':                        model_cap ,
                         'generalization_ratio':                int(float(num_correct * 100) / model_cap) * H/ 100.0,
                         'model_efficiency':                    int(100 * (modelacc - randguess) / model_cap) / 100.0,
                        'shannon_entropy_of_labels':           H,
                        'classbalance':                        classbalance}
            if args.json:
                pass
            else:
                if classifier_type == 'NN':
                    print("Classifier Type:                    Neural Network")
                elif classifier_type == 'RF':
                    print("Classifier Type:                    Random Forest")
                else:
                    print("Classifier Type:                    Decision Tree")
                print("System Type:                        Binary classifier")
                print("Best-guess accuracy:                {:.2f}%".format(randguess))
                print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
                print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
                print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
                print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0 * H) + " bits/bit")
                print("Model efficiency:                   {:.2f}%/parameter".format(int(100 * (modelacc - randguess) / model_cap) / 100.0))
                print("System behavior")
                print("True Negatives:                     {:.2f}%".format(TN) + " (" + str(int(num_TN)) + "/" + str(count) + ")")
                print("True Positives:                     {:.2f}%".format(TP) + " (" + str(int(num_TP)) + "/" + str(count) + ")")
                print("False Negatives:                    {:.2f}%".format(FN) + " (" + str(int(num_FN)) + "/" + str(count) + ")")
                print("False Positives:                    {:.2f}%".format(FP) + " (" + str(int(num_FP)) + "/" + str(count) + ")")
                if int(num_TP + num_FN) != 0:
                    print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
                if int(num_TN + num_FP) != 0:
                    print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
                if int(num_TP + num_FP) != 0:
                    print("Precision:                          {:.2f}".format(PPV))
                if int(2 * num_TP + num_FP + num_FN) != 0:
                    print("F-1 Measure:                        {:.2f}".format(FONE))
                if int(num_TP + num_FN) != 0:
                    print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
                if int(num_TP + num_FN + num_FP) != 0:
                    print("Critical Success Index:             {:.2f}".format(TS))
        #Multiclass
        else:
            num_correct = correct_count
            modelacc = int(float(num_correct * 10000) / count) / 100.0
            randguess = round(max(numeachclass.values()) / sum(numeachclass.values()) * 100, 2)
            classbalance = [float(numofcertainclass) / count for numofcertainclass in numeachclass.values()]
            H = float(-1.0 * sum([classbalance[i] * math.log(classbalance[i]) / math.log(2) for i in range(len(classbalance))]))

            if args.json:
                json_dict = {'instance_count':                        count,
                            'classifier_type':                        classifier_type,
                            'classes':                            n_classes,
                             'number_correct': num_correct,
                             'accuracy': {
                                 'best_guess': randguess,
                                 'improvement': modelacc - randguess,
                                 'model_accuracy': modelacc,
                             },
                             'model_capacity': model_cap,
                            'generalization_ratio':                int(float(num_correct * 100) / model_cap) / 100.0 * H,
                            'model_efficiency':                    int(100 * (modelacc - randguess) / model_cap) / 100.0,
                        'shannon_entropy_of_labels':           H,
                        'classbalance':                        classbalance}
            else:
                if classifier_type == 'NN':
                    print("Classifier Type:                    Neural Network")
                elif classifier_type == 'RF':
                    print("Classifier Type:                    Random Forest")
                else:
                    print("Classifier Type:                    Decision Tree")
                print("System Type:                        " + str(n_classes) + "-way classifier")
                print("Best-guess accuracy:                {:.2f}%".format(randguess))
                print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
                print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
                print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
                print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0 * H) + " bits/bit")
                print("Model efficiency:                   {:.2f}%/parameter".format(int(100 * (modelacc - randguess) / model_cap) / 100.0))

        try:
            import numpy as np # For numpy see: http://numpy.org
            from numpy import array
        except:
            print("Note: If you install numpy (https://www.numpy.org) and scipy (https://www.scipy.org) this predictor generates a confusion matrix")

        def confusion_matrix(y_true, y_pred, json, labels=None, sample_weight=None, normalize=None):
            stats = {}
            if labels is None:
                labels = np.array(list(set(list(y_true.astype('int')))))
            else:
                labels = np.asarray(labels)
                if np.all([l not in y_true for l in labels]):
                    raise ValueError("At least one label specified must be in y_true")
            n_labels = labels.size

            for class_i in range(n_labels):
                stats[class_i] = {'TP':{},'FP':{},'FN':{},'TN':{}}
                class_i_indices = np.argwhere(y_true==class_i)
                not_class_i_indices = np.argwhere(y_true!=class_i)
                stats[int(class_i)]['TP'] = int(np.sum(y_pred[class_i_indices]==y_true[class_i_indices]))
                stats[int(class_i)]['FP'] = int(np.sum(y_pred[class_i_indices]!=y_true[class_i_indices]))
                stats[int(class_i)]['TN'] = int(np.sum(y_pred[not_class_i_indices]==y_true[not_class_i_indices]))
                stats[int(class_i)]['FN'] = int(np.sum(y_pred[not_class_i_indices]!=y_true[not_class_i_indices]))
            #check for numpy/scipy is imported
            try:
                from scipy.sparse import coo_matrix #required for multiclass metrics
            except:
                if not json:
                    print("Note: If you install scipy (https://www.scipy.org) this predictor generates a confusion matrix")
                    sys.exit()
                else:
                    return np.array([]), stats
                

            # Compute confusion matrix to evaluate the accuracy of a classification.
            # By definition a confusion matrix :math:C is such that :math:C_{i, j}
            # is equal to the number of observations known to be in group :math:i and
            # predicted to be in group :math:j.
            # Thus in binary classification, the count of true negatives is
            # :math:C_{0,0}, false negatives is :math:C_{1,0}, true positives is
            # :math:C_{1,1} and false positives is :math:C_{0,1}.
            # Read more in the :ref:User Guide <confusion_matrix>.
            # Parameters
            # ----------
            # y_true : array-like of shape (n_samples,)
            # Ground truth (correct) target values.
            # y_pred : array-like of shape (n_samples,)
            # Estimated targets as returned by a classifier.
            # labels : array-like of shape (n_classes), default=None
            # List of labels to index the matrix. This may be used to reorder
            # or select a subset of labels.
            # If None is given, those that appear at least once
            # in y_true or y_pred are used in sorted order.
            # sample_weight : array-like of shape (n_samples,), default=None
            # Sample weights.
            # normalize : {'true', 'pred', 'all'}, default=None
            # Normalizes confusion matrix over the true (rows), predicted (columns)
            # conditions or all the population. If None, confusion matrix will not be
            # normalized.
            # Returns
            # -------
            # C : ndarray of shape (n_classes, n_classes)
            # Confusion matrix.
            # References
            # ----------



            if sample_weight is None:
                sample_weight = np.ones(y_true.shape[0], dtype=np.int64)
            else:
                sample_weight = np.asarray(sample_weight)
            if y_true.shape[0]!=y_pred.shape[0]:
                raise ValueError("y_true and y_pred must be of the same length")

            if normalize not in ['true', 'pred', 'all', None]:
                raise ValueError("normalize must be one of {'true', 'pred', 'all', None}")


            label_to_ind = {y: x for x, y in enumerate(labels)}
            # convert yt, yp into index
            y_pred = np.array([label_to_ind.get(x, n_labels + 1) for x in y_pred])
            y_true = np.array([label_to_ind.get(x, n_labels + 1) for x in y_true])
            # intersect y_pred, y_true with labels, eliminate items not in labels
            ind = np.logical_and(y_pred < n_labels, y_true < n_labels)
            y_pred = y_pred[ind]
            y_true = y_true[ind]

            # also eliminate weights of eliminated items
            sample_weight = sample_weight[ind]
            # Choose the accumulator dtype to always have high precision
            if sample_weight.dtype.kind in {'i', 'u', 'b'}:
                dtype = np.int64
            else:
                dtype = np.float64
            cm = coo_matrix((sample_weight, (y_true, y_pred)), shape=(n_labels, n_labels), dtype=dtype,).toarray()


            with np.errstate(all='ignore'):
                if normalize == 'true':
                    cm = cm / cm.sum(axis=1, keepdims=True)
                elif normalize == 'pred':
                    cm = cm / cm.sum(axis=0, keepdims=True)
                elif normalize == 'all':
                    cm = cm / cm.sum()
                cm = np.nan_to_num(cm)
            return cm, stats
        mtrx, stats = confusion_matrix(np.array(true_labels).reshape(-1), np.array(preds).reshape(-1), args.json)
        if args.json:
            json_dict['confusion_matrix'] = mtrx.tolist()
            json_dict['multiclass_stats'] = stats
            print(json.dumps(json_dict))
        else:
            mtrx = mtrx / np.sum(mtrx) * 100.0
            print("Confusion Matrix:")
            print(' ' + np.array2string(mtrx, formatter={'float': (lambda x: '{:.2f}%'.format(round(float(x), 2)))})[1:-1])

    #Clean Up
    if not args.cleanfile:
        os.remove(cleanfile)
        if output!=-1:
            os.remove(preprocessedfile)
