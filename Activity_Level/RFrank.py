#!/usr/bin/env python3
#
# This code has been produced by a free evaluation version of Brainome Table Compiler(tm).
# Portions of this code copyright (c) 2019-2021 by Brainome, Inc. All Rights Reserved.
# Brainome grants an exclusive (subject to our continuing rights to use and modify models),
# worldwide, non-sublicensable, and non-transferable limited license to use and modify this
# predictor produced through the input of your data:
# (i) for users accessing the service through a free evaluation account, solely for your
# own non-commercial purposes, including for the purpose of evaluating this service, and
# (ii) for users accessing the service through a paid, commercial use account, for your
# own internal  and commercial purposes.
# Please contact support@brainome.ai with any questions.
# Use of predictions results at your own risk.
#
# Output of Brainome Table Compiler v0.991.
# Invocation: btc train.csv -headerless -f RF -rank -o RFrank.py -riskoverfit --yes
# Total compiler execution time: 0:04:07.62. Finished on: Mar-17-2021 05:35:08.
# This source code requires Python 3.
#
"""
Classifier Type:                    Random Forest
System Type:                         6-way classifier
Best-guess accuracy:                 18.88%
Overall Model accuracy:              98.64% (5079/5149 correct)
Overall Improvement over best guess: 79.76% (of possible 81.12%)
Model capacity (MEC):                13 bits
Generalization ratio:                1006.39 bits/bit
Model efficiency:                    6.13%/parameter
Confusion Matrix:
 [16.72% 0.00% 0.00% 0.00% 0.00% 0.00%]
 [0.00% 14.99% 0.00% 0.00% 0.00% 0.00%]
 [0.00% 0.00% 13.65% 0.00% 0.00% 0.00%]
 [0.00% 0.00% 0.00% 16.51% 0.66% 0.08%]
 [0.00% 0.00% 0.00% 0.17% 18.33% 0.00%]
 [0.00% 0.00% 0.00% 0.33% 0.12% 18.43%]
Avg. noise resilience per instance:  -2.59dB
Percent of Data Memorized:           0.31%
Note: Unable to split dataset. The predictor was trained and evaluated on the same data.
{"to_select_idxs":[53, 366, 310, 388, 422], "to_ignore_idxs":[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560], "noncontributing_idxs":[], "overfit_risk":5.049880184815336e-05, "risk_progression":[23.232109931177696, 36.25393358851401, 32.73778906638591, 30.337558779129253, 30.775206954599152], "test_accuracy_progression":[[53, 0.5606913963876481], [366, 0.6127403379296951], [310, 0.6607108176344921], [388, 0.6628471547873374], [422, 0.6632355797242183]]}

"""

# Imports -- Python3 standard library
import sys
import math
import os
import argparse
import tempfile
import csv
import binascii
import faulthandler


# Magic constants follow
# I/O buffer for clean. Reduce this constant for low memory devices. 
IOBUF = 100000000

# Ugly workaround for large classifiers
sys.setrecursionlimit(1000000)

# Training file given to compiler
TRAINFILE = "train.csv"

try:
    import numpy as np # For numpy see: http://numpy.org
    from numpy import array
except:
    print("This predictor requires the Numpy library. For installation instructions please refer to: http://numpy.org")

#Number of attributes
num_attr = 5
n_classes = 6
transform_true = False

# Preprocessor for CSV files

ignorelabels=[]
ignorecolumns=["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560",]
target=""
important_idxs=[53,310,366,388,422]

def preprocess(inputcsvfile, outputcsvfile, headerless=False, testfile=False, target='', ignorecolumns=[], ignorelabels=[], trim=False):
    #This function streams in a csv and outputs a csv with the correct columns and target column on the right hand side. 
    #Precursor to clean

    il=[]

    ignorelabels=[]
    ignorecolumns=["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560",]
    target=""
    important_idxs=[53,310,366,388,422]
    if ignorelabels == [] and ignorecolumns == [] and target == "":
        return -1
    if not trim:
        ignorecolumns = []
    if (testfile):
        target = ''
        hc = -1 
    with open(outputcsvfile, "w+", encoding='utf-8') as outputfile:
        with open(inputcsvfile, "r", encoding='utf-8') as csvfile:      # hardcoded utf-8 encoding per #717
            reader = csv.reader(csvfile)
            if (headerless == False):
                header=next(reader, None)
                try:
                    if not testfile:
                        if (target != ''): 
                            hc = header.index(target)
                        else:
                            hc = len(header) - 1
                            target=header[hc]
                except:
                    raise NameError("Target '" + target + "' not found! Header must be same as in file passed to btc.")
                for i in range(0, len(ignorecolumns)):
                    try:
                        col = header.index(ignorecolumns[i])
                        if not testfile:
                            if (col == hc):
                                raise ValueError("Attribute '" + ignorecolumns[i] + "' is the target. Header must be same as in file passed to btc.")
                        il = il + [col]
                    except ValueError:
                        raise
                    except:
                        raise NameError("Attribute '" + ignorecolumns[i] + "' not found in header. Header must be same as in file passed to btc.")
                first = True
                for i in range(0, len(header)):

                    if (i == hc):
                        continue
                    if (i in il):
                        continue
                    if first:
                        first = False
                    else:
                        print(",", end='', file=outputfile)
                    print(header[i], end='', file=outputfile)
                if not testfile:
                    print("," + header[hc], file=outputfile)
                else:
                    print("", file=outputfile)

                for row in csv.DictReader(open(inputcsvfile, encoding='utf-8')):
                    if target and (row[target] in ignorelabels):
                        continue
                    first = True
                    for name in header:
                        if (name in ignorecolumns):
                            continue
                        if (name == target):
                            continue
                        if first:
                            first = False
                        else:
                            print(",", end='', file=outputfile)
                        if (',' in row[name]):
                            print('"' + row[name].replace('"', '') + '"', end='', file=outputfile)
                        else:
                            print(row[name].replace('"', ''), end='', file=outputfile)
                    if not testfile:
                        print("," + row[target], file=outputfile)
                    else:
                        if len(important_idxs) == 1:
                            print(",", file=outputfile)
                        else:
                            print("", file=outputfile)

            else:
                try:
                    if (target != ""): 
                        hc = int(target)
                    else:
                        hc = -1
                except:
                    raise NameError("No header found but attribute name given as target. Header must be same as in file passed to btc.")
                for i in range(0, len(ignorecolumns)):
                    try:
                        col = int(ignorecolumns[i])
                        if (col == hc):
                            raise ValueError("Attribute " + str(col) + " is the target. Cannot ignore. Header must be same as in file passed to btc.")
                        il = il + [col]
                    except ValueError:
                        raise
                    except:
                        raise ValueError("No header found but attribute name given in ignore column list. Header must be same as in file passed to btc.")
                for row in reader:
                    first = True
                    if (hc == -1) and (not testfile):
                        hc = len(row) - 1
                    if (row[hc] in ignorelabels):
                        continue
                    for i in range(0, len(row)):
                        if (i in il):
                            continue
                        if (i == hc):
                            continue
                        if first:
                            first = False
                        else:
                            print(",", end='', file=outputfile)
                        if (',' in row[i]):
                            print('"' + row[i].replace('"', '') + '"', end='', file=outputfile)
                        else:
                            print(row[i].replace('"', ''), end = '', file=outputfile)
                    if not testfile:
                        print("," + row[hc], file=outputfile)
                    else:
                        if len(important_idxs) == 1:
                            print(",", file=outputfile)
                        else:
                            print("", file=outputfile)


def clean(filename, outfile, rounding=-1, headerless=False, testfile=False, trim=False):
    #This function takes a preprocessed csv and cleans it to real numbers for prediction or validation


    clean.classlist = []
    clean.testfile = testfile
    clean.mapping = {}
    

    def convert(cell):
        value = str(cell)
        try:
            result = int(value)
            return result
        except:
            try:
                result=float(value)
                if math.isnan(result):
                    #if nan parse to string
                    raise ValueError('')
                if (rounding != -1):
                    result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
                return result
            except:
                result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
                return result

    #Function to return key for any value 
    def get_key(val, clean_classmapping):
        if clean_classmapping == {}:
            return val
        for key, value in clean_classmapping.items(): 
            if val == value:
                return key
        if val not in list(clean_classmapping.values):
            raise ValueError("Label key does not exist")


    #Function to convert the class label
    def convertclassid(cell):
        if (clean.testfile):
            return convert(cell)
        value = str(cell)
        if (value == ''):
            raise ValueError("All cells in the target column must contain a class label.")

        if (not clean.mapping == {}):
            result = -1
            try:
                result = clean.mapping[cell]
            except:
                raise ValueError("Class label '" + value + "' encountered in input not defined in user-provided mapping.")
            if (not result == int(result)):
                raise ValueError("Class labels must be mapped to integer.")
            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
            return result
        try:
            result = float(cell)
            if (rounding != -1):
                result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
            else:
                result = int(int(result * 100) / 100)  # round classes to two digits

            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
        except:
            result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
            if (result in clean.classlist):
                result = clean.classlist.index(result)
            else:
                clean.classlist = clean.classlist + [result]
                result = clean.classlist.index(result)
            if (not result == int(result)):
                raise ValueError("Class labels must be mappable to integer.")
        finally:
            if (result < 0):
                raise ValueError("Integer class labels must be positive and contiguous.")

        return result


    #Main Cleaning Code
    rowcount = 0
    with open(filename, encoding='utf-8') as csv_file:
        reader = csv.reader(csv_file)
        f = open(outfile, "w+", encoding='utf-8')
        if (headerless == False):
            next(reader, None)
        outbuf = []
        for row in reader:
            if (row == []):  # Skip empty rows
                continue
            rowcount = rowcount + 1
            if not transform_true:
                rowlen = num_attr if trim else num_attr + len(ignorecolumns)
            else:
                rowlen = num_attr_before_transform if trim else num_attr_before_transform + len(ignorecolumns)      # noqa
            if (not testfile):
                rowlen = rowlen + 1    
            if ((len(row) - (1 if ((testfile and len(important_idxs) == 1)) else 0))  != rowlen) and not (row == ['','']):
                raise ValueError("Column count must match trained predictor. Row " + str(rowcount) + " differs. Expected Row length: " + str(rowlen) + ", Actual Row Length: " + str(len(row)))
            i = 0
            for elem in row:
                if(i + 1 < len(row)):
                    outbuf.append(str(convert(elem)))
                    outbuf.append(',')
                else:
                    classid = str(convertclassid(elem))
                    outbuf.append(classid)
                i = i + 1
            if (len(outbuf) < IOBUF):
                outbuf.append(os.linesep)
            else:
                print(''.join(outbuf), file=f)
                outbuf = []
        print(''.join(outbuf), end="", file=f)
        f.close()

        if (testfile == False and not len(clean.classlist) >= 2):
            raise ValueError("Number of classes must be at least 2.")

        return get_key, clean.mapping


# Helper (save an import)
def argmax(l):
    f = lambda i: l[i]
    return max(range(len(l)), key=f)
# Classifier
def apply(f, x):
    return f(x)

def booster_0(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.985499978, 1.0, 2.0, 4.0], [0.546000004, 3.0, 4.0, 2.0], [-0.694499969, 5.0, 6.0, 1.0], [-0.99150002, 7.0, 8.0, 4.0], [-0.22299999, 9.0, 10.0, 0.0], [-0.961500049, 11.0, 12.0, 4.0], [-0.536499977, 13.0, 14.0, 1.0], [-0.492851645, 0.0, 0.0, 0.0], [-0.863000035, 15.0, 16.0, 1.0], [-0.309074998, 0.0, 0.0, 0.0], [1.76614273, 0.0, 0.0, 0.0], [-0.813500047, 17.0, 18.0, 1.0], [-0.365999997, 19.0, 20.0, 0.0], [-0.906499982, 21.0, 22.0, 4.0], [-0.825999975, 23.0, 24.0, 4.0], [-0.112750001, 25.0, 26.0, 2.0], [-0.942499995, 27.0, 28.0, 3.0], [-0.266000003, 29.0, 30.0, 0.0], [-0.228500009, 31.0, 32.0, 0.0], [-0.38499999, 33.0, 34.0, 0.0], [0.314999998, 35.0, 36.0, 2.0], [-0.155000001, 37.0, 38.0, 0.0], [0.710999966, 39.0, 40.0, 2.0], [0.0715499967, 41.0, 42.0, 0.0], [-0.432999998, 43.0, 44.0, 1.0], [-0.287511617, 0.0, 0.0, 0.0], [2.01844883, 0.0, 0.0, 0.0], [-0.477500141, 0.0, 0.0, 0.0], [0.747530162, 0.0, 0.0, 0.0], [0.406883478, 0.0, 0.0, 0.0], [1.92109048, 0.0, 0.0, 0.0], [-0.271288395, 0.0, 0.0, 0.0], [0.778343976, 0.0, 0.0, 0.0], [-0.408098996, 0.0, 0.0, 0.0], [0.130136818, 0.0, 0.0, 0.0], [0.592030942, 0.0, 0.0, 0.0], [1.94349086, 0.0, 0.0, 0.0], [-0.183979243, 0.0, 0.0, 0.0], [0.784952283, 0.0, 0.0, 0.0], [1.43192971, 0.0, 0.0, 0.0], [0.543306649, 0.0, 0.0, 0.0], [-0.467631191, 0.0, 0.0, 0.0], [-1.70052044e-08, 0.0, 0.0, 0.0], [0.5514431, 0.0, 0.0, 0.0], [-0.392401129, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 25, 26, 27, 28, 9, 10, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44])
    branch_indices = np.array([0, 1, 3, 8, 15, 16, 4, 2, 5, 11, 17, 18, 12, 19, 20, 6, 13, 21, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.862499952, 1.0, 2.0, 1.0], [-0.905499995, 3.0, 4.0, 1.0], [-0.961500049, 5.0, 6.0, 4.0], [-0.493892998, 0.0, 0.0, 0.0], [0.131799996, 7.0, 8.0, 2.0], [-0.210500002, 9.0, 10.0, 0.0], [-0.291999996, 11.0, 12.0, 0.0], [1.23629987, 0.0, 0.0, 0.0], [-0.909500003, 13.0, 14.0, 4.0], [-0.400999993, 15.0, 16.0, 1.0], [-0.129999995, 17.0, 18.0, 0.0], [-0.365999997, 19.0, 20.0, 0.0], [0.314500004, 21.0, 22.0, 2.0], [-0.96449995, 23.0, 24.0, 4.0], [0.130136818, 0.0, 0.0, 0.0], [-0.2755, 25.0, 26.0, 0.0], [-0.261500001, 27.0, 28.0, 0.0], [0.379000008, 29.0, 30.0, 2.0], [0.0234350003, 31.0, 32.0, 0.0], [-0.404500008, 33.0, 34.0, 1.0], [-0.334500015, 35.0, 36.0, 0.0], [-0.960500002, 37.0, 38.0, 3.0], [0.132499993, 39.0, 40.0, 0.0], [-0.188494176, 0.0, 0.0, 0.0], [-0.445878685, 0.0, 0.0, 0.0], [2.35559964, 0.0, 0.0, 0.0], [1.7214303, 0.0, 0.0, 0.0], [0.52054733, 0.0, 0.0, 0.0], [-0.372583568, 0.0, 0.0, 0.0], [2.05385303, 0.0, 0.0, 0.0], [0.54102087, 0.0, 0.0, 0.0], [-0.40937084, 0.0, 0.0, 0.0], [1.07504344, 0.0, 0.0, 0.0], [2.30207562, 0.0, 0.0, 0.0], [0.130136818, 0.0, 0.0, 0.0], [0.236612394, 0.0, 0.0, 0.0], [1.05314434, 0.0, 0.0, 0.0], [1.86952651, 0.0, 0.0, 0.0], [0.237098604, 0.0, 0.0, 0.0], [-0.258060604, 0.0, 0.0, 0.0], [1.81808817, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 23, 24, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 4, 8, 13, 2, 5, 9, 15, 16, 10, 17, 18, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_2(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.533499956, 1.0, 2.0, 1.0], [-0.707499981, 3.0, 4.0, 1.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.770500004, 7.0, 8.0, 1.0], [-0.200500011, 9.0, 10.0, 0.0], [-0.884500027, 11.0, 12.0, 4.0], [-0.432999998, 13.0, 14.0, 1.0], [-0.841500044, 15.0, 16.0, 1.0], [-0.100749999, 17.0, 18.0, 0.0], [-0.5995, 19.0, 20.0, 1.0], [-0.00659999996, 21.0, 22.0, 0.0], [-0.276000023, 23.0, 24.0, 1.0], [-0.3495, 25.0, 26.0, 0.0], [-0.961500049, 27.0, 28.0, 4.0], [2.39112616, 0.0, 0.0, 0.0], [-0.493930399, 0.0, 0.0, 0.0], [-0.83949995, 29.0, 30.0, 1.0], [-0.219500005, 31.0, 32.0, 0.0], [0.00705000013, 33.0, 34.0, 0.0], [-0.243499994, 35.0, 36.0, 0.0], [0.636000037, 37.0, 38.0, 2.0], [-0.101500005, 39.0, 40.0, 0.0], [-0.441535681, 0.0, 0.0, 0.0], [0.803499997, 41.0, 42.0, 2.0], [1.38174701, 0.0, 0.0, 0.0], [0.130136818, 0.0, 0.0, 0.0], [1.92650402, 0.0, 0.0, 0.0], [-0.17899999, 43.0, 44.0, 0.0], [-0.157000005, 45.0, 46.0, 0.0], [-0.0297903754, 0.0, 0.0, 0.0], [-0.437505662, 0.0, 0.0, 0.0], [-0.417451948, 0.0, 0.0, 0.0], [-0.141176194, 0.0, 0.0, 0.0], [0.868751287, 0.0, 0.0, 0.0], [-0.398806423, 0.0, 0.0, 0.0], [-0.442253619, 0.0, 0.0, 0.0], [-0.205632046, 0.0, 0.0, 0.0], [-0.237308353, 0.0, 0.0, 0.0], [0.851222873, 0.0, 0.0, 0.0], [0.457073003, 0.0, 0.0, 0.0], [2.02689505, 0.0, 0.0, 0.0], [-0.21474193, 0.0, 0.0, 0.0], [0.910957813, 0.0, 0.0, 0.0], [-0.408098996, 0.0, 0.0, 0.0], [0.402516246, 0.0, 0.0, 0.0], [1.34538519, 0.0, 0.0, 0.0], [2.13414502, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 22, 41, 42, 24, 25, 26, 43, 44, 45, 46, 14])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 17, 18, 4, 9, 19, 20, 10, 21, 2, 5, 11, 23, 12, 6, 13, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_3(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0582500026, 1.0, 2.0, 0.0], [-0.997500002, 3.0, 4.0, 4.0], [0.455500007, 5.0, 6.0, 0.0], [-0.140500009, 7.0, 8.0, 0.0], [-0.492346853, 0.0, 0.0, 0.0], [-0.346500009, 9.0, 10.0, 2.0], [0.565500021, 11.0, 12.0, 0.0], [-0.524500012, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [0.397499979, 17.0, 18.0, 0.0], [-0.485776007, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.623000026, 21.0, 22.0, 0.0], [-0.760500014, 23.0, 24.0, 0.0], [-0.981999993, 25.0, 26.0, 1.0], [-0.0767499954, 27.0, 28.0, 0.0], [-0.607499957, 29.0, 30.0, 2.0], [-0.999500036, 31.0, 32.0, 1.0], [0.445500016, 33.0, 34.0, 0.0], [0.527999997, 35.0, 36.0, 0.0], [0.523499966, 37.0, 38.0, 0.0], [0.620499969, 39.0, 40.0, 0.0], [-0.491669714, 0.0, 0.0, 0.0], [-0.398806423, 0.0, 0.0, 0.0], [1.65969026, 0.0, 0.0, 0.0], [-0.368165553, 0.0, 0.0, 0.0], [0.910957813, 0.0, 0.0, 0.0], [0.0555640161, 0.0, 0.0, 0.0], [0.572473824, 0.0, 0.0, 0.0], [1.84397268, 0.0, 0.0, 0.0], [0.130136818, 0.0, 0.0, 0.0], [1.94730508, 0.0, 0.0, 0.0], [1.19692719, 0.0, 0.0, 0.0], [0.444139868, 0.0, 0.0, 0.0], [1.79825437, 0.0, 0.0, 0.0], [1.30329156, 0.0, 0.0, 0.0], [0.554689646, 0.0, 0.0, 0.0], [-0.413506478, 0.0, 0.0, 0.0], [0.23928383, 0.0, 0.0, 0.0], [-0.343222082, 0.0, 0.0, 0.0], [0.927224874, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 29, 30, 4, 31, 32, 33, 34, 10, 35, 36, 37, 38, 39, 40, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 9, 17, 18, 6, 11, 19, 20, 12, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_4(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [-0.0601500012, 3.0, 4.0, 0.0], [-0.980499983, 5.0, 6.0, 1.0], [-0.397000015, 7.0, 8.0, 0.0], [0.0945499986, 9.0, 10.0, 0.0], [0.1875, 11.0, 12.0, 0.0], [-0.492536575, 0.0, 0.0, 0.0], [-0.726000011, 13.0, 14.0, 2.0], [-0.140500009, 15.0, 16.0, 0.0], [-0.00550500024, 17.0, 18.0, 0.0], [0.203500003, 19.0, 20.0, 0.0], [0.130136818, 0.0, 0.0, 0.0], [-0.260273665, 0.0, 0.0, 0.0], [-0.424499989, 21.0, 22.0, 0.0], [1.41291416, 0.0, 0.0, 0.0], [-0.337500006, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [-0.0239499994, 27.0, 28.0, 0.0], [0.01315, 29.0, 30.0, 0.0], [-0.555500031, 31.0, 32.0, 2.0], [-0.49291265, 0.0, 0.0, 0.0], [-0.265300423, 0.0, 0.0, 0.0], [0.54946661, 0.0, 0.0, 0.0], [1.3313998, 0.0, 0.0, 0.0], [2.28553605, 0.0, 0.0, 0.0], [1.80422199, 0.0, 0.0, 0.0], [0.33937642, 0.0, 0.0, 0.0], [0.326401055, 0.0, 0.0, 0.0], [-0.25578621, 0.0, 0.0, 0.0], [0.843456924, 0.0, 0.0, 0.0], [0.254051417, 0.0, 0.0, 0.0], [-0.371604621, 0.0, 0.0, 0.0], [0.618149936, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 20, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 9, 17, 18, 10, 19, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_5(xs):
    #Predicts Class 5
    function_dict = np.array([[0.380500019, 1.0, 2.0, 0.0], [-0.552999973, 3.0, 4.0, 0.0], [0.565500021, 5.0, 6.0, 0.0], [1.89646006, 0.0, 0.0, 0.0], [0.201499999, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [2.43006659, 0.0, 0.0, 0.0], [-0.397500008, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [0.564499974, 15.0, 16.0, 0.0], [2.14490581, 0.0, 0.0, 0.0], [-0.997500002, 17.0, 18.0, 1.0], [-0.143999994, 19.0, 20.0, 2.0], [0.276499987, 21.0, 22.0, 0.0], [-0.992499948, 23.0, 24.0, 1.0], [0.527999997, 25.0, 26.0, 0.0], [-0.326569796, 0.0, 0.0, 0.0], [1.10961187, 0.0, 0.0, 0.0], [-0.476823449, 0.0, 0.0, 0.0], [-0.436968088, 0.0, 0.0, 0.0], [-0.493730009, 0.0, 0.0, 0.0], [-0.026876105, 0.0, 0.0, 0.0], [-0.475701064, 0.0, 0.0, 0.0], [1.5671407, 0.0, 0.0, 0.0], [0.440325946, 0.0, 0.0, 0.0], [0.744438589, 0.0, 0.0, 0.0], [1.56164193, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 16, 10, 6])
    branch_indices = np.array([0, 1, 4, 7, 11, 12, 8, 13, 14, 2, 5, 9, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_6(xs):
    #Predicts Class 0
    function_dict = np.array([[0.0376999974, 1.0, 2.0, 2.0], [-0.438318312, 0.0, 0.0, 0.0], [-0.766499996, 3.0, 4.0, 1.0], [0.353500009, 5.0, 6.0, 2.0], [0.485500008, 7.0, 8.0, 2.0], [-0.845499992, 9.0, 10.0, 1.0], [-0.966500044, 11.0, 12.0, 3.0], [-0.945500016, 13.0, 14.0, 3.0], [-0.461499989, 15.0, 16.0, 1.0], [-0.270500004, 17.0, 18.0, 0.0], [-0.9375, 19.0, 20.0, 4.0], [-0.280499995, 21.0, 22.0, 0.0], [-0.961500049, 23.0, 24.0, 4.0], [-0.0726500005, 25.0, 26.0, 0.0], [-0.220499992, 27.0, 28.0, 0.0], [-0.178499997, 29.0, 30.0, 0.0], [-0.825999975, 31.0, 32.0, 4.0], [-0.279313236, 0.0, 0.0, 0.0], [0.579833627, 0.0, 0.0, 0.0], [-0.253600448, 0.0, 0.0, 0.0], [0.423677891, 0.0, 0.0, 0.0], [0.245704621, 0.0, 0.0, 0.0], [0.509186208, 0.0, 0.0, 0.0], [0.947583437, 0.0, 0.0, 0.0], [0.54799819, 0.0, 0.0, 0.0], [-0.501459658, 0.0, 0.0, 0.0], [-0.0601764098, 0.0, 0.0, 0.0], [-0.239365608, 0.0, 0.0, 0.0], [0.36709699, 0.0, 0.0, 0.0], [0.153438538, 0.0, 0.0, 0.0], [0.492603213, 0.0, 0.0, 0.0], [-0.408236623, 0.0, 0.0, 0.0], [-0.0570243597, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_7(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.439523488, 0.0, 0.0, 0.0], [-0.175500005, 3.0, 4.0, 0.0], [0.601500034, 5.0, 6.0, 2.0], [0.0609500036, 7.0, 8.0, 0.0], [-0.778499961, 9.0, 10.0, 1.0], [-0.215499997, 11.0, 12.0, 0.0], [-0.96449995, 13.0, 14.0, 4.0], [-0.60799998, 15.0, 16.0, 1.0], [0.414499998, 17.0, 18.0, 2.0], [-0.958500028, 19.0, 20.0, 4.0], [-0.947000027, 21.0, 22.0, 4.0], [-0.572000027, 23.0, 24.0, 1.0], [-0.107500002, 25.0, 26.0, 0.0], [-0.818500042, 27.0, 28.0, 1.0], [-0.801499963, 29.0, 30.0, 1.0], [-0.314743519, 0.0, 0.0, 0.0], [0.424310386, 0.0, 0.0, 0.0], [-0.138787135, 0.0, 0.0, 0.0], [0.48169902, 0.0, 0.0, 0.0], [0.947755575, 0.0, 0.0, 0.0], [0.502525687, 0.0, 0.0, 0.0], [0.0497104935, 0.0, 0.0, 0.0], [-0.476609737, 0.0, 0.0, 0.0], [-0.217227489, 0.0, 0.0, 0.0], [0.516046405, 0.0, 0.0, 0.0], [-0.374642253, 0.0, 0.0, 0.0], [-0.248402253, 0.0, 0.0, 0.0], [-0.449764222, 0.0, 0.0, 0.0], [0.1913151, 0.0, 0.0, 0.0], [0.866062224, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_8(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.841500044, 3.0, 4.0, 1.0], [-0.581499994, 5.0, 6.0, 1.0], [-0.437260628, 0.0, 0.0, 0.0], [-0.961500049, 7.0, 8.0, 4.0], [-0.200500011, 9.0, 10.0, 0.0], [-0.967499971, 11.0, 12.0, 4.0], [-0.230500013, 13.0, 14.0, 0.0], [-0.109499998, 15.0, 16.0, 0.0], [-0.756500006, 17.0, 18.0, 1.0], [0.309000015, 19.0, 20.0, 2.0], [-0.357499987, 21.0, 22.0, 1.0], [-0.351499975, 23.0, 24.0, 1.0], [-0.394595653, 0.0, 0.0, 0.0], [-0.179500014, 25.0, 26.0, 0.0], [-0.428387672, 0.0, 0.0, 0.0], [-0.799999952, 27.0, 28.0, 1.0], [-0.977999985, 29.0, 30.0, 3.0], [-0.972499967, 31.0, 32.0, 3.0], [0.820079625, 0.0, 0.0, 0.0], [-0.182500005, 33.0, 34.0, 0.0], [-0.99849999, 35.0, 36.0, 3.0], [0.445268542, 0.0, 0.0, 0.0], [0.0190150011, 37.0, 38.0, 0.0], [-0.38349998, 39.0, 40.0, 0.0], [0.27309978, 0.0, 0.0, 0.0], [-0.182463124, 0.0, 0.0, 0.0], [-0.330913574, 0.0, 0.0, 0.0], [0.189171106, 0.0, 0.0, 0.0], [-0.0809852332, 0.0, 0.0, 0.0], [0.993338645, 0.0, 0.0, 0.0], [-0.128676847, 0.0, 0.0, 0.0], [-0.453258425, 0.0, 0.0, 0.0], [0.560750604, 0.0, 0.0, 0.0], [0.0298079103, 0.0, 0.0, 0.0], [0.22104764, 0.0, 0.0, 0.0], [-0.398721129, 0.0, 0.0, 0.0], [0.377212942, 0.0, 0.0, 0.0], [-0.599554539, 0.0, 0.0, 0.0], [0.0514825694, 0.0, 0.0, 0.0], [0.534666359, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 25, 26, 15, 27, 28, 29, 30, 31, 32, 19, 33, 34, 35, 36, 22, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 4, 7, 14, 8, 16, 2, 5, 9, 17, 18, 10, 20, 6, 11, 21, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_9(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.996500015, 1.0, 2.0, 4.0], [0.623000026, 3.0, 4.0, 0.0], [-0.994500041, 5.0, 6.0, 4.0], [-0.146499991, 7.0, 8.0, 0.0], [-0.42177552, 0.0, 0.0, 0.0], [-0.266000003, 9.0, 10.0, 0.0], [-0.443203807, 0.0, 0.0, 0.0], [-0.185499996, 11.0, 12.0, 0.0], [0.0945499986, 13.0, 14.0, 0.0], [0.165612951, 0.0, 0.0, 0.0], [-0.385500014, 15.0, 16.0, 2.0], [-0.212500006, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [-0.0965999961, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [-0.441745311, 0.0, 0.0, 0.0], [-0.279500008, 25.0, 26.0, 2.0], [-0.0838486031, 0.0, 0.0, 0.0], [0.476952285, 0.0, 0.0, 0.0], [-0.414773226, 0.0, 0.0, 0.0], [0.087094225, 0.0, 0.0, 0.0], [0.516733885, 0.0, 0.0, 0.0], [0.174998671, 0.0, 0.0, 0.0], [0.462561876, 0.0, 0.0, 0.0], [0.119561546, 0.0, 0.0, 0.0], [0.107535392, 0.0, 0.0, 0.0], [-0.264698058, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 9, 15, 25, 26, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 5, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_10(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.980499983, 1.0, 2.0, 1.0], [0.111500002, 3.0, 4.0, 0.0], [-0.45450002, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [0.203500003, 9.0, 10.0, 0.0], [-0.698000014, 11.0, 12.0, 1.0], [-0.442861259, 0.0, 0.0, 0.0], [0.0560500026, 13.0, 14.0, 0.0], [-0.747500002, 15.0, 16.0, 2.0], [0.141499996, 17.0, 18.0, 0.0], [-0.432675481, 0.0, 0.0, 0.0], [0.171160191, 0.0, 0.0, 0.0], [-0.308662206, 0.0, 0.0, 0.0], [0.0353999995, 19.0, 20.0, 0.0], [0.0850500017, 21.0, 22.0, 0.0], [-0.4375, 23.0, 24.0, 0.0], [-0.51699996, 25.0, 26.0, 2.0], [-0.418187559, 0.0, 0.0, 0.0], [0.162499994, 27.0, 28.0, 0.0], [0.407698393, 0.0, 0.0, 0.0], [1.69707417, 0.0, 0.0, 0.0], [-0.164455086, 0.0, 0.0, 0.0], [0.555412531, 0.0, 0.0, 0.0], [0.254982859, 0.0, 0.0, 0.0], [-0.282277435, 0.0, 0.0, 0.0], [0.208265245, 0.0, 0.0, 0.0], [0.640031755, 0.0, 0.0, 0.0], [0.519585192, 0.0, 0.0, 0.0], [-0.0446811281, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 17, 27, 28, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 9, 18, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_11(xs):
    #Predicts Class 5
    function_dict = np.array([[0.198500007, 1.0, 2.0, 0.0], [-0.382499993, 3.0, 4.0, 0.0], [0.623000026, 5.0, 6.0, 0.0], [-0.706500053, 7.0, 8.0, 2.0], [-0.143999994, 9.0, 10.0, 2.0], [-0.997500002, 11.0, 12.0, 4.0], [0.521138132, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.523000002, 15.0, 16.0, 2.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.443155676, 0.0, 0.0, 0.0], [0.620499969, 19.0, 20.0, 0.0], [0.367500007, 21.0, 22.0, 0.0], [-0.760500014, 23.0, 24.0, 0.0], [-0.4375, 25.0, 26.0, 0.0], [-0.997500002, 27.0, 28.0, 4.0], [-0.401208341, 0.0, 0.0, 0.0], [-0.344500005, 29.0, 30.0, 0.0], [-0.639999986, 31.0, 32.0, 2.0], [0.429499984, 33.0, 34.0, 0.0], [-0.506063282, 0.0, 0.0, 0.0], [1.18789637, 0.0, 0.0, 0.0], [0.505187869, 0.0, 0.0, 0.0], [0.478815317, 0.0, 0.0, 0.0], [-0.0925044715, 0.0, 0.0, 0.0], [0.501224995, 0.0, 0.0, 0.0], [0.881312072, 0.0, 0.0, 0.0], [-0.227260798, 0.0, 0.0, 0.0], [0.376783252, 0.0, 0.0, 0.0], [0.440533817, 0.0, 0.0, 0.0], [-0.373677164, 0.0, 0.0, 0.0], [0.590247095, 0.0, 0.0, 0.0], [-0.118810579, 0.0, 0.0, 0.0], [0.124925375, 0.0, 0.0, 0.0], [0.363335848, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 16, 29, 30, 31, 32, 10, 33, 34, 20, 21, 22, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 9, 17, 18, 2, 5, 11, 19, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_12(xs):
    #Predicts Class 0
    function_dict = np.array([[0.125499994, 1.0, 2.0, 2.0], [0.0376999974, 3.0, 4.0, 2.0], [-0.813500047, 5.0, 6.0, 1.0], [-0.424543291, 0.0, 0.0, 0.0], [0.0761999935, 7.0, 8.0, 2.0], [0.139499992, 9.0, 10.0, 0.0], [0.485500008, 11.0, 12.0, 2.0], [0.14867121, 0.0, 0.0, 0.0], [-0.318128258, 0.0, 0.0, 0.0], [-0.969500005, 13.0, 14.0, 3.0], [-0.408950627, 0.0, 0.0, 0.0], [-0.274500012, 15.0, 16.0, 0.0], [-0.64199996, 17.0, 18.0, 1.0], [-0.978500009, 19.0, 20.0, 3.0], [0.591145337, 0.0, 0.0, 0.0], [-0.949499965, 21.0, 22.0, 4.0], [-0.950999975, 23.0, 24.0, 3.0], [-0.300500005, 25.0, 26.0, 0.0], [-0.870499969, 27.0, 28.0, 4.0], [0.351404965, 0.0, 0.0, 0.0], [-0.00704560289, 0.0, 0.0, 0.0], [-0.39341262, 0.0, 0.0, 0.0], [-0.669198453, 0.0, 0.0, 0.0], [-0.123950884, 0.0, 0.0, 0.0], [0.31448561, 0.0, 0.0, 0.0], [0.0138457194, 0.0, 0.0, 0.0], [0.358571053, 0.0, 0.0, 0.0], [-0.16405353, 0.0, 0.0, 0.0], [0.21791099, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 19, 20, 14, 10, 21, 22, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 13, 6, 11, 15, 16, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_13(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.425892264, 0.0, 0.0, 0.0], [0.503499985, 3.0, 4.0, 2.0], [-0.821500003, 5.0, 6.0, 1.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.988499999, 9.0, 10.0, 4.0], [-0.167500004, 11.0, 12.0, 0.0], [-0.750999987, 13.0, 14.0, 1.0], [-0.946500003, 15.0, 16.0, 4.0], [-0.898000002, 17.0, 18.0, 1.0], [0.138999999, 19.0, 20.0, 0.0], [-0.958500028, 21.0, 22.0, 4.0], [0.0419500023, 23.0, 24.0, 0.0], [-0.957499981, 25.0, 26.0, 4.0], [-0.27700001, 27.0, 28.0, 1.0], [0.0523499995, 29.0, 30.0, 0.0], [-0.186500013, 31.0, 32.0, 0.0], [-0.0665655434, 0.0, 0.0, 0.0], [0.473688751, 0.0, 0.0, 0.0], [-0.171038553, 0.0, 0.0, 0.0], [0.431137741, 0.0, 0.0, 0.0], [0.323076755, 0.0, 0.0, 0.0], [0.65407753, 0.0, 0.0, 0.0], [-0.257453889, 0.0, 0.0, 0.0], [0.441537648, 0.0, 0.0, 0.0], [-0.677232444, 0.0, 0.0, 0.0], [-0.019256996, 0.0, 0.0, 0.0], [0.273140013, 0.0, 0.0, 0.0], [-0.31657806, 0.0, 0.0, 0.0], [-0.0622428656, 0.0, 0.0, 0.0], [0.588297606, 0.0, 0.0, 0.0], [-0.179525852, 0.0, 0.0, 0.0], [-0.403814912, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_14(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.841500044, 3.0, 4.0, 1.0], [-0.351499975, 5.0, 6.0, 1.0], [-0.423939794, 0.0, 0.0, 0.0], [-0.980499983, 7.0, 8.0, 4.0], [-0.319499999, 9.0, 10.0, 0.0], [-0.38349998, 11.0, 12.0, 0.0], [-0.219500005, 13.0, 14.0, 0.0], [-0.961500049, 15.0, 16.0, 4.0], [0.773499966, 17.0, 18.0, 2.0], [0.0152149992, 19.0, 20.0, 0.0], [0.0349758863, 0.0, 0.0, 0.0], [0.443177372, 0.0, 0.0, 0.0], [-0.336437196, 0.0, 0.0, 0.0], [0.432500005, 21.0, 22.0, 2.0], [0.4375, 23.0, 24.0, 2.0], [-0.109499998, 25.0, 26.0, 0.0], [-0.476999998, 27.0, 28.0, 1.0], [-0.96449995, 29.0, 30.0, 3.0], [-0.103500001, 31.0, 32.0, 0.0], [-0.479182541, 0.0, 0.0, 0.0], [0.778296471, 0.0, 0.0, 0.0], [-0.315660894, 0.0, 0.0, 0.0], [-0.393579543, 0.0, 0.0, 0.0], [0.14002575, 0.0, 0.0, 0.0], [-0.405192286, 0.0, 0.0, 0.0], [-0.116182081, 0.0, 0.0, 0.0], [-0.379964352, 0.0, 0.0, 0.0], [-0.0983041972, 0.0, 0.0, 0.0], [0.569379807, 0.0, 0.0, 0.0], [-0.290344298, 0.0, 0.0, 0.0], [0.10357412, 0.0, 0.0, 0.0], [0.443564385, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 20, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 14, 8, 15, 16, 2, 5, 9, 17, 18, 10, 19, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_15(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.995499969, 1.0, 2.0, 4.0], [0.623000026, 3.0, 4.0, 0.0], [-0.996500015, 5.0, 6.0, 1.0], [0.0507000014, 7.0, 8.0, 0.0], [-0.402425677, 0.0, 0.0, 0.0], [-0.131176874, 0.0, 0.0, 0.0], [-0.427933156, 0.0, 0.0, 0.0], [0.0447499976, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.598487675, 0.0, 0.0, 0.0], [0.615499973, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [0.0930931494, 0.0, 0.0, 0.0], [0.283679605, 0.0, 0.0, 0.0], [0.247117385, 0.0, 0.0, 0.0], [0.878765762, 0.0, 0.0, 0.0], [-0.0899458528, 0.0, 0.0, 0.0], [0.196269721, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_16(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.196500003, 3.0, 4.0, 0.0], [-0.427860975, 0.0, 0.0, 0.0], [-0.524500012, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [-0.407980442, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.200500011, 11.0, 12.0, 0.0], [-0.41726014, 0.0, 0.0, 0.0], [-0.140500009, 13.0, 14.0, 0.0], [-0.747500002, 15.0, 16.0, 2.0], [-0.279800802, 0.0, 0.0, 0.0], [0.145270005, 0.0, 0.0, 0.0], [0.331143558, 0.0, 0.0, 0.0], [0.170043692, 0.0, 0.0, 0.0], [-0.144254759, 0.0, 0.0, 0.0], [0.182975024, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 13, 14, 15, 16, 11, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 6, 9, 10, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_17(xs):
    #Predicts Class 5
    function_dict = np.array([[0.198500007, 1.0, 2.0, 0.0], [-0.382499993, 3.0, 4.0, 0.0], [0.623000026, 5.0, 6.0, 0.0], [-0.523000002, 7.0, 8.0, 2.0], [-0.143999994, 9.0, 10.0, 2.0], [-0.555999994, 11.0, 12.0, 2.0], [0.450946391, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.360585093, 0.0, 0.0, 0.0], [-0.99849999, 15.0, 16.0, 1.0], [-0.428024918, 0.0, 0.0, 0.0], [-0.747500002, 17.0, 18.0, 2.0], [0.581323802, 0.0, 0.0, 0.0], [-0.406000018, 19.0, 20.0, 0.0], [-0.99849999, 21.0, 22.0, 1.0], [-0.344500005, 23.0, 24.0, 0.0], [0.00891499966, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 1.0], [0.534999967, 29.0, 30.0, 0.0], [-0.112380445, 0.0, 0.0, 0.0], [0.393155068, 0.0, 0.0, 0.0], [0.569727838, 0.0, 0.0, 0.0], [0.12743035, 0.0, 0.0, 0.0], [0.291416615, 0.0, 0.0, 0.0], [-0.316264331, 0.0, 0.0, 0.0], [0.261415273, 0.0, 0.0, 0.0], [-0.245344475, 0.0, 0.0, 0.0], [0.130021468, 0.0, 0.0, 0.0], [0.353349328, 0.0, 0.0, 0.0], [-0.503512621, 0.0, 0.0, 0.0], [0.352207839, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 23, 24, 25, 26, 10, 27, 28, 29, 30, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 15, 16, 2, 5, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_18(xs):
    #Predicts Class 0
    function_dict = np.array([[0.181500003, 1.0, 2.0, 2.0], [0.0376999974, 3.0, 4.0, 2.0], [-0.75150001, 5.0, 6.0, 1.0], [-0.416698247, 0.0, 0.0, 0.0], [-0.918500006, 7.0, 8.0, 1.0], [-0.281499982, 9.0, 10.0, 0.0], [0.484499991, 11.0, 12.0, 2.0], [0.379622012, 0.0, 0.0, 0.0], [-0.987499952, 13.0, 14.0, 3.0], [0.570500016, 15.0, 16.0, 2.0], [0.132499993, 17.0, 18.0, 0.0], [-0.945500016, 19.0, 20.0, 3.0], [-0.309499979, 21.0, 22.0, 1.0], [-0.490919888, 0.0, 0.0, 0.0], [-0.0830698162, 0.0, 0.0, 0.0], [-0.932999969, 23.0, 24.0, 3.0], [-0.847499967, 25.0, 26.0, 4.0], [-0.107500002, 27.0, 28.0, 0.0], [-0.378947139, 0.0, 0.0, 0.0], [-0.853500009, 29.0, 30.0, 4.0], [-0.742499948, 31.0, 32.0, 1.0], [-0.365999997, 33.0, 34.0, 0.0], [-0.384309381, 0.0, 0.0, 0.0], [-0.351479322, 0.0, 0.0, 0.0], [0.43508783, 0.0, 0.0, 0.0], [0.410938144, 0.0, 0.0, 0.0], [-0.470555961, 0.0, 0.0, 0.0], [0.21081461, 0.0, 0.0, 0.0], [0.448276103, 0.0, 0.0, 0.0], [-0.338660151, 0.0, 0.0, 0.0], [0.370032698, 0.0, 0.0, 0.0], [-0.543761015, 0.0, 0.0, 0.0], [0.233117789, 0.0, 0.0, 0.0], [-0.367413014, 0.0, 0.0, 0.0], [0.111633301, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 13, 14, 23, 24, 25, 26, 27, 28, 18, 29, 30, 31, 32, 33, 34, 22])
    branch_indices = np.array([0, 1, 4, 8, 2, 5, 9, 15, 16, 10, 17, 6, 11, 19, 20, 12, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_19(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.905499995, 1.0, 2.0, 1.0], [-0.416644931, 0.0, 0.0, 0.0], [-0.2755, 3.0, 4.0, 0.0], [0.510499954, 5.0, 6.0, 2.0], [0.705500007, 7.0, 8.0, 2.0], [-0.827499986, 9.0, 10.0, 1.0], [-0.853500009, 11.0, 12.0, 1.0], [-0.260500014, 13.0, 14.0, 0.0], [-0.931499958, 15.0, 16.0, 4.0], [0.401000023, 17.0, 18.0, 2.0], [-0.792500019, 19.0, 20.0, 1.0], [-0.425819039, 0.0, 0.0, 0.0], [0.755500019, 21.0, 22.0, 2.0], [0.65200001, 23.0, 24.0, 2.0], [-0.843500018, 25.0, 26.0, 4.0], [-0.240999997, 27.0, 28.0, 0.0], [-0.427320302, 0.0, 0.0, 0.0], [0.3679775, 0.0, 0.0, 0.0], [-0.371782124, 0.0, 0.0, 0.0], [0.707795203, 0.0, 0.0, 0.0], [0.388078481, 0.0, 0.0, 0.0], [0.197601929, 0.0, 0.0, 0.0], [-0.156399488, 0.0, 0.0, 0.0], [-0.395409793, 0.0, 0.0, 0.0], [0.768332541, 0.0, 0.0, 0.0], [0.114633724, 0.0, 0.0, 0.0], [-0.39930886, 0.0, 0.0, 0.0], [0.657096684, 0.0, 0.0, 0.0], [-0.276289761, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 11, 21, 22, 23, 24, 25, 26, 27, 28, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 12, 4, 7, 13, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_20(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [-0.841500044, 3.0, 4.0, 1.0], [-0.305000007, 5.0, 6.0, 1.0], [-0.416203678, 0.0, 0.0, 0.0], [-0.83949995, 7.0, 8.0, 1.0], [-0.968500018, 9.0, 10.0, 4.0], [-0.295000017, 11.0, 12.0, 0.0], [0.514926791, 0.0, 0.0, 0.0], [-0.961500049, 13.0, 14.0, 4.0], [0.308499992, 15.0, 16.0, 2.0], [-0.0725499988, 17.0, 18.0, 0.0], [-0.303499997, 19.0, 20.0, 0.0], [0.425664932, 0.0, 0.0, 0.0], [0.329999983, 21.0, 22.0, 2.0], [-0.374840558, 0.0, 0.0, 0.0], [-0.988499999, 23.0, 24.0, 4.0], [-0.972499967, 25.0, 26.0, 4.0], [-0.102499999, 27.0, 28.0, 0.0], [-0.600499988, 29.0, 30.0, 1.0], [-0.273999989, 31.0, 32.0, 1.0], [-0.347863168, 0.0, 0.0, 0.0], [-0.344480097, 0.0, 0.0, 0.0], [0.0298142619, 0.0, 0.0, 0.0], [-0.0197468512, 0.0, 0.0, 0.0], [0.614154518, 0.0, 0.0, 0.0], [-0.118699789, 0.0, 0.0, 0.0], [-0.431237519, 0.0, 0.0, 0.0], [0.0941312164, 0.0, 0.0, 0.0], [0.496489018, 0.0, 0.0, 0.0], [-0.452022552, 0.0, 0.0, 0.0], [0.16470246, 0.0, 0.0, 0.0], [-0.00708077569, 0.0, 0.0, 0.0], [0.44290331, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 21, 22, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 20, 12])
    branch_indices = np.array([0, 1, 4, 8, 13, 2, 5, 9, 15, 16, 10, 17, 18, 6, 11, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_21(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [0.623000026, 3.0, 4.0, 0.0], [-0.420721978, 0.0, 0.0, 0.0], [-0.297500014, 5.0, 6.0, 0.0], [-0.379365236, 0.0, 0.0, 0.0], [-0.524500012, 7.0, 8.0, 0.0], [-0.273499995, 9.0, 10.0, 0.0], [-0.760500014, 11.0, 12.0, 0.0], [-0.978500009, 13.0, 14.0, 1.0], [-0.284500003, 15.0, 16.0, 0.0], [-0.212500006, 17.0, 18.0, 0.0], [-0.256134719, 0.0, 0.0, 0.0], [0.537694573, 0.0, 0.0, 0.0], [-0.374971747, 0.0, 0.0, 0.0], [0.423126042, 0.0, 0.0, 0.0], [0.362020403, 0.0, 0.0, 0.0], [1.57740498, 0.0, 0.0, 0.0], [-0.164277077, 0.0, 0.0, 0.0], [0.112763554, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_22(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.418825895, 0.0, 0.0, 0.0], [-0.524500012, 5.0, 6.0, 0.0], [-0.405555785, 0.0, 0.0, 0.0], [-0.360353857, 0.0, 0.0, 0.0], [-0.407499999, 7.0, 8.0, 0.0], [-0.99849999, 9.0, 10.0, 1.0], [-0.999500036, 11.0, 12.0, 1.0], [0.104034923, 0.0, 0.0, 0.0], [0.704453528, 0.0, 0.0, 0.0], [0.12866731, 0.0, 0.0, 0.0], [0.00319057563, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 10, 11, 12, 4, 2])
    branch_indices = np.array([0, 1, 3, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_23(xs):
    #Predicts Class 5
    function_dict = np.array([[0.172499999, 1.0, 2.0, 0.0], [-0.143999994, 3.0, 4.0, 2.0], [0.623000026, 5.0, 6.0, 0.0], [-0.337500006, 7.0, 8.0, 0.0], [-0.418824911, 0.0, 0.0, 0.0], [0.212500006, 9.0, 10.0, 0.0], [0.421708703, 0.0, 0.0, 0.0], [-0.364499986, 11.0, 12.0, 0.0], [-0.997500002, 13.0, 14.0, 1.0], [0.201499999, 15.0, 16.0, 0.0], [0.256500006, 17.0, 18.0, 0.0], [-0.760500014, 19.0, 20.0, 0.0], [1.01951444, 0.0, 0.0, 0.0], [-0.149500012, 21.0, 22.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [-0.999500036, 25.0, 26.0, 1.0], [-0.988999963, 27.0, 28.0, 1.0], [0.228500009, 29.0, 30.0, 0.0], [0.276499987, 31.0, 32.0, 0.0], [0.42471844, 0.0, 0.0, 0.0], [0.044209484, 0.0, 0.0, 0.0], [-0.0847777575, 0.0, 0.0, 0.0], [-0.32873708, 0.0, 0.0, 0.0], [-0.298992425, 0.0, 0.0, 0.0], [0.293435246, 0.0, 0.0, 0.0], [-0.318612695, 0.0, 0.0, 0.0], [0.637293994, 0.0, 0.0, 0.0], [0.795396984, 0.0, 0.0, 0.0], [-0.131789342, 0.0, 0.0, 0.0], [0.197513461, 0.0, 0.0, 0.0], [-0.489159226, 0.0, 0.0, 0.0], [0.94386822, 0.0, 0.0, 0.0], [0.120453753, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 2, 5, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_24(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [0.425000012, 3.0, 4.0, 2.0], [0.127499998, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 3.0], [-0.791499972, 9.0, 10.0, 1.0], [-0.60650003, 11.0, 12.0, 1.0], [-0.457603812, 0.0, 0.0, 0.0], [-0.410274744, 0.0, 0.0, 0.0], [-0.863000035, 13.0, 14.0, 1.0], [-0.98150003, 15.0, 16.0, 4.0], [0.626000047, 17.0, 18.0, 2.0], [-0.965499997, 19.0, 20.0, 4.0], [-0.870499969, 21.0, 22.0, 4.0], [0.09815, 23.0, 24.0, 2.0], [-0.0623000003, 25.0, 26.0, 0.0], [0.481885046, 0.0, 0.0, 0.0], [-0.124310106, 0.0, 0.0, 0.0], [0.462000012, 27.0, 28.0, 2.0], [0.0887545794, 0.0, 0.0, 0.0], [-0.184500009, 29.0, 30.0, 0.0], [-0.155499995, 31.0, 32.0, 0.0], [-0.148499995, 33.0, 34.0, 0.0], [-0.281000018, 35.0, 36.0, 0.0], [-0.272230089, 0.0, 0.0, 0.0], [0.36136502, 0.0, 0.0, 0.0], [-0.477222592, 0.0, 0.0, 0.0], [-0.141303912, 0.0, 0.0, 0.0], [0.0980509445, 0.0, 0.0, 0.0], [-0.395459831, 0.0, 0.0, 0.0], [0.439742595, 0.0, 0.0, 0.0], [-0.0779584348, 0.0, 0.0, 0.0], [0.0219949428, 0.0, 0.0, 0.0], [0.281922311, 0.0, 0.0, 0.0], [-0.373287171, 0.0, 0.0, 0.0], [0.0767254904, 0.0, 0.0, 0.0], [-0.475424021, 0.0, 0.0, 0.0], [0.231167659, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 23, 24, 25, 26, 15, 16, 27, 28, 18, 29, 30, 31, 32, 33, 34, 35, 36, 6])
    branch_indices = np.array([0, 1, 3, 8, 13, 14, 4, 9, 10, 17, 2, 5, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_25(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.413460493, 0.0, 0.0, 0.0], [-0.973500013, 3.0, 4.0, 4.0], [-0.228500009, 5.0, 6.0, 0.0], [0.127499998, 7.0, 8.0, 0.0], [-0.458499998, 9.0, 10.0, 1.0], [-0.68900001, 11.0, 12.0, 1.0], [-0.155499995, 13.0, 14.0, 0.0], [0.494081348, 0.0, 0.0, 0.0], [-0.824499965, 15.0, 16.0, 1.0], [0.0175499022, 0.0, 0.0, 0.0], [-0.159000009, 17.0, 18.0, 0.0], [0.540500045, 19.0, 20.0, 2.0], [-0.961500049, 21.0, 22.0, 4.0], [-0.96449995, 23.0, 24.0, 4.0], [0.214842007, 0.0, 0.0, 0.0], [0.434074223, 0.0, 0.0, 0.0], [-0.131310001, 0.0, 0.0, 0.0], [0.250192255, 0.0, 0.0, 0.0], [0.518225074, 0.0, 0.0, 0.0], [-0.0171282254, 0.0, 0.0, 0.0], [-0.159350574, 0.0, 0.0, 0.0], [0.100049682, 0.0, 0.0, 0.0], [0.455456167, 0.0, 0.0, 0.0], [-0.324462563, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 10, 17, 18, 19, 20, 21, 22, 23, 24, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 11, 12, 4, 7, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_26(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.841500044, 1.0, 2.0, 1.0], [-0.41009137, 0.0, 0.0, 0.0], [-0.278500021, 3.0, 4.0, 1.0], [0.0280999988, 5.0, 6.0, 0.0], [-0.996500015, 7.0, 8.0, 3.0], [-0.101500005, 9.0, 10.0, 0.0], [-0.484860688, 0.0, 0.0, 0.0], [-0.295000017, 11.0, 12.0, 0.0], [0.392621219, 0.0, 0.0, 0.0], [0.805500031, 13.0, 14.0, 2.0], [-0.661499977, 15.0, 16.0, 1.0], [-0.0861771926, 0.0, 0.0, 0.0], [0.308781475, 0.0, 0.0, 0.0], [0.00449501025, 0.0, 0.0, 0.0], [0.261025995, 0.0, 0.0, 0.0], [0.0325251743, 0.0, 0.0, 0.0], [0.455929905, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 11, 12, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_27(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.371500015, 1.0, 2.0, 2.0], [-0.0579499975, 3.0, 4.0, 0.0], [-0.374500006, 5.0, 6.0, 0.0], [-0.146499991, 7.0, 8.0, 0.0], [-0.0538500026, 9.0, 10.0, 0.0], [-0.0816705525, 0.0, 0.0, 0.0], [-0.414357424, 0.0, 0.0, 0.0], [-0.185499996, 11.0, 12.0, 0.0], [-0.688000023, 13.0, 14.0, 2.0], [-0.999500036, 15.0, 16.0, 4.0], [0.623000026, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.795000017, 23.0, 24.0, 2.0], [-0.997500002, 25.0, 26.0, 1.0], [0.00933792349, 0.0, 0.0, 0.0], [-0.89612025, 0.0, 0.0, 0.0], [0.01315, 27.0, 28.0, 0.0], [-0.3424716, 0.0, 0.0, 0.0], [0.00785083324, 0.0, 0.0, 0.0], [0.437421173, 0.0, 0.0, 0.0], [-0.382689267, 0.0, 0.0, 0.0], [-0.0776847228, 0.0, 0.0, 0.0], [0.236792445, 0.0, 0.0, 0.0], [0.82050848, 0.0, 0.0, 0.0], [-0.2537525, 0.0, 0.0, 0.0], [0.0983603969, 0.0, 0.0, 0.0], [-0.038159471, 0.0, 0.0, 0.0], [0.0848646536, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 15, 16, 27, 28, 18, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 4, 9, 10, 17, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_28(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.411658406, 0.0, 0.0, 0.0], [-0.0579499975, 5.0, 6.0, 0.0], [-0.392757237, 0.0, 0.0, 0.0], [-0.076700002, 7.0, 8.0, 0.0], [-0.0538500026, 9.0, 10.0, 0.0], [-0.0905500054, 11.0, 12.0, 0.0], [-0.0743499994, 13.0, 14.0, 0.0], [-0.0554499999, 15.0, 16.0, 0.0], [0.0945499986, 17.0, 18.0, 0.0], [0.0371941812, 0.0, 0.0, 0.0], [0.278880268, 0.0, 0.0, 0.0], [-1.29126096, 0.0, 0.0, 0.0], [-0.152041152, 0.0, 0.0, 0.0], [0.180186138, 0.0, 0.0, 0.0], [1.14375055, 0.0, 0.0, 0.0], [0.139083952, 0.0, 0.0, 0.0], [-0.073752366, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_29(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.143999994, 1.0, 2.0, 2.0], [0.623000026, 3.0, 4.0, 0.0], [-0.904500008, 5.0, 6.0, 1.0], [-0.915499985, 7.0, 8.0, 1.0], [0.402407706, 0.0, 0.0, 0.0], [-0.108946592, 0.0, 0.0, 0.0], [-0.412142426, 0.0, 0.0, 0.0], [0.363499999, 9.0, 10.0, 0.0], [0.625326097, 0.0, 0.0, 0.0], [0.282499999, 11.0, 12.0, 0.0], [0.445500016, 13.0, 14.0, 0.0], [-0.00304436544, 0.0, 0.0, 0.0], [-0.344521701, 0.0, 0.0, 0.0], [0.219422355, 0.0, 0.0, 0.0], [0.0537020564, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_30(xs):
    #Predicts Class 0
    function_dict = np.array([[0.211499989, 1.0, 2.0, 2.0], [0.0376999974, 3.0, 4.0, 2.0], [0.576499999, 5.0, 6.0, 2.0], [-0.404243469, 0.0, 0.0, 0.0], [-0.918500006, 7.0, 8.0, 1.0], [-0.953500032, 9.0, 10.0, 3.0], [-0.615499973, 11.0, 12.0, 1.0], [0.265738577, 0.0, 0.0, 0.0], [-0.987499952, 13.0, 14.0, 3.0], [-0.700500011, 15.0, 16.0, 1.0], [-0.931499958, 17.0, 18.0, 3.0], [-0.801499963, 19.0, 20.0, 4.0], [-0.267499983, 21.0, 22.0, 0.0], [-0.348835349, 0.0, 0.0, 0.0], [-0.0691409707, 0.0, 0.0, 0.0], [-0.0728999972, 23.0, 24.0, 0.0], [-0.730000019, 25.0, 26.0, 4.0], [-0.138999999, 27.0, 28.0, 0.0], [-0.514999986, 29.0, 30.0, 1.0], [0.657500029, 31.0, 32.0, 2.0], [0.643999994, 33.0, 34.0, 2.0], [-0.352499992, 35.0, 36.0, 0.0], [-0.597499967, 37.0, 38.0, 1.0], [-0.0330624878, 0.0, 0.0, 0.0], [0.323183745, 0.0, 0.0, 0.0], [-0.316652566, 0.0, 0.0, 0.0], [0.596108973, 0.0, 0.0, 0.0], [0.570043385, 0.0, 0.0, 0.0], [0.0321337134, 0.0, 0.0, 0.0], [-0.0600185506, 0.0, 0.0, 0.0], [0.601264119, 0.0, 0.0, 0.0], [0.13611187, 0.0, 0.0, 0.0], [0.387237281, 0.0, 0.0, 0.0], [0.195779577, 0.0, 0.0, 0.0], [-0.559059501, 0.0, 0.0, 0.0], [0.199999005, 0.0, 0.0, 0.0], [-0.412350178, 0.0, 0.0, 0.0], [-0.303001255, 0.0, 0.0, 0.0], [0.128731772, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 4, 8, 2, 5, 9, 15, 16, 10, 17, 18, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_31(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.897500038, 1.0, 2.0, 1.0], [-0.40061596, 0.0, 0.0, 0.0], [-0.939499974, 3.0, 4.0, 4.0], [-0.950500011, 5.0, 6.0, 4.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.681499958, 9.0, 10.0, 1.0], [-0.946500003, 11.0, 12.0, 4.0], [-0.192499995, 13.0, 14.0, 0.0], [0.127499998, 15.0, 16.0, 0.0], [-0.178499997, 17.0, 18.0, 0.0], [-0.148499995, 19.0, 20.0, 0.0], [-0.982499957, 21.0, 22.0, 3.0], [-0.253000021, 23.0, 24.0, 0.0], [-0.736500025, 25.0, 26.0, 4.0], [-0.992499948, 27.0, 28.0, 3.0], [0.426499993, 29.0, 30.0, 2.0], [0.248972073, 0.0, 0.0, 0.0], [-0.0957459584, 0.0, 0.0, 0.0], [0.287355542, 0.0, 0.0, 0.0], [0.230896175, 0.0, 0.0, 0.0], [-0.31677416, 0.0, 0.0, 0.0], [0.293492436, 0.0, 0.0, 0.0], [0.835128605, 0.0, 0.0, 0.0], [0.212236717, 0.0, 0.0, 0.0], [-0.169514596, 0.0, 0.0, 0.0], [-0.00745659927, 0.0, 0.0, 0.0], [-0.385402292, 0.0, 0.0, 0.0], [0.865753114, 0.0, 0.0, 0.0], [-0.0255237669, 0.0, 0.0, 0.0], [-0.10292808, 0.0, 0.0, 0.0], [-0.403237402, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_32(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.841500044, 1.0, 2.0, 1.0], [-0.404001653, 0.0, 0.0, 0.0], [-0.278500021, 3.0, 4.0, 1.0], [-0.33950001, 5.0, 6.0, 0.0], [-0.295000017, 7.0, 8.0, 0.0], [-0.367500007, 9.0, 10.0, 0.0], [0.0280999988, 11.0, 12.0, 0.0], [-0.303499997, 13.0, 14.0, 0.0], [0.379463583, 0.0, 0.0, 0.0], [-0.476999998, 15.0, 16.0, 1.0], [-0.988499999, 17.0, 18.0, 3.0], [-0.111500002, 19.0, 20.0, 0.0], [-0.45109573, 0.0, 0.0, 0.0], [0.354163587, 0.0, 0.0, 0.0], [-0.273957014, 0.0, 0.0, 0.0], [-0.32649076, 0.0, 0.0, 0.0], [0.604050756, 0.0, 0.0, 0.0], [-0.229424, 0.0, 0.0, 0.0], [-0.512099504, 0.0, 0.0, 0.0], [0.0379672609, 0.0, 0.0, 0.0], [0.203313679, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 19, 20, 12, 13, 14, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_33(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.994500041, 1.0, 2.0, 4.0], [0.429499984, 3.0, 4.0, 0.0], [-0.406227767, 0.0, 0.0, 0.0], [0.428499997, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [-0.297500014, 9.0, 10.0, 0.0], [0.747617006, 0.0, 0.0, 0.0], [0.436500013, 11.0, 12.0, 0.0], [0.455500007, 13.0, 14.0, 0.0], [-0.524500012, 15.0, 16.0, 0.0], [-0.282999992, 17.0, 18.0, 0.0], [0.434499979, 19.0, 20.0, 0.0], [-0.592918575, 0.0, 0.0, 0.0], [0.446500003, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [0.249647975, 0.0, 0.0, 0.0], [-0.258584857, 0.0, 0.0, 0.0], [0.498955011, 0.0, 0.0, 0.0], [0.0527310595, 0.0, 0.0, 0.0], [-0.207824901, 0.0, 0.0, 0.0], [0.671785593, 0.0, 0.0, 0.0], [-0.0223161932, 0.0, 0.0, 0.0], [0.420269907, 0.0, 0.0, 0.0], [-0.0405668356, 0.0, 0.0, 0.0], [0.241979599, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 6, 19, 20, 12, 21, 22, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 7, 11, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_34(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.404555142, 0.0, 0.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [-0.376128614, 0.0, 0.0, 0.0], [0.111500002, 7.0, 8.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0850500017, 11.0, 12.0, 0.0], [0.141499996, 13.0, 14.0, 0.0], [0.958442271, 0.0, 0.0, 0.0], [-0.0187637173, 0.0, 0.0, 0.0], [0.0274046715, 0.0, 0.0, 0.0], [0.33972615, 0.0, 0.0, 0.0], [-0.377109796, 0.0, 0.0, 0.0], [-0.0486017615, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_35(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.143999994, 1.0, 2.0, 2.0], [0.623000026, 3.0, 4.0, 0.0], [-0.894500017, 5.0, 6.0, 1.0], [0.172499999, 7.0, 8.0, 0.0], [0.37959823, 0.0, 0.0, 0.0], [-0.117829047, 0.0, 0.0, 0.0], [-0.404589444, 0.0, 0.0, 0.0], [-0.0315500014, 9.0, 10.0, 0.0], [0.212500006, 11.0, 12.0, 0.0], [-0.0807500035, 13.0, 14.0, 0.0], [-0.996500015, 15.0, 16.0, 1.0], [-0.988999963, 17.0, 18.0, 1.0], [-0.923500001, 19.0, 20.0, 2.0], [0.00471036509, 0.0, 0.0, 0.0], [0.346559405, 0.0, 0.0, 0.0], [-0.358986259, 0.0, 0.0, 0.0], [0.13367112, 0.0, 0.0, 0.0], [0.440337002, 0.0, 0.0, 0.0], [-0.124054275, 0.0, 0.0, 0.0], [0.0937038511, 0.0, 0.0, 0.0], [-0.121398129, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 17, 18, 19, 20, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_36(xs):
    #Predicts Class 0
    function_dict = np.array([[0.125499994, 1.0, 2.0, 2.0], [-0.392394334, 0.0, 0.0, 0.0], [0.414499998, 3.0, 4.0, 2.0], [-0.782500029, 5.0, 6.0, 1.0], [0.417500019, 7.0, 8.0, 2.0], [-0.970499992, 9.0, 10.0, 4.0], [-0.770500004, 11.0, 12.0, 1.0], [0.415499985, 13.0, 14.0, 2.0], [-0.365500003, 15.0, 16.0, 0.0], [-0.873000026, 17.0, 18.0, 1.0], [-0.272500008, 19.0, 20.0, 0.0], [-0.95450002, 21.0, 22.0, 4.0], [-0.939999998, 23.0, 24.0, 4.0], [0.203633741, 0.0, 0.0, 0.0], [0.626814902, 0.0, 0.0, 0.0], [-0.338703156, 0.0, 0.0, 0.0], [-0.346000016, 25.0, 26.0, 0.0], [0.317798138, 0.0, 0.0, 0.0], [-0.291612148, 0.0, 0.0, 0.0], [-0.219255298, 0.0, 0.0, 0.0], [0.275630832, 0.0, 0.0, 0.0], [-0.278392136, 0.0, 0.0, 0.0], [-0.898197591, 0.0, 0.0, 0.0], [-0.346446246, 0.0, 0.0, 0.0], [0.026758315, 0.0, 0.0, 0.0], [0.48912856, 0.0, 0.0, 0.0], [0.0326434895, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 13, 14, 15, 25, 26])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_37(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.402348906, 0.0, 0.0, 0.0], [-0.796499968, 3.0, 4.0, 4.0], [-0.374500006, 5.0, 6.0, 0.0], [-0.297999978, 7.0, 8.0, 0.0], [-0.99849999, 9.0, 10.0, 3.0], [-0.346000016, 11.0, 12.0, 0.0], [-0.697000027, 13.0, 14.0, 1.0], [-0.393356711, 0.0, 0.0, 0.0], [-0.104867175, 0.0, 0.0, 0.0], [0.402105957, 0.0, 0.0, 0.0], [-0.848500013, 15.0, 16.0, 4.0], [-0.315500021, 17.0, 18.0, 0.0], [0.348241121, 0.0, 0.0, 0.0], [-0.776499987, 19.0, 20.0, 4.0], [-0.43592307, 0.0, 0.0, 0.0], [0.581292629, 0.0, 0.0, 0.0], [0.181104809, 0.0, 0.0, 0.0], [0.0170327723, 0.0, 0.0, 0.0], [0.0355188996, 0.0, 0.0, 0.0], [-0.308256686, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 15, 16, 17, 18, 13, 19, 20, 8])
    branch_indices = np.array([0, 2, 3, 5, 6, 11, 12, 4, 7, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_38(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.841500044, 1.0, 2.0, 1.0], [-0.396733463, 0.0, 0.0, 0.0], [-0.24849999, 3.0, 4.0, 0.0], [-0.680999994, 5.0, 6.0, 1.0], [-0.956499994, 7.0, 8.0, 4.0], [-0.972499967, 9.0, 10.0, 4.0], [0.55250001, 11.0, 12.0, 2.0], [-0.648499966, 13.0, 14.0, 1.0], [-0.889500022, 15.0, 16.0, 4.0], [0.423500001, 17.0, 18.0, 2.0], [-0.399079531, 0.0, 0.0, 0.0], [0.468500018, 19.0, 20.0, 2.0], [0.754999995, 21.0, 22.0, 2.0], [-0.919499993, 23.0, 24.0, 3.0], [-0.206499994, 25.0, 26.0, 0.0], [-0.779500008, 27.0, 28.0, 1.0], [0.65199995, 29.0, 30.0, 2.0], [-0.271707058, 0.0, 0.0, 0.0], [0.193094432, 0.0, 0.0, 0.0], [-0.220325783, 0.0, 0.0, 0.0], [0.837176263, 0.0, 0.0, 0.0], [-0.148071051, 0.0, 0.0, 0.0], [0.199976951, 0.0, 0.0, 0.0], [0.0476363674, 0.0, 0.0, 0.0], [0.888881624, 0.0, 0.0, 0.0], [0.00119820912, 0.0, 0.0, 0.0], [-0.350001037, 0.0, 0.0, 0.0], [-0.315184176, 0.0, 0.0, 0.0], [0.26913166, 0.0, 0.0, 0.0], [-0.21623598, 0.0, 0.0, 0.0], [0.113666631, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_39(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [-0.0905500054, 3.0, 4.0, 0.0], [-0.402521431, 0.0, 0.0, 0.0], [-0.111500002, 5.0, 6.0, 0.0], [-0.0802000016, 7.0, 8.0, 0.0], [-0.115500003, 9.0, 10.0, 0.0], [-0.0987499952, 11.0, 12.0, 0.0], [-0.0898000002, 13.0, 14.0, 0.0], [-0.51699996, 15.0, 16.0, 2.0], [-0.212500006, 17.0, 18.0, 0.0], [-0.367565274, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.0922999978, 21.0, 22.0, 0.0], [-0.0560342334, 0.0, 0.0, 0.0], [-0.394015431, 0.0, 0.0, 0.0], [-0.721500039, 23.0, 24.0, 2.0], [-0.386500001, 25.0, 26.0, 2.0], [-0.0419088006, 0.0, 0.0, 0.0], [0.108010627, 0.0, 0.0, 0.0], [0.658995986, 0.0, 0.0, 0.0], [0.128877267, 0.0, 0.0, 0.0], [-0.166837007, 0.0, 0.0, 0.0], [0.596657634, 0.0, 0.0, 0.0], [0.0176504143, 0.0, 0.0, 0.0], [0.161263287, 0.0, 0.0, 0.0], [-0.338443756, 0.0, 0.0, 0.0], [0.0933244154, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 19, 20, 21, 22, 13, 14, 23, 24, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 11, 12, 4, 7, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_40(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.396285117, 0.0, 0.0, 0.0], [-0.380999982, 5.0, 6.0, 2.0], [-0.35545823, 0.0, 0.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [-0.225999996, 9.0, 10.0, 0.0], [-0.770500004, 11.0, 12.0, 2.0], [-0.401499987, 13.0, 14.0, 2.0], [0.0375577472, 0.0, 0.0, 0.0], [0.38723436, 0.0, 0.0, 0.0], [0.0296960287, 0.0, 0.0, 0.0], [0.295255154, 0.0, 0.0, 0.0], [-0.0602831692, 0.0, 0.0, 0.0], [-0.586321175, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_41(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.143999994, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.390111029, 0.0, 0.0, 0.0], [-0.851999998, 5.0, 6.0, 2.0], [-0.335500002, 7.0, 8.0, 0.0], [0.429499984, 9.0, 10.0, 0.0], [0.541999996, 11.0, 12.0, 0.0], [-0.996500015, 13.0, 14.0, 1.0], [-0.0806500018, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.445500016, 19.0, 20.0, 0.0], [-0.478351951, 0.0, 0.0, 0.0], [0.314236999, 0.0, 0.0, 0.0], [-0.410000026, 21.0, 22.0, 0.0], [-0.501000047, 23.0, 24.0, 0.0], [-0.993999958, 25.0, 26.0, 1.0], [-0.997500002, 27.0, 28.0, 4.0], [-0.0853111595, 0.0, 0.0, 0.0], [0.254743069, 0.0, 0.0, 0.0], [0.343136311, 0.0, 0.0, 0.0], [0.0293842517, 0.0, 0.0, 0.0], [0.188135177, 0.0, 0.0, 0.0], [0.700486779, 0.0, 0.0, 0.0], [0.179632872, 0.0, 0.0, 0.0], [-0.294364601, 0.0, 0.0, 0.0], [-0.312816709, 0.0, 0.0, 0.0], [0.12762174, 0.0, 0.0, 0.0], [0.070951961, 0.0, 0.0, 0.0], [0.432069421, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 12, 21, 22, 23, 24, 25, 26, 27, 28, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_42(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.575999975, 3.0, 4.0, 2.0], [-0.603999972, 5.0, 6.0, 4.0], [-0.935500026, 7.0, 8.0, 4.0], [-0.659999967, 9.0, 10.0, 1.0], [-0.63349998, 11.0, 12.0, 4.0], [-0.945500016, 13.0, 14.0, 3.0], [-0.949499965, 15.0, 16.0, 4.0], [-0.744500041, 17.0, 18.0, 1.0], [0.443811893, 0.0, 0.0, 0.0], [-0.334011555, 0.0, 0.0, 0.0], [0.115999997, 19.0, 20.0, 0.0], [-0.498236835, 0.0, 0.0, 0.0], [0.546601892, 0.0, 0.0, 0.0], [-0.250768781, 0.0, 0.0, 0.0], [0.457000017, 21.0, 22.0, 2.0], [-0.70600301, 0.0, 0.0, 0.0], [0.352197081, 0.0, 0.0, 0.0], [-0.313760757, 0.0, 0.0, 0.0], [-0.0727999955, 23.0, 24.0, 0.0], [-0.347991407, 0.0, 0.0, 0.0], [-0.352511764, 0.0, 0.0, 0.0], [0.166784719, 0.0, 0.0, 0.0], [0.0163802374, 0.0, 0.0, 0.0], [0.229173407, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 17, 18, 9, 10, 23, 24, 20, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 2, 5, 11, 19, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_43(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.389861047, 0.0, 0.0, 0.0], [0.455500007, 3.0, 4.0, 2.0], [-0.942999959, 5.0, 6.0, 3.0], [0.0797500014, 7.0, 8.0, 0.0], [-0.107500002, 9.0, 10.0, 0.0], [-0.220499992, 11.0, 12.0, 0.0], [-0.850499988, 13.0, 14.0, 1.0], [-0.749000013, 15.0, 16.0, 1.0], [-0.208499998, 17.0, 18.0, 0.0], [0.0238500014, 19.0, 20.0, 0.0], [-0.25999999, 21.0, 22.0, 0.0], [-0.975499988, 23.0, 24.0, 4.0], [-0.378078133, 0.0, 0.0, 0.0], [-0.283500016, 25.0, 26.0, 0.0], [0.0747664422, 0.0, 0.0, 0.0], [0.423387855, 0.0, 0.0, 0.0], [0.0625775531, 0.0, 0.0, 0.0], [0.336305887, 0.0, 0.0, 0.0], [-0.402432948, 0.0, 0.0, 0.0], [0.11563161, 0.0, 0.0, 0.0], [-0.0289133657, 0.0, 0.0, 0.0], [0.321867704, 0.0, 0.0, 0.0], [-0.0351606831, 0.0, 0.0, 0.0], [-0.510326862, 0.0, 0.0, 0.0], [0.0631136298, 0.0, 0.0, 0.0], [-0.0565846488, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 13, 25, 26, 15, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 14, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_44(xs):
    #Predicts Class 2
    function_dict = np.array([[0.149500012, 1.0, 2.0, 2.0], [-0.390736341, 0.0, 0.0, 0.0], [0.178499997, 3.0, 4.0, 2.0], [0.550169706, 0.0, 0.0, 0.0], [0.868999958, 5.0, 6.0, 2.0], [0.84800005, 7.0, 8.0, 2.0], [-0.917999983, 9.0, 10.0, 4.0], [0.804499984, 11.0, 12.0, 2.0], [-0.580565274, 0.0, 0.0, 0.0], [-0.238632619, 0.0, 0.0, 0.0], [0.466826409, 0.0, 0.0, 0.0], [0.00289390609, 0.0, 0.0, 0.0], [0.358115196, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 11, 12, 8, 9, 10])
    branch_indices = np.array([0, 2, 4, 5, 7, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_45(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.391196042, 0.0, 0.0, 0.0], [0.5255, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [0.513000011, 9.0, 10.0, 0.0], [0.537500024, 11.0, 12.0, 0.0], [-0.851999998, 13.0, 14.0, 2.0], [0.541999996, 15.0, 16.0, 0.0], [0.506000042, 17.0, 18.0, 0.0], [-0.654932261, 0.0, 0.0, 0.0], [0.863944292, 0.0, 0.0, 0.0], [0.561499953, 19.0, 20.0, 0.0], [0.217500001, 21.0, 22.0, 0.0], [0.0353000015, 23.0, 24.0, 0.0], [0.00884999987, 25.0, 26.0, 0.0], [-0.369494975, 0.0, 0.0, 0.0], [0.0272356346, 0.0, 0.0, 0.0], [0.466086775, 0.0, 0.0, 0.0], [-0.0400904529, 0.0, 0.0, 0.0], [0.182846233, 0.0, 0.0, 0.0], [-0.302296221, 0.0, 0.0, 0.0], [-0.0189086348, 0.0, 0.0, 0.0], [0.211085245, 0.0, 0.0, 0.0], [-0.392989904, 0.0, 0.0, 0.0], [-0.0196760781, 0.0, 0.0, 0.0], [0.176448449, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 11, 19, 20, 21, 22, 23, 24, 25, 26, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 12, 4, 7, 13, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_46(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.385536164, 0.0, 0.0, 0.0], [-0.00550500024, 5.0, 6.0, 0.0], [-0.331945032, 0.0, 0.0, 0.0], [-0.0239499994, 7.0, 8.0, 0.0], [0.00588999968, 9.0, 10.0, 0.0], [-0.0250499994, 11.0, 12.0, 0.0], [-0.0156999994, 13.0, 14.0, 0.0], [0.00325499987, 15.0, 16.0, 0.0], [0.0234000012, 17.0, 18.0, 0.0], [0.00147542125, 0.0, 0.0, 0.0], [0.900320232, 0.0, 0.0, 0.0], [-0.421900123, 0.0, 0.0, 0.0], [-0.0856749266, 0.0, 0.0, 0.0], [0.145329729, 0.0, 0.0, 0.0], [0.688197017, 0.0, 0.0, 0.0], [-0.14344433, 0.0, 0.0, 0.0], [0.0677862987, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_47(xs):
    #Predicts Class 5
    function_dict = np.array([[0.166000009, 1.0, 2.0, 2.0], [0.623000026, 3.0, 4.0, 0.0], [-0.385406375, 0.0, 0.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.331343532, 0.0, 0.0, 0.0], [0.588, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.552999973, 11.0, 12.0, 0.0], [0.323257744, 0.0, 0.0, 0.0], [0.620499969, 13.0, 14.0, 0.0], [0.286483705, 0.0, 0.0, 0.0], [0.287809104, 0.0, 0.0, 0.0], [0.00120300963, 0.0, 0.0, 0.0], [-0.200280786, 0.0, 0.0, 0.0], [-0.520343184, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_48(xs):
    #Predicts Class 0
    function_dict = np.array([[0.0376999974, 1.0, 2.0, 2.0], [-0.375825226, 0.0, 0.0, 0.0], [0.653499961, 3.0, 4.0, 2.0], [-0.730000019, 5.0, 6.0, 4.0], [-0.2095, 7.0, 8.0, 0.0], [-0.569499969, 9.0, 10.0, 1.0], [-0.985499978, 11.0, 12.0, 3.0], [-0.250499994, 13.0, 14.0, 0.0], [-0.881500006, 15.0, 16.0, 4.0], [-0.89349997, 17.0, 18.0, 4.0], [-0.92750001, 19.0, 20.0, 3.0], [0.132790253, 0.0, 0.0, 0.0], [0.648448527, 0.0, 0.0, 0.0], [0.696500003, 21.0, 22.0, 2.0], [-0.712499976, 23.0, 24.0, 4.0], [-0.166500002, 25.0, 26.0, 0.0], [-0.568500042, 27.0, 28.0, 4.0], [0.024096461, 0.0, 0.0, 0.0], [-0.152231753, 0.0, 0.0, 0.0], [-0.445429176, 0.0, 0.0, 0.0], [0.201274127, 0.0, 0.0, 0.0], [0.24598667, 0.0, 0.0, 0.0], [-0.0869586766, 0.0, 0.0, 0.0], [0.524978518, 0.0, 0.0, 0.0], [-0.21494846, 0.0, 0.0, 0.0], [-0.0844742358, 0.0, 0.0, 0.0], [0.396389484, 0.0, 0.0, 0.0], [-0.328630567, 0.0, 0.0, 0.0], [0.258962423, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 11, 12, 21, 22, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_49(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.897500038, 1.0, 2.0, 1.0], [-0.372142047, 0.0, 0.0, 0.0], [0.657500029, 3.0, 4.0, 2.0], [-0.887500048, 5.0, 6.0, 4.0], [-0.522000015, 7.0, 8.0, 1.0], [-0.913499951, 9.0, 10.0, 4.0], [-0.611500025, 11.0, 12.0, 1.0], [-0.983500004, 13.0, 14.0, 3.0], [-0.86650002, 15.0, 16.0, 4.0], [-0.684499979, 17.0, 18.0, 1.0], [0.544499993, 19.0, 20.0, 2.0], [-0.948500037, 21.0, 22.0, 3.0], [-0.33950001, 23.0, 24.0, 0.0], [0.790499985, 25.0, 26.0, 2.0], [-0.268000007, 27.0, 28.0, 0.0], [-0.242500007, 29.0, 30.0, 0.0], [-0.359768838, 0.0, 0.0, 0.0], [-0.0158401821, 0.0, 0.0, 0.0], [0.126596048, 0.0, 0.0, 0.0], [-0.406120092, 0.0, 0.0, 0.0], [0.0212965962, 0.0, 0.0, 0.0], [0.736673176, 0.0, 0.0, 0.0], [-0.352174252, 0.0, 0.0, 0.0], [0.306993604, 0.0, 0.0, 0.0], [-0.316954195, 0.0, 0.0, 0.0], [-0.418427885, 0.0, 0.0, 0.0], [-0.0329995491, 0.0, 0.0, 0.0], [0.282082975, 0.0, 0.0, 0.0], [-0.339415133, 0.0, 0.0, 0.0], [0.386296391, 0.0, 0.0, 0.0], [-0.0607311167, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_50(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.841500044, 1.0, 2.0, 1.0], [-0.375715405, 0.0, 0.0, 0.0], [-0.278500021, 3.0, 4.0, 1.0], [-0.470499992, 5.0, 6.0, 1.0], [-0.913499951, 7.0, 8.0, 4.0], [-0.484499991, 9.0, 10.0, 1.0], [-0.461499989, 11.0, 12.0, 1.0], [0.390633643, 0.0, 0.0, 0.0], [-0.894500017, 13.0, 14.0, 4.0], [-0.490500003, 15.0, 16.0, 1.0], [0.573267221, 0.0, 0.0, 0.0], [-0.996999979, 17.0, 18.0, 3.0], [-0.993499994, 19.0, 20.0, 3.0], [-0.26184392, 0.0, 0.0, 0.0], [0.334545165, 0.0, 0.0, 0.0], [0.0327516459, 0.0, 0.0, 0.0], [-0.572576523, 0.0, 0.0, 0.0], [-0.0812257081, 0.0, 0.0, 0.0], [-0.687424958, 0.0, 0.0, 0.0], [0.276615351, 0.0, 0.0, 0.0], [-0.164938197, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 10, 17, 18, 19, 20, 7, 13, 14])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 11, 12, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_51(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.994500041, 1.0, 2.0, 4.0], [-0.00163000007, 3.0, 4.0, 0.0], [-0.376579493, 0.0, 0.0, 0.0], [-0.00413500005, 5.0, 6.0, 0.0], [0.01315, 7.0, 8.0, 0.0], [-0.00550500024, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.999500036, 13.0, 14.0, 4.0], [0.0234000012, 15.0, 16.0, 0.0], [-0.00885999948, 17.0, 18.0, 0.0], [-0.0052199997, 19.0, 20.0, 0.0], [-0.00209000008, 21.0, 22.0, 0.0], [0.106837615, 0.0, 0.0, 0.0], [-0.00132499996, 23.0, 24.0, 0.0], [-0.822000027, 25.0, 26.0, 2.0], [0.370132208, 0.0, 0.0, 0.0], [0.02685, 27.0, 28.0, 0.0], [0.0286243223, 0.0, 0.0, 0.0], [0.425478905, 0.0, 0.0, 0.0], [-0.61239028, 0.0, 0.0, 0.0], [-0.0377180688, 0.0, 0.0, 0.0], [0.511904418, 0.0, 0.0, 0.0], [0.0550388955, 0.0, 0.0, 0.0], [-0.625057936, 0.0, 0.0, 0.0], [-0.0150382044, 0.0, 0.0, 0.0], [-0.885915101, 0.0, 0.0, 0.0], [-0.197557658, 0.0, 0.0, 0.0], [-0.491889149, 0.0, 0.0, 0.0], [0.0160600245, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 12, 23, 24, 25, 26, 15, 27, 28, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 4, 7, 13, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_52(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.0945499986, 3.0, 4.0, 0.0], [-0.371927679, 0.0, 0.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 3.0], [0.0507000014, 9.0, 10.0, 0.0], [0.0888999999, 11.0, 12.0, 0.0], [0.190499991, 13.0, 14.0, 0.0], [0.344254732, 0.0, 0.0, 0.0], [0.0447499976, 15.0, 16.0, 0.0], [-0.885499954, 17.0, 18.0, 2.0], [0.0867500007, 19.0, 20.0, 0.0], [0.0912000015, 21.0, 22.0, 0.0], [0.150000006, 23.0, 24.0, 0.0], [0.196500003, 25.0, 26.0, 0.0], [0.00350907329, 0.0, 0.0, 0.0], [0.45377776, 0.0, 0.0, 0.0], [-0.251132995, 0.0, 0.0, 0.0], [0.279497534, 0.0, 0.0, 0.0], [0.181595758, 0.0, 0.0, 0.0], [0.741426647, 0.0, 0.0, 0.0], [-0.225325748, 0.0, 0.0, 0.0], [0.288431764, 0.0, 0.0, 0.0], [-0.328555137, 0.0, 0.0, 0.0], [-0.110185966, 0.0, 0.0, 0.0], [0.315712065, 0.0, 0.0, 0.0], [-0.197303504, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_53(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.435000002, 1.0, 2.0, 2.0], [-0.546499968, 3.0, 4.0, 2.0], [0.102500007, 5.0, 6.0, 0.0], [0.623000026, 7.0, 8.0, 0.0], [-0.523000002, 9.0, 10.0, 2.0], [-0.388662457, 0.0, 0.0, 0.0], [0.170915619, 0.0, 0.0, 0.0], [-0.149500012, 11.0, 12.0, 0.0], [0.291172475, 0.0, 0.0, 0.0], [0.380336583, 0.0, 0.0, 0.0], [-0.48300001, 13.0, 14.0, 2.0], [-0.169499993, 15.0, 16.0, 0.0], [-0.0807500035, 17.0, 18.0, 0.0], [-0.197612271, 0.0, 0.0, 0.0], [0.281374514, 0.0, 0.0, 0.0], [-0.035149537, 0.0, 0.0, 0.0], [1.15148318, 0.0, 0.0, 0.0], [-0.367338389, 0.0, 0.0, 0.0], [0.00318672555, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 9, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_54(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [0.439999998, 3.0, 4.0, 2.0], [-0.977499962, 5.0, 6.0, 4.0], [-0.994500041, 7.0, 8.0, 3.0], [0.460500002, 9.0, 10.0, 2.0], [-0.210000008, 11.0, 12.0, 0.0], [-0.24149999, 13.0, 14.0, 0.0], [-0.863000035, 15.0, 16.0, 1.0], [-0.816499949, 17.0, 18.0, 1.0], [0.41461122, 0.0, 0.0, 0.0], [-0.983500004, 19.0, 20.0, 4.0], [-0.760999978, 21.0, 22.0, 1.0], [0.487499982, 23.0, 24.0, 2.0], [-0.961500049, 25.0, 26.0, 4.0], [-0.972499967, 27.0, 28.0, 3.0], [0.0376999974, 29.0, 30.0, 2.0], [-0.431502402, 0.0, 0.0, 0.0], [0.0869306922, 0.0, 0.0, 0.0], [-0.281881094, 0.0, 0.0, 0.0], [0.102912076, 0.0, 0.0, 0.0], [0.618499994, 31.0, 32.0, 2.0], [0.294794142, 0.0, 0.0, 0.0], [-0.295417309, 0.0, 0.0, 0.0], [0.00649969466, 0.0, 0.0, 0.0], [0.477978677, 0.0, 0.0, 0.0], [0.418500006, 33.0, 34.0, 2.0], [-0.946500003, 35.0, 36.0, 4.0], [-0.978500009, 37.0, 38.0, 3.0], [0.637500048, 39.0, 40.0, 2.0], [-0.357011527, 0.0, 0.0, 0.0], [0.156277463, 0.0, 0.0, 0.0], [-0.407411426, 0.0, 0.0, 0.0], [0.0393890515, 0.0, 0.0, 0.0], [-0.273890287, 0.0, 0.0, 0.0], [0.465260953, 0.0, 0.0, 0.0], [-0.239805728, 0.0, 0.0, 0.0], [0.0658469349, 0.0, 0.0, 0.0], [-0.0386692546, 0.0, 0.0, 0.0], [-0.291323781, 0.0, 0.0, 0.0], [0.147321329, 0.0, 0.0, 0.0], [-0.0689249635, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 17, 18, 9, 19, 31, 32, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 20, 2, 5, 11, 12, 6, 13, 25, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_55(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.905499995, 1.0, 2.0, 1.0], [-0.361233592, 0.0, 0.0, 0.0], [-0.913499951, 3.0, 4.0, 4.0], [-0.33950001, 5.0, 6.0, 1.0], [-0.688500047, 7.0, 8.0, 1.0], [-0.654500008, 9.0, 10.0, 1.0], [-0.952499986, 11.0, 12.0, 4.0], [-0.746500015, 13.0, 14.0, 1.0], [-0.886000037, 15.0, 16.0, 3.0], [-0.178499997, 17.0, 18.0, 0.0], [-0.176499993, 19.0, 20.0, 0.0], [-0.0429463163, 0.0, 0.0, 0.0], [-0.452477694, 0.0, 0.0, 0.0], [-0.877499998, 21.0, 22.0, 4.0], [-0.948500037, 23.0, 24.0, 3.0], [-0.434000015, 25.0, 26.0, 1.0], [-0.901499987, 27.0, 28.0, 4.0], [-0.0452297516, 0.0, 0.0, 0.0], [0.219576955, 0.0, 0.0, 0.0], [0.183767736, 0.0, 0.0, 0.0], [-0.220753282, 0.0, 0.0, 0.0], [-0.282783926, 0.0, 0.0, 0.0], [0.15894942, 0.0, 0.0, 0.0], [0.319644511, 0.0, 0.0, 0.0], [-0.314386815, 0.0, 0.0, 0.0], [-0.271629632, 0.0, 0.0, 0.0], [0.00884972047, 0.0, 0.0, 0.0], [0.460607737, 0.0, 0.0, 0.0], [-0.0688146204, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 11, 12, 21, 22, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_56(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.986500025, 1.0, 2.0, 4.0], [-0.789499998, 3.0, 4.0, 1.0], [-0.149500012, 5.0, 6.0, 0.0], [-0.368748367, 0.0, 0.0, 0.0], [-0.1184, 7.0, 8.0, 0.0], [-0.186500013, 9.0, 10.0, 0.0], [0.685500026, 11.0, 12.0, 2.0], [-0.31069231, 0.0, 0.0, 0.0], [0.223816052, 0.0, 0.0, 0.0], [-0.191500008, 13.0, 14.0, 0.0], [-0.7755, 15.0, 16.0, 4.0], [0.523000002, 17.0, 18.0, 2.0], [-0.912999988, 19.0, 20.0, 4.0], [0.652500033, 21.0, 22.0, 2.0], [-0.888000011, 23.0, 24.0, 4.0], [-0.183499992, 25.0, 26.0, 0.0], [0.820500016, 27.0, 28.0, 2.0], [-0.138500005, 29.0, 30.0, 0.0], [-0.512499988, 31.0, 32.0, 1.0], [-0.531499982, 33.0, 34.0, 1.0], [-0.59800005, 35.0, 36.0, 1.0], [0.0820759833, 0.0, 0.0, 0.0], [-0.049261082, 0.0, 0.0, 0.0], [-0.482372791, 0.0, 0.0, 0.0], [-0.0758565292, 0.0, 0.0, 0.0], [0.780565739, 0.0, 0.0, 0.0], [0.218081057, 0.0, 0.0, 0.0], [-0.385711104, 0.0, 0.0, 0.0], [0.0139670409, 0.0, 0.0, 0.0], [-0.405567378, 0.0, 0.0, 0.0], [0.148619249, 0.0, 0.0, 0.0], [-0.336816549, 0.0, 0.0, 0.0], [0.291629672, 0.0, 0.0, 0.0], [-0.332197964, 0.0, 0.0, 0.0], [0.0385366902, 0.0, 0.0, 0.0], [0.604940176, 0.0, 0.0, 0.0], [0.215504855, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 13, 14, 10, 15, 16, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_57(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [-0.524500012, 3.0, 4.0, 0.0], [-0.363711476, 0.0, 0.0, 0.0], [-0.552999973, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.122384429, 0.0, 0.0, 0.0], [0.381398112, 0.0, 0.0, 0.0], [-0.319092631, 0.0, 0.0, 0.0], [-0.373000026, 9.0, 10.0, 0.0], [0.406690776, 0.0, 0.0, 0.0], [-0.297500014, 11.0, 12.0, 0.0], [-0.335710347, 0.0, 0.0, 0.0], [0.0113379657, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 7, 9, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 4, 8, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_58(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.980499983, 1.0, 2.0, 1.0], [-0.371500015, 3.0, 4.0, 2.0], [-0.364499986, 5.0, 6.0, 0.0], [-0.456, 7.0, 8.0, 2.0], [0.339861393, 0.0, 0.0, 0.0], [-0.0885215923, 0.0, 0.0, 0.0], [-0.356614977, 0.0, 0.0, 0.0], [0.194499999, 9.0, 10.0, 0.0], [-0.0425150022, 11.0, 12.0, 0.0], [0.190499991, 13.0, 14.0, 0.0], [0.202500001, 15.0, 16.0, 0.0], [-0.477793097, 0.0, 0.0, 0.0], [-0.0155007653, 0.0, 0.0, 0.0], [0.0101605365, 0.0, 0.0, 0.0], [0.856407762, 0.0, 0.0, 0.0], [-0.247939765, 0.0, 0.0, 0.0], [-0.0474171601, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_59(xs):
    #Predicts Class 5
    function_dict = np.array([[0.166000009, 1.0, 2.0, 2.0], [0.201499999, 3.0, 4.0, 0.0], [-0.353908926, 0.0, 0.0, 0.0], [0.00540999975, 5.0, 6.0, 0.0], [0.212500006, 7.0, 8.0, 0.0], [-0.337500006, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 3.0], [0.388803184, 0.0, 0.0, 0.0], [-0.989500046, 13.0, 14.0, 1.0], [-0.442000002, 15.0, 16.0, 0.0], [-0.169499993, 17.0, 18.0, 0.0], [0.198500007, 19.0, 20.0, 0.0], [0.156504795, 0.0, 0.0, 0.0], [-0.923500001, 21.0, 22.0, 2.0], [0.409500003, 23.0, 24.0, 0.0], [-0.0986324176, 0.0, 0.0, 0.0], [0.186037645, 0.0, 0.0, 0.0], [-0.251337051, 0.0, 0.0, 0.0], [0.0378969498, 0.0, 0.0, 0.0], [-0.386071324, 0.0, 0.0, 0.0], [-0.0159224328, 0.0, 0.0, 0.0], [0.038631741, 0.0, 0.0, 0.0], [-0.153099999, 0.0, 0.0, 0.0], [0.0330782272, 0.0, 0.0, 0.0], [0.360925049, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 20, 12, 7, 21, 22, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 4, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_60(xs):
    #Predicts Class 0
    function_dict = np.array([[0.125499994, 1.0, 2.0, 2.0], [-0.332875073, 0.0, 0.0, 0.0], [-0.365500003, 3.0, 4.0, 0.0], [-0.319489151, 0.0, 0.0, 0.0], [-0.854499996, 5.0, 6.0, 4.0], [-0.578999996, 7.0, 8.0, 1.0], [0.685500026, 9.0, 10.0, 2.0], [-0.346000016, 11.0, 12.0, 0.0], [-0.845499992, 13.0, 14.0, 3.0], [-0.17750001, 15.0, 16.0, 0.0], [-0.142499998, 17.0, 18.0, 0.0], [0.473639131, 0.0, 0.0, 0.0], [0.00427581649, 0.0, 0.0, 0.0], [-0.317519188, 0.0, 0.0, 0.0], [0.268903047, 0.0, 0.0, 0.0], [0.042312149, 0.0, 0.0, 0.0], [0.383531958, 0.0, 0.0, 0.0], [0.0687239394, 0.0, 0.0, 0.0], [-0.397302985, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 11, 12, 13, 14, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 4, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_61(xs):
    #Predicts Class 1
    function_dict = np.array([[0.178499997, 1.0, 2.0, 2.0], [-0.176499993, 3.0, 4.0, 0.0], [-0.796499968, 5.0, 6.0, 4.0], [-0.0749000013, 7.0, 8.0, 2.0], [-0.432429135, 0.0, 0.0, 0.0], [-0.828500032, 9.0, 10.0, 1.0], [-0.297999978, 11.0, 12.0, 0.0], [-0.210059837, 0.0, 0.0, 0.0], [0.267550498, 0.0, 0.0, 0.0], [-0.92900002, 13.0, 14.0, 4.0], [-0.315500021, 15.0, 16.0, 0.0], [0.643000007, 17.0, 18.0, 2.0], [-0.338923424, 0.0, 0.0, 0.0], [-0.162499994, 19.0, 20.0, 0.0], [-0.290499985, 21.0, 22.0, 0.0], [-0.332499981, 23.0, 24.0, 0.0], [-0.260500014, 25.0, 26.0, 0.0], [-0.107045852, 0.0, 0.0, 0.0], [0.0890923366, 0.0, 0.0, 0.0], [-0.268663347, 0.0, 0.0, 0.0], [0.152294561, 0.0, 0.0, 0.0], [0.524208188, 0.0, 0.0, 0.0], [-0.00382876676, 0.0, 0.0, 0.0], [-0.0344997756, 0.0, 0.0, 0.0], [0.447280288, 0.0, 0.0, 0.0], [-0.0967804268, 0.0, 0.0, 0.0], [0.0388033874, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 19, 20, 21, 22, 23, 24, 25, 26, 17, 18, 12])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 13, 14, 10, 15, 16, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_62(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.823500037, 1.0, 2.0, 1.0], [-0.995499969, 3.0, 4.0, 3.0], [-0.605499983, 5.0, 6.0, 1.0], [-0.330405682, 0.0, 0.0, 0.0], [-0.973500013, 7.0, 8.0, 4.0], [-0.931499958, 9.0, 10.0, 3.0], [-0.960500002, 11.0, 12.0, 3.0], [0.136708438, 0.0, 0.0, 0.0], [-0.220934018, 0.0, 0.0, 0.0], [-0.630499959, 13.0, 14.0, 1.0], [-0.201499999, 15.0, 16.0, 0.0], [0.67750001, 17.0, 18.0, 2.0], [0.657000005, 19.0, 20.0, 2.0], [-0.939499974, 21.0, 22.0, 4.0], [-0.856999993, 23.0, 24.0, 4.0], [0.353500009, 25.0, 26.0, 2.0], [-0.142499998, 27.0, 28.0, 0.0], [-0.2245, 29.0, 30.0, 0.0], [0.693500042, 31.0, 32.0, 2.0], [-0.861000001, 33.0, 34.0, 4.0], [-0.95449996, 35.0, 36.0, 3.0], [0.0323480703, 0.0, 0.0, 0.0], [-0.133541182, 0.0, 0.0, 0.0], [-0.43186298, 0.0, 0.0, 0.0], [0.240837365, 0.0, 0.0, 0.0], [0.0737734437, 0.0, 0.0, 0.0], [-0.356818914, 0.0, 0.0, 0.0], [0.78627044, 0.0, 0.0, 0.0], [0.0189338326, 0.0, 0.0, 0.0], [0.373509794, 0.0, 0.0, 0.0], [0.0638878196, 0.0, 0.0, 0.0], [-0.483398199, 0.0, 0.0, 0.0], [0.0699309781, 0.0, 0.0, 0.0], [-0.0410760753, 0.0, 0.0, 0.0], [-0.461347818, 0.0, 0.0, 0.0], [-0.329950333, 0.0, 0.0, 0.0], [0.127859831, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 13, 14, 10, 15, 16, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_63(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.343952, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 3.0], [-0.997500002, 7.0, 8.0, 4.0], [-0.770500004, 9.0, 10.0, 2.0], [0.141499996, 11.0, 12.0, 0.0], [0.467226535, 0.0, 0.0, 0.0], [-0.260861725, 0.0, 0.0, 0.0], [-0.795000017, 13.0, 14.0, 2.0], [0.240999997, 15.0, 16.0, 0.0], [-0.519999981, 17.0, 18.0, 2.0], [-0.997500002, 19.0, 20.0, 1.0], [0.0109314229, 0.0, 0.0, 0.0], [0.331896782, 0.0, 0.0, 0.0], [-0.11470674, 0.0, 0.0, 0.0], [0.196443811, 0.0, 0.0, 0.0], [0.236917004, 0.0, 0.0, 0.0], [-0.319171995, 0.0, 0.0, 0.0], [-0.713982105, 0.0, 0.0, 0.0], [-0.0435220823, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 17, 18, 19, 20, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_64(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.770500004, 3.0, 4.0, 2.0], [-0.416999996, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [-0.208499998, 9.0, 10.0, 0.0], [0.215441167, 0.0, 0.0, 0.0], [-0.176499993, 11.0, 12.0, 0.0], [-0.795000017, 13.0, 14.0, 2.0], [-0.997500002, 15.0, 16.0, 1.0], [-0.546000004, 17.0, 18.0, 2.0], [-0.721500039, 19.0, 20.0, 2.0], [-0.222499996, 21.0, 22.0, 0.0], [-0.155499995, 23.0, 24.0, 0.0], [-0.885499954, 25.0, 26.0, 2.0], [-0.0230049994, 27.0, 28.0, 0.0], [-0.972000003, 29.0, 30.0, 2.0], [-0.972000003, 31.0, 32.0, 2.0], [-0.250499994, 33.0, 34.0, 0.0], [-0.474740237, 0.0, 0.0, 0.0], [-0.0554499999, 35.0, 36.0, 0.0], [-0.680500031, 37.0, 38.0, 2.0], [-0.848500013, 39.0, 40.0, 1.0], [-0.564393461, 0.0, 0.0, 0.0], [0.188322425, 0.0, 0.0, 0.0], [-0.293964833, 0.0, 0.0, 0.0], [0.00460930355, 0.0, 0.0, 0.0], [0.189184994, 0.0, 0.0, 0.0], [-0.575764894, 0.0, 0.0, 0.0], [-0.0189580098, 0.0, 0.0, 0.0], [-0.416960984, 0.0, 0.0, 0.0], [-0.116971038, 0.0, 0.0, 0.0], [0.208992496, 0.0, 0.0, 0.0], [-0.0912849531, 0.0, 0.0, 0.0], [0.14343828, 0.0, 0.0, 0.0], [-0.199681059, 0.0, 0.0, 0.0], [-0.128907055, 0.0, 0.0, 0.0], [0.55668819, 0.0, 0.0, 0.0], [-0.327982157, 0.0, 0.0, 0.0], [0.165447682, 0.0, 0.0, 0.0], [-0.0226854775, 0.0, 0.0, 0.0], [-0.258695215, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 18, 35, 36, 37, 38, 5, 39, 40, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 9, 17, 10, 19, 20, 2, 6, 11, 21, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_65(xs):
    #Predicts Class 5
    function_dict = np.array([[0.166000009, 1.0, 2.0, 2.0], [-0.760500014, 3.0, 4.0, 0.0], [-0.331528783, 0.0, 0.0, 0.0], [0.277179092, 0.0, 0.0, 0.0], [-0.50999999, 5.0, 6.0, 0.0], [-0.537500024, 7.0, 8.0, 0.0], [-0.380499989, 9.0, 10.0, 0.0], [-0.0116991429, 0.0, 0.0, 0.0], [-0.334901661, 0.0, 0.0, 0.0], [-0.394999981, 11.0, 12.0, 0.0], [0.172499999, 13.0, 14.0, 0.0], [0.0214003734, 0.0, 0.0, 0.0], [0.582627594, 0.0, 0.0, 0.0], [-0.081980899, 0.0, 0.0, 0.0], [0.0274312943, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 11, 12, 13, 14, 2])
    branch_indices = np.array([0, 1, 4, 5, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_66(xs):
    #Predicts Class 0
    function_dict = np.array([[0.716500044, 1.0, 2.0, 2.0], [0.702499986, 3.0, 4.0, 2.0], [-0.950500011, 5.0, 6.0, 4.0], [0.259499997, 7.0, 8.0, 2.0], [-0.993999958, 9.0, 10.0, 3.0], [-0.179499999, 11.0, 12.0, 0.0], [0.727499962, 13.0, 14.0, 2.0], [-0.987499952, 15.0, 16.0, 3.0], [-0.0728999972, 17.0, 18.0, 0.0], [0.221651763, 0.0, 0.0, 0.0], [-0.857500017, 19.0, 20.0, 4.0], [0.076980941, 0.0, 0.0, 0.0], [0.497596383, 0.0, 0.0, 0.0], [-0.981999993, 21.0, 22.0, 3.0], [-0.997500002, 23.0, 24.0, 3.0], [-0.302459419, 0.0, 0.0, 0.0], [0.035920985, 0.0, 0.0, 0.0], [-0.111500002, 25.0, 26.0, 0.0], [-0.690999985, 27.0, 28.0, 1.0], [-0.91049999, 29.0, 30.0, 4.0], [-0.734117687, 0.0, 0.0, 0.0], [0.635032833, 0.0, 0.0, 0.0], [-0.503000021, 31.0, 32.0, 1.0], [-0.415295601, 0.0, 0.0, 0.0], [-0.142499998, 33.0, 34.0, 0.0], [-0.00235816441, 0.0, 0.0, 0.0], [-0.179093048, 0.0, 0.0, 0.0], [0.262588084, 0.0, 0.0, 0.0], [-0.209846288, 0.0, 0.0, 0.0], [-0.267863423, 0.0, 0.0, 0.0], [0.209518939, 0.0, 0.0, 0.0], [-0.281727463, 0.0, 0.0, 0.0], [0.215832487, 0.0, 0.0, 0.0], [0.140608028, 0.0, 0.0, 0.0], [-0.273905963, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 25, 26, 27, 28, 9, 29, 30, 20, 11, 12, 21, 31, 32, 23, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 18, 4, 10, 19, 2, 5, 6, 13, 22, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_67(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.107500002, 1.0, 2.0, 0.0], [-0.113499999, 3.0, 4.0, 0.0], [0.0463999994, 5.0, 6.0, 0.0], [-0.132499993, 7.0, 8.0, 0.0], [-0.82249999, 9.0, 10.0, 1.0], [-0.396106035, 0.0, 0.0, 0.0], [-0.801499963, 11.0, 12.0, 1.0], [-0.141499996, 13.0, 14.0, 0.0], [-0.335031778, 0.0, 0.0, 0.0], [0.500565708, 0.0, 0.0, 0.0], [0.0997367874, 0.0, 0.0, 0.0], [0.1655, 15.0, 16.0, 0.0], [-0.996500015, 17.0, 18.0, 3.0], [-0.958500028, 19.0, 20.0, 4.0], [-0.96449995, 21.0, 22.0, 4.0], [-0.320067823, 0.0, 0.0, 0.0], [-0.0808291286, 0.0, 0.0, 0.0], [0.00627382472, 0.0, 0.0, 0.0], [-0.936499953, 23.0, 24.0, 4.0], [-0.0401620083, 0.0, 0.0, 0.0], [0.0480820164, 0.0, 0.0, 0.0], [0.668483555, 0.0, 0.0, 0.0], [-0.271251321, 0.0, 0.0, 0.0], [0.379431278, 0.0, 0.0, 0.0], [0.0413404219, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_68(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.759500027, 1.0, 2.0, 1.0], [0.453500003, 3.0, 4.0, 2.0], [-0.75849998, 5.0, 6.0, 1.0], [-0.99849999, 7.0, 8.0, 3.0], [-0.99849999, 9.0, 10.0, 3.0], [0.854546785, 0.0, 0.0, 0.0], [-0.101500005, 11.0, 12.0, 0.0], [-0.336660534, 0.0, 0.0, 0.0], [0.290499985, 13.0, 14.0, 2.0], [-0.0170213692, 0.0, 0.0, 0.0], [-0.911499977, 15.0, 16.0, 3.0], [0.529500008, 17.0, 18.0, 2.0], [-0.0680000037, 19.0, 20.0, 0.0], [-0.0603500009, 21.0, 22.0, 0.0], [-0.972499967, 23.0, 24.0, 4.0], [-0.385525078, 0.0, 0.0, 0.0], [0.0257952586, 0.0, 0.0, 0.0], [-0.139499992, 25.0, 26.0, 0.0], [0.553499997, 27.0, 28.0, 2.0], [0.602499962, 29.0, 30.0, 2.0], [-0.0604000017, 31.0, 32.0, 0.0], [-0.287644088, 0.0, 0.0, 0.0], [0.00440379931, 0.0, 0.0, 0.0], [0.474778473, 0.0, 0.0, 0.0], [-0.013113331, 0.0, 0.0, 0.0], [-0.140738249, 0.0, 0.0, 0.0], [0.238929391, 0.0, 0.0, 0.0], [0.379401177, 0.0, 0.0, 0.0], [-0.0153491301, 0.0, 0.0, 0.0], [0.496755451, 0.0, 0.0, 0.0], [0.0892240107, 0.0, 0.0, 0.0], [-0.393027365, 0.0, 0.0, 0.0], [0.0968069285, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 21, 22, 23, 24, 9, 15, 16, 5, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 8, 13, 14, 4, 10, 2, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_69(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [-0.432500005, 3.0, 4.0, 2.0], [-0.319020003, 0.0, 0.0, 0.0], [-0.996500015, 5.0, 6.0, 4.0], [-0.380999982, 7.0, 8.0, 2.0], [-0.212500006, 9.0, 10.0, 0.0], [-0.290423393, 0.0, 0.0, 0.0], [0.364483476, 0.0, 0.0, 0.0], [-0.0387809984, 0.0, 0.0, 0.0], [-0.249500006, 11.0, 12.0, 0.0], [-0.208499998, 13.0, 14.0, 0.0], [0.0329234377, 0.0, 0.0, 0.0], [-0.380203575, 0.0, 0.0, 0.0], [1.07552719, 0.0, 0.0, 0.0], [0.00594697054, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_70(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.463500023, 3.0, 4.0, 0.0], [-0.416999996, 5.0, 6.0, 0.0], [-0.255153209, 0.0, 0.0, 0.0], [-0.4375, 7.0, 8.0, 0.0], [0.152648166, 0.0, 0.0, 0.0], [-0.176499993, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.222499996, 15.0, 16.0, 0.0], [-0.154500008, 17.0, 18.0, 0.0], [-0.0221005455, 0.0, 0.0, 0.0], [0.456741601, 0.0, 0.0, 0.0], [-0.210500002, 19.0, 20.0, 0.0], [-0.822000027, 21.0, 22.0, 2.0], [0.353500009, 23.0, 24.0, 2.0], [-0.489409745, 0.0, 0.0, 0.0], [0.145066112, 0.0, 0.0, 0.0], [-0.25213936, 0.0, 0.0, 0.0], [0.127989069, 0.0, 0.0, 0.0], [0.000251590536, 0.0, 0.0, 0.0], [-0.252702117, 0.0, 0.0, 0.0], [0.00481221592, 0.0, 0.0, 0.0], [-0.0377764404, 0.0, 0.0, 0.0], [-0.230598748, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 19, 20, 21, 22, 5, 23, 24, 16, 17, 18])
    branch_indices = np.array([0, 1, 4, 7, 8, 13, 14, 2, 6, 9, 15, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_71(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.435000002, 1.0, 2.0, 2.0], [-0.997500002, 3.0, 4.0, 1.0], [0.102500007, 5.0, 6.0, 0.0], [-0.770500004, 7.0, 8.0, 2.0], [-0.795000017, 9.0, 10.0, 2.0], [-0.341760248, 0.0, 0.0, 0.0], [0.132002756, 0.0, 0.0, 0.0], [-0.99849999, 11.0, 12.0, 1.0], [-0.335500002, 13.0, 14.0, 0.0], [-0.0684500039, 15.0, 16.0, 0.0], [-0.626000047, 17.0, 18.0, 2.0], [-0.408500016, 19.0, 20.0, 0.0], [-0.0452999994, 21.0, 22.0, 0.0], [-0.375999987, 23.0, 24.0, 0.0], [0.534999967, 25.0, 26.0, 0.0], [-0.307999998, 27.0, 28.0, 0.0], [0.355500013, 29.0, 30.0, 0.0], [-0.999500036, 31.0, 32.0, 4.0], [0.177000001, 33.0, 34.0, 0.0], [0.171418905, 0.0, 0.0, 0.0], [-0.0136051951, 0.0, 0.0, 0.0], [-0.157012224, 0.0, 0.0, 0.0], [0.456938982, 0.0, 0.0, 0.0], [-0.0727736801, 0.0, 0.0, 0.0], [0.428134799, 0.0, 0.0, 0.0], [-0.370141566, 0.0, 0.0, 0.0], [0.235481426, 0.0, 0.0, 0.0], [-0.108346909, 0.0, 0.0, 0.0], [0.3100245, 0.0, 0.0, 0.0], [-0.364317626, 0.0, 0.0, 0.0], [0.0880550668, 0.0, 0.0, 0.0], [0.0178521704, 0.0, 0.0, 0.0], [0.647117376, 0.0, 0.0, 0.0], [-0.0974201709, 0.0, 0.0, 0.0], [0.255253196, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 4, 9, 15, 16, 10, 17, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_72(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [0.573500037, 3.0, 4.0, 2.0], [-0.263500005, 5.0, 6.0, 0.0], [-0.323500007, 7.0, 8.0, 0.0], [-0.593500018, 9.0, 10.0, 1.0], [0.595499992, 11.0, 12.0, 2.0], [0.671499968, 13.0, 14.0, 2.0], [-0.811499953, 15.0, 16.0, 1.0], [-0.933500051, 17.0, 18.0, 3.0], [0.621500015, 19.0, 20.0, 2.0], [-0.344620675, 0.0, 0.0, 0.0], [-0.972499967, 21.0, 22.0, 4.0], [-0.277500004, 23.0, 24.0, 0.0], [-0.228500009, 25.0, 26.0, 0.0], [-0.221500009, 27.0, 28.0, 0.0], [0.459500015, 29.0, 30.0, 2.0], [-0.344500005, 31.0, 32.0, 0.0], [-0.85650003, 33.0, 34.0, 1.0], [0.178947672, 0.0, 0.0, 0.0], [-0.683499992, 35.0, 36.0, 1.0], [0.646000028, 37.0, 38.0, 2.0], [-0.282710671, 0.0, 0.0, 0.0], [0.407499999, 39.0, 40.0, 2.0], [0.263849348, 0.0, 0.0, 0.0], [-0.267499983, 41.0, 42.0, 0.0], [-0.81099999, 43.0, 44.0, 1.0], [-0.854499996, 45.0, 46.0, 4.0], [-0.996500015, 47.0, 48.0, 3.0], [-0.861999989, 49.0, 50.0, 4.0], [-0.0822468027, 0.0, 0.0, 0.0], [0.356479973, 0.0, 0.0, 0.0], [0.0203439798, 0.0, 0.0, 0.0], [-0.351830423, 0.0, 0.0, 0.0], [0.0113753052, 0.0, 0.0, 0.0], [-0.529278278, 0.0, 0.0, 0.0], [0.37666589, 0.0, 0.0, 0.0], [-0.0302040298, 0.0, 0.0, 0.0], [-0.396387398, 0.0, 0.0, 0.0], [0.149613976, 0.0, 0.0, 0.0], [-0.067562893, 0.0, 0.0, 0.0], [0.656650782, 0.0, 0.0, 0.0], [-0.549110949, 0.0, 0.0, 0.0], [0.0980952457, 0.0, 0.0, 0.0], [0.302399933, 0.0, 0.0, 0.0], [-0.246705145, 0.0, 0.0, 0.0], [-0.00480398536, 0.0, 0.0, 0.0], [0.187902927, 0.0, 0.0, 0.0], [-0.115647189, 0.0, 0.0, 0.0], [0.338742256, 0.0, 0.0, 0.0], [0.173241213, 0.0, 0.0, 0.0], [-0.0843324214, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 18, 35, 36, 37, 38, 10, 21, 39, 40, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 19, 20, 2, 5, 11, 22, 12, 24, 6, 13, 25, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_73(xs):
    #Predicts Class 1
    function_dict = np.array([[0.171499997, 1.0, 2.0, 2.0], [-0.176499993, 3.0, 4.0, 0.0], [-0.2755, 5.0, 6.0, 0.0], [0.0220681764, 0.0, 0.0, 0.0], [-0.406772614, 0.0, 0.0, 0.0], [0.468500018, 7.0, 8.0, 2.0], [-0.273499995, 9.0, 10.0, 0.0], [-0.843500018, 11.0, 12.0, 1.0], [-0.865499973, 13.0, 14.0, 4.0], [-0.621999979, 15.0, 16.0, 1.0], [0.636500001, 17.0, 18.0, 2.0], [-0.0721940622, 0.0, 0.0, 0.0], [0.419454068, 0.0, 0.0, 0.0], [-0.334500015, 19.0, 20.0, 0.0], [-0.342500001, 21.0, 22.0, 0.0], [-0.688183427, 0.0, 0.0, 0.0], [-0.0279113557, 0.0, 0.0, 0.0], [-0.263500005, 23.0, 24.0, 0.0], [-0.270500004, 25.0, 26.0, 0.0], [-0.103797957, 0.0, 0.0, 0.0], [0.145560011, 0.0, 0.0, 0.0], [0.340239376, 0.0, 0.0, 0.0], [-0.299641907, 0.0, 0.0, 0.0], [-0.228942066, 0.0, 0.0, 0.0], [0.0332119726, 0.0, 0.0, 0.0], [0.461425692, 0.0, 0.0, 0.0], [-0.185918748, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 19, 20, 21, 22, 15, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 13, 14, 6, 9, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_74(xs):
    #Predicts Class 2
    function_dict = np.array([[0.0250499994, 1.0, 2.0, 0.0], [-0.986500025, 3.0, 4.0, 4.0], [-0.370492041, 0.0, 0.0, 0.0], [-0.0577000007, 5.0, 6.0, 0.0], [-0.149500012, 7.0, 8.0, 0.0], [-0.327032477, 0.0, 0.0, 0.0], [0.0819377974, 0.0, 0.0, 0.0], [-0.186500013, 9.0, 10.0, 0.0], [-0.138500005, 11.0, 12.0, 0.0], [-0.191500008, 13.0, 14.0, 0.0], [-0.63499999, 15.0, 16.0, 1.0], [-0.976500034, 17.0, 18.0, 3.0], [-0.643000007, 19.0, 20.0, 1.0], [0.0190584864, 0.0, 0.0, 0.0], [-0.361298233, 0.0, 0.0, 0.0], [0.354068309, 0.0, 0.0, 0.0], [-0.0489007607, 0.0, 0.0, 0.0], [-0.41324541, 0.0, 0.0, 0.0], [-0.044781886, 0.0, 0.0, 0.0], [-0.147175744, 0.0, 0.0, 0.0], [0.131442577, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 9, 10, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_75(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.994500041, 1.0, 2.0, 4.0], [-0.98150003, 3.0, 4.0, 1.0], [-0.295127004, 0.0, 0.0, 0.0], [-0.997500002, 5.0, 6.0, 1.0], [0.368000001, 7.0, 8.0, 0.0], [-0.249500006, 9.0, 10.0, 0.0], [-0.215000004, 11.0, 12.0, 0.0], [0.342045277, 0.0, 0.0, 0.0], [-0.236867666, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.210500002, 15.0, 16.0, 0.0], [-0.391060203, 0.0, 0.0, 0.0], [-0.19600001, 17.0, 18.0, 0.0], [-0.0217441786, 0.0, 0.0, 0.0], [0.536820412, 0.0, 0.0, 0.0], [-0.370703816, 0.0, 0.0, 0.0], [0.0047129062, 0.0, 0.0, 0.0], [0.630580425, 0.0, 0.0, 0.0], [-0.123116605, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 17, 18, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_76(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.268682092, 0.0, 0.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [-0.269475937, 0.0, 0.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.194499999, 9.0, 10.0, 0.0], [0.0824999958, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 3.0], [0.446716517, 0.0, 0.0, 0.0], [0.195499986, 15.0, 16.0, 0.0], [-0.000582753157, 0.0, 0.0, 0.0], [0.200314805, 0.0, 0.0, 0.0], [-0.250410348, 0.0, 0.0, 0.0], [0.185475618, 0.0, 0.0, 0.0], [-0.282724828, 0.0, 0.0, 0.0], [0.137503147, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_77(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.143999994, 1.0, 2.0, 2.0], [-0.997500002, 3.0, 4.0, 4.0], [-0.267360359, 0.0, 0.0, 0.0], [0.201499999, 5.0, 6.0, 0.0], [-0.082949996, 7.0, 8.0, 0.0], [0.00540999975, 9.0, 10.0, 0.0], [0.282499999, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [-0.489000022, 15.0, 16.0, 2.0], [-0.0375000015, 17.0, 18.0, 0.0], [0.172499999, 19.0, 20.0, 0.0], [0.256500006, 21.0, 22.0, 0.0], [0.363499999, 23.0, 24.0, 0.0], [0.333380044, 0.0, 0.0, 0.0], [-0.273168921, 0.0, 0.0, 0.0], [0.074459888, 0.0, 0.0, 0.0], [0.365585148, 0.0, 0.0, 0.0], [-0.0205404591, 0.0, 0.0, 0.0], [0.203061864, 0.0, 0.0, 0.0], [-0.356448084, 0.0, 0.0, 0.0], [-0.0258815568, 0.0, 0.0, 0.0], [0.00548487483, 0.0, 0.0, 0.0], [0.419920474, 0.0, 0.0, 0.0], [-0.308144063, 0.0, 0.0, 0.0], [0.0158963073, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 13, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_78(xs):
    #Predicts Class 0
    function_dict = np.array([[0.120499998, 1.0, 2.0, 0.0], [-0.365500003, 3.0, 4.0, 0.0], [-0.330028653, 0.0, 0.0, 0.0], [-0.298369557, 0.0, 0.0, 0.0], [-0.642500043, 5.0, 6.0, 1.0], [-0.1875, 7.0, 8.0, 0.0], [-0.178499997, 9.0, 10.0, 0.0], [-0.995499969, 11.0, 12.0, 3.0], [-0.137499988, 13.0, 14.0, 0.0], [-0.827499986, 15.0, 16.0, 4.0], [-0.950500011, 17.0, 18.0, 4.0], [-0.0286074821, 0.0, 0.0, 0.0], [0.122632049, 0.0, 0.0, 0.0], [-0.250478417, 0.0, 0.0, 0.0], [0.098043181, 0.0, 0.0, 0.0], [-0.270995826, 0.0, 0.0, 0.0], [0.0681864992, 0.0, 0.0, 0.0], [0.322476625, 0.0, 0.0, 0.0], [0.00963819493, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 13, 14, 15, 16, 17, 18, 2])
    branch_indices = np.array([0, 1, 4, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_79(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.895500004, 1.0, 2.0, 1.0], [-0.300810754, 0.0, 0.0, 0.0], [-0.374500006, 3.0, 4.0, 0.0], [-0.99849999, 5.0, 6.0, 3.0], [0.127499998, 7.0, 8.0, 0.0], [-0.0956790447, 0.0, 0.0, 0.0], [0.327026129, 0.0, 0.0, 0.0], [-0.107500002, 9.0, 10.0, 0.0], [0.304258496, 0.0, 0.0, 0.0], [-0.1875, 11.0, 12.0, 0.0], [0.0445500016, 13.0, 14.0, 0.0], [-0.0159002524, 0.0, 0.0, 0.0], [0.0970812291, 0.0, 0.0, 0.0], [-0.364807844, 0.0, 0.0, 0.0], [0.0502929911, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 11, 12, 13, 14, 8])
    branch_indices = np.array([0, 2, 3, 4, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_80(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.230500013, 3.0, 4.0, 0.0], [-0.278500021, 5.0, 6.0, 1.0], [-0.345248312, 0.0, 0.0, 0.0], [-0.218499988, 7.0, 8.0, 0.0], [-0.855499983, 9.0, 10.0, 3.0], [-0.996500015, 11.0, 12.0, 3.0], [-0.986500025, 13.0, 14.0, 3.0], [0.398499995, 15.0, 16.0, 2.0], [-0.911499977, 17.0, 18.0, 3.0], [-0.765499949, 19.0, 20.0, 3.0], [-0.00425263774, 0.0, 0.0, 0.0], [-0.164499998, 21.0, 22.0, 1.0], [-0.996500015, 23.0, 24.0, 3.0], [-0.267812103, 0.0, 0.0, 0.0], [-0.0578499995, 25.0, 26.0, 0.0], [0.45450002, 27.0, 28.0, 2.0], [-0.149500012, 29.0, 30.0, 0.0], [-0.5255, 31.0, 32.0, 1.0], [-0.603500009, 33.0, 34.0, 1.0], [-0.66900003, 35.0, 36.0, 3.0], [0.340386331, 0.0, 0.0, 0.0], [-0.91900003, 37.0, 38.0, 3.0], [0.573786259, 0.0, 0.0, 0.0], [0.117879212, 0.0, 0.0, 0.0], [-0.345144093, 0.0, 0.0, 0.0], [-0.0806864873, 0.0, 0.0, 0.0], [0.2132494, 0.0, 0.0, 0.0], [-0.245536268, 0.0, 0.0, 0.0], [0.0239183232, 0.0, 0.0, 0.0], [-0.0920795128, 0.0, 0.0, 0.0], [0.460036397, 0.0, 0.0, 0.0], [-0.039949134, 0.0, 0.0, 0.0], [-0.0519310534, 0.0, 0.0, 0.0], [-0.499778807, 0.0, 0.0, 0.0], [0.270143598, 0.0, 0.0, 0.0], [-0.220486149, 0.0, 0.0, 0.0], [0.241431043, 0.0, 0.0, 0.0], [-0.0871002153, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 23, 24, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 11, 21, 37, 38])
    branch_indices = np.array([0, 1, 4, 7, 13, 8, 15, 16, 2, 5, 9, 17, 18, 10, 19, 20, 6, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_81(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.371500015, 1.0, 2.0, 2.0], [-0.401499987, 3.0, 4.0, 2.0], [-0.233500004, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [0.265006393, 0.0, 0.0, 0.0], [-0.0701644644, 0.0, 0.0, 0.0], [-0.26651454, 0.0, 0.0, 0.0], [-0.524500012, 9.0, 10.0, 0.0], [-0.294, 11.0, 12.0, 0.0], [-0.552999973, 13.0, 14.0, 0.0], [-0.613499999, 15.0, 16.0, 2.0], [0.346589029, 0.0, 0.0, 0.0], [-0.284500003, 17.0, 18.0, 0.0], [-0.073672317, 0.0, 0.0, 0.0], [0.300125003, 0.0, 0.0, 0.0], [-0.316005766, 0.0, 0.0, 0.0], [0.152877063, 0.0, 0.0, 0.0], [-0.313719302, 0.0, 0.0, 0.0], [0.00621803897, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_82(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.0894500017, 3.0, 4.0, 0.0], [-0.26713407, 0.0, 0.0, 0.0], [0.0867500007, 5.0, 6.0, 0.0], [0.141499996, 7.0, 8.0, 0.0], [0.0854000002, 9.0, 10.0, 0.0], [0.0883999988, 11.0, 12.0, 0.0], [-0.649000049, 13.0, 14.0, 2.0], [0.162499994, 15.0, 16.0, 0.0], [0.0846000016, 17.0, 18.0, 0.0], [-0.362655669, 0.0, 0.0, 0.0], [0.436701924, 0.0, 0.0, 0.0], [0.0707546175, 0.0, 0.0, 0.0], [0.0923999995, 19.0, 20.0, 0.0], [0.105499998, 21.0, 22.0, 0.0], [0.511884987, 0.0, 0.0, 0.0], [0.190499991, 23.0, 24.0, 0.0], [0.00117047527, 0.0, 0.0, 0.0], [0.471341074, 0.0, 0.0, 0.0], [-0.0317516886, 0.0, 0.0, 0.0], [-0.277560204, 0.0, 0.0, 0.0], [0.258939028, 0.0, 0.0, 0.0], [-0.116768122, 0.0, 0.0, 0.0], [-0.278631896, 0.0, 0.0, 0.0], [0.0137083707, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 11, 12, 19, 20, 21, 22, 15, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4, 7, 13, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_83(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.435000002, 1.0, 2.0, 2.0], [-0.997500002, 3.0, 4.0, 4.0], [-0.0570500009, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [-0.601000011, 9.0, 10.0, 2.0], [-0.284920573, 0.0, 0.0, 0.0], [-0.006888106, 0.0, 0.0, 0.0], [-0.822000027, 11.0, 12.0, 2.0], [-0.972000003, 13.0, 14.0, 2.0], [0.283991635, 0.0, 0.0, 0.0], [-0.0998999998, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 3.0], [0.454999983, 19.0, 20.0, 0.0], [-0.997500002, 21.0, 22.0, 1.0], [-0.689499974, 23.0, 24.0, 2.0], [-0.093304351, 0.0, 0.0, 0.0], [0.19529067, 0.0, 0.0, 0.0], [-0.00569003215, 0.0, 0.0, 0.0], [0.351798564, 0.0, 0.0, 0.0], [-0.276261479, 0.0, 0.0, 0.0], [0.000572522811, 0.0, 0.0, 0.0], [0.149307936, 0.0, 0.0, 0.0], [-0.179736182, 0.0, 0.0, 0.0], [0.185404822, 0.0, 0.0, 0.0], [-0.0258311108, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 9, 15, 16, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 4, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_84(xs):
    #Predicts Class 0
    function_dict = np.array([[0.414499998, 1.0, 2.0, 2.0], [-0.782500029, 3.0, 4.0, 1.0], [0.417500019, 5.0, 6.0, 2.0], [-0.938500047, 7.0, 8.0, 4.0], [-0.762500048, 9.0, 10.0, 1.0], [0.361509472, 0.0, 0.0, 0.0], [-0.967499971, 11.0, 12.0, 4.0], [-0.790500045, 13.0, 14.0, 1.0], [-0.981000006, 15.0, 16.0, 3.0], [-0.961500049, 17.0, 18.0, 4.0], [-0.761500001, 19.0, 20.0, 1.0], [-0.759500027, 21.0, 22.0, 1.0], [0.485500008, 23.0, 24.0, 2.0], [-0.970499992, 25.0, 26.0, 4.0], [-0.960500002, 27.0, 28.0, 4.0], [0.497389108, 0.0, 0.0, 0.0], [0.0827816129, 0.0, 0.0, 0.0], [-0.131225556, 0.0, 0.0, 0.0], [-0.555165172, 0.0, 0.0, 0.0], [0.237138733, 0.0, 0.0, 0.0], [-0.945500016, 29.0, 30.0, 3.0], [-0.180500001, 31.0, 32.0, 0.0], [-0.203500003, 33.0, 34.0, 0.0], [-0.996500015, 35.0, 36.0, 3.0], [-0.0972499996, 37.0, 38.0, 0.0], [-0.169867471, 0.0, 0.0, 0.0], [0.177499577, 0.0, 0.0, 0.0], [-0.1322418, 0.0, 0.0, 0.0], [-0.55542767, 0.0, 0.0, 0.0], [-0.347549647, 0.0, 0.0, 0.0], [0.109396286, 0.0, 0.0, 0.0], [0.482754976, 0.0, 0.0, 0.0], [-0.215468898, 0.0, 0.0, 0.0], [-0.34994334, 0.0, 0.0, 0.0], [0.263715088, 0.0, 0.0, 0.0], [-0.395127833, 0.0, 0.0, 0.0], [-0.00602567941, 0.0, 0.0, 0.0], [0.0296826232, 0.0, 0.0, 0.0], [-0.197757125, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 15, 16, 17, 18, 19, 29, 30, 5, 31, 32, 33, 34, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 9, 10, 20, 2, 6, 11, 21, 22, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_85(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.897500038, 1.0, 2.0, 1.0], [-0.27395609, 0.0, 0.0, 0.0], [-0.25150001, 3.0, 4.0, 0.0], [-0.256500006, 5.0, 6.0, 0.0], [0.681499958, 7.0, 8.0, 2.0], [-0.973500013, 9.0, 10.0, 4.0], [-0.960000038, 11.0, 12.0, 4.0], [-0.654500008, 13.0, 14.0, 1.0], [0.792500019, 15.0, 16.0, 2.0], [-0.532500029, 17.0, 18.0, 1.0], [-0.957499981, 19.0, 20.0, 4.0], [-0.136666477, 0.0, 0.0, 0.0], [-0.743499994, 21.0, 22.0, 1.0], [0.600499988, 23.0, 24.0, 2.0], [-0.16049999, 25.0, 26.0, 0.0], [-0.452499986, 27.0, 28.0, 1.0], [-0.0384922698, 0.0, 0.0, 0.0], [0.340523869, 0.0, 0.0, 0.0], [0.0402684696, 0.0, 0.0, 0.0], [-0.22205627, 0.0, 0.0, 0.0], [0.0348323882, 0.0, 0.0, 0.0], [0.190409824, 0.0, 0.0, 0.0], [0.682014704, 0.0, 0.0, 0.0], [-0.00747408206, 0.0, 0.0, 0.0], [-0.433497041, 0.0, 0.0, 0.0], [0.167626455, 0.0, 0.0, 0.0], [-0.251068592, 0.0, 0.0, 0.0], [-0.393257558, 0.0, 0.0, 0.0], [-0.107111849, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 11, 21, 22, 23, 24, 25, 26, 27, 28, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 12, 4, 7, 13, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_86(xs):
    #Predicts Class 2
    function_dict = np.array([[0.868999958, 1.0, 2.0, 2.0], [0.84800005, 3.0, 4.0, 2.0], [-0.15200001, 5.0, 6.0, 0.0], [0.804499984, 7.0, 8.0, 2.0], [-0.325909615, 0.0, 0.0, 0.0], [0.357534021, 0.0, 0.0, 0.0], [-0.0327884927, 0.0, 0.0, 0.0], [0.79550004, 9.0, 10.0, 2.0], [-0.317499995, 11.0, 12.0, 0.0], [-0.968500018, 13.0, 14.0, 4.0], [0.799499989, 15.0, 16.0, 2.0], [-0.0873043016, 0.0, 0.0, 0.0], [-0.590000033, 17.0, 18.0, 1.0], [-0.0774486512, 0.0, 0.0, 0.0], [0.0170512646, 0.0, 0.0, 0.0], [-0.490486145, 0.0, 0.0, 0.0], [-0.0446635261, 0.0, 0.0, 0.0], [0.00237831334, 0.0, 0.0, 0.0], [0.397737563, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_87(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.994500041, 1.0, 2.0, 4.0], [0.561499953, 3.0, 4.0, 0.0], [-0.252924293, 0.0, 0.0, 0.0], [0.557999969, 5.0, 6.0, 0.0], [0.565500021, 7.0, 8.0, 0.0], [0.556499958, 9.0, 10.0, 0.0], [-0.401928067, 0.0, 0.0, 0.0], [0.564499974, 11.0, 12.0, 0.0], [0.585000038, 13.0, 14.0, 0.0], [0.549000025, 15.0, 16.0, 0.0], [0.440740615, 0.0, 0.0, 0.0], [0.5625, 17.0, 18.0, 0.0], [0.352776796, 0.0, 0.0, 0.0], [-0.291852474, 0.0, 0.0, 0.0], [0.618499994, 19.0, 20.0, 0.0], [0.00307847653, 0.0, 0.0, 0.0], [-0.365074962, 0.0, 0.0, 0.0], [0.390154451, 0.0, 0.0, 0.0], [-0.293562144, 0.0, 0.0, 0.0], [0.269003183, 0.0, 0.0, 0.0], [-0.0746295378, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 17, 18, 12, 13, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 11, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_88(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.218004987, 0.0, 0.0, 0.0], [-0.0467999987, 5.0, 6.0, 0.0], [-0.243563414, 0.0, 0.0, 0.0], [-0.0533000007, 7.0, 8.0, 0.0], [-0.0382499993, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.718999982, 15.0, 16.0, 2.0], [-0.0101749999, 17.0, 18.0, 0.0], [0.023306394, 0.0, 0.0, 0.0], [-0.0759308487, 0.0, 0.0, 0.0], [-0.346696526, 0.0, 0.0, 0.0], [0.225747734, 0.0, 0.0, 0.0], [0.585730016, 0.0, 0.0, 0.0], [-0.320323944, 0.0, 0.0, 0.0], [-0.157175034, 0.0, 0.0, 0.0], [0.0283502452, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_89(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.435000002, 1.0, 2.0, 2.0], [-0.760500014, 3.0, 4.0, 0.0], [-0.0921999961, 5.0, 6.0, 0.0], [0.243218094, 0.0, 0.0, 0.0], [-0.442000002, 7.0, 8.0, 0.0], [-0.252418518, 0.0, 0.0, 0.0], [-0.0201650187, 0.0, 0.0, 0.0], [-0.906000018, 9.0, 10.0, 2.0], [-0.380499989, 11.0, 12.0, 0.0], [-0.537500024, 13.0, 14.0, 0.0], [0.111119561, 0.0, 0.0, 0.0], [-0.394999981, 15.0, 16.0, 0.0], [-0.169499993, 17.0, 18.0, 0.0], [-0.0302438866, 0.0, 0.0, 0.0], [-0.379024029, 0.0, 0.0, 0.0], [0.0506579317, 0.0, 0.0, 0.0], [0.388062894, 0.0, 0.0, 0.0], [-0.163256943, 0.0, 0.0, 0.0], [0.0114205182, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 10, 15, 16, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 4, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_90(xs):
    #Predicts Class 0
    function_dict = np.array([[0.219500005, 1.0, 2.0, 2.0], [-0.246216983, 0.0, 0.0, 0.0], [-0.824499965, 3.0, 4.0, 1.0], [-0.16049999, 5.0, 6.0, 0.0], [-0.973500013, 7.0, 8.0, 4.0], [-0.929999948, 9.0, 10.0, 4.0], [-0.112499997, 11.0, 12.0, 0.0], [-0.975499988, 13.0, 14.0, 4.0], [-0.967499971, 15.0, 16.0, 4.0], [-0.999500036, 17.0, 18.0, 3.0], [-0.846000016, 19.0, 20.0, 1.0], [-0.968999982, 21.0, 22.0, 4.0], [0.27310425, 0.0, 0.0, 0.0], [0.587000012, 23.0, 24.0, 2.0], [-0.794999957, 25.0, 26.0, 1.0], [-0.221500009, 27.0, 28.0, 0.0], [-0.939499974, 29.0, 30.0, 4.0], [-0.110432312, 0.0, 0.0, 0.0], [0.289949596, 0.0, 0.0, 0.0], [-0.354759812, 0.0, 0.0, 0.0], [0.259426326, 0.0, 0.0, 0.0], [-0.402071655, 0.0, 0.0, 0.0], [0.0227542911, 0.0, 0.0, 0.0], [-0.136646569, 0.0, 0.0, 0.0], [0.259626001, 0.0, 0.0, 0.0], [0.031887535, 0.0, 0.0, 0.0], [-0.416354209, 0.0, 0.0, 0.0], [-0.119002491, 0.0, 0.0, 0.0], [0.281753391, 0.0, 0.0, 0.0], [-0.0847415701, 0.0, 0.0, 0.0], [0.0225824025, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 12, 23, 24, 25, 26, 27, 28, 29, 30])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_91(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 3.0], [-0.930500031, 3.0, 4.0, 4.0], [-0.99150002, 5.0, 6.0, 3.0], [-0.960500002, 7.0, 8.0, 4.0], [-0.333499998, 9.0, 10.0, 0.0], [-0.726999998, 11.0, 12.0, 1.0], [-0.319499999, 13.0, 14.0, 0.0], [0.609499991, 15.0, 16.0, 2.0], [-0.995499969, 17.0, 18.0, 3.0], [-0.351999998, 19.0, 20.0, 0.0], [-0.911499977, 21.0, 22.0, 4.0], [-0.967000008, 23.0, 24.0, 4.0], [-0.955000043, 25.0, 26.0, 4.0], [-0.404500008, 27.0, 28.0, 1.0], [0.719500005, 29.0, 30.0, 2.0], [-0.654500008, 31.0, 32.0, 1.0], [-0.247999996, 33.0, 34.0, 0.0], [-0.807500005, 35.0, 36.0, 1.0], [-0.231999993, 37.0, 38.0, 0.0], [-0.0799250603, 0.0, 0.0, 0.0], [-0.526825726, 0.0, 0.0, 0.0], [-0.743499994, 39.0, 40.0, 1.0], [0.709499955, 41.0, 42.0, 2.0], [-0.0588615984, 0.0, 0.0, 0.0], [0.448500007, 43.0, 44.0, 2.0], [0.522027671, 0.0, 0.0, 0.0], [-0.270500004, 45.0, 46.0, 0.0], [-0.930999994, 47.0, 48.0, 4.0], [-0.906000018, 49.0, 50.0, 4.0], [0.67750001, 51.0, 52.0, 2.0], [-0.31966117, 0.0, 0.0, 0.0], [-0.0985689312, 0.0, 0.0, 0.0], [0.215839922, 0.0, 0.0, 0.0], [-0.0271622483, 0.0, 0.0, 0.0], [-0.513521731, 0.0, 0.0, 0.0], [-0.26497665, 0.0, 0.0, 0.0], [0.284184158, 0.0, 0.0, 0.0], [0.209953636, 0.0, 0.0, 0.0], [-0.533735335, 0.0, 0.0, 0.0], [-0.473730713, 0.0, 0.0, 0.0], [0.0460698642, 0.0, 0.0, 0.0], [0.118318886, 0.0, 0.0, 0.0], [-0.364621341, 0.0, 0.0, 0.0], [0.0945307165, 0.0, 0.0, 0.0], [0.740384996, 0.0, 0.0, 0.0], [-0.00457204599, 0.0, 0.0, 0.0], [-0.416661114, 0.0, 0.0, 0.0], [0.0584341958, 0.0, 0.0, 0.0], [0.304208368, 0.0, 0.0, 0.0], [-0.00558070838, 0.0, 0.0, 0.0], [-0.27963829, 0.0, 0.0, 0.0], [-0.0309084002, 0.0, 0.0, 0.0], [0.323600173, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([31, 32, 33, 34, 35, 36, 37, 38, 19, 20, 39, 40, 41, 42, 23, 43, 44, 25, 45, 46, 47, 48, 49, 50, 51, 52, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 10, 21, 22, 2, 5, 11, 24, 12, 26, 6, 13, 27, 28, 14, 29])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_92(xs):
    #Predicts Class 2
    function_dict = np.array([[0.0250499994, 1.0, 2.0, 0.0], [-0.24849999, 3.0, 4.0, 0.0], [-0.295884609, 0.0, 0.0, 0.0], [-0.680999994, 5.0, 6.0, 1.0], [-0.415000021, 7.0, 8.0, 1.0], [-0.972499967, 9.0, 10.0, 4.0], [0.530499995, 11.0, 12.0, 2.0], [-0.528499961, 13.0, 14.0, 1.0], [0.529500008, 15.0, 16.0, 2.0], [-0.0479177199, 0.0, 0.0, 0.0], [-0.374219716, 0.0, 0.0, 0.0], [-0.95449996, 17.0, 18.0, 4.0], [0.735499978, 19.0, 20.0, 2.0], [-0.558500051, 21.0, 22.0, 1.0], [-0.208499998, 23.0, 24.0, 0.0], [-0.130294397, 0.0, 0.0, 0.0], [-0.967999995, 25.0, 26.0, 4.0], [-0.0220681261, 0.0, 0.0, 0.0], [0.598331749, 0.0, 0.0, 0.0], [-0.109150857, 0.0, 0.0, 0.0], [0.13542445, 0.0, 0.0, 0.0], [0.0196759421, 0.0, 0.0, 0.0], [0.226064652, 0.0, 0.0, 0.0], [-0.293543994, 0.0, 0.0, 0.0], [0.054843355, 0.0, 0.0, 0.0], [0.0517803021, 0.0, 0.0, 0.0], [0.37749207, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 15, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 11, 12, 4, 7, 13, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_93(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.146499991, 3.0, 4.0, 0.0], [0.141499996, 5.0, 6.0, 0.0], [-0.185499996, 7.0, 8.0, 0.0], [-0.134499997, 9.0, 10.0, 0.0], [0.0101999994, 11.0, 12.0, 0.0], [-0.997500002, 13.0, 14.0, 1.0], [-0.747500002, 15.0, 16.0, 2.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.136500001, 19.0, 20.0, 0.0], [-0.127499998, 21.0, 22.0, 0.0], [-0.997500002, 23.0, 24.0, 4.0], [-0.570500016, 25.0, 26.0, 2.0], [-0.463448405, 0.0, 0.0, 0.0], [-0.0490344018, 0.0, 0.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.613000035, 29.0, 30.0, 2.0], [-0.378928214, 0.0, 0.0, 0.0], [-0.972000003, 31.0, 32.0, 2.0], [-0.138500005, 33.0, 34.0, 0.0], [0.690054417, 0.0, 0.0, 0.0], [-0.972000003, 35.0, 36.0, 2.0], [-0.125499994, 37.0, 38.0, 0.0], [-0.99849999, 39.0, 40.0, 4.0], [-0.287362337, 0.0, 0.0, 0.0], [0.403353274, 0.0, 0.0, 0.0], [-0.0868531018, 0.0, 0.0, 0.0], [0.00165779365, 0.0, 0.0, 0.0], [0.537514985, 0.0, 0.0, 0.0], [-0.370203495, 0.0, 0.0, 0.0], [0.0852590948, 0.0, 0.0, 0.0], [0.139596686, 0.0, 0.0, 0.0], [-0.26600951, 0.0, 0.0, 0.0], [0.255382925, 0.0, 0.0, 0.0], [-0.265661865, 0.0, 0.0, 0.0], [-0.308628321, 0.0, 0.0, 0.0], [0.392655879, 0.0, 0.0, 0.0], [0.406813383, 0.0, 0.0, 0.0], [0.00326203671, 0.0, 0.0, 0.0], [-0.238087445, 0.0, 0.0, 0.0], [0.179781392, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 31, 32, 33, 34, 20, 35, 36, 37, 38, 39, 40, 24, 25, 26, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 9, 19, 10, 21, 22, 2, 5, 11, 23, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_94(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.747500002, 3.0, 4.0, 2.0], [-0.321500003, 5.0, 6.0, 0.0], [-0.795000017, 7.0, 8.0, 2.0], [0.00526000001, 9.0, 10.0, 0.0], [0.0655750707, 0.0, 0.0, 0.0], [-0.176499993, 11.0, 12.0, 0.0], [0.0293500014, 13.0, 14.0, 0.0], [0.0242500007, 15.0, 16.0, 0.0], [-0.00657499954, 17.0, 18.0, 0.0], [-0.73150003, 19.0, 20.0, 2.0], [-0.313032061, 0.0, 0.0, 0.0], [-0.074149996, 21.0, 22.0, 0.0], [0.0240500011, 23.0, 24.0, 0.0], [0.0447499976, 25.0, 26.0, 0.0], [-0.770500004, 27.0, 28.0, 2.0], [0.29410398, 0.0, 0.0, 0.0], [-0.0225000009, 29.0, 30.0, 0.0], [0.545248508, 0.0, 0.0, 0.0], [0.369887024, 0.0, 0.0, 0.0], [0.0423000008, 31.0, 32.0, 0.0], [0.0909920782, 0.0, 0.0, 0.0], [-0.187649384, 0.0, 0.0, 0.0], [-0.000902445987, 0.0, 0.0, 0.0], [0.311607569, 0.0, 0.0, 0.0], [-0.315112501, 0.0, 0.0, 0.0], [0.00918817054, 0.0, 0.0, 0.0], [-0.393419564, 0.0, 0.0, 0.0], [-0.138369277, 0.0, 0.0, 0.0], [0.102095164, 0.0, 0.0, 0.0], [-0.304193884, 0.0, 0.0, 0.0], [-0.477146, 0.0, 0.0, 0.0], [-0.000447891332, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 16, 29, 30, 18, 19, 31, 32, 5, 11, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 9, 17, 10, 20, 2, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_95(xs):
    #Predicts Class 5
    function_dict = np.array([[0.521499991, 1.0, 2.0, 0.0], [0.513000011, 3.0, 4.0, 0.0], [0.537500024, 5.0, 6.0, 0.0], [0.503000021, 7.0, 8.0, 0.0], [0.534921587, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.972000003, 11.0, 12.0, 2.0], [0.466499984, 13.0, 14.0, 0.0], [0.506000042, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.912949979, 0.0, 0.0, 0.0], [0.588, 19.0, 20.0, 0.0], [0.612500012, 21.0, 22.0, 0.0], [0.446500003, 23.0, 24.0, 0.0], [-0.770500004, 25.0, 26.0, 2.0], [-0.106190756, 0.0, 0.0, 0.0], [-0.360678732, 0.0, 0.0, 0.0], [0.144973844, 0.0, 0.0, 0.0], [-0.290831089, 0.0, 0.0, 0.0], [0.561499953, 27.0, 28.0, 0.0], [0.620499969, 29.0, 30.0, 0.0], [-0.999500036, 31.0, 32.0, 4.0], [-0.121460654, 0.0, 0.0, 0.0], [0.00420846418, 0.0, 0.0, 0.0], [-0.163475096, 0.0, 0.0, 0.0], [0.54430908, 0.0, 0.0, 0.0], [-0.0204418246, 0.0, 0.0, 0.0], [0.000911753625, 0.0, 0.0, 0.0], [-0.30520758, 0.0, 0.0, 0.0], [0.230702862, 0.0, 0.0, 0.0], [-0.160202578, 0.0, 0.0, 0.0], [0.441540003, 0.0, 0.0, 0.0], [0.131400511, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 16, 4, 17, 18, 10, 27, 28, 29, 30, 31, 32, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 9, 6, 11, 19, 20, 12, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_96(xs):
    #Predicts Class 0
    function_dict = np.array([[0.120499998, 1.0, 2.0, 0.0], [-0.971500039, 3.0, 4.0, 4.0], [-0.297684342, 0.0, 0.0, 0.0], [-0.778499961, 5.0, 6.0, 1.0], [-0.0742499977, 7.0, 8.0, 0.0], [-0.228500009, 9.0, 10.0, 0.0], [-0.203500003, 11.0, 12.0, 0.0], [-0.0965000018, 13.0, 14.0, 0.0], [0.474999994, 15.0, 16.0, 2.0], [-0.824499965, 17.0, 18.0, 1.0], [-0.180500001, 19.0, 20.0, 0.0], [-0.968500018, 21.0, 22.0, 3.0], [0.509500027, 23.0, 24.0, 2.0], [0.459500015, 25.0, 26.0, 2.0], [-0.997500002, 27.0, 28.0, 3.0], [0.0620499998, 29.0, 30.0, 0.0], [-0.925500035, 31.0, 32.0, 4.0], [-0.0379100963, 0.0, 0.0, 0.0], [-0.326393902, 0.0, 0.0, 0.0], [0.273130625, 0.0, 0.0, 0.0], [-0.0920472518, 0.0, 0.0, 0.0], [-0.393543303, 0.0, 0.0, 0.0], [0.0463365987, 0.0, 0.0, 0.0], [-0.296826184, 0.0, 0.0, 0.0], [0.240008339, 0.0, 0.0, 0.0], [-0.0605609082, 0.0, 0.0, 0.0], [0.036948625, 0.0, 0.0, 0.0], [0.0939267725, 0.0, 0.0, 0.0], [-0.415684044, 0.0, 0.0, 0.0], [0.415874511, 0.0, 0.0, 0.0], [0.110119596, 0.0, 0.0, 0.0], [-0.29017669, 0.0, 0.0, 0.0], [0.269109458, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_97(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 3.0], [0.476500005, 3.0, 4.0, 2.0], [-0.912500024, 5.0, 6.0, 4.0], [-0.995499969, 7.0, 8.0, 3.0], [0.481999993, 9.0, 10.0, 2.0], [-0.930500031, 11.0, 12.0, 4.0], [-0.213499993, 13.0, 14.0, 0.0], [0.3935, 15.0, 16.0, 2.0], [-0.96449995, 17.0, 18.0, 4.0], [-0.544781148, 0.0, 0.0, 0.0], [-0.87349999, 19.0, 20.0, 4.0], [-0.946500003, 21.0, 22.0, 4.0], [-0.170000002, 23.0, 24.0, 0.0], [-0.908499956, 25.0, 26.0, 4.0], [-0.363957554, 0.0, 0.0, 0.0], [0.38349998, 27.0, 28.0, 2.0], [-0.972499967, 29.0, 30.0, 4.0], [-0.787999988, 31.0, 32.0, 1.0], [-0.793500006, 33.0, 34.0, 1.0], [-0.654500008, 35.0, 36.0, 1.0], [-0.790499985, 37.0, 38.0, 4.0], [-0.171499997, 39.0, 40.0, 0.0], [-0.959499955, 41.0, 42.0, 3.0], [0.469500005, 43.0, 44.0, 2.0], [-0.165459082, 0.0, 0.0, 0.0], [-0.353770614, 0.0, 0.0, 0.0], [0.506999969, 45.0, 46.0, 2.0], [-0.0302948635, 0.0, 0.0, 0.0], [-0.398250371, 0.0, 0.0, 0.0], [-0.0361087583, 0.0, 0.0, 0.0], [0.304061323, 0.0, 0.0, 0.0], [-0.13174656, 0.0, 0.0, 0.0], [0.272329479, 0.0, 0.0, 0.0], [-0.0496180281, 0.0, 0.0, 0.0], [-0.532808244, 0.0, 0.0, 0.0], [-0.0996430814, 0.0, 0.0, 0.0], [0.0570003539, 0.0, 0.0, 0.0], [-0.410907954, 0.0, 0.0, 0.0], [-0.0558390245, 0.0, 0.0, 0.0], [0.00590121793, 0.0, 0.0, 0.0], [0.265407592, 0.0, 0.0, 0.0], [-0.0912640095, 0.0, 0.0, 0.0], [-0.397617251, 0.0, 0.0, 0.0], [0.112473801, 0.0, 0.0, 0.0], [0.376904249, 0.0, 0.0, 0.0], [-0.23944813, 0.0, 0.0, 0.0], [0.10896951, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 31, 32, 33, 34, 9, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 24, 25, 45, 46, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 10, 19, 20, 2, 5, 11, 21, 22, 12, 23, 6, 13, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_98(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [-0.186500013, 3.0, 4.0, 0.0], [-0.746500015, 5.0, 6.0, 1.0], [-0.736500025, 7.0, 8.0, 4.0], [-0.997500002, 9.0, 10.0, 3.0], [0.399500012, 11.0, 12.0, 2.0], [-0.891499996, 13.0, 14.0, 4.0], [0.652500033, 15.0, 16.0, 2.0], [-0.994499981, 17.0, 18.0, 3.0], [-0.139338389, 0.0, 0.0, 0.0], [-0.967499971, 19.0, 20.0, 4.0], [-0.965499997, 21.0, 22.0, 4.0], [-0.385427892, 0.0, 0.0, 0.0], [-0.846000016, 23.0, 24.0, 3.0], [0.667999983, 25.0, 26.0, 2.0], [-0.429499984, 27.0, 28.0, 1.0], [0.699499965, 29.0, 30.0, 2.0], [0.402434915, 0.0, 0.0, 0.0], [-0.990499973, 31.0, 32.0, 3.0], [-0.993999958, 33.0, 34.0, 3.0], [-0.183499992, 35.0, 36.0, 0.0], [-0.0578499995, 37.0, 38.0, 0.0], [0.157312304, 0.0, 0.0, 0.0], [-0.938500047, 39.0, 40.0, 4.0], [-0.366735101, 0.0, 0.0, 0.0], [-0.0929500014, 41.0, 42.0, 0.0], [-0.730999947, 43.0, 44.0, 4.0], [0.00829908624, 0.0, 0.0, 0.0], [0.336538851, 0.0, 0.0, 0.0], [-0.278534532, 0.0, 0.0, 0.0], [0.00146646763, 0.0, 0.0, 0.0], [-0.277434528, 0.0, 0.0, 0.0], [0.213388979, 0.0, 0.0, 0.0], [0.291678697, 0.0, 0.0, 0.0], [-0.312502891, 0.0, 0.0, 0.0], [0.527705669, 0.0, 0.0, 0.0], [0.177620068, 0.0, 0.0, 0.0], [-0.28611812, 0.0, 0.0, 0.0], [-0.0334639102, 0.0, 0.0, 0.0], [-0.0167626999, 0.0, 0.0, 0.0], [0.332780212, 0.0, 0.0, 0.0], [-0.371672392, 0.0, 0.0, 0.0], [0.188291356, 0.0, 0.0, 0.0], [0.295883596, 0.0, 0.0, 0.0], [-0.132959396, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 31, 32, 9, 33, 34, 35, 36, 37, 38, 22, 12, 39, 40, 24, 41, 42, 43, 44])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 10, 19, 20, 2, 5, 11, 21, 6, 13, 23, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_99(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.297500014, 1.0, 2.0, 0.0], [-0.49849999, 3.0, 4.0, 2.0], [-0.283500016, 5.0, 6.0, 0.0], [-0.524500012, 7.0, 8.0, 0.0], [0.297985047, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.274500012, 11.0, 12.0, 0.0], [-0.552999973, 13.0, 14.0, 0.0], [-0.997500002, 15.0, 16.0, 1.0], [0.444797665, 0.0, 0.0, 0.0], [-0.314172506, 0.0, 0.0, 0.0], [-0.325753033, 0.0, 0.0, 0.0], [-0.267499983, 17.0, 18.0, 0.0], [-0.0568162054, 0.0, 0.0, 0.0], [0.237686619, 0.0, 0.0, 0.0], [-0.359335154, 0.0, 0.0, 0.0], [0.0252375323, 0.0, 0.0, 0.0], [0.45085457, 0.0, 0.0, 0.0], [-0.212500006, 19.0, 20.0, 0.0], [-0.167011827, 0.0, 0.0, 0.0], [0.00264812447, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 4, 9, 10, 11, 17, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 8, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_100(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.456, 1.0, 2.0, 2.0], [-0.51699996, 3.0, 4.0, 2.0], [-0.996500015, 5.0, 6.0, 4.0], [-0.581499994, 7.0, 8.0, 2.0], [-0.279500008, 9.0, 10.0, 0.0], [-0.392499983, 11.0, 12.0, 2.0], [-0.99849999, 13.0, 14.0, 3.0], [-0.923500001, 15.0, 16.0, 2.0], [-0.0789999962, 17.0, 18.0, 0.0], [-0.130687237, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 3.0], [-0.173450172, 0.0, 0.0, 0.0], [0.19042553, 0.0, 0.0, 0.0], [-0.291689456, 0.0, 0.0, 0.0], [-0.0353623554, 0.0, 0.0, 0.0], [-0.297500014, 21.0, 22.0, 0.0], [0.0691, 23.0, 24.0, 0.0], [-0.546000004, 25.0, 26.0, 2.0], [-0.315810591, 0.0, 0.0, 0.0], [0.130436331, 0.0, 0.0, 0.0], [0.359454125, 0.0, 0.0, 0.0], [0.0955798253, 0.0, 0.0, 0.0], [-0.0126169398, 0.0, 0.0, 0.0], [0.0315508731, 0.0, 0.0, 0.0], [0.307813853, 0.0, 0.0, 0.0], [0.121012293, 0.0, 0.0, 0.0], [-0.236418039, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 18, 9, 19, 20, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 10, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_101(xs):
    #Predicts Class 5
    function_dict = np.array([[0.623000026, 1.0, 2.0, 0.0], [0.615499973, 3.0, 4.0, 0.0], [0.221274734, 0.0, 0.0, 0.0], [0.588, 5.0, 6.0, 0.0], [0.618499994, 7.0, 8.0, 0.0], [-0.435000002, 9.0, 10.0, 2.0], [0.292119682, 0.0, 0.0, 0.0], [-0.479912549, 0.0, 0.0, 0.0], [0.620499969, 11.0, 12.0, 0.0], [-0.996500015, 13.0, 14.0, 4.0], [-0.113499999, 15.0, 16.0, 0.0], [0.285582662, 0.0, 0.0, 0.0], [-0.245178878, 0.0, 0.0, 0.0], [-0.000425988692, 0.0, 0.0, 0.0], [0.213628262, 0.0, 0.0, 0.0], [-0.220150471, 0.0, 0.0, 0.0], [-0.0497068204, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 7, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_102(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.558500051, 1.0, 2.0, 1.0], [-0.566499949, 3.0, 4.0, 1.0], [-0.825999975, 5.0, 6.0, 4.0], [-0.578999996, 7.0, 8.0, 1.0], [0.288815379, 0.0, 0.0, 0.0], [-0.232999995, 9.0, 10.0, 0.0], [-0.812000036, 11.0, 12.0, 4.0], [-0.597499967, 13.0, 14.0, 1.0], [-0.141499996, 15.0, 16.0, 0.0], [-0.404731423, 0.0, 0.0, 0.0], [-0.222499996, 17.0, 18.0, 0.0], [-0.231999993, 19.0, 20.0, 0.0], [-0.801500022, 21.0, 22.0, 4.0], [-0.60650003, 23.0, 24.0, 1.0], [0.631000042, 25.0, 26.0, 2.0], [-0.290400386, 0.0, 0.0, 0.0], [-0.010426525, 0.0, 0.0, 0.0], [0.457350671, 0.0, 0.0, 0.0], [0.723500013, 27.0, 28.0, 2.0], [0.545991778, 0.0, 0.0, 0.0], [0.116892882, 0.0, 0.0, 0.0], [-0.353888035, 0.0, 0.0, 0.0], [-0.784500003, 29.0, 30.0, 4.0], [0.012202587, 0.0, 0.0, 0.0], [-0.374683678, 0.0, 0.0, 0.0], [-0.00718032615, 0.0, 0.0, 0.0], [0.32043305, 0.0, 0.0, 0.0], [-0.264811337, 0.0, 0.0, 0.0], [0.100273617, 0.0, 0.0, 0.0], [0.251421809, 0.0, 0.0, 0.0], [-0.0365905017, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 16, 4, 9, 17, 27, 28, 19, 20, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 10, 18, 6, 11, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_103(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.2755, 1.0, 2.0, 0.0], [0.440999985, 3.0, 4.0, 2.0], [-0.273499995, 5.0, 6.0, 0.0], [-0.843500018, 7.0, 8.0, 1.0], [-0.277500004, 9.0, 10.0, 0.0], [-0.990499973, 11.0, 12.0, 3.0], [-0.415000021, 13.0, 14.0, 1.0], [0.00286856643, 0.0, 0.0, 0.0], [0.35555011, 0.0, 0.0, 0.0], [-0.957499981, 15.0, 16.0, 4.0], [0.587499976, 17.0, 18.0, 2.0], [-0.39546603, 0.0, 0.0, 0.0], [-0.0222045556, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 3.0], [-0.180500001, 21.0, 22.0, 0.0], [-0.967499971, 23.0, 24.0, 4.0], [-0.943500042, 25.0, 26.0, 4.0], [-0.00237308186, 0.0, 0.0, 0.0], [0.432664007, 0.0, 0.0, 0.0], [0.601000011, 27.0, 28.0, 2.0], [-0.957499981, 29.0, 30.0, 4.0], [-0.336006135, 0.0, 0.0, 0.0], [0.0208748672, 0.0, 0.0, 0.0], [0.155024305, 0.0, 0.0, 0.0], [-0.340185553, 0.0, 0.0, 0.0], [0.210884467, 0.0, 0.0, 0.0], [-0.018756194, 0.0, 0.0, 0.0], [-0.0421893373, 0.0, 0.0, 0.0], [-0.419211924, 0.0, 0.0, 0.0], [0.0465268493, 0.0, 0.0, 0.0], [-0.0420756564, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 23, 24, 25, 26, 17, 18, 11, 12, 27, 28, 29, 30, 21, 22])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 16, 10, 2, 5, 6, 13, 19, 20, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_104(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.593500018, 1.0, 2.0, 1.0], [-0.243499994, 3.0, 4.0, 0.0], [-0.824499965, 5.0, 6.0, 4.0], [-0.891499996, 7.0, 8.0, 4.0], [-0.218499988, 9.0, 10.0, 0.0], [-0.537500024, 11.0, 12.0, 1.0], [-0.812000036, 13.0, 14.0, 4.0], [-0.75849998, 15.0, 16.0, 1.0], [-0.861000001, 17.0, 18.0, 4.0], [-0.943500042, 19.0, 20.0, 4.0], [-0.931499958, 21.0, 22.0, 3.0], [-0.942000031, 23.0, 24.0, 4.0], [-0.506500006, 25.0, 26.0, 1.0], [-0.500021815, 0.0, 0.0, 0.0], [-0.537999988, 27.0, 28.0, 1.0], [-0.761999965, 29.0, 30.0, 1.0], [-0.396360964, 0.0, 0.0, 0.0], [0.437423378, 0.0, 0.0, 0.0], [-0.0715517551, 0.0, 0.0, 0.0], [-0.965499997, 31.0, 32.0, 4.0], [0.720999956, 33.0, 34.0, 2.0], [-0.674499989, 35.0, 36.0, 1.0], [0.380500019, 37.0, 38.0, 2.0], [-0.199000001, 39.0, 40.0, 0.0], [-0.142500013, 41.0, 42.0, 0.0], [-0.878000021, 43.0, 44.0, 4.0], [-0.4745, 45.0, 46.0, 1.0], [-0.550000012, 47.0, 48.0, 1.0], [-0.526499987, 49.0, 50.0, 1.0], [-0.26277712, 0.0, 0.0, 0.0], [0.322076976, 0.0, 0.0, 0.0], [-0.0155818621, 0.0, 0.0, 0.0], [0.625398636, 0.0, 0.0, 0.0], [-0.381671429, 0.0, 0.0, 0.0], [0.266174406, 0.0, 0.0, 0.0], [-0.0160840359, 0.0, 0.0, 0.0], [-0.191686913, 0.0, 0.0, 0.0], [-0.176518679, 0.0, 0.0, 0.0], [0.262184829, 0.0, 0.0, 0.0], [0.244148061, 0.0, 0.0, 0.0], [-0.378514737, 0.0, 0.0, 0.0], [0.464076519, 0.0, 0.0, 0.0], [0.091473341, 0.0, 0.0, 0.0], [-0.324988067, 0.0, 0.0, 0.0], [0.268241376, 0.0, 0.0, 0.0], [0.29311341, 0.0, 0.0, 0.0], [0.0189704262, 0.0, 0.0, 0.0], [-0.0675897077, 0.0, 0.0, 0.0], [-0.391036928, 0.0, 0.0, 0.0], [0.404929668, 0.0, 0.0, 0.0], [0.038161464, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 17, 18, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 13, 47, 48, 49, 50])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 9, 19, 20, 10, 21, 22, 2, 5, 11, 23, 24, 12, 25, 26, 6, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_105(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.371500015, 1.0, 2.0, 2.0], [-0.401499987, 3.0, 4.0, 2.0], [-0.196634218, 0.0, 0.0, 0.0], [-0.146499991, 5.0, 6.0, 0.0], [0.203014016, 0.0, 0.0, 0.0], [-0.185499996, 7.0, 8.0, 0.0], [-0.132499993, 9.0, 10.0, 0.0], [-0.193500012, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.111500002, 17.0, 18.0, 0.0], [-0.0181326326, 0.0, 0.0, 0.0], [0.275134265, 0.0, 0.0, 0.0], [-0.356928021, 0.0, 0.0, 0.0], [-0.108473569, 0.0, 0.0, 0.0], [0.179287478, 0.0, 0.0, 0.0], [-0.215493217, 0.0, 0.0, 0.0], [-0.123441823, 0.0, 0.0, 0.0], [0.00453740777, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_106(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0850500017, 3.0, 4.0, 0.0], [0.0912000015, 5.0, 6.0, 0.0], [0.0776499957, 7.0, 8.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [-0.347882926, 0.0, 0.0, 0.0], [0.0923999995, 11.0, 12.0, 0.0], [0.0694999993, 13.0, 14.0, 0.0], [0.0825999975, 15.0, 16.0, 0.0], [0.0873000026, 17.0, 18.0, 0.0], [0.0888999999, 19.0, 20.0, 0.0], [0.311654419, 0.0, 0.0, 0.0], [0.0941499993, 21.0, 22.0, 0.0], [0.0506500006, 23.0, 24.0, 0.0], [0.0757500008, 25.0, 26.0, 0.0], [-0.347888857, 0.0, 0.0, 0.0], [0.0320029184, 0.0, 0.0, 0.0], [0.0860000029, 27.0, 28.0, 0.0], [0.412551641, 0.0, 0.0, 0.0], [0.014835407, 0.0, 0.0, 0.0], [0.0643156096, 0.0, 0.0, 0.0], [-0.3772645, 0.0, 0.0, 0.0], [0.0952499956, 29.0, 30.0, 0.0], [0.00928322878, 0.0, 0.0, 0.0], [-0.283442557, 0.0, 0.0, 0.0], [0.155493647, 0.0, 0.0, 0.0], [0.524957895, 0.0, 0.0, 0.0], [0.158887953, 0.0, 0.0, 0.0], [-0.0128842834, 0.0, 0.0, 0.0], [0.40049395, 0.0, 0.0, 0.0], [-0.0679668412, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 16, 27, 28, 18, 19, 20, 5, 11, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 9, 17, 10, 2, 6, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_107(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.337500006, 1.0, 2.0, 0.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.194499999, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.388500005, 9.0, 10.0, 0.0], [-0.997500002, 11.0, 12.0, 1.0], [-0.153499991, 13.0, 14.0, 0.0], [-0.485000014, 15.0, 16.0, 0.0], [-0.370667458, 0.0, 0.0, 0.0], [-0.46450001, 17.0, 18.0, 0.0], [0.333738983, 0.0, 0.0, 0.0], [-0.33280459, 0.0, 0.0, 0.0], [-0.876000047, 19.0, 20.0, 2.0], [-0.972000003, 21.0, 22.0, 2.0], [-0.080400005, 23.0, 24.0, 0.0], [-0.126634702, 0.0, 0.0, 0.0], [-0.411000013, 25.0, 26.0, 0.0], [0.25505352, 0.0, 0.0, 0.0], [-0.997500002, 27.0, 28.0, 4.0], [0.164207667, 0.0, 0.0, 0.0], [-0.207168818, 0.0, 0.0, 0.0], [-0.166500002, 29.0, 30.0, 0.0], [-0.17050001, 31.0, 32.0, 0.0], [-0.149500012, 33.0, 34.0, 0.0], [-0.0742499977, 35.0, 36.0, 0.0], [0.349568754, 0.0, 0.0, 0.0], [-0.0115093663, 0.0, 0.0, 0.0], [-0.1728369, 0.0, 0.0, 0.0], [0.0902570337, 0.0, 0.0, 0.0], [-0.00331556587, 0.0, 0.0, 0.0], [0.383533388, 0.0, 0.0, 0.0], [0.129375175, 0.0, 0.0, 0.0], [-0.217954785, 0.0, 0.0, 0.0], [0.0183302201, 0.0, 0.0, 0.0], [-0.345640391, 0.0, 0.0, 0.0], [0.682271898, 0.0, 0.0, 0.0], [-0.00868785195, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 25, 26, 8, 17, 27, 28, 10, 11, 19, 20, 29, 30, 31, 32, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 16, 4, 9, 18, 2, 5, 12, 6, 13, 21, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_108(xs):
    #Predicts Class 0
    function_dict = np.array([[0.354499996, 1.0, 2.0, 2.0], [-0.938500047, 3.0, 4.0, 4.0], [0.442499995, 5.0, 6.0, 2.0], [0.342500001, 7.0, 8.0, 2.0], [-0.969500005, 9.0, 10.0, 3.0], [-0.227499992, 11.0, 12.0, 0.0], [0.463499993, 13.0, 14.0, 2.0], [-0.960500002, 15.0, 16.0, 3.0], [-0.95449996, 17.0, 18.0, 4.0], [0.332995087, 0.0, 0.0, 0.0], [-0.0770811439, 0.0, 0.0, 0.0], [-0.255500019, 19.0, 20.0, 0.0], [-0.203999996, 21.0, 22.0, 0.0], [-0.184, 23.0, 24.0, 0.0], [0.475499988, 25.0, 26.0, 2.0], [-0.148499995, 27.0, 28.0, 0.0], [0.301500022, 29.0, 30.0, 2.0], [-0.0246129539, 0.0, 0.0, 0.0], [-0.594986975, 0.0, 0.0, 0.0], [-0.272500008, 31.0, 32.0, 0.0], [-0.796999991, 33.0, 34.0, 1.0], [-0.975499988, 35.0, 36.0, 4.0], [0.431500018, 37.0, 38.0, 2.0], [-0.272000015, 39.0, 40.0, 0.0], [-0.691499949, 41.0, 42.0, 1.0], [-0.748000026, 43.0, 44.0, 1.0], [0.485500008, 45.0, 46.0, 2.0], [-0.238927588, 0.0, 0.0, 0.0], [0.00976965856, 0.0, 0.0, 0.0], [-0.0118940808, 0.0, 0.0, 0.0], [0.268504739, 0.0, 0.0, 0.0], [-0.178530023, 0.0, 0.0, 0.0], [0.312773049, 0.0, 0.0, 0.0], [-0.0123972874, 0.0, 0.0, 0.0], [-0.367061317, 0.0, 0.0, 0.0], [0.056365706, 0.0, 0.0, 0.0], [0.421825141, 0.0, 0.0, 0.0], [-0.0729912445, 0.0, 0.0, 0.0], [0.246011779, 0.0, 0.0, 0.0], [0.270846188, 0.0, 0.0, 0.0], [-0.409130424, 0.0, 0.0, 0.0], [0.283354819, 0.0, 0.0, 0.0], [-0.0757975876, 0.0, 0.0, 0.0], [0.252241313, 0.0, 0.0, 0.0], [-0.0601384416, 0.0, 0.0, 0.0], [-0.261812747, 0.0, 0.0, 0.0], [0.00838238094, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 18, 9, 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 2, 5, 11, 19, 20, 12, 21, 22, 6, 13, 23, 24, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_109(xs):
    #Predicts Class 1
    function_dict = np.array([[0.178499997, 1.0, 2.0, 2.0], [-0.192499995, 3.0, 4.0, 0.0], [-0.374500006, 5.0, 6.0, 0.0], [0.0366853625, 0.0, 0.0, 0.0], [-0.33863619, 0.0, 0.0, 0.0], [-0.99849999, 7.0, 8.0, 3.0], [-0.367500007, 9.0, 10.0, 0.0], [-0.0828702077, 0.0, 0.0, 0.0], [0.302040219, 0.0, 0.0, 0.0], [-0.328878969, 0.0, 0.0, 0.0], [-0.736500025, 11.0, 12.0, 4.0], [0.115999997, 13.0, 14.0, 0.0], [-0.287828088, 0.0, 0.0, 0.0], [0.00179536699, 0.0, 0.0, 0.0], [0.250848442, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 9, 13, 14, 12])
    branch_indices = np.array([0, 1, 2, 5, 6, 10, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_110(xs):
    #Predicts Class 2
    function_dict = np.array([[0.868999958, 1.0, 2.0, 2.0], [0.84800005, 3.0, 4.0, 2.0], [-0.872500002, 5.0, 6.0, 4.0], [-0.986500025, 7.0, 8.0, 4.0], [-0.255136877, 0.0, 0.0, 0.0], [0.0206446517, 0.0, 0.0, 0.0], [0.284346819, 0.0, 0.0, 0.0], [-0.0909000039, 9.0, 10.0, 0.0], [-0.982499957, 11.0, 12.0, 4.0], [-0.266045511, 0.0, 0.0, 0.0], [-0.0382968299, 0.0, 0.0, 0.0], [-0.219500005, 13.0, 14.0, 0.0], [0.334500015, 15.0, 16.0, 2.0], [-0.230238363, 0.0, 0.0, 0.0], [0.33422339, 0.0, 0.0, 0.0], [-0.265902996, 0.0, 0.0, 0.0], [0.00217344402, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 13, 14, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_111(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.996500015, 1.0, 2.0, 4.0], [-0.0435499996, 3.0, 4.0, 0.0], [-0.385500014, 5.0, 6.0, 2.0], [-0.0455499999, 7.0, 8.0, 0.0], [-0.0293500014, 9.0, 10.0, 0.0], [-0.227820829, 0.0, 0.0, 0.0], [-0.0279288497, 0.0, 0.0, 0.0], [-0.0467999987, 11.0, 12.0, 0.0], [0.420690984, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.0250499994, 15.0, 16.0, 0.0], [-0.0728500038, 17.0, 18.0, 0.0], [-0.304912031, 0.0, 0.0, 0.0], [-0.0392000005, 19.0, 20.0, 0.0], [-0.699005127, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [-0.0239499994, 23.0, 24.0, 0.0], [-0.00685585942, 0.0, 0.0, 0.0], [0.130231455, 0.0, 0.0, 0.0], [0.264885396, 0.0, 0.0, 0.0], [-0.357237339, 0.0, 0.0, 0.0], [0.467623144, 0.0, 0.0, 0.0], [-0.351212084, 0.0, 0.0, 0.0], [-0.523299932, 0.0, 0.0, 0.0], [-0.00144045753, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 19, 20, 14, 21, 22, 23, 24, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 9, 13, 10, 15, 16, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_112(xs):
    #Predicts Class 4
    function_dict = np.array([[0.203500003, 1.0, 2.0, 0.0], [-0.0435499996, 3.0, 4.0, 0.0], [-0.217825845, 0.0, 0.0, 0.0], [-0.0455499999, 5.0, 6.0, 0.0], [-0.0382499993, 7.0, 8.0, 0.0], [-0.0466499999, 9.0, 10.0, 0.0], [-0.402390599, 0.0, 0.0, 0.0], [-0.03895, 11.0, 12.0, 0.0], [-0.0310500003, 13.0, 14.0, 0.0], [-0.0533000007, 15.0, 16.0, 0.0], [0.33005327, 0.0, 0.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [0.778147817, 0.0, 0.0, 0.0], [-0.345001966, 0.0, 0.0, 0.0], [-0.0293500014, 19.0, 20.0, 0.0], [-0.00204428169, 0.0, 0.0, 0.0], [-0.190320954, 0.0, 0.0, 0.0], [-0.244332477, 0.0, 0.0, 0.0], [0.657803774, 0.0, 0.0, 0.0], [0.481732994, 0.0, 0.0, 0.0], [0.00146697613, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 17, 18, 12, 13, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 11, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_113(xs):
    #Predicts Class 5
    function_dict = np.array([[0.436500013, 1.0, 2.0, 0.0], [0.433499992, 3.0, 4.0, 0.0], [0.445500016, 5.0, 6.0, 0.0], [0.432500005, 7.0, 8.0, 0.0], [-0.446342826, 0.0, 0.0, 0.0], [0.425904572, 0.0, 0.0, 0.0], [0.455500007, 9.0, 10.0, 0.0], [0.415000021, 11.0, 12.0, 0.0], [0.382017076, 0.0, 0.0, 0.0], [0.446500003, 13.0, 14.0, 0.0], [0.503000021, 15.0, 16.0, 0.0], [0.409500003, 17.0, 18.0, 0.0], [0.429499984, 19.0, 20.0, 0.0], [0.0226935465, 0.0, 0.0, 0.0], [-0.341572195, 0.0, 0.0, 0.0], [0.489499986, 21.0, 22.0, 0.0], [0.513000011, 23.0, 24.0, 0.0], [-0.0109659573, 0.0, 0.0, 0.0], [0.578659832, 0.0, 0.0, 0.0], [-0.275934041, 0.0, 0.0, 0.0], [0.0256735552, 0.0, 0.0, 0.0], [0.0931538567, 0.0, 0.0, 0.0], [0.438429922, 0.0, 0.0, 0.0], [-0.231297567, 0.0, 0.0, 0.0], [0.0125019467, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 13, 14, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_114(xs):
    #Predicts Class 0
    function_dict = np.array([[0.120499998, 1.0, 2.0, 0.0], [0.0999500006, 3.0, 4.0, 0.0], [-0.258452684, 0.0, 0.0, 0.0], [-0.315500021, 5.0, 6.0, 0.0], [0.241850644, 0.0, 0.0, 0.0], [-0.334500015, 7.0, 8.0, 0.0], [-0.24149999, 9.0, 10.0, 0.0], [-0.977499962, 11.0, 12.0, 3.0], [-0.826499999, 13.0, 14.0, 1.0], [0.407499999, 15.0, 16.0, 2.0], [-0.228500009, 17.0, 18.0, 0.0], [0.180143297, 0.0, 0.0, 0.0], [-0.241525307, 0.0, 0.0, 0.0], [0.0316712521, 0.0, 0.0, 0.0], [-0.33434087, 0.0, 0.0, 0.0], [-0.242548391, 0.0, 0.0, 0.0], [0.10119269, 0.0, 0.0, 0.0], [-0.136044681, 0.0, 0.0, 0.0], [0.0111180833, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_115(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.828500032, 1.0, 2.0, 1.0], [0.516000032, 3.0, 4.0, 2.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [0.57249999, 9.0, 10.0, 2.0], [-0.334500015, 11.0, 12.0, 0.0], [-0.417500019, 13.0, 14.0, 1.0], [-0.973500013, 15.0, 16.0, 4.0], [-0.930999994, 17.0, 18.0, 4.0], [-0.290499985, 19.0, 20.0, 0.0], [-0.264191508, 0.0, 0.0, 0.0], [-0.976500034, 21.0, 22.0, 3.0], [-0.87349999, 23.0, 24.0, 4.0], [0.636500001, 25.0, 26.0, 2.0], [-0.242500007, 27.0, 28.0, 0.0], [-0.226500005, 29.0, 30.0, 0.0], [0.358999997, 31.0, 32.0, 2.0], [-0.353721201, 0.0, 0.0, 0.0], [-0.0130191734, 0.0, 0.0, 0.0], [0.314206988, 0.0, 0.0, 0.0], [-0.089532651, 0.0, 0.0, 0.0], [-0.946500003, 33.0, 34.0, 4.0], [-0.957499981, 35.0, 36.0, 4.0], [-0.45449999, 37.0, 38.0, 1.0], [-0.581499994, 39.0, 40.0, 1.0], [0.591500044, 41.0, 42.0, 2.0], [0.638499975, 43.0, 44.0, 2.0], [-0.983500004, 45.0, 46.0, 3.0], [-0.969500005, 47.0, 48.0, 4.0], [0.0912820101, 0.0, 0.0, 0.0], [-0.302500218, 0.0, 0.0, 0.0], [0.0269432683, 0.0, 0.0, 0.0], [0.253486514, 0.0, 0.0, 0.0], [0.27244994, 0.0, 0.0, 0.0], [-0.36165601, 0.0, 0.0, 0.0], [-0.135688901, 0.0, 0.0, 0.0], [0.357866615, 0.0, 0.0, 0.0], [0.435360819, 0.0, 0.0, 0.0], [0.0179781839, 0.0, 0.0, 0.0], [-0.313590467, 0.0, 0.0, 0.0], [0.158536062, 0.0, 0.0, 0.0], [-0.0103955567, 0.0, 0.0, 0.0], [0.142458007, 0.0, 0.0, 0.0], [-0.521618605, 0.0, 0.0, 0.0], [-0.0867448002, 0.0, 0.0, 0.0], [0.509021878, 0.0, 0.0, 0.0], [0.0180279333, 0.0, 0.0, 0.0], [0.12712878, 0.0, 0.0, 0.0], [-0.30098936, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 17, 18, 19, 20, 10, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 2, 5, 11, 21, 22, 12, 23, 24, 6, 13, 25, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_116(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.159500003, 1.0, 2.0, 1.0], [-0.0126499999, 3.0, 4.0, 0.0], [0.255071998, 0.0, 0.0, 0.0], [-0.200500011, 5.0, 6.0, 0.0], [-0.248570472, 0.0, 0.0, 0.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.183499992, 9.0, 10.0, 0.0], [-0.996500015, 11.0, 12.0, 3.0], [-0.983500004, 13.0, 14.0, 3.0], [0.529500008, 15.0, 16.0, 2.0], [-0.988499999, 17.0, 18.0, 3.0], [0.100255065, 0.0, 0.0, 0.0], [-0.0387651734, 0.0, 0.0, 0.0], [-0.24948062, 0.0, 0.0, 0.0], [0.0790157989, 0.0, 0.0, 0.0], [-0.147611961, 0.0, 0.0, 0.0], [0.359618872, 0.0, 0.0, 0.0], [0.0691012815, 0.0, 0.0, 0.0], [-0.0906425044, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_117(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.0439999998, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 1.0], [0.233029336, 0.0, 0.0, 0.0], [-0.241405025, 0.0, 0.0, 0.0], [0.070939824, 0.0, 0.0, 0.0], [-0.20449999, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.210500002, 13.0, 14.0, 0.0], [-0.193500012, 15.0, 16.0, 0.0], [-0.996500015, 17.0, 18.0, 1.0], [-0.58950001, 19.0, 20.0, 2.0], [0.000222300252, 0.0, 0.0, 0.0], [0.581320941, 0.0, 0.0, 0.0], [-0.284459263, 0.0, 0.0, 0.0], [0.00295947143, 0.0, 0.0, 0.0], [-0.146662802, 0.0, 0.0, 0.0], [0.155621216, 0.0, 0.0, 0.0], [-0.281238347, 0.0, 0.0, 0.0], [0.0461521745, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 17, 18, 19, 20, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_118(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.414000005, 3.0, 4.0, 0.0], [0.1105, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.406000018, 9.0, 10.0, 0.0], [0.0490000024, 11.0, 12.0, 0.0], [-0.29600504, 0.0, 0.0, 0.0], [-0.320615858, 0.0, 0.0, 0.0], [0.160792783, 0.0, 0.0, 0.0], [0.359860897, 0.0, 0.0, 0.0], [-0.393000007, 13.0, 14.0, 0.0], [0.00490000006, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 3.0], [-0.225632191, 0.0, 0.0, 0.0], [-0.297500014, 19.0, 20.0, 0.0], [-0.689499974, 21.0, 22.0, 2.0], [-0.662999988, 23.0, 24.0, 2.0], [-0.99849999, 25.0, 26.0, 1.0], [0.00890443381, 0.0, 0.0, 0.0], [0.208640143, 0.0, 0.0, 0.0], [0.00733262021, 0.0, 0.0, 0.0], [-0.142824963, 0.0, 0.0, 0.0], [0.0749725178, 0.0, 0.0, 0.0], [0.00209062011, 0.0, 0.0, 0.0], [-0.374800473, 0.0, 0.0, 0.0], [0.381873876, 0.0, 0.0, 0.0], [0.062312372, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 13, 19, 20, 21, 22, 23, 24, 25, 26, 18, 6])
    branch_indices = np.array([0, 1, 3, 4, 10, 14, 2, 5, 11, 15, 16, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_119(xs):
    #Predicts Class 5
    function_dict = np.array([[0.201499999, 1.0, 2.0, 0.0], [-0.0123999994, 3.0, 4.0, 0.0], [0.228500009, 5.0, 6.0, 0.0], [-0.0371000022, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.992499948, 11.0, 12.0, 1.0], [0.253499985, 13.0, 14.0, 0.0], [-0.0742499977, 15.0, 16.0, 0.0], [-0.0300499983, 17.0, 18.0, 0.0], [-0.353270113, 0.0, 0.0, 0.0], [0.172499999, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [-0.204166561, 0.0, 0.0, 0.0], [-0.490024954, 0.0, 0.0, 0.0], [0.264499992, 23.0, 24.0, 0.0], [-0.080400005, 25.0, 26.0, 0.0], [-0.997500002, 27.0, 28.0, 1.0], [0.511626601, 0.0, 0.0, 0.0], [0.00832123868, 0.0, 0.0, 0.0], [-0.662999988, 29.0, 30.0, 2.0], [0.233723238, 0.0, 0.0, 0.0], [0.210999995, 31.0, 32.0, 0.0], [0.471104324, 0.0, 0.0, 0.0], [-0.999500036, 33.0, 34.0, 4.0], [0.272000015, 35.0, 36.0, 0.0], [-0.00700342329, 0.0, 0.0, 0.0], [0.360080928, 0.0, 0.0, 0.0], [-0.339495331, 0.0, 0.0, 0.0], [-0.00968376175, 0.0, 0.0, 0.0], [-0.296848118, 0.0, 0.0, 0.0], [0.067073375, 0.0, 0.0, 0.0], [0.275408596, 0.0, 0.0, 0.0], [-0.291406214, 0.0, 0.0, 0.0], [0.697711706, 0.0, 0.0, 0.0], [-0.0568672717, 0.0, 0.0, 0.0], [-0.328539938, 0.0, 0.0, 0.0], [0.0075226333, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 17, 18, 9, 29, 30, 20, 31, 32, 22, 12, 13, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 10, 19, 2, 5, 11, 21, 6, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_120(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.984500051, 1.0, 2.0, 4.0], [0.344500005, 3.0, 4.0, 2.0], [-0.75150001, 5.0, 6.0, 1.0], [-0.238223076, 0.0, 0.0, 0.0], [0.0339340679, 0.0, 0.0, 0.0], [-0.905499995, 7.0, 8.0, 3.0], [-0.740499973, 9.0, 10.0, 1.0], [-0.344500005, 11.0, 12.0, 0.0], [0.331003964, 0.0, 0.0, 0.0], [-0.931499958, 13.0, 14.0, 4.0], [-0.999500036, 15.0, 16.0, 3.0], [-0.280249447, 0.0, 0.0, 0.0], [-0.922500014, 17.0, 18.0, 3.0], [-0.949499965, 19.0, 20.0, 4.0], [0.489499986, 21.0, 22.0, 2.0], [-0.702499986, 23.0, 24.0, 1.0], [-0.344500005, 25.0, 26.0, 0.0], [0.0484951735, 0.0, 0.0, 0.0], [-0.273576081, 0.0, 0.0, 0.0], [-0.0842257068, 0.0, 0.0, 0.0], [-0.546276152, 0.0, 0.0, 0.0], [-0.0741748214, 0.0, 0.0, 0.0], [0.31650269, 0.0, 0.0, 0.0], [0.0978064463, 0.0, 0.0, 0.0], [-0.320691258, 0.0, 0.0, 0.0], [0.224261031, 0.0, 0.0, 0.0], [-0.00114294433, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 17, 18, 8, 19, 20, 21, 22, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 2, 5, 7, 12, 6, 9, 13, 14, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_121(xs):
    #Predicts Class 1
    function_dict = np.array([[0.299499989, 1.0, 2.0, 2.0], [-0.767500043, 3.0, 4.0, 1.0], [0.354499996, 5.0, 6.0, 2.0], [0.269500017, 7.0, 8.0, 2.0], [-0.970499992, 9.0, 10.0, 4.0], [-0.960500002, 11.0, 12.0, 3.0], [0.361499995, 13.0, 14.0, 2.0], [-0.865999997, 15.0, 16.0, 1.0], [-0.980000019, 17.0, 18.0, 4.0], [-0.182812765, 0.0, 0.0, 0.0], [0.255405307, 0.0, 0.0, 0.0], [-0.985499978, 19.0, 20.0, 3.0], [-0.946500003, 21.0, 22.0, 3.0], [-0.429531425, 0.0, 0.0, 0.0], [-0.210500002, 23.0, 24.0, 0.0], [-0.213714972, 0.0, 0.0, 0.0], [-0.214499995, 25.0, 26.0, 0.0], [-0.0298662558, 0.0, 0.0, 0.0], [-0.403480679, 0.0, 0.0, 0.0], [-0.793500006, 27.0, 28.0, 1.0], [0.517737389, 0.0, 0.0, 0.0], [-0.321266383, 0.0, 0.0, 0.0], [0.0543047041, 0.0, 0.0, 0.0], [-0.804499984, 29.0, 30.0, 1.0], [-0.985499978, 31.0, 32.0, 3.0], [0.229407504, 0.0, 0.0, 0.0], [0.0121513596, 0.0, 0.0, 0.0], [-0.194210887, 0.0, 0.0, 0.0], [0.207371026, 0.0, 0.0, 0.0], [-0.142144695, 0.0, 0.0, 0.0], [0.0429722816, 0.0, 0.0, 0.0], [0.0344050005, 0.0, 0.0, 0.0], [-0.197516799, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 25, 26, 17, 18, 9, 10, 27, 28, 20, 21, 22, 13, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 4, 2, 5, 11, 19, 12, 6, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_122(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.761500001, 1.0, 2.0, 1.0], [0.481999993, 3.0, 4.0, 2.0], [-0.75849998, 5.0, 6.0, 1.0], [0.398499995, 7.0, 8.0, 2.0], [-0.274730355, 0.0, 0.0, 0.0], [-0.759500027, 9.0, 10.0, 1.0], [-0.101500005, 11.0, 12.0, 0.0], [-0.982499957, 13.0, 14.0, 4.0], [-0.206499994, 15.0, 16.0, 0.0], [0.0184973478, 0.0, 0.0, 0.0], [0.363611877, 0.0, 0.0, 0.0], [-0.743499994, 17.0, 18.0, 1.0], [-0.0680000037, 19.0, 20.0, 0.0], [0.291500002, 21.0, 22.0, 2.0], [-0.328632146, 0.0, 0.0, 0.0], [-0.997500002, 23.0, 24.0, 3.0], [0.443499982, 25.0, 26.0, 2.0], [-0.976500034, 27.0, 28.0, 3.0], [0.389499992, 29.0, 30.0, 2.0], [0.602499962, 31.0, 32.0, 2.0], [-0.0604000017, 33.0, 34.0, 0.0], [-0.167856023, 0.0, 0.0, 0.0], [0.300125152, 0.0, 0.0, 0.0], [0.168865025, 0.0, 0.0, 0.0], [-0.293961674, 0.0, 0.0, 0.0], [0.359483272, 0.0, 0.0, 0.0], [-0.01429608, 0.0, 0.0, 0.0], [-0.371285021, 0.0, 0.0, 0.0], [0.16840896, 0.0, 0.0, 0.0], [0.169507548, 0.0, 0.0, 0.0], [-0.00296105538, 0.0, 0.0, 0.0], [0.363681465, 0.0, 0.0, 0.0], [0.0474005491, 0.0, 0.0, 0.0], [-0.236518204, 0.0, 0.0, 0.0], [0.150316671, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 25, 26, 4, 9, 10, 27, 28, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 2, 5, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_123(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.136500001, 1.0, 2.0, 0.0], [-0.137499988, 3.0, 4.0, 0.0], [-0.134499997, 5.0, 6.0, 0.0], [-0.140500009, 7.0, 8.0, 0.0], [-0.352914721, 0.0, 0.0, 0.0], [-0.135500014, 9.0, 10.0, 0.0], [-0.851999998, 11.0, 12.0, 2.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.139499992, 15.0, 16.0, 0.0], [0.0895164832, 0.0, 0.0, 0.0], [0.431319565, 0.0, 0.0, 0.0], [-0.885499954, 17.0, 18.0, 2.0], [0.541999996, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [-0.923500001, 23.0, 24.0, 2.0], [0.320206493, 0.0, 0.0, 0.0], [-0.0340462402, 0.0, 0.0, 0.0], [-0.0965999961, 25.0, 26.0, 0.0], [0.0014549999, 27.0, 28.0, 0.0], [-0.822000027, 29.0, 30.0, 2.0], [-0.285474628, 0.0, 0.0, 0.0], [-0.125463918, 0.0, 0.0, 0.0], [0.117320016, 0.0, 0.0, 0.0], [0.397203207, 0.0, 0.0, 0.0], [-0.0314397886, 0.0, 0.0, 0.0], [0.0627020001, 0.0, 0.0, 0.0], [-0.00811391883, 0.0, 0.0, 0.0], [0.0699907094, 0.0, 0.0, 0.0], [-0.302191287, 0.0, 0.0, 0.0], [0.28293401, 0.0, 0.0, 0.0], [0.0246504359, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 4, 9, 10, 25, 26, 27, 28, 29, 30, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 6, 11, 17, 18, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_124(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [-0.0101749999, 3.0, 4.0, 0.0], [-0.192280591, 0.0, 0.0, 0.0], [-0.0150499996, 5.0, 6.0, 0.0], [-0.00885999948, 7.0, 8.0, 0.0], [-0.0165999997, 9.0, 10.0, 0.0], [-0.366624594, 0.0, 0.0, 0.0], [0.828611016, 0.0, 0.0, 0.0], [-0.00550500024, 11.0, 12.0, 0.0], [-0.0239499994, 13.0, 14.0, 0.0], [0.362389296, 0.0, 0.0, 0.0], [-0.344468772, 0.0, 0.0, 0.0], [-0.0052199997, 15.0, 16.0, 0.0], [0.00146000064, 0.0, 0.0, 0.0], [-0.335852236, 0.0, 0.0, 0.0], [0.408547312, 0.0, 0.0, 0.0], [0.0093404986, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 11, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_125(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.155679062, 0.0, 0.0, 0.0], [-0.99150002, 3.0, 4.0, 1.0], [-0.993499994, 5.0, 6.0, 1.0], [0.359000027, 7.0, 8.0, 0.0], [-0.747500002, 9.0, 10.0, 2.0], [0.173121944, 0.0, 0.0, 0.0], [-0.891000032, 11.0, 12.0, 1.0], [0.25857231, 0.0, 0.0, 0.0], [-0.996500015, 13.0, 14.0, 1.0], [0.240999997, 15.0, 16.0, 0.0], [-0.328074813, 0.0, 0.0, 0.0], [-0.0175943822, 0.0, 0.0, 0.0], [0.00655036466, 0.0, 0.0, 0.0], [-0.24181518, 0.0, 0.0, 0.0], [0.00975487474, 0.0, 0.0, 0.0], [-0.232900083, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 11, 12, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_126(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.945500016, 1.0, 2.0, 4.0], [-0.950500011, 3.0, 4.0, 4.0], [-0.932500005, 5.0, 6.0, 4.0], [-0.973500013, 7.0, 8.0, 3.0], [-0.207499996, 9.0, 10.0, 0.0], [-0.99849999, 11.0, 12.0, 3.0], [0.467500001, 13.0, 14.0, 2.0], [-0.978500009, 15.0, 16.0, 3.0], [-0.536000013, 17.0, 18.0, 1.0], [-0.946500003, 19.0, 20.0, 4.0], [-0.740999997, 21.0, 22.0, 1.0], [0.546499968, 23.0, 24.0, 2.0], [0.459999979, 25.0, 26.0, 2.0], [-0.234499991, 27.0, 28.0, 0.0], [-0.925500035, 29.0, 30.0, 4.0], [-0.337500006, 31.0, 32.0, 0.0], [-0.960500002, 33.0, 34.0, 4.0], [0.484499991, 35.0, 36.0, 2.0], [-0.253266394, 0.0, 0.0, 0.0], [-0.441212475, 0.0, 0.0, 0.0], [0.089174822, 0.0, 0.0, 0.0], [-0.977999985, 37.0, 38.0, 3.0], [-0.194487438, 0.0, 0.0, 0.0], [-0.75999999, 39.0, 40.0, 1.0], [0.110899344, 0.0, 0.0, 0.0], [-0.790500045, 41.0, 42.0, 1.0], [-0.61650002, 43.0, 44.0, 1.0], [-0.96450001, 45.0, 46.0, 3.0], [0.4005, 47.0, 48.0, 2.0], [-0.993999958, 49.0, 50.0, 3.0], [-0.182500005, 51.0, 52.0, 0.0], [-0.36066559, 0.0, 0.0, 0.0], [-0.0107870689, 0.0, 0.0, 0.0], [-0.132652268, 0.0, 0.0, 0.0], [-0.495167345, 0.0, 0.0, 0.0], [0.0201714132, 0.0, 0.0, 0.0], [0.329821348, 0.0, 0.0, 0.0], [0.213191241, 0.0, 0.0, 0.0], [0.0580155663, 0.0, 0.0, 0.0], [-0.0991132855, 0.0, 0.0, 0.0], [-0.35419631, 0.0, 0.0, 0.0], [0.172675014, 0.0, 0.0, 0.0], [-0.195539206, 0.0, 0.0, 0.0], [0.334392041, 0.0, 0.0, 0.0], [-0.0391797051, 0.0, 0.0, 0.0], [0.399268299, 0.0, 0.0, 0.0], [0.0503132753, 0.0, 0.0, 0.0], [-0.213646904, 0.0, 0.0, 0.0], [0.107937708, 0.0, 0.0, 0.0], [0.0795123577, 0.0, 0.0, 0.0], [-0.367536843, 0.0, 0.0, 0.0], [-0.0470371358, 0.0, 0.0, 0.0], [0.10216704, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([31, 32, 33, 34, 35, 36, 18, 19, 20, 37, 38, 22, 39, 40, 24, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 10, 21, 2, 5, 11, 23, 12, 25, 26, 6, 13, 27, 28, 14, 29, 30])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_127(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.457499981, 1.0, 2.0, 0.0], [0.232805476, 0.0, 0.0, 0.0], [0.0463999994, 3.0, 4.0, 0.0], [-0.107500002, 5.0, 6.0, 0.0], [-0.801499963, 7.0, 8.0, 1.0], [-0.113499999, 9.0, 10.0, 0.0], [-0.317639679, 0.0, 0.0, 0.0], [-0.147686049, 0.0, 0.0, 0.0], [-0.958500028, 11.0, 12.0, 4.0], [-0.874000013, 13.0, 14.0, 1.0], [0.280370355, 0.0, 0.0, 0.0], [0.287501037, 0.0, 0.0, 0.0], [-0.99000001, 15.0, 16.0, 3.0], [-0.257851928, 0.0, 0.0, 0.0], [-0.000629773538, 0.0, 0.0, 0.0], [-0.0777693093, 0.0, 0.0, 0.0], [0.174079299, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 10, 6, 7, 11, 15, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 4, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_128(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.558500051, 1.0, 2.0, 1.0], [-0.575500011, 3.0, 4.0, 1.0], [-0.555500031, 5.0, 6.0, 1.0], [-0.581499994, 7.0, 8.0, 1.0], [0.718000054, 9.0, 10.0, 2.0], [0.4464432, 0.0, 0.0, 0.0], [-0.130499989, 11.0, 12.0, 0.0], [-0.989500046, 13.0, 14.0, 3.0], [0.283896387, 0.0, 0.0, 0.0], [0.582000017, 15.0, 16.0, 2.0], [0.0241857618, 0.0, 0.0, 0.0], [-0.149500012, 17.0, 18.0, 0.0], [-0.0588999987, 19.0, 20.0, 0.0], [-0.862499952, 21.0, 22.0, 4.0], [-0.713500023, 23.0, 24.0, 1.0], [-0.0557752959, 0.0, 0.0, 0.0], [-0.380612254, 0.0, 0.0, 0.0], [0.644500017, 25.0, 26.0, 2.0], [-0.511500001, 27.0, 28.0, 1.0], [0.274112195, 0.0, 0.0, 0.0], [-0.0176373068, 0.0, 0.0, 0.0], [-0.0162201524, 0.0, 0.0, 0.0], [0.297072858, 0.0, 0.0, 0.0], [0.0516343564, 0.0, 0.0, 0.0], [-0.170737937, 0.0, 0.0, 0.0], [0.0995153114, 0.0, 0.0, 0.0], [-0.0132613927, 0.0, 0.0, 0.0], [-0.289704502, 0.0, 0.0, 0.0], [0.000275420956, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 16, 10, 5, 25, 26, 27, 28, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 2, 6, 11, 17, 18, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_129(xs):
    #Predicts Class 3
    function_dict = np.array([[0.523499966, 1.0, 2.0, 0.0], [0.513000011, 3.0, 4.0, 0.0], [0.528499961, 5.0, 6.0, 0.0], [0.506000042, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.455166966, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.466499984, 13.0, 14.0, 0.0], [0.263748884, 0.0, 0.0, 0.0], [0.521499991, 15.0, 16.0, 0.0], [0.187872544, 0.0, 0.0, 0.0], [0.549999952, 17.0, 18.0, 0.0], [0.612500012, 19.0, 20.0, 0.0], [0.463499993, 21.0, 22.0, 0.0], [0.478500009, 23.0, 24.0, 0.0], [-0.417754173, 0.0, 0.0, 0.0], [-0.146622881, 0.0, 0.0, 0.0], [0.543500006, 25.0, 26.0, 0.0], [0.561499953, 27.0, 28.0, 0.0], [-0.999500036, 29.0, 30.0, 4.0], [0.0685655251, 0.0, 0.0, 0.0], [6.10869611e-05, 0.0, 0.0, 0.0], [0.17505534, 0.0, 0.0, 0.0], [-0.420868814, 0.0, 0.0, 0.0], [-0.0268565677, 0.0, 0.0, 0.0], [-0.0181514304, 0.0, 0.0, 0.0], [0.45570755, 0.0, 0.0, 0.0], [-0.148820803, 0.0, 0.0, 0.0], [0.0869968235, 0.0, 0.0, 0.0], [-0.362482369, 0.0, 0.0, 0.0], [-0.0725008696, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 16, 10, 5, 25, 26, 27, 28, 29, 30, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 2, 6, 11, 17, 18, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_130(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.680500031, 3.0, 4.0, 2.0], [-0.999500036, 5.0, 6.0, 1.0], [-0.721500039, 7.0, 8.0, 2.0], [0.005045, 9.0, 10.0, 0.0], [0.193643853, 0.0, 0.0, 0.0], [-0.0701999962, 11.0, 12.0, 0.0], [-0.747500002, 13.0, 14.0, 2.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.0370500013, 17.0, 18.0, 0.0], [-0.620499969, 19.0, 20.0, 2.0], [-0.20449999, 21.0, 22.0, 0.0], [0.0490000024, 23.0, 24.0, 0.0], [0.0418500006, 25.0, 26.0, 0.0], [-0.0542500019, 27.0, 28.0, 0.0], [-0.46391961, 0.0, 0.0, 0.0], [-0.166000009, 29.0, 30.0, 0.0], [-0.601000011, 31.0, 32.0, 2.0], [-0.615499973, 33.0, 34.0, 2.0], [-0.333115101, 0.0, 0.0, 0.0], [0.0448175445, 0.0, 0.0, 0.0], [-0.407499999, 35.0, 36.0, 0.0], [-0.996500015, 37.0, 38.0, 4.0], [-0.587000012, 39.0, 40.0, 2.0], [0.0396335609, 0.0, 0.0, 0.0], [0.00839563273, 0.0, 0.0, 0.0], [-0.0337413214, 0.0, 0.0, 0.0], [-0.0376619585, 0.0, 0.0, 0.0], [0.429332167, 0.0, 0.0, 0.0], [-0.0311959535, 0.0, 0.0, 0.0], [0.15350163, 0.0, 0.0, 0.0], [-0.0702544674, 0.0, 0.0, 0.0], [0.19667086, 0.0, 0.0, 0.0], [0.543340862, 0.0, 0.0, 0.0], [0.136624485, 0.0, 0.0, 0.0], [0.109067477, 0.0, 0.0, 0.0], [-0.22446996, 0.0, 0.0, 0.0], [0.328451216, 0.0, 0.0, 0.0], [0.00297106057, 0.0, 0.0, 0.0], [-0.390915155, 0.0, 0.0, 0.0], [-0.109841004, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 15, 29, 30, 31, 32, 33, 34, 19, 20, 5, 35, 36, 37, 38, 39, 40, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 9, 17, 18, 10, 2, 6, 11, 21, 22, 12, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_131(xs):
    #Predicts Class 5
    function_dict = np.array([[0.523499966, 1.0, 2.0, 0.0], [0.436500013, 3.0, 4.0, 0.0], [0.528499961, 5.0, 6.0, 0.0], [0.434499979, 7.0, 8.0, 0.0], [0.445500016, 9.0, 10.0, 0.0], [-0.452432364, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.432500005, 13.0, 14.0, 0.0], [-0.364609361, 0.0, 0.0, 0.0], [0.368081003, 0.0, 0.0, 0.0], [0.455500007, 15.0, 16.0, 0.0], [0.549999952, 17.0, 18.0, 0.0], [0.612500012, 19.0, 20.0, 0.0], [0.415000021, 21.0, 22.0, 0.0], [0.433499992, 23.0, 24.0, 0.0], [0.446500003, 25.0, 26.0, 0.0], [0.513000011, 27.0, 28.0, 0.0], [0.543500006, 29.0, 30.0, 0.0], [0.561499953, 31.0, 32.0, 0.0], [-0.999500036, 33.0, 34.0, 4.0], [-0.0620991327, 0.0, 0.0, 0.0], [-0.00321691297, 0.0, 0.0, 0.0], [-0.139173344, 0.0, 0.0, 0.0], [0.324049264, 0.0, 0.0, 0.0], [-0.0453972071, 0.0, 0.0, 0.0], [0.0117799528, 0.0, 0.0, 0.0], [-0.30420056, 0.0, 0.0, 0.0], [0.0420927629, 0.0, 0.0, 0.0], [0.21600534, 0.0, 0.0, 0.0], [0.0199926794, 0.0, 0.0, 0.0], [-0.453058034, 0.0, 0.0, 0.0], [0.150846064, 0.0, 0.0, 0.0], [-0.0802718475, 0.0, 0.0, 0.0], [0.363635629, 0.0, 0.0, 0.0], [0.0800924078, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 25, 26, 27, 28, 5, 29, 30, 31, 32, 33, 34, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 15, 16, 2, 6, 11, 17, 18, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_132(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 1.0], [-0.6505, 3.0, 4.0, 1.0], [-0.870499969, 5.0, 6.0, 4.0], [-0.656000018, 7.0, 8.0, 1.0], [-0.947999954, 9.0, 10.0, 4.0], [-0.175500005, 11.0, 12.0, 0.0], [0.733500004, 13.0, 14.0, 2.0], [-0.674499989, 15.0, 16.0, 1.0], [-0.300656706, 0.0, 0.0, 0.0], [-0.131809592, 0.0, 0.0, 0.0], [0.424189329, 0.0, 0.0, 0.0], [-0.334999979, 17.0, 18.0, 0.0], [-0.914499998, 19.0, 20.0, 4.0], [-0.35799998, 21.0, 22.0, 1.0], [-0.250499994, 23.0, 24.0, 0.0], [-0.680500031, 25.0, 26.0, 1.0], [-0.960999966, 27.0, 28.0, 3.0], [-0.916999996, 29.0, 30.0, 4.0], [-0.879500031, 31.0, 32.0, 4.0], [-0.103499994, 33.0, 34.0, 0.0], [-0.897500038, 35.0, 36.0, 4.0], [-0.859500051, 37.0, 38.0, 4.0], [0.484581232, 0.0, 0.0, 0.0], [-0.362659484, 0.0, 0.0, 0.0], [-0.220499992, 39.0, 40.0, 0.0], [0.00842339732, 0.0, 0.0, 0.0], [-0.322363377, 0.0, 0.0, 0.0], [0.0131825563, 0.0, 0.0, 0.0], [0.489175469, 0.0, 0.0, 0.0], [-0.131925166, 0.0, 0.0, 0.0], [0.206453592, 0.0, 0.0, 0.0], [-0.314931005, 0.0, 0.0, 0.0], [0.114837475, 0.0, 0.0, 0.0], [0.221165642, 0.0, 0.0, 0.0], [-0.112783156, 0.0, 0.0, 0.0], [-0.386397898, 0.0, 0.0, 0.0], [0.0129276346, 0.0, 0.0, 0.0], [0.344188601, 0.0, 0.0, 0.0], [0.00603824947, 0.0, 0.0, 0.0], [0.224669024, 0.0, 0.0, 0.0], [-0.14866291, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 9, 10, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 22, 23, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 17, 18, 12, 19, 20, 6, 13, 21, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_133(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.843500018, 1.0, 2.0, 4.0], [-0.847499967, 3.0, 4.0, 4.0], [-0.333000004, 5.0, 6.0, 0.0], [-0.855499983, 7.0, 8.0, 4.0], [0.414040118, 0.0, 0.0, 0.0], [0.298899323, 0.0, 0.0, 0.0], [-0.717000008, 9.0, 10.0, 1.0], [-0.877499998, 11.0, 12.0, 4.0], [0.627499998, 13.0, 14.0, 2.0], [0.0473965853, 0.0, 0.0, 0.0], [-0.308041394, 0.0, 0.0, 0.0], [-0.906499982, 15.0, 16.0, 4.0], [0.579999983, 17.0, 18.0, 2.0], [-0.319244236, 0.0, 0.0, 0.0], [-0.0114182634, 0.0, 0.0, 0.0], [0.00501905056, 0.0, 0.0, 0.0], [-0.121271223, 0.0, 0.0, 0.0], [0.455673069, 0.0, 0.0, 0.0], [-0.0567205139, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_134(xs):
    #Predicts Class 2
    function_dict = np.array([[0.436500013, 1.0, 2.0, 2.0], [0.414499998, 3.0, 4.0, 2.0], [0.483500004, 5.0, 6.0, 2.0], [-0.228500009, 7.0, 8.0, 0.0], [-0.971500039, 9.0, 10.0, 4.0], [0.478500009, 11.0, 12.0, 2.0], [0.513499975, 13.0, 14.0, 2.0], [-0.742500007, 15.0, 16.0, 1.0], [-0.161500007, 17.0, 18.0, 0.0], [-0.0638354644, 0.0, 0.0, 0.0], [-0.345594019, 0.0, 0.0, 0.0], [0.463499993, 19.0, 20.0, 2.0], [0.478172749, 0.0, 0.0, 0.0], [-0.138999999, 21.0, 22.0, 0.0], [0.557500005, 23.0, 24.0, 2.0], [-0.0831710845, 0.0, 0.0, 0.0], [-0.715499997, 25.0, 26.0, 1.0], [-0.972499967, 27.0, 28.0, 4.0], [-0.789499998, 29.0, 30.0, 1.0], [-0.0982000008, 31.0, 32.0, 0.0], [-0.624500036, 33.0, 34.0, 1.0], [-0.363984048, 0.0, 0.0, 0.0], [0.0200672913, 0.0, 0.0, 0.0], [-0.944000006, 35.0, 36.0, 3.0], [0.566499949, 37.0, 38.0, 2.0], [0.647927821, 0.0, 0.0, 0.0], [-0.0549763963, 0.0, 0.0, 0.0], [-0.0276029017, 0.0, 0.0, 0.0], [-0.350222349, 0.0, 0.0, 0.0], [-0.195567682, 0.0, 0.0, 0.0], [0.197836831, 0.0, 0.0, 0.0], [0.191187665, 0.0, 0.0, 0.0], [-0.231680825, 0.0, 0.0, 0.0], [-0.280605644, 0.0, 0.0, 0.0], [-0.0132690202, 0.0, 0.0, 0.0], [0.169974819, 0.0, 0.0, 0.0], [-0.159129947, 0.0, 0.0, 0.0], [-0.286791354, 0.0, 0.0, 0.0], [0.0168231856, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 25, 26, 27, 28, 29, 30, 9, 10, 31, 32, 33, 34, 12, 21, 22, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 17, 18, 4, 2, 5, 11, 19, 20, 6, 13, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_135(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 1.0], [-0.517500043, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [0.257580668, 0.0, 0.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.977499962, 9.0, 10.0, 1.0], [-0.19749999, 11.0, 12.0, 0.0], [-0.242442429, 0.0, 0.0, 0.0], [-0.249500006, 13.0, 14.0, 0.0], [-0.354529083, 0.0, 0.0, 0.0], [0.0243094116, 0.0, 0.0, 0.0], [0.353989452, 0.0, 0.0, 0.0], [-0.125499994, 15.0, 16.0, 0.0], [-0.274500012, 17.0, 18.0, 0.0], [-0.210500002, 19.0, 20.0, 0.0], [-0.281044155, 0.0, 0.0, 0.0], [-0.096450001, 21.0, 22.0, 0.0], [0.00368727045, 0.0, 0.0, 0.0], [0.265174627, 0.0, 0.0, 0.0], [-0.33081615, 0.0, 0.0, 0.0], [0.0020361722, 0.0, 0.0, 0.0], [0.295719862, 0.0, 0.0, 0.0], [-0.0787709206, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 17, 18, 19, 20, 9, 10, 11, 15, 21, 22])
    branch_indices = np.array([0, 1, 4, 8, 13, 14, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_136(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.194499999, 3.0, 4.0, 0.0], [0.200439021, 0.0, 0.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [0.195499986, 7.0, 8.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [0.30061692, 0.0, 0.0, 0.0], [-0.243575439, 0.0, 0.0, 0.0], [0.196500003, 11.0, 12.0, 0.0], [0.140500009, 13.0, 14.0, 0.0], [-0.269470006, 0.0, 0.0, 0.0], [0.0532536097, 0.0, 0.0, 0.0], [-0.21936588, 0.0, 0.0, 0.0], [0.000134600981, 0.0, 0.0, 0.0], [0.28489241, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_137(xs):
    #Predicts Class 5
    function_dict = np.array([[0.541499972, 1.0, 2.0, 0.0], [0.534000039, 3.0, 4.0, 0.0], [0.547500014, 5.0, 6.0, 0.0], [-0.885499954, 7.0, 8.0, 2.0], [0.539999962, 9.0, 10.0, 0.0], [0.327671975, 0.0, 0.0, 0.0], [0.557999969, 11.0, 12.0, 0.0], [-0.457500011, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.483984351, 0.0, 0.0, 0.0], [-0.0736148357, 0.0, 0.0, 0.0], [0.556499958, 17.0, 18.0, 0.0], [0.561499953, 19.0, 20.0, 0.0], [-0.552999973, 21.0, 22.0, 0.0], [-0.401000023, 23.0, 24.0, 0.0], [-0.339920849, 0.0, 0.0, 0.0], [-0.337500006, 25.0, 26.0, 0.0], [0.550999999, 27.0, 28.0, 0.0], [-0.400929362, 0.0, 0.0, 0.0], [0.300709814, 0.0, 0.0, 0.0], [0.5625, 29.0, 30.0, 0.0], [0.0813505873, 0.0, 0.0, 0.0], [-0.346296251, 0.0, 0.0, 0.0], [0.142414317, 0.0, 0.0, 0.0], [0.0133836847, 0.0, 0.0, 0.0], [0.178737, 0.0, 0.0, 0.0], [-0.0736526623, 0.0, 0.0, 0.0], [-0.370473862, 0.0, 0.0, 0.0], [0.247130975, 0.0, 0.0, 0.0], [-0.293669909, 0.0, 0.0, 0.0], [0.052722428, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 9, 10, 5, 27, 28, 18, 19, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 2, 6, 11, 17, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_138(xs):
    #Predicts Class 0
    function_dict = np.array([[0.259499997, 1.0, 2.0, 2.0], [-0.993499994, 3.0, 4.0, 3.0], [-0.281499982, 5.0, 6.0, 0.0], [-0.212502807, 0.0, 0.0, 0.0], [-0.0350651182, 0.0, 0.0, 0.0], [-0.99849999, 7.0, 8.0, 3.0], [-0.931499958, 9.0, 10.0, 3.0], [-0.887499988, 11.0, 12.0, 4.0], [0.573500037, 13.0, 14.0, 2.0], [-0.94749999, 15.0, 16.0, 3.0], [-0.921499968, 17.0, 18.0, 3.0], [-0.923500001, 19.0, 20.0, 4.0], [-0.432416797, 0.0, 0.0, 0.0], [-0.323500007, 21.0, 22.0, 0.0], [-0.638000011, 23.0, 24.0, 1.0], [-0.271499991, 25.0, 26.0, 0.0], [-0.946500003, 27.0, 28.0, 3.0], [-0.196500003, 29.0, 30.0, 0.0], [-0.911499977, 31.0, 32.0, 3.0], [-0.321422726, 0.0, 0.0, 0.0], [0.195315346, 0.0, 0.0, 0.0], [0.0277161002, 0.0, 0.0, 0.0], [-0.22739999, 0.0, 0.0, 0.0], [0.162004322, 0.0, 0.0, 0.0], [-0.115387127, 0.0, 0.0, 0.0], [0.304663092, 0.0, 0.0, 0.0], [0.00771156373, 0.0, 0.0, 0.0], [0.602981269, 0.0, 0.0, 0.0], [0.117993921, 0.0, 0.0, 0.0], [-0.535881639, 0.0, 0.0, 0.0], [0.0172439534, 0.0, 0.0, 0.0], [0.242752463, 0.0, 0.0, 0.0], [-0.0920444652, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 19, 20, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 8, 13, 14, 6, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_139(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.630499959, 1.0, 2.0, 1.0], [-0.635499954, 3.0, 4.0, 1.0], [-0.5995, 5.0, 6.0, 1.0], [0.603500009, 7.0, 8.0, 2.0], [-0.389755636, 0.0, 0.0, 0.0], [0.623999953, 9.0, 10.0, 2.0], [-0.574499965, 11.0, 12.0, 1.0], [0.554499984, 13.0, 14.0, 2.0], [0.628499985, 15.0, 16.0, 2.0], [-0.213, 17.0, 18.0, 0.0], [0.661000013, 19.0, 20.0, 2.0], [-0.224000007, 21.0, 22.0, 0.0], [-0.967499971, 23.0, 24.0, 4.0], [0.539499998, 25.0, 26.0, 2.0], [-0.993499994, 27.0, 28.0, 3.0], [-0.347141802, 0.0, 0.0, 0.0], [-0.703500032, 29.0, 30.0, 1.0], [0.448975891, 0.0, 0.0, 0.0], [-0.961500049, 31.0, 32.0, 4.0], [-0.199485496, 0.0, 0.0, 0.0], [0.0707617179, 0.0, 0.0, 0.0], [0.0899036825, 0.0, 0.0, 0.0], [-0.361037821, 0.0, 0.0, 0.0], [-0.99849999, 33.0, 34.0, 3.0], [-0.977499962, 35.0, 36.0, 3.0], [0.00343266688, 0.0, 0.0, 0.0], [-0.281900525, 0.0, 0.0, 0.0], [-0.0457946137, 0.0, 0.0, 0.0], [0.260783404, 0.0, 0.0, 0.0], [0.115160152, 0.0, 0.0, 0.0], [-0.235729426, 0.0, 0.0, 0.0], [0.183899686, 0.0, 0.0, 0.0], [-0.0160044488, 0.0, 0.0, 0.0], [-0.188256681, 0.0, 0.0, 0.0], [0.297795415, 0.0, 0.0, 0.0], [0.0605788454, 0.0, 0.0, 0.0], [-0.125796765, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 15, 29, 30, 4, 17, 31, 32, 19, 20, 21, 22, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 9, 18, 10, 6, 11, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_140(xs):
    #Predicts Class 2
    function_dict = np.array([[0.868999958, 1.0, 2.0, 2.0], [-0.159500003, 3.0, 4.0, 1.0], [0.218400106, 0.0, 0.0, 0.0], [-0.54550004, 5.0, 6.0, 4.0], [0.219699323, 0.0, 0.0, 0.0], [-0.396499991, 7.0, 8.0, 1.0], [-0.245557174, 0.0, 0.0, 0.0], [0.529500008, 9.0, 10.0, 2.0], [-0.332499981, 11.0, 12.0, 0.0], [-0.0476789288, 0.0, 0.0, 0.0], [0.0230430178, 0.0, 0.0, 0.0], [0.197871745, 0.0, 0.0, 0.0], [-0.188740835, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_141(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.613499999, 3.0, 4.0, 2.0], [0.141499996, 5.0, 6.0, 0.0], [-0.680500031, 7.0, 8.0, 2.0], [0.174499989, 9.0, 10.0, 0.0], [-0.0628999993, 11.0, 12.0, 0.0], [-0.997500002, 13.0, 14.0, 1.0], [-0.297500014, 15.0, 16.0, 0.0], [0.117249995, 17.0, 18.0, 0.0], [-0.0590999983, 19.0, 20.0, 0.0], [-0.227248028, 0.0, 0.0, 0.0], [-0.99849999, 21.0, 22.0, 1.0], [-0.532999992, 23.0, 24.0, 2.0], [-0.323851019, 0.0, 0.0, 0.0], [-0.0565867089, 0.0, 0.0, 0.0], [-0.524500012, 25.0, 26.0, 0.0], [-0.296499997, 27.0, 28.0, 0.0], [-0.99849999, 29.0, 30.0, 4.0], [0.421999991, 31.0, 32.0, 0.0], [-0.208499998, 33.0, 34.0, 0.0], [-0.490999997, 35.0, 36.0, 2.0], [-0.251888335, 0.0, 0.0, 0.0], [-0.0308654942, 0.0, 0.0, 0.0], [0.293578118, 0.0, 0.0, 0.0], [-0.135027111, 0.0, 0.0, 0.0], [0.0750228018, 0.0, 0.0, 0.0], [-0.227827668, 0.0, 0.0, 0.0], [0.418367267, 0.0, 0.0, 0.0], [0.00166912854, 0.0, 0.0, 0.0], [-0.316612393, 0.0, 0.0, 0.0], [0.0318180807, 0.0, 0.0, 0.0], [0.296588033, 0.0, 0.0, 0.0], [0.0289196502, 0.0, 0.0, 0.0], [0.219407395, 0.0, 0.0, 0.0], [-0.116602063, 0.0, 0.0, 0.0], [0.315491349, 0.0, 0.0, 0.0], [0.0615809374, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 10, 21, 22, 23, 24, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 19, 20, 2, 5, 11, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_142(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.407499999, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.401000023, 5.0, 6.0, 0.0], [-0.412999988, 7.0, 8.0, 0.0], [0.309412688, 0.0, 0.0, 0.0], [-0.399763077, 0.0, 0.0, 0.0], [-0.398499995, 9.0, 10.0, 0.0], [-0.421499997, 11.0, 12.0, 0.0], [0.306145161, 0.0, 0.0, 0.0], [0.399191439, 0.0, 0.0, 0.0], [-0.378499985, 13.0, 14.0, 0.0], [-0.434499979, 15.0, 16.0, 0.0], [-0.391967267, 0.0, 0.0, 0.0], [-0.376646161, 0.0, 0.0, 0.0], [-0.297500014, 17.0, 18.0, 0.0], [-0.232843295, 0.0, 0.0, 0.0], [0.323996514, 0.0, 0.0, 0.0], [0.166758746, 0.0, 0.0, 0.0], [0.000818409724, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_143(xs):
    #Predicts Class 5
    function_dict = np.array([[0.201499999, 1.0, 2.0, 0.0], [-0.0123999994, 3.0, 4.0, 0.0], [-0.626000047, 5.0, 6.0, 2.0], [-0.032850001, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.654500008, 11.0, 12.0, 2.0], [0.299658567, 0.0, 0.0, 0.0], [-0.0742499977, 13.0, 14.0, 0.0], [0.237567171, 0.0, 0.0, 0.0], [-0.330835879, 0.0, 0.0, 0.0], [0.172499999, 15.0, 16.0, 0.0], [0.280499995, 17.0, 18.0, 0.0], [-0.347511411, 0.0, 0.0, 0.0], [-0.0751000047, 19.0, 20.0, 0.0], [-0.99849999, 21.0, 22.0, 1.0], [-0.996500015, 23.0, 24.0, 1.0], [0.162716612, 0.0, 0.0, 0.0], [0.256500006, 25.0, 26.0, 0.0], [0.363499999, 27.0, 28.0, 0.0], [-0.0228599552, 0.0, 0.0, 0.0], [0.450345218, 0.0, 0.0, 0.0], [-0.31356433, 0.0, 0.0, 0.0], [0.0843371153, 0.0, 0.0, 0.0], [-0.24868913, 0.0, 0.0, 0.0], [0.0642214268, 0.0, 0.0, 0.0], [-0.0270662289, 0.0, 0.0, 0.0], [0.256692052, 0.0, 0.0, 0.0], [-0.227713659, 0.0, 0.0, 0.0], [0.0139220459, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 23, 24, 16, 25, 26, 27, 28, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 15, 2, 5, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_144(xs):
    #Predicts Class 0
    function_dict = np.array([[0.112499997, 1.0, 2.0, 0.0], [0.103500001, 3.0, 4.0, 0.0], [-0.211734727, 0.0, 0.0, 0.0], [-0.945500016, 5.0, 6.0, 4.0], [0.223592252, 0.0, 0.0, 0.0], [-0.536499977, 7.0, 8.0, 1.0], [-0.931499958, 9.0, 10.0, 4.0], [-0.228500009, 11.0, 12.0, 0.0], [-0.303969234, 0.0, 0.0, 0.0], [0.628499985, 13.0, 14.0, 2.0], [-0.526499987, 15.0, 16.0, 1.0], [-0.104732819, 0.0, 0.0, 0.0], [0.0243165921, 0.0, 0.0, 0.0], [0.0362252444, 0.0, 0.0, 0.0], [0.309943616, 0.0, 0.0, 0.0], [-0.0142368637, 0.0, 0.0, 0.0], [0.0895971507, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_145(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.457499981, 1.0, 2.0, 0.0], [0.213219851, 0.0, 0.0, 0.0], [-0.885499954, 3.0, 4.0, 3.0], [-0.914499998, 5.0, 6.0, 3.0], [-0.75150001, 7.0, 8.0, 1.0], [-0.931499958, 9.0, 10.0, 3.0], [0.386999995, 11.0, 12.0, 2.0], [-0.217792764, 0.0, 0.0, 0.0], [-0.42899999, 13.0, 14.0, 1.0], [-0.334500015, 15.0, 16.0, 0.0], [-0.237000003, 17.0, 18.0, 0.0], [-0.0157190654, 0.0, 0.0, 0.0], [-0.299506694, 0.0, 0.0, 0.0], [-0.754999995, 19.0, 20.0, 3.0], [-0.296999991, 21.0, 22.0, 0.0], [-0.135763913, 0.0, 0.0, 0.0], [0.00197809748, 0.0, 0.0, 0.0], [0.329373896, 0.0, 0.0, 0.0], [-0.124197073, 0.0, 0.0, 0.0], [0.318261862, 0.0, 0.0, 0.0], [0.0120567596, 0.0, 0.0, 0.0], [-0.187086374, 0.0, 0.0, 0.0], [0.0424302258, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 11, 12, 7, 19, 20, 21, 22])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 4, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_146(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.986500025, 1.0, 2.0, 4.0], [-0.146499991, 3.0, 4.0, 0.0], [0.578500032, 5.0, 6.0, 2.0], [-0.216024622, 0.0, 0.0, 0.0], [-0.0550883524, 0.0, 0.0, 0.0], [0.566499949, 7.0, 8.0, 2.0], [0.60650003, 9.0, 10.0, 2.0], [0.557500005, 11.0, 12.0, 2.0], [-0.960500002, 13.0, 14.0, 4.0], [-0.82099998, 15.0, 16.0, 4.0], [0.612499952, 17.0, 18.0, 2.0], [0.529500008, 19.0, 20.0, 2.0], [-0.976500034, 21.0, 22.0, 3.0], [-0.0578710325, 0.0, 0.0, 0.0], [-0.983999968, 23.0, 24.0, 3.0], [-0.588999987, 25.0, 26.0, 1.0], [0.0539975427, 0.0, 0.0, 0.0], [0.386266947, 0.0, 0.0, 0.0], [-0.996500015, 27.0, 28.0, 3.0], [-0.0157370251, 0.0, 0.0, 0.0], [0.147726536, 0.0, 0.0, 0.0], [-0.320165038, 0.0, 0.0, 0.0], [0.0212925114, 0.0, 0.0, 0.0], [0.451175064, 0.0, 0.0, 0.0], [0.0722149611, 0.0, 0.0, 0.0], [-0.340579271, 0.0, 0.0, 0.0], [-0.0402348675, 0.0, 0.0, 0.0], [0.142046466, 0.0, 0.0, 0.0], [-0.0514444001, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 19, 20, 21, 22, 13, 23, 24, 25, 26, 16, 17, 27, 28])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 8, 14, 6, 9, 15, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_147(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.613499999, 3.0, 4.0, 2.0], [0.141499996, 5.0, 6.0, 0.0], [-0.644500017, 7.0, 8.0, 2.0], [-0.601000011, 9.0, 10.0, 2.0], [-0.0628999993, 11.0, 12.0, 0.0], [-0.997500002, 13.0, 14.0, 1.0], [0.228500009, 15.0, 16.0, 0.0], [0.03565, 17.0, 18.0, 0.0], [0.25972721, 0.0, 0.0, 0.0], [-0.3125, 19.0, 20.0, 0.0], [-0.99849999, 21.0, 22.0, 1.0], [-0.532999992, 23.0, 24.0, 2.0], [-0.273824811, 0.0, 0.0, 0.0], [-0.0622868761, 0.0, 0.0, 0.0], [0.202500001, 25.0, 26.0, 0.0], [0.253499985, 27.0, 28.0, 0.0], [0.0295313057, 0.0, 0.0, 0.0], [-0.284655631, 0.0, 0.0, 0.0], [0.200878695, 0.0, 0.0, 0.0], [-0.0590999983, 29.0, 30.0, 0.0], [-0.217100471, 0.0, 0.0, 0.0], [-0.017024504, 0.0, 0.0, 0.0], [0.238439158, 0.0, 0.0, 0.0], [-0.105408892, 0.0, 0.0, 0.0], [0.00203239522, 0.0, 0.0, 0.0], [-0.231485128, 0.0, 0.0, 0.0], [0.422927082, 0.0, 0.0, 0.0], [0.00608853204, 0.0, 0.0, 0.0], [-0.20376426, 0.0, 0.0, 0.0], [0.0926678702, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 17, 18, 9, 19, 29, 30, 21, 22, 23, 24, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 10, 20, 2, 5, 11, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_148(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [0.0894500017, 3.0, 4.0, 0.0], [-0.795000017, 5.0, 6.0, 2.0], [0.0867500007, 7.0, 8.0, 0.0], [0.108999997, 9.0, 10.0, 0.0], [0.0353390239, 0.0, 0.0, 0.0], [-0.222499996, 11.0, 12.0, 0.0], [0.0854000002, 13.0, 14.0, 0.0], [0.0883999988, 15.0, 16.0, 0.0], [0.0945499986, 17.0, 18.0, 0.0], [0.114999995, 19.0, 20.0, 0.0], [-0.0411503948, 0.0, 0.0, 0.0], [-0.240328208, 0.0, 0.0, 0.0], [0.0824999958, 21.0, 22.0, 0.0], [-0.320129901, 0.0, 0.0, 0.0], [0.0873000026, 23.0, 24.0, 0.0], [0.0888999999, 25.0, 26.0, 0.0], [0.0912000015, 27.0, 28.0, 0.0], [-0.283833563, 0.0, 0.0, 0.0], [0.397253364, 0.0, 0.0, 0.0], [0.141499996, 29.0, 30.0, 0.0], [0.00180721609, 0.0, 0.0, 0.0], [0.240149871, 0.0, 0.0, 0.0], [0.0824687779, 0.0, 0.0, 0.0], [0.34092325, 0.0, 0.0, 0.0], [-0.00546990382, 0.0, 0.0, 0.0], [0.0522189625, 0.0, 0.0, 0.0], [-0.283639818, 0.0, 0.0, 0.0], [0.0969206765, 0.0, 0.0, 0.0], [-0.301620543, 0.0, 0.0, 0.0], [0.0550190657, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 25, 26, 27, 28, 18, 19, 29, 30, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 9, 17, 10, 20, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_149(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.51699996, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.0799999982, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [0.5255, 9.0, 10.0, 0.0], [-0.237209782, 0.0, 0.0, 0.0], [0.0171432011, 0.0, 0.0, 0.0], [0.409500003, 11.0, 12.0, 0.0], [-0.0745999962, 13.0, 14.0, 0.0], [-0.463500023, 15.0, 16.0, 0.0], [0.588, 17.0, 18.0, 0.0], [0.276499987, 19.0, 20.0, 0.0], [0.415000021, 21.0, 22.0, 0.0], [0.100978643, 0.0, 0.0, 0.0], [0.541999996, 23.0, 24.0, 0.0], [0.262095511, 0.0, 0.0, 0.0], [-0.4375, 25.0, 26.0, 0.0], [-0.350294113, 0.0, 0.0, 0.0], [0.267003804, 0.0, 0.0, 0.0], [0.00427673524, 0.0, 0.0, 0.0], [-0.220379457, 0.0, 0.0, 0.0], [0.428540587, 0.0, 0.0, 0.0], [0.0258909706, 0.0, 0.0, 0.0], [-0.374670982, 0.0, 0.0, 0.0], [-0.0884859785, 0.0, 0.0, 0.0], [-0.235612318, 0.0, 0.0, 0.0], [0.058592651, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 23, 24, 15, 25, 26, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 4, 9, 16, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_150(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.440500021, 1.0, 2.0, 1.0], [-0.773499966, 3.0, 4.0, 4.0], [0.654500008, 5.0, 6.0, 2.0], [-0.862499952, 7.0, 8.0, 4.0], [0.728999972, 9.0, 10.0, 2.0], [-0.249500006, 11.0, 12.0, 0.0], [-0.823500037, 13.0, 14.0, 4.0], [-0.872500002, 15.0, 16.0, 4.0], [-0.178499997, 17.0, 18.0, 0.0], [-0.698500037, 19.0, 20.0, 4.0], [-0.708500028, 21.0, 22.0, 4.0], [0.212534815, 0.0, 0.0, 0.0], [-0.0615706891, 0.0, 0.0, 0.0], [-0.226500005, 23.0, 24.0, 0.0], [-0.346197814, 0.0, 0.0, 0.0], [-0.189500004, 25.0, 26.0, 0.0], [0.353702098, 0.0, 0.0, 0.0], [-0.869000018, 27.0, 28.0, 3.0], [0.687000036, 29.0, 30.0, 2.0], [-0.243000001, 31.0, 32.0, 0.0], [0.377756, 0.0, 0.0, 0.0], [0.787500024, 33.0, 34.0, 2.0], [-0.604499996, 35.0, 36.0, 4.0], [0.0266090762, 0.0, 0.0, 0.0], [-0.0901115537, 0.0, 0.0, 0.0], [0.0318617411, 0.0, 0.0, 0.0], [-0.073700659, 0.0, 0.0, 0.0], [-0.235951096, 0.0, 0.0, 0.0], [0.155191824, 0.0, 0.0, 0.0], [0.270249426, 0.0, 0.0, 0.0], [-0.286975384, 0.0, 0.0, 0.0], [-0.11225149, 0.0, 0.0, 0.0], [0.211907133, 0.0, 0.0, 0.0], [0.00433124322, 0.0, 0.0, 0.0], [0.250582546, 0.0, 0.0, 0.0], [-0.360966235, 0.0, 0.0, 0.0], [0.162250891, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 27, 28, 29, 30, 31, 32, 20, 33, 34, 35, 36, 11, 12, 23, 24, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 18, 4, 9, 19, 10, 21, 22, 2, 5, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_151(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.291500002, 1.0, 2.0, 0.0], [-0.851000011, 3.0, 4.0, 1.0], [-0.286500007, 5.0, 6.0, 0.0], [-0.197968781, 0.0, 0.0, 0.0], [-0.879999995, 7.0, 8.0, 3.0], [-0.288825721, 0.0, 0.0, 0.0], [-0.283500016, 9.0, 10.0, 0.0], [0.783499956, 11.0, 12.0, 2.0], [-0.334999979, 13.0, 14.0, 0.0], [0.228347763, 0.0, 0.0, 0.0], [-0.415000021, 15.0, 16.0, 1.0], [-0.334500015, 17.0, 18.0, 0.0], [-0.204930395, 0.0, 0.0, 0.0], [0.19894506, 0.0, 0.0, 0.0], [-0.297296017, 0.0, 0.0, 0.0], [-0.684499979, 19.0, 20.0, 1.0], [-0.180500001, 21.0, 22.0, 0.0], [-0.0058087511, 0.0, 0.0, 0.0], [0.172660425, 0.0, 0.0, 0.0], [-0.0327491798, 0.0, 0.0, 0.0], [0.0412710197, 0.0, 0.0, 0.0], [-0.309953809, 0.0, 0.0, 0.0], [0.0104846042, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 17, 18, 12, 13, 14, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 4, 7, 11, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_152(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [0.79550004, 3.0, 4.0, 2.0], [-0.467000008, 5.0, 6.0, 1.0], [-0.765499949, 7.0, 8.0, 3.0], [-0.244768471, 0.0, 0.0, 0.0], [0.825000048, 9.0, 10.0, 2.0], [0.308831632, 0.0, 0.0, 0.0], [-0.871500015, 11.0, 12.0, 3.0], [-0.700500011, 13.0, 14.0, 3.0], [0.212610871, 0.0, 0.0, 0.0], [-0.720999956, 15.0, 16.0, 4.0], [-0.928499997, 17.0, 18.0, 3.0], [-0.768000007, 19.0, 20.0, 4.0], [0.264922112, 0.0, 0.0, 0.0], [-0.00678757718, 0.0, 0.0, 0.0], [-0.264079571, 0.0, 0.0, 0.0], [0.0682428405, 0.0, 0.0, 0.0], [-0.00888535846, 0.0, 0.0, 0.0], [0.120011225, 0.0, 0.0, 0.0], [-0.208915845, 0.0, 0.0, 0.0], [0.0510638393, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 9, 15, 16, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 5, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_153(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.493000001, 3.0, 4.0, 2.0], [-0.0439999998, 5.0, 6.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [-0.0783500001, 9.0, 10.0, 0.0], [-0.194230348, 0.0, 0.0, 0.0], [0.0211470202, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.282999992, 13.0, 14.0, 0.0], [0.23387222, 0.0, 0.0, 0.0], [-0.0180883892, 0.0, 0.0, 0.0], [-0.294499993, 15.0, 16.0, 0.0], [-0.367000014, 17.0, 18.0, 0.0], [0.26186046, 0.0, 0.0, 0.0], [-0.274500012, 19.0, 20.0, 0.0], [0.161312699, 0.0, 0.0, 0.0], [-0.217661351, 0.0, 0.0, 0.0], [-0.0648544505, 0.0, 0.0, 0.0], [-0.317594826, 0.0, 0.0, 0.0], [-0.272287428, 0.0, 0.0, 0.0], [0.00224382011, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 19, 20, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_154(xs):
    #Predicts Class 4
    function_dict = np.array([[0.203500003, 1.0, 2.0, 0.0], [0.198500007, 3.0, 4.0, 0.0], [-0.208612248, 0.0, 0.0, 0.0], [0.0923999995, 5.0, 6.0, 0.0], [0.190088212, 0.0, 0.0, 0.0], [0.0912000015, 7.0, 8.0, 0.0], [0.0941499993, 9.0, 10.0, 0.0], [0.0894500017, 11.0, 12.0, 0.0], [0.205061689, 0.0, 0.0, 0.0], [-0.330279917, 0.0, 0.0, 0.0], [0.0961499959, 13.0, 14.0, 0.0], [0.00490215328, 0.0, 0.0, 0.0], [-0.259054691, 0.0, 0.0, 0.0], [0.219216213, 0.0, 0.0, 0.0], [-0.0411083587, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_155(xs):
    #Predicts Class 5
    function_dict = np.array([[0.256500006, 1.0, 2.0, 0.0], [0.228500009, 3.0, 4.0, 0.0], [0.259499997, 5.0, 6.0, 0.0], [-0.98150003, 7.0, 8.0, 1.0], [0.253499985, 9.0, 10.0, 0.0], [0.477692336, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 3.0], [0.203500003, 13.0, 14.0, 0.0], [-0.941499949, 15.0, 16.0, 1.0], [-0.372825354, 0.0, 0.0, 0.0], [-0.0319936015, 0.0, 0.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [0.256375819, 0.0, 0.0, 0.0], [-0.149500012, 19.0, 20.0, 0.0], [0.212500006, 21.0, 22.0, 0.0], [-0.268377066, 0.0, 0.0, 0.0], [-0.0482569672, 0.0, 0.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [-0.997500002, 25.0, 26.0, 1.0], [0.0225483701, 0.0, 0.0, 0.0], [-0.0824379921, 0.0, 0.0, 0.0], [0.418623149, 0.0, 0.0, 0.0], [0.0214470401, 0.0, 0.0, 0.0], [0.000803104602, 0.0, 0.0, 0.0], [0.192646727, 0.0, 0.0, 0.0], [-0.215236381, 0.0, 0.0, 0.0], [0.23688601, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 16, 9, 10, 5, 23, 24, 25, 26, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 2, 6, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_156(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.365500003, 1.0, 2.0, 0.0], [-0.216917098, 0.0, 0.0, 0.0], [-0.24149999, 3.0, 4.0, 0.0], [-0.253499985, 5.0, 6.0, 0.0], [-0.401499987, 7.0, 8.0, 1.0], [-0.99849999, 9.0, 10.0, 3.0], [-0.656000018, 11.0, 12.0, 1.0], [0.576499999, 13.0, 14.0, 2.0], [-0.255987465, 0.0, 0.0, 0.0], [-0.967999995, 15.0, 16.0, 4.0], [-0.729499996, 17.0, 18.0, 1.0], [-0.728999972, 19.0, 20.0, 1.0], [0.667999983, 21.0, 22.0, 2.0], [0.559499979, 23.0, 24.0, 2.0], [-0.234499991, 25.0, 26.0, 0.0], [0.0599496998, 0.0, 0.0, 0.0], [-0.222106799, 0.0, 0.0, 0.0], [0.147326544, 0.0, 0.0, 0.0], [-0.0372121744, 0.0, 0.0, 0.0], [0.110509142, 0.0, 0.0, 0.0], [0.654397547, 0.0, 0.0, 0.0], [-0.291531026, 0.0, 0.0, 0.0], [0.153127298, 0.0, 0.0, 0.0], [-0.0106639685, 0.0, 0.0, 0.0], [-0.302351296, 0.0, 0.0, 0.0], [-0.281482279, 0.0, 0.0, 0.0], [0.0750251263, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_157(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.375499994, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.828500032, 5.0, 6.0, 1.0], [-0.0696198791, 0.0, 0.0, 0.0], [0.262910515, 0.0, 0.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [-0.817499995, 9.0, 10.0, 1.0], [-0.971500039, 11.0, 12.0, 4.0], [0.516000032, 13.0, 14.0, 2.0], [-0.210000008, 15.0, 16.0, 0.0], [-0.973500013, 17.0, 18.0, 4.0], [-0.844500005, 19.0, 20.0, 1.0], [0.394999981, 21.0, 22.0, 2.0], [-0.935500026, 23.0, 24.0, 4.0], [0.538499951, 25.0, 26.0, 2.0], [-0.291500002, 27.0, 28.0, 0.0], [-0.960999966, 29.0, 30.0, 4.0], [0.55250001, 31.0, 32.0, 2.0], [-0.963500023, 33.0, 34.0, 4.0], [-0.162116155, 0.0, 0.0, 0.0], [0.0943894461, 0.0, 0.0, 0.0], [-0.0236995015, 0.0, 0.0, 0.0], [0.214306578, 0.0, 0.0, 0.0], [-0.302576154, 0.0, 0.0, 0.0], [-0.0774847493, 0.0, 0.0, 0.0], [0.177370504, 0.0, 0.0, 0.0], [-0.14288561, 0.0, 0.0, 0.0], [0.133618966, 0.0, 0.0, 0.0], [-0.277570605, 0.0, 0.0, 0.0], [0.610463977, 0.0, 0.0, 0.0], [0.0290888324, 0.0, 0.0, 0.0], [0.14831619, 0.0, 0.0, 0.0], [-0.168861821, 0.0, 0.0, 0.0], [-0.116892152, 0.0, 0.0, 0.0], [0.00740768574, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 8, 13, 14, 6, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_158(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0728500038, 1.0, 2.0, 0.0], [-0.101500005, 3.0, 4.0, 0.0], [-0.678499997, 5.0, 6.0, 1.0], [-0.986500025, 7.0, 8.0, 4.0], [0.602499962, 9.0, 10.0, 2.0], [-0.983500004, 11.0, 12.0, 4.0], [0.0674808547, 0.0, 0.0, 0.0], [-0.214034811, 0.0, 0.0, 0.0], [0.361999989, 13.0, 14.0, 2.0], [0.481999993, 15.0, 16.0, 2.0], [-0.0100376289, 0.0, 0.0, 0.0], [0.0419616438, 0.0, 0.0, 0.0], [-0.934499979, 17.0, 18.0, 4.0], [-0.992499948, 19.0, 20.0, 3.0], [0.386500001, 21.0, 22.0, 2.0], [0.0613289662, 0.0, 0.0, 0.0], [0.337878674, 0.0, 0.0, 0.0], [-0.324350864, 0.0, 0.0, 0.0], [-0.0140918121, 0.0, 0.0, 0.0], [-0.0822642669, 0.0, 0.0, 0.0], [0.23335214, 0.0, 0.0, 0.0], [-0.252919346, 0.0, 0.0, 0.0], [0.00157888723, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 19, 20, 21, 22, 15, 16, 10, 11, 17, 18, 6])
    branch_indices = np.array([0, 1, 3, 8, 13, 14, 4, 9, 2, 5, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_159(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0156999994, 1.0, 2.0, 0.0], [-0.0307, 3.0, 4.0, 0.0], [-0.0143499998, 5.0, 6.0, 0.0], [-0.0339000002, 7.0, 8.0, 0.0], [-0.703000009, 9.0, 10.0, 2.0], [-0.562057674, 0.0, 0.0, 0.0], [0.0137499999, 11.0, 12.0, 0.0], [-0.0382499993, 13.0, 14.0, 0.0], [-0.656135142, 0.0, 0.0, 0.0], [-0.0250499994, 15.0, 16.0, 0.0], [-0.128991574, 0.0, 0.0, 0.0], [0.000549999997, 17.0, 18.0, 0.0], [0.0192999989, 19.0, 20.0, 0.0], [-0.0394999981, 21.0, 22.0, 0.0], [-0.03675, 23.0, 24.0, 0.0], [0.398299515, 0.0, 0.0, 0.0], [-0.0239499994, 25.0, 26.0, 0.0], [-0.000714999973, 27.0, 28.0, 0.0], [0.00171500002, 29.0, 30.0, 0.0], [0.363588661, 0.0, 0.0, 0.0], [-0.885499954, 31.0, 32.0, 2.0], [0.00228125812, 0.0, 0.0, 0.0], [-0.426253855, 0.0, 0.0, 0.0], [0.0781890675, 0.0, 0.0, 0.0], [0.291197211, 0.0, 0.0, 0.0], [-0.399768949, 0.0, 0.0, 0.0], [0.353273451, 0.0, 0.0, 0.0], [-0.0269476101, 0.0, 0.0, 0.0], [0.387873024, 0.0, 0.0, 0.0], [-0.62077558, 0.0, 0.0, 0.0], [-0.112388812, 0.0, 0.0, 0.0], [0.00967025384, 0.0, 0.0, 0.0], [-0.0803849921, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 25, 26, 10, 5, 27, 28, 29, 30, 19, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 16, 2, 6, 11, 17, 18, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_160(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.407499999, 1.0, 2.0, 0.0], [-0.412999988, 3.0, 4.0, 0.0], [-0.401000023, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [0.292597443, 0.0, 0.0, 0.0], [-0.33290723, 0.0, 0.0, 0.0], [-0.395500004, 9.0, 10.0, 0.0], [-0.421499997, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [0.31861937, 0.0, 0.0, 0.0], [-0.378499985, 15.0, 16.0, 0.0], [-0.434499979, 17.0, 18.0, 0.0], [-0.325107396, 0.0, 0.0, 0.0], [0.276478261, 0.0, 0.0, 0.0], [0.0583211184, 0.0, 0.0, 0.0], [-0.237594038, 0.0, 0.0, 0.0], [-0.297500014, 19.0, 20.0, 0.0], [-0.184906036, 0.0, 0.0, 0.0], [0.258932531, 0.0, 0.0, 0.0], [0.112467229, 0.0, 0.0, 0.0], [-0.000473590597, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_161(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [-0.29549998, 3.0, 4.0, 0.0], [-0.16049999, 5.0, 6.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.706500053, 9.0, 10.0, 2.0], [0.276685715, 0.0, 0.0, 0.0], [-0.155499995, 11.0, 12.0, 0.0], [-0.393000007, 13.0, 14.0, 0.0], [-0.345499992, 15.0, 16.0, 0.0], [-0.348296672, 0.0, 0.0, 0.0], [0.0933257639, 0.0, 0.0, 0.0], [-0.312522709, 0.0, 0.0, 0.0], [-0.153499991, 17.0, 18.0, 0.0], [-0.407499999, 19.0, 20.0, 0.0], [-0.24426721, 0.0, 0.0, 0.0], [0.227026582, 0.0, 0.0, 0.0], [-0.320500016, 21.0, 22.0, 0.0], [0.499596655, 0.0, 0.0, 0.0], [-0.080400005, 23.0, 24.0, 0.0], [-0.0520710014, 0.0, 0.0, 0.0], [0.160126835, 0.0, 0.0, 0.0], [-0.0778365508, 0.0, 0.0, 0.0], [0.122891046, 0.0, 0.0, 0.0], [-0.206653431, 0.0, 0.0, 0.0], [0.00800384488, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 21, 22, 9, 10, 5, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 4, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_162(xs):
    #Predicts Class 0
    function_dict = np.array([[0.414499998, 1.0, 2.0, 2.0], [-0.968500018, 3.0, 4.0, 4.0], [0.417500019, 5.0, 6.0, 2.0], [-0.801499963, 7.0, 8.0, 1.0], [-0.950999975, 9.0, 10.0, 3.0], [0.245786563, 0.0, 0.0, 0.0], [-0.977499962, 11.0, 12.0, 4.0], [0.37650001, 13.0, 14.0, 2.0], [-0.322312772, 0.0, 0.0, 0.0], [-0.955500007, 15.0, 16.0, 4.0], [-0.937999964, 17.0, 18.0, 4.0], [-0.738999963, 19.0, 20.0, 1.0], [-0.971500039, 21.0, 22.0, 4.0], [-0.148499995, 23.0, 24.0, 0.0], [0.06381993, 0.0, 0.0, 0.0], [0.338999987, 25.0, 26.0, 2.0], [-0.935500026, 27.0, 28.0, 4.0], [0.246852696, 0.0, 0.0, 0.0], [0.0478061177, 0.0, 0.0, 0.0], [-0.180500001, 29.0, 30.0, 0.0], [-0.203000009, 31.0, 32.0, 0.0], [-0.141499996, 33.0, 34.0, 0.0], [-0.967499971, 35.0, 36.0, 4.0], [-0.187352061, 0.0, 0.0, 0.0], [0.0365194827, 0.0, 0.0, 0.0], [-0.0906696618, 0.0, 0.0, 0.0], [0.255669624, 0.0, 0.0, 0.0], [-0.282541066, 0.0, 0.0, 0.0], [0.0333056189, 0.0, 0.0, 0.0], [0.350890636, 0.0, 0.0, 0.0], [-0.0616462566, 0.0, 0.0, 0.0], [-0.272784978, 0.0, 0.0, 0.0], [0.150666386, 0.0, 0.0, 0.0], [-0.014605552, 0.0, 0.0, 0.0], [-0.332565278, 0.0, 0.0, 0.0], [0.174899295, 0.0, 0.0, 0.0], [-0.0022762022, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 8, 25, 26, 27, 28, 17, 18, 5, 29, 30, 31, 32, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 15, 16, 10, 2, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_163(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.843500018, 1.0, 2.0, 4.0], [-0.847499967, 3.0, 4.0, 4.0], [-0.333000004, 5.0, 6.0, 0.0], [-0.855499983, 7.0, 8.0, 4.0], [0.298345715, 0.0, 0.0, 0.0], [0.241394565, 0.0, 0.0, 0.0], [-0.703500032, 9.0, 10.0, 1.0], [-0.887500048, 11.0, 12.0, 4.0], [0.627499998, 13.0, 14.0, 2.0], [-0.0315168686, 0.0, 0.0, 0.0], [-0.300513953, 0.0, 0.0, 0.0], [-0.891499996, 15.0, 16.0, 4.0], [0.579999983, 17.0, 18.0, 2.0], [-0.265920073, 0.0, 0.0, 0.0], [-0.0247298721, 0.0, 0.0, 0.0], [0.00250315247, 0.0, 0.0, 0.0], [-0.258320153, 0.0, 0.0, 0.0], [0.326656461, 0.0, 0.0, 0.0], [-0.0669062659, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_164(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0126499999, 1.0, 2.0, 0.0], [-0.202500001, 3.0, 4.0, 0.0], [-0.191026136, 0.0, 0.0, 0.0], [-0.656000018, 5.0, 6.0, 1.0], [-0.192499995, 7.0, 8.0, 0.0], [0.481999993, 9.0, 10.0, 2.0], [0.587499976, 11.0, 12.0, 2.0], [0.458499998, 13.0, 14.0, 2.0], [-0.186500013, 15.0, 16.0, 0.0], [-0.973500013, 17.0, 18.0, 4.0], [-0.9745, 19.0, 20.0, 4.0], [-0.950999975, 21.0, 22.0, 3.0], [-0.972499967, 23.0, 24.0, 4.0], [-0.972499967, 25.0, 26.0, 4.0], [-0.665500045, 27.0, 28.0, 1.0], [-0.291469604, 0.0, 0.0, 0.0], [-0.183499992, 29.0, 30.0, 0.0], [-0.157406971, 0.0, 0.0, 0.0], [0.12810728, 0.0, 0.0, 0.0], [0.187013388, 0.0, 0.0, 0.0], [-0.32328108, 0.0, 0.0, 0.0], [0.267366499, 0.0, 0.0, 0.0], [-0.221117914, 0.0, 0.0, 0.0], [0.236812204, 0.0, 0.0, 0.0], [-0.0515393876, 0.0, 0.0, 0.0], [0.034694951, 0.0, 0.0, 0.0], [-0.285759658, 0.0, 0.0, 0.0], [0.422649592, 0.0, 0.0, 0.0], [-0.0538978502, 0.0, 0.0, 0.0], [0.308440536, 0.0, 0.0, 0.0], [0.000350359827, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 15, 29, 30, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_165(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.1065, 1.0, 2.0, 0.0], [-0.115500003, 3.0, 4.0, 0.0], [-0.0965999961, 5.0, 6.0, 0.0], [-0.1175, 7.0, 8.0, 0.0], [-0.111500002, 9.0, 10.0, 0.0], [-0.0976999998, 11.0, 12.0, 0.0], [-0.0922500044, 13.0, 14.0, 0.0], [-0.124499999, 15.0, 16.0, 0.0], [0.339533925, 0.0, 0.0, 0.0], [-0.321919501, 0.0, 0.0, 0.0], [-0.0106044151, 0.0, 0.0, 0.0], [-0.0987499952, 17.0, 18.0, 0.0], [0.391309232, 0.0, 0.0, 0.0], [-0.341110885, 0.0, 0.0, 0.0], [-0.0913500041, 19.0, 20.0, 0.0], [-0.127499998, 21.0, 22.0, 0.0], [-0.122500002, 23.0, 24.0, 0.0], [-0.102499999, 25.0, 26.0, 0.0], [-0.270139962, 0.0, 0.0, 0.0], [0.524140179, 0.0, 0.0, 0.0], [-0.0801500008, 27.0, 28.0, 0.0], [-0.0147041054, 0.0, 0.0, 0.0], [0.231024235, 0.0, 0.0, 0.0], [-0.308853865, 0.0, 0.0, 0.0], [-0.102865413, 0.0, 0.0, 0.0], [0.303037971, 0.0, 0.0, 0.0], [0.141258106, 0.0, 0.0, 0.0], [-0.178728923, 0.0, 0.0, 0.0], [0.00296275527, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 25, 26, 18, 12, 13, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 17, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_166(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.706500053, 3.0, 4.0, 2.0], [0.1105, 5.0, 6.0, 0.0], [-0.721500039, 7.0, 8.0, 2.0], [-0.207500011, 9.0, 10.0, 0.0], [0.0741500035, 11.0, 12.0, 0.0], [-0.256073624, 0.0, 0.0, 0.0], [0.202500001, 13.0, 14.0, 0.0], [-0.198609293, 0.0, 0.0, 0.0], [-0.06940566, 0.0, 0.0, 0.0], [0.307504565, 0.0, 0.0, 0.0], [-0.923500001, 15.0, 16.0, 2.0], [0.220528618, 0.0, 0.0, 0.0], [0.194499999, 17.0, 18.0, 0.0], [0.200691, 0.0, 0.0, 0.0], [-0.300499976, 19.0, 20.0, 0.0], [-0.333499998, 21.0, 22.0, 0.0], [0.00714921858, 0.0, 0.0, 0.0], [-0.167437539, 0.0, 0.0, 0.0], [0.156257629, 0.0, 0.0, 0.0], [-0.22268787, 0.0, 0.0, 0.0], [-0.189919844, 0.0, 0.0, 0.0], [0.0220287908, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 10, 19, 20, 21, 22, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 5, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_167(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 1.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.952000022, 5.0, 6.0, 1.0], [-0.851999998, 7.0, 8.0, 2.0], [-0.294, 9.0, 10.0, 0.0], [-0.191827476, 0.0, 0.0, 0.0], [0.00190863828, 0.0, 0.0, 0.0], [0.615499973, 11.0, 12.0, 0.0], [0.430999994, 13.0, 14.0, 0.0], [-0.595499992, 15.0, 16.0, 2.0], [-0.0758000016, 17.0, 18.0, 0.0], [0.569999993, 19.0, 20.0, 0.0], [0.618499994, 21.0, 22.0, 0.0], [-0.266967386, 0.0, 0.0, 0.0], [-0.0619457997, 0.0, 0.0, 0.0], [-0.995999992, 23.0, 24.0, 1.0], [-0.0169965811, 0.0, 0.0, 0.0], [-0.716500044, 25.0, 26.0, 2.0], [-0.747500002, 27.0, 28.0, 2.0], [-0.00516500324, 0.0, 0.0, 0.0], [0.318131864, 0.0, 0.0, 0.0], [-0.395739049, 0.0, 0.0, 0.0], [0.0205154251, 0.0, 0.0, 0.0], [0.22250177, 0.0, 0.0, 0.0], [0.0180929881, 0.0, 0.0, 0.0], [-0.348516494, 0.0, 0.0, 0.0], [0.0283386335, 0.0, 0.0, 0.0], [0.0836788341, 0.0, 0.0, 0.0], [-0.0800173506, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 23, 24, 16, 25, 26, 27, 28, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 4, 9, 15, 10, 17, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_168(xs):
    #Predicts Class 0
    function_dict = np.array([[0.693500042, 1.0, 2.0, 2.0], [-0.945500016, 3.0, 4.0, 4.0], [0.713500023, 5.0, 6.0, 2.0], [-0.228500009, 7.0, 8.0, 0.0], [0.653499961, 9.0, 10.0, 2.0], [-0.612499952, 11.0, 12.0, 1.0], [-0.985499978, 13.0, 14.0, 3.0], [-0.242500007, 15.0, 16.0, 0.0], [0.605000019, 17.0, 18.0, 2.0], [-0.730000019, 19.0, 20.0, 4.0], [-0.109500006, 21.0, 22.0, 0.0], [-0.717499971, 23.0, 24.0, 1.0], [-0.36539045, 0.0, 0.0, 0.0], [0.770500004, 25.0, 26.0, 2.0], [-0.490500003, 27.0, 28.0, 1.0], [-0.253499985, 29.0, 30.0, 0.0], [-0.810500026, 31.0, 32.0, 1.0], [-0.178499997, 33.0, 34.0, 0.0], [-0.166000009, 35.0, 36.0, 0.0], [0.62650001, 37.0, 38.0, 2.0], [0.288801163, 0.0, 0.0, 0.0], [-0.485000014, 39.0, 40.0, 1.0], [-0.127405182, 0.0, 0.0, 0.0], [-0.277941108, 0.0, 0.0, 0.0], [0.229752481, 0.0, 0.0, 0.0], [-0.503499985, 41.0, 42.0, 1.0], [-0.997500002, 43.0, 44.0, 3.0], [0.737499952, 45.0, 46.0, 2.0], [0.773000002, 47.0, 48.0, 2.0], [-0.101618931, 0.0, 0.0, 0.0], [0.179706767, 0.0, 0.0, 0.0], [0.164410412, 0.0, 0.0, 0.0], [-0.419783711, 0.0, 0.0, 0.0], [0.0964450762, 0.0, 0.0, 0.0], [-0.0729379654, 0.0, 0.0, 0.0], [-0.369468212, 0.0, 0.0, 0.0], [0.171019465, 0.0, 0.0, 0.0], [0.0328792892, 0.0, 0.0, 0.0], [-0.139019296, 0.0, 0.0, 0.0], [0.301426202, 0.0, 0.0, 0.0], [0.036645066, 0.0, 0.0, 0.0], [0.302591771, 0.0, 0.0, 0.0], [-0.0123415841, 0.0, 0.0, 0.0], [-0.179362714, 0.0, 0.0, 0.0], [0.0250997618, 0.0, 0.0, 0.0], [-0.333269089, 0.0, 0.0, 0.0], [-0.0137745617, 0.0, 0.0, 0.0], [0.15016444, 0.0, 0.0, 0.0], [-0.162347034, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 20, 39, 40, 22, 23, 24, 12, 41, 42, 43, 44, 45, 46, 47, 48])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 19, 10, 21, 2, 5, 11, 6, 13, 25, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_169(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [-0.178499997, 3.0, 4.0, 0.0], [-0.961500049, 5.0, 6.0, 4.0], [-0.818500042, 7.0, 8.0, 1.0], [0.489000022, 9.0, 10.0, 2.0], [-0.983500004, 11.0, 12.0, 4.0], [-0.108500004, 13.0, 14.0, 0.0], [-0.272500008, 15.0, 16.0, 0.0], [0.455500007, 17.0, 18.0, 2.0], [0.425279558, 0.0, 0.0, 0.0], [-0.0191522222, 0.0, 0.0, 0.0], [-0.243642032, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 3.0], [-0.354694843, 0.0, 0.0, 0.0], [-0.983500004, 21.0, 22.0, 3.0], [-0.985499978, 23.0, 24.0, 3.0], [-0.99849999, 25.0, 26.0, 3.0], [0.444499999, 27.0, 28.0, 2.0], [-0.630499959, 29.0, 30.0, 1.0], [-0.145238787, 0.0, 0.0, 0.0], [-0.109499998, 31.0, 32.0, 0.0], [-0.131751671, 0.0, 0.0, 0.0], [0.116028666, 0.0, 0.0, 0.0], [-0.089859888, 0.0, 0.0, 0.0], [0.16497916, 0.0, 0.0, 0.0], [-0.000424702826, 0.0, 0.0, 0.0], [-0.312214494, 0.0, 0.0, 0.0], [0.0321274176, 0.0, 0.0, 0.0], [0.300786287, 0.0, 0.0, 0.0], [-0.0455595106, 0.0, 0.0, 0.0], [0.0545514524, 0.0, 0.0, 0.0], [0.340870887, 0.0, 0.0, 0.0], [0.0131686339, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 29, 30, 9, 10, 11, 19, 31, 32, 13, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 2, 5, 12, 20, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_170(xs):
    #Predicts Class 2
    function_dict = np.array([[0.60650003, 1.0, 2.0, 2.0], [0.5995, 3.0, 4.0, 2.0], [0.612499952, 5.0, 6.0, 2.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.549499989, 9.0, 10.0, 1.0], [0.297467083, 0.0, 0.0, 0.0], [0.62349999, 11.0, 12.0, 2.0], [-0.225499988, 13.0, 14.0, 0.0], [-0.978500009, 15.0, 16.0, 3.0], [-0.353092849, 0.0, 0.0, 0.0], [0.00912733376, 0.0, 0.0, 0.0], [-0.297131002, 0.0, 0.0, 0.0], [-0.33950001, 17.0, 18.0, 0.0], [-0.958500028, 19.0, 20.0, 4.0], [-0.16049999, 21.0, 22.0, 0.0], [-0.992499948, 23.0, 24.0, 3.0], [-0.201000005, 25.0, 26.0, 0.0], [-0.46450001, 27.0, 28.0, 1.0], [-0.337500006, 29.0, 30.0, 0.0], [0.275729179, 0.0, 0.0, 0.0], [-0.358452708, 0.0, 0.0, 0.0], [-0.278722435, 0.0, 0.0, 0.0], [0.0436146483, 0.0, 0.0, 0.0], [-0.00508344686, 0.0, 0.0, 0.0], [0.188817397, 0.0, 0.0, 0.0], [-0.194294497, 0.0, 0.0, 0.0], [0.0121333888, 0.0, 0.0, 0.0], [-0.279010355, 0.0, 0.0, 0.0], [-0.0465798639, 0.0, 0.0, 0.0], [0.404648602, 0.0, 0.0, 0.0], [0.0287823677, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 9, 10, 5, 11, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 2, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_171(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.565500021, 3.0, 4.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [0.564499974, 7.0, 8.0, 0.0], [-0.265812933, 0.0, 0.0, 0.0], [0.197242469, 0.0, 0.0, 0.0], [0.620499969, 9.0, 10.0, 0.0], [0.5625, 11.0, 12.0, 0.0], [0.241794795, 0.0, 0.0, 0.0], [-0.252777994, 0.0, 0.0, 0.0], [0.621500015, 13.0, 14.0, 0.0], [0.561499953, 15.0, 16.0, 0.0], [-0.309293091, 0.0, 0.0, 0.0], [0.186643094, 0.0, 0.0, 0.0], [-0.061486993, 0.0, 0.0, 0.0], [-5.12444494e-05, 0.0, 0.0, 0.0], [0.243210286, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_172(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.394999981, 3.0, 4.0, 0.0], [-0.222499996, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [-0.380499989, 9.0, 10.0, 0.0], [-0.0221807677, 0.0, 0.0, 0.0], [-0.164759353, 0.0, 0.0, 0.0], [-0.401000023, 11.0, 12.0, 0.0], [0.251428425, 0.0, 0.0, 0.0], [-0.171923831, 0.0, 0.0, 0.0], [-0.297500014, 13.0, 14.0, 0.0], [-0.421499997, 15.0, 16.0, 0.0], [0.306205839, 0.0, 0.0, 0.0], [-0.838, 17.0, 18.0, 2.0], [-0.294, 19.0, 20.0, 0.0], [-0.00287742121, 0.0, 0.0, 0.0], [-0.168721259, 0.0, 0.0, 0.0], [0.307957679, 0.0, 0.0, 0.0], [-0.0613127425, 0.0, 0.0, 0.0], [-0.34756127, 0.0, 0.0, 0.0], [0.00171257032, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 9, 17, 18, 19, 20, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 10, 13, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_173(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [-0.29549998, 3.0, 4.0, 0.0], [-0.164499998, 5.0, 6.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.993999958, 9.0, 10.0, 1.0], [-0.166500002, 11.0, 12.0, 0.0], [-0.161500007, 13.0, 14.0, 0.0], [-0.393000007, 15.0, 16.0, 0.0], [-0.337500006, 17.0, 18.0, 0.0], [-0.303234279, 0.0, 0.0, 0.0], [0.0801233277, 0.0, 0.0, 0.0], [0.0438223667, 0.0, 0.0, 0.0], [0.247797742, 0.0, 0.0, 0.0], [-0.259737194, 0.0, 0.0, 0.0], [-0.149500012, 19.0, 20.0, 0.0], [-0.726000011, 21.0, 22.0, 2.0], [-0.249093667, 0.0, 0.0, 0.0], [-0.876000047, 23.0, 24.0, 2.0], [-0.0136682959, 0.0, 0.0, 0.0], [-0.155499995, 25.0, 26.0, 0.0], [-0.080400005, 27.0, 28.0, 0.0], [0.0401448235, 0.0, 0.0, 0.0], [-0.161853701, 0.0, 0.0, 0.0], [0.0462683178, 0.0, 0.0, 0.0], [0.168909624, 0.0, 0.0, 0.0], [-0.0330592915, 0.0, 0.0, 0.0], [0.235982329, 0.0, 0.0, 0.0], [-0.288522243, 0.0, 0.0, 0.0], [0.00511958264, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 23, 24, 18, 9, 10, 11, 12, 13, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 2, 5, 6, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_174(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.166500002, 1.0, 2.0, 0.0], [-0.17050001, 3.0, 4.0, 0.0], [0.536000013, 5.0, 6.0, 2.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.959500015, 9.0, 10.0, 4.0], [-0.703999996, 11.0, 12.0, 1.0], [-0.92750001, 13.0, 14.0, 3.0], [-0.1875, 15.0, 16.0, 0.0], [-0.990499973, 17.0, 18.0, 3.0], [-0.501245975, 0.0, 0.0, 0.0], [-0.118327826, 0.0, 0.0, 0.0], [-0.968500018, 19.0, 20.0, 4.0], [-0.977999985, 21.0, 22.0, 3.0], [-0.538499951, 23.0, 24.0, 1.0], [-0.526499987, 25.0, 26.0, 1.0], [-0.982499957, 27.0, 28.0, 4.0], [-0.797999978, 29.0, 30.0, 1.0], [0.327777058, 0.0, 0.0, 0.0], [0.0165471639, 0.0, 0.0, 0.0], [-0.976500034, 31.0, 32.0, 4.0], [-0.113499999, 33.0, 34.0, 0.0], [-0.36546433, 0.0, 0.0, 0.0], [0.452000022, 35.0, 36.0, 2.0], [-0.736000001, 37.0, 38.0, 1.0], [-0.865499973, 39.0, 40.0, 4.0], [0.645499945, 41.0, 42.0, 2.0], [0.100046463, 0.0, 0.0, 0.0], [-0.221650541, 0.0, 0.0, 0.0], [0.00132020295, 0.0, 0.0, 0.0], [0.0057338546, 0.0, 0.0, 0.0], [-0.297606587, 0.0, 0.0, 0.0], [0.0137551259, 0.0, 0.0, 0.0], [-0.253987193, 0.0, 0.0, 0.0], [0.32289201, 0.0, 0.0, 0.0], [0.00980877783, 0.0, 0.0, 0.0], [-0.235287145, 0.0, 0.0, 0.0], [0.229321271, 0.0, 0.0, 0.0], [-0.082784161, 0.0, 0.0, 0.0], [0.261776716, 0.0, 0.0, 0.0], [-0.21194014, 0.0, 0.0, 0.0], [-0.0535203815, 0.0, 0.0, 0.0], [-0.0148044173, 0.0, 0.0, 0.0], [-0.285935879, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 18, 9, 10, 31, 32, 33, 34, 21, 35, 36, 37, 38, 39, 40, 41, 42, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 2, 5, 11, 19, 20, 12, 22, 6, 13, 23, 24, 14, 25])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_175(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [-0.178499997, 3.0, 4.0, 0.0], [-0.96449995, 5.0, 6.0, 4.0], [-0.734500051, 7.0, 8.0, 1.0], [0.489000022, 9.0, 10.0, 2.0], [-0.983500004, 11.0, 12.0, 4.0], [-0.108500004, 13.0, 14.0, 0.0], [-0.736500025, 15.0, 16.0, 1.0], [-0.962499976, 17.0, 18.0, 4.0], [0.358840466, 0.0, 0.0, 0.0], [-0.0347282253, 0.0, 0.0, 0.0], [-0.202839166, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 3.0], [-0.333746165, 0.0, 0.0, 0.0], [0.343999982, 21.0, 22.0, 2.0], [-0.207000002, 23.0, 24.0, 0.0], [-0.429804325, 0.0, 0.0, 0.0], [-0.996500015, 25.0, 26.0, 3.0], [-0.717499971, 27.0, 28.0, 1.0], [-0.123365335, 0.0, 0.0, 0.0], [-0.109499998, 29.0, 30.0, 0.0], [0.110932946, 0.0, 0.0, 0.0], [-0.740999997, 31.0, 32.0, 1.0], [0.0264936443, 0.0, 0.0, 0.0], [-0.153650165, 0.0, 0.0, 0.0], [0.0207862053, 0.0, 0.0, 0.0], [0.232529864, 0.0, 0.0, 0.0], [0.169603288, 0.0, 0.0, 0.0], [-0.0333039761, 0.0, 0.0, 0.0], [0.285319597, 0.0, 0.0, 0.0], [-0.0259824414, 0.0, 0.0, 0.0], [-0.17174305, 0.0, 0.0, 0.0], [0.0367756039, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 25, 26, 27, 28, 9, 10, 11, 19, 29, 30, 13, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 18, 4, 2, 5, 12, 20, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_176(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.968500018, 1.0, 2.0, 4.0], [0.461499989, 3.0, 4.0, 2.0], [-0.743499994, 5.0, 6.0, 1.0], [-0.193500012, 7.0, 8.0, 0.0], [0.555999994, 9.0, 10.0, 2.0], [-0.206499994, 11.0, 12.0, 0.0], [-0.713500023, 13.0, 14.0, 1.0], [-0.75849998, 15.0, 16.0, 1.0], [0.451499999, 17.0, 18.0, 2.0], [-0.307243466, 0.0, 0.0, 0.0], [-0.2095, 19.0, 20.0, 0.0], [0.385500014, 21.0, 22.0, 2.0], [-0.193500012, 23.0, 24.0, 0.0], [-0.961500049, 25.0, 26.0, 4.0], [-0.700500011, 27.0, 28.0, 1.0], [-0.770500004, 29.0, 30.0, 1.0], [-0.296687722, 0.0, 0.0, 0.0], [-0.726500034, 31.0, 32.0, 1.0], [0.429353327, 0.0, 0.0, 0.0], [-0.223500013, 33.0, 34.0, 0.0], [-0.994500041, 35.0, 36.0, 3.0], [0.0115070166, 0.0, 0.0, 0.0], [-0.962000012, 37.0, 38.0, 4.0], [-0.756500006, 39.0, 40.0, 1.0], [-0.109499998, 41.0, 42.0, 0.0], [-0.994500041, 43.0, 44.0, 3.0], [-0.994500041, 45.0, 46.0, 3.0], [-0.95599997, 47.0, 48.0, 4.0], [0.550500035, 49.0, 50.0, 2.0], [-0.0132384906, 0.0, 0.0, 0.0], [0.248442397, 0.0, 0.0, 0.0], [-0.103904665, 0.0, 0.0, 0.0], [0.180556342, 0.0, 0.0, 0.0], [-0.14543958, 0.0, 0.0, 0.0], [0.332841963, 0.0, 0.0, 0.0], [0.00787449628, 0.0, 0.0, 0.0], [-0.270570666, 0.0, 0.0, 0.0], [-0.0497734249, 0.0, 0.0, 0.0], [-0.311333418, 0.0, 0.0, 0.0], [0.341478914, 0.0, 0.0, 0.0], [-0.0387104526, 0.0, 0.0, 0.0], [-0.224035904, 0.0, 0.0, 0.0], [0.00199968135, 0.0, 0.0, 0.0], [0.475960553, 0.0, 0.0, 0.0], [0.113230661, 0.0, 0.0, 0.0], [-0.249739692, 0.0, 0.0, 0.0], [0.175415725, 0.0, 0.0, 0.0], [-0.0335558653, 0.0, 0.0, 0.0], [-0.301294297, 0.0, 0.0, 0.0], [0.102185182, 0.0, 0.0, 0.0], [-0.00124811102, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 31, 32, 18, 9, 33, 34, 35, 36, 21, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 10, 19, 20, 2, 5, 11, 22, 12, 23, 24, 6, 13, 25, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_177(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.284500003, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.273499995, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.285002023, 0.0, 0.0, 0.0], [-0.276499987, 9.0, 10.0, 0.0], [-0.260500014, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [0.203678608, 0.0, 0.0, 0.0], [0.0526534915, 0.0, 0.0, 0.0], [0.405969083, 0.0, 0.0, 0.0], [-0.29959318, 0.0, 0.0, 0.0], [-0.208499998, 15.0, 16.0, 0.0], [-0.517500043, 17.0, 18.0, 0.0], [-0.132836193, 0.0, 0.0, 0.0], [-0.210500002, 19.0, 20.0, 0.0], [-0.146499991, 21.0, 22.0, 0.0], [0.172911644, 0.0, 0.0, 0.0], [-0.107769586, 0.0, 0.0, 0.0], [-0.0534027852, 0.0, 0.0, 0.0], [0.475264668, 0.0, 0.0, 0.0], [-0.0901676789, 0.0, 0.0, 0.0], [0.00395147409, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_178(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.107500002, 1.0, 2.0, 0.0], [-0.129500002, 3.0, 4.0, 0.0], [-0.0742499977, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.0771999955, 11.0, 12.0, 0.0], [-0.0728500038, 13.0, 14.0, 0.0], [-0.132499993, 15.0, 16.0, 0.0], [-0.13350001, 17.0, 18.0, 0.0], [-0.127499998, 19.0, 20.0, 0.0], [0.420409977, 0.0, 0.0, 0.0], [-0.0793000013, 21.0, 22.0, 0.0], [-0.529985368, 0.0, 0.0, 0.0], [0.415154755, 0.0, 0.0, 0.0], [-0.0720499977, 23.0, 24.0, 0.0], [-0.136500001, 25.0, 26.0, 0.0], [-0.130499989, 27.0, 28.0, 0.0], [-0.156500012, 29.0, 30.0, 0.0], [-0.651287854, 0.0, 0.0, 0.0], [0.329824716, 0.0, 0.0, 0.0], [-0.125499994, 31.0, 32.0, 0.0], [-0.0813999996, 33.0, 34.0, 0.0], [0.332307398, 0.0, 0.0, 0.0], [-0.654771388, 0.0, 0.0, 0.0], [-0.0603, 35.0, 36.0, 0.0], [0.0407945365, 0.0, 0.0, 0.0], [-0.201032966, 0.0, 0.0, 0.0], [0.343233079, 0.0, 0.0, 0.0], [-0.0198936742, 0.0, 0.0, 0.0], [-0.102943838, 0.0, 0.0, 0.0], [0.223504812, 0.0, 0.0, 0.0], [-0.173616692, 0.0, 0.0, 0.0], [0.0406770892, 0.0, 0.0, 0.0], [-0.0167889688, 0.0, 0.0, 0.0], [-0.696065664, 0.0, 0.0, 0.0], [0.178501651, 0.0, 0.0, 0.0], [-0.00531031797, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 18, 19, 31, 32, 10, 33, 34, 22, 12, 13, 23, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 20, 2, 5, 11, 21, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_179(xs):
    #Predicts Class 5
    function_dict = np.array([[0.256500006, 1.0, 2.0, 0.0], [0.228500009, 3.0, 4.0, 0.0], [0.264499992, 5.0, 6.0, 0.0], [-0.98150003, 7.0, 8.0, 1.0], [0.253499985, 9.0, 10.0, 0.0], [0.259499997, 11.0, 12.0, 0.0], [0.272000015, 13.0, 14.0, 0.0], [0.203500003, 15.0, 16.0, 0.0], [-0.191621736, 0.0, 0.0, 0.0], [-0.335229337, 0.0, 0.0, 0.0], [-0.031442374, 0.0, 0.0, 0.0], [0.36800015, 0.0, 0.0, 0.0], [0.261500001, 17.0, 18.0, 0.0], [-0.307225823, 0.0, 0.0, 0.0], [0.276499987, 19.0, 20.0, 0.0], [-0.644500017, 21.0, 22.0, 2.0], [-0.999500036, 23.0, 24.0, 1.0], [-0.111146092, 0.0, 0.0, 0.0], [0.351751059, 0.0, 0.0, 0.0], [0.445335835, 0.0, 0.0, 0.0], [0.36500001, 25.0, 26.0, 0.0], [0.00500649353, 0.0, 0.0, 0.0], [-0.148872793, 0.0, 0.0, 0.0], [-0.0990465507, 0.0, 0.0, 0.0], [0.251032174, 0.0, 0.0, 0.0], [-0.142735332, 0.0, 0.0, 0.0], [0.0140418541, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 11, 17, 18, 13, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 12, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_180(xs):
    #Predicts Class 0
    function_dict = np.array([[0.112499997, 1.0, 2.0, 0.0], [-0.0726500005, 3.0, 4.0, 0.0], [-0.203458041, 0.0, 0.0, 0.0], [0.414499998, 5.0, 6.0, 2.0], [-0.966500044, 7.0, 8.0, 4.0], [-0.782500029, 9.0, 10.0, 1.0], [0.442499995, 11.0, 12.0, 2.0], [-0.0310500003, 13.0, 14.0, 0.0], [0.474999994, 15.0, 16.0, 2.0], [-0.938500047, 17.0, 18.0, 4.0], [-0.203999996, 19.0, 20.0, 0.0], [-0.997500002, 21.0, 22.0, 3.0], [-0.101500005, 23.0, 24.0, 0.0], [0.0672956184, 0.0, 0.0, 0.0], [-0.200632557, 0.0, 0.0, 0.0], [0.286258429, 0.0, 0.0, 0.0], [-0.925500035, 25.0, 26.0, 4.0], [-0.0368879102, 0.0, 0.0, 0.0], [0.234758943, 0.0, 0.0, 0.0], [-0.0774717927, 0.0, 0.0, 0.0], [-0.353791654, 0.0, 0.0, 0.0], [-0.0800500661, 0.0, 0.0, 0.0], [0.18013595, 0.0, 0.0, 0.0], [-0.000285500893, 0.0, 0.0, 0.0], [-0.204254329, 0.0, 0.0, 0.0], [-0.100491844, 0.0, 0.0, 0.0], [0.19377102, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 13, 14, 15, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_181(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 3.0], [-0.681499958, 3.0, 4.0, 1.0], [-0.696500003, 5.0, 6.0, 1.0], [-0.739500046, 7.0, 8.0, 1.0], [-0.870499969, 9.0, 10.0, 4.0], [-0.734500051, 11.0, 12.0, 1.0], [-0.300500005, 13.0, 14.0, 0.0], [-0.756500006, 15.0, 16.0, 1.0], [-0.966500044, 17.0, 18.0, 4.0], [-0.966500044, 19.0, 20.0, 4.0], [-0.299320698, 0.0, 0.0, 0.0], [-0.922500014, 21.0, 22.0, 4.0], [-0.855000019, 23.0, 24.0, 4.0], [-0.352999985, 25.0, 26.0, 0.0], [-0.886000037, 27.0, 28.0, 3.0], [-0.317499995, 29.0, 30.0, 0.0], [-0.206, 31.0, 32.0, 0.0], [-0.210500002, 33.0, 34.0, 0.0], [-0.952499986, 35.0, 36.0, 4.0], [-0.968500018, 37.0, 38.0, 4.0], [-0.647500038, 39.0, 40.0, 1.0], [0.422999978, 41.0, 42.0, 2.0], [-0.971000016, 43.0, 44.0, 3.0], [-0.210500002, 45.0, 46.0, 0.0], [0.000974358292, 0.0, 0.0, 0.0], [-0.963500023, 47.0, 48.0, 3.0], [-0.96449995, 49.0, 50.0, 3.0], [-0.961500049, 51.0, 52.0, 4.0], [-0.879500031, 53.0, 54.0, 3.0], [0.142313406, 0.0, 0.0, 0.0], [-0.0460435003, 0.0, 0.0, 0.0], [0.273356348, 0.0, 0.0, 0.0], [-0.042192053, 0.0, 0.0, 0.0], [0.341848165, 0.0, 0.0, 0.0], [-0.270277143, 0.0, 0.0, 0.0], [-0.452628374, 0.0, 0.0, 0.0], [-0.0278805736, 0.0, 0.0, 0.0], [0.0727339908, 0.0, 0.0, 0.0], [-0.339284807, 0.0, 0.0, 0.0], [0.323444128, 0.0, 0.0, 0.0], [0.131108671, 0.0, 0.0, 0.0], [0.0487530194, 0.0, 0.0, 0.0], [-0.218610734, 0.0, 0.0, 0.0], [-0.172322184, 0.0, 0.0, 0.0], [0.257443875, 0.0, 0.0, 0.0], [0.338083625, 0.0, 0.0, 0.0], [0.0293245204, 0.0, 0.0, 0.0], [-0.178526044, 0.0, 0.0, 0.0], [-0.0360043384, 0.0, 0.0, 0.0], [-0.0920218304, 0.0, 0.0, 0.0], [0.245436192, 0.0, 0.0, 0.0], [-0.0190575365, 0.0, 0.0, 0.0], [-0.315799981, 0.0, 0.0, 0.0], [0.296610296, 0.0, 0.0, 0.0], [-0.10168267, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 10, 41, 42, 43, 44, 45, 46, 24, 47, 48, 49, 50, 51, 52, 53, 54])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 19, 20, 2, 5, 11, 21, 22, 12, 23, 6, 13, 25, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_182(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.31099999, 3.0, 4.0, 1.0], [0.65200001, 5.0, 6.0, 2.0], [-0.862499952, 7.0, 8.0, 4.0], [-0.217878714, 0.0, 0.0, 0.0], [0.238438025, 0.0, 0.0, 0.0], [0.0312943012, 0.0, 0.0, 0.0], [-0.872500002, 9.0, 10.0, 4.0], [-0.99150002, 11.0, 12.0, 3.0], [-0.983500004, 13.0, 14.0, 3.0], [-0.283171326, 0.0, 0.0, 0.0], [-0.816499949, 15.0, 16.0, 4.0], [0.639500022, 17.0, 18.0, 2.0], [-0.0381318443, 0.0, 0.0, 0.0], [0.0613900088, 0.0, 0.0, 0.0], [0.356607497, 0.0, 0.0, 0.0], [0.0152851157, 0.0, 0.0, 0.0], [-0.218090683, 0.0, 0.0, 0.0], [0.0560598522, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_183(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.284500003, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.273499995, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [-0.255755395, 0.0, 0.0, 0.0], [-0.276499987, 9.0, 10.0, 0.0], [-0.260500014, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.121444426, 0.0, 0.0, 0.0], [0.0440112315, 0.0, 0.0, 0.0], [0.297937602, 0.0, 0.0, 0.0], [-0.267211616, 0.0, 0.0, 0.0], [-0.249500006, 15.0, 16.0, 0.0], [-0.305500001, 17.0, 18.0, 0.0], [-0.0875268355, 0.0, 0.0, 0.0], [0.17112799, 0.0, 0.0, 0.0], [-0.212500006, 19.0, 20.0, 0.0], [0.0440053232, 0.0, 0.0, 0.0], [0.261407554, 0.0, 0.0, 0.0], [-0.297635853, 0.0, 0.0, 0.0], [0.00297147315, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_184(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.1105, 3.0, 4.0, 0.0], [-0.260500014, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [-0.333499998, 11.0, 12.0, 0.0], [-0.249500006, 13.0, 14.0, 0.0], [-0.770500004, 15.0, 16.0, 2.0], [-0.309526563, 0.0, 0.0, 0.0], [0.345255286, 0.0, 0.0, 0.0], [0.190499991, 17.0, 18.0, 0.0], [-0.99849999, 19.0, 20.0, 1.0], [-0.923500001, 21.0, 22.0, 2.0], [-0.38710162, 0.0, 0.0, 0.0], [-0.212500006, 23.0, 24.0, 0.0], [-0.795000017, 25.0, 26.0, 2.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.230589554, 0.0, 0.0, 0.0], [0.194499999, 29.0, 30.0, 0.0], [-0.287696093, 0.0, 0.0, 0.0], [-0.407499999, 31.0, 32.0, 0.0], [0.00106714095, 0.0, 0.0, 0.0], [0.289938837, 0.0, 0.0, 0.0], [0.249188721, 0.0, 0.0, 0.0], [-0.188499987, 33.0, 34.0, 0.0], [0.00423503807, 0.0, 0.0, 0.0], [-0.200432718, 0.0, 0.0, 0.0], [-0.0954863131, 0.0, 0.0, 0.0], [0.179262623, 0.0, 0.0, 0.0], [0.20319064, 0.0, 0.0, 0.0], [-0.0384289026, 0.0, 0.0, 0.0], [0.175003469, 0.0, 0.0, 0.0], [-0.123143211, 0.0, 0.0, 0.0], [-0.294485986, 0.0, 0.0, 0.0], [-0.0233160816, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 9, 17, 29, 30, 19, 31, 32, 21, 22, 13, 23, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 18, 2, 5, 11, 20, 12, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_185(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.11269173, 0.0, 0.0, 0.0], [-0.992499948, 3.0, 4.0, 1.0], [-0.997500002, 5.0, 6.0, 1.0], [0.319000006, 7.0, 8.0, 0.0], [-0.770500004, 9.0, 10.0, 2.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.074149996, 13.0, 14.0, 0.0], [0.110425778, 0.0, 0.0, 0.0], [-0.424499989, 15.0, 16.0, 0.0], [-0.620499969, 17.0, 18.0, 2.0], [-0.130197853, 0.0, 0.0, 0.0], [-0.626000047, 19.0, 20.0, 2.0], [-0.0532213934, 0.0, 0.0, 0.0], [-0.743499994, 21.0, 22.0, 2.0], [0.141573533, 0.0, 0.0, 0.0], [0.000804254727, 0.0, 0.0, 0.0], [-0.214916348, 0.0, 0.0, 0.0], [0.0563126877, 0.0, 0.0, 0.0], [0.247922495, 0.0, 0.0, 0.0], [-0.0763374493, 0.0, 0.0, 0.0], [-0.293287158, 0.0, 0.0, 0.0], [-0.0628489405, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 11, 19, 20, 13, 21, 22, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 12, 4, 7, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_186(xs):
    #Predicts Class 0
    function_dict = np.array([[0.485500008, 1.0, 2.0, 2.0], [0.479499996, 3.0, 4.0, 2.0], [-0.578999996, 5.0, 6.0, 1.0], [0.472499996, 7.0, 8.0, 2.0], [-0.322834104, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 3.0], [-0.889500022, 11.0, 12.0, 4.0], [-0.950500011, 13.0, 14.0, 3.0], [-0.201499999, 15.0, 16.0, 0.0], [-0.727500021, 17.0, 18.0, 1.0], [-0.908499956, 19.0, 20.0, 4.0], [0.744500041, 21.0, 22.0, 2.0], [0.774999976, 23.0, 24.0, 2.0], [-0.728500009, 25.0, 26.0, 1.0], [-0.684499979, 27.0, 28.0, 1.0], [0.352617502, 0.0, 0.0, 0.0], [-0.0363266282, 0.0, 0.0, 0.0], [0.0869353339, 0.0, 0.0, 0.0], [0.563499987, 29.0, 30.0, 2.0], [0.555500031, 31.0, 32.0, 2.0], [0.638499975, 33.0, 34.0, 2.0], [-0.310627282, 0.0, 0.0, 0.0], [0.0087129632, 0.0, 0.0, 0.0], [-0.268999994, 35.0, 36.0, 0.0], [-0.634500027, 37.0, 38.0, 4.0], [-0.0340803377, 0.0, 0.0, 0.0], [-0.261045247, 0.0, 0.0, 0.0], [0.179243222, 0.0, 0.0, 0.0], [-0.0532554835, 0.0, 0.0, 0.0], [-0.342806339, 0.0, 0.0, 0.0], [-0.0429539122, 0.0, 0.0, 0.0], [0.150582701, 0.0, 0.0, 0.0], [0.0186884496, 0.0, 0.0, 0.0], [-0.08333648, 0.0, 0.0, 0.0], [0.0856420994, 0.0, 0.0, 0.0], [-0.151355788, 0.0, 0.0, 0.0], [0.11719849, 0.0, 0.0, 0.0], [-0.160521969, 0.0, 0.0, 0.0], [0.0349966548, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 15, 16, 4, 17, 29, 30, 31, 32, 33, 34, 21, 22, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 9, 18, 10, 19, 20, 6, 11, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_187(xs):
    #Predicts Class 1
    function_dict = np.array([[0.503499985, 1.0, 2.0, 2.0], [-0.820500016, 3.0, 4.0, 1.0], [-0.210500002, 5.0, 6.0, 0.0], [-0.161500007, 7.0, 8.0, 0.0], [-0.806499958, 9.0, 10.0, 1.0], [-0.222499996, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 3.0], [-0.99849999, 15.0, 16.0, 3.0], [-0.983999968, 17.0, 18.0, 3.0], [-0.984500051, 19.0, 20.0, 3.0], [-0.913499951, 21.0, 22.0, 4.0], [-0.233500004, 23.0, 24.0, 0.0], [-0.947000027, 25.0, 26.0, 4.0], [0.286946595, 0.0, 0.0, 0.0], [-0.521499991, 27.0, 28.0, 1.0], [0.0709249005, 0.0, 0.0, 0.0], [-0.270475805, 0.0, 0.0, 0.0], [-0.0949158743, 0.0, 0.0, 0.0], [0.11224521, 0.0, 0.0, 0.0], [-0.173000008, 29.0, 30.0, 0.0], [-0.199870899, 0.0, 0.0, 0.0], [-0.797500014, 31.0, 32.0, 1.0], [-0.223499998, 33.0, 34.0, 0.0], [0.577499986, 35.0, 36.0, 2.0], [-0.230500013, 37.0, 38.0, 0.0], [0.654999971, 39.0, 40.0, 2.0], [0.538500011, 41.0, 42.0, 2.0], [-0.141499996, 43.0, 44.0, 0.0], [-0.453500003, 45.0, 46.0, 1.0], [0.454418808, 0.0, 0.0, 0.0], [0.116112322, 0.0, 0.0, 0.0], [-0.129569903, 0.0, 0.0, 0.0], [0.0794482976, 0.0, 0.0, 0.0], [-0.294162393, 0.0, 0.0, 0.0], [0.0645592511, 0.0, 0.0, 0.0], [-0.0631723702, 0.0, 0.0, 0.0], [0.0481251702, 0.0, 0.0, 0.0], [-0.340985328, 0.0, 0.0, 0.0], [-0.0659140497, 0.0, 0.0, 0.0], [0.373453736, 0.0, 0.0, 0.0], [-0.0915771052, 0.0, 0.0, 0.0], [0.115307458, 0.0, 0.0, 0.0], [-0.282850474, 0.0, 0.0, 0.0], [-0.309076995, 0.0, 0.0, 0.0], [0.0314311571, 0.0, 0.0, 0.0], [0.251655817, 0.0, 0.0, 0.0], [-0.159296781, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 29, 30, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 13, 43, 44, 45, 46])
    branch_indices = np.array([0, 1, 3, 7, 8, 4, 9, 19, 10, 21, 22, 2, 5, 11, 23, 24, 12, 25, 26, 6, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_188(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.25849998, 3.0, 4.0, 0.0], [-0.49150002, 5.0, 6.0, 1.0], [-0.984500051, 7.0, 8.0, 3.0], [-0.5255, 9.0, 10.0, 1.0], [0.318412751, 0.0, 0.0, 0.0], [-0.953500032, 11.0, 12.0, 4.0], [-0.876999974, 13.0, 14.0, 4.0], [-0.274623632, 0.0, 0.0, 0.0], [-0.242500007, 15.0, 16.0, 0.0], [0.701499999, 17.0, 18.0, 2.0], [0.638000011, 19.0, 20.0, 2.0], [-0.983500004, 21.0, 22.0, 3.0], [-0.558500051, 23.0, 24.0, 1.0], [0.271083027, 0.0, 0.0, 0.0], [-0.578999996, 25.0, 26.0, 1.0], [-0.999500036, 27.0, 28.0, 3.0], [-0.283710837, 0.0, 0.0, 0.0], [-0.0683935657, 0.0, 0.0, 0.0], [-0.969500005, 29.0, 30.0, 4.0], [-0.987500012, 31.0, 32.0, 3.0], [-0.208499998, 33.0, 34.0, 0.0], [-0.872500002, 35.0, 36.0, 4.0], [-0.268369913, 0.0, 0.0, 0.0], [0.0908961296, 0.0, 0.0, 0.0], [-0.0127307056, 0.0, 0.0, 0.0], [0.365349323, 0.0, 0.0, 0.0], [-0.156318918, 0.0, 0.0, 0.0], [0.0112796044, 0.0, 0.0, 0.0], [-0.0224151462, 0.0, 0.0, 0.0], [0.370140761, 0.0, 0.0, 0.0], [-0.258377045, 0.0, 0.0, 0.0], [0.0584411137, 0.0, 0.0, 0.0], [-0.231171653, 0.0, 0.0, 0.0], [0.174820021, 0.0, 0.0, 0.0], [0.144399405, 0.0, 0.0, 0.0], [-0.019471582, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 8, 25, 26, 27, 28, 17, 18, 5, 29, 30, 31, 32, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 15, 16, 10, 2, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_189(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.185499996, 1.0, 2.0, 0.0], [-0.192499995, 3.0, 4.0, 0.0], [-0.146499991, 5.0, 6.0, 0.0], [-0.19749999, 7.0, 8.0, 0.0], [-0.190499991, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.721500039, 13.0, 14.0, 2.0], [-0.210500002, 15.0, 16.0, 0.0], [-0.193500012, 17.0, 18.0, 0.0], [0.456822902, 0.0, 0.0, 0.0], [0.0381385013, 0.0, 0.0, 0.0], [-0.321344823, 0.0, 0.0, 0.0], [-0.114109971, 0.0, 0.0, 0.0], [-0.770500004, 19.0, 20.0, 2.0], [-0.0375999995, 21.0, 22.0, 0.0], [-0.273499995, 23.0, 24.0, 0.0], [-0.2095, 25.0, 26.0, 0.0], [-0.260258466, 0.0, 0.0, 0.0], [0.00786843617, 0.0, 0.0, 0.0], [-0.851999998, 27.0, 28.0, 2.0], [-0.0554499999, 29.0, 30.0, 0.0], [-0.999500036, 31.0, 32.0, 4.0], [0.0087799998, 33.0, 34.0, 0.0], [0.0325745828, 0.0, 0.0, 0.0], [-0.142897248, 0.0, 0.0, 0.0], [0.385768831, 0.0, 0.0, 0.0], [0.0226716474, 0.0, 0.0, 0.0], [-0.00173939008, 0.0, 0.0, 0.0], [0.0714828819, 0.0, 0.0, 0.0], [0.159459233, 0.0, 0.0, 0.0], [-0.205866918, 0.0, 0.0, 0.0], [0.41408062, 0.0, 0.0, 0.0], [0.0105788289, 0.0, 0.0, 0.0], [-0.189786375, 0.0, 0.0, 0.0], [0.107804246, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 18, 9, 10, 11, 12, 27, 28, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 2, 5, 6, 13, 19, 20, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_190(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.992499948, 1.0, 2.0, 1.0], [-0.994500041, 3.0, 4.0, 1.0], [-0.131774306, 0.0, 0.0, 0.0], [-0.629000008, 5.0, 6.0, 2.0], [0.183455437, 0.0, 0.0, 0.0], [-0.747500002, 7.0, 8.0, 2.0], [-0.601000011, 9.0, 10.0, 2.0], [-0.851999998, 11.0, 12.0, 2.0], [-0.146500006, 13.0, 14.0, 0.0], [-0.99849999, 15.0, 16.0, 4.0], [-0.581499994, 17.0, 18.0, 2.0], [0.00399628934, 0.0, 0.0, 0.0], [-0.0569713339, 0.0, 0.0, 0.0], [0.213315904, 0.0, 0.0, 0.0], [0.00253031589, 0.0, 0.0, 0.0], [-0.263758957, 0.0, 0.0, 0.0], [-0.0659660995, 0.0, 0.0, 0.0], [0.168442994, 0.0, 0.0, 0.0], [-0.051364854, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_191(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [-0.257499993, 3.0, 4.0, 0.0], [-0.16049999, 5.0, 6.0, 0.0], [-0.296499997, 7.0, 8.0, 0.0], [-0.822000027, 9.0, 10.0, 2.0], [-0.1655, 11.0, 12.0, 0.0], [-0.155499995, 13.0, 14.0, 0.0], [-0.382499993, 15.0, 16.0, 0.0], [0.157172903, 0.0, 0.0, 0.0], [-0.267343283, 0.0, 0.0, 0.0], [-0.025410885, 0.0, 0.0, 0.0], [0.0590459332, 0.0, 0.0, 0.0], [0.192791358, 0.0, 0.0, 0.0], [-0.273901254, 0.0, 0.0, 0.0], [-0.153499991, 17.0, 18.0, 0.0], [-0.394500017, 19.0, 20.0, 0.0], [-0.838, 21.0, 22.0, 2.0], [0.194934741, 0.0, 0.0, 0.0], [-0.1505, 23.0, 24.0, 0.0], [-0.0416366644, 0.0, 0.0, 0.0], [0.141566366, 0.0, 0.0, 0.0], [-0.273147732, 0.0, 0.0, 0.0], [0.0519830659, 0.0, 0.0, 0.0], [-0.242422372, 0.0, 0.0, 0.0], [0.00602320395, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 11, 12, 13, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 14, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_192(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.984500051, 1.0, 2.0, 4.0], [-0.1655, 3.0, 4.0, 0.0], [-0.440500021, 5.0, 6.0, 1.0], [-0.200687513, 0.0, 0.0, 0.0], [-0.0373605266, 0.0, 0.0, 0.0], [0.573500037, 7.0, 8.0, 2.0], [-0.357500017, 9.0, 10.0, 1.0], [-0.276499987, 11.0, 12.0, 0.0], [0.592499971, 13.0, 14.0, 2.0], [-0.183499992, 15.0, 16.0, 0.0], [0.0559657775, 0.0, 0.0, 0.0], [-0.918500006, 17.0, 18.0, 4.0], [-0.2685, 19.0, 20.0, 0.0], [-0.656499982, 21.0, 22.0, 1.0], [-0.953500032, 23.0, 24.0, 3.0], [-0.24933894, 0.0, 0.0, 0.0], [-0.0202850439, 0.0, 0.0, 0.0], [-0.219423503, 0.0, 0.0, 0.0], [0.121613927, 0.0, 0.0, 0.0], [0.27120766, 0.0, 0.0, 0.0], [-0.0160166025, 0.0, 0.0, 0.0], [0.300765604, 0.0, 0.0, 0.0], [-0.0424534976, 0.0, 0.0, 0.0], [0.0329415724, 0.0, 0.0, 0.0], [-0.0994119197, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 17, 18, 19, 20, 21, 22, 23, 24, 15, 16, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 8, 13, 14, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_193(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.375499994, 1.0, 2.0, 0.0], [-0.476999998, 3.0, 4.0, 1.0], [0.570500016, 5.0, 6.0, 2.0], [0.221593037, 0.0, 0.0, 0.0], [0.0167993344, 0.0, 0.0, 0.0], [0.551499963, 7.0, 8.0, 2.0], [0.591500044, 9.0, 10.0, 2.0], [0.539499998, 11.0, 12.0, 2.0], [-0.997500002, 13.0, 14.0, 3.0], [-0.965499997, 15.0, 16.0, 4.0], [0.600499988, 17.0, 18.0, 2.0], [-0.658499956, 19.0, 20.0, 1.0], [-0.224566922, 0.0, 0.0, 0.0], [-0.238999993, 21.0, 22.0, 0.0], [-0.211499989, 23.0, 24.0, 0.0], [-0.0253084302, 0.0, 0.0, 0.0], [-0.947000027, 25.0, 26.0, 4.0], [-0.930999994, 27.0, 28.0, 4.0], [-0.242500007, 29.0, 30.0, 0.0], [-0.0112730684, 0.0, 0.0, 0.0], [0.129458874, 0.0, 0.0, 0.0], [-0.267391711, 0.0, 0.0, 0.0], [0.0939679742, 0.0, 0.0, 0.0], [0.29736191, 0.0, 0.0, 0.0], [-0.0750723258, 0.0, 0.0, 0.0], [-0.331677616, 0.0, 0.0, 0.0], [-0.100324869, 0.0, 0.0, 0.0], [-0.000853767153, 0.0, 0.0, 0.0], [0.297970384, 0.0, 0.0, 0.0], [-0.0014408048, 0.0, 0.0, 0.0], [-0.110810228, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 19, 20, 12, 21, 22, 23, 24, 15, 25, 26, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 8, 13, 14, 6, 9, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_194(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.33950001, 3.0, 4.0, 0.0], [0.15613316, 0.0, 0.0, 0.0], [-0.476999998, 5.0, 6.0, 1.0], [-0.337500006, 7.0, 8.0, 0.0], [-0.225911275, 0.0, 0.0, 0.0], [-0.367500007, 9.0, 10.0, 0.0], [0.256428331, 0.0, 0.0, 0.0], [0.693500042, 11.0, 12.0, 2.0], [0.080815345, 0.0, 0.0, 0.0], [-0.15158996, 0.0, 0.0, 0.0], [-0.933500051, 13.0, 14.0, 4.0], [-0.643999994, 15.0, 16.0, 1.0], [0.0170999542, 0.0, 0.0, 0.0], [-0.0711445361, 0.0, 0.0, 0.0], [-0.170956209, 0.0, 0.0, 0.0], [0.087829873, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 10, 7, 13, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 6, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_195(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.613499999, 3.0, 4.0, 2.0], [-0.0439999998, 5.0, 6.0, 0.0], [-0.644500017, 7.0, 8.0, 2.0], [-0.00657499954, 9.0, 10.0, 0.0], [-0.154257104, 0.0, 0.0, 0.0], [-0.0198093634, 0.0, 0.0, 0.0], [-0.654500008, 11.0, 12.0, 2.0], [-0.99849999, 13.0, 14.0, 4.0], [-0.116000004, 15.0, 16.0, 0.0], [0.116999999, 17.0, 18.0, 0.0], [-0.67050004, 19.0, 20.0, 2.0], [0.008715, 21.0, 22.0, 0.0], [-0.189413622, 0.0, 0.0, 0.0], [-0.0200092979, 0.0, 0.0, 0.0], [-0.99849999, 23.0, 24.0, 1.0], [0.219911233, 0.0, 0.0, 0.0], [-0.127416506, 0.0, 0.0, 0.0], [0.0490748435, 0.0, 0.0, 0.0], [0.000993779628, 0.0, 0.0, 0.0], [-0.160694793, 0.0, 0.0, 0.0], [-0.0860230997, 0.0, 0.0, 0.0], [0.301009029, 0.0, 0.0, 0.0], [0.0758782178, 0.0, 0.0, 0.0], [-0.087289229, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 23, 24, 16, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 4, 9, 15, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_196(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 2.0], [0.0490000024, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [0.0234500002, 9.0, 10.0, 0.0], [-0.02575, 11.0, 12.0, 0.0], [0.101500005, 13.0, 14.0, 0.0], [0.0265500005, 15.0, 16.0, 0.0], [0.0260000005, 17.0, 18.0, 0.0], [-0.0472499989, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.0403999984, 23.0, 24.0, 0.0], [-0.662999988, 25.0, 26.0, 2.0], [0.0741500035, 27.0, 28.0, 0.0], [-0.152478993, 0.0, 0.0, 0.0], [0.00325499987, 29.0, 30.0, 0.0], [0.028549999, 31.0, 32.0, 0.0], [-0.0206499994, 33.0, 34.0, 0.0], [0.372628689, 0.0, 0.0, 0.0], [-0.0565499999, 35.0, 36.0, 0.0], [-0.0258499999, 37.0, 38.0, 0.0], [0.454894811, 0.0, 0.0, 0.0], [-0.885499954, 39.0, 40.0, 2.0], [-0.119499996, 41.0, 42.0, 0.0], [0.283457577, 0.0, 0.0, 0.0], [-0.00239134533, 0.0, 0.0, 0.0], [-0.274403989, 0.0, 0.0, 0.0], [0.0436288565, 0.0, 0.0, 0.0], [0.252441198, 0.0, 0.0, 0.0], [0.00722827995, 0.0, 0.0, 0.0], [0.149028733, 0.0, 0.0, 0.0], [-0.377561748, 0.0, 0.0, 0.0], [-0.0299490038, 0.0, 0.0, 0.0], [-0.0835050568, 0.0, 0.0, 0.0], [-0.443753719, 0.0, 0.0, 0.0], [-0.007824976, 0.0, 0.0, 0.0], [0.542087615, 0.0, 0.0, 0.0], [-0.371658444, 0.0, 0.0, 0.0], [-0.0481088869, 0.0, 0.0, 0.0], [-0.287656158, 0.0, 0.0, 0.0], [0.149547622, 0.0, 0.0, 0.0], [-0.00996944867, 0.0, 0.0, 0.0], [-0.237250715, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 18, 35, 36, 37, 38, 21, 39, 40, 41, 42, 24, 25, 26, 27, 28, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 19, 20, 10, 22, 2, 5, 11, 23, 12, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_197(xs):
    #Predicts Class 5
    function_dict = np.array([[0.256500006, 1.0, 2.0, 0.0], [0.228500009, 3.0, 4.0, 0.0], [0.264499992, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [0.253499985, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [0.272000015, 13.0, 14.0, 0.0], [-0.0123999994, 15.0, 16.0, 0.0], [0.212500006, 17.0, 18.0, 0.0], [-0.292901248, 0.0, 0.0, 0.0], [-0.0175263677, 0.0, 0.0, 0.0], [0.252870232, 0.0, 0.0, 0.0], [0.0219556931, 0.0, 0.0, 0.0], [-0.248636737, 0.0, 0.0, 0.0], [0.282499999, 19.0, 20.0, 0.0], [-0.0371000022, 21.0, 22.0, 0.0], [0.172499999, 23.0, 24.0, 0.0], [0.318255693, 0.0, 0.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [0.278999984, 27.0, 28.0, 0.0], [0.36500001, 29.0, 30.0, 0.0], [-0.0152135221, 0.0, 0.0, 0.0], [0.223381281, 0.0, 0.0, 0.0], [-0.202433392, 0.0, 0.0, 0.0], [-0.00832599122, 0.0, 0.0, 0.0], [-0.275582045, 0.0, 0.0, 0.0], [0.165097132, 0.0, 0.0, 0.0], [0.291268826, 0.0, 0.0, 0.0], [0.0842056945, 0.0, 0.0, 0.0], [-0.191466764, 0.0, 0.0, 0.0], [0.0105484063, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 17, 25, 26, 9, 10, 11, 12, 13, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 2, 5, 6, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_198(xs):
    #Predicts Class 0
    function_dict = np.array([[0.112499997, 1.0, 2.0, 0.0], [-0.0796000063, 3.0, 4.0, 0.0], [-0.195051774, 0.0, 0.0, 0.0], [-0.201499999, 5.0, 6.0, 0.0], [-0.966500044, 7.0, 8.0, 4.0], [-0.946500003, 9.0, 10.0, 4.0], [-0.194499999, 11.0, 12.0, 0.0], [-0.0542000011, 13.0, 14.0, 0.0], [0.474999994, 15.0, 16.0, 2.0], [-0.228500009, 17.0, 18.0, 0.0], [-0.206499994, 19.0, 20.0, 0.0], [-0.728500009, 21.0, 22.0, 1.0], [-0.891499996, 23.0, 24.0, 4.0], [0.0645439997, 0.0, 0.0, 0.0], [-0.144035086, 0.0, 0.0, 0.0], [0.247465417, 0.0, 0.0, 0.0], [0.0280999988, 25.0, 26.0, 0.0], [-0.12466871, 0.0, 0.0, 0.0], [0.0427937731, 0.0, 0.0, 0.0], [0.0569468811, 0.0, 0.0, 0.0], [-0.169625148, 0.0, 0.0, 0.0], [0.00702427514, 0.0, 0.0, 0.0], [-0.311984092, 0.0, 0.0, 0.0], [-0.0365861095, 0.0, 0.0, 0.0], [0.0613830276, 0.0, 0.0, 0.0], [-0.0384748951, 0.0, 0.0, 0.0], [0.129717007, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 13, 14, 15, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_199(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.826499999, 1.0, 2.0, 1.0], [-0.32249999, 3.0, 4.0, 0.0], [-0.946500003, 5.0, 6.0, 4.0], [-0.193904892, 0.0, 0.0, 0.0], [-0.112499997, 7.0, 8.0, 0.0], [-0.300500005, 9.0, 10.0, 0.0], [-0.487500012, 11.0, 12.0, 1.0], [0.541499972, 13.0, 14.0, 2.0], [-0.195836768, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 3.0], [-0.949499965, 17.0, 18.0, 4.0], [-0.533499956, 19.0, 20.0, 1.0], [-0.928499997, 21.0, 22.0, 4.0], [0.513999999, 23.0, 24.0, 2.0], [-0.117050707, 0.0, 0.0, 0.0], [-0.0528977774, 0.0, 0.0, 0.0], [-0.967499971, 25.0, 26.0, 3.0], [-0.287, 27.0, 28.0, 0.0], [-0.700500011, 29.0, 30.0, 1.0], [-0.887500048, 31.0, 32.0, 4.0], [-0.364732891, 0.0, 0.0, 0.0], [0.307683259, 0.0, 0.0, 0.0], [-0.86650002, 33.0, 34.0, 4.0], [-0.018211497, 0.0, 0.0, 0.0], [0.188621774, 0.0, 0.0, 0.0], [0.332058609, 0.0, 0.0, 0.0], [0.0227855593, 0.0, 0.0, 0.0], [-0.264796168, 0.0, 0.0, 0.0], [0.00994084962, 0.0, 0.0, 0.0], [0.314213723, 0.0, 0.0, 0.0], [-0.0521734655, 0.0, 0.0, 0.0], [-0.0560118593, 0.0, 0.0, 0.0], [0.0908458978, 0.0, 0.0, 0.0], [0.039842695, 0.0, 0.0, 0.0], [-0.207869694, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 23, 24, 14, 8, 15, 25, 26, 27, 28, 29, 30, 31, 32, 20, 21, 33, 34])
    branch_indices = np.array([0, 1, 4, 7, 13, 2, 5, 9, 16, 10, 17, 18, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_200(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.965499997, 3.0, 4.0, 3.0], [0.126109958, 0.0, 0.0, 0.0], [-0.968500018, 5.0, 6.0, 3.0], [-0.928499997, 7.0, 8.0, 3.0], [-0.972499967, 9.0, 10.0, 3.0], [0.588999987, 11.0, 12.0, 2.0], [0.345499992, 13.0, 14.0, 2.0], [-0.892500043, 15.0, 16.0, 3.0], [-0.9745, 17.0, 18.0, 3.0], [-0.215165526, 0.0, 0.0, 0.0], [0.247650772, 0.0, 0.0, 0.0], [0.0640896857, 0.0, 0.0, 0.0], [0.142857671, 0.0, 0.0, 0.0], [-0.776499987, 19.0, 20.0, 4.0], [0.637499988, 21.0, 22.0, 2.0], [-0.901499987, 23.0, 24.0, 4.0], [0.000450951775, 0.0, 0.0, 0.0], [0.254227698, 0.0, 0.0, 0.0], [-0.192952469, 0.0, 0.0, 0.0], [0.055717174, 0.0, 0.0, 0.0], [0.019297339, 0.0, 0.0, 0.0], [0.260662735, 0.0, 0.0, 0.0], [-0.15087077, 0.0, 0.0, 0.0], [0.0316159241, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4, 7, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_201(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.547500014, 3.0, 4.0, 0.0], [0.141499996, 5.0, 6.0, 0.0], [0.541499972, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.519999981, 11.0, 12.0, 2.0], [-0.196476787, 0.0, 0.0, 0.0], [0.534000039, 13.0, 14.0, 0.0], [-0.253262043, 0.0, 0.0, 0.0], [0.557999969, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [-0.0627000034, 19.0, 20.0, 0.0], [-0.119808257, 0.0, 0.0, 0.0], [0.513000011, 21.0, 22.0, 0.0], [0.539999962, 23.0, 24.0, 0.0], [0.261052459, 0.0, 0.0, 0.0], [0.561499953, 25.0, 26.0, 0.0], [-0.281698704, 0.0, 0.0, 0.0], [-0.00456750719, 0.0, 0.0, 0.0], [-0.0550140627, 0.0, 0.0, 0.0], [0.182112291, 0.0, 0.0, 0.0], [0.00296073663, 0.0, 0.0, 0.0], [-0.0753248408, 0.0, 0.0, 0.0], [0.315666765, 0.0, 0.0, 0.0], [0.0322522223, 0.0, 0.0, 0.0], [-0.255680412, 0.0, 0.0, 0.0], [0.073222734, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 25, 26, 17, 18, 19, 20, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 16, 10, 2, 5, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_202(xs):
    #Predicts Class 4
    function_dict = np.array([[0.152999997, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.192499995, 5.0, 6.0, 0.0], [0.1065, 7.0, 8.0, 0.0], [-0.278644741, 0.0, 0.0, 0.0], [0.263656527, 0.0, 0.0, 0.0], [0.202500001, 9.0, 10.0, 0.0], [0.0945499986, 11.0, 12.0, 0.0], [0.32011193, 0.0, 0.0, 0.0], [0.194499999, 13.0, 14.0, 0.0], [0.123519555, 0.0, 0.0, 0.0], [0.0850500017, 15.0, 16.0, 0.0], [-0.209979221, 0.0, 0.0, 0.0], [0.0295307469, 0.0, 0.0, 0.0], [-0.118121043, 0.0, 0.0, 0.0], [-0.00315802963, 0.0, 0.0, 0.0], [0.0679828003, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 13, 14, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_203(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.100186922, 0.0, 0.0, 0.0], [-0.995499969, 3.0, 4.0, 1.0], [-0.99849999, 5.0, 6.0, 1.0], [0.319000006, 7.0, 8.0, 0.0], [-0.997500002, 9.0, 10.0, 4.0], [0.00176999997, 11.0, 12.0, 0.0], [-0.752500057, 13.0, 14.0, 2.0], [0.13555862, 0.0, 0.0, 0.0], [-0.795000017, 15.0, 16.0, 2.0], [0.157505453, 0.0, 0.0, 0.0], [-0.294, 17.0, 18.0, 0.0], [0.400000006, 19.0, 20.0, 0.0], [-0.923500001, 21.0, 22.0, 2.0], [-0.999500036, 23.0, 24.0, 3.0], [-0.00387248094, 0.0, 0.0, 0.0], [-0.155395925, 0.0, 0.0, 0.0], [0.0866544172, 0.0, 0.0, 0.0], [-0.126453236, 0.0, 0.0, 0.0], [0.280629128, 0.0, 0.0, 0.0], [-0.0667019486, 0.0, 0.0, 0.0], [-0.0485707335, 0.0, 0.0, 0.0], [-0.282373667, 0.0, 0.0, 0.0], [0.0468934774, 0.0, 0.0, 0.0], [-0.124823757, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 10, 17, 18, 19, 20, 21, 22, 23, 24, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 11, 12, 4, 7, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_204(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.440500021, 1.0, 2.0, 1.0], [-0.466499984, 3.0, 4.0, 1.0], [0.654500008, 5.0, 6.0, 2.0], [-0.484499991, 7.0, 8.0, 1.0], [-0.461499989, 9.0, 10.0, 1.0], [0.0541659743, 0.0, 0.0, 0.0], [-0.823500037, 11.0, 12.0, 4.0], [-0.5255, 13.0, 14.0, 1.0], [-0.249960154, 0.0, 0.0, 0.0], [0.213298798, 0.0, 0.0, 0.0], [0.00457025971, 0.0, 0.0, 0.0], [-0.016239075, 0.0, 0.0, 0.0], [-0.263802677, 0.0, 0.0, 0.0], [-0.538499951, 15.0, 16.0, 1.0], [0.728999972, 17.0, 18.0, 2.0], [0.000107630462, 0.0, 0.0, 0.0], [-0.218042985, 0.0, 0.0, 0.0], [0.203173518, 0.0, 0.0, 0.0], [-0.0895153657, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_205(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.825500011, 1.0, 2.0, 1.0], [0.516000032, 3.0, 4.0, 2.0], [0.407499999, 5.0, 6.0, 2.0], [-0.99849999, 7.0, 8.0, 3.0], [0.57249999, 9.0, 10.0, 2.0], [0.3935, 11.0, 12.0, 2.0], [-0.202500001, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 3.0], [-0.161500007, 17.0, 18.0, 0.0], [0.0950484052, 0.0, 0.0, 0.0], [-0.0866703093, 0.0, 0.0, 0.0], [-0.986500025, 19.0, 20.0, 3.0], [0.216033772, 0.0, 0.0, 0.0], [-0.218499988, 21.0, 22.0, 0.0], [-0.199499995, 23.0, 24.0, 0.0], [-0.0681536496, 0.0, 0.0, 0.0], [0.0445418432, 0.0, 0.0, 0.0], [-0.234998733, 0.0, 0.0, 0.0], [-0.00736498972, 0.0, 0.0, 0.0], [-0.2095, 25.0, 26.0, 0.0], [-0.95599997, 27.0, 28.0, 3.0], [-0.804499984, 29.0, 30.0, 1.0], [-0.986500025, 31.0, 32.0, 3.0], [-0.269661188, 0.0, 0.0, 0.0], [-0.716500044, 33.0, 34.0, 1.0], [-0.180856556, 0.0, 0.0, 0.0], [0.0990712047, 0.0, 0.0, 0.0], [0.252370387, 0.0, 0.0, 0.0], [-0.0305344649, 0.0, 0.0, 0.0], [-0.209672093, 0.0, 0.0, 0.0], [0.0067562093, 0.0, 0.0, 0.0], [0.167936489, 0.0, 0.0, 0.0], [-0.0677838624, 0.0, 0.0, 0.0], [-0.120639935, 0.0, 0.0, 0.0], [0.0819781423, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 9, 10, 25, 26, 27, 28, 12, 29, 30, 31, 32, 23, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 8, 4, 2, 5, 11, 19, 20, 6, 13, 21, 22, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_206(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.956499994, 1.0, 2.0, 4.0], [-0.958500028, 3.0, 4.0, 4.0], [-0.779500008, 5.0, 6.0, 1.0], [-0.424499989, 7.0, 8.0, 1.0], [-0.300130755, 0.0, 0.0, 0.0], [-0.216126114, 0.0, 0.0, 0.0], [0.550500035, 9.0, 10.0, 2.0], [0.461499989, 11.0, 12.0, 2.0], [-0.397499979, 13.0, 14.0, 1.0], [0.456499994, 15.0, 16.0, 2.0], [0.566499949, 17.0, 18.0, 2.0], [0.436500013, 19.0, 20.0, 2.0], [0.546499968, 21.0, 22.0, 2.0], [0.286432981, 0.0, 0.0, 0.0], [0.0164450258, 0.0, 0.0, 0.0], [-0.74000001, 23.0, 24.0, 1.0], [-0.466000021, 25.0, 26.0, 1.0], [-0.980499983, 27.0, 28.0, 3.0], [0.578500032, 29.0, 30.0, 2.0], [-0.00476891175, 0.0, 0.0, 0.0], [0.179515541, 0.0, 0.0, 0.0], [-0.218337432, 0.0, 0.0, 0.0], [0.00647542486, 0.0, 0.0, 0.0], [0.104412831, 0.0, 0.0, 0.0], [-0.164524853, 0.0, 0.0, 0.0], [0.199313864, 0.0, 0.0, 0.0], [-0.131208226, 0.0, 0.0, 0.0], [-0.336396337, 0.0, 0.0, 0.0], [-0.0244300626, 0.0, 0.0, 0.0], [0.227814421, 0.0, 0.0, 0.0], [0.00335259666, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 4, 5, 23, 24, 25, 26, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_207(xs):
    #Predicts Class 3
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [0.165937617, 0.0, 0.0, 0.0], [-0.259340554, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.556499958, 11.0, 12.0, 0.0], [0.561499953, 13.0, 14.0, 0.0], [0.164061695, 0.0, 0.0, 0.0], [0.620499969, 15.0, 16.0, 0.0], [0.549000025, 17.0, 18.0, 0.0], [0.224659368, 0.0, 0.0, 0.0], [-0.227293834, 0.0, 0.0, 0.0], [-0.0299527701, 0.0, 0.0, 0.0], [-0.22485809, 0.0, 0.0, 0.0], [0.621500015, 19.0, 20.0, 0.0], [0.000871213153, 0.0, 0.0, 0.0], [-0.259215772, 0.0, 0.0, 0.0], [0.137726054, 0.0, 0.0, 0.0], [-0.0559595339, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_208(xs):
    #Predicts Class 4
    function_dict = np.array([[0.203500003, 1.0, 2.0, 0.0], [0.195499986, 3.0, 4.0, 0.0], [-0.206930846, 0.0, 0.0, 0.0], [0.0506500006, 5.0, 6.0, 0.0], [0.184790537, 0.0, 0.0, 0.0], [0.0447499976, 7.0, 8.0, 0.0], [0.0694999993, 9.0, 10.0, 0.0], [0.0417999998, 11.0, 12.0, 0.0], [0.0477499999, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.074149996, 17.0, 18.0, 0.0], [0.00546792708, 0.0, 0.0, 0.0], [-0.501291752, 0.0, 0.0, 0.0], [0.13310723, 0.0, 0.0, 0.0], [0.401481807, 0.0, 0.0, 0.0], [-0.344335735, 0.0, 0.0, 0.0], [-0.0321824178, 0.0, 0.0, 0.0], [0.350651115, 0.0, 0.0, 0.0], [-0.0258438624, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_209(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [-0.159707785, 0.0, 0.0, 0.0], [0.259856135, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.556499958, 11.0, 12.0, 0.0], [0.561499953, 13.0, 14.0, 0.0], [-0.161524475, 0.0, 0.0, 0.0], [0.620499969, 15.0, 16.0, 0.0], [0.549000025, 17.0, 18.0, 0.0], [-0.223350257, 0.0, 0.0, 0.0], [0.228747085, 0.0, 0.0, 0.0], [0.0318186097, 0.0, 0.0, 0.0], [0.225699231, 0.0, 0.0, 0.0], [0.621500015, 19.0, 20.0, 0.0], [-0.0031467143, 0.0, 0.0, 0.0], [0.260308444, 0.0, 0.0, 0.0], [-0.136867538, 0.0, 0.0, 0.0], [0.0719336495, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_210(xs):
    #Predicts Class 0
    function_dict = np.array([[0.259499997, 1.0, 2.0, 2.0], [-0.1435, 3.0, 4.0, 0.0], [0.276499987, 5.0, 6.0, 2.0], [-0.179011464, 0.0, 0.0, 0.0], [-0.0481589772, 0.0, 0.0, 0.0], [0.18845211, 0.0, 0.0, 0.0], [-0.990499973, 7.0, 8.0, 3.0], [-0.862499952, 9.0, 10.0, 4.0], [-0.854499996, 11.0, 12.0, 4.0], [0.534500003, 13.0, 14.0, 2.0], [-0.592499971, 15.0, 16.0, 1.0], [-0.928499997, 17.0, 18.0, 4.0], [0.693500042, 19.0, 20.0, 2.0], [-0.0499945171, 0.0, 0.0, 0.0], [0.0643220097, 0.0, 0.0, 0.0], [-0.192738324, 0.0, 0.0, 0.0], [0.0308084227, 0.0, 0.0, 0.0], [0.0437351093, 0.0, 0.0, 0.0], [-0.0661223456, 0.0, 0.0, 0.0], [0.167841494, 0.0, 0.0, 0.0], [-0.0249302164, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 10, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_211(xs):
    #Predicts Class 1
    function_dict = np.array([[0.797500014, 1.0, 2.0, 2.0], [0.782500029, 3.0, 4.0, 2.0], [-0.146896377, 0.0, 0.0, 0.0], [-0.2755, 5.0, 6.0, 0.0], [0.198135078, 0.0, 0.0, 0.0], [-0.871500015, 7.0, 8.0, 4.0], [-0.887500048, 9.0, 10.0, 4.0], [-0.334500015, 11.0, 12.0, 0.0], [-0.771999955, 13.0, 14.0, 4.0], [-0.906499982, 15.0, 16.0, 4.0], [-0.613000035, 17.0, 18.0, 1.0], [-0.0546921454, 0.0, 0.0, 0.0], [0.128210813, 0.0, 0.0, 0.0], [-0.167582765, 0.0, 0.0, 0.0], [0.0144570908, 0.0, 0.0, 0.0], [-0.0160264764, 0.0, 0.0, 0.0], [-0.217129663, 0.0, 0.0, 0.0], [0.210505933, 0.0, 0.0, 0.0], [-0.258437365, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_212(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.509500027, 1.0, 2.0, 1.0], [-0.528499961, 3.0, 4.0, 1.0], [-0.470499992, 5.0, 6.0, 1.0], [-0.989500046, 7.0, 8.0, 3.0], [-0.237000003, 9.0, 10.0, 0.0], [-0.259499997, 11.0, 12.0, 0.0], [-0.461499989, 13.0, 14.0, 1.0], [0.594500005, 15.0, 16.0, 2.0], [-0.265500009, 17.0, 18.0, 0.0], [0.0242205765, 0.0, 0.0, 0.0], [-0.206, 19.0, 20.0, 0.0], [0.306543499, 0.0, 0.0, 0.0], [-0.484499991, 21.0, 22.0, 1.0], [-0.184209749, 0.0, 0.0, 0.0], [0.772500038, 23.0, 24.0, 2.0], [-0.138500005, 25.0, 26.0, 0.0], [-0.166500002, 27.0, 28.0, 0.0], [-0.244400784, 0.0, 0.0, 0.0], [-0.540500045, 29.0, 30.0, 1.0], [-0.336871147, 0.0, 0.0, 0.0], [-0.0282284915, 0.0, 0.0, 0.0], [-0.491999984, 31.0, 32.0, 1.0], [0.263640791, 0.0, 0.0, 0.0], [0.652500033, 33.0, 34.0, 2.0], [0.227893487, 0.0, 0.0, 0.0], [-0.0600967593, 0.0, 0.0, 0.0], [0.145285845, 0.0, 0.0, 0.0], [0.194077983, 0.0, 0.0, 0.0], [-0.0910957381, 0.0, 0.0, 0.0], [-0.0434430204, 0.0, 0.0, 0.0], [0.20323287, 0.0, 0.0, 0.0], [0.0939260721, 0.0, 0.0, 0.0], [-0.216700345, 0.0, 0.0, 0.0], [0.0602592677, 0.0, 0.0, 0.0], [-0.102400631, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 17, 29, 30, 9, 19, 20, 11, 31, 32, 22, 13, 33, 34, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 10, 2, 5, 12, 21, 6, 14, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_213(xs):
    #Predicts Class 3
    function_dict = np.array([[0.5625, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.585000038, 5.0, 6.0, 0.0], [0.541499972, 7.0, 8.0, 0.0], [0.216490671, 0.0, 0.0, 0.0], [0.565500021, 9.0, 10.0, 0.0], [0.616999984, 11.0, 12.0, 0.0], [0.534000039, 13.0, 14.0, 0.0], [0.543500006, 15.0, 16.0, 0.0], [-0.0666951016, 0.0, 0.0, 0.0], [-0.278446436, 0.0, 0.0, 0.0], [0.195585936, 0.0, 0.0, 0.0], [0.620499969, 17.0, 18.0, 0.0], [0.436500013, 19.0, 20.0, 0.0], [0.539999962, 21.0, 22.0, 0.0], [-0.275712788, 0.0, 0.0, 0.0], [0.549000025, 23.0, 24.0, 0.0], [-0.103477992, 0.0, 0.0, 0.0], [0.621500015, 25.0, 26.0, 0.0], [0.00170619949, 0.0, 0.0, 0.0], [-0.0369851738, 0.0, 0.0, 0.0], [0.214635581, 0.0, 0.0, 0.0], [0.0209678877, 0.0, 0.0, 0.0], [0.126258299, 0.0, 0.0, 0.0], [-0.0956452712, 0.0, 0.0, 0.0], [0.0799742416, 0.0, 0.0, 0.0], [-0.0297775064, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 23, 24, 4, 9, 10, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_214(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.992499948, 1.0, 2.0, 1.0], [-0.601000011, 3.0, 4.0, 2.0], [-0.104674987, 0.0, 0.0, 0.0], [-0.629000008, 5.0, 6.0, 2.0], [-0.0218000002, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.108950004, 11.0, 12.0, 0.0], [-0.436999977, 13.0, 14.0, 2.0], [-0.99849999, 15.0, 16.0, 1.0], [-0.706500053, 17.0, 18.0, 2.0], [-0.0414500013, 19.0, 20.0, 0.0], [-0.0086148819, 0.0, 0.0, 0.0], [-0.188739464, 0.0, 0.0, 0.0], [-0.99849999, 21.0, 22.0, 4.0], [-0.0451610349, 0.0, 0.0, 0.0], [0.0342316255, 0.0, 0.0, 0.0], [-0.0834551752, 0.0, 0.0, 0.0], [0.00165855512, 0.0, 0.0, 0.0], [0.215631038, 0.0, 0.0, 0.0], [-0.0895444378, 0.0, 0.0, 0.0], [0.0818863735, 0.0, 0.0, 0.0], [0.277801126, 0.0, 0.0, 0.0], [0.0313825496, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 12, 21, 22, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 4, 7, 13, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_215(xs):
    #Predicts Class 5
    function_dict = np.array([[0.5625, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.585000038, 5.0, 6.0, 0.0], [0.541499972, 7.0, 8.0, 0.0], [-0.21541965, 0.0, 0.0, 0.0], [0.565500021, 9.0, 10.0, 0.0], [0.616999984, 11.0, 12.0, 0.0], [0.534000039, 13.0, 14.0, 0.0], [0.543500006, 15.0, 16.0, 0.0], [0.0699932054, 0.0, 0.0, 0.0], [0.280216038, 0.0, 0.0, 0.0], [-0.193430781, 0.0, 0.0, 0.0], [0.620499969, 17.0, 18.0, 0.0], [-0.885499954, 19.0, 20.0, 2.0], [0.539999962, 21.0, 22.0, 0.0], [0.276918769, 0.0, 0.0, 0.0], [0.549000025, 23.0, 24.0, 0.0], [0.104817256, 0.0, 0.0, 0.0], [0.621500015, 25.0, 26.0, 0.0], [0.0119931577, 0.0, 0.0, 0.0], [-0.0523632579, 0.0, 0.0, 0.0], [-0.213286638, 0.0, 0.0, 0.0], [-0.0190806668, 0.0, 0.0, 0.0], [-0.122251585, 0.0, 0.0, 0.0], [0.0976890847, 0.0, 0.0, 0.0], [-0.0792280734, 0.0, 0.0, 0.0], [0.0436101407, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 23, 24, 4, 9, 10, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_216(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.560500026, 1.0, 2.0, 1.0], [0.50150001, 3.0, 4.0, 2.0], [0.720499992, 5.0, 6.0, 2.0], [-0.914999962, 7.0, 8.0, 4.0], [-0.74849999, 9.0, 10.0, 1.0], [-0.5255, 11.0, 12.0, 1.0], [-0.257499993, 13.0, 14.0, 0.0], [-0.965499997, 15.0, 16.0, 4.0], [-0.805500031, 17.0, 18.0, 1.0], [-0.317499995, 19.0, 20.0, 0.0], [-0.737499952, 21.0, 22.0, 1.0], [-0.230623528, 0.0, 0.0, 0.0], [-0.513499975, 23.0, 24.0, 1.0], [-0.234693676, 0.0, 0.0, 0.0], [-0.208999991, 25.0, 26.0, 0.0], [-0.968500018, 27.0, 28.0, 4.0], [-0.957499981, 29.0, 30.0, 4.0], [-0.201065212, 0.0, 0.0, 0.0], [0.414000005, 31.0, 32.0, 2.0], [-0.803499997, 33.0, 34.0, 1.0], [0.596000016, 35.0, 36.0, 2.0], [-0.949499965, 37.0, 38.0, 4.0], [0.509500027, 39.0, 40.0, 2.0], [0.215481356, 0.0, 0.0, 0.0], [-0.825999975, 41.0, 42.0, 4.0], [0.732499957, 43.0, 44.0, 2.0], [-0.163500011, 45.0, 46.0, 0.0], [-0.025068799, 0.0, 0.0, 0.0], [0.266940385, 0.0, 0.0, 0.0], [-0.262423009, 0.0, 0.0, 0.0], [-0.0475003645, 0.0, 0.0, 0.0], [0.0786270127, 0.0, 0.0, 0.0], [0.286242366, 0.0, 0.0, 0.0], [0.0325873755, 0.0, 0.0, 0.0], [-0.211731881, 0.0, 0.0, 0.0], [0.241850823, 0.0, 0.0, 0.0], [0.0344166346, 0.0, 0.0, 0.0], [0.0291879103, 0.0, 0.0, 0.0], [-0.21765098, 0.0, 0.0, 0.0], [0.228419885, 0.0, 0.0, 0.0], [0.0109867146, 0.0, 0.0, 0.0], [-0.274662942, 0.0, 0.0, 0.0], [-0.0292200204, 0.0, 0.0, 0.0], [0.252161801, 0.0, 0.0, 0.0], [0.0684562474, 0.0, 0.0, 0.0], [-0.0931249335, 0.0, 0.0, 0.0], [0.0908692479, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 11, 23, 41, 42, 13, 43, 44, 45, 46])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 9, 19, 20, 10, 21, 22, 2, 5, 12, 24, 6, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_217(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.375499994, 1.0, 2.0, 0.0], [0.156979457, 0.0, 0.0, 0.0], [-0.997500002, 3.0, 4.0, 3.0], [-0.654500008, 5.0, 6.0, 1.0], [-0.996500015, 7.0, 8.0, 3.0], [0.466499984, 9.0, 10.0, 2.0], [-0.467999995, 11.0, 12.0, 1.0], [0.565500021, 13.0, 14.0, 2.0], [-0.723500013, 15.0, 16.0, 1.0], [-0.756000042, 17.0, 18.0, 1.0], [-0.283500016, 19.0, 20.0, 0.0], [-0.927000046, 21.0, 22.0, 4.0], [-0.940999985, 23.0, 24.0, 4.0], [0.445500016, 25.0, 26.0, 2.0], [-0.190295741, 0.0, 0.0, 0.0], [-0.993499994, 27.0, 28.0, 3.0], [-0.957499981, 29.0, 30.0, 4.0], [-0.0648960769, 0.0, 0.0, 0.0], [0.162109658, 0.0, 0.0, 0.0], [0.0509178601, 0.0, 0.0, 0.0], [-0.226998985, 0.0, 0.0, 0.0], [0.238939777, 0.0, 0.0, 0.0], [-0.111904301, 0.0, 0.0, 0.0], [-0.170422196, 0.0, 0.0, 0.0], [-0.0369552523, 0.0, 0.0, 0.0], [-0.000567823707, 0.0, 0.0, 0.0], [0.30157578, 0.0, 0.0, 0.0], [-0.164027587, 0.0, 0.0, 0.0], [0.00277557923, 0.0, 0.0, 0.0], [0.112995587, 0.0, 0.0, 0.0], [-0.0155990329, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 14, 27, 28, 29, 30])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_218(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.514999986, 3.0, 4.0, 1.0], [-0.4745, 5.0, 6.0, 1.0], [-0.999500036, 7.0, 8.0, 3.0], [-0.21746558, 0.0, 0.0, 0.0], [-0.210500002, 9.0, 10.0, 0.0], [-0.993499994, 11.0, 12.0, 3.0], [-0.16049999, 13.0, 14.0, 0.0], [0.736500025, 15.0, 16.0, 2.0], [0.717499971, 17.0, 18.0, 2.0], [-0.054891523, 0.0, 0.0, 0.0], [-0.2315, 19.0, 20.0, 0.0], [-0.983500004, 21.0, 22.0, 3.0], [-0.243376508, 0.0, 0.0, 0.0], [0.0458754897, 0.0, 0.0, 0.0], [-0.145500004, 23.0, 24.0, 0.0], [-0.142499998, 25.0, 26.0, 0.0], [0.269605786, 0.0, 0.0, 0.0], [0.0241688322, 0.0, 0.0, 0.0], [-0.409500003, 27.0, 28.0, 1.0], [0.258104146, 0.0, 0.0, 0.0], [-0.215499997, 29.0, 30.0, 0.0], [-0.455500007, 31.0, 32.0, 1.0], [0.0414553955, 0.0, 0.0, 0.0], [-0.0752069801, 0.0, 0.0, 0.0], [-0.190143421, 0.0, 0.0, 0.0], [0.15776886, 0.0, 0.0, 0.0], [-0.10313084, 0.0, 0.0, 0.0], [0.0584527589, 0.0, 0.0, 0.0], [-0.235023096, 0.0, 0.0, 0.0], [-0.00727971597, 0.0, 0.0, 0.0], [-0.125889063, 0.0, 0.0, 0.0], [0.0643564165, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 23, 24, 25, 26, 4, 17, 18, 10, 27, 28, 20, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 16, 2, 5, 9, 6, 11, 19, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_219(xs):
    #Predicts Class 3
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [0.557999969, 7.0, 8.0, 0.0], [0.160207376, 0.0, 0.0, 0.0], [0.615499973, 9.0, 10.0, 0.0], [-0.275672376, 0.0, 0.0, 0.0], [0.547500014, 11.0, 12.0, 0.0], [-0.124544188, 0.0, 0.0, 0.0], [-0.217507169, 0.0, 0.0, 0.0], [0.618499994, 13.0, 14.0, 0.0], [0.541499972, 15.0, 16.0, 0.0], [0.55250001, 17.0, 18.0, 0.0], [0.189790681, 0.0, 0.0, 0.0], [0.0387003645, 0.0, 0.0, 0.0], [0.00109356036, 0.0, 0.0, 0.0], [-0.196175694, 0.0, 0.0, 0.0], [0.212215647, 0.0, 0.0, 0.0], [0.0615740232, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 9, 13, 14, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 5, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_220(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.194499999, 3.0, 4.0, 0.0], [0.109177828, 0.0, 0.0, 0.0], [0.193500012, 5.0, 6.0, 0.0], [-0.12005239, 0.0, 0.0, 0.0], [0.157999992, 7.0, 8.0, 0.0], [0.191743657, 0.0, 0.0, 0.0], [0.1105, 9.0, 10.0, 0.0], [0.187999994, 11.0, 12.0, 0.0], [-0.000588349998, 0.0, 0.0, 0.0], [0.199867263, 0.0, 0.0, 0.0], [-0.23305741, 0.0, 0.0, 0.0], [-0.0143794166, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_221(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [0.528499961, 7.0, 8.0, 0.0], [-0.154916316, 0.0, 0.0, 0.0], [0.615499973, 9.0, 10.0, 0.0], [0.276364148, 0.0, 0.0, 0.0], [0.521499991, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.218014866, 0.0, 0.0, 0.0], [0.618499994, 15.0, 16.0, 0.0], [0.513000011, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.547500014, 21.0, 22.0, 0.0], [-0.281079859, 0.0, 0.0, 0.0], [-0.187814459, 0.0, 0.0, 0.0], [-0.0283161085, 0.0, 0.0, 0.0], [-0.00508411368, 0.0, 0.0, 0.0], [0.29407382, 0.0, 0.0, 0.0], [-0.0856345519, 0.0, 0.0, 0.0], [-0.283202261, 0.0, 0.0, 0.0], [0.214512542, 0.0, 0.0, 0.0], [-0.0321456678, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 14, 4, 9, 15, 16, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 2, 5, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_222(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.984500051, 1.0, 2.0, 4.0], [-0.143185392, 0.0, 0.0, 0.0], [-0.722499967, 3.0, 4.0, 1.0], [-0.726500034, 5.0, 6.0, 1.0], [-0.71449995, 7.0, 8.0, 1.0], [-0.260500014, 9.0, 10.0, 0.0], [0.23025772, 0.0, 0.0, 0.0], [-0.25673607, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 3.0], [-0.281499982, 13.0, 14.0, 0.0], [-0.99849999, 15.0, 16.0, 3.0], [0.564999998, 17.0, 18.0, 2.0], [-0.657500029, 19.0, 20.0, 1.0], [0.00551650766, 0.0, 0.0, 0.0], [0.241904631, 0.0, 0.0, 0.0], [0.12851049, 0.0, 0.0, 0.0], [-0.0436499342, 0.0, 0.0, 0.0], [-0.21420446, 0.0, 0.0, 0.0], [-0.0520261861, 0.0, 0.0, 0.0], [0.0475670733, 0.0, 0.0, 0.0], [-0.0279562958, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 7, 17, 18, 19, 20])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_223(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.874000013, 1.0, 2.0, 1.0], [-0.138514519, 0.0, 0.0, 0.0], [-0.374500006, 3.0, 4.0, 0.0], [0.140230358, 0.0, 0.0, 0.0], [-0.95449996, 5.0, 6.0, 3.0], [-0.334500015, 7.0, 8.0, 0.0], [-0.221500009, 9.0, 10.0, 0.0], [-0.341499984, 11.0, 12.0, 0.0], [-0.315500021, 13.0, 14.0, 0.0], [-0.277500004, 15.0, 16.0, 0.0], [-0.55400002, 17.0, 18.0, 1.0], [0.00103351055, 0.0, 0.0, 0.0], [-0.270083517, 0.0, 0.0, 0.0], [0.156226963, 0.0, 0.0, 0.0], [-0.00839403458, 0.0, 0.0, 0.0], [0.000268500648, 0.0, 0.0, 0.0], [0.221193865, 0.0, 0.0, 0.0], [-0.197627187, 0.0, 0.0, 0.0], [0.0861559883, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 11, 12, 13, 14, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 4, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_224(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.179500014, 3.0, 4.0, 0.0], [0.483500004, 5.0, 6.0, 2.0], [0.423500001, 7.0, 8.0, 2.0], [-0.202739745, 0.0, 0.0, 0.0], [0.455500007, 9.0, 10.0, 2.0], [0.513499975, 11.0, 12.0, 2.0], [-0.131625041, 0.0, 0.0, 0.0], [0.443499982, 13.0, 14.0, 2.0], [0.414499998, 15.0, 16.0, 2.0], [-0.730499983, 17.0, 18.0, 1.0], [-0.138999999, 19.0, 20.0, 0.0], [-0.210500002, 21.0, 22.0, 0.0], [0.187974766, 0.0, 0.0, 0.0], [-0.799499989, 23.0, 24.0, 1.0], [-0.217000008, 25.0, 26.0, 0.0], [-0.1505, 27.0, 28.0, 0.0], [-0.028649101, 0.0, 0.0, 0.0], [-0.959499955, 29.0, 30.0, 4.0], [-0.258593798, 0.0, 0.0, 0.0], [-0.0104785804, 0.0, 0.0, 0.0], [-0.661000013, 31.0, 32.0, 1.0], [-0.180500001, 33.0, 34.0, 0.0], [-0.222430006, 0.0, 0.0, 0.0], [0.125430793, 0.0, 0.0, 0.0], [0.160021171, 0.0, 0.0, 0.0], [-0.00843447261, 0.0, 0.0, 0.0], [-0.203916073, 0.0, 0.0, 0.0], [0.0340856425, 0.0, 0.0, 0.0], [0.0835627094, 0.0, 0.0, 0.0], [0.274127007, 0.0, 0.0, 0.0], [-0.238805249, 0.0, 0.0, 0.0], [0.00969977956, 0.0, 0.0, 0.0], [0.10697753, 0.0, 0.0, 0.0], [-0.0102652004, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 23, 24, 4, 25, 26, 27, 28, 17, 29, 30, 19, 20, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 8, 14, 2, 5, 9, 15, 16, 10, 18, 6, 11, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_225(xs):
    #Predicts Class 3
    function_dict = np.array([[0.5625, 1.0, 2.0, 0.0], [0.503000021, 3.0, 4.0, 0.0], [0.585000038, 5.0, 6.0, 0.0], [0.489499986, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.565500021, 11.0, 12.0, 0.0], [0.616999984, 13.0, 14.0, 0.0], [0.479499996, 15.0, 16.0, 0.0], [-0.329690397, 0.0, 0.0, 0.0], [0.513000011, 17.0, 18.0, 0.0], [0.279530734, 0.0, 0.0, 0.0], [-0.074372828, 0.0, 0.0, 0.0], [-0.252578527, 0.0, 0.0, 0.0], [0.140405491, 0.0, 0.0, 0.0], [0.620499969, 19.0, 20.0, 0.0], [0.466499984, 21.0, 22.0, 0.0], [0.17482917, 0.0, 0.0, 0.0], [0.506000042, 23.0, 24.0, 0.0], [0.521499991, 25.0, 26.0, 0.0], [-0.0941529274, 0.0, 0.0, 0.0], [0.0427731834, 0.0, 0.0, 0.0], [0.00081650092, 0.0, 0.0, 0.0], [-0.296615154, 0.0, 0.0, 0.0], [0.0662477091, 0.0, 0.0, 0.0], [0.252192229, 0.0, 0.0, 0.0], [-0.255628705, 0.0, 0.0, 0.0], [0.00810921472, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 8, 23, 24, 25, 26, 10, 11, 12, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 17, 18, 2, 5, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_226(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0560500026, 1.0, 2.0, 0.0], [0.0353999995, 3.0, 4.0, 0.0], [0.0694999993, 5.0, 6.0, 0.0], [0.0293500014, 7.0, 8.0, 0.0], [0.0417999998, 9.0, 10.0, 0.0], [-0.267005801, 0.0, 0.0, 0.0], [0.0760499984, 11.0, 12.0, 0.0], [0.02795, 13.0, 14.0, 0.0], [-0.387334943, 0.0, 0.0, 0.0], [0.477425039, 0.0, 0.0, 0.0], [0.0447499976, 15.0, 16.0, 0.0], [0.0740500018, 17.0, 18.0, 0.0], [0.0825999975, 19.0, 20.0, 0.0], [0.02685, 21.0, 22.0, 0.0], [0.396671027, 0.0, 0.0, 0.0], [-0.40469721, 0.0, 0.0, 0.0], [0.0476500019, 23.0, 24.0, 0.0], [0.0169501845, 0.0, 0.0, 0.0], [0.258140564, 0.0, 0.0, 0.0], [0.0776499957, 25.0, 26.0, 0.0], [0.0854000002, 27.0, 28.0, 0.0], [0.00289273029, 0.0, 0.0, 0.0], [-0.293153912, 0.0, 0.0, 0.0], [0.342814177, 0.0, 0.0, 0.0], [0.091759257, 0.0, 0.0, 0.0], [0.0331226513, 0.0, 0.0, 0.0], [-0.306869507, 0.0, 0.0, 0.0], [0.168742701, 0.0, 0.0, 0.0], [-0.0161385648, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 9, 15, 23, 24, 5, 17, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 16, 2, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_227(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.972000003, 1.0, 2.0, 2.0], [0.534000039, 3.0, 4.0, 0.0], [0.541999996, 5.0, 6.0, 0.0], [0.513000011, 7.0, 8.0, 0.0], [0.539999962, 9.0, 10.0, 0.0], [0.521499991, 11.0, 12.0, 0.0], [0.288982004, 0.0, 0.0, 0.0], [0.506000042, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.225472167, 0.0, 0.0, 0.0], [0.543500006, 17.0, 18.0, 0.0], [-0.080400005, 19.0, 20.0, 0.0], [-0.174737811, 0.0, 0.0, 0.0], [0.49000001, 21.0, 22.0, 0.0], [-0.282905877, 0.0, 0.0, 0.0], [0.522500038, 23.0, 24.0, 0.0], [-0.06505429, 0.0, 0.0, 0.0], [0.0995336473, 0.0, 0.0, 0.0], [0.5625, 25.0, 26.0, 0.0], [-0.193500012, 27.0, 28.0, 0.0], [-0.0742499977, 29.0, 30.0, 0.0], [-0.00769721577, 0.0, 0.0, 0.0], [0.134523943, 0.0, 0.0, 0.0], [0.0909907892, 0.0, 0.0, 0.0], [0.30068922, 0.0, 0.0, 0.0], [-0.129662588, 0.0, 0.0, 0.0], [0.0115796095, 0.0, 0.0, 0.0], [-0.000700915523, 0.0, 0.0, 0.0], [-0.272885859, 0.0, 0.0, 0.0], [0.392229915, 0.0, 0.0, 0.0], [0.000722860394, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 16, 9, 17, 25, 26, 27, 28, 29, 30, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 10, 18, 2, 5, 11, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_228(xs):
    #Predicts Class 0
    function_dict = np.array([[0.259499997, 1.0, 2.0, 2.0], [-0.132952467, 0.0, 0.0, 0.0], [-0.827499986, 3.0, 4.0, 1.0], [-0.96449995, 5.0, 6.0, 4.0], [-0.315500021, 7.0, 8.0, 0.0], [-0.182500005, 9.0, 10.0, 0.0], [-0.92900002, 11.0, 12.0, 4.0], [-0.334500015, 13.0, 14.0, 0.0], [0.414499998, 15.0, 16.0, 2.0], [0.103946306, 0.0, 0.0, 0.0], [-0.131999999, 17.0, 18.0, 0.0], [0.517500043, 19.0, 20.0, 2.0], [-0.00437493343, 0.0, 0.0, 0.0], [-0.870000005, 21.0, 22.0, 4.0], [-0.978500009, 23.0, 24.0, 3.0], [0.277500004, 25.0, 26.0, 2.0], [0.430500001, 27.0, 28.0, 2.0], [-0.205488846, 0.0, 0.0, 0.0], [0.0631287768, 0.0, 0.0, 0.0], [0.262412041, 0.0, 0.0, 0.0], [0.0630880594, 0.0, 0.0, 0.0], [0.0635469258, 0.0, 0.0, 0.0], [-0.178480774, 0.0, 0.0, 0.0], [-0.300314188, 0.0, 0.0, 0.0], [0.0062661143, 0.0, 0.0, 0.0], [0.139630049, 0.0, 0.0, 0.0], [-0.089160122, 0.0, 0.0, 0.0], [0.193589061, 0.0, 0.0, 0.0], [0.00535052316, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 17, 18, 19, 20, 12, 21, 22, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 2, 3, 5, 10, 6, 11, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_229(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.827499986, 1.0, 2.0, 1.0], [-0.96449995, 3.0, 4.0, 4.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.847000003, 7.0, 8.0, 1.0], [-0.92900002, 9.0, 10.0, 4.0], [-0.365500003, 11.0, 12.0, 1.0], [-0.308499992, 13.0, 14.0, 0.0], [-0.973500013, 15.0, 16.0, 4.0], [0.131402791, 0.0, 0.0, 0.0], [0.517500043, 17.0, 18.0, 2.0], [0.0140470862, 0.0, 0.0, 0.0], [-0.332499981, 19.0, 20.0, 0.0], [-0.181953818, 0.0, 0.0, 0.0], [-0.15732047, 0.0, 0.0, 0.0], [-0.9745, 21.0, 22.0, 3.0], [-0.125776663, 0.0, 0.0, 0.0], [0.0664928257, 0.0, 0.0, 0.0], [-0.253327847, 0.0, 0.0, 0.0], [-0.0590405762, 0.0, 0.0, 0.0], [-0.93900001, 23.0, 24.0, 3.0], [-0.877499998, 25.0, 26.0, 4.0], [-0.963500023, 27.0, 28.0, 4.0], [0.467500001, 29.0, 30.0, 2.0], [-0.0118931634, 0.0, 0.0, 0.0], [0.223514259, 0.0, 0.0, 0.0], [0.26820761, 0.0, 0.0, 0.0], [-0.0277503077, 0.0, 0.0, 0.0], [-0.0354835428, 0.0, 0.0, 0.0], [0.0580425002, 0.0, 0.0, 0.0], [0.0701794252, 0.0, 0.0, 0.0], [-0.104577042, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 17, 18, 10, 23, 24, 25, 26, 12, 13, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 2, 5, 11, 19, 20, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_230(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.986500025, 1.0, 2.0, 4.0], [-0.139225617, 0.0, 0.0, 0.0], [-0.9745, 3.0, 4.0, 4.0], [-0.219500005, 5.0, 6.0, 0.0], [0.334500015, 7.0, 8.0, 2.0], [-0.127904207, 0.0, 0.0, 0.0], [0.624500036, 9.0, 10.0, 2.0], [-0.221280813, 0.0, 0.0, 0.0], [0.41049999, 11.0, 12.0, 2.0], [-0.975499988, 13.0, 14.0, 3.0], [-0.0997784212, 0.0, 0.0, 0.0], [-0.227499992, 15.0, 16.0, 0.0], [0.436500013, 17.0, 18.0, 2.0], [0.201431841, 0.0, 0.0, 0.0], [0.00343730277, 0.0, 0.0, 0.0], [0.203531042, 0.0, 0.0, 0.0], [-0.0287208278, 0.0, 0.0, 0.0], [-0.246631309, 0.0, 0.0, 0.0], [-0.00203453051, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 13, 14, 10, 7, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 3, 6, 9, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_231(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.274500012, 3.0, 4.0, 0.0], [-0.0878043696, 0.0, 0.0, 0.0], [-0.282999992, 5.0, 6.0, 0.0], [-0.269500017, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.269063383, 0.0, 0.0, 0.0], [0.284529269, 0.0, 0.0, 0.0], [-0.212500006, 11.0, 12.0, 0.0], [-0.284500003, 13.0, 14.0, 0.0], [-0.367000014, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [-0.2095, 19.0, 20.0, 0.0], [0.0216841605, 0.0, 0.0, 0.0], [0.146965787, 0.0, 0.0, 0.0], [-0.0238298308, 0.0, 0.0, 0.0], [-0.175319016, 0.0, 0.0, 0.0], [-0.273134202, 0.0, 0.0, 0.0], [0.087770313, 0.0, 0.0, 0.0], [0.272044867, 0.0, 0.0, 0.0], [-0.00018564763, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 7, 17, 18, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_232(xs):
    #Predicts Class 4
    function_dict = np.array([[0.152999997, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.192499995, 5.0, 6.0, 0.0], [0.107500002, 7.0, 8.0, 0.0], [-0.26721406, 0.0, 0.0, 0.0], [0.224630848, 0.0, 0.0, 0.0], [0.202500001, 9.0, 10.0, 0.0], [0.0945499986, 11.0, 12.0, 0.0], [0.25519076, 0.0, 0.0, 0.0], [0.194499999, 13.0, 14.0, 0.0], [0.0871897265, 0.0, 0.0, 0.0], [0.0850500017, 15.0, 16.0, 0.0], [-0.173018292, 0.0, 0.0, 0.0], [-0.00405150931, 0.0, 0.0, 0.0], [-0.0875774249, 0.0, 0.0, 0.0], [-0.00182593253, 0.0, 0.0, 0.0], [0.055056598, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 13, 14, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_233(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.503000021, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.466499984, 7.0, 8.0, 0.0], [0.509500027, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [0.463499993, 15.0, 16.0, 0.0], [0.479499996, 17.0, 18.0, 0.0], [-0.164447829, 0.0, 0.0, 0.0], [0.521499991, 19.0, 20.0, 0.0], [0.09042456, 0.0, 0.0, 0.0], [0.588, 21.0, 22.0, 0.0], [0.294978529, 0.0, 0.0, 0.0], [0.0856299326, 0.0, 0.0, 0.0], [0.455500007, 23.0, 24.0, 0.0], [-0.164004996, 0.0, 0.0, 0.0], [0.254332453, 0.0, 0.0, 0.0], [0.0540347621, 0.0, 0.0, 0.0], [0.182554752, 0.0, 0.0, 0.0], [0.522500038, 25.0, 26.0, 0.0], [0.564499974, 27.0, 28.0, 0.0], [0.616999984, 29.0, 30.0, 0.0], [-0.00333593483, 0.0, 0.0, 0.0], [0.21201472, 0.0, 0.0, 0.0], [-0.224258006, 0.0, 0.0, 0.0], [-0.043124076, 0.0, 0.0, 0.0], [-0.0171108283, 0.0, 0.0, 0.0], [-0.207315072, 0.0, 0.0, 0.0], [0.226278737, 0.0, 0.0, 0.0], [-0.0609121658, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 17, 18, 9, 19, 25, 26, 11, 27, 28, 29, 30, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 20, 2, 5, 12, 21, 22, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_234(xs):
    #Predicts Class 0
    function_dict = np.array([[0.576499999, 1.0, 2.0, 2.0], [-0.700500011, 3.0, 4.0, 1.0], [-0.615499973, 5.0, 6.0, 1.0], [0.554499984, 7.0, 8.0, 2.0], [-0.972499967, 9.0, 10.0, 3.0], [-0.941499949, 11.0, 12.0, 4.0], [-0.597499967, 13.0, 14.0, 1.0], [0.50150001, 15.0, 16.0, 2.0], [-0.2315, 17.0, 18.0, 0.0], [-0.266000003, 19.0, 20.0, 0.0], [0.452499986, 21.0, 22.0, 2.0], [-0.975499988, 23.0, 24.0, 4.0], [-0.92050004, 25.0, 26.0, 4.0], [-0.60650003, 27.0, 28.0, 1.0], [-0.556499958, 29.0, 30.0, 1.0], [0.479499996, 31.0, 32.0, 2.0], [-0.905499995, 33.0, 34.0, 4.0], [-0.985499978, 35.0, 36.0, 3.0], [-0.225984275, 0.0, 0.0, 0.0], [0.128960758, 0.0, 0.0, 0.0], [-0.647500038, 37.0, 38.0, 1.0], [-0.684499979, 39.0, 40.0, 1.0], [-0.645500004, 41.0, 42.0, 1.0], [0.202145606, 0.0, 0.0, 0.0], [-0.70599997, 43.0, 44.0, 1.0], [0.283354431, 0.0, 0.0, 0.0], [-0.907500029, 45.0, 46.0, 4.0], [-0.0272848699, 0.0, 0.0, 0.0], [-0.295039058, 0.0, 0.0, 0.0], [0.789999962, 47.0, 48.0, 2.0], [-0.824499965, 49.0, 50.0, 4.0], [0.0239452589, 0.0, 0.0, 0.0], [-0.170929775, 0.0, 0.0, 0.0], [0.197549105, 0.0, 0.0, 0.0], [-0.126622736, 0.0, 0.0, 0.0], [0.232914522, 0.0, 0.0, 0.0], [-0.177605554, 0.0, 0.0, 0.0], [-0.302703142, 0.0, 0.0, 0.0], [-0.00132977031, 0.0, 0.0, 0.0], [-0.000403543905, 0.0, 0.0, 0.0], [-0.182439893, 0.0, 0.0, 0.0], [0.282440543, 0.0, 0.0, 0.0], [0.00256116316, 0.0, 0.0, 0.0], [-0.179122448, 0.0, 0.0, 0.0], [0.0241748039, 0.0, 0.0, 0.0], [-0.111315511, 0.0, 0.0, 0.0], [0.110396907, 0.0, 0.0, 0.0], [0.161492944, 0.0, 0.0, 0.0], [-0.0540056191, 0.0, 0.0, 0.0], [-0.130115882, 0.0, 0.0, 0.0], [0.0375844985, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([31, 32, 33, 34, 35, 36, 18, 19, 37, 38, 39, 40, 41, 42, 23, 43, 44, 25, 45, 46, 27, 28, 47, 48, 49, 50])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 20, 10, 21, 22, 2, 5, 11, 24, 12, 26, 6, 13, 14, 29, 30])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_235(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.138500005, 1.0, 2.0, 0.0], [-0.141499996, 3.0, 4.0, 0.0], [0.0463999994, 5.0, 6.0, 0.0], [0.407499999, 7.0, 8.0, 2.0], [0.200138971, 0.0, 0.0, 0.0], [-0.107500002, 9.0, 10.0, 0.0], [0.0979499966, 11.0, 12.0, 0.0], [0.3935, 13.0, 14.0, 2.0], [-0.169499993, 15.0, 16.0, 0.0], [-0.113499999, 17.0, 18.0, 0.0], [-0.266373158, 0.0, 0.0, 0.0], [0.178517878, 0.0, 0.0, 0.0], [-0.035432905, 0.0, 0.0, 0.0], [0.386500001, 19.0, 20.0, 2.0], [0.21420759, 0.0, 0.0, 0.0], [-0.654500008, 21.0, 22.0, 1.0], [-0.203236163, 0.0, 0.0, 0.0], [-0.147382647, 0.0, 0.0, 0.0], [0.0680950657, 0.0, 0.0, 0.0], [0.0483081117, 0.0, 0.0, 0.0], [-0.149404228, 0.0, 0.0, 0.0], [-0.0246579088, 0.0, 0.0, 0.0], [0.0377816036, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 21, 22, 16, 4, 17, 18, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 2, 5, 9, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_236(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.179500014, 3.0, 4.0, 0.0], [0.578500032, 5.0, 6.0, 2.0], [-0.798500001, 7.0, 8.0, 1.0], [-0.170271993, 0.0, 0.0, 0.0], [-0.994500041, 9.0, 10.0, 3.0], [0.603500009, 11.0, 12.0, 2.0], [0.443499982, 13.0, 14.0, 2.0], [-0.132978842, 0.0, 0.0, 0.0], [-0.240500003, 15.0, 16.0, 0.0], [-0.925500035, 17.0, 18.0, 4.0], [-0.990499973, 19.0, 20.0, 3.0], [-0.996500015, 21.0, 22.0, 3.0], [0.122658983, 0.0, 0.0, 0.0], [-0.0878961682, 0.0, 0.0, 0.0], [-0.244000003, 23.0, 24.0, 0.0], [-0.139499992, 25.0, 26.0, 0.0], [-0.956499994, 27.0, 28.0, 4.0], [-0.904500008, 29.0, 30.0, 4.0], [-0.99849999, 31.0, 32.0, 3.0], [-0.526000023, 33.0, 34.0, 1.0], [-0.566499949, 35.0, 36.0, 1.0], [-0.983500004, 37.0, 38.0, 3.0], [-0.0159845073, 0.0, 0.0, 0.0], [0.263188899, 0.0, 0.0, 0.0], [-0.14145489, 0.0, 0.0, 0.0], [0.0847300589, 0.0, 0.0, 0.0], [-0.0067489692, 0.0, 0.0, 0.0], [0.236138478, 0.0, 0.0, 0.0], [-0.144741654, 0.0, 0.0, 0.0], [0.0845371336, 0.0, 0.0, 0.0], [-0.206574664, 0.0, 0.0, 0.0], [0.108249597, 0.0, 0.0, 0.0], [-0.278681368, 0.0, 0.0, 0.0], [-0.0735555589, 0.0, 0.0, 0.0], [0.17806454, 0.0, 0.0, 0.0], [-0.0154163465, 0.0, 0.0, 0.0], [-0.0959133878, 0.0, 0.0, 0.0], [0.0193836354, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 9, 15, 16, 10, 17, 18, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_237(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.111500002, 1.0, 2.0, 0.0], [-0.115500003, 3.0, 4.0, 0.0], [-0.0965999961, 5.0, 6.0, 0.0], [-0.1175, 7.0, 8.0, 0.0], [-0.280923277, 0.0, 0.0, 0.0], [-0.0974999964, 9.0, 10.0, 0.0], [-0.0922500044, 11.0, 12.0, 0.0], [-0.129500002, 13.0, 14.0, 0.0], [0.23652555, 0.0, 0.0, 0.0], [-0.0987499952, 15.0, 16.0, 0.0], [0.506465673, 0.0, 0.0, 0.0], [-0.307613403, 0.0, 0.0, 0.0], [-0.0913500041, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.127499998, 21.0, 22.0, 0.0], [-0.104499996, 23.0, 24.0, 0.0], [-0.315735281, 0.0, 0.0, 0.0], [0.350151956, 0.0, 0.0, 0.0], [-0.0801500008, 25.0, 26.0, 0.0], [-0.0305013005, 0.0, 0.0, 0.0], [0.113391116, 0.0, 0.0, 0.0], [-0.337290376, 0.0, 0.0, 0.0], [-0.0322879106, 0.0, 0.0, 0.0], [0.035519477, 0.0, 0.0, 0.0], [0.179413229, 0.0, 0.0, 0.0], [-0.165729091, 0.0, 0.0, 0.0], [0.00427016709, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 23, 24, 16, 10, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_238(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00588999968, 1.0, 2.0, 0.0], [0.00325499987, 3.0, 4.0, 0.0], [0.00758500025, 5.0, 6.0, 0.0], [0.00146499998, 7.0, 8.0, 0.0], [0.0042849998, 9.0, 10.0, 0.0], [0.00655000005, 11.0, 12.0, 0.0], [0.0079549998, 13.0, 14.0, 0.0], [0.000549999997, 15.0, 16.0, 0.0], [0.00202000001, 17.0, 18.0, 0.0], [0.465984732, 0.0, 0.0, 0.0], [0.0790821761, 0.0, 0.0, 0.0], [-0.0909721255, 0.0, 0.0, 0.0], [-0.360660195, 0.0, 0.0, 0.0], [0.21975708, 0.0, 0.0, 0.0], [0.00974999927, 19.0, 20.0, 0.0], [-0.000834999955, 21.0, 22.0, 0.0], [0.457211286, 0.0, 0.0, 0.0], [-0.0816296116, 0.0, 0.0, 0.0], [-0.289457947, 0.0, 0.0, 0.0], [-0.229336113, 0.0, 0.0, 0.0], [0.0103500001, 23.0, 24.0, 0.0], [0.00317871827, 0.0, 0.0, 0.0], [-0.276486218, 0.0, 0.0, 0.0], [0.34093979, 0.0, 0.0, 0.0], [-0.0115947174, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 17, 18, 9, 10, 11, 12, 13, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 2, 5, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_239(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.265500009, 5.0, 6.0, 0.0], [0.253499985, 7.0, 8.0, 0.0], [-0.205077231, 0.0, 0.0, 0.0], [0.403055966, 0.0, 0.0, 0.0], [0.272000015, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [0.162458315, 0.0, 0.0, 0.0], [-0.202045932, 0.0, 0.0, 0.0], [0.282499999, 13.0, 14.0, 0.0], [0.201499999, 15.0, 16.0, 0.0], [-0.2539922, 0.0, 0.0, 0.0], [0.2755, 17.0, 18.0, 0.0], [0.341000021, 19.0, 20.0, 0.0], [-0.0128057776, 0.0, 0.0, 0.0], [0.0693254769, 0.0, 0.0, 0.0], [0.0386212766, 0.0, 0.0, 0.0], [0.230551124, 0.0, 0.0, 0.0], [-0.211712524, 0.0, 0.0, 0.0], [0.00958456937, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_240(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.213499993, 1.0, 2.0, 0.0], [-0.938500047, 3.0, 4.0, 4.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.656499982, 7.0, 8.0, 1.0], [-0.215499997, 9.0, 10.0, 0.0], [0.330382437, 0.0, 0.0, 0.0], [-0.82949996, 11.0, 12.0, 4.0], [-0.994500041, 13.0, 14.0, 3.0], [-0.286675394, 0.0, 0.0, 0.0], [-0.729499996, 15.0, 16.0, 1.0], [-0.212576374, 0.0, 0.0, 0.0], [-0.805500031, 17.0, 18.0, 1.0], [-0.773499966, 19.0, 20.0, 4.0], [0.532000005, 21.0, 22.0, 2.0], [0.555500031, 23.0, 24.0, 2.0], [-0.993499994, 25.0, 26.0, 3.0], [0.631999969, 27.0, 28.0, 2.0], [-0.977499962, 29.0, 30.0, 3.0], [-0.794499993, 31.0, 32.0, 1.0], [-0.966500044, 33.0, 34.0, 3.0], [-0.142499998, 35.0, 36.0, 0.0], [-0.208011359, 0.0, 0.0, 0.0], [0.0803666338, 0.0, 0.0, 0.0], [0.0765129253, 0.0, 0.0, 0.0], [-0.146628857, 0.0, 0.0, 0.0], [0.28283447, 0.0, 0.0, 0.0], [0.015151538, 0.0, 0.0, 0.0], [-0.138475388, 0.0, 0.0, 0.0], [0.0689868033, 0.0, 0.0, 0.0], [-0.124814257, 0.0, 0.0, 0.0], [0.190352038, 0.0, 0.0, 0.0], [0.249173582, 0.0, 0.0, 0.0], [0.0173477959, 0.0, 0.0, 0.0], [-0.223036617, 0.0, 0.0, 0.0], [-0.0169337578, 0.0, 0.0, 0.0], [0.128107503, 0.0, 0.0, 0.0], [-0.120977461, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 25, 26, 27, 28, 10, 5, 29, 30, 31, 32, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 15, 16, 2, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_241(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [-0.74150002, 3.0, 4.0, 1.0], [-0.940500021, 5.0, 6.0, 3.0], [-0.946500003, 7.0, 8.0, 4.0], [-0.729499996, 9.0, 10.0, 1.0], [-0.744500041, 11.0, 12.0, 1.0], [-0.961500049, 13.0, 14.0, 4.0], [-0.804499984, 15.0, 16.0, 1.0], [-0.238499999, 17.0, 18.0, 0.0], [-0.965000033, 19.0, 20.0, 4.0], [-0.95449996, 21.0, 22.0, 3.0], [-0.78550005, 23.0, 24.0, 1.0], [0.45450002, 25.0, 26.0, 2.0], [0.0125650782, 0.0, 0.0, 0.0], [-0.225109681, 0.0, 0.0, 0.0], [0.43599999, 27.0, 28.0, 2.0], [-0.273499995, 29.0, 30.0, 0.0], [-0.29549998, 31.0, 32.0, 0.0], [-0.944999993, 33.0, 34.0, 3.0], [-0.0324303173, 0.0, 0.0, 0.0], [-0.311256289, 0.0, 0.0, 0.0], [0.555500031, 35.0, 36.0, 2.0], [-0.879999995, 37.0, 38.0, 3.0], [-0.965499997, 39.0, 40.0, 4.0], [-0.215999991, 41.0, 42.0, 0.0], [-0.183500007, 43.0, 44.0, 0.0], [0.483500004, 45.0, 46.0, 2.0], [0.114808403, 0.0, 0.0, 0.0], [-0.1270013, 0.0, 0.0, 0.0], [0.0385272764, 0.0, 0.0, 0.0], [0.364422768, 0.0, 0.0, 0.0], [0.0635229498, 0.0, 0.0, 0.0], [-0.225499228, 0.0, 0.0, 0.0], [0.00552386697, 0.0, 0.0, 0.0], [0.188847482, 0.0, 0.0, 0.0], [-0.111560948, 0.0, 0.0, 0.0], [0.0370757394, 0.0, 0.0, 0.0], [0.235621601, 0.0, 0.0, 0.0], [-0.0548357219, 0.0, 0.0, 0.0], [-0.0830437988, 0.0, 0.0, 0.0], [0.0803890154, 0.0, 0.0, 0.0], [-0.328544259, 0.0, 0.0, 0.0], [-0.0189120173, 0.0, 0.0, 0.0], [0.266085953, 0.0, 0.0, 0.0], [-0.061345771, 0.0, 0.0, 0.0], [-0.181431264, 0.0, 0.0, 0.0], [0.0273129884, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 31, 32, 33, 34, 19, 20, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 10, 21, 22, 2, 5, 11, 23, 24, 12, 25, 26, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_242(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.509500027, 1.0, 2.0, 1.0], [-0.517500043, 3.0, 4.0, 1.0], [0.67750001, 5.0, 6.0, 2.0], [-0.0731000006, 7.0, 8.0, 0.0], [-0.160450011, 0.0, 0.0, 0.0], [-0.4745, 9.0, 10.0, 1.0], [0.736000001, 11.0, 12.0, 2.0], [-0.101500005, 13.0, 14.0, 0.0], [-0.98150003, 15.0, 16.0, 4.0], [-0.219000012, 17.0, 18.0, 0.0], [-0.431500018, 19.0, 20.0, 1.0], [-0.436999977, 21.0, 22.0, 1.0], [-0.855499983, 23.0, 24.0, 3.0], [-0.778499961, 25.0, 26.0, 4.0], [0.176749989, 0.0, 0.0, 0.0], [0.0513358302, 0.0, 0.0, 0.0], [0.475499988, 27.0, 28.0, 2.0], [0.248149678, 0.0, 0.0, 0.0], [0.0246823356, 0.0, 0.0, 0.0], [-0.145062342, 0.0, 0.0, 0.0], [-0.266499996, 29.0, 30.0, 0.0], [-0.467999995, 31.0, 32.0, 1.0], [-0.211443946, 0.0, 0.0, 0.0], [-0.450999975, 33.0, 34.0, 1.0], [-0.098893024, 0.0, 0.0, 0.0], [-0.00537515571, 0.0, 0.0, 0.0], [-0.126802623, 0.0, 0.0, 0.0], [-0.230575264, 0.0, 0.0, 0.0], [-0.0274892412, 0.0, 0.0, 0.0], [0.0157606192, 0.0, 0.0, 0.0], [0.226346016, 0.0, 0.0, 0.0], [-0.0883446336, 0.0, 0.0, 0.0], [0.0928262994, 0.0, 0.0, 0.0], [0.188857689, 0.0, 0.0, 0.0], [0.035006959, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 14, 15, 27, 28, 4, 17, 18, 19, 29, 30, 31, 32, 22, 33, 34, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 10, 20, 6, 11, 21, 12, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_243(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.923500001, 1.0, 2.0, 2.0], [-0.0745999962, 3.0, 4.0, 0.0], [-0.0725499988, 5.0, 6.0, 0.0], [-0.0770500004, 7.0, 8.0, 0.0], [-0.057099998, 9.0, 10.0, 0.0], [-0.851999998, 11.0, 12.0, 2.0], [-0.0578999966, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [0.51771909, 0.0, 0.0, 0.0], [-0.0656000003, 17.0, 18.0, 0.0], [-0.0496499985, 19.0, 20.0, 0.0], [-0.361178875, 0.0, 0.0, 0.0], [-0.201499999, 21.0, 22.0, 0.0], [0.326067746, 0.0, 0.0, 0.0], [-0.0470499992, 23.0, 24.0, 0.0], [-0.0905500054, 25.0, 26.0, 0.0], [-0.092749998, 27.0, 28.0, 0.0], [-0.0728500038, 29.0, 30.0, 0.0], [-0.452315539, 0.0, 0.0, 0.0], [0.428685725, 0.0, 0.0, 0.0], [-0.999500036, 31.0, 32.0, 4.0], [-0.260500014, 33.0, 34.0, 0.0], [-0.999500036, 35.0, 36.0, 4.0], [-0.370648026, 0.0, 0.0, 0.0], [-0.0269000009, 37.0, 38.0, 0.0], [0.00596442726, 0.0, 0.0, 0.0], [-0.206498757, 0.0, 0.0, 0.0], [0.238682851, 0.0, 0.0, 0.0], [-0.170688778, 0.0, 0.0, 0.0], [-0.331820518, 0.0, 0.0, 0.0], [0.142227948, 0.0, 0.0, 0.0], [0.00558615942, 0.0, 0.0, 0.0], [-0.144876167, 0.0, 0.0, 0.0], [-0.126938343, 0.0, 0.0, 0.0], [0.112323754, 0.0, 0.0, 0.0], [0.0862563699, 0.0, 0.0, 0.0], [-0.200165033, 0.0, 0.0, 0.0], [0.225221843, 0.0, 0.0, 0.0], [-0.0158291031, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 29, 30, 18, 19, 31, 32, 11, 33, 34, 35, 36, 13, 23, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 17, 10, 20, 2, 5, 12, 21, 22, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_244(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.923500001, 1.0, 2.0, 2.0], [0.1105, 3.0, 4.0, 0.0], [-0.851999998, 5.0, 6.0, 2.0], [0.0923999995, 7.0, 8.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [0.0303000007, 11.0, 12.0, 0.0], [0.0254500005, 13.0, 14.0, 0.0], [0.0892499983, 15.0, 16.0, 0.0], [0.0941499993, 17.0, 18.0, 0.0], [0.276710868, 0.0, 0.0, 0.0], [0.190499991, 19.0, 20.0, 0.0], [-0.0258499999, 21.0, 22.0, 0.0], [0.0607500002, 23.0, 24.0, 0.0], [0.00679999962, 25.0, 26.0, 0.0], [-0.99849999, 27.0, 28.0, 1.0], [0.0560500026, 29.0, 30.0, 0.0], [0.141746208, 0.0, 0.0, 0.0], [-0.286740929, 0.0, 0.0, 0.0], [-0.0477396883, 0.0, 0.0, 0.0], [-0.231662259, 0.0, 0.0, 0.0], [0.196500003, 31.0, 32.0, 0.0], [-0.0419999994, 33.0, 34.0, 0.0], [-0.999500036, 35.0, 36.0, 4.0], [-0.278987527, 0.0, 0.0, 0.0], [0.16571252, 0.0, 0.0, 0.0], [0.00191000011, 37.0, 38.0, 0.0], [0.0122999996, 39.0, 40.0, 0.0], [0.0784000009, 41.0, 42.0, 0.0], [-0.151158333, 0.0, 0.0, 0.0], [-0.00183861202, 0.0, 0.0, 0.0], [-0.0884020552, 0.0, 0.0, 0.0], [0.0847375765, 0.0, 0.0, 0.0], [-0.00764218299, 0.0, 0.0, 0.0], [0.229337096, 0.0, 0.0, 0.0], [-0.25713408, 0.0, 0.0, 0.0], [0.365608811, 0.0, 0.0, 0.0], [-0.000789499318, 0.0, 0.0, 0.0], [-0.0230389051, 0.0, 0.0, 0.0], [0.247045368, 0.0, 0.0, 0.0], [-0.342798769, 0.0, 0.0, 0.0], [-0.0905569047, 0.0, 0.0, 0.0], [0.302336097, 0.0, 0.0, 0.0], [-0.0474089682, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 17, 18, 9, 19, 31, 32, 33, 34, 35, 36, 23, 24, 37, 38, 39, 40, 41, 42, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 20, 2, 5, 11, 21, 22, 12, 6, 13, 25, 26, 14, 27])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_245(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.885499954, 3.0, 4.0, 2.0], [0.527500033, 5.0, 6.0, 0.0], [-0.0802000016, 7.0, 8.0, 0.0], [-0.188641265, 0.0, 0.0, 0.0], [0.43599999, 9.0, 10.0, 0.0], [0.549499989, 11.0, 12.0, 0.0], [-0.1505, 13.0, 14.0, 0.0], [-0.0748500004, 15.0, 16.0, 0.0], [0.428499997, 17.0, 18.0, 0.0], [-0.759000003, 19.0, 20.0, 2.0], [-0.337033361, 0.0, 0.0, 0.0], [0.0726712123, 0.0, 0.0, 0.0], [-0.169499993, 21.0, 22.0, 0.0], [0.316415191, 0.0, 0.0, 0.0], [-0.312362105, 0.0, 0.0, 0.0], [-0.0315500014, 23.0, 24.0, 0.0], [0.253000021, 25.0, 26.0, 0.0], [-0.324227005, 0.0, 0.0, 0.0], [0.235499769, 0.0, 0.0, 0.0], [0.0168802962, 0.0, 0.0, 0.0], [-0.0489961803, 0.0, 0.0, 0.0], [0.0756568015, 0.0, 0.0, 0.0], [0.238454953, 0.0, 0.0, 0.0], [-0.0146165118, 0.0, 0.0, 0.0], [-0.00120044767, 0.0, 0.0, 0.0], [0.184742406, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 23, 24, 4, 25, 26, 18, 19, 20, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 17, 10, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_246(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.578999996, 1.0, 2.0, 1.0], [-0.213499993, 3.0, 4.0, 0.0], [-0.889500022, 5.0, 6.0, 4.0], [-0.217500001, 7.0, 8.0, 0.0], [-0.212500006, 9.0, 10.0, 0.0], [0.744500041, 11.0, 12.0, 2.0], [0.801499963, 13.0, 14.0, 2.0], [0.636500001, 15.0, 16.0, 2.0], [-0.189141735, 0.0, 0.0, 0.0], [0.273689926, 0.0, 0.0, 0.0], [0.536000013, 17.0, 18.0, 2.0], [-0.220967621, 0.0, 0.0, 0.0], [0.0594101287, 0.0, 0.0, 0.0], [-0.557999969, 19.0, 20.0, 1.0], [-0.149289146, 0.0, 0.0, 0.0], [-0.686499953, 21.0, 22.0, 1.0], [0.642500043, 23.0, 24.0, 2.0], [0.529500008, 25.0, 26.0, 2.0], [-0.941500008, 27.0, 28.0, 3.0], [0.172507435, 0.0, 0.0, 0.0], [-0.526499987, 29.0, 30.0, 1.0], [0.00667744176, 0.0, 0.0, 0.0], [-0.215843886, 0.0, 0.0, 0.0], [0.267977834, 0.0, 0.0, 0.0], [0.0317866765, 0.0, 0.0, 0.0], [0.0180907827, 0.0, 0.0, 0.0], [-0.287246734, 0.0, 0.0, 0.0], [0.0944604948, 0.0, 0.0, 0.0], [-0.145256564, 0.0, 0.0, 0.0], [-0.125534266, 0.0, 0.0, 0.0], [0.0534145199, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 25, 26, 27, 28, 11, 12, 19, 29, 30, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 17, 18, 2, 5, 6, 13, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_247(xs):
    #Predicts Class 1
    function_dict = np.array([[0.635499954, 1.0, 2.0, 2.0], [0.628499985, 3.0, 4.0, 2.0], [0.642500043, 5.0, 6.0, 2.0], [-0.797500014, 7.0, 8.0, 1.0], [0.200798601, 0.0, 0.0, 0.0], [-0.289614022, 0.0, 0.0, 0.0], [-0.912500024, 9.0, 10.0, 4.0], [0.57249999, 11.0, 12.0, 2.0], [-0.875499964, 13.0, 14.0, 4.0], [-0.250999987, 15.0, 16.0, 0.0], [-0.703000009, 17.0, 18.0, 1.0], [-0.800500035, 19.0, 20.0, 1.0], [-0.234575212, 0.0, 0.0, 0.0], [-0.887500048, 21.0, 22.0, 4.0], [-0.973500013, 23.0, 24.0, 3.0], [-0.384499997, 25.0, 26.0, 1.0], [-0.456, 27.0, 28.0, 1.0], [0.0532173924, 0.0, 0.0, 0.0], [-0.333499998, 29.0, 30.0, 0.0], [0.00244831084, 0.0, 0.0, 0.0], [-0.194165185, 0.0, 0.0, 0.0], [0.0195669942, 0.0, 0.0, 0.0], [0.231452957, 0.0, 0.0, 0.0], [-0.195728034, 0.0, 0.0, 0.0], [0.00788489357, 0.0, 0.0, 0.0], [0.215425402, 0.0, 0.0, 0.0], [-0.0680693388, 0.0, 0.0, 0.0], [-0.121593684, 0.0, 0.0, 0.0], [0.119998559, 0.0, 0.0, 0.0], [0.0330274589, 0.0, 0.0, 0.0], [-0.229286045, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 21, 22, 23, 24, 4, 5, 25, 26, 27, 28, 17, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 2, 6, 9, 15, 16, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_248(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.581499994, 1.0, 2.0, 1.0], [-0.997500002, 3.0, 4.0, 3.0], [-0.931499958, 5.0, 6.0, 4.0], [0.531499982, 7.0, 8.0, 2.0], [-0.235500008, 9.0, 10.0, 0.0], [-0.48300001, 11.0, 12.0, 1.0], [-0.526499987, 13.0, 14.0, 1.0], [-0.225499988, 15.0, 16.0, 0.0], [-0.184500009, 17.0, 18.0, 0.0], [-0.975499988, 19.0, 20.0, 3.0], [-0.911499977, 21.0, 22.0, 3.0], [-0.279500008, 23.0, 24.0, 0.0], [-0.458499998, 25.0, 26.0, 1.0], [-0.778999984, 27.0, 28.0, 4.0], [-0.145500004, 29.0, 30.0, 0.0], [0.438499987, 31.0, 32.0, 2.0], [-0.16049999, 33.0, 34.0, 0.0], [0.639500022, 35.0, 36.0, 2.0], [-0.127259538, 0.0, 0.0, 0.0], [-0.317685574, 0.0, 0.0, 0.0], [-0.636000037, 37.0, 38.0, 1.0], [-0.213499993, 39.0, 40.0, 0.0], [-0.899500012, 41.0, 42.0, 3.0], [0.0682905912, 0.0, 0.0, 0.0], [-0.993499994, 43.0, 44.0, 3.0], [0.187155858, 0.0, 0.0, 0.0], [0.654500008, 45.0, 46.0, 2.0], [-0.993499994, 47.0, 48.0, 3.0], [-0.715499997, 49.0, 50.0, 4.0], [-0.456499994, 51.0, 52.0, 1.0], [0.147231504, 0.0, 0.0, 0.0], [0.0960296467, 0.0, 0.0, 0.0], [-0.0477757007, 0.0, 0.0, 0.0], [-0.260765582, 0.0, 0.0, 0.0], [0.0262733549, 0.0, 0.0, 0.0], [0.252530873, 0.0, 0.0, 0.0], [-0.0515348874, 0.0, 0.0, 0.0], [-0.13185516, 0.0, 0.0, 0.0], [0.0212284513, 0.0, 0.0, 0.0], [0.0748203248, 0.0, 0.0, 0.0], [-0.0632978603, 0.0, 0.0, 0.0], [0.217904061, 0.0, 0.0, 0.0], [0.0204086136, 0.0, 0.0, 0.0], [-0.0529721901, 0.0, 0.0, 0.0], [-0.206691355, 0.0, 0.0, 0.0], [0.0942656398, 0.0, 0.0, 0.0], [-0.167202249, 0.0, 0.0, 0.0], [0.0719029605, 0.0, 0.0, 0.0], [0.278003067, 0.0, 0.0, 0.0], [-0.0718097016, 0.0, 0.0, 0.0], [0.0697627366, 0.0, 0.0, 0.0], [-0.0833404064, 0.0, 0.0, 0.0], [0.0564659424, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([31, 32, 33, 34, 35, 36, 18, 19, 37, 38, 39, 40, 41, 42, 23, 43, 44, 25, 45, 46, 47, 48, 49, 50, 51, 52, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 20, 10, 21, 22, 2, 5, 11, 24, 12, 26, 6, 13, 27, 28, 14, 29])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_249(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.139499992, 5.0, 6.0, 0.0], [-0.191500008, 7.0, 8.0, 0.0], [-0.146499991, 9.0, 10.0, 0.0], [0.238078669, 0.0, 0.0, 0.0], [-0.136500001, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.225386485, 0.0, 0.0, 0.0], [-0.161500007, 15.0, 16.0, 0.0], [-0.141499996, 17.0, 18.0, 0.0], [-0.137499988, 19.0, 20.0, 0.0], [-0.134499997, 21.0, 22.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [-0.747500002, 25.0, 26.0, 2.0], [-0.166500002, 27.0, 28.0, 0.0], [-0.329812646, 0.0, 0.0, 0.0], [-0.144499987, 29.0, 30.0, 0.0], [-0.254574209, 0.0, 0.0, 0.0], [-0.138500005, 31.0, 32.0, 0.0], [-0.29329282, 0.0, 0.0, 0.0], [-0.135500014, 33.0, 34.0, 0.0], [-0.992499948, 35.0, 36.0, 1.0], [-0.0219940729, 0.0, 0.0, 0.0], [-0.247667179, 0.0, 0.0, 0.0], [0.146208957, 0.0, 0.0, 0.0], [-0.0612092875, 0.0, 0.0, 0.0], [-0.261977315, 0.0, 0.0, 0.0], [0.0956180915, 0.0, 0.0, 0.0], [0.123624697, 0.0, 0.0, 0.0], [0.00424832944, 0.0, 0.0, 0.0], [-0.00341088907, 0.0, 0.0, 0.0], [0.0302769132, 0.0, 0.0, 0.0], [0.0128479777, 0.0, 0.0, 0.0], [0.259405553, 0.0, 0.0, 0.0], [-0.00106857484, 0.0, 0.0, 0.0], [0.10669864, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 27, 28, 16, 29, 30, 18, 5, 31, 32, 20, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 15, 10, 17, 2, 6, 11, 19, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_250(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.601000011, 3.0, 4.0, 2.0], [-0.0912549272, 0.0, 0.0, 0.0], [-0.654500008, 5.0, 6.0, 2.0], [-0.581499994, 7.0, 8.0, 2.0], [-0.67050004, 9.0, 10.0, 2.0], [-0.0366999991, 11.0, 12.0, 0.0], [0.166649148, 0.0, 0.0, 0.0], [-0.51699996, 13.0, 14.0, 2.0], [-0.412500024, 15.0, 16.0, 0.0], [0.175645858, 0.0, 0.0, 0.0], [-0.12650001, 17.0, 18.0, 0.0], [0.00526000001, 19.0, 20.0, 0.0], [-0.102225177, 0.0, 0.0, 0.0], [-0.225999996, 21.0, 22.0, 0.0], [-0.0847265646, 0.0, 0.0, 0.0], [0.00311435666, 0.0, 0.0, 0.0], [-0.0471864417, 0.0, 0.0, 0.0], [-0.288026094, 0.0, 0.0, 0.0], [0.166915223, 0.0, 0.0, 0.0], [-0.0892586038, 0.0, 0.0, 0.0], [-0.0204258226, 0.0, 0.0, 0.0], [0.110995516, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 17, 18, 19, 20, 7, 13, 21, 22, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 11, 12, 4, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_251(xs):
    #Predicts Class 5
    function_dict = np.array([[0.429499984, 1.0, 2.0, 0.0], [0.426499993, 3.0, 4.0, 0.0], [0.433499992, 5.0, 6.0, 0.0], [0.42049998, 7.0, 8.0, 0.0], [-0.338021159, 0.0, 0.0, 0.0], [0.431500018, 9.0, 10.0, 0.0], [0.436500013, 11.0, 12.0, 0.0], [0.415000021, 13.0, 14.0, 0.0], [0.142801374, 0.0, 0.0, 0.0], [0.290423721, 0.0, 0.0, 0.0], [0.108277626, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [0.445500016, 17.0, 18.0, 0.0], [0.409500003, 19.0, 20.0, 0.0], [-0.211858496, 0.0, 0.0, 0.0], [-0.235435754, 0.0, 0.0, 0.0], [-0.040571332, 0.0, 0.0, 0.0], [0.315629244, 0.0, 0.0, 0.0], [0.455500007, 21.0, 22.0, 0.0], [-0.00977892522, 0.0, 0.0, 0.0], [0.35604462, 0.0, 0.0, 0.0], [-0.184186026, 0.0, 0.0, 0.0], [0.0127298189, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 10, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_252(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.990499973, 1.0, 2.0, 3.0], [-0.855499983, 3.0, 4.0, 4.0], [0.354499996, 5.0, 6.0, 2.0], [-0.922500014, 7.0, 8.0, 4.0], [-0.99849999, 9.0, 10.0, 3.0], [0.311500013, 11.0, 12.0, 2.0], [-0.772000015, 13.0, 14.0, 1.0], [-0.818500042, 15.0, 16.0, 1.0], [0.657500029, 17.0, 18.0, 2.0], [0.0501555055, 0.0, 0.0, 0.0], [-0.551999986, 19.0, 20.0, 1.0], [0.0490715466, 0.0, 0.0, 0.0], [-0.196023881, 0.0, 0.0, 0.0], [-0.818500042, 21.0, 22.0, 1.0], [-0.761500001, 23.0, 24.0, 1.0], [-0.980499983, 25.0, 26.0, 4.0], [-0.276499987, 27.0, 28.0, 0.0], [0.62650001, 29.0, 30.0, 2.0], [0.224295646, 0.0, 0.0, 0.0], [-0.222145736, 0.0, 0.0, 0.0], [-0.00978385285, 0.0, 0.0, 0.0], [0.487500012, 31.0, 32.0, 2.0], [-0.789499998, 33.0, 34.0, 1.0], [-0.188140571, 0.0, 0.0, 0.0], [-0.752499998, 35.0, 36.0, 1.0], [-0.115245037, 0.0, 0.0, 0.0], [0.147034511, 0.0, 0.0, 0.0], [-0.215078011, 0.0, 0.0, 0.0], [-0.0341410153, 0.0, 0.0, 0.0], [0.0712339431, 0.0, 0.0, 0.0], [-0.165875062, 0.0, 0.0, 0.0], [0.0713434741, 0.0, 0.0, 0.0], [-0.112191521, 0.0, 0.0, 0.0], [0.227984086, 0.0, 0.0, 0.0], [0.0720656291, 0.0, 0.0, 0.0], [0.236271247, 0.0, 0.0, 0.0], [0.00488604512, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 18, 9, 19, 20, 11, 12, 31, 32, 33, 34, 23, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 10, 2, 5, 6, 13, 21, 22, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_253(xs):
    #Predicts Class 1
    function_dict = np.array([[0.178499997, 1.0, 2.0, 2.0], [-0.130993322, 0.0, 0.0, 0.0], [-0.986500025, 3.0, 4.0, 4.0], [0.13581948, 0.0, 0.0, 0.0], [-0.374500006, 5.0, 6.0, 0.0], [0.130667299, 0.0, 0.0, 0.0], [-0.352499992, 7.0, 8.0, 0.0], [-0.134966567, 0.0, 0.0, 0.0], [-0.291500002, 9.0, 10.0, 0.0], [0.0464399792, 0.0, 0.0, 0.0], [-0.0102462266, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 7, 9, 10])
    branch_indices = np.array([0, 2, 4, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_254(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.712499976, 1.0, 2.0, 4.0], [0.825999975, 3.0, 4.0, 2.0], [-0.603999972, 5.0, 6.0, 4.0], [0.797500014, 7.0, 8.0, 2.0], [-0.138081998, 0.0, 0.0, 0.0], [0.725000024, 9.0, 10.0, 2.0], [-0.0792605951, 0.0, 0.0, 0.0], [0.782500029, 11.0, 12.0, 2.0], [0.148713917, 0.0, 0.0, 0.0], [-0.040799737, 0.0, 0.0, 0.0], [0.280730188, 0.0, 0.0, 0.0], [-0.718500018, 13.0, 14.0, 1.0], [-0.151202291, 0.0, 0.0, 0.0], [-0.0375720151, 0.0, 0.0, 0.0], [0.0131213004, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_255(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.142500013, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.139499992, 5.0, 6.0, 0.0], [-0.192499995, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.140500009, 11.0, 12.0, 0.0], [-0.136500001, 13.0, 14.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [-0.190499991, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.151499987, 21.0, 22.0, 0.0], [-0.00154277706, 0.0, 0.0, 0.0], [0.156992882, 0.0, 0.0, 0.0], [-0.137499988, 23.0, 24.0, 0.0], [-0.132499993, 25.0, 26.0, 0.0], [-0.210500002, 27.0, 28.0, 0.0], [-0.999500036, 29.0, 30.0, 1.0], [0.218093738, 0.0, 0.0, 0.0], [-0.0174758155, 0.0, 0.0, 0.0], [-0.339260548, 0.0, 0.0, 0.0], [-0.00546305859, 0.0, 0.0, 0.0], [-0.0767564401, 0.0, 0.0, 0.0], [0.242093042, 0.0, 0.0, 0.0], [-0.138500005, 31.0, 32.0, 0.0], [-0.258646399, 0.0, 0.0, 0.0], [-0.135500014, 33.0, 34.0, 0.0], [-0.127499998, 35.0, 36.0, 0.0], [-0.0367470942, 0.0, 0.0, 0.0], [0.15068531, 0.0, 0.0, 0.0], [-0.232355714, 0.0, 0.0, 0.0], [0.212692678, 0.0, 0.0, 0.0], [-0.00181178376, 0.0, 0.0, 0.0], [0.0232030749, 0.0, 0.0, 0.0], [0.0097077461, 0.0, 0.0, 0.0], [0.121652059, 0.0, 0.0, 0.0], [-0.0937760398, 0.0, 0.0, 0.0], [0.00382714975, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 18, 19, 20, 21, 22, 11, 12, 31, 32, 24, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 10, 2, 5, 6, 13, 23, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_256(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0973500013, 1.0, 2.0, 0.0], [-0.0987499952, 3.0, 4.0, 0.0], [-0.0963499993, 5.0, 6.0, 0.0], [-0.104499996, 7.0, 8.0, 0.0], [0.333921701, 0.0, 0.0, 0.0], [-0.470042616, 0.0, 0.0, 0.0], [-0.0929999948, 9.0, 10.0, 0.0], [-0.129500002, 11.0, 12.0, 0.0], [-0.102499999, 13.0, 14.0, 0.0], [0.273561835, 0.0, 0.0, 0.0], [-0.0904500037, 15.0, 16.0, 0.0], [-0.130499989, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.262142599, 0.0, 0.0, 0.0], [-0.101500005, 21.0, 22.0, 0.0], [-0.0910999998, 23.0, 24.0, 0.0], [-0.0811500028, 25.0, 26.0, 0.0], [0.00617059413, 0.0, 0.0, 0.0], [-0.14418368, 0.0, 0.0, 0.0], [0.0200875401, 0.0, 0.0, 0.0], [0.289153934, 0.0, 0.0, 0.0], [0.0598350577, 0.0, 0.0, 0.0], [-0.0573579147, 0.0, 0.0, 0.0], [-0.0651568472, 0.0, 0.0, 0.0], [-0.381394267, 0.0, 0.0, 0.0], [0.271295011, 0.0, 0.0, 0.0], [-0.00772707211, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 21, 22, 4, 5, 9, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_257(xs):
    #Predicts Class 5
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.5625, 3.0, 4.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [0.556499958, 7.0, 8.0, 0.0], [0.565500021, 9.0, 10.0, 0.0], [-0.149630442, 0.0, 0.0, 0.0], [0.0540858246, 0.0, 0.0, 0.0], [0.537500024, 11.0, 12.0, 0.0], [0.557999969, 13.0, 14.0, 0.0], [0.0659455061, 0.0, 0.0, 0.0], [0.235828027, 0.0, 0.0, 0.0], [0.521499991, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.0988472179, 0.0, 0.0, 0.0], [-0.0186106246, 0.0, 0.0, 0.0], [0.00113668956, 0.0, 0.0, 0.0], [-0.0868494436, 0.0, 0.0, 0.0], [0.138111532, 0.0, 0.0, 0.0], [-0.213062435, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_258(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.971500039, 1.0, 2.0, 4.0], [-0.792500019, 3.0, 4.0, 1.0], [-0.166500002, 5.0, 6.0, 0.0], [0.439500004, 7.0, 8.0, 2.0], [-0.203500003, 9.0, 10.0, 0.0], [-0.189500004, 11.0, 12.0, 0.0], [-0.109499998, 13.0, 14.0, 0.0], [-0.860499978, 15.0, 16.0, 1.0], [-0.191, 17.0, 18.0, 0.0], [0.459500015, 19.0, 20.0, 2.0], [-0.756500006, 21.0, 22.0, 1.0], [-0.754000008, 23.0, 24.0, 4.0], [0.680000007, 25.0, 26.0, 2.0], [0.452499986, 27.0, 28.0, 2.0], [-0.99849999, 29.0, 30.0, 3.0], [0.0614072829, 0.0, 0.0, 0.0], [0.345499992, 31.0, 32.0, 2.0], [0.242382556, 0.0, 0.0, 0.0], [0.0146795576, 0.0, 0.0, 0.0], [0.0760258287, 0.0, 0.0, 0.0], [-0.303322613, 0.0, 0.0, 0.0], [-0.241551489, 0.0, 0.0, 0.0], [0.523000002, 33.0, 34.0, 2.0], [0.471000016, 35.0, 36.0, 2.0], [-0.979499996, 37.0, 38.0, 3.0], [0.449999988, 39.0, 40.0, 2.0], [0.0777097717, 0.0, 0.0, 0.0], [0.413500011, 41.0, 42.0, 2.0], [-0.538499951, 43.0, 44.0, 1.0], [0.187384173, 0.0, 0.0, 0.0], [-0.0798000023, 45.0, 46.0, 0.0], [-0.0311338585, 0.0, 0.0, 0.0], [-0.204222634, 0.0, 0.0, 0.0], [0.00048777007, 0.0, 0.0, 0.0], [0.230657548, 0.0, 0.0, 0.0], [-0.0448811166, 0.0, 0.0, 0.0], [0.0514651984, 0.0, 0.0, 0.0], [-0.190533847, 0.0, 0.0, 0.0], [-0.0323907919, 0.0, 0.0, 0.0], [0.0788240954, 0.0, 0.0, 0.0], [-0.270229369, 0.0, 0.0, 0.0], [-0.000800011505, 0.0, 0.0, 0.0], [-0.0979533643, 0.0, 0.0, 0.0], [0.157181576, 0.0, 0.0, 0.0], [-0.0254592337, 0.0, 0.0, 0.0], [-0.152178794, 0.0, 0.0, 0.0], [0.0350935496, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 31, 32, 17, 18, 19, 20, 21, 33, 34, 35, 36, 37, 38, 39, 40, 26, 41, 42, 43, 44, 29, 45, 46])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 4, 9, 10, 22, 2, 5, 11, 23, 24, 12, 25, 6, 13, 27, 28, 14, 30])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_259(xs):
    #Predicts Class 1
    function_dict = np.array([[0.1105, 1.0, 2.0, 0.0], [-0.138500005, 3.0, 4.0, 0.0], [0.122700654, 0.0, 0.0, 0.0], [0.635499954, 5.0, 6.0, 2.0], [-0.961500049, 7.0, 8.0, 4.0], [-0.887500048, 9.0, 10.0, 4.0], [0.642500043, 11.0, 12.0, 2.0], [0.398499995, 13.0, 14.0, 2.0], [-0.189511582, 0.0, 0.0, 0.0], [-0.189500004, 15.0, 16.0, 0.0], [-0.875499964, 17.0, 18.0, 4.0], [-0.218174502, 0.0, 0.0, 0.0], [0.648499966, 19.0, 20.0, 2.0], [-0.150218651, 0.0, 0.0, 0.0], [0.479499996, 21.0, 22.0, 2.0], [-0.00608297577, 0.0, 0.0, 0.0], [0.0964770764, 0.0, 0.0, 0.0], [0.219883695, 0.0, 0.0, 0.0], [0.0169689283, 0.0, 0.0, 0.0], [0.165056318, 0.0, 0.0, 0.0], [-0.0444278121, 0.0, 0.0, 0.0], [0.137955889, 0.0, 0.0, 0.0], [0.00838250946, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 11, 19, 20, 13, 21, 22, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_260(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.210500002, 3.0, 4.0, 0.0], [-0.4745, 5.0, 6.0, 1.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.155499995, 9.0, 10.0, 0.0], [-0.484499991, 11.0, 12.0, 1.0], [-0.461499989, 13.0, 14.0, 1.0], [-0.972499967, 15.0, 16.0, 3.0], [-0.254063249, 0.0, 0.0, 0.0], [0.526499987, 17.0, 18.0, 2.0], [0.523000002, 19.0, 20.0, 2.0], [-0.490500003, 21.0, 22.0, 1.0], [0.215117648, 0.0, 0.0, 0.0], [-0.118640035, 0.0, 0.0, 0.0], [0.772500038, 23.0, 24.0, 2.0], [-0.541999996, 25.0, 26.0, 1.0], [-0.247500002, 27.0, 28.0, 0.0], [0.463499993, 29.0, 30.0, 2.0], [0.550500035, 31.0, 32.0, 2.0], [-0.0731000006, 33.0, 34.0, 0.0], [-0.633000016, 35.0, 36.0, 1.0], [0.120676883, 0.0, 0.0, 0.0], [-0.106635004, 0.0, 0.0, 0.0], [0.67750001, 37.0, 38.0, 2.0], [0.182038277, 0.0, 0.0, 0.0], [0.0354225188, 0.0, 0.0, 0.0], [-0.111627296, 0.0, 0.0, 0.0], [0.0189604349, 0.0, 0.0, 0.0], [-0.234798744, 0.0, 0.0, 0.0], [0.0533827543, 0.0, 0.0, 0.0], [-0.232615992, 0.0, 0.0, 0.0], [0.294681042, 0.0, 0.0, 0.0], [0.0468980595, 0.0, 0.0, 0.0], [0.127175808, 0.0, 0.0, 0.0], [-0.060669519, 0.0, 0.0, 0.0], [-0.277686387, 0.0, 0.0, 0.0], [-0.00681836158, 0.0, 0.0, 0.0], [0.0369434208, 0.0, 0.0, 0.0], [-0.0783061534, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 29, 30, 31, 32, 33, 34, 35, 36, 21, 22, 12, 13, 37, 38, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 17, 18, 10, 19, 20, 2, 5, 11, 6, 14, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_261(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.273499995, 1.0, 2.0, 0.0], [-0.276499987, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [0.219711602, 0.0, 0.0, 0.0], [-0.851999998, 9.0, 10.0, 2.0], [-0.2095, 11.0, 12.0, 0.0], [-0.296499997, 13.0, 14.0, 0.0], [-0.0920089483, 0.0, 0.0, 0.0], [-0.263223261, 0.0, 0.0, 0.0], [-0.253499985, 15.0, 16.0, 0.0], [0.146248102, 0.0, 0.0, 0.0], [-0.205500007, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.0394091122, 0.0, 0.0, 0.0], [0.0472828262, 0.0, 0.0, 0.0], [-0.108597316, 0.0, 0.0, 0.0], [-0.184493706, 0.0, 0.0, 0.0], [-0.201499999, 21.0, 22.0, 0.0], [0.150983974, 0.0, 0.0, 0.0], [-0.0216750819, 0.0, 0.0, 0.0], [0.143464223, 0.0, 0.0, 0.0], [-0.00103610393, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 15, 16, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 10, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_262(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00163000007, 1.0, 2.0, 0.0], [-0.00413500005, 3.0, 4.0, 0.0], [-0.00132499996, 5.0, 6.0, 0.0], [-0.0101749999, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.457043976, 0.0, 0.0, 0.0], [-0.000469999999, 11.0, 12.0, 0.0], [-0.0150499996, 13.0, 14.0, 0.0], [-0.00885999948, 15.0, 16.0, 0.0], [-0.00209000008, 17.0, 18.0, 0.0], [-0.000636830053, 0.0, 0.0, 0.0], [-0.000834999955, 19.0, 20.0, 0.0], [0.00146499998, 21.0, 22.0, 0.0], [-0.0156999994, 23.0, 24.0, 0.0], [-0.330467433, 0.0, 0.0, 0.0], [0.485355854, 0.0, 0.0, 0.0], [-0.00550500024, 25.0, 26.0, 0.0], [-0.397519678, 0.0, 0.0, 0.0], [-0.0416396335, 0.0, 0.0, 0.0], [0.0737211034, 0.0, 0.0, 0.0], [-0.323790461, 0.0, 0.0, 0.0], [0.000549999997, 27.0, 28.0, 0.0], [0.00325499987, 29.0, 30.0, 0.0], [-0.00598948775, 0.0, 0.0, 0.0], [0.501923263, 0.0, 0.0, 0.0], [-0.312204361, 0.0, 0.0, 0.0], [0.192214355, 0.0, 0.0, 0.0], [0.000118182601, 0.0, 0.0, 0.0], [0.369811773, 0.0, 0.0, 0.0], [-0.187023327, 0.0, 0.0, 0.0], [0.00839080568, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 25, 26, 17, 18, 10, 5, 19, 20, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 4, 9, 2, 6, 11, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_263(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.972000003, 1.0, 2.0, 2.0], [-0.16049999, 3.0, 4.0, 0.0], [0.531499982, 5.0, 6.0, 0.0], [-0.169499993, 7.0, 8.0, 0.0], [-0.0331500024, 9.0, 10.0, 0.0], [-0.080400005, 11.0, 12.0, 0.0], [0.208355486, 0.0, 0.0, 0.0], [-0.380499989, 13.0, 14.0, 0.0], [0.148115069, 0.0, 0.0, 0.0], [-0.149500012, 15.0, 16.0, 0.0], [-0.0123999994, 17.0, 18.0, 0.0], [-0.193500012, 19.0, 20.0, 0.0], [-0.0742499977, 21.0, 22.0, 0.0], [-0.398999989, 23.0, 24.0, 0.0], [-0.254937857, 0.0, 0.0, 0.0], [-0.155499995, 25.0, 26.0, 0.0], [-0.331486017, 0.0, 0.0, 0.0], [0.335101515, 0.0, 0.0, 0.0], [0.172499999, 27.0, 28.0, 0.0], [-0.360500008, 29.0, 30.0, 0.0], [-0.237191185, 0.0, 0.0, 0.0], [0.288744837, 0.0, 0.0, 0.0], [-0.999500036, 31.0, 32.0, 1.0], [-0.0148882624, 0.0, 0.0, 0.0], [0.197353393, 0.0, 0.0, 0.0], [-0.242697209, 0.0, 0.0, 0.0], [0.122037664, 0.0, 0.0, 0.0], [-0.261103541, 0.0, 0.0, 0.0], [9.26133798e-05, 0.0, 0.0, 0.0], [-0.0875696987, 0.0, 0.0, 0.0], [0.0922930688, 0.0, 0.0, 0.0], [-0.140219256, 0.0, 0.0, 0.0], [0.0239050798, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 8, 25, 26, 16, 17, 27, 28, 29, 30, 20, 21, 31, 32, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 15, 10, 18, 2, 5, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_264(xs):
    #Predicts Class 0
    function_dict = np.array([[0.702499986, 1.0, 2.0, 2.0], [-0.730499983, 3.0, 4.0, 4.0], [0.713500023, 5.0, 6.0, 2.0], [-0.513499975, 7.0, 8.0, 1.0], [0.146710381, 0.0, 0.0, 0.0], [-0.199649036, 0.0, 0.0, 0.0], [-0.915500045, 9.0, 10.0, 4.0], [0.657500029, 11.0, 12.0, 2.0], [-0.825999975, 13.0, 14.0, 4.0], [-0.0945396125, 0.0, 0.0, 0.0], [-0.203999996, 15.0, 16.0, 0.0], [-0.221500009, 17.0, 18.0, 0.0], [-0.187000006, 19.0, 20.0, 0.0], [-0.21332413, 0.0, 0.0, 0.0], [-0.00170992175, 0.0, 0.0, 0.0], [-0.257499993, 21.0, 22.0, 0.0], [-0.63499999, 23.0, 24.0, 4.0], [-0.0345051959, 0.0, 0.0, 0.0], [0.0184214618, 0.0, 0.0, 0.0], [0.230962455, 0.0, 0.0, 0.0], [-0.0915524513, 0.0, 0.0, 0.0], [-0.114958808, 0.0, 0.0, 0.0], [0.194947392, 0.0, 0.0, 0.0], [-0.151336715, 0.0, 0.0, 0.0], [0.0419343486, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_265(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [-0.236499995, 3.0, 4.0, 0.0], [-0.744500041, 5.0, 6.0, 1.0], [-0.95449996, 7.0, 8.0, 3.0], [0.55250001, 9.0, 10.0, 2.0], [-0.178499997, 11.0, 12.0, 0.0], [-0.173500001, 13.0, 14.0, 0.0], [-0.283500016, 15.0, 16.0, 0.0], [-0.894999981, 17.0, 18.0, 4.0], [-0.963500023, 19.0, 20.0, 4.0], [-0.126400888, 0.0, 0.0, 0.0], [0.486000001, 21.0, 22.0, 2.0], [-0.961500049, 23.0, 24.0, 4.0], [-0.89349997, 25.0, 26.0, 4.0], [-0.0500000007, 27.0, 28.0, 0.0], [-0.334500015, 29.0, 30.0, 0.0], [-0.976000011, 31.0, 32.0, 3.0], [-0.73300004, 33.0, 34.0, 1.0], [-0.0826875791, 0.0, 0.0, 0.0], [0.040792577, 0.0, 0.0, 0.0], [-0.919499993, 35.0, 36.0, 4.0], [0.449499995, 37.0, 38.0, 2.0], [-0.25907883, 0.0, 0.0, 0.0], [-0.109499998, 39.0, 40.0, 0.0], [-0.159237355, 0.0, 0.0, 0.0], [-0.959499955, 41.0, 42.0, 4.0], [0.198068291, 0.0, 0.0, 0.0], [-0.211452931, 0.0, 0.0, 0.0], [0.131048188, 0.0, 0.0, 0.0], [-0.0473774746, 0.0, 0.0, 0.0], [0.100022271, 0.0, 0.0, 0.0], [-0.0287389737, 0.0, 0.0, 0.0], [-0.316786021, 0.0, 0.0, 0.0], [0.0142603368, 0.0, 0.0, 0.0], [0.209562168, 0.0, 0.0, 0.0], [0.280110419, 0.0, 0.0, 0.0], [0.0389654748, 0.0, 0.0, 0.0], [-0.113773137, 0.0, 0.0, 0.0], [0.0723472759, 0.0, 0.0, 0.0], [0.231700033, 0.0, 0.0, 0.0], [-0.063188538, 0.0, 0.0, 0.0], [0.08900401, 0.0, 0.0, 0.0], [-0.087506026, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 18, 19, 35, 36, 10, 37, 38, 22, 39, 40, 24, 41, 42, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 20, 2, 5, 11, 21, 12, 23, 6, 13, 25, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_266(xs):
    #Predicts Class 2
    function_dict = np.array([[0.693500042, 1.0, 2.0, 2.0], [-0.186500013, 3.0, 4.0, 0.0], [-0.240500003, 5.0, 6.0, 0.0], [0.673500001, 7.0, 8.0, 2.0], [-0.903499961, 9.0, 10.0, 4.0], [-0.257499993, 11.0, 12.0, 0.0], [0.723500013, 13.0, 14.0, 2.0], [-0.431500018, 15.0, 16.0, 1.0], [-0.22572878, 0.0, 0.0, 0.0], [-0.799499989, 17.0, 18.0, 1.0], [-0.538499951, 19.0, 20.0, 1.0], [-0.895500004, 21.0, 22.0, 4.0], [-0.157958746, 0.0, 0.0, 0.0], [-0.19600001, 23.0, 24.0, 0.0], [-0.461000025, 25.0, 26.0, 1.0], [-0.982499957, 27.0, 28.0, 3.0], [-0.266499996, 29.0, 30.0, 0.0], [-0.142510101, 0.0, 0.0, 0.0], [-0.889999986, 31.0, 32.0, 3.0], [-0.9005, 33.0, 34.0, 3.0], [0.101838864, 0.0, 0.0, 0.0], [-0.165792137, 0.0, 0.0, 0.0], [-0.299000025, 35.0, 36.0, 0.0], [0.275998145, 0.0, 0.0, 0.0], [0.00954020582, 0.0, 0.0, 0.0], [-0.142499998, 37.0, 38.0, 0.0], [0.159335017, 0.0, 0.0, 0.0], [-0.00182800274, 0.0, 0.0, 0.0], [-0.085057959, 0.0, 0.0, 0.0], [-0.00546953222, 0.0, 0.0, 0.0], [0.256912738, 0.0, 0.0, 0.0], [0.134338886, 0.0, 0.0, 0.0], [-0.0885261148, 0.0, 0.0, 0.0], [-0.194692835, 0.0, 0.0, 0.0], [0.0865206793, 0.0, 0.0, 0.0], [0.0360638052, 0.0, 0.0, 0.0], [0.228836492, 0.0, 0.0, 0.0], [-0.134199187, 0.0, 0.0, 0.0], [0.130518526, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 8, 17, 31, 32, 33, 34, 20, 21, 35, 36, 12, 23, 24, 37, 38, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 18, 10, 19, 2, 5, 11, 22, 6, 13, 14, 25])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_267(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.613499999, 3.0, 4.0, 2.0], [0.141499996, 5.0, 6.0, 0.0], [-0.205500007, 7.0, 8.0, 0.0], [-0.601000011, 9.0, 10.0, 2.0], [-0.519999981, 11.0, 12.0, 2.0], [-0.16935423, 0.0, 0.0, 0.0], [-0.2095, 13.0, 14.0, 0.0], [-0.19749999, 15.0, 16.0, 0.0], [0.187362731, 0.0, 0.0, 0.0], [-0.99849999, 17.0, 18.0, 4.0], [-0.0147500001, 19.0, 20.0, 0.0], [-0.117907286, 0.0, 0.0, 0.0], [-0.822000027, 21.0, 22.0, 2.0], [-0.281929135, 0.0, 0.0, 0.0], [0.10905797, 0.0, 0.0, 0.0], [-0.146499991, 23.0, 24.0, 0.0], [-0.0757249445, 0.0, 0.0, 0.0], [-0.489000022, 25.0, 26.0, 2.0], [-0.00836009532, 0.0, 0.0, 0.0], [0.14156045, 0.0, 0.0, 0.0], [0.0322597325, 0.0, 0.0, 0.0], [-0.133026436, 0.0, 0.0, 0.0], [-0.0679896325, 0.0, 0.0, 0.0], [0.00284761167, 0.0, 0.0, 0.0], [0.131008327, 0.0, 0.0, 0.0], [-0.0328593664, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 23, 24, 9, 17, 25, 26, 19, 20, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 4, 10, 18, 2, 5, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_268(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.1505, 1.0, 2.0, 0.0], [-0.153499991, 3.0, 4.0, 0.0], [-0.144499987, 5.0, 6.0, 0.0], [-0.162499994, 7.0, 8.0, 0.0], [0.342855841, 0.0, 0.0, 0.0], [-0.19698447, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.168500006, 11.0, 12.0, 0.0], [-0.158500001, 13.0, 14.0, 0.0], [-0.795000017, 15.0, 16.0, 2.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.186500013, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.368382663, 0.0, 0.0, 0.0], [-0.154500008, 23.0, 24.0, 0.0], [-0.142500013, 25.0, 26.0, 0.0], [-0.0306000002, 27.0, 28.0, 0.0], [0.0145500004, 29.0, 30.0, 0.0], [-0.13350001, 31.0, 32.0, 0.0], [0.0150137683, 0.0, 0.0, 0.0], [-0.181330442, 0.0, 0.0, 0.0], [0.221282974, 0.0, 0.0, 0.0], [-0.103273578, 0.0, 0.0, 0.0], [-0.0190131906, 0.0, 0.0, 0.0], [0.0334667638, 0.0, 0.0, 0.0], [0.22317262, 0.0, 0.0, 0.0], [-0.00843064766, 0.0, 0.0, 0.0], [-0.322823435, 0.0, 0.0, 0.0], [0.101102509, 0.0, 0.0, 0.0], [0.287329614, 0.0, 0.0, 0.0], [-0.108723909, 0.0, 0.0, 0.0], [0.269987643, 0.0, 0.0, 0.0], [-0.0404292084, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 23, 24, 4, 5, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_269(xs):
    #Predicts Class 5
    function_dict = np.array([[0.392499983, 1.0, 2.0, 0.0], [0.344999999, 3.0, 4.0, 0.0], [0.415000021, 5.0, 6.0, 0.0], [-0.995499969, 7.0, 8.0, 1.0], [-0.999500036, 9.0, 10.0, 1.0], [0.409500003, 11.0, 12.0, 0.0], [0.424000025, 13.0, 14.0, 0.0], [0.309499979, 15.0, 16.0, 0.0], [0.105000004, 17.0, 18.0, 0.0], [-0.273474514, 0.0, 0.0, 0.0], [0.000501544098, 0.0, 0.0, 0.0], [0.401499987, 19.0, 20.0, 0.0], [0.303294152, 0.0, 0.0, 0.0], [-0.152531043, 0.0, 0.0, 0.0], [0.433499992, 21.0, 22.0, 0.0], [0.282499999, 23.0, 24.0, 0.0], [0.227600992, 0.0, 0.0, 0.0], [-0.654500008, 25.0, 26.0, 2.0], [-0.222794205, 0.0, 0.0, 0.0], [0.169359952, 0.0, 0.0, 0.0], [0.405499995, 27.0, 28.0, 0.0], [-0.999500036, 29.0, 30.0, 1.0], [0.436500013, 31.0, 32.0, 0.0], [0.00559186423, 0.0, 0.0, 0.0], [-0.241949856, 0.0, 0.0, 0.0], [0.0871653929, 0.0, 0.0, 0.0], [-0.125879392, 0.0, 0.0, 0.0], [-0.00214031665, 0.0, 0.0, 0.0], [-0.11993815, 0.0, 0.0, 0.0], [0.217056513, 0.0, 0.0, 0.0], [-0.119512469, 0.0, 0.0, 0.0], [-0.135776773, 0.0, 0.0, 0.0], [0.00970561523, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 25, 26, 18, 9, 10, 19, 27, 28, 12, 13, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 2, 5, 11, 20, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_270(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [0.557500005, 3.0, 4.0, 2.0], [-0.791499972, 5.0, 6.0, 1.0], [-0.266499996, 7.0, 8.0, 0.0], [0.620499969, 9.0, 10.0, 2.0], [-0.198053122, 0.0, 0.0, 0.0], [-0.779500008, 11.0, 12.0, 1.0], [-0.318499982, 13.0, 14.0, 0.0], [-0.235500008, 15.0, 16.0, 0.0], [0.185513318, 0.0, 0.0, 0.0], [0.0439903364, 0.0, 0.0, 0.0], [-0.784500003, 17.0, 18.0, 1.0], [-0.770500004, 19.0, 20.0, 1.0], [0.0357304104, 0.0, 0.0, 0.0], [-0.145369798, 0.0, 0.0, 0.0], [0.201229513, 0.0, 0.0, 0.0], [0.343500018, 21.0, 22.0, 2.0], [0.499000013, 23.0, 24.0, 2.0], [0.209801897, 0.0, 0.0, 0.0], [0.412499994, 25.0, 26.0, 2.0], [-0.766499996, 27.0, 28.0, 1.0], [-0.0888665468, 0.0, 0.0, 0.0], [0.0443347767, 0.0, 0.0, 0.0], [0.0537186563, 0.0, 0.0, 0.0], [-0.104756378, 0.0, 0.0, 0.0], [-0.204078063, 0.0, 0.0, 0.0], [-0.0226800349, 0.0, 0.0, 0.0], [0.168048516, 0.0, 0.0, 0.0], [-0.0142336581, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 21, 22, 9, 10, 5, 23, 24, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 8, 16, 4, 2, 6, 11, 17, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_271(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.809499979, 1.0, 2.0, 1.0], [-0.96449995, 3.0, 4.0, 4.0], [0.0695500001, 5.0, 6.0, 0.0], [-0.82099998, 7.0, 8.0, 1.0], [-0.192499995, 9.0, 10.0, 0.0], [-0.138500005, 11.0, 12.0, 0.0], [0.128864229, 0.0, 0.0, 0.0], [-0.975499988, 13.0, 14.0, 4.0], [0.142395824, 0.0, 0.0, 0.0], [0.516000032, 15.0, 16.0, 2.0], [0.0150160557, 0.0, 0.0, 0.0], [0.407499999, 17.0, 18.0, 2.0], [-0.135746658, 0.0, 0.0, 0.0], [-0.224999994, 19.0, 20.0, 0.0], [0.0138096577, 0.0, 0.0, 0.0], [-0.218650267, 0.0, 0.0, 0.0], [0.557999969, 21.0, 22.0, 2.0], [-0.95599997, 23.0, 24.0, 3.0], [0.548500001, 25.0, 26.0, 2.0], [-0.00962842908, 0.0, 0.0, 0.0], [-0.139001593, 0.0, 0.0, 0.0], [0.100779831, 0.0, 0.0, 0.0], [-0.133548453, 0.0, 0.0, 0.0], [0.112759769, 0.0, 0.0, 0.0], [-0.0561013333, 0.0, 0.0, 0.0], [-0.0388345458, 0.0, 0.0, 0.0], [0.0262444708, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 15, 21, 22, 10, 23, 24, 25, 26, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 16, 2, 5, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_272(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.986500025, 1.0, 2.0, 4.0], [-0.128270283, 0.0, 0.0, 0.0], [-0.278500021, 3.0, 4.0, 1.0], [-0.33950001, 5.0, 6.0, 0.0], [0.111085884, 0.0, 0.0, 0.0], [-0.117890388, 0.0, 0.0, 0.0], [0.62349999, 7.0, 8.0, 2.0], [0.587499976, 9.0, 10.0, 2.0], [-0.996500015, 11.0, 12.0, 3.0], [0.0133151496, 0.0, 0.0, 0.0], [-0.122091919, 0.0, 0.0, 0.0], [0.167356938, 0.0, 0.0, 0.0], [-0.000390197209, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 9, 10, 11, 12, 4])
    branch_indices = np.array([0, 2, 3, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_273(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.5625, 3.0, 4.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [0.534000039, 7.0, 8.0, 0.0], [-0.135274917, 0.0, 0.0, 0.0], [0.613499999, 9.0, 10.0, 0.0], [-0.0263837595, 0.0, 0.0, 0.0], [0.522500038, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [0.151346907, 0.0, 0.0, 0.0], [0.0522035547, 0.0, 0.0, 0.0], [0.521499991, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.549999952, 19.0, 20.0, 0.0], [-0.160419151, 0.0, 0.0, 0.0], [-0.0026932722, 0.0, 0.0, 0.0], [0.14762862, 0.0, 0.0, 0.0], [-0.194560468, 0.0, 0.0, 0.0], [0.0443208031, 0.0, 0.0, 0.0], [0.130002171, 0.0, 0.0, 0.0], [0.016269397, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 20, 14, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_274(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.407499999, 5.0, 6.0, 0.0], [-0.210914791, 0.0, 0.0, 0.0], [0.0712426379, 0.0, 0.0, 0.0], [-0.412999988, 7.0, 8.0, 0.0], [-0.393000007, 9.0, 10.0, 0.0], [0.00887329876, 0.0, 0.0, 0.0], [0.231710792, 0.0, 0.0, 0.0], [-0.142414302, 0.0, 0.0, 0.0], [-0.38349998, 11.0, 12.0, 0.0], [0.200278804, 0.0, 0.0, 0.0], [-0.343500018, 13.0, 14.0, 0.0], [-0.208922818, 0.0, 0.0, 0.0], [0.00337100518, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 2, 5, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_275(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.439999998, 3.0, 4.0, 0.0], [-0.407499999, 5.0, 6.0, 0.0], [-0.552999973, 7.0, 8.0, 0.0], [0.134377822, 0.0, 0.0, 0.0], [-0.412999988, 9.0, 10.0, 0.0], [-0.393000007, 11.0, 12.0, 0.0], [0.0831383243, 0.0, 0.0, 0.0], [-0.0803135112, 0.0, 0.0, 0.0], [0.00979653932, 0.0, 0.0, 0.0], [-0.225520581, 0.0, 0.0, 0.0], [0.159616768, 0.0, 0.0, 0.0], [-0.38349998, 13.0, 14.0, 0.0], [-0.268406302, 0.0, 0.0, 0.0], [-0.337500006, 15.0, 16.0, 0.0], [0.147091791, 0.0, 0.0, 0.0], [-0.00232171081, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 10, 11, 13, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 5, 6, 12, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_276(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.918500006, 1.0, 2.0, 3.0], [-0.931499958, 3.0, 4.0, 3.0], [-0.911499977, 5.0, 6.0, 3.0], [-0.962499976, 7.0, 8.0, 3.0], [0.592499971, 9.0, 10.0, 2.0], [0.195168659, 0.0, 0.0, 0.0], [-0.892500043, 11.0, 12.0, 3.0], [-0.683500051, 13.0, 14.0, 1.0], [-0.2685, 15.0, 16.0, 0.0], [-0.0301272664, 0.0, 0.0, 0.0], [-0.274605691, 0.0, 0.0, 0.0], [-0.118099883, 0.0, 0.0, 0.0], [-0.871500015, 17.0, 18.0, 4.0], [-0.740499973, 19.0, 20.0, 1.0], [0.52700001, 21.0, 22.0, 2.0], [-0.100216746, 0.0, 0.0, 0.0], [0.516499996, 23.0, 24.0, 2.0], [-0.156000003, 25.0, 26.0, 0.0], [-0.764999986, 27.0, 28.0, 4.0], [-0.0119919581, 0.0, 0.0, 0.0], [0.0550365746, 0.0, 0.0, 0.0], [-0.205911711, 0.0, 0.0, 0.0], [-0.015373447, 0.0, 0.0, 0.0], [0.194069311, 0.0, 0.0, 0.0], [0.0262235589, 0.0, 0.0, 0.0], [-0.0862242356, 0.0, 0.0, 0.0], [0.107172728, 0.0, 0.0, 0.0], [0.162474513, 0.0, 0.0, 0.0], [-0.0136947501, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 23, 24, 9, 10, 5, 11, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 2, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_277(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.874000013, 1.0, 2.0, 1.0], [-0.110838756, 0.0, 0.0, 0.0], [-0.912500024, 3.0, 4.0, 4.0], [-0.684499979, 5.0, 6.0, 1.0], [-0.688500047, 7.0, 8.0, 1.0], [-0.74150002, 9.0, 10.0, 1.0], [-0.948500037, 11.0, 12.0, 4.0], [-0.772000015, 13.0, 14.0, 1.0], [-0.434000015, 15.0, 16.0, 1.0], [-0.756500006, 17.0, 18.0, 1.0], [-0.986500025, 19.0, 20.0, 3.0], [-0.959499955, 21.0, 22.0, 4.0], [-0.33950001, 23.0, 24.0, 1.0], [-0.877499998, 25.0, 26.0, 4.0], [-0.273999989, 27.0, 28.0, 0.0], [-0.319999993, 29.0, 30.0, 0.0], [-0.332499981, 31.0, 32.0, 0.0], [-0.00359412213, 0.0, 0.0, 0.0], [0.179247051, 0.0, 0.0, 0.0], [-0.178246319, 0.0, 0.0, 0.0], [0.0305457823, 0.0, 0.0, 0.0], [0.0515948273, 0.0, 0.0, 0.0], [-0.0900080726, 0.0, 0.0, 0.0], [0.144440934, 0.0, 0.0, 0.0], [-0.0772637725, 0.0, 0.0, 0.0], [-0.157285124, 0.0, 0.0, 0.0], [0.0677135363, 0.0, 0.0, 0.0], [-0.0452409387, 0.0, 0.0, 0.0], [0.161215991, 0.0, 0.0, 0.0], [-0.0132402778, 0.0, 0.0, 0.0], [-0.197235897, 0.0, 0.0, 0.0], [-0.11786107, 0.0, 0.0, 0.0], [0.118542694, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_278(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.149500012, 1.0, 2.0, 0.0], [-0.174499989, 3.0, 4.0, 0.0], [-0.931499958, 5.0, 6.0, 4.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.875499964, 9.0, 10.0, 4.0], [-0.0578499995, 11.0, 12.0, 0.0], [-0.897500038, 13.0, 14.0, 4.0], [-0.864500046, 15.0, 16.0, 4.0], [-0.209779873, 0.0, 0.0, 0.0], [-0.625, 17.0, 18.0, 1.0], [-0.086440675, 0.0, 0.0, 0.0], [-0.997500002, 19.0, 20.0, 3.0], [0.0544821881, 0.0, 0.0, 0.0], [0.523000002, 21.0, 22.0, 2.0], [0.65199995, 23.0, 24.0, 2.0], [-0.874500036, 25.0, 26.0, 4.0], [-0.978999972, 27.0, 28.0, 3.0], [0.221879169, 0.0, 0.0, 0.0], [0.032983344, 0.0, 0.0, 0.0], [-0.0433267765, 0.0, 0.0, 0.0], [-0.200966761, 0.0, 0.0, 0.0], [-0.917500019, 29.0, 30.0, 4.0], [-0.00815542415, 0.0, 0.0, 0.0], [-0.184951708, 0.0, 0.0, 0.0], [-0.726999998, 31.0, 32.0, 4.0], [0.00380513398, 0.0, 0.0, 0.0], [-0.177595213, 0.0, 0.0, 0.0], [0.185791716, 0.0, 0.0, 0.0], [-0.0211095735, 0.0, 0.0, 0.0], [0.192321897, 0.0, 0.0, 0.0], [0.0350194201, 0.0, 0.0, 0.0], [0.140615523, 0.0, 0.0, 0.0], [-0.0150094284, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 17, 18, 10, 19, 20, 12, 29, 30, 22, 23, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 2, 5, 11, 6, 13, 21, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_279(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.00163000007, 3.0, 4.0, 0.0], [-0.088843897, 0.0, 0.0, 0.0], [-0.00413500005, 5.0, 6.0, 0.0], [-0.00132499996, 7.0, 8.0, 0.0], [-0.00496499985, 9.0, 10.0, 0.0], [-0.00322999991, 11.0, 12.0, 0.0], [-0.364491045, 0.0, 0.0, 0.0], [0.00588999968, 13.0, 14.0, 0.0], [-0.00885999948, 15.0, 16.0, 0.0], [-0.199938864, 0.0, 0.0, 0.0], [0.358701378, 0.0, 0.0, 0.0], [-0.00200500013, 17.0, 18.0, 0.0], [0.00325499987, 19.0, 20.0, 0.0], [0.00768500008, 21.0, 22.0, 0.0], [-0.000570363482, 0.0, 0.0, 0.0], [0.166607499, 0.0, 0.0, 0.0], [-0.102155715, 0.0, 0.0, 0.0], [0.343365222, 0.0, 0.0, 0.0], [0.048450429, 0.0, 0.0, 0.0], [-0.311962277, 0.0, 0.0, 0.0], [0.220198795, 0.0, 0.0, 0.0], [-0.00143858604, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 11, 17, 18, 7, 19, 20, 21, 22, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 12, 4, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_280(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0353999995, 1.0, 2.0, 0.0], [0.0293500014, 3.0, 4.0, 0.0], [0.0417999998, 5.0, 6.0, 0.0], [0.0260500014, 7.0, 8.0, 0.0], [-0.324518949, 0.0, 0.0, 0.0], [0.321264714, 0.0, 0.0, 0.0], [0.0447499976, 9.0, 10.0, 0.0], [0.0131000001, 11.0, 12.0, 0.0], [0.0271000005, 13.0, 14.0, 0.0], [-0.335691303, 0.0, 0.0, 0.0], [0.0506500006, 15.0, 16.0, 0.0], [0.00974999927, 17.0, 18.0, 0.0], [0.0192999989, 19.0, 20.0, 0.0], [0.322463125, 0.0, 0.0, 0.0], [0.0703748688, 0.0, 0.0, 0.0], [0.0477499999, 21.0, 22.0, 0.0], [0.0694999993, 23.0, 24.0, 0.0], [-0.0008380668, 0.0, 0.0, 0.0], [0.209695503, 0.0, 0.0, 0.0], [-0.330245227, 0.0, 0.0, 0.0], [-0.0351460315, 0.0, 0.0, 0.0], [0.0346461087, 0.0, 0.0, 0.0], [0.328470379, 0.0, 0.0, 0.0], [-0.170339435, 0.0, 0.0, 0.0], [0.0112492666, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_281(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.0126499999, 1.0, 2.0, 0.0], [-0.0318999998, 3.0, 4.0, 0.0], [0.00540999975, 5.0, 6.0, 0.0], [-0.0371000022, 7.0, 8.0, 0.0], [-0.301491767, 0.0, 0.0, 0.0], [0.291246265, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 4.0], [-0.0796000063, 11.0, 12.0, 0.0], [0.396854043, 0.0, 0.0, 0.0], [0.172499999, 13.0, 14.0, 0.0], [0.203661829, 0.0, 0.0, 0.0], [-0.113499999, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [-0.2274279, 0.0, 0.0, 0.0], [-0.923500001, 19.0, 20.0, 2.0], [-0.0123081971, 0.0, 0.0, 0.0], [0.233086959, 0.0, 0.0, 0.0], [-0.282108366, 0.0, 0.0, 0.0], [0.115646668, 0.0, 0.0, 0.0], [0.0106081702, 0.0, 0.0, 0.0], [-0.0987730399, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 13, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_282(xs):
    #Predicts Class 0
    function_dict = np.array([[0.259499997, 1.0, 2.0, 2.0], [-0.103602767, 0.0, 0.0, 0.0], [-0.824499965, 3.0, 4.0, 1.0], [-0.978500009, 5.0, 6.0, 3.0], [0.338, 7.0, 8.0, 2.0], [-0.840499997, 9.0, 10.0, 1.0], [-0.0352003314, 0.0, 0.0, 0.0], [-0.217500001, 11.0, 12.0, 0.0], [-0.315500021, 13.0, 14.0, 0.0], [-0.8495, 15.0, 16.0, 1.0], [0.173539534, 0.0, 0.0, 0.0], [-0.010535147, 0.0, 0.0, 0.0], [-0.141004264, 0.0, 0.0, 0.0], [-0.334500015, 17.0, 18.0, 0.0], [-0.266499996, 19.0, 20.0, 0.0], [0.0809804946, 0.0, 0.0, 0.0], [-0.062071979, 0.0, 0.0, 0.0], [0.0251156949, 0.0, 0.0, 0.0], [-0.177629426, 0.0, 0.0, 0.0], [0.0801884085, 0.0, 0.0, 0.0], [-0.00323783746, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 10, 6, 11, 12, 17, 18, 19, 20])
    branch_indices = np.array([0, 2, 3, 5, 9, 4, 7, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_283(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.375499994, 1.0, 2.0, 0.0], [0.103608668, 0.0, 0.0, 0.0], [-0.332499981, 3.0, 4.0, 0.0], [0.713999987, 5.0, 6.0, 2.0], [-0.319499999, 7.0, 8.0, 0.0], [-0.92050004, 9.0, 10.0, 4.0], [0.052131094, 0.0, 0.0, 0.0], [0.104021631, 0.0, 0.0, 0.0], [-0.371500015, 11.0, 12.0, 1.0], [-0.988999963, 13.0, 14.0, 3.0], [-0.198211357, 0.0, 0.0, 0.0], [-0.598500013, 15.0, 16.0, 1.0], [-0.922500014, 17.0, 18.0, 4.0], [0.0490299352, 0.0, 0.0, 0.0], [-0.0435599051, 0.0, 0.0, 0.0], [0.00635899138, 0.0, 0.0, 0.0], [-0.0631806403, 0.0, 0.0, 0.0], [0.0283731706, 0.0, 0.0, 0.0], [0.113079987, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 10, 6, 7, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 3, 5, 9, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_284(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.558500051, 1.0, 2.0, 1.0], [-0.24849999, 3.0, 4.0, 0.0], [-0.180500001, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.891499996, 9.0, 10.0, 4.0], [0.651499987, 11.0, 12.0, 2.0], [-0.130499989, 13.0, 14.0, 0.0], [-0.0253437087, 0.0, 0.0, 0.0], [-0.229507193, 0.0, 0.0, 0.0], [-0.596500039, 15.0, 16.0, 1.0], [-0.818499982, 17.0, 18.0, 4.0], [-0.426999986, 19.0, 20.0, 1.0], [0.66050005, 21.0, 22.0, 2.0], [-0.730999947, 23.0, 24.0, 4.0], [0.0811343193, 0.0, 0.0, 0.0], [-0.628000021, 25.0, 26.0, 1.0], [-0.95599997, 27.0, 28.0, 4.0], [-0.235708654, 0.0, 0.0, 0.0], [-0.592999995, 29.0, 30.0, 1.0], [-0.541499972, 31.0, 32.0, 1.0], [-0.305999994, 33.0, 34.0, 0.0], [-0.148586988, 0.0, 0.0, 0.0], [-0.968999982, 35.0, 36.0, 3.0], [-0.944499969, 37.0, 38.0, 4.0], [-0.15659824, 0.0, 0.0, 0.0], [0.026552571, 0.0, 0.0, 0.0], [-0.208770916, 0.0, 0.0, 0.0], [-0.0811233968, 0.0, 0.0, 0.0], [0.256716579, 0.0, 0.0, 0.0], [0.145690918, 0.0, 0.0, 0.0], [-0.0952229798, 0.0, 0.0, 0.0], [0.208831117, 0.0, 0.0, 0.0], [-0.0496357195, 0.0, 0.0, 0.0], [0.0177547615, 0.0, 0.0, 0.0], [0.28185308, 0.0, 0.0, 0.0], [-0.019999776, 0.0, 0.0, 0.0], [0.134613544, 0.0, 0.0, 0.0], [-0.122077391, 0.0, 0.0, 0.0], [0.10146495, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 25, 26, 27, 28, 17, 29, 30, 31, 32, 33, 34, 21, 35, 36, 37, 38, 24, 14])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 16, 10, 18, 2, 5, 11, 19, 20, 12, 22, 6, 13, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_285(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.654500008, 3.0, 4.0, 2.0], [0.141499996, 5.0, 6.0, 0.0], [-0.770500004, 7.0, 8.0, 2.0], [-0.00736000016, 9.0, 10.0, 0.0], [-0.519999981, 11.0, 12.0, 2.0], [-0.151928246, 0.0, 0.0, 0.0], [-0.795000017, 13.0, 14.0, 2.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.12650001, 17.0, 18.0, 0.0], [-0.637500048, 19.0, 20.0, 2.0], [-0.0147500001, 21.0, 22.0, 0.0], [-0.0859738365, 0.0, 0.0, 0.0], [-0.996500015, 23.0, 24.0, 1.0], [0.0145500004, 25.0, 26.0, 0.0], [-0.0693999976, 27.0, 28.0, 0.0], [0.0144500006, 29.0, 30.0, 0.0], [-0.260500014, 31.0, 32.0, 0.0], [-0.639999986, 33.0, 34.0, 2.0], [0.146747708, 0.0, 0.0, 0.0], [-0.997500002, 35.0, 36.0, 1.0], [-0.00726751052, 0.0, 0.0, 0.0], [0.13134855, 0.0, 0.0, 0.0], [-0.00112205895, 0.0, 0.0, 0.0], [0.136151597, 0.0, 0.0, 0.0], [0.289328843, 0.0, 0.0, 0.0], [-0.0874148086, 0.0, 0.0, 0.0], [0.0824176744, 0.0, 0.0, 0.0], [-0.00273727044, 0.0, 0.0, 0.0], [-0.176977113, 0.0, 0.0, 0.0], [0.0600916259, 0.0, 0.0, 0.0], [0.048389852, 0.0, 0.0, 0.0], [-0.0548745617, 0.0, 0.0, 0.0], [0.0182969235, 0.0, 0.0, 0.0], [0.176451772, 0.0, 0.0, 0.0], [-0.173041582, 0.0, 0.0, 0.0], [0.0291097593, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 19, 35, 36, 21, 22, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 9, 17, 18, 10, 20, 2, 5, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_286(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0850500017, 3.0, 4.0, 0.0], [0.0912000015, 5.0, 6.0, 0.0], [0.082949996, 7.0, 8.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [-0.244249091, 0.0, 0.0, 0.0], [0.0923999995, 11.0, 12.0, 0.0], [0.0757500008, 13.0, 14.0, 0.0], [-0.303312838, 0.0, 0.0, 0.0], [0.0873000026, 15.0, 16.0, 0.0], [0.0888999999, 17.0, 18.0, 0.0], [0.113428898, 0.0, 0.0, 0.0], [0.0941499993, 19.0, 20.0, 0.0], [0.074149996, 21.0, 22.0, 0.0], [0.0776499957, 23.0, 24.0, 0.0], [0.0860000029, 25.0, 26.0, 0.0], [0.298135608, 0.0, 0.0, 0.0], [-0.0283684805, 0.0, 0.0, 0.0], [0.0354509912, 0.0, 0.0, 0.0], [-0.250660062, 0.0, 0.0, 0.0], [0.111500002, 27.0, 28.0, 0.0], [0.0018126854, 0.0, 0.0, 0.0], [-0.251278937, 0.0, 0.0, 0.0], [0.297506869, 0.0, 0.0, 0.0], [0.0105684074, 0.0, 0.0, 0.0], [0.111142293, 0.0, 0.0, 0.0], [0.00948676653, 0.0, 0.0, 0.0], [0.135847226, 0.0, 0.0, 0.0], [-0.045184724, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 25, 26, 16, 17, 18, 5, 11, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 15, 10, 2, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_287(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.601000011, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 1.0], [0.102500007, 5.0, 6.0, 0.0], [-0.885499954, 7.0, 8.0, 2.0], [0.527500033, 9.0, 10.0, 0.0], [-0.324499995, 11.0, 12.0, 0.0], [0.113692112, 0.0, 0.0, 0.0], [-0.421000004, 13.0, 14.0, 0.0], [-0.177269533, 0.0, 0.0, 0.0], [0.005045, 15.0, 16.0, 0.0], [0.55250001, 17.0, 18.0, 0.0], [-0.045934543, 0.0, 0.0, 0.0], [-0.199859485, 0.0, 0.0, 0.0], [-0.136353999, 0.0, 0.0, 0.0], [-0.401000023, 19.0, 20.0, 0.0], [-0.193500012, 21.0, 22.0, 0.0], [-0.992499948, 23.0, 24.0, 1.0], [-0.199332327, 0.0, 0.0, 0.0], [0.0120247761, 0.0, 0.0, 0.0], [0.187586322, 0.0, 0.0, 0.0], [-0.004800661, 0.0, 0.0, 0.0], [0.07390517, 0.0, 0.0, 0.0], [-0.152014196, 0.0, 0.0, 0.0], [0.121235348, 0.0, 0.0, 0.0], [-0.121862493, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 19, 20, 8, 21, 22, 23, 24, 17, 18, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 14, 4, 9, 15, 16, 10, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_288(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.918500006, 1.0, 2.0, 3.0], [-0.931499958, 3.0, 4.0, 3.0], [-0.73300004, 5.0, 6.0, 1.0], [-0.962499976, 7.0, 8.0, 3.0], [-0.895500004, 9.0, 10.0, 4.0], [0.17657046, 0.0, 0.0, 0.0], [-0.874500036, 11.0, 12.0, 3.0], [-0.976500034, 13.0, 14.0, 3.0], [-0.696500003, 15.0, 16.0, 1.0], [-0.193976685, 0.0, 0.0, 0.0], [-0.0389900319, 0.0, 0.0, 0.0], [-0.909999967, 17.0, 18.0, 3.0], [-0.747500002, 19.0, 20.0, 3.0], [0.514500022, 21.0, 22.0, 2.0], [0.529500008, 23.0, 24.0, 2.0], [-0.743499994, 25.0, 26.0, 1.0], [-0.632499993, 27.0, 28.0, 1.0], [0.0698675662, 0.0, 0.0, 0.0], [-0.188921288, 0.0, 0.0, 0.0], [-0.592499971, 29.0, 30.0, 1.0], [-0.030862933, 0.0, 0.0, 0.0], [-0.0299815163, 0.0, 0.0, 0.0], [0.0307839811, 0.0, 0.0, 0.0], [0.0576674901, 0.0, 0.0, 0.0], [-0.122085437, 0.0, 0.0, 0.0], [0.0578530431, 0.0, 0.0, 0.0], [-0.139191359, 0.0, 0.0, 0.0], [0.235407263, 0.0, 0.0, 0.0], [-0.00210038153, 0.0, 0.0, 0.0], [0.018045539, 0.0, 0.0, 0.0], [0.140623033, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 27, 28, 9, 10, 5, 17, 18, 29, 30, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 2, 6, 11, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_289(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.921499968, 1.0, 2.0, 3.0], [-0.931499958, 3.0, 4.0, 3.0], [-0.713, 5.0, 6.0, 1.0], [-0.921499968, 7.0, 8.0, 4.0], [0.106625892, 0.0, 0.0, 0.0], [-0.166708171, 0.0, 0.0, 0.0], [-0.879500031, 9.0, 10.0, 3.0], [-0.932500005, 11.0, 12.0, 4.0], [-0.334500015, 13.0, 14.0, 0.0], [0.086062558, 0.0, 0.0, 0.0], [-0.482500017, 15.0, 16.0, 1.0], [0.436500013, 17.0, 18.0, 2.0], [-0.235500008, 19.0, 20.0, 0.0], [-0.353500009, 21.0, 22.0, 0.0], [-0.728500009, 23.0, 24.0, 1.0], [0.0279643927, 0.0, 0.0, 0.0], [-0.0735703856, 0.0, 0.0, 0.0], [0.0595531575, 0.0, 0.0, 0.0], [-0.0186882, 0.0, 0.0, 0.0], [-0.0505514368, 0.0, 0.0, 0.0], [0.210745662, 0.0, 0.0, 0.0], [-0.0433160141, 0.0, 0.0, 0.0], [-0.201329589, 0.0, 0.0, 0.0], [-0.114019848, 0.0, 0.0, 0.0], [0.073797062, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 5, 9, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_290(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.982499957, 3.0, 4.0, 3.0], [-0.756500006, 5.0, 6.0, 1.0], [-0.226500005, 7.0, 8.0, 0.0], [-0.202719972, 0.0, 0.0, 0.0], [0.14069511, 0.0, 0.0, 0.0], [-0.968500018, 9.0, 10.0, 4.0], [-0.117884859, 0.0, 0.0, 0.0], [-0.179500014, 11.0, 12.0, 0.0], [-0.985499978, 13.0, 14.0, 3.0], [-0.963500023, 15.0, 16.0, 4.0], [-0.798500001, 17.0, 18.0, 1.0], [-0.0525504537, 0.0, 0.0, 0.0], [-0.623000026, 19.0, 20.0, 1.0], [0.575500011, 21.0, 22.0, 2.0], [-0.994500041, 23.0, 24.0, 3.0], [-0.956499994, 25.0, 26.0, 4.0], [0.170689613, 0.0, 0.0, 0.0], [-0.0231716428, 0.0, 0.0, 0.0], [-0.236822248, 0.0, 0.0, 0.0], [0.0265079066, 0.0, 0.0, 0.0], [0.126838535, 0.0, 0.0, 0.0], [-0.125759706, 0.0, 0.0, 0.0], [0.221055999, 0.0, 0.0, 0.0], [-0.0123218382, 0.0, 0.0, 0.0], [-0.0823370218, 0.0, 0.0, 0.0], [0.012207591, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 17, 18, 12, 4, 5, 19, 20, 21, 22, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 8, 11, 2, 6, 9, 13, 14, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_291(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0307, 1.0, 2.0, 0.0], [-0.0339000002, 3.0, 4.0, 0.0], [-0.0156999994, 5.0, 6.0, 0.0], [-0.0382499993, 7.0, 8.0, 0.0], [-0.420460522, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.00963000022, 11.0, 12.0, 0.0], [-0.0394999981, 13.0, 14.0, 0.0], [0.220132887, 0.0, 0.0, 0.0], [-0.0285999998, 15.0, 16.0, 0.0], [-0.0269000009, 17.0, 18.0, 0.0], [-0.0106499996, 19.0, 20.0, 0.0], [-0.00550500024, 21.0, 22.0, 0.0], [-0.0460999981, 23.0, 24.0, 0.0], [-0.354689002, 0.0, 0.0, 0.0], [-0.0425344482, 0.0, 0.0, 0.0], [0.360709608, 0.0, 0.0, 0.0], [0.24480699, 0.0, 0.0, 0.0], [-0.02465, 25.0, 26.0, 0.0], [-0.0150499996, 27.0, 28.0, 0.0], [-0.39610061, 0.0, 0.0, 0.0], [-0.00885999948, 29.0, 30.0, 0.0], [-0.0052199997, 31.0, 32.0, 0.0], [-0.00495741935, 0.0, 0.0, 0.0], [0.110748693, 0.0, 0.0, 0.0], [-0.328693897, 0.0, 0.0, 0.0], [0.058232557, 0.0, 0.0, 0.0], [-0.309060454, 0.0, 0.0, 0.0], [0.0753223151, 0.0, 0.0, 0.0], [-0.0543949008, 0.0, 0.0, 0.0], [0.286257356, 0.0, 0.0, 0.0], [-0.347471029, 0.0, 0.0, 0.0], [0.00578279281, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 8, 4, 15, 16, 17, 25, 26, 27, 28, 20, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 10, 18, 6, 11, 19, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_292(xs):
    #Predicts Class 4
    function_dict = np.array([[0.152999997, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.192499995, 5.0, 6.0, 0.0], [0.107500002, 7.0, 8.0, 0.0], [-0.26216808, 0.0, 0.0, 0.0], [0.190973982, 0.0, 0.0, 0.0], [0.195499986, 9.0, 10.0, 0.0], [0.0945499986, 11.0, 12.0, 0.0], [0.147492334, 0.0, 0.0, 0.0], [-0.0813659579, 0.0, 0.0, 0.0], [0.196500003, 13.0, 14.0, 0.0], [0.0825999975, 15.0, 16.0, 0.0], [-0.167921662, 0.0, 0.0, 0.0], [0.143334016, 0.0, 0.0, 0.0], [-0.0213224385, 0.0, 0.0, 0.0], [-0.0021893559, 0.0, 0.0, 0.0], [0.0479759611, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_293(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.0864178613, 0.0, 0.0, 0.0], [-0.169499993, 3.0, 4.0, 0.0], [-0.382499993, 5.0, 6.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.394500017, 9.0, 10.0, 0.0], [-0.706500053, 11.0, 12.0, 2.0], [-0.167499989, 13.0, 14.0, 0.0], [-0.155499995, 15.0, 16.0, 0.0], [-0.401000023, 17.0, 18.0, 0.0], [0.146302477, 0.0, 0.0, 0.0], [-0.997500002, 19.0, 20.0, 1.0], [0.0347141363, 0.0, 0.0, 0.0], [0.183926538, 0.0, 0.0, 0.0], [-0.1655, 21.0, 22.0, 0.0], [-0.236821607, 0.0, 0.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [0.00983640365, 0.0, 0.0, 0.0], [-0.262253881, 0.0, 0.0, 0.0], [-0.245495662, 0.0, 0.0, 0.0], [-0.0641897246, 0.0, 0.0, 0.0], [-0.0525199845, 0.0, 0.0, 0.0], [0.138001531, 0.0, 0.0, 0.0], [-0.0100825755, 0.0, 0.0, 0.0], [0.0552209392, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 10, 19, 20, 12, 13, 21, 22, 15, 23, 24])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 11, 4, 7, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_294(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [-0.827499986, 3.0, 4.0, 1.0], [-0.264499992, 5.0, 6.0, 0.0], [-0.943500042, 7.0, 8.0, 4.0], [-0.916499972, 9.0, 10.0, 4.0], [0.595499992, 11.0, 12.0, 2.0], [-0.782500029, 13.0, 14.0, 1.0], [0.0979757383, 0.0, 0.0, 0.0], [0.00613439688, 0.0, 0.0, 0.0], [0.572000027, 15.0, 16.0, 2.0], [-0.990499973, 17.0, 18.0, 3.0], [-0.954999983, 19.0, 20.0, 4.0], [-0.0823760107, 0.0, 0.0, 0.0], [-0.237500012, 21.0, 22.0, 0.0], [-0.253499985, 23.0, 24.0, 0.0], [-0.243761778, 0.0, 0.0, 0.0], [0.659500003, 25.0, 26.0, 2.0], [-0.865499973, 27.0, 28.0, 4.0], [0.0965301245, 0.0, 0.0, 0.0], [0.00348045537, 0.0, 0.0, 0.0], [0.259774238, 0.0, 0.0, 0.0], [0.223586649, 0.0, 0.0, 0.0], [-0.228500009, 29.0, 30.0, 0.0], [0.636000037, 31.0, 32.0, 2.0], [-0.966500044, 33.0, 34.0, 4.0], [0.0460658222, 0.0, 0.0, 0.0], [-0.0883951783, 0.0, 0.0, 0.0], [0.0334044732, 0.0, 0.0, 0.0], [-0.141747877, 0.0, 0.0, 0.0], [-0.208980396, 0.0, 0.0, 0.0], [0.0431578122, 0.0, 0.0, 0.0], [-0.18605274, 0.0, 0.0, 0.0], [0.0350490138, 0.0, 0.0, 0.0], [-0.0781235695, 0.0, 0.0, 0.0], [0.0141467862, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 15, 25, 26, 27, 28, 18, 19, 20, 12, 21, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 4, 9, 16, 10, 17, 2, 5, 11, 6, 13, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_295(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [-0.977499962, 3.0, 4.0, 4.0], [-0.940500021, 5.0, 6.0, 3.0], [0.164687142, 0.0, 0.0, 0.0], [0.3495, 7.0, 8.0, 2.0], [-0.975499988, 9.0, 10.0, 4.0], [-0.961500049, 11.0, 12.0, 4.0], [-0.113860674, 0.0, 0.0, 0.0], [-0.24149999, 13.0, 14.0, 0.0], [-0.210500002, 15.0, 16.0, 0.0], [0.350499988, 17.0, 18.0, 2.0], [0.0136322649, 0.0, 0.0, 0.0], [-0.190440953, 0.0, 0.0, 0.0], [-0.953500032, 19.0, 20.0, 4.0], [-0.74150002, 21.0, 22.0, 1.0], [-0.776000023, 23.0, 24.0, 1.0], [-0.780499995, 25.0, 26.0, 1.0], [-0.178499997, 27.0, 28.0, 0.0], [-0.971500039, 29.0, 30.0, 4.0], [-0.0994311497, 0.0, 0.0, 0.0], [0.0344405882, 0.0, 0.0, 0.0], [0.201424614, 0.0, 0.0, 0.0], [-0.021142602, 0.0, 0.0, 0.0], [-0.0818527415, 0.0, 0.0, 0.0], [0.131705806, 0.0, 0.0, 0.0], [-0.0358965993, 0.0, 0.0, 0.0], [-0.184448019, 0.0, 0.0, 0.0], [0.191170797, 0.0, 0.0, 0.0], [0.0451863483, 0.0, 0.0, 0.0], [0.108395651, 0.0, 0.0, 0.0], [-0.0352370329, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 11, 12])
    branch_indices = np.array([0, 1, 4, 8, 13, 14, 2, 5, 9, 15, 16, 10, 17, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_296(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.871500015, 3.0, 4.0, 3.0], [0.0909030586, 0.0, 0.0, 0.0], [-0.928499997, 5.0, 6.0, 3.0], [-0.765499949, 7.0, 8.0, 3.0], [-0.962499976, 9.0, 10.0, 3.0], [0.637499988, 11.0, 12.0, 2.0], [-0.115342446, 0.0, 0.0, 0.0], [0.0262202732, 0.0, 0.0, 0.0], [-0.743499994, 13.0, 14.0, 1.0], [-0.946500003, 15.0, 16.0, 4.0], [-0.201999992, 17.0, 18.0, 0.0], [0.200314745, 0.0, 0.0, 0.0], [-0.0555805489, 0.0, 0.0, 0.0], [0.0135309296, 0.0, 0.0, 0.0], [-0.185871914, 0.0, 0.0, 0.0], [-0.00905732624, 0.0, 0.0, 0.0], [-0.221718982, 0.0, 0.0, 0.0], [0.110072695, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 17, 18, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_297(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0743499994, 1.0, 2.0, 0.0], [-0.0762000009, 3.0, 4.0, 0.0], [-0.0728500038, 5.0, 6.0, 0.0], [-0.0786499977, 7.0, 8.0, 0.0], [0.323731661, 0.0, 0.0, 0.0], [-0.344618946, 0.0, 0.0, 0.0], [-0.0720499977, 9.0, 10.0, 0.0], [-0.0801500008, 11.0, 12.0, 0.0], [-0.255370826, 0.0, 0.0, 0.0], [0.452077508, 0.0, 0.0, 0.0], [-0.0698499978, 13.0, 14.0, 0.0], [-0.0898000002, 15.0, 16.0, 0.0], [0.338000894, 0.0, 0.0, 0.0], [-0.317241013, 0.0, 0.0, 0.0], [-0.0658500046, 17.0, 18.0, 0.0], [0.00646585692, 0.0, 0.0, 0.0], [-0.277526557, 0.0, 0.0, 0.0], [0.208149895, 0.0, 0.0, 0.0], [-0.00430095335, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_298(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.0894500017, 3.0, 4.0, 0.0], [0.09472958, 0.0, 0.0, 0.0], [0.0867500007, 5.0, 6.0, 0.0], [0.1105, 7.0, 8.0, 0.0], [0.0854000002, 9.0, 10.0, 0.0], [0.0883999988, 11.0, 12.0, 0.0], [0.101500005, 13.0, 14.0, 0.0], [0.157999992, 15.0, 16.0, 0.0], [0.0825999975, 17.0, 18.0, 0.0], [-0.282972246, 0.0, 0.0, 0.0], [0.19189553, 0.0, 0.0, 0.0], [0.0888999999, 19.0, 20.0, 0.0], [0.0941499993, 21.0, 22.0, 0.0], [-0.223683655, 0.0, 0.0, 0.0], [0.166490555, 0.0, 0.0, 0.0], [0.190499991, 23.0, 24.0, 0.0], [-0.00100791978, 0.0, 0.0, 0.0], [0.176659271, 0.0, 0.0, 0.0], [-0.0323830731, 0.0, 0.0, 0.0], [0.0167918578, 0.0, 0.0, 0.0], [-0.155811355, 0.0, 0.0, 0.0], [0.141808778, 0.0, 0.0, 0.0], [-0.226439759, 0.0, 0.0, 0.0], [0.0119781913, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 11, 19, 20, 21, 22, 14, 15, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 12, 4, 7, 13, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_299(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.164499998, 3.0, 4.0, 0.0], [-0.154500008, 5.0, 6.0, 0.0], [-0.166500002, 7.0, 8.0, 0.0], [-0.266726017, 0.0, 0.0, 0.0], [0.198527172, 0.0, 0.0, 0.0], [-0.1505, 9.0, 10.0, 0.0], [-0.401000023, 11.0, 12.0, 0.0], [0.116949432, 0.0, 0.0, 0.0], [-0.102800585, 0.0, 0.0, 0.0], [-0.0802500024, 13.0, 14.0, 0.0], [-0.420000017, 15.0, 16.0, 0.0], [-0.38349998, 17.0, 18.0, 0.0], [0.158329979, 0.0, 0.0, 0.0], [-0.0748500004, 19.0, 20.0, 0.0], [-0.0398916155, 0.0, 0.0, 0.0], [0.118006811, 0.0, 0.0, 0.0], [-0.152249515, 0.0, 0.0, 0.0], [-0.0151671097, 0.0, 0.0, 0.0], [-0.254240006, 0.0, 0.0, 0.0], [0.00584347453, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_300(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 1.0], [0.576499999, 3.0, 4.0, 2.0], [-0.166000009, 5.0, 6.0, 0.0], [0.559499979, 7.0, 8.0, 2.0], [-0.706499994, 9.0, 10.0, 1.0], [-0.879500031, 11.0, 12.0, 4.0], [-0.104499996, 13.0, 14.0, 0.0], [0.539499998, 15.0, 16.0, 2.0], [-0.237000003, 17.0, 18.0, 0.0], [0.628499985, 19.0, 20.0, 2.0], [-0.823499978, 21.0, 22.0, 4.0], [-0.617499948, 23.0, 24.0, 1.0], [-0.75849998, 25.0, 26.0, 4.0], [-0.937999964, 27.0, 28.0, 4.0], [-0.13913092, 0.0, 0.0, 0.0], [-0.70449996, 29.0, 30.0, 1.0], [-0.963999987, 31.0, 32.0, 4.0], [0.0400412716, 0.0, 0.0, 0.0], [-0.227296039, 0.0, 0.0, 0.0], [-0.977999985, 33.0, 34.0, 3.0], [-0.990999997, 35.0, 36.0, 3.0], [-0.997500002, 37.0, 38.0, 3.0], [-0.0625019819, 0.0, 0.0, 0.0], [-0.62650001, 39.0, 40.0, 1.0], [-0.230510324, 0.0, 0.0, 0.0], [-0.250499994, 41.0, 42.0, 0.0], [0.722000003, 43.0, 44.0, 2.0], [0.232958451, 0.0, 0.0, 0.0], [-0.897500038, 45.0, 46.0, 4.0], [0.0118991183, 0.0, 0.0, 0.0], [-0.0995076522, 0.0, 0.0, 0.0], [-0.152951673, 0.0, 0.0, 0.0], [0.195719913, 0.0, 0.0, 0.0], [0.208684281, 0.0, 0.0, 0.0], [-0.106791034, 0.0, 0.0, 0.0], [-0.148943394, 0.0, 0.0, 0.0], [0.045404993, 0.0, 0.0, 0.0], [0.0261314008, 0.0, 0.0, 0.0], [0.218650267, 0.0, 0.0, 0.0], [-0.109615162, 0.0, 0.0, 0.0], [0.0424132571, 0.0, 0.0, 0.0], [-0.0506794378, 0.0, 0.0, 0.0], [0.117092185, 0.0, 0.0, 0.0], [0.0228915792, 0.0, 0.0, 0.0], [-0.157450154, 0.0, 0.0, 0.0], [-0.0904705077, 0.0, 0.0, 0.0], [0.0715971217, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 17, 18, 33, 34, 35, 36, 37, 38, 22, 39, 40, 24, 41, 42, 43, 44, 27, 45, 46, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 19, 20, 10, 21, 2, 5, 11, 23, 12, 25, 26, 6, 13, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_301(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.752499998, 1.0, 2.0, 1.0], [-0.763499975, 3.0, 4.0, 1.0], [-0.74150002, 5.0, 6.0, 1.0], [-0.767500043, 7.0, 8.0, 1.0], [-0.238999993, 9.0, 10.0, 0.0], [-0.218499988, 11.0, 12.0, 0.0], [-0.734500051, 13.0, 14.0, 1.0], [-0.78550005, 15.0, 16.0, 1.0], [0.185583204, 0.0, 0.0, 0.0], [-0.0107998969, 0.0, 0.0, 0.0], [-0.20886679, 0.0, 0.0, 0.0], [0.210715681, 0.0, 0.0, 0.0], [-0.0347835943, 0.0, 0.0, 0.0], [-0.952000022, 17.0, 18.0, 4.0], [-0.86650002, 19.0, 20.0, 4.0], [-0.797500014, 21.0, 22.0, 1.0], [-0.187000006, 23.0, 24.0, 0.0], [-0.220098913, 0.0, 0.0, 0.0], [0.0890884772, 0.0, 0.0, 0.0], [-0.17750001, 25.0, 26.0, 0.0], [-0.703500032, 27.0, 28.0, 1.0], [-0.0302102063, 0.0, 0.0, 0.0], [0.0753388777, 0.0, 0.0, 0.0], [-0.166435212, 0.0, 0.0, 0.0], [0.0625394136, 0.0, 0.0, 0.0], [0.0378387384, 0.0, 0.0, 0.0], [-0.0736721754, 0.0, 0.0, 0.0], [0.0684666485, 0.0, 0.0, 0.0], [-0.15906477, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 11, 12, 17, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 13, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_302(xs):
    #Predicts Class 2
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [0.478500009, 3.0, 4.0, 2.0], [0.513499975, 5.0, 6.0, 2.0], [0.461499989, 7.0, 8.0, 2.0], [0.250896931, 0.0, 0.0, 0.0], [-0.172951877, 0.0, 0.0, 0.0], [-0.969500005, 9.0, 10.0, 4.0], [0.436500013, 11.0, 12.0, 2.0], [-0.14388229, 0.0, 0.0, 0.0], [-0.203500003, 13.0, 14.0, 0.0], [-0.203500003, 15.0, 16.0, 0.0], [-0.779500008, 17.0, 18.0, 1.0], [-0.179500014, 19.0, 20.0, 0.0], [-0.215000004, 21.0, 22.0, 0.0], [-0.244618937, 0.0, 0.0, 0.0], [-0.661000013, 23.0, 24.0, 1.0], [-0.166500002, 25.0, 26.0, 0.0], [-0.10804639, 0.0, 0.0, 0.0], [0.0223330949, 0.0, 0.0, 0.0], [0.159614429, 0.0, 0.0, 0.0], [-0.0951415971, 0.0, 0.0, 0.0], [-0.0956478938, 0.0, 0.0, 0.0], [0.152818203, 0.0, 0.0, 0.0], [-0.258921206, 0.0, 0.0, 0.0], [0.0153591698, 0.0, 0.0, 0.0], [0.123902321, 0.0, 0.0, 0.0], [-0.0186223816, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 21, 22, 14, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 13, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_303(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0307, 1.0, 2.0, 0.0], [-0.0339000002, 3.0, 4.0, 0.0], [-0.0297999997, 5.0, 6.0, 0.0], [-0.0382499993, 7.0, 8.0, 0.0], [-0.344722241, 0.0, 0.0, 0.0], [0.346584469, 0.0, 0.0, 0.0], [-0.02795, 9.0, 10.0, 0.0], [-0.0394999981, 11.0, 12.0, 0.0], [0.176316053, 0.0, 0.0, 0.0], [-0.278106153, 0.0, 0.0, 0.0], [-0.0156999994, 13.0, 14.0, 0.0], [-0.0496499985, 15.0, 16.0, 0.0], [-0.302088022, 0.0, 0.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.00963000022, 19.0, 20.0, 0.0], [0.00394292781, 0.0, 0.0, 0.0], [-0.0741847232, 0.0, 0.0, 0.0], [0.32828939, 0.0, 0.0, 0.0], [-0.0702191964, 0.0, 0.0, 0.0], [-0.172856092, 0.0, 0.0, 0.0], [0.00675176037, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_304(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0760499984, 1.0, 2.0, 0.0], [0.0740500018, 3.0, 4.0, 0.0], [0.0825999975, 5.0, 6.0, 0.0], [0.0560500026, 7.0, 8.0, 0.0], [0.241752148, 0.0, 0.0, 0.0], [0.0776499957, 9.0, 10.0, 0.0], [0.0854000002, 11.0, 12.0, 0.0], [0.0477499999, 13.0, 14.0, 0.0], [-0.934000015, 15.0, 16.0, 2.0], [-0.0547128282, 0.0, 0.0, 0.0], [-0.266402423, 0.0, 0.0, 0.0], [0.0847499967, 17.0, 18.0, 0.0], [0.152999997, 19.0, 20.0, 0.0], [0.0417999998, 21.0, 22.0, 0.0], [0.0506500006, 23.0, 24.0, 0.0], [-0.296032012, 0.0, 0.0, 0.0], [0.112660147, 0.0, 0.0, 0.0], [0.0211049374, 0.0, 0.0, 0.0], [0.175695866, 0.0, 0.0, 0.0], [0.111500002, 25.0, 26.0, 0.0], [0.192499995, 27.0, 28.0, 0.0], [0.00298587768, 0.0, 0.0, 0.0], [-0.153845787, 0.0, 0.0, 0.0], [0.284979284, 0.0, 0.0, 0.0], [0.0387398489, 0.0, 0.0, 0.0], [-0.00723084761, 0.0, 0.0, 0.0], [-0.248925254, 0.0, 0.0, 0.0], [0.160172552, 0.0, 0.0, 0.0], [-0.0133062853, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 4, 9, 10, 17, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_305(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.654500008, 1.0, 2.0, 2.0], [-0.972000003, 3.0, 4.0, 2.0], [0.00526000001, 5.0, 6.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.0811000019, 9.0, 10.0, 0.0], [-0.337500006, 11.0, 12.0, 0.0], [-0.996500015, 13.0, 14.0, 1.0], [-0.169499993, 15.0, 16.0, 0.0], [-0.0331500024, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [-0.0355000012, 21.0, 22.0, 0.0], [0.00440602936, 0.0, 0.0, 0.0], [-0.198726758, 0.0, 0.0, 0.0], [-0.102017298, 0.0, 0.0, 0.0], [0.148364395, 0.0, 0.0, 0.0], [-0.380499989, 23.0, 24.0, 0.0], [-0.163500011, 25.0, 26.0, 0.0], [-0.149500012, 27.0, 28.0, 0.0], [-0.0123999994, 29.0, 30.0, 0.0], [-0.191038266, 0.0, 0.0, 0.0], [-0.996500015, 31.0, 32.0, 1.0], [-0.999500036, 33.0, 34.0, 4.0], [0.359499991, 35.0, 36.0, 0.0], [0.0309774075, 0.0, 0.0, 0.0], [-0.214018255, 0.0, 0.0, 0.0], [0.060286466, 0.0, 0.0, 0.0], [0.16643782, 0.0, 0.0, 0.0], [0.000871134398, 0.0, 0.0, 0.0], [-0.300840855, 0.0, 0.0, 0.0], [0.282926708, 0.0, 0.0, 0.0], [-0.0116518186, 0.0, 0.0, 0.0], [0.0916996822, 0.0, 0.0, 0.0], [-0.051994618, 0.0, 0.0, 0.0], [0.362373382, 0.0, 0.0, 0.0], [0.0773505643, 0.0, 0.0, 0.0], [-0.172313288, 0.0, 0.0, 0.0], [0.10733971, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 29, 30, 19, 31, 32, 33, 34, 35, 36, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 20, 10, 21, 22, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_306(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.982499957, 1.0, 2.0, 4.0], [0.306999981, 3.0, 4.0, 2.0], [-0.965499997, 5.0, 6.0, 3.0], [-0.109885477, 0.0, 0.0, 0.0], [-0.00952390209, 0.0, 0.0, 0.0], [-0.730499983, 7.0, 8.0, 4.0], [-0.725499988, 9.0, 10.0, 4.0], [-0.847499967, 11.0, 12.0, 4.0], [0.779500008, 13.0, 14.0, 2.0], [0.365999997, 15.0, 16.0, 2.0], [-0.124551304, 0.0, 0.0, 0.0], [-0.978500009, 17.0, 18.0, 3.0], [-0.816499949, 19.0, 20.0, 4.0], [0.185031444, 0.0, 0.0, 0.0], [-0.054969959, 0.0, 0.0, 0.0], [-0.062128026, 0.0, 0.0, 0.0], [-0.95449996, 21.0, 22.0, 3.0], [0.0106756976, 0.0, 0.0, 0.0], [-0.0790415108, 0.0, 0.0, 0.0], [-0.196574867, 0.0, 0.0, 0.0], [-0.0275734011, 0.0, 0.0, 0.0], [0.142523676, 0.0, 0.0, 0.0], [0.031753011, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 17, 18, 19, 20, 13, 14, 15, 21, 22, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 8, 6, 9, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_307(xs):
    #Predicts Class 1
    function_dict = np.array([[0.0696500018, 1.0, 2.0, 0.0], [-0.107500002, 3.0, 4.0, 0.0], [0.0861719623, 0.0, 0.0, 0.0], [-0.192499995, 5.0, 6.0, 0.0], [-0.190989748, 0.0, 0.0, 0.0], [-0.194499999, 7.0, 8.0, 0.0], [0.557500005, 9.0, 10.0, 2.0], [-0.199499995, 11.0, 12.0, 0.0], [-0.167087302, 0.0, 0.0, 0.0], [0.457000017, 13.0, 14.0, 2.0], [-0.1158529, 0.0, 0.0, 0.0], [-0.00369609008, 0.0, 0.0, 0.0], [0.147184581, 0.0, 0.0, 0.0], [-0.00341438688, 0.0, 0.0, 0.0], [0.180455714, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_308(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [0.792500019, 3.0, 4.0, 2.0], [-0.50999999, 5.0, 6.0, 1.0], [-0.277500004, 7.0, 8.0, 1.0], [-0.107851848, 0.0, 0.0, 0.0], [-0.00400974881, 0.0, 0.0, 0.0], [0.121432357, 0.0, 0.0, 0.0], [-0.300500005, 9.0, 10.0, 0.0], [0.0767053217, 0.0, 0.0, 0.0], [-0.997500002, 11.0, 12.0, 3.0], [-0.218499988, 13.0, 14.0, 0.0], [0.0478757247, 0.0, 0.0, 0.0], [-0.143935859, 0.0, 0.0, 0.0], [0.0313310437, 0.0, 0.0, 0.0], [-0.0181015059, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_309(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.654500008, 1.0, 2.0, 2.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.644500017, 5.0, 6.0, 2.0], [-0.120499998, 7.0, 8.0, 0.0], [-0.120499998, 9.0, 10.0, 0.0], [0.126878664, 0.0, 0.0, 0.0], [0.0921500027, 11.0, 12.0, 0.0], [-0.125499994, 13.0, 14.0, 0.0], [-0.118500002, 15.0, 16.0, 0.0], [-0.2095, 17.0, 18.0, 0.0], [-0.996500015, 19.0, 20.0, 1.0], [-0.0580499992, 21.0, 22.0, 0.0], [-0.109957568, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [-0.329051822, 0.0, 0.0, 0.0], [0.244142279, 0.0, 0.0, 0.0], [-0.972000003, 25.0, 26.0, 2.0], [-0.120530672, 0.0, 0.0, 0.0], [0.215509236, 0.0, 0.0, 0.0], [0.400000006, 27.0, 28.0, 0.0], [0.0298582092, 0.0, 0.0, 0.0], [-0.208499998, 29.0, 30.0, 0.0], [-0.515500009, 31.0, 32.0, 2.0], [-0.0266569611, 0.0, 0.0, 0.0], [0.102879681, 0.0, 0.0, 0.0], [0.00912918616, 0.0, 0.0, 0.0], [-0.0299481563, 0.0, 0.0, 0.0], [-0.177157968, 0.0, 0.0, 0.0], [0.0266803671, 0.0, 0.0, 0.0], [0.0996280536, 0.0, 0.0, 0.0], [-0.134164348, 0.0, 0.0, 0.0], [0.177096739, 0.0, 0.0, 0.0], [0.0064167385, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 25, 26, 17, 18, 27, 28, 20, 5, 29, 30, 31, 32, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 4, 9, 10, 19, 2, 6, 11, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_310(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 2.0], [0.0577500015, 5.0, 6.0, 0.0], [-0.192499995, 7.0, 8.0, 0.0], [0.0234500002, 9.0, 10.0, 0.0], [-0.02575, 11.0, 12.0, 0.0], [0.0957500041, 13.0, 14.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [-0.168500006, 17.0, 18.0, 0.0], [0.00945500005, 19.0, 20.0, 0.0], [0.0303000007, 21.0, 22.0, 0.0], [-0.0403999984, 23.0, 24.0, 0.0], [-0.662999988, 25.0, 26.0, 2.0], [0.198078647, 0.0, 0.0, 0.0], [-0.0775642395, 0.0, 0.0, 0.0], [-0.274500012, 27.0, 28.0, 0.0], [0.333132595, 0.0, 0.0, 0.0], [-0.186500013, 29.0, 30.0, 0.0], [-0.162, 31.0, 32.0, 0.0], [-0.851999998, 33.0, 34.0, 2.0], [-0.307065696, 0.0, 0.0, 0.0], [0.310565263, 0.0, 0.0, 0.0], [0.0683500022, 35.0, 36.0, 0.0], [-0.1505, 37.0, 38.0, 0.0], [0.223299831, 0.0, 0.0, 0.0], [-0.05462946, 0.0, 0.0, 0.0], [-0.195985407, 0.0, 0.0, 0.0], [0.0172603335, 0.0, 0.0, 0.0], [-0.121424615, 0.0, 0.0, 0.0], [0.00158440508, 0.0, 0.0, 0.0], [-0.246768743, 0.0, 0.0, 0.0], [0.11179442, 0.0, 0.0, 0.0], [-0.00668211002, 0.0, 0.0, 0.0], [0.170262516, 0.0, 0.0, 0.0], [-0.0111093931, 0.0, 0.0, 0.0], [-0.08971899, 0.0, 0.0, 0.0], [0.208079249, 0.0, 0.0, 0.0], [0.0074614156, 0.0, 0.0, 0.0], [-0.149455354, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 29, 30, 31, 32, 33, 34, 20, 21, 35, 36, 37, 38, 24, 25, 26, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 18, 4, 9, 19, 10, 22, 2, 5, 11, 23, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_311(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.164499998, 3.0, 4.0, 0.0], [-0.0318999998, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [-0.251129389, 0.0, 0.0, 0.0], [-0.0371000022, 9.0, 10.0, 0.0], [-0.0126499999, 11.0, 12.0, 0.0], [-0.168500006, 13.0, 14.0, 0.0], [-0.99849999, 15.0, 16.0, 4.0], [-0.0742499977, 17.0, 18.0, 0.0], [0.287770689, 0.0, 0.0, 0.0], [-0.276464969, 0.0, 0.0, 0.0], [0.00540999975, 19.0, 20.0, 0.0], [-0.296499997, 21.0, 22.0, 0.0], [-0.1655, 23.0, 24.0, 0.0], [-0.194499999, 25.0, 26.0, 0.0], [-0.0874854103, 0.0, 0.0, 0.0], [-0.080400005, 27.0, 28.0, 0.0], [-0.157055303, 0.0, 0.0, 0.0], [0.225389317, 0.0, 0.0, 0.0], [0.198500007, 29.0, 30.0, 0.0], [-0.0319715776, 0.0, 0.0, 0.0], [0.167648092, 0.0, 0.0, 0.0], [-0.292340636, 0.0, 0.0, 0.0], [0.0777304545, 0.0, 0.0, 0.0], [0.0559639335, 0.0, 0.0, 0.0], [0.259465516, 0.0, 0.0, 0.0], [0.0125823189, 0.0, 0.0, 0.0], [0.191873997, 0.0, 0.0, 0.0], [-0.176842555, 0.0, 0.0, 0.0], [0.00651093014, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 16, 4, 27, 28, 18, 10, 11, 19, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 2, 5, 9, 17, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_312(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.733999968, 3.0, 4.0, 1.0], [-0.792500019, 5.0, 6.0, 1.0], [-0.825999975, 7.0, 8.0, 1.0], [-0.176684171, 0.0, 0.0, 0.0], [-0.930500031, 9.0, 10.0, 4.0], [-0.973500013, 11.0, 12.0, 4.0], [-0.1032608, 0.0, 0.0, 0.0], [0.141650006, 0.0, 0.0, 0.0], [-0.997500002, 13.0, 14.0, 3.0], [-0.809499979, 15.0, 16.0, 1.0], [0.511500001, 17.0, 18.0, 2.0], [-0.199499995, 19.0, 20.0, 0.0], [0.144645348, 0.0, 0.0, 0.0], [-0.811499953, 21.0, 22.0, 1.0], [0.0256363414, 0.0, 0.0, 0.0], [-0.113011517, 0.0, 0.0, 0.0], [-0.228814363, 0.0, 0.0, 0.0], [0.0513102524, 0.0, 0.0, 0.0], [-0.213499993, 23.0, 24.0, 0.0], [-0.179500014, 25.0, 26.0, 0.0], [-0.0389011465, 0.0, 0.0, 0.0], [0.100999363, 0.0, 0.0, 0.0], [-0.0130797829, 0.0, 0.0, 0.0], [0.131364852, 0.0, 0.0, 0.0], [-0.0984588936, 0.0, 0.0, 0.0], [0.0124869803, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 21, 22, 15, 16, 17, 18, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 14, 10, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_313(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.874000013, 1.0, 2.0, 1.0], [-0.102381267, 0.0, 0.0, 0.0], [-0.946500003, 3.0, 4.0, 4.0], [-0.953500032, 5.0, 6.0, 4.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.956499994, 9.0, 10.0, 4.0], [-0.241999999, 11.0, 12.0, 0.0], [-0.19749999, 13.0, 14.0, 0.0], [-0.145422623, 0.0, 0.0, 0.0], [-0.958500028, 15.0, 16.0, 4.0], [-0.664499998, 17.0, 18.0, 1.0], [0.203209966, 0.0, 0.0, 0.0], [-0.217500001, 19.0, 20.0, 0.0], [-0.28549999, 21.0, 22.0, 0.0], [-0.740499973, 23.0, 24.0, 1.0], [0.00298860273, 0.0, 0.0, 0.0], [0.169188365, 0.0, 0.0, 0.0], [0.0171582457, 0.0, 0.0, 0.0], [-0.186326623, 0.0, 0.0, 0.0], [-0.189866632, 0.0, 0.0, 0.0], [0.103559621, 0.0, 0.0, 0.0], [0.0201696232, 0.0, 0.0, 0.0], [-0.0560021922, 0.0, 0.0, 0.0], [0.00752021139, 0.0, 0.0, 0.0], [0.201274589, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 11, 19, 20, 21, 22, 23, 24, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 12, 4, 7, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_314(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.956499994, 3.0, 4.0, 4.0], [-0.470499992, 5.0, 6.0, 1.0], [0.482500017, 7.0, 8.0, 2.0], [-0.953500032, 9.0, 10.0, 4.0], [0.679999948, 11.0, 12.0, 2.0], [-0.993499994, 13.0, 14.0, 3.0], [-0.982499957, 15.0, 16.0, 3.0], [-0.963500023, 17.0, 18.0, 4.0], [0.117217414, 0.0, 0.0, 0.0], [-0.25849998, 19.0, 20.0, 0.0], [0.162943721, 0.0, 0.0, 0.0], [-0.0136520145, 0.0, 0.0, 0.0], [-0.284500003, 21.0, 22.0, 0.0], [-0.278500021, 23.0, 24.0, 1.0], [-0.965499997, 25.0, 26.0, 4.0], [-0.0824842751, 0.0, 0.0, 0.0], [0.55250001, 27.0, 28.0, 2.0], [-0.269664794, 0.0, 0.0, 0.0], [-0.129192784, 0.0, 0.0, 0.0], [-0.646499991, 29.0, 30.0, 1.0], [-0.0280417111, 0.0, 0.0, 0.0], [0.160363406, 0.0, 0.0, 0.0], [0.582000017, 31.0, 32.0, 2.0], [0.0932085365, 0.0, 0.0, 0.0], [-0.00112968544, 0.0, 0.0, 0.0], [0.145391941, 0.0, 0.0, 0.0], [-0.143694103, 0.0, 0.0, 0.0], [0.0701910928, 0.0, 0.0, 0.0], [-0.0367328189, 0.0, 0.0, 0.0], [0.0681328475, 0.0, 0.0, 0.0], [-0.190456182, 0.0, 0.0, 0.0], [-0.0170199741, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 27, 28, 18, 9, 19, 29, 30, 11, 12, 21, 22, 31, 32, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 10, 20, 2, 5, 6, 13, 14, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_315(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.142500013, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.139499992, 5.0, 6.0, 0.0], [-0.193500012, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.140500009, 11.0, 12.0, 0.0], [-0.136500001, 13.0, 14.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [-0.190499991, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.999500036, 21.0, 22.0, 4.0], [0.00496430928, 0.0, 0.0, 0.0], [0.10944587, 0.0, 0.0, 0.0], [-0.137499988, 23.0, 24.0, 0.0], [-0.134499997, 25.0, 26.0, 0.0], [-0.210500002, 27.0, 28.0, 0.0], [-0.906000018, 29.0, 30.0, 2.0], [0.168475866, 0.0, 0.0, 0.0], [-0.0180831067, 0.0, 0.0, 0.0], [-0.305357397, 0.0, 0.0, 0.0], [-0.0439822413, 0.0, 0.0, 0.0], [0.0566961356, 0.0, 0.0, 0.0], [-0.0244537629, 0.0, 0.0, 0.0], [-0.138500005, 31.0, 32.0, 0.0], [-0.227960557, 0.0, 0.0, 0.0], [-0.135500014, 33.0, 34.0, 0.0], [-0.127499998, 35.0, 36.0, 0.0], [-0.0180598944, 0.0, 0.0, 0.0], [0.102993265, 0.0, 0.0, 0.0], [-0.184651613, 0.0, 0.0, 0.0], [0.0665929765, 0.0, 0.0, 0.0], [0.00143390859, 0.0, 0.0, 0.0], [0.0361668952, 0.0, 0.0, 0.0], [0.0164176151, 0.0, 0.0, 0.0], [0.164865285, 0.0, 0.0, 0.0], [-0.055088684, 0.0, 0.0, 0.0], [0.00234543486, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 18, 19, 20, 21, 22, 11, 12, 31, 32, 24, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 10, 2, 5, 6, 13, 23, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_316(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [0.074149996, 7.0, 8.0, 0.0], [0.0776499957, 9.0, 10.0, 0.0], [-0.299377352, 0.0, 0.0, 0.0], [0.0883999988, 11.0, 12.0, 0.0], [0.0694999993, 13.0, 14.0, 0.0], [-0.2514202, 0.0, 0.0, 0.0], [0.194814593, 0.0, 0.0, 0.0], [0.0579563193, 0.0, 0.0, 0.0], [0.0867500007, 15.0, 16.0, 0.0], [0.0892499983, 17.0, 18.0, 0.0], [0.0560500026, 19.0, 20.0, 0.0], [0.207378611, 0.0, 0.0, 0.0], [0.00877809338, 0.0, 0.0, 0.0], [0.151801378, 0.0, 0.0, 0.0], [-0.163746342, 0.0, 0.0, 0.0], [0.0917500034, 21.0, 22.0, 0.0], [0.00389073091, 0.0, 0.0, 0.0], [-0.209716424, 0.0, 0.0, 0.0], [0.201569065, 0.0, 0.0, 0.0], [-0.0193635505, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 10, 5, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_317(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.885499954, 1.0, 2.0, 2.0], [0.446500003, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [0.4375, 7.0, 8.0, 0.0], [0.456, 9.0, 10.0, 0.0], [-0.159138948, 0.0, 0.0, 0.0], [-0.337500006, 11.0, 12.0, 0.0], [0.434499979, 13.0, 14.0, 0.0], [0.445500016, 15.0, 16.0, 0.0], [-0.262869626, 0.0, 0.0, 0.0], [0.463499993, 17.0, 18.0, 0.0], [-0.99849999, 19.0, 20.0, 4.0], [-0.997500002, 21.0, 22.0, 1.0], [0.432500005, 23.0, 24.0, 0.0], [-0.178762406, 0.0, 0.0, 0.0], [0.280882001, 0.0, 0.0, 0.0], [0.0408120118, 0.0, 0.0, 0.0], [0.141595244, 0.0, 0.0, 0.0], [0.466499984, 25.0, 26.0, 0.0], [0.167700112, 0.0, 0.0, 0.0], [-0.0160341375, 0.0, 0.0, 0.0], [0.448000014, 27.0, 28.0, 0.0], [0.00518500013, 29.0, 30.0, 0.0], [0.00185151631, 0.0, 0.0, 0.0], [0.186821193, 0.0, 0.0, 0.0], [-0.128403619, 0.0, 0.0, 0.0], [0.00578314811, 0.0, 0.0, 0.0], [-0.204235673, 0.0, 0.0, 0.0], [0.0356892273, 0.0, 0.0, 0.0], [-0.0523836203, 0.0, 0.0, 0.0], [0.130871907, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 9, 17, 25, 26, 5, 19, 20, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 18, 2, 6, 11, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_318(xs):
    #Predicts Class 0
    function_dict = np.array([[0.6505, 1.0, 2.0, 2.0], [-0.995499969, 3.0, 4.0, 3.0], [-0.712499976, 5.0, 6.0, 4.0], [-0.193500012, 7.0, 8.0, 0.0], [-0.993499994, 9.0, 10.0, 3.0], [-0.995499969, 11.0, 12.0, 3.0], [-0.63499999, 13.0, 14.0, 4.0], [-0.965499997, 15.0, 16.0, 4.0], [-0.970499992, 17.0, 18.0, 4.0], [0.425999999, 19.0, 20.0, 2.0], [-0.2465, 21.0, 22.0, 0.0], [-0.656000018, 23.0, 24.0, 1.0], [0.744500041, 25.0, 26.0, 2.0], [-0.113188803, 0.0, 0.0, 0.0], [0.01053984, 0.0, 0.0, 0.0], [-0.220499992, 27.0, 28.0, 0.0], [-0.938500047, 29.0, 30.0, 4.0], [0.43900001, 31.0, 32.0, 2.0], [-0.659000039, 33.0, 34.0, 1.0], [-0.0911728367, 0.0, 0.0, 0.0], [-0.73299998, 35.0, 36.0, 1.0], [-0.958500028, 37.0, 38.0, 3.0], [-0.9745, 39.0, 40.0, 3.0], [0.245656133, 0.0, 0.0, 0.0], [-0.597499967, 41.0, 42.0, 1.0], [0.702499986, 43.0, 44.0, 2.0], [0.140514269, 0.0, 0.0, 0.0], [-0.0954443812, 0.0, 0.0, 0.0], [0.178958133, 0.0, 0.0, 0.0], [-0.193899766, 0.0, 0.0, 0.0], [-0.0583121702, 0.0, 0.0, 0.0], [-0.120643362, 0.0, 0.0, 0.0], [-0.0298970491, 0.0, 0.0, 0.0], [0.152022809, 0.0, 0.0, 0.0], [-0.0437605307, 0.0, 0.0, 0.0], [0.256441683, 0.0, 0.0, 0.0], [0.00785627402, 0.0, 0.0, 0.0], [0.105759911, 0.0, 0.0, 0.0], [-0.0480746999, 0.0, 0.0, 0.0], [-0.070892334, 0.0, 0.0, 0.0], [0.0199078191, 0.0, 0.0, 0.0], [-0.101103254, 0.0, 0.0, 0.0], [0.108800955, 0.0, 0.0, 0.0], [0.0310715009, 0.0, 0.0, 0.0], [-0.142510056, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 31, 32, 33, 34, 19, 35, 36, 37, 38, 39, 40, 23, 41, 42, 43, 44, 26, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 20, 10, 21, 22, 2, 5, 11, 24, 12, 25, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_319(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.874000013, 1.0, 2.0, 1.0], [-0.0869051516, 0.0, 0.0, 0.0], [0.455500007, 3.0, 4.0, 2.0], [0.444499999, 5.0, 6.0, 2.0], [0.461499989, 7.0, 8.0, 2.0], [0.436500013, 9.0, 10.0, 2.0], [0.159864604, 0.0, 0.0, 0.0], [-0.122463882, 0.0, 0.0, 0.0], [-0.968500018, 11.0, 12.0, 4.0], [-0.995499969, 13.0, 14.0, 3.0], [-0.963, 15.0, 16.0, 4.0], [-0.210500002, 17.0, 18.0, 0.0], [0.554499984, 19.0, 20.0, 2.0], [0.106075734, 0.0, 0.0, 0.0], [-0.0179549586, 0.0, 0.0, 0.0], [-0.191364631, 0.0, 0.0, 0.0], [0.00561915617, 0.0, 0.0, 0.0], [0.17135644, 0.0, 0.0, 0.0], [-0.0455922112, 0.0, 0.0, 0.0], [-0.0676184148, 0.0, 0.0, 0.0], [0.0143193398, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 7, 17, 18, 19, 20])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_320(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.313499987, 1.0, 2.0, 0.0], [-0.400000006, 3.0, 4.0, 1.0], [-0.24849999, 5.0, 6.0, 0.0], [-0.33950001, 7.0, 8.0, 0.0], [0.147841319, 0.0, 0.0, 0.0], [-0.371500015, 9.0, 10.0, 1.0], [-0.415000021, 11.0, 12.0, 1.0], [-0.096810028, 0.0, 0.0, 0.0], [0.0777542219, 0.0, 0.0, 0.0], [-0.570000052, 13.0, 14.0, 1.0], [-0.176306769, 0.0, 0.0, 0.0], [0.723500013, 15.0, 16.0, 2.0], [0.135881424, 0.0, 0.0, 0.0], [-0.153863847, 0.0, 0.0, 0.0], [-0.9745, 17.0, 18.0, 3.0], [0.712499976, 19.0, 20.0, 2.0], [-0.705000043, 21.0, 22.0, 4.0], [-0.02384484, 0.0, 0.0, 0.0], [0.158635259, 0.0, 0.0, 0.0], [-0.00398553163, 0.0, 0.0, 0.0], [0.137669787, 0.0, 0.0, 0.0], [-0.13205345, 0.0, 0.0, 0.0], [0.0685758889, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 17, 18, 10, 19, 20, 21, 22, 12])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 14, 6, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_321(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.273499995, 1.0, 2.0, 0.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.205500007, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.0714218616, 0.0, 0.0, 0.0], [-0.613000035, 9.0, 10.0, 2.0], [-0.203500003, 11.0, 12.0, 0.0], [-0.524500012, 13.0, 14.0, 0.0], [-0.296499997, 15.0, 16.0, 0.0], [-0.2095, 17.0, 18.0, 0.0], [0.097132355, 0.0, 0.0, 0.0], [0.164697617, 0.0, 0.0, 0.0], [-0.145500004, 19.0, 20.0, 0.0], [0.0731771365, 0.0, 0.0, 0.0], [-0.120105252, 0.0, 0.0, 0.0], [0.20678106, 0.0, 0.0, 0.0], [-0.277500004, 21.0, 22.0, 0.0], [-0.210500002, 23.0, 24.0, 0.0], [-0.266038686, 0.0, 0.0, 0.0], [-0.185499996, 25.0, 26.0, 0.0], [-0.141499996, 27.0, 28.0, 0.0], [0.0032586013, 0.0, 0.0, 0.0], [0.159024358, 0.0, 0.0, 0.0], [-0.137037203, 0.0, 0.0, 0.0], [0.0924141705, 0.0, 0.0, 0.0], [0.0262274221, 0.0, 0.0, 0.0], [-0.180579051, 0.0, 0.0, 0.0], [0.119929239, 0.0, 0.0, 0.0], [0.000103416285, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 21, 22, 4, 23, 24, 18, 10, 11, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 8, 16, 2, 5, 9, 17, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_322(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00163000007, 1.0, 2.0, 0.0], [-0.00413500005, 3.0, 4.0, 0.0], [-0.00132499996, 5.0, 6.0, 0.0], [-0.00496499985, 7.0, 8.0, 0.0], [-0.00322999991, 9.0, 10.0, 0.0], [0.312886775, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.00527499989, 13.0, 14.0, 0.0], [0.146933839, 0.0, 0.0, 0.0], [-0.301721901, 0.0, 0.0, 0.0], [-0.00200500013, 15.0, 16.0, 0.0], [0.00950999931, 17.0, 18.0, 0.0], [0.0107000005, 19.0, 20.0, 0.0], [-0.0101749999, 21.0, 22.0, 0.0], [-0.219051749, 0.0, 0.0, 0.0], [0.0866206512, 0.0, 0.0, 0.0], [-0.277435482, 0.0, 0.0, 0.0], [0.00588999968, 23.0, 24.0, 0.0], [0.0760499984, 25.0, 26.0, 0.0], [-0.822000027, 27.0, 28.0, 2.0], [0.0363999978, 29.0, 30.0, 0.0], [-0.00668702414, 0.0, 0.0, 0.0], [0.154668868, 0.0, 0.0, 0.0], [0.0251229033, 0.0, 0.0, 0.0], [-0.310766935, 0.0, 0.0, 0.0], [0.0639461204, 0.0, 0.0, 0.0], [-0.0325932838, 0.0, 0.0, 0.0], [0.48326546, 0.0, 0.0, 0.0], [-0.00483562611, 0.0, 0.0, 0.0], [-0.238545716, 0.0, 0.0, 0.0], [0.0394083411, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 9, 15, 16, 5, 23, 24, 25, 26, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 2, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_323(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 1.0], [-0.67050004, 3.0, 4.0, 2.0], [-0.0774467289, 0.0, 0.0, 0.0], [-0.99849999, 5.0, 6.0, 4.0], [-0.620499969, 7.0, 8.0, 2.0], [-0.0123999994, 9.0, 10.0, 0.0], [0.129841641, 0.0, 0.0, 0.0], [-0.115790315, 0.0, 0.0, 0.0], [-0.0276999995, 11.0, 12.0, 0.0], [-0.0748500004, 13.0, 14.0, 0.0], [0.172499999, 15.0, 16.0, 0.0], [-0.0624902211, 0.0, 0.0, 0.0], [0.0900079459, 0.0, 0.0, 0.0], [-0.000996170565, 0.0, 0.0, 0.0], [0.139953539, 0.0, 0.0, 0.0], [-0.264485121, 0.0, 0.0, 0.0], [0.00361353508, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 7, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_324(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.759500027, 1.0, 2.0, 1.0], [-0.763499975, 3.0, 4.0, 1.0], [-0.101500005, 5.0, 6.0, 0.0], [-0.767500043, 7.0, 8.0, 1.0], [0.176125973, 0.0, 0.0, 0.0], [0.469500005, 9.0, 10.0, 2.0], [-0.0680000037, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 4.0], [-0.119246624, 0.0, 0.0, 0.0], [-0.945500016, 15.0, 16.0, 3.0], [-0.125499994, 17.0, 18.0, 0.0], [-0.188044146, 0.0, 0.0, 0.0], [-0.940500021, 19.0, 20.0, 4.0], [-0.952499986, 21.0, 22.0, 4.0], [-0.907500029, 23.0, 24.0, 4.0], [-0.176394999, 0.0, 0.0, 0.0], [0.4375, 25.0, 26.0, 2.0], [0.490500003, 27.0, 28.0, 2.0], [0.649500012, 29.0, 30.0, 2.0], [-0.0805117786, 0.0, 0.0, 0.0], [0.0781135112, 0.0, 0.0, 0.0], [0.00294999755, 0.0, 0.0, 0.0], [0.116031379, 0.0, 0.0, 0.0], [-0.157547086, 0.0, 0.0, 0.0], [0.0399751402, 0.0, 0.0, 0.0], [0.0831069648, 0.0, 0.0, 0.0], [-0.051151786, 0.0, 0.0, 0.0], [0.144813299, 0.0, 0.0, 0.0], [-0.00855728518, 0.0, 0.0, 0.0], [0.209246039, 0.0, 0.0, 0.0], [-0.0126242666, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 4, 15, 25, 26, 27, 28, 29, 30, 11, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 16, 10, 17, 18, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_325(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.755499959, 1.0, 2.0, 1.0], [-0.763499975, 3.0, 4.0, 1.0], [0.468500018, 5.0, 6.0, 2.0], [-0.766499996, 7.0, 8.0, 1.0], [-0.99150002, 9.0, 10.0, 3.0], [-0.74150002, 11.0, 12.0, 1.0], [0.490500003, 13.0, 14.0, 2.0], [-0.770500004, 15.0, 16.0, 1.0], [0.165364504, 0.0, 0.0, 0.0], [-0.0456665233, 0.0, 0.0, 0.0], [-0.172347903, 0.0, 0.0, 0.0], [0.179475039, 0.0, 0.0, 0.0], [-0.684499979, 17.0, 18.0, 1.0], [-0.158125192, 0.0, 0.0, 0.0], [0.635499954, 19.0, 20.0, 2.0], [-0.778499961, 21.0, 22.0, 1.0], [-0.173319176, 0.0, 0.0, 0.0], [-0.203999996, 23.0, 24.0, 0.0], [0.145448431, 0.0, 0.0, 0.0], [-0.210500002, 25.0, 26.0, 0.0], [-0.560000002, 27.0, 28.0, 1.0], [-0.0210224204, 0.0, 0.0, 0.0], [0.100277148, 0.0, 0.0, 0.0], [-0.120810784, 0.0, 0.0, 0.0], [0.0979074985, 0.0, 0.0, 0.0], [0.0630201697, 0.0, 0.0, 0.0], [-0.0453079976, 0.0, 0.0, 0.0], [-0.0937045291, 0.0, 0.0, 0.0], [0.0122925984, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 8, 9, 10, 11, 23, 24, 18, 13, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 12, 17, 6, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_326(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [-0.915500045, 3.0, 4.0, 4.0], [0.0839267001, 0.0, 0.0, 0.0], [-0.381500006, 5.0, 6.0, 1.0], [-0.912500024, 7.0, 8.0, 4.0], [-0.674499989, 9.0, 10.0, 1.0], [0.120446652, 0.0, 0.0, 0.0], [-0.198065579, 0.0, 0.0, 0.0], [-0.100999996, 11.0, 12.0, 0.0], [-0.691499949, 13.0, 14.0, 1.0], [-0.221500009, 15.0, 16.0, 0.0], [-0.911499977, 17.0, 18.0, 3.0], [0.114496186, 0.0, 0.0, 0.0], [0.00536841899, 0.0, 0.0, 0.0], [0.185580507, 0.0, 0.0, 0.0], [0.0301388074, 0.0, 0.0, 0.0], [-0.0845639706, 0.0, 0.0, 0.0], [-0.0451487973, 0.0, 0.0, 0.0], [0.0682468042, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 7, 17, 18, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_327(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0968500003, 1.0, 2.0, 0.0], [-0.0987499952, 3.0, 4.0, 0.0], [-0.0965999961, 5.0, 6.0, 0.0], [-0.111500002, 7.0, 8.0, 0.0], [-0.294196278, 0.0, 0.0, 0.0], [0.447965175, 0.0, 0.0, 0.0], [-0.0922500044, 9.0, 10.0, 0.0], [-0.115500003, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.250448942, 0.0, 0.0, 0.0], [-0.0913500041, 15.0, 16.0, 0.0], [-0.1175, 17.0, 18.0, 0.0], [-0.253493011, 0.0, 0.0, 0.0], [-0.103500001, 19.0, 20.0, 0.0], [0.211261585, 0.0, 0.0, 0.0], [0.265341192, 0.0, 0.0, 0.0], [-0.0907500014, 21.0, 22.0, 0.0], [-0.0107213007, 0.0, 0.0, 0.0], [0.151577026, 0.0, 0.0, 0.0], [-0.0898742154, 0.0, 0.0, 0.0], [0.121464238, 0.0, 0.0, 0.0], [-0.122955978, 0.0, 0.0, 0.0], [0.00336837419, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 19, 20, 14, 4, 5, 9, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_328(xs):
    #Predicts Class 4
    function_dict = np.array([[0.193500012, 1.0, 2.0, 0.0], [0.157999992, 3.0, 4.0, 0.0], [0.194499999, 5.0, 6.0, 0.0], [0.1105, 7.0, 8.0, 0.0], [-0.169657916, 0.0, 0.0, 0.0], [0.181996435, 0.0, 0.0, 0.0], [0.202500001, 9.0, 10.0, 0.0], [0.0945499986, 11.0, 12.0, 0.0], [0.175244629, 0.0, 0.0, 0.0], [-0.0610031858, 0.0, 0.0, 0.0], [0.0836136639, 0.0, 0.0, 0.0], [0.0892499983, 13.0, 14.0, 0.0], [-0.923500001, 15.0, 16.0, 2.0], [-0.0021693476, 0.0, 0.0, 0.0], [0.0866335258, 0.0, 0.0, 0.0], [-0.230787545, 0.0, 0.0, 0.0], [-0.0478713997, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_329(xs):
    #Predicts Class 5
    function_dict = np.array([[0.256500006, 1.0, 2.0, 0.0], [0.228500009, 3.0, 4.0, 0.0], [0.260500014, 5.0, 6.0, 0.0], [-0.98150003, 7.0, 8.0, 1.0], [0.253499985, 9.0, 10.0, 0.0], [0.223237932, 0.0, 0.0, 0.0], [-0.99849999, 11.0, 12.0, 1.0], [0.203500003, 13.0, 14.0, 0.0], [-0.129896328, 0.0, 0.0, 0.0], [-0.230181575, 0.0, 0.0, 0.0], [-0.0669387206, 0.0, 0.0, 0.0], [0.392499983, 15.0, 16.0, 0.0], [0.475499988, 17.0, 18.0, 0.0], [-0.0123999994, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.344999999, 23.0, 24.0, 0.0], [0.415000021, 25.0, 26.0, 0.0], [0.167449623, 0.0, 0.0, 0.0], [-0.0297883321, 0.0, 0.0, 0.0], [0.00707199425, 0.0, 0.0, 0.0], [-0.0718659386, 0.0, 0.0, 0.0], [-0.0483697318, 0.0, 0.0, 0.0], [0.206421584, 0.0, 0.0, 0.0], [0.00124153169, 0.0, 0.0, 0.0], [-0.32964468, 0.0, 0.0, 0.0], [0.0810398236, 0.0, 0.0, 0.0], [-0.00612247363, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 5, 23, 24, 25, 26, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 11, 15, 16, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_330(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.833500028, 1.0, 2.0, 4.0], [-0.578999996, 3.0, 4.0, 1.0], [0.772500038, 5.0, 6.0, 2.0], [0.6505, 7.0, 8.0, 2.0], [-0.148499995, 9.0, 10.0, 0.0], [-0.978999972, 11.0, 12.0, 3.0], [-0.175999999, 13.0, 14.0, 0.0], [-0.89349997, 15.0, 16.0, 4.0], [-0.70599997, 17.0, 18.0, 1.0], [-0.879500031, 19.0, 20.0, 4.0], [0.00327616581, 0.0, 0.0, 0.0], [0.662500024, 21.0, 22.0, 2.0], [0.654500008, 23.0, 24.0, 2.0], [0.01022192, 0.0, 0.0, 0.0], [-0.0825025588, 0.0, 0.0, 0.0], [-0.189500004, 25.0, 26.0, 0.0], [-0.191500008, 27.0, 28.0, 0.0], [-0.9375, 29.0, 30.0, 4.0], [0.711499989, 31.0, 32.0, 2.0], [-0.228812918, 0.0, 0.0, 0.0], [-0.0537136756, 0.0, 0.0, 0.0], [-0.0954768807, 0.0, 0.0, 0.0], [0.0618991107, 0.0, 0.0, 0.0], [0.175618991, 0.0, 0.0, 0.0], [0.717499971, 33.0, 34.0, 2.0], [0.0214434564, 0.0, 0.0, 0.0], [-0.0538190864, 0.0, 0.0, 0.0], [-0.162357762, 0.0, 0.0, 0.0], [0.110736683, 0.0, 0.0, 0.0], [-0.126149952, 0.0, 0.0, 0.0], [0.0811321512, 0.0, 0.0, 0.0], [0.187504202, 0.0, 0.0, 0.0], [-0.0076885405, 0.0, 0.0, 0.0], [-0.0520312414, 0.0, 0.0, 0.0], [0.104343668, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 31, 32, 19, 20, 10, 21, 22, 23, 33, 34, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 2, 5, 11, 12, 24, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_331(xs):
    #Predicts Class 1
    function_dict = np.array([[0.277500004, 1.0, 2.0, 2.0], [-0.796000004, 3.0, 4.0, 1.0], [0.332499981, 5.0, 6.0, 2.0], [0.00052940438, 0.0, 0.0, 0.0], [-0.111438759, 0.0, 0.0, 0.0], [-0.801499963, 7.0, 8.0, 1.0], [-0.192499995, 9.0, 10.0, 0.0], [-0.033285819, 0.0, 0.0, 0.0], [0.143820971, 0.0, 0.0, 0.0], [-0.195499986, 11.0, 12.0, 0.0], [-0.969500005, 13.0, 14.0, 4.0], [-0.979499996, 15.0, 16.0, 4.0], [-0.169524372, 0.0, 0.0, 0.0], [-0.975499988, 17.0, 18.0, 4.0], [-0.186500013, 19.0, 20.0, 0.0], [0.114602752, 0.0, 0.0, 0.0], [-0.0108640771, 0.0, 0.0, 0.0], [-0.0193467569, 0.0, 0.0, 0.0], [0.19650276, 0.0, 0.0, 0.0], [0.1092228, 0.0, 0.0, 0.0], [-0.0544860177, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 15, 16, 12, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_332(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.778499961, 3.0, 4.0, 4.0], [-0.4745, 5.0, 6.0, 1.0], [-0.196500003, 7.0, 8.0, 0.0], [0.752499998, 9.0, 10.0, 2.0], [0.183085412, 0.0, 0.0, 0.0], [-0.233500004, 11.0, 12.0, 0.0], [-0.864500046, 13.0, 14.0, 4.0], [-0.149500012, 15.0, 16.0, 0.0], [-0.550000012, 17.0, 18.0, 1.0], [0.000115506176, 0.0, 0.0, 0.0], [0.652500033, 19.0, 20.0, 2.0], [-0.960500002, 21.0, 22.0, 4.0], [-0.936499953, 23.0, 24.0, 4.0], [0.0954442024, 0.0, 0.0, 0.0], [0.452499986, 25.0, 26.0, 2.0], [0.523000002, 27.0, 28.0, 2.0], [-0.154629305, 0.0, 0.0, 0.0], [-0.0407078117, 0.0, 0.0, 0.0], [-0.986000001, 29.0, 30.0, 3.0], [-0.296999991, 31.0, 32.0, 0.0], [-0.0638415366, 0.0, 0.0, 0.0], [-0.977499962, 33.0, 34.0, 3.0], [-0.00613215659, 0.0, 0.0, 0.0], [-0.139891356, 0.0, 0.0, 0.0], [-0.0660184398, 0.0, 0.0, 0.0], [0.118650734, 0.0, 0.0, 0.0], [0.0452897437, 0.0, 0.0, 0.0], [-0.0824608654, 0.0, 0.0, 0.0], [-0.0973482057, 0.0, 0.0, 0.0], [0.140890881, 0.0, 0.0, 0.0], [0.0635931566, 0.0, 0.0, 0.0], [-0.155569077, 0.0, 0.0, 0.0], [0.189722717, 0.0, 0.0, 0.0], [0.00915031601, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 25, 26, 27, 28, 17, 18, 10, 5, 29, 30, 31, 32, 21, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 9, 2, 6, 11, 19, 20, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_333(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.283500016, 1.0, 2.0, 0.0], [-0.284500003, 3.0, 4.0, 0.0], [-0.274500012, 5.0, 6.0, 0.0], [-0.37349999, 7.0, 8.0, 0.0], [0.139035553, 0.0, 0.0, 0.0], [-0.240116224, 0.0, 0.0, 0.0], [-0.249500006, 9.0, 10.0, 0.0], [-0.393000007, 11.0, 12.0, 0.0], [-0.0880293325, 0.0, 0.0, 0.0], [0.143355161, 0.0, 0.0, 0.0], [-0.210500002, 13.0, 14.0, 0.0], [-0.0342980623, 0.0, 0.0, 0.0], [0.148853362, 0.0, 0.0, 0.0], [-0.209558085, 0.0, 0.0, 0.0], [-0.51699996, 15.0, 16.0, 2.0], [0.00208734977, 0.0, 0.0, 0.0], [-0.0819192529, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 9, 13, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_334(xs):
    #Predicts Class 4
    function_dict = np.array([[0.152999997, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.192499995, 5.0, 6.0, 0.0], [0.0941499993, 7.0, 8.0, 0.0], [-0.238662258, 0.0, 0.0, 0.0], [0.158034876, 0.0, 0.0, 0.0], [0.195499986, 9.0, 10.0, 0.0], [0.0894500017, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.0549563766, 0.0, 0.0, 0.0], [0.196500003, 15.0, 16.0, 0.0], [0.0885500014, 17.0, 18.0, 0.0], [0.0917500034, 19.0, 20.0, 0.0], [0.205021471, 0.0, 0.0, 0.0], [-0.0260757282, 0.0, 0.0, 0.0], [0.143224895, 0.0, 0.0, 0.0], [-0.0279634558, 0.0, 0.0, 0.0], [-0.000929598231, 0.0, 0.0, 0.0], [0.118714549, 0.0, 0.0, 0.0], [-0.0519222952, 0.0, 0.0, 0.0], [-0.166541457, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_335(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.0126499999, 1.0, 2.0, 0.0], [-0.0318999998, 3.0, 4.0, 0.0], [0.00540999975, 5.0, 6.0, 0.0], [-0.0371000022, 7.0, 8.0, 0.0], [-0.259318948, 0.0, 0.0, 0.0], [0.206704691, 0.0, 0.0, 0.0], [-0.923500001, 9.0, 10.0, 2.0], [-0.0742499977, 11.0, 12.0, 0.0], [0.183790267, 0.0, 0.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.620499969, 15.0, 16.0, 2.0], [-0.080400005, 17.0, 18.0, 0.0], [-0.159316793, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.521499991, 21.0, 22.0, 0.0], [0.541999996, 23.0, 24.0, 0.0], [0.0926389769, 0.0, 0.0, 0.0], [-0.0150940083, 0.0, 0.0, 0.0], [0.11483787, 0.0, 0.0, 0.0], [-0.00862962566, 0.0, 0.0, 0.0], [0.0460600406, 0.0, 0.0, 0.0], [0.179785252, 0.0, 0.0, 0.0], [0.0112663871, 0.0, 0.0, 0.0], [-0.165358812, 0.0, 0.0, 0.0], [0.06029322, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 21, 22, 23, 24, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14, 10, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_336(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.722499967, 1.0, 2.0, 1.0], [-0.317499995, 3.0, 4.0, 0.0], [-0.943500042, 5.0, 6.0, 4.0], [-0.828999996, 7.0, 8.0, 1.0], [0.497500002, 9.0, 10.0, 2.0], [-0.210500002, 11.0, 12.0, 0.0], [-0.931499958, 13.0, 14.0, 4.0], [0.01500786, 0.0, 0.0, 0.0], [-0.125830933, 0.0, 0.0, 0.0], [-0.0971499979, 15.0, 16.0, 0.0], [-0.141499996, 17.0, 18.0, 0.0], [-0.245999992, 19.0, 20.0, 0.0], [-0.108500004, 21.0, 22.0, 0.0], [-0.995499969, 23.0, 24.0, 3.0], [-0.92050004, 25.0, 26.0, 4.0], [-0.966500044, 27.0, 28.0, 4.0], [-0.0580499992, 29.0, 30.0, 0.0], [-0.970499992, 31.0, 32.0, 3.0], [-0.122948557, 0.0, 0.0, 0.0], [0.555500031, 33.0, 34.0, 2.0], [-0.284667015, 0.0, 0.0, 0.0], [-0.645500004, 35.0, 36.0, 1.0], [-0.126192808, 0.0, 0.0, 0.0], [-0.0414083451, 0.0, 0.0, 0.0], [-0.670000017, 37.0, 38.0, 1.0], [-0.172661811, 0.0, 0.0, 0.0], [-0.730999947, 39.0, 40.0, 4.0], [0.0359360725, 0.0, 0.0, 0.0], [-0.0619212314, 0.0, 0.0, 0.0], [0.139310867, 0.0, 0.0, 0.0], [2.33718401e-05, 0.0, 0.0, 0.0], [0.184276238, 0.0, 0.0, 0.0], [-0.0397378355, 0.0, 0.0, 0.0], [0.0601641461, 0.0, 0.0, 0.0], [-0.118609764, 0.0, 0.0, 0.0], [-0.013535752, 0.0, 0.0, 0.0], [0.159218833, 0.0, 0.0, 0.0], [0.220695257, 0.0, 0.0, 0.0], [0.0593352243, 0.0, 0.0, 0.0], [-0.0154219577, 0.0, 0.0, 0.0], [0.062579833, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 27, 28, 29, 30, 31, 32, 18, 33, 34, 20, 35, 36, 22, 23, 37, 38, 25, 39, 40])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 16, 10, 17, 2, 5, 11, 19, 12, 21, 6, 13, 24, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_337(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.291500002, 1.0, 2.0, 0.0], [0.603500009, 3.0, 4.0, 2.0], [-0.256500006, 5.0, 6.0, 0.0], [-0.334500015, 7.0, 8.0, 0.0], [0.64199996, 9.0, 10.0, 2.0], [-0.938500047, 11.0, 12.0, 4.0], [-0.99849999, 13.0, 14.0, 3.0], [-0.931499958, 15.0, 16.0, 4.0], [0.516000032, 17.0, 18.0, 2.0], [-0.119166501, 0.0, 0.0, 0.0], [-0.895500004, 19.0, 20.0, 4.0], [-0.966500044, 21.0, 22.0, 4.0], [-0.160464898, 0.0, 0.0, 0.0], [-0.223500013, 23.0, 24.0, 0.0], [-0.207500011, 25.0, 26.0, 0.0], [0.0573298, 0.0, 0.0, 0.0], [-0.108867019, 0.0, 0.0, 0.0], [0.00337959337, 0.0, 0.0, 0.0], [-0.942499995, 27.0, 28.0, 4.0], [-0.333000004, 29.0, 30.0, 0.0], [-0.314999998, 31.0, 32.0, 0.0], [-0.124601543, 0.0, 0.0, 0.0], [-0.954999983, 33.0, 34.0, 4.0], [0.456499994, 35.0, 36.0, 2.0], [-0.169499993, 37.0, 38.0, 0.0], [0.444499999, 39.0, 40.0, 2.0], [-0.189500004, 41.0, 42.0, 0.0], [0.0599611402, 0.0, 0.0, 0.0], [0.219194308, 0.0, 0.0, 0.0], [0.0221927781, 0.0, 0.0, 0.0], [0.136788666, 0.0, 0.0, 0.0], [0.0323644392, 0.0, 0.0, 0.0], [-0.114891246, 0.0, 0.0, 0.0], [0.13962096, 0.0, 0.0, 0.0], [-0.00175236387, 0.0, 0.0, 0.0], [-0.00704653468, 0.0, 0.0, 0.0], [-0.216068462, 0.0, 0.0, 0.0], [0.0773365945, 0.0, 0.0, 0.0], [-0.137446612, 0.0, 0.0, 0.0], [-0.0246750079, 0.0, 0.0, 0.0], [0.0735962987, 0.0, 0.0, 0.0], [-0.106173709, 0.0, 0.0, 0.0], [0.0259413626, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 27, 28, 9, 29, 30, 31, 32, 21, 33, 34, 12, 35, 36, 37, 38, 39, 40, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 8, 18, 4, 10, 19, 20, 2, 5, 11, 22, 6, 13, 23, 24, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_338(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.691499949, 1.0, 2.0, 1.0], [-0.961500049, 3.0, 4.0, 4.0], [-0.892500043, 5.0, 6.0, 3.0], [-0.965499997, 7.0, 8.0, 4.0], [-0.109499998, 9.0, 10.0, 0.0], [-0.926499963, 11.0, 12.0, 3.0], [-0.810000002, 13.0, 14.0, 4.0], [-0.9745, 15.0, 16.0, 4.0], [0.109219007, 0.0, 0.0, 0.0], [-0.700500011, 17.0, 18.0, 1.0], [0.0385819301, 0.0, 0.0, 0.0], [-0.727499962, 19.0, 20.0, 4.0], [0.133507073, 0.0, 0.0, 0.0], [-0.837000012, 21.0, 22.0, 3.0], [0.0454511717, 0.0, 0.0, 0.0], [-0.997500002, 23.0, 24.0, 3.0], [-0.226999998, 25.0, 26.0, 0.0], [-0.966500044, 27.0, 28.0, 3.0], [0.0525038838, 0.0, 0.0, 0.0], [-0.962499976, 29.0, 30.0, 3.0], [-0.516499996, 31.0, 32.0, 1.0], [-0.142056018, 0.0, 0.0, 0.0], [0.00752172293, 0.0, 0.0, 0.0], [-0.0709960312, 0.0, 0.0, 0.0], [0.0736869201, 0.0, 0.0, 0.0], [0.0096022021, 0.0, 0.0, 0.0], [-0.194241673, 0.0, 0.0, 0.0], [-0.206840262, 0.0, 0.0, 0.0], [0.0167727098, 0.0, 0.0, 0.0], [0.0345378555, 0.0, 0.0, 0.0], [-0.0632073805, 0.0, 0.0, 0.0], [-0.138207242, 0.0, 0.0, 0.0], [0.0275910925, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 27, 28, 18, 10, 29, 30, 31, 32, 12, 21, 22, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 17, 2, 5, 11, 19, 20, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_339(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.585000038, 3.0, 4.0, 0.0], [-0.99849999, 5.0, 6.0, 1.0], [0.5625, 7.0, 8.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [-0.129838139, 0.0, 0.0, 0.0], [-0.51849997, 11.0, 12.0, 2.0], [0.560500026, 13.0, 14.0, 0.0], [-0.0967071652, 0.0, 0.0, 0.0], [0.0992993116, 0.0, 0.0, 0.0], [-0.0250758715, 0.0, 0.0, 0.0], [0.0758577958, 0.0, 0.0, 0.0], [-0.0327859782, 0.0, 0.0, 0.0], [0.549000025, 15.0, 16.0, 0.0], [0.0909622461, 0.0, 0.0, 0.0], [0.00154170941, 0.0, 0.0, 0.0], [-0.0882836208, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 14, 8, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_340(xs):
    #Predicts Class 4
    function_dict = np.array([[0.193500012, 1.0, 2.0, 0.0], [0.157999992, 3.0, 4.0, 0.0], [0.194499999, 5.0, 6.0, 0.0], [0.1105, 7.0, 8.0, 0.0], [-0.152922794, 0.0, 0.0, 0.0], [0.151797786, 0.0, 0.0, 0.0], [0.202500001, 9.0, 10.0, 0.0], [0.0945499986, 11.0, 12.0, 0.0], [0.146302521, 0.0, 0.0, 0.0], [-0.0593984537, 0.0, 0.0, 0.0], [0.0659188926, 0.0, 0.0, 0.0], [0.0912000015, 13.0, 14.0, 0.0], [-0.923500001, 15.0, 16.0, 2.0], [-0.000946518674, 0.0, 0.0, 0.0], [0.0957071781, 0.0, 0.0, 0.0], [-0.226341814, 0.0, 0.0, 0.0], [-0.0388984792, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_341(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.265500009, 5.0, 6.0, 0.0], [0.254999995, 7.0, 8.0, 0.0], [-0.170828149, 0.0, 0.0, 0.0], [0.325588733, 0.0, 0.0, 0.0], [0.272000015, 9.0, 10.0, 0.0], [0.212500006, 11.0, 12.0, 0.0], [0.152013078, 0.0, 0.0, 0.0], [-0.186237022, 0.0, 0.0, 0.0], [0.276499987, 13.0, 14.0, 0.0], [0.201499999, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.233965069, 0.0, 0.0, 0.0], [0.363499999, 19.0, 20.0, 0.0], [-0.0126737198, 0.0, 0.0, 0.0], [0.158643991, 0.0, 0.0, 0.0], [-0.281884462, 0.0, 0.0, 0.0], [0.0453503542, 0.0, 0.0, 0.0], [-0.120392181, 0.0, 0.0, 0.0], [0.00887744687, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_342(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.759500027, 1.0, 2.0, 1.0], [-0.228500009, 3.0, 4.0, 0.0], [-0.965499997, 5.0, 6.0, 4.0], [-0.946500003, 7.0, 8.0, 4.0], [0.338, 9.0, 10.0, 2.0], [-0.203500003, 11.0, 12.0, 0.0], [-0.956499994, 13.0, 14.0, 4.0], [-0.810500026, 15.0, 16.0, 1.0], [-0.985499978, 17.0, 18.0, 3.0], [-0.816499949, 19.0, 20.0, 1.0], [-0.817499995, 21.0, 22.0, 1.0], [-0.734500051, 23.0, 24.0, 1.0], [-0.191500008, 25.0, 26.0, 0.0], [-0.99150002, 27.0, 28.0, 3.0], [-0.206499994, 29.0, 30.0, 0.0], [0.0349942297, 0.0, 0.0, 0.0], [-0.163069725, 0.0, 0.0, 0.0], [-0.280499995, 31.0, 32.0, 0.0], [-0.0639894009, 0.0, 0.0, 0.0], [0.0428868681, 0.0, 0.0, 0.0], [-0.141588449, 0.0, 0.0, 0.0], [-0.180999994, 33.0, 34.0, 0.0], [-0.932000041, 35.0, 36.0, 4.0], [-0.0677596927, 0.0, 0.0, 0.0], [-0.239566997, 0.0, 0.0, 0.0], [0.158279106, 0.0, 0.0, 0.0], [-0.0429397039, 0.0, 0.0, 0.0], [-0.0262461528, 0.0, 0.0, 0.0], [0.169966698, 0.0, 0.0, 0.0], [-0.213499993, 37.0, 38.0, 0.0], [-0.178499997, 39.0, 40.0, 0.0], [-0.0123549886, 0.0, 0.0, 0.0], [0.191137627, 0.0, 0.0, 0.0], [0.0388529561, 0.0, 0.0, 0.0], [-0.0798938125, 0.0, 0.0, 0.0], [0.130648434, 0.0, 0.0, 0.0], [0.0148634287, 0.0, 0.0, 0.0], [-0.00984769035, 0.0, 0.0, 0.0], [0.196843207, 0.0, 0.0, 0.0], [-0.140804932, 0.0, 0.0, 0.0], [0.00895381533, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 31, 32, 18, 19, 20, 33, 34, 35, 36, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 4, 9, 10, 21, 22, 2, 5, 11, 12, 6, 13, 14, 29, 30])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_343(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.820500016, 1.0, 2.0, 1.0], [0.516000032, 3.0, 4.0, 2.0], [-0.817499995, 5.0, 6.0, 1.0], [-0.161500007, 7.0, 8.0, 0.0], [0.0371820778, 0.0, 0.0, 0.0], [0.112865679, 0.0, 0.0, 0.0], [-0.809499979, 9.0, 10.0, 1.0], [-0.978500009, 11.0, 12.0, 4.0], [0.00512815965, 0.0, 0.0, 0.0], [-0.107050456, 0.0, 0.0, 0.0], [-0.283500016, 13.0, 14.0, 0.0], [0.000258551736, 0.0, 0.0, 0.0], [-0.148082614, 0.0, 0.0, 0.0], [-0.702499986, 15.0, 16.0, 1.0], [-0.271499991, 17.0, 18.0, 0.0], [0.129122913, 0.0, 0.0, 0.0], [-0.00219045882, 0.0, 0.0, 0.0], [-0.115412146, 0.0, 0.0, 0.0], [0.00278369407, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 9, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_344(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.624500036, 3.0, 4.0, 1.0], [-0.138500005, 5.0, 6.0, 0.0], [-0.636500001, 7.0, 8.0, 1.0], [-0.160963595, 0.0, 0.0, 0.0], [-0.180500001, 9.0, 10.0, 0.0], [-0.987499952, 11.0, 12.0, 3.0], [-0.136500001, 13.0, 14.0, 0.0], [0.0930760205, 0.0, 0.0, 0.0], [-0.215499997, 15.0, 16.0, 0.0], [-0.976500034, 17.0, 18.0, 3.0], [0.170032203, 0.0, 0.0, 0.0], [0.0188888237, 0.0, 0.0, 0.0], [-0.186500013, 19.0, 20.0, 0.0], [-0.729499996, 21.0, 22.0, 1.0], [0.530499995, 23.0, 24.0, 2.0], [0.598500013, 25.0, 26.0, 2.0], [-0.158677533, 0.0, 0.0, 0.0], [0.00311350473, 0.0, 0.0, 0.0], [-0.0368254185, 0.0, 0.0, 0.0], [0.117624633, 0.0, 0.0, 0.0], [-2.90268363e-05, 0.0, 0.0, 0.0], [-0.177279249, 0.0, 0.0, 0.0], [0.122082956, 0.0, 0.0, 0.0], [-0.00671343552, 0.0, 0.0, 0.0], [-0.0257124566, 0.0, 0.0, 0.0], [0.152252346, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 23, 24, 25, 26, 17, 18, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 16, 10, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_345(xs):
    #Predicts Class 3
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [0.190929413, 0.0, 0.0, 0.0], [-0.224956289, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.547500014, 11.0, 12.0, 0.0], [-0.0916323885, 0.0, 0.0, 0.0], [0.0861446857, 0.0, 0.0, 0.0], [-0.015287024, 0.0, 0.0, 0.0], [0.528499961, 13.0, 14.0, 0.0], [0.0796969905, 0.0, 0.0, 0.0], [0.00121563417, 0.0, 0.0, 0.0], [-0.0750360787, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_346(xs):
    #Predicts Class 4
    function_dict = np.array([[0.152999997, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.192499995, 5.0, 6.0, 0.0], [0.107500002, 7.0, 8.0, 0.0], [-0.231055051, 0.0, 0.0, 0.0], [0.135231242, 0.0, 0.0, 0.0], [0.195499986, 9.0, 10.0, 0.0], [0.0894500017, 11.0, 12.0, 0.0], [0.146131366, 0.0, 0.0, 0.0], [-0.0546033382, 0.0, 0.0, 0.0], [0.196500003, 13.0, 14.0, 0.0], [0.0885500014, 15.0, 16.0, 0.0], [0.0941499993, 17.0, 18.0, 0.0], [0.120642863, 0.0, 0.0, 0.0], [-0.0252842642, 0.0, 0.0, 0.0], [-0.000398008327, 0.0, 0.0, 0.0], [0.083223857, 0.0, 0.0, 0.0], [-0.126179293, 0.0, 0.0, 0.0], [0.0331058204, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_347(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.528499961, 7.0, 8.0, 0.0], [-0.185532644, 0.0, 0.0, 0.0], [0.225408465, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.5255, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.0841421187, 0.0, 0.0, 0.0], [0.0253475979, 0.0, 0.0, 0.0], [0.522500038, 15.0, 16.0, 0.0], [-0.151295915, 0.0, 0.0, 0.0], [0.543500006, 17.0, 18.0, 0.0], [-0.175725847, 0.0, 0.0, 0.0], [-0.00100511801, 0.0, 0.0, 0.0], [0.0951367989, 0.0, 0.0, 0.0], [0.176874742, 0.0, 0.0, 0.0], [0.00484672748, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 17, 18, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_348(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.971500039, 1.0, 2.0, 4.0], [-0.805500031, 3.0, 4.0, 1.0], [-0.646499991, 5.0, 6.0, 1.0], [0.37650001, 7.0, 8.0, 2.0], [-0.997500002, 9.0, 10.0, 3.0], [0.576499999, 11.0, 12.0, 2.0], [0.671499968, 13.0, 14.0, 2.0], [-0.045123484, 0.0, 0.0, 0.0], [0.117812596, 0.0, 0.0, 0.0], [0.00988003984, 0.0, 0.0, 0.0], [-0.977499962, 15.0, 16.0, 4.0], [0.559499979, 17.0, 18.0, 2.0], [-0.862499952, 19.0, 20.0, 4.0], [-0.871000051, 21.0, 22.0, 4.0], [-0.996500015, 23.0, 24.0, 3.0], [0.00179107825, 0.0, 0.0, 0.0], [-0.190759197, 0.0, 0.0, 0.0], [-0.803499997, 25.0, 26.0, 1.0], [-0.2315, 27.0, 28.0, 0.0], [-0.941499949, 29.0, 30.0, 4.0], [-0.99000001, 31.0, 32.0, 3.0], [-0.146499991, 33.0, 34.0, 0.0], [-0.812000036, 35.0, 36.0, 4.0], [-0.119713932, 0.0, 0.0, 0.0], [0.693500042, 37.0, 38.0, 2.0], [-0.0499950983, 0.0, 0.0, 0.0], [0.036251314, 0.0, 0.0, 0.0], [0.0120254662, 0.0, 0.0, 0.0], [-0.1529762, 0.0, 0.0, 0.0], [0.00618748041, 0.0, 0.0, 0.0], [0.172034606, 0.0, 0.0, 0.0], [-0.0782848597, 0.0, 0.0, 0.0], [0.0382091291, 0.0, 0.0, 0.0], [-0.170124054, 0.0, 0.0, 0.0], [-0.0140358806, 0.0, 0.0, 0.0], [0.124315284, 0.0, 0.0, 0.0], [-0.0492332429, 0.0, 0.0, 0.0], [0.165082306, 0.0, 0.0, 0.0], [0.00580716599, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 23, 37, 38])
    branch_indices = np.array([0, 1, 3, 4, 10, 2, 5, 11, 17, 18, 12, 19, 20, 6, 13, 21, 22, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_349(xs):
    #Predicts Class 1
    function_dict = np.array([[0.570500016, 1.0, 2.0, 2.0], [0.559499979, 3.0, 4.0, 2.0], [0.591500044, 5.0, 6.0, 2.0], [0.539499998, 7.0, 8.0, 2.0], [-0.986500025, 9.0, 10.0, 3.0], [-0.993499994, 11.0, 12.0, 3.0], [0.600499988, 13.0, 14.0, 2.0], [-0.681499958, 15.0, 16.0, 1.0], [-0.925500035, 17.0, 18.0, 4.0], [0.0249930304, 0.0, 0.0, 0.0], [0.1852137, 0.0, 0.0, 0.0], [-0.0148328478, 0.0, 0.0, 0.0], [-0.151254609, 0.0, 0.0, 0.0], [0.106216036, 0.0, 0.0, 0.0], [-0.728500009, 19.0, 20.0, 1.0], [-0.281499982, 21.0, 22.0, 0.0], [-0.990499973, 23.0, 24.0, 3.0], [0.554499984, 25.0, 26.0, 2.0], [0.0384385735, 0.0, 0.0, 0.0], [-0.112834319, 0.0, 0.0, 0.0], [-0.703500032, 27.0, 28.0, 1.0], [0.0929579735, 0.0, 0.0, 0.0], [-0.017779531, 0.0, 0.0, 0.0], [0.177866727, 0.0, 0.0, 0.0], [-0.00284243189, 0.0, 0.0, 0.0], [-0.178808287, 0.0, 0.0, 0.0], [0.00271616178, 0.0, 0.0, 0.0], [0.106831685, 0.0, 0.0, 0.0], [-0.0209191609, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 18, 9, 10, 11, 12, 13, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 2, 5, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_350(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [0.557500005, 3.0, 4.0, 2.0], [-0.283999979, 5.0, 6.0, 0.0], [0.529500008, 7.0, 8.0, 2.0], [0.567499995, 9.0, 10.0, 2.0], [-0.299499989, 11.0, 12.0, 0.0], [-0.825999975, 13.0, 14.0, 4.0], [0.483500004, 15.0, 16.0, 2.0], [-0.99150002, 17.0, 18.0, 3.0], [-0.180201188, 0.0, 0.0, 0.0], [0.577499986, 19.0, 20.0, 2.0], [0.717499971, 21.0, 22.0, 2.0], [-0.148753107, 0.0, 0.0, 0.0], [-0.960500002, 23.0, 24.0, 4.0], [-0.784500003, 25.0, 26.0, 4.0], [0.4745, 27.0, 28.0, 2.0], [-0.162, 29.0, 30.0, 0.0], [0.0159339793, 0.0, 0.0, 0.0], [0.172711611, 0.0, 0.0, 0.0], [0.120322347, 0.0, 0.0, 0.0], [-0.992499948, 31.0, 32.0, 3.0], [0.602999985, 33.0, 34.0, 2.0], [-0.0421932861, 0.0, 0.0, 0.0], [-0.00906018633, 0.0, 0.0, 0.0], [0.16487132, 0.0, 0.0, 0.0], [-0.101045616, 0.0, 0.0, 0.0], [0.0871425271, 0.0, 0.0, 0.0], [-0.0172697399, 0.0, 0.0, 0.0], [0.145031199, 0.0, 0.0, 0.0], [-0.18023704, 0.0, 0.0, 0.0], [0.0664970279, 0.0, 0.0, 0.0], [0.0268783979, 0.0, 0.0, 0.0], [-0.077326633, 0.0, 0.0, 0.0], [-0.0337400921, 0.0, 0.0, 0.0], [0.161640927, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 18, 9, 19, 31, 32, 33, 34, 22, 12, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 10, 20, 2, 5, 11, 21, 6, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_351(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0968500003, 1.0, 2.0, 0.0], [-0.0987499952, 3.0, 4.0, 0.0], [-0.0965999961, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.259860933, 0.0, 0.0, 0.0], [0.357756913, 0.0, 0.0, 0.0], [-0.0922500044, 9.0, 10.0, 0.0], [-0.132499993, 11.0, 12.0, 0.0], [-0.132499993, 13.0, 14.0, 0.0], [-0.216036335, 0.0, 0.0, 0.0], [-0.0914499983, 15.0, 16.0, 0.0], [-0.136500001, 17.0, 18.0, 0.0], [-0.127499998, 19.0, 20.0, 0.0], [-0.191500008, 21.0, 22.0, 0.0], [-0.129500002, 23.0, 24.0, 0.0], [0.409449369, 0.0, 0.0, 0.0], [-0.0910999998, 25.0, 26.0, 0.0], [-0.00630912744, 0.0, 0.0, 0.0], [0.100782529, 0.0, 0.0, 0.0], [-0.35190317, 0.0, 0.0, 0.0], [-0.000903252687, 0.0, 0.0, 0.0], [0.0194381271, 0.0, 0.0, 0.0], [-0.259987593, 0.0, 0.0, 0.0], [0.511277795, 0.0, 0.0, 0.0], [-0.00376926735, 0.0, 0.0, 0.0], [-0.323885232, 0.0, 0.0, 0.0], [0.00346298353, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 5, 9, 15, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_352(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0382499993, 1.0, 2.0, 0.0], [-0.03895, 3.0, 4.0, 0.0], [-0.0310500003, 5.0, 6.0, 0.0], [-0.0421000011, 7.0, 8.0, 0.0], [0.269548744, 0.0, 0.0, 0.0], [-0.282580376, 0.0, 0.0, 0.0], [-0.0293500014, 9.0, 10.0, 0.0], [-0.0496499985, 11.0, 12.0, 0.0], [-0.147378013, 0.0, 0.0, 0.0], [-0.0299500003, 13.0, 14.0, 0.0], [-0.0250499994, 15.0, 16.0, 0.0], [-0.0571999997, 17.0, 18.0, 0.0], [-0.0460999981, 19.0, 20.0, 0.0], [-0.00648996467, 0.0, 0.0, 0.0], [0.234414473, 0.0, 0.0, 0.0], [-0.204374865, 0.0, 0.0, 0.0], [-0.0244999994, 21.0, 22.0, 0.0], [0.00653876457, 0.0, 0.0, 0.0], [-0.206073791, 0.0, 0.0, 0.0], [0.313619077, 0.0, 0.0, 0.0], [-0.0394152701, 0.0, 0.0, 0.0], [0.285409302, 0.0, 0.0, 0.0], [-0.0064605996, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 13, 14, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_353(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.0765687078, 0.0, 0.0, 0.0], [-0.992499948, 3.0, 4.0, 1.0], [-0.421499997, 5.0, 6.0, 0.0], [-0.795000017, 7.0, 8.0, 2.0], [-0.438499987, 9.0, 10.0, 0.0], [-0.412999988, 11.0, 12.0, 0.0], [-0.149326593, 0.0, 0.0, 0.0], [0.0124354288, 0.0, 0.0, 0.0], [0.0108881695, 0.0, 0.0, 0.0], [-0.110116869, 0.0, 0.0, 0.0], [0.183213368, 0.0, 0.0, 0.0], [-0.399500012, 13.0, 14.0, 0.0], [-0.124529809, 0.0, 0.0, 0.0], [0.00454631681, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 13, 14, 7, 8])
    branch_indices = np.array([0, 2, 3, 5, 6, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_354(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [0.439999998, 3.0, 4.0, 2.0], [-0.819499969, 5.0, 6.0, 1.0], [-0.131676331, 0.0, 0.0, 0.0], [0.0431250669, 0.0, 0.0, 0.0], [0.516000032, 7.0, 8.0, 2.0], [0.463499993, 9.0, 10.0, 2.0], [-0.859500051, 11.0, 12.0, 1.0], [-0.0177753363, 0.0, 0.0, 0.0], [-0.913499951, 13.0, 14.0, 4.0], [-0.60650003, 15.0, 16.0, 1.0], [-0.0230703764, 0.0, 0.0, 0.0], [0.16956012, 0.0, 0.0, 0.0], [-0.0891499966, 17.0, 18.0, 0.0], [0.102200352, 0.0, 0.0, 0.0], [0.657500029, 19.0, 20.0, 2.0], [-0.825999975, 21.0, 22.0, 4.0], [-0.107934795, 0.0, 0.0, 0.0], [0.0993881673, 0.0, 0.0, 0.0], [0.00887220167, 0.0, 0.0, 0.0], [0.0895929858, 0.0, 0.0, 0.0], [-0.0778277367, 0.0, 0.0, 0.0], [0.00404504407, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 8, 17, 18, 14, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 2, 5, 7, 6, 9, 13, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_355(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.845499992, 3.0, 4.0, 1.0], [-0.936499953, 5.0, 6.0, 4.0], [-0.161500007, 7.0, 8.0, 0.0], [-0.2755, 9.0, 10.0, 0.0], [-0.99849999, 11.0, 12.0, 3.0], [0.600499988, 13.0, 14.0, 2.0], [-0.108514711, 0.0, 0.0, 0.0], [-0.0212994572, 0.0, 0.0, 0.0], [-0.558500051, 15.0, 16.0, 1.0], [-0.270500004, 17.0, 18.0, 0.0], [0.0451404713, 0.0, 0.0, 0.0], [0.463, 19.0, 20.0, 2.0], [-0.772500038, 21.0, 22.0, 1.0], [-0.421999991, 23.0, 24.0, 1.0], [0.186934769, 0.0, 0.0, 0.0], [-0.4745, 25.0, 26.0, 1.0], [-0.104071997, 0.0, 0.0, 0.0], [0.648499966, 27.0, 28.0, 2.0], [-0.0150287002, 0.0, 0.0, 0.0], [0.566500008, 29.0, 30.0, 2.0], [-0.80250001, 31.0, 32.0, 1.0], [-0.926499963, 33.0, 34.0, 4.0], [-0.2465, 35.0, 36.0, 0.0], [0.0583074689, 0.0, 0.0, 0.0], [-0.0984570533, 0.0, 0.0, 0.0], [0.0768329725, 0.0, 0.0, 0.0], [0.0318025276, 0.0, 0.0, 0.0], [-0.100435764, 0.0, 0.0, 0.0], [-0.205428839, 0.0, 0.0, 0.0], [-0.0180401076, 0.0, 0.0, 0.0], [0.0748786107, 0.0, 0.0, 0.0], [-0.184488341, 0.0, 0.0, 0.0], [0.161932006, 0.0, 0.0, 0.0], [0.0217646156, 0.0, 0.0, 0.0], [-0.0134477457, 0.0, 0.0, 0.0], [-0.180568337, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 15, 25, 26, 17, 27, 28, 11, 19, 29, 30, 31, 32, 33, 34, 35, 36, 24])
    branch_indices = np.array([0, 1, 3, 4, 9, 16, 10, 18, 2, 5, 12, 20, 6, 13, 21, 22, 14, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_356(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0728500038, 1.0, 2.0, 0.0], [-0.101500005, 3.0, 4.0, 0.0], [-0.965499997, 5.0, 6.0, 4.0], [-0.977499962, 7.0, 8.0, 4.0], [0.109667107, 0.0, 0.0, 0.0], [0.025204435, 0.0, 0.0, 0.0], [-0.125134096, 0.0, 0.0, 0.0], [0.332499981, 9.0, 10.0, 2.0], [-0.972499967, 11.0, 12.0, 4.0], [0.0529762246, 0.0, 0.0, 0.0], [-0.210500002, 13.0, 14.0, 0.0], [-0.208999991, 15.0, 16.0, 0.0], [-0.968500018, 17.0, 18.0, 4.0], [-0.198700592, 0.0, 0.0, 0.0], [0.00496037258, 0.0, 0.0, 0.0], [0.114831485, 0.0, 0.0, 0.0], [0.00527135702, 0.0, 0.0, 0.0], [-0.193245411, 0.0, 0.0, 0.0], [0.00937256496, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 10, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_357(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.851999998, 3.0, 4.0, 2.0], [0.101500005, 5.0, 6.0, 0.0], [-0.885499954, 7.0, 8.0, 2.0], [0.0291999988, 9.0, 10.0, 0.0], [-0.00567999994, 11.0, 12.0, 0.0], [0.298000008, 13.0, 14.0, 0.0], [-0.0748500004, 15.0, 16.0, 0.0], [0.0014549999, 17.0, 18.0, 0.0], [-0.005045, 19.0, 20.0, 0.0], [0.0784000009, 21.0, 22.0, 0.0], [-0.99849999, 23.0, 24.0, 1.0], [0.0087799998, 25.0, 26.0, 0.0], [0.147721589, 0.0, 0.0, 0.0], [-0.0295817386, 0.0, 0.0, 0.0], [-0.0802000016, 27.0, 28.0, 0.0], [-0.057099998, 29.0, 30.0, 0.0], [0.0243133791, 0.0, 0.0, 0.0], [0.0683500022, 31.0, 32.0, 0.0], [-0.0527499989, 33.0, 34.0, 0.0], [0.00334499986, 35.0, 36.0, 0.0], [-0.154743448, 0.0, 0.0, 0.0], [0.0610474646, 0.0, 0.0, 0.0], [-0.0682999939, 37.0, 38.0, 0.0], [-0.654500008, 39.0, 40.0, 2.0], [-0.284791946, 0.0, 0.0, 0.0], [-0.680500031, 41.0, 42.0, 2.0], [0.0011214671, 0.0, 0.0, 0.0], [0.259023666, 0.0, 0.0, 0.0], [-0.242306471, 0.0, 0.0, 0.0], [0.00762042869, 0.0, 0.0, 0.0], [-0.0505641997, 0.0, 0.0, 0.0], [-0.2056752, 0.0, 0.0, 0.0], [0.126635194, 0.0, 0.0, 0.0], [-0.225159794, 0.0, 0.0, 0.0], [0.338112861, 0.0, 0.0, 0.0], [0.0784340426, 0.0, 0.0, 0.0], [-0.0440489091, 0.0, 0.0, 0.0], [0.144235343, 0.0, 0.0, 0.0], [-0.205719307, 0.0, 0.0, 0.0], [-0.0160586089, 0.0, 0.0, 0.0], [-0.131724119, 0.0, 0.0, 0.0], [0.0642543361, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 31, 32, 33, 34, 35, 36, 21, 22, 37, 38, 39, 40, 25, 41, 42, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 9, 19, 20, 10, 2, 5, 11, 23, 24, 12, 26, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_358(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00209000008, 1.0, 2.0, 0.0], [-0.00271000015, 3.0, 4.0, 0.0], [-0.000834999955, 5.0, 6.0, 0.0], [-0.00463499967, 7.0, 8.0, 0.0], [-0.297067106, 0.0, 0.0, 0.0], [-0.00163000007, 9.0, 10.0, 0.0], [-0.000469999999, 11.0, 12.0, 0.0], [-0.0052199997, 13.0, 14.0, 0.0], [-0.00390999997, 15.0, 16.0, 0.0], [0.0233922508, 0.0, 0.0, 0.0], [-0.00132499996, 17.0, 18.0, 0.0], [-0.269943923, 0.0, 0.0, 0.0], [0.0042849998, 19.0, 20.0, 0.0], [-0.00550500024, 21.0, 22.0, 0.0], [-0.283186793, 0.0, 0.0, 0.0], [0.325743496, 0.0, 0.0, 0.0], [-0.0107660303, 0.0, 0.0, 0.0], [0.271413088, 0.0, 0.0, 0.0], [0.0745290145, 0.0, 0.0, 0.0], [0.00325499987, 23.0, 24.0, 0.0], [0.00768500008, 25.0, 26.0, 0.0], [-0.00467846356, 0.0, 0.0, 0.0], [0.291762412, 0.0, 0.0, 0.0], [0.0197790563, 0.0, 0.0, 0.0], [0.332240939, 0.0, 0.0, 0.0], [-0.0782031715, 0.0, 0.0, 0.0], [0.00578692416, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 4, 9, 17, 18, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 10, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_359(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.601000011, 1.0, 2.0, 2.0], [-0.16049999, 3.0, 4.0, 0.0], [-0.0164499991, 5.0, 6.0, 0.0], [-0.166500002, 7.0, 8.0, 0.0], [-0.155499995, 9.0, 10.0, 0.0], [-0.0761528909, 0.0, 0.0, 0.0], [-0.0201159231, 0.0, 0.0, 0.0], [-0.380499989, 11.0, 12.0, 0.0], [0.127663508, 0.0, 0.0, 0.0], [-0.232406929, 0.0, 0.0, 0.0], [-0.149500012, 13.0, 14.0, 0.0], [-0.394999981, 15.0, 16.0, 0.0], [-0.822000027, 17.0, 18.0, 2.0], [-0.154500008, 19.0, 20.0, 0.0], [-0.0807500035, 21.0, 22.0, 0.0], [-0.0101171024, 0.0, 0.0, 0.0], [0.168580726, 0.0, 0.0, 0.0], [-0.10785272, 0.0, 0.0, 0.0], [0.0699639767, 0.0, 0.0, 0.0], [0.144627735, 0.0, 0.0, 0.0], [0.0421450809, 0.0, 0.0, 0.0], [-0.226321235, 0.0, 0.0, 0.0], [0.00252005365, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 9, 19, 20, 21, 22, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 10, 13, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_360(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.797500014, 1.0, 2.0, 1.0], [0.352999985, 3.0, 4.0, 2.0], [-0.054299999, 5.0, 6.0, 0.0], [-0.148499995, 7.0, 8.0, 0.0], [-0.923500001, 9.0, 10.0, 4.0], [-0.440500021, 11.0, 12.0, 1.0], [-0.088434957, 0.0, 0.0, 0.0], [-0.100730494, 0.0, 0.0, 0.0], [0.0614121184, 0.0, 0.0, 0.0], [-0.173000008, 13.0, 14.0, 0.0], [-0.037157163, 0.0, 0.0, 0.0], [0.657500029, 15.0, 16.0, 2.0], [-0.0848620757, 0.0, 0.0, 0.0], [-0.973500013, 17.0, 18.0, 4.0], [-0.0225593615, 0.0, 0.0, 0.0], [0.625999987, 19.0, 20.0, 2.0], [-0.142000005, 21.0, 22.0, 0.0], [-0.000346506422, 0.0, 0.0, 0.0], [0.125815094, 0.0, 0.0, 0.0], [0.00365645299, 0.0, 0.0, 0.0], [-0.086787276, 0.0, 0.0, 0.0], [0.0636382028, 0.0, 0.0, 0.0], [-0.0758246332, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 17, 18, 14, 10, 19, 20, 21, 22, 12, 6])
    branch_indices = np.array([0, 1, 3, 4, 9, 13, 2, 5, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_361(xs):
    #Predicts Class 1
    function_dict = np.array([[0.0696500018, 1.0, 2.0, 0.0], [-0.138500005, 3.0, 4.0, 0.0], [0.0736149922, 0.0, 0.0, 0.0], [-0.985499978, 5.0, 6.0, 4.0], [-0.99150002, 7.0, 8.0, 3.0], [0.0887623057, 0.0, 0.0, 0.0], [-0.365500003, 9.0, 10.0, 0.0], [-0.153985679, 0.0, 0.0, 0.0], [-0.0268887244, 0.0, 0.0, 0.0], [0.0800661445, 0.0, 0.0, 0.0], [-0.178499997, 11.0, 12.0, 0.0], [-0.0120059354, 0.0, 0.0, 0.0], [0.0610109828, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 6, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_362(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.401499987, 1.0, 2.0, 1.0], [-0.33950001, 3.0, 4.0, 0.0], [-0.266499996, 5.0, 6.0, 0.0], [-0.115594685, 0.0, 0.0, 0.0], [-0.281499982, 7.0, 8.0, 0.0], [-0.318499982, 9.0, 10.0, 0.0], [0.141090989, 0.0, 0.0, 0.0], [-0.899500012, 11.0, 12.0, 4.0], [-0.956499994, 13.0, 14.0, 4.0], [0.13370356, 0.0, 0.0, 0.0], [-0.139182493, 0.0, 0.0, 0.0], [-0.00394938607, 0.0, 0.0, 0.0], [0.128225967, 0.0, 0.0, 0.0], [0.48299998, 15.0, 16.0, 2.0], [-0.889500022, 17.0, 18.0, 4.0], [0.0194531288, 0.0, 0.0, 0.0], [-0.10172262, 0.0, 0.0, 0.0], [0.042322658, 0.0, 0.0, 0.0], [-0.0374800563, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 15, 16, 17, 18, 9, 10, 6])
    branch_indices = np.array([0, 1, 4, 7, 8, 13, 14, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_363(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.620499969, 3.0, 4.0, 0.0], [-0.822000027, 5.0, 6.0, 2.0], [0.588, 7.0, 8.0, 0.0], [0.0647894815, 0.0, 0.0, 0.0], [-0.134595245, 0.0, 0.0, 0.0], [-0.519999981, 9.0, 10.0, 2.0], [0.577499986, 11.0, 12.0, 0.0], [-0.106602132, 0.0, 0.0, 0.0], [0.0742346197, 0.0, 0.0, 0.0], [-0.0824270025, 0.0, 0.0, 0.0], [0.5625, 13.0, 14.0, 0.0], [0.111383371, 0.0, 0.0, 0.0], [0.000770659943, 0.0, 0.0, 0.0], [-0.0884322077, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_364(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.407499999, 5.0, 6.0, 0.0], [-0.202485591, 0.0, 0.0, 0.0], [0.0751802623, 0.0, 0.0, 0.0], [0.122239821, 0.0, 0.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.120959848, 0.0, 0.0, 0.0], [-0.38349998, 9.0, 10.0, 0.0], [0.147587538, 0.0, 0.0, 0.0], [-0.337500006, 11.0, 12.0, 0.0], [-0.153070256, 0.0, 0.0, 0.0], [0.00204556971, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 9, 11, 12])
    branch_indices = np.array([0, 1, 2, 6, 8, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_365(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.996500015, 1.0, 2.0, 4.0], [0.549000025, 3.0, 4.0, 0.0], [0.0828688517, 0.0, 0.0, 0.0], [0.534000039, 5.0, 6.0, 0.0], [0.585000038, 7.0, 8.0, 0.0], [0.429499984, 9.0, 10.0, 0.0], [0.539999962, 11.0, 12.0, 0.0], [0.565500021, 13.0, 14.0, 0.0], [0.613499999, 15.0, 16.0, 0.0], [0.426499993, 17.0, 18.0, 0.0], [0.431500018, 19.0, 20.0, 0.0], [-0.152153954, 0.0, 0.0, 0.0], [0.543500006, 21.0, 22.0, 0.0], [0.561499953, 23.0, 24.0, 0.0], [0.224000618, 0.0, 0.0, 0.0], [-0.119053237, 0.0, 0.0, 0.0], [0.620499969, 25.0, 26.0, 0.0], [0.00116419885, 0.0, 0.0, 0.0], [-0.255608052, 0.0, 0.0, 0.0], [0.224443763, 0.0, 0.0, 0.0], [0.00500323251, 0.0, 0.0, 0.0], [0.0689818263, 0.0, 0.0, 0.0], [-0.100046881, 0.0, 0.0, 0.0], [0.112297975, 0.0, 0.0, 0.0], [-0.0865506381, 0.0, 0.0, 0.0], [0.0579340644, 0.0, 0.0, 0.0], [-0.0524160862, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 21, 22, 23, 24, 14, 15, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7, 13, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_366(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.921499968, 1.0, 2.0, 3.0], [-0.931499958, 3.0, 4.0, 3.0], [-0.201499999, 5.0, 6.0, 0.0], [-0.948500037, 7.0, 8.0, 3.0], [-0.107646823, 0.0, 0.0, 0.0], [-0.623000026, 9.0, 10.0, 1.0], [-0.867499948, 11.0, 12.0, 3.0], [-0.281499982, 13.0, 14.0, 0.0], [-0.632499993, 15.0, 16.0, 1.0], [0.143038929, 0.0, 0.0, 0.0], [-0.0127796736, 0.0, 0.0, 0.0], [-0.103167281, 0.0, 0.0, 0.0], [0.0621277578, 0.0, 0.0, 0.0], [-0.334500015, 17.0, 18.0, 0.0], [-0.759500027, 19.0, 20.0, 1.0], [0.129200846, 0.0, 0.0, 0.0], [-0.0195073076, 0.0, 0.0, 0.0], [0.0264644884, 0.0, 0.0, 0.0], [-0.107615821, 0.0, 0.0, 0.0], [0.0271198247, 0.0, 0.0, 0.0], [-0.018356733, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 15, 16, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_367(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.233500004, 1.0, 2.0, 0.0], [-0.972499967, 3.0, 4.0, 4.0], [-0.887500048, 5.0, 6.0, 4.0], [0.0979082957, 0.0, 0.0, 0.0], [0.554499984, 7.0, 8.0, 2.0], [-0.913499951, 9.0, 10.0, 4.0], [0.517500043, 11.0, 12.0, 2.0], [-0.739500046, 13.0, 14.0, 1.0], [-0.789999962, 15.0, 16.0, 1.0], [-0.932500005, 17.0, 18.0, 4.0], [-0.151079118, 0.0, 0.0, 0.0], [0.125103399, 0.0, 0.0, 0.0], [-0.00296650757, 0.0, 0.0, 0.0], [-0.938500047, 19.0, 20.0, 4.0], [-0.986500025, 21.0, 22.0, 3.0], [-0.0627417266, 0.0, 0.0, 0.0], [-0.365500003, 23.0, 24.0, 1.0], [-0.94749999, 25.0, 26.0, 4.0], [-0.922500014, 27.0, 28.0, 4.0], [0.0944081768, 0.0, 0.0, 0.0], [-0.0660426915, 0.0, 0.0, 0.0], [-0.153550491, 0.0, 0.0, 0.0], [0.0214325413, 0.0, 0.0, 0.0], [0.0659358501, 0.0, 0.0, 0.0], [-0.0594848432, 0.0, 0.0, 0.0], [-0.0150879016, 0.0, 0.0, 0.0], [-0.13370952, 0.0, 0.0, 0.0], [0.137444839, 0.0, 0.0, 0.0], [-0.0337499343, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 19, 20, 21, 22, 15, 23, 24, 25, 26, 27, 28, 10, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 8, 16, 2, 5, 9, 17, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_368(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 1.0], [0.398499995, 3.0, 4.0, 2.0], [-0.75849998, 5.0, 6.0, 1.0], [-0.131974146, 0.0, 0.0, 0.0], [0.443499982, 7.0, 8.0, 2.0], [0.106543973, 0.0, 0.0, 0.0], [-0.743499994, 9.0, 10.0, 1.0], [0.0921999887, 0.0, 0.0, 0.0], [-0.0768166929, 0.0, 0.0, 0.0], [-0.0787526593, 0.0, 0.0, 0.0], [-0.713500023, 11.0, 12.0, 1.0], [-0.195499986, 13.0, 14.0, 0.0], [-0.691499949, 15.0, 16.0, 1.0], [-0.00607739389, 0.0, 0.0, 0.0], [0.108917773, 0.0, 0.0, 0.0], [-0.0849457681, 0.0, 0.0, 0.0], [0.00723318243, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 4, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_369(xs):
    #Predicts Class 3
    function_dict = np.array([[0.446500003, 1.0, 2.0, 0.0], [0.436500013, 3.0, 4.0, 0.0], [0.455500007, 5.0, 6.0, 0.0], [0.434499979, 7.0, 8.0, 0.0], [0.445500016, 9.0, 10.0, 0.0], [0.239420921, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [0.432500005, 13.0, 14.0, 0.0], [0.137559518, 0.0, 0.0, 0.0], [-0.249160692, 0.0, 0.0, 0.0], [-0.0326646864, 0.0, 0.0, 0.0], [0.547500014, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.428499997, 19.0, 20.0, 0.0], [-0.141607791, 0.0, 0.0, 0.0], [0.539999962, 21.0, 22.0, 0.0], [0.588, 23.0, 24.0, 0.0], [0.256020308, 0.0, 0.0, 0.0], [-0.0795207098, 0.0, 0.0, 0.0], [-0.0025377397, 0.0, 0.0, 0.0], [0.18559517, 0.0, 0.0, 0.0], [-0.00537201809, 0.0, 0.0, 0.0], [-0.169399783, 0.0, 0.0, 0.0], [0.0632753521, 0.0, 0.0, 0.0], [-0.0253108162, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 10, 5, 21, 22, 23, 24, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 11, 15, 16, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_370(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.186500013, 3.0, 4.0, 0.0], [-0.67050004, 5.0, 6.0, 2.0], [-0.190499991, 7.0, 8.0, 0.0], [-0.168500006, 9.0, 10.0, 0.0], [-0.254500002, 11.0, 12.0, 0.0], [-0.333499998, 13.0, 14.0, 0.0], [-0.192499995, 15.0, 16.0, 0.0], [0.235962898, 0.0, 0.0, 0.0], [-0.160725474, 0.0, 0.0, 0.0], [-0.162, 17.0, 18.0, 0.0], [-0.33950001, 19.0, 20.0, 0.0], [-0.186500013, 21.0, 22.0, 0.0], [-0.0863886029, 0.0, 0.0, 0.0], [-0.02575, 23.0, 24.0, 0.0], [-0.20449999, 25.0, 26.0, 0.0], [-0.107429944, 0.0, 0.0, 0.0], [0.0781463906, 0.0, 0.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.0258621313, 0.0, 0.0, 0.0], [0.0741752908, 0.0, 0.0, 0.0], [-0.206, 29.0, 30.0, 0.0], [-0.148499995, 31.0, 32.0, 0.0], [-0.436999977, 33.0, 34.0, 2.0], [0.0490000024, 35.0, 36.0, 0.0], [0.000618780439, 0.0, 0.0, 0.0], [0.18921788, 0.0, 0.0, 0.0], [-0.00898727588, 0.0, 0.0, 0.0], [0.0463451073, 0.0, 0.0, 0.0], [-0.084070161, 0.0, 0.0, 0.0], [-0.281853884, 0.0, 0.0, 0.0], [0.162914336, 0.0, 0.0, 0.0], [-0.0991241261, 0.0, 0.0, 0.0], [0.148325622, 0.0, 0.0, 0.0], [-0.0848245546, 0.0, 0.0, 0.0], [-0.158085659, 0.0, 0.0, 0.0], [0.0417772718, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 8, 9, 17, 27, 28, 19, 20, 29, 30, 31, 32, 13, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 10, 18, 2, 5, 11, 12, 21, 22, 6, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_371(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.885499954, 3.0, 4.0, 2.0], [0.172499999, 5.0, 6.0, 0.0], [0.615499973, 7.0, 8.0, 0.0], [-0.130084231, 0.0, 0.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [0.569999993, 13.0, 14.0, 0.0], [0.621500015, 15.0, 16.0, 0.0], [-0.996500015, 17.0, 18.0, 1.0], [-0.997500002, 19.0, 20.0, 1.0], [-0.992499948, 21.0, 22.0, 1.0], [0.43599999, 23.0, 24.0, 0.0], [0.446500003, 25.0, 26.0, 0.0], [0.239728197, 0.0, 0.0, 0.0], [-0.146583229, 0.0, 0.0, 0.0], [0.0285643879, 0.0, 0.0, 0.0], [-0.410000026, 27.0, 28.0, 0.0], [-0.07563366, 0.0, 0.0, 0.0], [-0.252091914, 0.0, 0.0, 0.0], [-0.716500044, 29.0, 30.0, 2.0], [-0.999500036, 31.0, 32.0, 4.0], [-0.0708832517, 0.0, 0.0, 0.0], [-0.146391988, 0.0, 0.0, 0.0], [0.5255, 33.0, 34.0, 0.0], [0.00972256716, 0.0, 0.0, 0.0], [-0.0414569005, 0.0, 0.0, 0.0], [-0.00657323748, 0.0, 0.0, 0.0], [0.207326487, 0.0, 0.0, 0.0], [-0.0763603151, 0.0, 0.0, 0.0], [0.0931853727, 0.0, 0.0, 0.0], [0.199093372, 0.0, 0.0, 0.0], [0.0144401118, 0.0, 0.0, 0.0], [0.169905424, 0.0, 0.0, 0.0], [-0.0340342186, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 14, 15, 16, 4, 27, 28, 18, 19, 29, 30, 31, 32, 22, 23, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 9, 17, 10, 20, 6, 11, 21, 12, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_372(xs):
    #Predicts Class 0
    function_dict = np.array([[0.412499994, 1.0, 2.0, 2.0], [-0.860499978, 3.0, 4.0, 1.0], [0.430500001, 5.0, 6.0, 2.0], [0.0655297935, 0.0, 0.0, 0.0], [-0.970499992, 7.0, 8.0, 4.0], [0.0808187872, 0.0, 0.0, 0.0], [-0.179500014, 9.0, 10.0, 0.0], [-0.146322533, 0.0, 0.0, 0.0], [-0.953500032, 11.0, 12.0, 4.0], [0.463499993, 13.0, 14.0, 2.0], [-0.96449995, 15.0, 16.0, 4.0], [0.0743920729, 0.0, 0.0, 0.0], [-0.208999991, 17.0, 18.0, 0.0], [-0.968500018, 19.0, 20.0, 4.0], [-0.189500004, 21.0, 22.0, 0.0], [-0.068478629, 0.0, 0.0, 0.0], [-0.746500015, 23.0, 24.0, 1.0], [-0.00416294858, 0.0, 0.0, 0.0], [-0.103196695, 0.0, 0.0, 0.0], [0.0516771562, 0.0, 0.0, 0.0], [-0.153813407, 0.0, 0.0, 0.0], [0.0186310764, 0.0, 0.0, 0.0], [-0.122113258, 0.0, 0.0, 0.0], [0.194324076, 0.0, 0.0, 0.0], [0.0192052741, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 17, 18, 5, 19, 20, 21, 22, 15, 23, 24])
    branch_indices = np.array([0, 1, 4, 8, 12, 2, 6, 9, 13, 14, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_373(xs):
    #Predicts Class 1
    function_dict = np.array([[0.238000005, 1.0, 2.0, 2.0], [-0.066781804, 0.0, 0.0, 0.0], [0.0695500001, 3.0, 4.0, 0.0], [-0.112499997, 5.0, 6.0, 0.0], [0.0797457099, 0.0, 0.0, 0.0], [0.455500007, 7.0, 8.0, 2.0], [-0.0833498836, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 3.0], [0.461499989, 11.0, 12.0, 2.0], [0.106319949, 0.0, 0.0, 0.0], [0.00457997248, 0.0, 0.0, 0.0], [-0.109930307, 0.0, 0.0, 0.0], [-0.000950585003, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 6, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_374(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [-0.179500014, 3.0, 4.0, 0.0], [0.0761934221, 0.0, 0.0, 0.0], [-0.186500013, 5.0, 6.0, 0.0], [-0.715499997, 7.0, 8.0, 1.0], [-0.736500025, 9.0, 10.0, 4.0], [0.109419428, 0.0, 0.0, 0.0], [-0.109499998, 11.0, 12.0, 0.0], [-0.861500025, 13.0, 14.0, 4.0], [0.651499987, 15.0, 16.0, 2.0], [0.073230207, 0.0, 0.0, 0.0], [-0.239874721, 0.0, 0.0, 0.0], [0.0338657014, 0.0, 0.0, 0.0], [-0.631500006, 17.0, 18.0, 1.0], [0.666499972, 19.0, 20.0, 2.0], [0.0047744913, 0.0, 0.0, 0.0], [-0.0611973852, 0.0, 0.0, 0.0], [0.122407913, 0.0, 0.0, 0.0], [-0.0199343134, 0.0, 0.0, 0.0], [-0.138784498, 0.0, 0.0, 0.0], [-0.0154033192, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 11, 12, 17, 18, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_375(xs):
    #Predicts Class 3
    function_dict = np.array([[0.424000025, 1.0, 2.0, 0.0], [0.415000021, 3.0, 4.0, 0.0], [0.428499997, 5.0, 6.0, 0.0], [0.409500003, 7.0, 8.0, 0.0], [0.104878984, 0.0, 0.0, 0.0], [-0.333803564, 0.0, 0.0, 0.0], [0.432500005, 9.0, 10.0, 0.0], [0.282499999, 11.0, 12.0, 0.0], [-0.254721135, 0.0, 0.0, 0.0], [0.117204875, 0.0, 0.0, 0.0], [0.445500016, 13.0, 14.0, 0.0], [0.2755, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [0.436500013, 19.0, 20.0, 0.0], [0.46450001, 21.0, 22.0, 0.0], [0.00102445006, 0.0, 0.0, 0.0], [-0.144582614, 0.0, 0.0, 0.0], [0.116042912, 0.0, 0.0, 0.0], [-0.0892419368, 0.0, 0.0, 0.0], [-0.024477588, 0.0, 0.0, 0.0], [-0.220624104, 0.0, 0.0, 0.0], [0.0887373239, 0.0, 0.0, 0.0], [-0.0130561087, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_376(xs):
    #Predicts Class 4
    function_dict = np.array([[0.190499991, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.194499999, 5.0, 6.0, 0.0], [0.107500002, 7.0, 8.0, 0.0], [0.152999997, 9.0, 10.0, 0.0], [0.106046528, 0.0, 0.0, 0.0], [0.202500001, 11.0, 12.0, 0.0], [0.0945499986, 13.0, 14.0, 0.0], [0.125718161, 0.0, 0.0, 0.0], [-0.20463109, 0.0, 0.0, 0.0], [0.00192676869, 0.0, 0.0, 0.0], [-0.052873902, 0.0, 0.0, 0.0], [0.069264099, 0.0, 0.0, 0.0], [0.0892499983, 15.0, 16.0, 0.0], [-0.128051803, 0.0, 0.0, 0.0], [-0.00204641838, 0.0, 0.0, 0.0], [0.0904499739, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 14, 8, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_377(xs):
    #Predicts Class 5
    function_dict = np.array([[0.409500003, 1.0, 2.0, 0.0], [0.282499999, 3.0, 4.0, 0.0], [0.415000021, 5.0, 6.0, 0.0], [0.263000011, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.255330652, 0.0, 0.0, 0.0], [0.424000025, 11.0, 12.0, 0.0], [0.212500006, 13.0, 14.0, 0.0], [0.265500009, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.102712713, 0.0, 0.0, 0.0], [-0.101275772, 0.0, 0.0, 0.0], [0.428499997, 19.0, 20.0, 0.0], [0.201499999, 21.0, 22.0, 0.0], [0.256500006, 23.0, 24.0, 0.0], [0.259986103, 0.0, 0.0, 0.0], [0.272000015, 25.0, 26.0, 0.0], [0.392499983, 27.0, 28.0, 0.0], [0.0625531003, 0.0, 0.0, 0.0], [0.334785581, 0.0, 0.0, 0.0], [0.432500005, 29.0, 30.0, 0.0], [-0.0113782445, 0.0, 0.0, 0.0], [0.103971571, 0.0, 0.0, 0.0], [-0.137163848, 0.0, 0.0, 0.0], [6.97957366e-05, 0.0, 0.0, 0.0], [-0.156741858, 0.0, 0.0, 0.0], [0.115572967, 0.0, 0.0, 0.0], [-0.260581225, 0.0, 0.0, 0.0], [-0.0783162862, 0.0, 0.0, 0.0], [-0.11189422, 0.0, 0.0, 0.0], [0.0168489777, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 27, 28, 18, 10, 5, 11, 19, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 9, 17, 2, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_378(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.0726500005, 1.0, 2.0, 0.0], [-0.113499999, 3.0, 4.0, 0.0], [-0.0580499992, 5.0, 6.0, 0.0], [0.702499986, 7.0, 8.0, 2.0], [0.523500025, 9.0, 10.0, 2.0], [0.123985417, 0.0, 0.0, 0.0], [-0.99150002, 11.0, 12.0, 3.0], [0.672500014, 13.0, 14.0, 2.0], [-0.984500051, 15.0, 16.0, 3.0], [-0.136324286, 0.0, 0.0, 0.0], [0.0297699012, 0.0, 0.0, 0.0], [-0.082181856, 0.0, 0.0, 0.0], [0.055057589, 0.0, 0.0, 0.0], [-0.151499987, 17.0, 18.0, 0.0], [0.104965873, 0.0, 0.0, 0.0], [-0.239500001, 19.0, 20.0, 0.0], [0.749500036, 21.0, 22.0, 2.0], [-0.00663498882, 0.0, 0.0, 0.0], [0.0730002075, 0.0, 0.0, 0.0], [0.0786384791, 0.0, 0.0, 0.0], [-0.0213676486, 0.0, 0.0, 0.0], [-0.147038162, 0.0, 0.0, 0.0], [-0.0128604565, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 19, 20, 21, 22, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_379(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.963500023, 3.0, 4.0, 4.0], [-0.961500049, 5.0, 6.0, 4.0], [-0.230500013, 7.0, 8.0, 0.0], [-0.928499997, 9.0, 10.0, 4.0], [-0.976500034, 11.0, 12.0, 4.0], [-0.958500028, 13.0, 14.0, 4.0], [0.490999997, 15.0, 16.0, 2.0], [0.514500022, 17.0, 18.0, 2.0], [-0.651000023, 19.0, 20.0, 1.0], [-0.9005, 21.0, 22.0, 4.0], [-0.979499996, 23.0, 24.0, 4.0], [-0.25150001, 25.0, 26.0, 0.0], [-0.117114976, 0.0, 0.0, 0.0], [0.387499988, 27.0, 28.0, 2.0], [0.0605156086, 0.0, 0.0, 0.0], [-0.0656409413, 0.0, 0.0, 0.0], [0.436500013, 29.0, 30.0, 2.0], [-0.00108075782, 0.0, 0.0, 0.0], [-0.723999977, 31.0, 32.0, 1.0], [0.150136337, 0.0, 0.0, 0.0], [-0.164129406, 0.0, 0.0, 0.0], [0.0393026769, 0.0, 0.0, 0.0], [-0.982499957, 33.0, 34.0, 4.0], [-0.100361638, 0.0, 0.0, 0.0], [-0.0486449637, 0.0, 0.0, 0.0], [0.444499999, 35.0, 36.0, 2.0], [-0.223000005, 37.0, 38.0, 0.0], [-0.186500013, 39.0, 40.0, 0.0], [-0.0310426485, 0.0, 0.0, 0.0], [-0.204487383, 0.0, 0.0, 0.0], [0.0792554915, 0.0, 0.0, 0.0], [-0.0690724477, 0.0, 0.0, 0.0], [-0.0215282496, 0.0, 0.0, 0.0], [0.083139725, 0.0, 0.0, 0.0], [0.00533063523, 0.0, 0.0, 0.0], [0.145204127, 0.0, 0.0, 0.0], [0.0111459708, 0.0, 0.0, 0.0], [0.106686994, 0.0, 0.0, 0.0], [0.00207615667, 0.0, 0.0, 0.0], [-0.123838872, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 29, 30, 18, 31, 32, 20, 21, 22, 33, 34, 24, 25, 35, 36, 13, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 4, 9, 19, 10, 2, 5, 11, 23, 12, 26, 6, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_380(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0728500038, 1.0, 2.0, 0.0], [-0.101500005, 3.0, 4.0, 0.0], [-0.083224237, 0.0, 0.0, 0.0], [0.694000006, 5.0, 6.0, 2.0], [0.0955978408, 0.0, 0.0, 0.0], [0.673500001, 7.0, 8.0, 2.0], [-0.606999993, 9.0, 10.0, 1.0], [-0.431500018, 11.0, 12.0, 1.0], [-0.114068836, 0.0, 0.0, 0.0], [-0.0636996478, 0.0, 0.0, 0.0], [-0.311999977, 13.0, 14.0, 0.0], [-0.0132818585, 0.0, 0.0, 0.0], [0.0802214295, 0.0, 0.0, 0.0], [-0.0456424318, 0.0, 0.0, 0.0], [0.0756666362, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_381(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.5625, 3.0, 4.0, 0.0], [0.616999984, 5.0, 6.0, 0.0], [0.503000021, 7.0, 8.0, 0.0], [-0.125673115, 0.0, 0.0, 0.0], [0.117825538, 0.0, 0.0, 0.0], [0.620499969, 9.0, 10.0, 0.0], [0.392499983, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.0610060468, 0.0, 0.0, 0.0], [0.0362119004, 0.0, 0.0, 0.0], [0.273999989, 15.0, 16.0, 0.0], [0.401499987, 17.0, 18.0, 0.0], [0.513000011, 19.0, 20.0, 0.0], [0.178097188, 0.0, 0.0, 0.0], [-0.00169045071, 0.0, 0.0, 0.0], [0.115957618, 0.0, 0.0, 0.0], [-0.154763862, 0.0, 0.0, 0.0], [-0.0253174584, 0.0, 0.0, 0.0], [0.130873203, 0.0, 0.0, 0.0], [-0.0241893195, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 20, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_382(xs):
    #Predicts Class 4
    function_dict = np.array([[0.1105, 1.0, 2.0, 0.0], [0.0945499986, 3.0, 4.0, 0.0], [0.157999992, 5.0, 6.0, 0.0], [0.0912000015, 7.0, 8.0, 0.0], [-0.16159828, 0.0, 0.0, 0.0], [0.163677424, 0.0, 0.0, 0.0], [0.193500012, 9.0, 10.0, 0.0], [0.0888999999, 11.0, 12.0, 0.0], [0.0923999995, 13.0, 14.0, 0.0], [-0.145958185, 0.0, 0.0, 0.0], [0.194499999, 15.0, 16.0, 0.0], [0.0885500014, 17.0, 18.0, 0.0], [-0.142589092, 0.0, 0.0, 0.0], [0.117255785, 0.0, 0.0, 0.0], [-0.00478434516, 0.0, 0.0, 0.0], [0.10773702, 0.0, 0.0, 0.0], [0.202500001, 19.0, 20.0, 0.0], [-0.000437663693, 0.0, 0.0, 0.0], [0.113378145, 0.0, 0.0, 0.0], [-0.03892041, 0.0, 0.0, 0.0], [0.0577283874, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_383(xs):
    #Predicts Class 5
    function_dict = np.array([[0.36500001, 1.0, 2.0, 0.0], [0.273999989, 3.0, 4.0, 0.0], [0.394500017, 5.0, 6.0, 0.0], [0.263000011, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.184101447, 0.0, 0.0, 0.0], [0.404500008, 11.0, 12.0, 0.0], [0.259499997, 13.0, 14.0, 0.0], [0.150020838, 0.0, 0.0, 0.0], [0.276499987, 15.0, 16.0, 0.0], [0.336000025, 17.0, 18.0, 0.0], [-0.102849416, 0.0, 0.0, 0.0], [0.433499992, 19.0, 20.0, 0.0], [0.254999995, 21.0, 22.0, 0.0], [-0.128619775, 0.0, 0.0, 0.0], [-0.0399154872, 0.0, 0.0, 0.0], [-0.264220357, 0.0, 0.0, 0.0], [0.04635242, 0.0, 0.0, 0.0], [-0.0254228506, 0.0, 0.0, 0.0], [0.429499984, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [-0.00716979243, 0.0, 0.0, 0.0], [0.135636866, 0.0, 0.0, 0.0], [0.0196290575, 0.0, 0.0, 0.0], [0.176203936, 0.0, 0.0, 0.0], [0.00658757845, 0.0, 0.0, 0.0], [-0.0926263481, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 15, 16, 17, 18, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 10, 2, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_384(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [0.439999998, 3.0, 4.0, 2.0], [-0.975499988, 5.0, 6.0, 4.0], [-0.103626557, 0.0, 0.0, 0.0], [0.0270323157, 0.0, 0.0, 0.0], [0.0888427049, 0.0, 0.0, 0.0], [-0.973500013, 7.0, 8.0, 4.0], [-0.0839012563, 0.0, 0.0, 0.0], [-0.759500027, 9.0, 10.0, 1.0], [-0.965499997, 11.0, 12.0, 4.0], [-0.833500028, 13.0, 14.0, 4.0], [0.109003782, 0.0, 0.0, 0.0], [0.0046596257, 0.0, 0.0, 0.0], [-0.0180614684, 0.0, 0.0, 0.0], [0.0326467939, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 2, 6, 8, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_385(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.820500016, 1.0, 2.0, 1.0], [-0.989500046, 3.0, 4.0, 3.0], [0.334500015, 5.0, 6.0, 2.0], [-0.99849999, 7.0, 8.0, 3.0], [-0.847499967, 9.0, 10.0, 1.0], [-0.98150003, 11.0, 12.0, 4.0], [0.361499995, 13.0, 14.0, 2.0], [-0.0169245172, 0.0, 0.0, 0.0], [-0.124717027, 0.0, 0.0, 0.0], [-0.0354122482, 0.0, 0.0, 0.0], [0.0765893981, 0.0, 0.0, 0.0], [-0.0632756576, 0.0, 0.0, 0.0], [0.132045001, 0.0, 0.0, 0.0], [-0.100183584, 0.0, 0.0, 0.0], [0.386500001, 15.0, 16.0, 2.0], [0.102236114, 0.0, 0.0, 0.0], [-0.207500011, 17.0, 18.0, 0.0], [0.00851377752, 0.0, 0.0, 0.0], [-0.0391289257, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 12, 13, 15, 17, 18])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 6, 14, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_386(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 1.0], [-0.994500041, 3.0, 4.0, 3.0], [-0.756500006, 5.0, 6.0, 1.0], [-0.180500001, 7.0, 8.0, 0.0], [-0.119659305, 0.0, 0.0, 0.0], [0.0958180651, 0.0, 0.0, 0.0], [-0.743499994, 9.0, 10.0, 1.0], [-0.0537738614, 0.0, 0.0, 0.0], [0.0793746635, 0.0, 0.0, 0.0], [-0.0786777213, 0.0, 0.0, 0.0], [-0.713500023, 11.0, 12.0, 1.0], [-0.195499986, 13.0, 14.0, 0.0], [-0.996500015, 15.0, 16.0, 3.0], [-0.000615775527, 0.0, 0.0, 0.0], [0.09598241, 0.0, 0.0, 0.0], [0.0319916159, 0.0, 0.0, 0.0], [-0.017313065, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_387(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.997500002, 3.0, 4.0, 1.0], [-0.0588625371, 0.0, 0.0, 0.0], [-0.613499999, 5.0, 6.0, 2.0], [0.101500005, 7.0, 8.0, 0.0], [-0.438000023, 9.0, 10.0, 0.0], [-0.0101450002, 11.0, 12.0, 0.0], [-0.0855499953, 13.0, 14.0, 0.0], [0.355500013, 15.0, 16.0, 0.0], [0.0936047584, 0.0, 0.0, 0.0], [-0.205500007, 17.0, 18.0, 0.0], [0.130948231, 0.0, 0.0, 0.0], [-0.0287522525, 0.0, 0.0, 0.0], [-0.215000004, 19.0, 20.0, 0.0], [-0.195876971, 0.0, 0.0, 0.0], [0.139955342, 0.0, 0.0, 0.0], [-0.0591039173, 0.0, 0.0, 0.0], [-0.0437482595, 0.0, 0.0, 0.0], [0.00210919115, 0.0, 0.0, 0.0], [-0.126234934, 0.0, 0.0, 0.0], [0.132582635, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 17, 18, 11, 12, 19, 20, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 4, 7, 13, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_388(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00209000008, 1.0, 2.0, 0.0], [-0.00271000015, 3.0, 4.0, 0.0], [0.0131000001, 5.0, 6.0, 0.0], [-0.00463499967, 7.0, 8.0, 0.0], [-0.25463751, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0192999989, 11.0, 12.0, 0.0], [-0.0052199997, 13.0, 14.0, 0.0], [-0.00390999997, 15.0, 16.0, 0.0], [-0.000780000002, 17.0, 18.0, 0.0], [-0.822000027, 19.0, 20.0, 2.0], [-0.28073588, 0.0, 0.0, 0.0], [0.02685, 21.0, 22.0, 0.0], [-0.00574500021, 23.0, 24.0, 0.0], [-0.192977861, 0.0, 0.0, 0.0], [0.253694087, 0.0, 0.0, 0.0], [-0.0139569575, 0.0, 0.0, 0.0], [-0.00167000003, 25.0, 26.0, 0.0], [0.000549999997, 27.0, 28.0, 0.0], [0.363279223, 0.0, 0.0, 0.0], [-0.0301500242, 0.0, 0.0, 0.0], [0.0256000012, 29.0, 30.0, 0.0], [0.028549999, 31.0, 32.0, 0.0], [-0.00535691017, 0.0, 0.0, 0.0], [0.180196285, 0.0, 0.0, 0.0], [0.0540089533, 0.0, 0.0, 0.0], [0.186927989, 0.0, 0.0, 0.0], [-0.280924529, 0.0, 0.0, 0.0], [0.0228462089, 0.0, 0.0, 0.0], [-0.0243150182, 0.0, 0.0, 0.0], [0.28183198, 0.0, 0.0, 0.0], [-0.32009837, 0.0, 0.0, 0.0], [0.00812653545, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 4, 25, 26, 27, 28, 19, 20, 11, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 9, 17, 18, 10, 6, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_389(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.654500008, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.546499968, 5.0, 6.0, 2.0], [0.615499973, 7.0, 8.0, 0.0], [0.193000004, 9.0, 10.0, 0.0], [-0.0884141997, 0.0, 0.0, 0.0], [0.00794052891, 0.0, 0.0, 0.0], [0.569999993, 11.0, 12.0, 0.0], [0.621500015, 13.0, 14.0, 0.0], [-0.193500012, 15.0, 16.0, 0.0], [0.344999999, 17.0, 18.0, 0.0], [0.561499953, 19.0, 20.0, 0.0], [0.211726889, 0.0, 0.0, 0.0], [-0.127451986, 0.0, 0.0, 0.0], [0.0246674456, 0.0, 0.0, 0.0], [-0.296499997, 21.0, 22.0, 0.0], [-0.0592, 23.0, 24.0, 0.0], [-0.972000003, 25.0, 26.0, 2.0], [-0.972000003, 27.0, 28.0, 2.0], [-0.000165322272, 0.0, 0.0, 0.0], [-0.116107844, 0.0, 0.0, 0.0], [0.0165883992, 0.0, 0.0, 0.0], [0.113139555, 0.0, 0.0, 0.0], [-0.174788252, 0.0, 0.0, 0.0], [-0.0270670112, 0.0, 0.0, 0.0], [0.241006494, 0.0, 0.0, 0.0], [-0.0423402376, 0.0, 0.0, 0.0], [-0.0375844389, 0.0, 0.0, 0.0], [0.162718698, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 4, 9, 15, 16, 10, 17, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_390(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.962499976, 1.0, 2.0, 3.0], [-0.615499973, 3.0, 4.0, 1.0], [-0.772500038, 5.0, 6.0, 1.0], [-0.62650001, 7.0, 8.0, 1.0], [-0.789499998, 9.0, 10.0, 4.0], [0.113666251, 0.0, 0.0, 0.0], [-0.699499965, 11.0, 12.0, 1.0], [-0.684499979, 13.0, 14.0, 1.0], [0.131506339, 0.0, 0.0, 0.0], [-0.993499994, 15.0, 16.0, 3.0], [0.774999976, 17.0, 18.0, 2.0], [-0.210999995, 19.0, 20.0, 0.0], [-0.645500004, 21.0, 22.0, 1.0], [-0.961500049, 23.0, 24.0, 4.0], [-0.213499993, 25.0, 26.0, 0.0], [-0.889500022, 27.0, 28.0, 4.0], [-0.163230315, 0.0, 0.0, 0.0], [0.0810566917, 0.0, 0.0, 0.0], [-0.0441394821, 0.0, 0.0, 0.0], [-0.132169515, 0.0, 0.0, 0.0], [0.0455809906, 0.0, 0.0, 0.0], [0.158336729, 0.0, 0.0, 0.0], [-0.526499987, 29.0, 30.0, 1.0], [-0.0260089226, 0.0, 0.0, 0.0], [0.033291325, 0.0, 0.0, 0.0], [-0.158828154, 0.0, 0.0, 0.0], [0.029856788, 0.0, 0.0, 0.0], [-0.0334703587, 0.0, 0.0, 0.0], [0.0383473709, 0.0, 0.0, 0.0], [-0.0810201168, 0.0, 0.0, 0.0], [0.0574385375, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 27, 28, 16, 17, 18, 5, 19, 20, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 15, 10, 2, 6, 11, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_391(xs):
    #Predicts Class 1
    function_dict = np.array([[0.0696500018, 1.0, 2.0, 0.0], [-0.112499997, 3.0, 4.0, 0.0], [0.0588693433, 0.0, 0.0, 0.0], [-0.1875, 5.0, 6.0, 0.0], [-0.109050617, 0.0, 0.0, 0.0], [-0.983500004, 7.0, 8.0, 4.0], [-0.96449995, 9.0, 10.0, 4.0], [0.0931839496, 0.0, 0.0, 0.0], [-0.818500042, 11.0, 12.0, 1.0], [-0.975499988, 13.0, 14.0, 4.0], [-0.0259100012, 0.0, 0.0, 0.0], [-0.0802374333, 0.0, 0.0, 0.0], [-0.00701058051, 0.0, 0.0, 0.0], [-0.0321232975, 0.0, 0.0, 0.0], [0.179820865, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 13, 14, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 8, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_392(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0731000006, 1.0, 2.0, 0.0], [-0.977499962, 3.0, 4.0, 4.0], [-0.0615079366, 0.0, 0.0, 0.0], [-0.988499999, 5.0, 6.0, 3.0], [-0.972499967, 7.0, 8.0, 4.0], [-0.114925399, 0.0, 0.0, 0.0], [0.0424840786, 0.0, 0.0, 0.0], [-0.661499977, 9.0, 10.0, 1.0], [-0.965499997, 11.0, 12.0, 4.0], [0.023113979, 0.0, 0.0, 0.0], [0.106680445, 0.0, 0.0, 0.0], [-0.993499994, 13.0, 14.0, 3.0], [-0.207500011, 15.0, 16.0, 0.0], [-0.00936350971, 0.0, 0.0, 0.0], [-0.122705862, 0.0, 0.0, 0.0], [-0.00766118197, 0.0, 0.0, 0.0], [0.0354341976, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 9, 10, 13, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_393(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.273499995, 1.0, 2.0, 0.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.0696248785, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.20449999, 11.0, 12.0, 0.0], [-0.532500029, 13.0, 14.0, 0.0], [-0.296499997, 15.0, 16.0, 0.0], [-0.228194654, 0.0, 0.0, 0.0], [-0.783500016, 17.0, 18.0, 2.0], [-0.206499994, 19.0, 20.0, 0.0], [-0.191500008, 21.0, 22.0, 0.0], [0.0567337126, 0.0, 0.0, 0.0], [-0.11873357, 0.0, 0.0, 0.0], [0.19176957, 0.0, 0.0, 0.0], [-0.277500004, 23.0, 24.0, 0.0], [-0.0772044063, 0.0, 0.0, 0.0], [0.100383811, 0.0, 0.0, 0.0], [0.0282801241, 0.0, 0.0, 0.0], [0.110465154, 0.0, 0.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [-0.185499996, 27.0, 28.0, 0.0], [0.00113164273, 0.0, 0.0, 0.0], [0.143158928, 0.0, 0.0, 0.0], [-0.174762994, 0.0, 0.0, 0.0], [0.114935115, 0.0, 0.0, 0.0], [0.120460115, 0.0, 0.0, 0.0], [-0.000818233588, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 23, 24, 4, 9, 17, 18, 19, 20, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 8, 16, 2, 5, 10, 6, 11, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_394(xs):
    #Predicts Class 4
    function_dict = np.array([[0.203500003, 1.0, 2.0, 0.0], [0.195499986, 3.0, 4.0, 0.0], [-0.206954032, 0.0, 0.0, 0.0], [0.0760499984, 5.0, 6.0, 0.0], [0.180136204, 0.0, 0.0, 0.0], [0.0740500018, 7.0, 8.0, 0.0], [0.0825999975, 9.0, 10.0, 0.0], [0.0560500026, 11.0, 12.0, 0.0], [0.163789198, 0.0, 0.0, 0.0], [-0.220458984, 0.0, 0.0, 0.0], [0.0854000002, 13.0, 14.0, 0.0], [0.00275197718, 0.0, 0.0, 0.0], [-0.155738637, 0.0, 0.0, 0.0], [0.166412547, 0.0, 0.0, 0.0], [-0.034591306, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_395(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.125791773, 0.0, 0.0, 0.0], [0.0929301828, 0.0, 0.0, 0.0], [-0.00547533529, 0.0, 0.0, 0.0], [0.543500006, 9.0, 10.0, 0.0], [0.561499953, 11.0, 12.0, 0.0], [0.537500024, 13.0, 14.0, 0.0], [-0.102913238, 0.0, 0.0, 0.0], [0.0943846703, 0.0, 0.0, 0.0], [0.0226719193, 0.0, 0.0, 0.0], [-0.00263018301, 0.0, 0.0, 0.0], [0.0875780061, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_396(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.753000021, 3.0, 4.0, 1.0], [0.485500008, 5.0, 6.0, 2.0], [0.0029702941, 0.0, 0.0, 0.0], [-0.0877490863, 0.0, 0.0, 0.0], [-0.813500047, 7.0, 8.0, 1.0], [-0.234499991, 9.0, 10.0, 0.0], [-0.994500041, 11.0, 12.0, 3.0], [-0.913499951, 13.0, 14.0, 4.0], [-0.240500003, 15.0, 16.0, 0.0], [-0.216499999, 17.0, 18.0, 0.0], [-0.0114166485, 0.0, 0.0, 0.0], [0.0862792805, 0.0, 0.0, 0.0], [-0.219500005, 19.0, 20.0, 0.0], [0.0588509701, 0.0, 0.0, 0.0], [-0.55250001, 21.0, 22.0, 1.0], [-0.149731472, 0.0, 0.0, 0.0], [0.575000048, 23.0, 24.0, 2.0], [-0.99849999, 25.0, 26.0, 3.0], [-0.101544343, 0.0, 0.0, 0.0], [-0.00881293323, 0.0, 0.0, 0.0], [0.0375520885, 0.0, 0.0, 0.0], [-0.0592747629, 0.0, 0.0, 0.0], [0.00936482567, 0.0, 0.0, 0.0], [0.15933837, 0.0, 0.0, 0.0], [0.119858049, 0.0, 0.0, 0.0], [-0.00621414464, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 19, 20, 14, 21, 22, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 13, 6, 9, 15, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_397(xs):
    #Predicts Class 1
    function_dict = np.array([[0.740999997, 1.0, 2.0, 2.0], [0.701499999, 3.0, 4.0, 2.0], [-0.0580777675, 0.0, 0.0, 0.0], [0.657500029, 5.0, 6.0, 2.0], [0.0810034499, 0.0, 0.0, 0.0], [-0.684499979, 7.0, 8.0, 1.0], [-0.989500046, 9.0, 10.0, 3.0], [-0.887500048, 11.0, 12.0, 4.0], [-0.426999986, 13.0, 14.0, 1.0], [-0.119165204, 0.0, 0.0, 0.0], [0.000434335059, 0.0, 0.0, 0.0], [-0.0240303855, 0.0, 0.0, 0.0], [0.0812869444, 0.0, 0.0, 0.0], [0.0484152287, 0.0, 0.0, 0.0], [-0.0475925468, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_398(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.305000007, 1.0, 2.0, 1.0], [-0.892500043, 3.0, 4.0, 3.0], [0.0664183721, 0.0, 0.0, 0.0], [-0.940500021, 5.0, 6.0, 3.0], [-0.894999981, 7.0, 8.0, 4.0], [-0.218499988, 9.0, 10.0, 0.0], [0.636500001, 11.0, 12.0, 2.0], [-0.0985751227, 0.0, 0.0, 0.0], [0.0164698176, 0.0, 0.0, 0.0], [0.611500025, 13.0, 14.0, 2.0], [-0.210500002, 15.0, 16.0, 0.0], [-0.0250068828, 0.0, 0.0, 0.0], [0.138659775, 0.0, 0.0, 0.0], [0.0695209131, 0.0, 0.0, 0.0], [-0.0378607512, 0.0, 0.0, 0.0], [-0.12319988, 0.0, 0.0, 0.0], [-0.0156356711, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_399(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.283500016, 3.0, 4.0, 0.0], [0.0689999983, 5.0, 6.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [-0.205500007, 9.0, 10.0, 0.0], [-0.105499998, 11.0, 12.0, 0.0], [-0.0983017087, 0.0, 0.0, 0.0], [-0.373000026, 13.0, 14.0, 0.0], [0.108013473, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.203500003, 17.0, 18.0, 0.0], [-0.0690324381, 0.0, 0.0, 0.0], [0.0739067048, 0.0, 0.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.0602307543, 0.0, 0.0, 0.0], [-0.273499995, 21.0, 22.0, 0.0], [-0.249500006, 23.0, 24.0, 0.0], [0.134231955, 0.0, 0.0, 0.0], [-0.996500015, 25.0, 26.0, 1.0], [-0.0227853432, 0.0, 0.0, 0.0], [0.0958090425, 0.0, 0.0, 0.0], [-0.00953789242, 0.0, 0.0, 0.0], [-0.14913854, 0.0, 0.0, 0.0], [0.141046956, 0.0, 0.0, 0.0], [-0.0760210827, 0.0, 0.0, 0.0], [2.76600622e-05, 0.0, 0.0, 0.0], [0.062567845, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 21, 22, 23, 24, 17, 25, 26, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 15, 16, 10, 18, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_400(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [0.074149996, 7.0, 8.0, 0.0], [0.171404183, 0.0, 0.0, 0.0], [-0.278704375, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0447499976, 11.0, 12.0, 0.0], [-0.248028144, 0.0, 0.0, 0.0], [0.0892499983, 13.0, 14.0, 0.0], [0.0957500041, 15.0, 16.0, 0.0], [0.0417999998, 17.0, 18.0, 0.0], [0.0476500019, 19.0, 20.0, 0.0], [0.0883999988, 21.0, 22.0, 0.0], [0.0917500034, 23.0, 24.0, 0.0], [0.294314891, 0.0, 0.0, 0.0], [-0.0789027214, 0.0, 0.0, 0.0], [0.000927050947, 0.0, 0.0, 0.0], [-0.275310576, 0.0, 0.0, 0.0], [0.312236816, 0.0, 0.0, 0.0], [-0.00667985715, 0.0, 0.0, 0.0], [0.0528724566, 0.0, 0.0, 0.0], [-0.30629012, 0.0, 0.0, 0.0], [0.169704244, 0.0, 0.0, 0.0], [-0.00196524151, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 21, 22, 23, 24, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 13, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_401(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.0760791376, 0.0, 0.0, 0.0], [-0.420000017, 3.0, 4.0, 0.0], [-0.0864690915, 0.0, 0.0, 0.0], [-0.408500016, 5.0, 6.0, 0.0], [0.149006993, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.401000023, 9.0, 10.0, 0.0], [-0.996500015, 11.0, 12.0, 1.0], [0.0304197241, 0.0, 0.0, 0.0], [-0.130775899, 0.0, 0.0, 0.0], [0.00538486056, 0.0, 0.0, 0.0], [-0.057960771, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 9, 10, 11, 12])
    branch_indices = np.array([0, 2, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_402(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [-0.916499972, 3.0, 4.0, 4.0], [-0.256500006, 5.0, 6.0, 0.0], [0.572000027, 7.0, 8.0, 2.0], [-0.847499967, 9.0, 10.0, 4.0], [0.661000013, 11.0, 12.0, 2.0], [-0.972499967, 13.0, 14.0, 3.0], [-0.827499986, 15.0, 16.0, 1.0], [0.00775477663, 0.0, 0.0, 0.0], [0.0754270479, 0.0, 0.0, 0.0], [-0.0624004491, 0.0, 0.0, 0.0], [-0.945500016, 17.0, 18.0, 4.0], [-0.0966317132, 0.0, 0.0, 0.0], [-0.985499978, 19.0, 20.0, 3.0], [0.384499997, 21.0, 22.0, 2.0], [-0.0145705314, 0.0, 0.0, 0.0], [-0.190379471, 0.0, 0.0, 0.0], [0.00528706238, 0.0, 0.0, 0.0], [0.202926755, 0.0, 0.0, 0.0], [0.449499995, 23.0, 24.0, 2.0], [-0.766000032, 25.0, 26.0, 1.0], [-0.0581461415, 0.0, 0.0, 0.0], [-0.931499958, 27.0, 28.0, 3.0], [0.0446586087, 0.0, 0.0, 0.0], [-0.0199885573, 0.0, 0.0, 0.0], [0.0123553723, 0.0, 0.0, 0.0], [-0.0956089497, 0.0, 0.0, 0.0], [0.107076876, 0.0, 0.0, 0.0], [-0.0227860473, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 9, 10, 17, 18, 12, 23, 24, 25, 26, 21, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 4, 2, 5, 11, 6, 13, 19, 20, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_403(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.2755, 1.0, 2.0, 0.0], [-0.912500024, 3.0, 4.0, 4.0], [-0.256500006, 5.0, 6.0, 0.0], [-0.827499986, 7.0, 8.0, 1.0], [0.740999997, 9.0, 10.0, 2.0], [-0.945500016, 11.0, 12.0, 4.0], [-0.99849999, 13.0, 14.0, 3.0], [-0.0221519563, 0.0, 0.0, 0.0], [-0.558500051, 15.0, 16.0, 1.0], [-0.605499983, 17.0, 18.0, 1.0], [-0.110345691, 0.0, 0.0, 0.0], [-0.701499999, 19.0, 20.0, 1.0], [-0.136008739, 0.0, 0.0, 0.0], [-0.2095, 21.0, 22.0, 0.0], [-0.9745, 23.0, 24.0, 3.0], [0.576499999, 25.0, 26.0, 2.0], [0.573500037, 27.0, 28.0, 2.0], [-0.852499962, 29.0, 30.0, 4.0], [0.10389711, 0.0, 0.0, 0.0], [-0.08148399, 0.0, 0.0, 0.0], [0.0358349159, 0.0, 0.0, 0.0], [0.436500013, 31.0, 32.0, 2.0], [-0.190499991, 33.0, 34.0, 0.0], [-0.978500009, 35.0, 36.0, 3.0], [-0.212500006, 37.0, 38.0, 0.0], [0.190646917, 0.0, 0.0, 0.0], [0.0313463733, 0.0, 0.0, 0.0], [-0.0899938941, 0.0, 0.0, 0.0], [0.104532398, 0.0, 0.0, 0.0], [-0.0754669458, 0.0, 0.0, 0.0], [-0.0122664021, 0.0, 0.0, 0.0], [0.011960133, 0.0, 0.0, 0.0], [-0.168089464, 0.0, 0.0, 0.0], [0.07981015, 0.0, 0.0, 0.0], [-0.0511552393, 0.0, 0.0, 0.0], [0.0165023524, 0.0, 0.0, 0.0], [0.161372676, 0.0, 0.0, 0.0], [0.03212329, 0.0, 0.0, 0.0], [-0.121917538, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 25, 26, 27, 28, 29, 30, 18, 10, 19, 20, 12, 31, 32, 33, 34, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 8, 15, 16, 4, 9, 17, 2, 5, 11, 6, 13, 21, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_404(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.630499959, 3.0, 4.0, 1.0], [-0.962499976, 5.0, 6.0, 3.0], [-0.915500045, 7.0, 8.0, 4.0], [-0.123940222, 0.0, 0.0, 0.0], [-0.931499958, 9.0, 10.0, 4.0], [-0.266499996, 11.0, 12.0, 0.0], [-0.94749999, 13.0, 14.0, 4.0], [0.631500006, 15.0, 16.0, 2.0], [0.590999961, 17.0, 18.0, 2.0], [-0.794499993, 19.0, 20.0, 4.0], [-0.0932980478, 0.0, 0.0, 0.0], [-0.226500005, 21.0, 22.0, 0.0], [0.546499968, 23.0, 24.0, 2.0], [-0.700500011, 25.0, 26.0, 1.0], [0.534999967, 27.0, 28.0, 2.0], [0.00817924738, 0.0, 0.0, 0.0], [-0.290000021, 29.0, 30.0, 0.0], [-0.996500015, 31.0, 32.0, 3.0], [-0.5255, 33.0, 34.0, 1.0], [0.774999976, 35.0, 36.0, 2.0], [0.0930852816, 0.0, 0.0, 0.0], [-0.891499996, 37.0, 38.0, 3.0], [-0.0355326831, 0.0, 0.0, 0.0], [0.0632816181, 0.0, 0.0, 0.0], [-0.00829885621, 0.0, 0.0, 0.0], [0.134325519, 0.0, 0.0, 0.0], [0.0023815555, 0.0, 0.0, 0.0], [-0.144225448, 0.0, 0.0, 0.0], [-0.0335344449, 0.0, 0.0, 0.0], [0.11514122, 0.0, 0.0, 0.0], [0.0435702391, 0.0, 0.0, 0.0], [-0.112291649, 0.0, 0.0, 0.0], [0.18139635, 0.0, 0.0, 0.0], [0.0239403937, 0.0, 0.0, 0.0], [-0.0538168401, 0.0, 0.0, 0.0], [0.046655789, 0.0, 0.0, 0.0], [0.00453710649, 0.0, 0.0, 0.0], [-0.0736820251, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 16, 4, 29, 30, 31, 32, 33, 34, 35, 36, 11, 21, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 2, 5, 9, 17, 18, 10, 19, 20, 6, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_405(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.795000017, 3.0, 4.0, 2.0], [0.101500005, 5.0, 6.0, 0.0], [-0.996500015, 7.0, 8.0, 1.0], [-0.0176550001, 9.0, 10.0, 0.0], [-0.0578999966, 11.0, 12.0, 0.0], [-0.626000047, 13.0, 14.0, 2.0], [-0.282999992, 15.0, 16.0, 0.0], [0.0711246505, 0.0, 0.0, 0.0], [0.186890751, 0.0, 0.0, 0.0], [-0.00701133721, 0.0, 0.0, 0.0], [-0.0725499988, 17.0, 18.0, 0.0], [-0.721500039, 19.0, 20.0, 2.0], [-0.67050004, 21.0, 22.0, 2.0], [-0.0698133111, 0.0, 0.0, 0.0], [-0.297500014, 23.0, 24.0, 0.0], [-0.142500013, 25.0, 26.0, 0.0], [-0.208499998, 27.0, 28.0, 0.0], [0.144912571, 0.0, 0.0, 0.0], [-0.999500036, 29.0, 30.0, 1.0], [0.0087799998, 31.0, 32.0, 0.0], [0.0296503752, 0.0, 0.0, 0.0], [0.160141706, 0.0, 0.0, 0.0], [-0.0291483235, 0.0, 0.0, 0.0], [0.0833263695, 0.0, 0.0, 0.0], [-0.0483686998, 0.0, 0.0, 0.0], [0.00286842999, 0.0, 0.0, 0.0], [0.0471620373, 0.0, 0.0, 0.0], [-0.078074418, 0.0, 0.0, 0.0], [-0.0850034431, 0.0, 0.0, 0.0], [-0.276446819, 0.0, 0.0, 0.0], [-0.0861391276, 0.0, 0.0, 0.0], [0.10833519, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 9, 10, 27, 28, 18, 29, 30, 31, 32, 21, 22, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 17, 12, 19, 20, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_406(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.407499999, 5.0, 6.0, 0.0], [-0.181534737, 0.0, 0.0, 0.0], [0.0553041771, 0.0, 0.0, 0.0], [0.10724964, 0.0, 0.0, 0.0], [-0.378499985, 7.0, 8.0, 0.0], [-0.395500004, 9.0, 10.0, 0.0], [-0.297500014, 11.0, 12.0, 0.0], [0.0104508027, 0.0, 0.0, 0.0], [-0.149535194, 0.0, 0.0, 0.0], [-0.795000017, 13.0, 14.0, 2.0], [-0.292500019, 15.0, 16.0, 0.0], [0.18381004, 0.0, 0.0, 0.0], [0.0395270661, 0.0, 0.0, 0.0], [-0.188280523, 0.0, 0.0, 0.0], [0.000239586196, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 10, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 2, 6, 7, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_407(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.439999998, 3.0, 4.0, 0.0], [-0.407499999, 5.0, 6.0, 0.0], [-0.552999973, 7.0, 8.0, 0.0], [0.12205492, 0.0, 0.0, 0.0], [-0.0952200741, 0.0, 0.0, 0.0], [-0.393000007, 9.0, 10.0, 0.0], [0.0608036593, 0.0, 0.0, 0.0], [-0.0713340864, 0.0, 0.0, 0.0], [0.126648799, 0.0, 0.0, 0.0], [-0.169499993, 11.0, 12.0, 0.0], [-0.706500053, 13.0, 14.0, 2.0], [-0.16049999, 15.0, 16.0, 0.0], [-0.106561087, 0.0, 0.0, 0.0], [0.0374006182, 0.0, 0.0, 0.0], [0.0758912787, 0.0, 0.0, 0.0], [-0.00382450502, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_408(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.968500018, 3.0, 4.0, 4.0], [0.442499995, 5.0, 6.0, 2.0], [-0.844500005, 7.0, 8.0, 1.0], [-0.199499995, 9.0, 10.0, 0.0], [-0.995499969, 11.0, 12.0, 3.0], [0.485500008, 13.0, 14.0, 2.0], [-0.0124373827, 0.0, 0.0, 0.0], [-0.143950328, 0.0, 0.0, 0.0], [-0.228500009, 15.0, 16.0, 0.0], [-0.786499977, 17.0, 18.0, 1.0], [-0.0187945981, 0.0, 0.0, 0.0], [0.14775458, 0.0, 0.0, 0.0], [-0.226999998, 19.0, 20.0, 0.0], [-0.259499997, 21.0, 22.0, 0.0], [-0.0495314598, 0.0, 0.0, 0.0], [0.149869159, 0.0, 0.0, 0.0], [0.000782552524, 0.0, 0.0, 0.0], [-0.0883200839, 0.0, 0.0, 0.0], [0.0463004149, 0.0, 0.0, 0.0], [-0.203500003, 23.0, 24.0, 0.0], [0.62650001, 25.0, 26.0, 2.0], [-0.946500003, 27.0, 28.0, 3.0], [-0.177307472, 0.0, 0.0, 0.0], [0.00467691245, 0.0, 0.0, 0.0], [0.0275264308, 0.0, 0.0, 0.0], [-0.0835156813, 0.0, 0.0, 0.0], [0.0358429365, 0.0, 0.0, 0.0], [-0.0354272462, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 15, 16, 17, 18, 11, 12, 19, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 4, 9, 10, 2, 5, 6, 13, 20, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_409(xs):
    #Predicts Class 1
    function_dict = np.array([[0.576499999, 1.0, 2.0, 2.0], [-0.681499958, 3.0, 4.0, 1.0], [-0.236499995, 5.0, 6.0, 0.0], [-0.281499982, 7.0, 8.0, 0.0], [-0.523499966, 9.0, 10.0, 1.0], [-0.296499997, 11.0, 12.0, 0.0], [-0.528499961, 13.0, 14.0, 1.0], [-0.32249999, 15.0, 16.0, 0.0], [-0.263500005, 17.0, 18.0, 0.0], [-0.963, 19.0, 20.0, 3.0], [-0.987499952, 21.0, 22.0, 3.0], [-0.987499952, 23.0, 24.0, 3.0], [-0.263500005, 25.0, 26.0, 0.0], [-0.197999999, 27.0, 28.0, 0.0], [0.0288972091, 0.0, 0.0, 0.0], [-0.0345391892, 0.0, 0.0, 0.0], [0.122117922, 0.0, 0.0, 0.0], [-0.126858756, 0.0, 0.0, 0.0], [-0.888000011, 29.0, 30.0, 4.0], [0.537500024, 31.0, 32.0, 2.0], [-0.0138307959, 0.0, 0.0, 0.0], [-0.0678997412, 0.0, 0.0, 0.0], [0.0244003106, 0.0, 0.0, 0.0], [0.666000009, 33.0, 34.0, 2.0], [0.694000006, 35.0, 36.0, 2.0], [0.116077006, 0.0, 0.0, 0.0], [0.636000037, 37.0, 38.0, 2.0], [-0.190429375, 0.0, 0.0, 0.0], [-0.0236513894, 0.0, 0.0, 0.0], [-0.0144332694, 0.0, 0.0, 0.0], [0.102137186, 0.0, 0.0, 0.0], [0.18725127, 0.0, 0.0, 0.0], [0.0491415188, 0.0, 0.0, 0.0], [0.103183985, 0.0, 0.0, 0.0], [-0.0605301261, 0.0, 0.0, 0.0], [-0.137146205, 0.0, 0.0, 0.0], [0.0258175433, 0.0, 0.0, 0.0], [0.0749487802, 0.0, 0.0, 0.0], [-0.0684243292, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 29, 30, 31, 32, 20, 21, 22, 33, 34, 35, 36, 25, 37, 38, 27, 28, 14])
    branch_indices = np.array([0, 1, 3, 7, 8, 18, 4, 9, 19, 10, 2, 5, 11, 23, 24, 12, 26, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_410(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.509500027, 1.0, 2.0, 1.0], [-0.999500036, 3.0, 4.0, 3.0], [-0.4745, 5.0, 6.0, 1.0], [-0.0834630281, 0.0, 0.0, 0.0], [-0.155499995, 7.0, 8.0, 0.0], [-0.991999984, 9.0, 10.0, 3.0], [-0.456499994, 11.0, 12.0, 1.0], [0.736500025, 13.0, 14.0, 2.0], [-0.931499958, 15.0, 16.0, 4.0], [-0.0140562849, 0.0, 0.0, 0.0], [0.129439518, 0.0, 0.0, 0.0], [-0.0842563063, 0.0, 0.0, 0.0], [-0.233500004, 17.0, 18.0, 0.0], [0.529500008, 19.0, 20.0, 2.0], [-0.0800669417, 0.0, 0.0, 0.0], [-0.128332332, 0.0, 0.0, 0.0], [0.523000002, 21.0, 22.0, 2.0], [-0.299499989, 23.0, 24.0, 0.0], [0.0988408402, 0.0, 0.0, 0.0], [-0.01865004, 0.0, 0.0, 0.0], [0.0540655106, 0.0, 0.0, 0.0], [0.0732539594, 0.0, 0.0, 0.0], [-0.0454570577, 0.0, 0.0, 0.0], [0.0558011308, 0.0, 0.0, 0.0], [-0.0615825541, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 19, 20, 14, 15, 21, 22, 9, 10, 11, 23, 24, 18])
    branch_indices = np.array([0, 1, 4, 7, 13, 8, 16, 2, 5, 6, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_411(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.0949241444, 0.0, 0.0, 0.0], [-0.822000027, 9.0, 10.0, 2.0], [-0.210500002, 11.0, 12.0, 0.0], [-0.529500008, 13.0, 14.0, 0.0], [0.0729575679, 0.0, 0.0, 0.0], [0.162976742, 0.0, 0.0, 0.0], [0.0124193747, 0.0, 0.0, 0.0], [-0.161279947, 0.0, 0.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [0.0551305041, 0.0, 0.0, 0.0], [-0.0749289915, 0.0, 0.0, 0.0], [0.0982562155, 0.0, 0.0, 0.0], [-0.193500012, 17.0, 18.0, 0.0], [-0.0824685991, 0.0, 0.0, 0.0], [0.000900676299, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 9, 10, 11, 15, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_412(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.414000005, 3.0, 4.0, 0.0], [-0.0403999984, 5.0, 6.0, 0.0], [-0.107499145, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.607499957, 9.0, 10.0, 2.0], [-0.02575, 11.0, 12.0, 0.0], [-0.401000023, 13.0, 14.0, 0.0], [-0.294499993, 15.0, 16.0, 0.0], [-0.148499995, 17.0, 18.0, 0.0], [-0.546000004, 19.0, 20.0, 2.0], [0.200412676, 0.0, 0.0, 0.0], [0.0577500015, 21.0, 22.0, 0.0], [-0.00964774005, 0.0, 0.0, 0.0], [0.165364072, 0.0, 0.0, 0.0], [-0.0860103071, 0.0, 0.0, 0.0], [-0.274500012, 23.0, 24.0, 0.0], [-0.186500013, 25.0, 26.0, 0.0], [-0.247521579, 0.0, 0.0, 0.0], [0.184592694, 0.0, 0.0, 0.0], [-0.208499998, 27.0, 28.0, 0.0], [-0.680500031, 29.0, 30.0, 2.0], [0.0957500041, 31.0, 32.0, 0.0], [0.0827906281, 0.0, 0.0, 0.0], [0.00032858862, 0.0, 0.0, 0.0], [-0.0633230731, 0.0, 0.0, 0.0], [0.0969084948, 0.0, 0.0, 0.0], [-0.0948795974, 0.0, 0.0, 0.0], [0.0702316687, 0.0, 0.0, 0.0], [-0.158084974, 0.0, 0.0, 0.0], [-0.0272824429, 0.0, 0.0, 0.0], [0.158296376, 0.0, 0.0, 0.0], [-0.0377280265, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 23, 24, 25, 26, 18, 19, 27, 28, 11, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 4, 7, 8, 16, 2, 5, 9, 17, 10, 20, 6, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_413(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.972000003, 1.0, 2.0, 2.0], [0.538499951, 3.0, 4.0, 0.0], [0.531499982, 5.0, 6.0, 0.0], [0.513000011, 7.0, 8.0, 0.0], [0.549999952, 9.0, 10.0, 0.0], [0.479499996, 11.0, 12.0, 0.0], [0.18263717, 0.0, 0.0, 0.0], [0.503000021, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.138648033, 0.0, 0.0, 0.0], [0.561499953, 17.0, 18.0, 0.0], [0.307500005, 19.0, 20.0, 0.0], [-0.124916747, 0.0, 0.0, 0.0], [0.466499984, 21.0, 22.0, 0.0], [-0.105650052, 0.0, 0.0, 0.0], [0.182359159, 0.0, 0.0, 0.0], [-0.0946315825, 0.0, 0.0, 0.0], [0.0563733578, 0.0, 0.0, 0.0], [0.588, 23.0, 24.0, 0.0], [0.218499988, 25.0, 26.0, 0.0], [0.428499997, 27.0, 28.0, 0.0], [-0.00298783113, 0.0, 0.0, 0.0], [0.100902013, 0.0, 0.0, 0.0], [-0.0944056436, 0.0, 0.0, 0.0], [0.0338220112, 0.0, 0.0, 0.0], [0.0258471146, 0.0, 0.0, 0.0], [-0.140921608, 0.0, 0.0, 0.0], [0.179024085, 0.0, 0.0, 0.0], [-0.0188783482, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 9, 17, 23, 24, 25, 26, 27, 28, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 18, 2, 5, 11, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_414(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.970499992, 3.0, 4.0, 4.0], [0.442499995, 5.0, 6.0, 2.0], [-0.844500005, 7.0, 8.0, 1.0], [-0.950999975, 9.0, 10.0, 3.0], [-0.995499969, 11.0, 12.0, 3.0], [-0.102499999, 13.0, 14.0, 0.0], [-0.0133597124, 0.0, 0.0, 0.0], [-0.124432832, 0.0, 0.0, 0.0], [-0.980499983, 15.0, 16.0, 3.0], [0.0818410218, 0.0, 0.0, 0.0], [-0.0176185872, 0.0, 0.0, 0.0], [0.115213379, 0.0, 0.0, 0.0], [-0.179500014, 17.0, 18.0, 0.0], [-0.0774499997, 19.0, 20.0, 0.0], [-0.782000005, 21.0, 22.0, 1.0], [-0.116198383, 0.0, 0.0, 0.0], [0.455500007, 23.0, 24.0, 2.0], [-0.961500049, 25.0, 26.0, 4.0], [-0.106540218, 0.0, 0.0, 0.0], [-0.00856337789, 0.0, 0.0, 0.0], [0.104824021, 0.0, 0.0, 0.0], [-0.0652261078, 0.0, 0.0, 0.0], [-0.112453297, 0.0, 0.0, 0.0], [0.00304311351, 0.0, 0.0, 0.0], [-0.0368356146, 0.0, 0.0, 0.0], [0.0705470592, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 21, 22, 16, 10, 11, 12, 23, 24, 25, 26, 19, 20])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 2, 5, 6, 13, 17, 18, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_415(xs):
    #Predicts Class 1
    function_dict = np.array([[0.635499954, 1.0, 2.0, 2.0], [-0.681499958, 3.0, 4.0, 1.0], [-0.912500024, 5.0, 6.0, 4.0], [-0.98150003, 7.0, 8.0, 4.0], [-0.526000023, 9.0, 10.0, 1.0], [-0.241999999, 11.0, 12.0, 0.0], [-0.333499998, 13.0, 14.0, 0.0], [-0.986500025, 15.0, 16.0, 4.0], [-0.178499997, 17.0, 18.0, 0.0], [-0.213499993, 19.0, 20.0, 0.0], [-0.953500032, 21.0, 22.0, 4.0], [-0.61650002, 23.0, 24.0, 1.0], [-0.0448725298, 0.0, 0.0, 0.0], [0.0248929728, 0.0, 0.0, 0.0], [-0.127732709, 0.0, 0.0, 0.0], [-0.000322281674, 0.0, 0.0, 0.0], [-0.103572063, 0.0, 0.0, 0.0], [-0.887500048, 25.0, 26.0, 4.0], [-0.960500002, 27.0, 28.0, 4.0], [0.55400002, 29.0, 30.0, 2.0], [-0.969500005, 31.0, 32.0, 4.0], [-0.0597504266, 0.0, 0.0, 0.0], [0.0527539849, 0.0, 0.0, 0.0], [-0.06083652, 0.0, 0.0, 0.0], [0.117399931, 0.0, 0.0, 0.0], [-0.0264549553, 0.0, 0.0, 0.0], [0.0920444578, 0.0, 0.0, 0.0], [0.18035917, 0.0, 0.0, 0.0], [-0.0876738206, 0.0, 0.0, 0.0], [0.0139253112, 0.0, 0.0, 0.0], [0.187567323, 0.0, 0.0, 0.0], [-0.0815805048, 0.0, 0.0, 0.0], [0.0495038889, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 21, 22, 23, 24, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 18, 4, 9, 19, 20, 10, 2, 5, 11, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_416(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [-0.300500005, 3.0, 4.0, 0.0], [0.0580043271, 0.0, 0.0, 0.0], [-0.941499949, 5.0, 6.0, 4.0], [-0.257499993, 7.0, 8.0, 0.0], [-0.109534174, 0.0, 0.0, 0.0], [0.0224711802, 0.0, 0.0, 0.0], [-0.985499978, 9.0, 10.0, 3.0], [-0.24849999, 11.0, 12.0, 0.0], [-0.0380322747, 0.0, 0.0, 0.0], [0.0940306857, 0.0, 0.0, 0.0], [-0.119132929, 0.0, 0.0, 0.0], [-0.236499995, 13.0, 14.0, 0.0], [0.0677840784, 0.0, 0.0, 0.0], [-0.00471778866, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 9, 10, 11, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_417(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.851999998, 3.0, 4.0, 2.0], [-0.250499994, 5.0, 6.0, 0.0], [-0.885499954, 7.0, 8.0, 2.0], [0.0291999988, 9.0, 10.0, 0.0], [-0.105996206, 0.0, 0.0, 0.0], [-0.208499998, 11.0, 12.0, 0.0], [-0.273499995, 13.0, 14.0, 0.0], [0.0683500022, 15.0, 16.0, 0.0], [-0.0713, 17.0, 18.0, 0.0], [0.0784000009, 19.0, 20.0, 0.0], [0.189059585, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.284500003, 23.0, 24.0, 0.0], [-0.205500007, 25.0, 26.0, 0.0], [-0.00719999988, 27.0, 28.0, 0.0], [-0.19246991, 0.0, 0.0, 0.0], [-0.193000004, 29.0, 30.0, 0.0], [0.182639569, 0.0, 0.0, 0.0], [-0.126833439, 0.0, 0.0, 0.0], [0.0318138264, 0.0, 0.0, 0.0], [-0.0370999984, 31.0, 32.0, 0.0], [-0.028450001, 33.0, 34.0, 0.0], [-0.0191233605, 0.0, 0.0, 0.0], [0.0899318755, 0.0, 0.0, 0.0], [-0.119146161, 0.0, 0.0, 0.0], [0.00113138231, 0.0, 0.0, 0.0], [-0.0310103707, 0.0, 0.0, 0.0], [0.0374065042, 0.0, 0.0, 0.0], [0.0843036249, 0.0, 0.0, 0.0], [-0.125272617, 0.0, 0.0, 0.0], [0.195943609, 0.0, 0.0, 0.0], [-0.136585042, 0.0, 0.0, 0.0], [-0.143748477, 0.0, 0.0, 0.0], [0.0219892878, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 16, 29, 30, 18, 19, 20, 5, 11, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 9, 17, 10, 2, 6, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_418(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.747500002, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.654500008, 5.0, 6.0, 2.0], [-0.412, 7.0, 8.0, 0.0], [-0.997500002, 9.0, 10.0, 1.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.51699996, 13.0, 14.0, 2.0], [-0.108763948, 0.0, 0.0, 0.0], [-0.394999981, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.0594947711, 0.0, 0.0, 0.0], [-0.0651500002, 21.0, 22.0, 0.0], [-0.219999999, 23.0, 24.0, 0.0], [-0.456, 25.0, 26.0, 2.0], [0.11925564, 0.0, 0.0, 0.0], [-0.380499989, 27.0, 28.0, 0.0], [-0.157499999, 29.0, 30.0, 0.0], [-0.245499998, 31.0, 32.0, 0.0], [0.114260517, 0.0, 0.0, 0.0], [-0.00661582826, 0.0, 0.0, 0.0], [0.214790955, 0.0, 0.0, 0.0], [-0.721500039, 33.0, 34.0, 2.0], [0.0504839942, 0.0, 0.0, 0.0], [-0.0337999985, 35.0, 36.0, 0.0], [0.0887141228, 0.0, 0.0, 0.0], [-0.0527999997, 37.0, 38.0, 0.0], [-0.127957478, 0.0, 0.0, 0.0], [0.00190621382, 0.0, 0.0, 0.0], [-0.228400692, 0.0, 0.0, 0.0], [-0.0366931073, 0.0, 0.0, 0.0], [-0.106614016, 0.0, 0.0, 0.0], [0.0618466996, 0.0, 0.0, 0.0], [0.0660853162, 0.0, 0.0, 0.0], [-0.0397311822, 0.0, 0.0, 0.0], [-0.127031654, 0.0, 0.0, 0.0], [0.00473552523, 0.0, 0.0, 0.0], [-0.0726043284, 0.0, 0.0, 0.0], [0.0477602147, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 27, 28, 29, 30, 31, 32, 19, 20, 11, 21, 33, 34, 23, 35, 36, 25, 37, 38])
    branch_indices = np.array([0, 1, 3, 8, 16, 4, 9, 17, 18, 10, 2, 5, 12, 22, 6, 13, 24, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_419(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.194000006, 5.0, 6.0, 0.0], [0.5625, 7.0, 8.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [-0.29549998, 11.0, 12.0, 0.0], [0.228500009, 13.0, 14.0, 0.0], [0.547500014, 15.0, 16.0, 0.0], [0.144895032, 0.0, 0.0, 0.0], [-0.164455414, 0.0, 0.0, 0.0], [-0.013465927, 0.0, 0.0, 0.0], [-0.996500015, 17.0, 18.0, 1.0], [-0.993499994, 19.0, 20.0, 1.0], [0.178108692, 0.0, 0.0, 0.0], [0.430999994, 21.0, 22.0, 0.0], [0.541999996, 23.0, 24.0, 0.0], [0.557999969, 25.0, 26.0, 0.0], [-0.4375, 27.0, 28.0, 0.0], [-0.060934864, 0.0, 0.0, 0.0], [-0.0568999983, 29.0, 30.0, 0.0], [0.0667264909, 0.0, 0.0, 0.0], [-0.99849999, 31.0, 32.0, 1.0], [0.527500033, 33.0, 34.0, 0.0], [-0.00538495835, 0.0, 0.0, 0.0], [0.113473661, 0.0, 0.0, 0.0], [-0.10490825, 0.0, 0.0, 0.0], [-0.0165967289, 0.0, 0.0, 0.0], [-0.0356611274, 0.0, 0.0, 0.0], [0.144748151, 0.0, 0.0, 0.0], [-0.230931103, 0.0, 0.0, 0.0], [-0.0361849815, 0.0, 0.0, 0.0], [-0.0882513747, 0.0, 0.0, 0.0], [0.0767229572, 0.0, 0.0, 0.0], [0.132416904, 0.0, 0.0, 0.0], [-0.0299261715, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 9, 10, 27, 28, 18, 29, 30, 20, 13, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 17, 12, 19, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_420(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.759500027, 1.0, 2.0, 1.0], [-0.317499995, 3.0, 4.0, 0.0], [0.485500008, 5.0, 6.0, 2.0], [-0.0590138398, 0.0, 0.0, 0.0], [0.50150001, 7.0, 8.0, 2.0], [-0.904999971, 9.0, 10.0, 3.0], [-0.342999995, 11.0, 12.0, 0.0], [-0.965499997, 13.0, 14.0, 4.0], [0.115778707, 0.0, 0.0, 0.0], [-0.989500046, 15.0, 16.0, 3.0], [0.0181346182, 0.0, 0.0, 0.0], [0.069897078, 0.0, 0.0, 0.0], [-0.953500032, 17.0, 18.0, 4.0], [-0.994500041, 19.0, 20.0, 3.0], [-0.957499981, 21.0, 22.0, 4.0], [-0.0197414979, 0.0, 0.0, 0.0], [-0.148849666, 0.0, 0.0, 0.0], [-0.966500044, 23.0, 24.0, 4.0], [-0.943500042, 25.0, 26.0, 4.0], [-0.0274152029, 0.0, 0.0, 0.0], [0.12743853, 0.0, 0.0, 0.0], [-0.140620738, 0.0, 0.0, 0.0], [0.0208636541, 0.0, 0.0, 0.0], [-0.041597072, 0.0, 0.0, 0.0], [0.0826260373, 0.0, 0.0, 0.0], [-0.136419058, 0.0, 0.0, 0.0], [-0.00838296302, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 19, 20, 21, 22, 8, 15, 16, 10, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 2, 5, 9, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_421(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.808500051, 1.0, 2.0, 1.0], [-0.997500002, 3.0, 4.0, 3.0], [0.0695500001, 5.0, 6.0, 0.0], [-0.0808989629, 0.0, 0.0, 0.0], [-0.823500037, 7.0, 8.0, 1.0], [-0.175500005, 9.0, 10.0, 0.0], [0.0972290933, 0.0, 0.0, 0.0], [-0.847499967, 11.0, 12.0, 1.0], [-0.0525580868, 0.0, 0.0, 0.0], [0.436500013, 13.0, 14.0, 2.0], [-0.972499967, 15.0, 16.0, 4.0], [-0.0437373929, 0.0, 0.0, 0.0], [0.104799606, 0.0, 0.0, 0.0], [-0.995499969, 17.0, 18.0, 3.0], [-0.752499998, 19.0, 20.0, 1.0], [0.0223303549, 0.0, 0.0, 0.0], [-0.143001989, 0.0, 0.0, 0.0], [0.127552152, 0.0, 0.0, 0.0], [-0.00907640159, 0.0, 0.0, 0.0], [-0.0462545529, 0.0, 0.0, 0.0], [0.0138095766, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 8, 17, 18, 19, 20, 15, 16, 6])
    branch_indices = np.array([0, 1, 4, 7, 2, 5, 9, 13, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_422(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.968500018, 1.0, 2.0, 4.0], [0.461499989, 3.0, 4.0, 2.0], [0.442499995, 5.0, 6.0, 2.0], [-0.193500012, 7.0, 8.0, 0.0], [0.605000019, 9.0, 10.0, 2.0], [-0.228500009, 11.0, 12.0, 0.0], [0.483500004, 13.0, 14.0, 2.0], [-0.0309208632, 0.0, 0.0, 0.0], [0.0773416981, 0.0, 0.0, 0.0], [-0.144390807, 0.0, 0.0, 0.0], [0.0204077046, 0.0, 0.0, 0.0], [0.0408749543, 0.0, 0.0, 0.0], [-0.131534815, 0.0, 0.0, 0.0], [-0.195499986, 15.0, 16.0, 0.0], [-0.203500003, 17.0, 18.0, 0.0], [0.126283631, 0.0, 0.0, 0.0], [0.00958453491, 0.0, 0.0, 0.0], [-0.661000013, 19.0, 20.0, 1.0], [-0.166500002, 21.0, 22.0, 0.0], [-0.174985513, 0.0, 0.0, 0.0], [0.011045116, 0.0, 0.0, 0.0], [0.102605179, 0.0, 0.0, 0.0], [-0.0153404903, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 6, 13, 14, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_423(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.37349999, 3.0, 4.0, 0.0], [-0.190499991, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.284500003, 9.0, 10.0, 0.0], [-0.747500002, 11.0, 12.0, 2.0], [-0.186500013, 13.0, 14.0, 0.0], [-0.00575752556, 0.0, 0.0, 0.0], [0.0716421977, 0.0, 0.0, 0.0], [-0.106200188, 0.0, 0.0, 0.0], [-0.0205403864, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.0801632255, 0.0, 0.0, 0.0], [-0.222549126, 0.0, 0.0, 0.0], [-0.179500014, 17.0, 18.0, 0.0], [-0.2095, 19.0, 20.0, 0.0], [0.145620108, 0.0, 0.0, 0.0], [0.175102875, 0.0, 0.0, 0.0], [-0.146499991, 21.0, 22.0, 0.0], [0.0942814797, 0.0, 0.0, 0.0], [-0.0110698678, 0.0, 0.0, 0.0], [-0.117690973, 0.0, 0.0, 0.0], [0.00129061809, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 19, 20, 16, 12, 13, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 11, 15, 6, 14, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_424(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0560500026, 1.0, 2.0, 0.0], [0.0477499999, 3.0, 4.0, 0.0], [0.0694999993, 5.0, 6.0, 0.0], [0.0417999998, 7.0, 8.0, 0.0], [0.0506500006, 9.0, 10.0, 0.0], [-0.195177078, 0.0, 0.0, 0.0], [0.0760499984, 11.0, 12.0, 0.0], [0.0353999995, 13.0, 14.0, 0.0], [0.0447499976, 15.0, 16.0, 0.0], [0.258381248, 0.0, 0.0, 0.0], [0.0321350843, 0.0, 0.0, 0.0], [0.0740500018, 17.0, 18.0, 0.0], [0.0825999975, 19.0, 20.0, 0.0], [0.0293500014, 21.0, 22.0, 0.0], [0.0368999988, 23.0, 24.0, 0.0], [-0.242239475, 0.0, 0.0, 0.0], [-0.00290243886, 0.0, 0.0, 0.0], [-0.0288905073, 0.0, 0.0, 0.0], [0.141935036, 0.0, 0.0, 0.0], [-0.217400759, 0.0, 0.0, 0.0], [0.0854000002, 25.0, 26.0, 0.0], [0.00226860028, 0.0, 0.0, 0.0], [-0.281082124, 0.0, 0.0, 0.0], [0.298806518, 0.0, 0.0, 0.0], [0.0577781089, 0.0, 0.0, 0.0], [0.148010328, 0.0, 0.0, 0.0], [-0.0152071249, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 9, 10, 5, 17, 18, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 2, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_425(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.382499993, 3.0, 4.0, 0.0], [-0.0802500024, 5.0, 6.0, 0.0], [-0.420000017, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.1505, 11.0, 12.0, 0.0], [-0.0748500004, 13.0, 14.0, 0.0], [-0.46450001, 15.0, 16.0, 0.0], [-0.401000023, 17.0, 18.0, 0.0], [-0.168500006, 19.0, 20.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [-0.154500008, 23.0, 24.0, 0.0], [0.161435276, 0.0, 0.0, 0.0], [-0.186878473, 0.0, 0.0, 0.0], [-0.0123999994, 25.0, 26.0, 0.0], [0.055760745, 0.0, 0.0, 0.0], [-0.120669991, 0.0, 0.0, 0.0], [0.125465021, 0.0, 0.0, 0.0], [-0.393000007, 27.0, 28.0, 0.0], [-0.169499993, 29.0, 30.0, 0.0], [-0.1655, 31.0, 32.0, 0.0], [0.165278152, 0.0, 0.0, 0.0], [-0.0541872196, 0.0, 0.0, 0.0], [-0.157499999, 33.0, 34.0, 0.0], [-0.0702757239, 0.0, 0.0, 0.0], [-0.0197000001, 35.0, 36.0, 0.0], [0.201499999, 37.0, 38.0, 0.0], [0.0142005086, 0.0, 0.0, 0.0], [-0.0102676544, 0.0, 0.0, 0.0], [-0.137666747, 0.0, 0.0, 0.0], [0.0910189748, 0.0, 0.0, 0.0], [-0.25205785, 0.0, 0.0, 0.0], [-0.0272086579, 0.0, 0.0, 0.0], [0.167731434, 0.0, 0.0, 0.0], [0.0407695062, 0.0, 0.0, 0.0], [0.0268439259, 0.0, 0.0, 0.0], [0.194833323, 0.0, 0.0, 0.0], [-0.153291285, 0.0, 0.0, 0.0], [0.00515979808, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 27, 28, 29, 30, 31, 32, 21, 22, 33, 34, 24, 12, 13, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 8, 18, 4, 9, 19, 20, 10, 2, 5, 11, 23, 6, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_426(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [0.439999998, 3.0, 4.0, 2.0], [-0.975499988, 5.0, 6.0, 4.0], [-0.0915961713, 0.0, 0.0, 0.0], [0.0184603445, 0.0, 0.0, 0.0], [0.0787345842, 0.0, 0.0, 0.0], [-0.996500015, 7.0, 8.0, 3.0], [-0.929499984, 9.0, 10.0, 4.0], [-0.994500041, 11.0, 12.0, 3.0], [-0.202500001, 13.0, 14.0, 0.0], [-0.903499961, 15.0, 16.0, 4.0], [0.591499984, 17.0, 18.0, 2.0], [0.354499996, 19.0, 20.0, 2.0], [-0.107169032, 0.0, 0.0, 0.0], [0.00987308938, 0.0, 0.0, 0.0], [0.143465087, 0.0, 0.0, 0.0], [-0.0534225106, 0.0, 0.0, 0.0], [0.127221301, 0.0, 0.0, 0.0], [-0.0394104421, 0.0, 0.0, 0.0], [-0.0871859938, 0.0, 0.0, 0.0], [0.0043495209, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 10, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_427(xs):
    #Predicts Class 1
    function_dict = np.array([[0.277500004, 1.0, 2.0, 2.0], [-0.0534167439, 0.0, 0.0, 0.0], [-0.192499995, 3.0, 4.0, 0.0], [-0.196500003, 5.0, 6.0, 0.0], [0.555500031, 7.0, 8.0, 2.0], [-0.804499984, 9.0, 10.0, 1.0], [-0.0797878951, 0.0, 0.0, 0.0], [-0.107500002, 11.0, 12.0, 0.0], [-0.0400130451, 0.0, 0.0, 0.0], [-0.230500013, 13.0, 14.0, 0.0], [-0.784500003, 15.0, 16.0, 1.0], [0.457000017, 17.0, 18.0, 2.0], [-0.0365131237, 0.0, 0.0, 0.0], [0.0054539009, 0.0, 0.0, 0.0], [-0.11356087, 0.0, 0.0, 0.0], [0.117853135, 0.0, 0.0, 0.0], [-0.00431196718, 0.0, 0.0, 0.0], [0.0262558497, 0.0, 0.0, 0.0], [0.148676142, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 17, 18, 12, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 7, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_428(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 1.0], [-0.994500041, 3.0, 4.0, 3.0], [-0.98150003, 5.0, 6.0, 4.0], [-0.180500001, 7.0, 8.0, 0.0], [-0.101810209, 0.0, 0.0, 0.0], [0.0789520741, 0.0, 0.0, 0.0], [-0.968500018, 9.0, 10.0, 4.0], [-0.0550554954, 0.0, 0.0, 0.0], [0.0573103614, 0.0, 0.0, 0.0], [0.605000019, 11.0, 12.0, 2.0], [-0.743499994, 13.0, 14.0, 1.0], [0.48299998, 15.0, 16.0, 2.0], [0.02929518, 0.0, 0.0, 0.0], [-0.0538417771, 0.0, 0.0, 0.0], [0.553499997, 17.0, 18.0, 2.0], [0.00922338851, 0.0, 0.0, 0.0], [-0.136345938, 0.0, 0.0, 0.0], [0.0525464937, 0.0, 0.0, 0.0], [-0.00424534781, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 15, 16, 12, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_429(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.210500002, 1.0, 2.0, 0.0], [-0.273499995, 3.0, 4.0, 0.0], [-0.190499991, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [-0.770500004, 9.0, 10.0, 2.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.162499994, 13.0, 14.0, 0.0], [-0.297500014, 15.0, 16.0, 0.0], [-0.0627631918, 0.0, 0.0, 0.0], [-0.184670702, 0.0, 0.0, 0.0], [-0.0178423449, 0.0, 0.0, 0.0], [-0.2095, 17.0, 18.0, 0.0], [0.13304089, 0.0, 0.0, 0.0], [-0.113181412, 0.0, 0.0, 0.0], [-0.141499996, 19.0, 20.0, 0.0], [-0.0150308451, 0.0, 0.0, 0.0], [-0.282999992, 21.0, 22.0, 0.0], [0.105322354, 0.0, 0.0, 0.0], [-0.199499995, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [-0.136500001, 27.0, 28.0, 0.0], [0.0725505278, 0.0, 0.0, 0.0], [0.0034897991, 0.0, 0.0, 0.0], [-0.0638409257, 0.0, 0.0, 0.0], [0.0163680725, 0.0, 0.0, 0.0], [0.00176412321, 0.0, 0.0, 0.0], [0.183229417, 0.0, 0.0, 0.0], [-0.044599168, 0.0, 0.0, 0.0], [0.000965851534, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 21, 22, 8, 9, 10, 17, 23, 24, 12, 13, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 16, 4, 2, 5, 11, 18, 6, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_430(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.0476500019, 3.0, 4.0, 0.0], [-0.199499995, 5.0, 6.0, 0.0], [0.0447499976, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.249500006, 11.0, 12.0, 0.0], [-0.0403999984, 13.0, 14.0, 0.0], [0.0372999981, 15.0, 16.0, 0.0], [0.272655994, 0.0, 0.0, 0.0], [0.0740500018, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.999500036, 21.0, 22.0, 4.0], [0.156928048, 0.0, 0.0, 0.0], [-0.607499957, 23.0, 24.0, 2.0], [-0.0177500006, 25.0, 26.0, 0.0], [0.028549999, 27.0, 28.0, 0.0], [-0.0910434201, 0.0, 0.0, 0.0], [-0.278187454, 0.0, 0.0, 0.0], [0.1105, 29.0, 30.0, 0.0], [0.263403386, 0.0, 0.0, 0.0], [-0.0466187708, 0.0, 0.0, 0.0], [-0.298999995, 31.0, 32.0, 0.0], [-0.99849999, 33.0, 34.0, 1.0], [-0.148499995, 35.0, 36.0, 0.0], [0.0762493089, 0.0, 0.0, 0.0], [0.127872407, 0.0, 0.0, 0.0], [0.0577500015, 37.0, 38.0, 0.0], [0.00125653204, 0.0, 0.0, 0.0], [0.169121236, 0.0, 0.0, 0.0], [-0.0425172001, 0.0, 0.0, 0.0], [0.0619836859, 0.0, 0.0, 0.0], [0.0941594318, 0.0, 0.0, 0.0], [-0.00102139136, 0.0, 0.0, 0.0], [-0.164636195, 0.0, 0.0, 0.0], [0.0101648765, 0.0, 0.0, 0.0], [-0.070628874, 0.0, 0.0, 0.0], [-0.212194636, 0.0, 0.0, 0.0], [-0.0820286945, 0.0, 0.0, 0.0], [0.0532706603, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 8, 17, 29, 30, 19, 20, 31, 32, 33, 34, 12, 35, 36, 24, 25, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 18, 10, 2, 5, 11, 21, 22, 6, 13, 23, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_431(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.421000004, 3.0, 4.0, 0.0], [0.538500011, 5.0, 6.0, 0.0], [-0.108625978, 0.0, 0.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [0.5255, 9.0, 10.0, 0.0], [0.111858785, 0.0, 0.0, 0.0], [0.122346878, 0.0, 0.0, 0.0], [-0.38349998, 11.0, 12.0, 0.0], [0.430999994, 13.0, 14.0, 0.0], [-0.141070351, 0.0, 0.0, 0.0], [-0.11868123, 0.0, 0.0, 0.0], [-0.16049999, 15.0, 16.0, 0.0], [0.344999999, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.0730805621, 0.0, 0.0, 0.0], [-0.0112608625, 0.0, 0.0, 0.0], [0.0356930979, 0.0, 0.0, 0.0], [-0.111437127, 0.0, 0.0, 0.0], [0.129614055, 0.0, 0.0, 0.0], [0.0201078895, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 15, 16, 17, 18, 19, 20, 10, 6])
    branch_indices = np.array([0, 1, 4, 8, 12, 2, 5, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_432(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.965499997, 3.0, 4.0, 3.0], [0.497500002, 5.0, 6.0, 2.0], [-0.266499996, 7.0, 8.0, 0.0], [0.0956760049, 0.0, 0.0, 0.0], [-0.914999962, 9.0, 10.0, 4.0], [-0.74849999, 11.0, 12.0, 1.0], [-0.827499986, 13.0, 14.0, 1.0], [-0.804499984, 15.0, 16.0, 1.0], [-0.744500041, 17.0, 18.0, 1.0], [0.0929747373, 0.0, 0.0, 0.0], [0.081232287, 0.0, 0.0, 0.0], [-0.997500002, 19.0, 20.0, 3.0], [0.00897798873, 0.0, 0.0, 0.0], [-0.0899649188, 0.0, 0.0, 0.0], [-0.965499997, 21.0, 22.0, 4.0], [-0.973500013, 23.0, 24.0, 4.0], [-0.222499996, 25.0, 26.0, 0.0], [-0.194999993, 27.0, 28.0, 0.0], [-0.200500011, 29.0, 30.0, 0.0], [0.576499999, 31.0, 32.0, 2.0], [0.048720818, 0.0, 0.0, 0.0], [-0.0713711008, 0.0, 0.0, 0.0], [-0.0332672521, 0.0, 0.0, 0.0], [0.115507051, 0.0, 0.0, 0.0], [-0.162890092, 0.0, 0.0, 0.0], [-0.0391989388, 0.0, 0.0, 0.0], [0.0676844344, 0.0, 0.0, 0.0], [-0.110908709, 0.0, 0.0, 0.0], [-0.0114981523, 0.0, 0.0, 0.0], [0.101881869, 0.0, 0.0, 0.0], [-0.0818132907, 0.0, 0.0, 0.0], [0.0131173907, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 21, 22, 23, 24, 4, 25, 26, 27, 28, 10, 11, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 16, 2, 5, 9, 17, 18, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_433(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.860499978, 1.0, 2.0, 1.0], [-0.0535221063, 0.0, 0.0, 0.0], [-0.906499982, 3.0, 4.0, 4.0], [-0.346000016, 5.0, 6.0, 0.0], [-0.314999998, 7.0, 8.0, 0.0], [-0.0689442679, 0.0, 0.0, 0.0], [-0.917500019, 9.0, 10.0, 4.0], [-0.595999956, 11.0, 12.0, 1.0], [-0.746500015, 13.0, 14.0, 1.0], [-0.300500005, 15.0, 16.0, 0.0], [0.100684159, 0.0, 0.0, 0.0], [0.00723677408, 0.0, 0.0, 0.0], [0.0480316021, 0.0, 0.0, 0.0], [-0.114933111, 0.0, 0.0, 0.0], [-0.68900001, 17.0, 18.0, 1.0], [0.0822373033, 0.0, 0.0, 0.0], [-0.00229850714, 0.0, 0.0, 0.0], [0.0820769295, 0.0, 0.0, 0.0], [-0.0904949382, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 15, 16, 10, 11, 12, 13, 17, 18])
    branch_indices = np.array([0, 2, 3, 6, 9, 4, 7, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_434(xs):
    #Predicts Class 2
    function_dict = np.array([[0.331499994, 1.0, 2.0, 2.0], [-0.0641214028, 0.0, 0.0, 0.0], [-0.713500023, 3.0, 4.0, 1.0], [-0.743499994, 5.0, 6.0, 1.0], [-0.961500049, 7.0, 8.0, 4.0], [0.443499982, 9.0, 10.0, 2.0], [-0.940999985, 11.0, 12.0, 4.0], [-0.99849999, 13.0, 14.0, 3.0], [-0.958500028, 15.0, 16.0, 4.0], [-0.995499969, 17.0, 18.0, 3.0], [-0.196500003, 19.0, 20.0, 0.0], [0.12674427, 0.0, 0.0, 0.0], [-0.00421015779, 0.0, 0.0, 0.0], [0.0509413593, 0.0, 0.0, 0.0], [0.608500004, 21.0, 22.0, 2.0], [0.0805034861, 0.0, 0.0, 0.0], [-0.951499999, 23.0, 24.0, 4.0], [-0.00721742911, 0.0, 0.0, 0.0], [0.0614478998, 0.0, 0.0, 0.0], [-0.101114668, 0.0, 0.0, 0.0], [0.0195671041, 0.0, 0.0, 0.0], [-0.131025314, 0.0, 0.0, 0.0], [-0.0122617967, 0.0, 0.0, 0.0], [-0.0780353025, 0.0, 0.0, 0.0], [0.0075862729, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 11, 12, 13, 21, 22, 15, 23, 24])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 4, 7, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_435(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.613499999, 1.0, 2.0, 2.0], [-0.205500007, 3.0, 4.0, 0.0], [0.0934000015, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.185499996, 9.0, 10.0, 0.0], [-0.0382499993, 11.0, 12.0, 0.0], [-0.0472057983, 0.0, 0.0, 0.0], [-0.273499995, 13.0, 14.0, 0.0], [-0.254500002, 15.0, 16.0, 0.0], [-0.191500008, 17.0, 18.0, 0.0], [-0.145500004, 19.0, 20.0, 0.0], [-0.208499998, 21.0, 22.0, 0.0], [0.132329524, 0.0, 0.0, 0.0], [-0.297500014, 23.0, 24.0, 0.0], [-0.0870840028, 0.0, 0.0, 0.0], [-0.166116923, 0.0, 0.0, 0.0], [-0.0523086078, 0.0, 0.0, 0.0], [-0.19749999, 25.0, 26.0, 0.0], [0.141572177, 0.0, 0.0, 0.0], [-0.999500036, 27.0, 28.0, 1.0], [-0.141499996, 29.0, 30.0, 0.0], [0.0905525461, 0.0, 0.0, 0.0], [-0.0761077628, 0.0, 0.0, 0.0], [-0.0278540887, 0.0, 0.0, 0.0], [0.04136521, 0.0, 0.0, 0.0], [0.0998153314, 0.0, 0.0, 0.0], [-0.0793772563, 0.0, 0.0, 0.0], [-0.223058641, 0.0, 0.0, 0.0], [0.0189056341, 0.0, 0.0, 0.0], [0.0860425457, 0.0, 0.0, 0.0], [-0.00211872626, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 25, 26, 18, 27, 28, 29, 30, 21, 22, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 9, 17, 10, 19, 20, 2, 5, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_436(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [0.111500002, 3.0, 4.0, 0.0], [-0.0828223005, 0.0, 0.0, 0.0], [0.0941499993, 5.0, 6.0, 0.0], [0.148499995, 7.0, 8.0, 0.0], [0.0917500034, 9.0, 10.0, 0.0], [0.124357201, 0.0, 0.0, 0.0], [-0.211716503, 0.0, 0.0, 0.0], [0.192499995, 11.0, 12.0, 0.0], [0.0892499983, 13.0, 14.0, 0.0], [-0.132874131, 0.0, 0.0, 0.0], [0.114575915, 0.0, 0.0, 0.0], [0.202500001, 15.0, 16.0, 0.0], [0.00171292841, 0.0, 0.0, 0.0], [0.138727635, 0.0, 0.0, 0.0], [-0.0619871877, 0.0, 0.0, 0.0], [0.0447948761, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 11, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_437(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.164499998, 3.0, 4.0, 0.0], [-0.158500001, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [-0.223170206, 0.0, 0.0, 0.0], [0.170257017, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.380499989, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 4.0], [-0.0127000008, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [-0.394999981, 19.0, 20.0, 0.0], [-0.1655, 21.0, 22.0, 0.0], [-0.885499954, 23.0, 24.0, 2.0], [-0.0838600993, 0.0, 0.0, 0.0], [-0.149500012, 25.0, 26.0, 0.0], [0.00361499982, 27.0, 28.0, 0.0], [-0.999500036, 29.0, 30.0, 4.0], [-0.999500036, 31.0, 32.0, 4.0], [-0.0226641428, 0.0, 0.0, 0.0], [0.13090086, 0.0, 0.0, 0.0], [-0.128696412, 0.0, 0.0, 0.0], [0.0476336628, 0.0, 0.0, 0.0], [0.198258668, 0.0, 0.0, 0.0], [0.0397454463, 0.0, 0.0, 0.0], [0.0408682376, 0.0, 0.0, 0.0], [-0.205235556, 0.0, 0.0, 0.0], [0.192135185, 0.0, 0.0, 0.0], [-0.00109335186, 0.0, 0.0, 0.0], [0.198715374, 0.0, 0.0, 0.0], [-0.0718101263, 0.0, 0.0, 0.0], [-0.159363538, 0.0, 0.0, 0.0], [0.0552947372, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 14, 4, 5, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 2, 6, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_438(xs):
    #Predicts Class 0
    function_dict = np.array([[0.412499994, 1.0, 2.0, 2.0], [-0.997500002, 3.0, 4.0, 3.0], [-0.767500043, 5.0, 6.0, 1.0], [0.0333912857, 0.0, 0.0, 0.0], [-0.950500011, 7.0, 8.0, 3.0], [-0.923500001, 9.0, 10.0, 4.0], [-0.101500005, 11.0, 12.0, 0.0], [-0.801999986, 13.0, 14.0, 1.0], [0.0432145596, 0.0, 0.0, 0.0], [-0.172499999, 15.0, 16.0, 0.0], [-0.0566808805, 0.0, 0.0, 0.0], [-0.149500012, 17.0, 18.0, 0.0], [-0.915500045, 19.0, 20.0, 4.0], [0.00409461744, 0.0, 0.0, 0.0], [-0.156571656, 0.0, 0.0, 0.0], [-0.791499972, 21.0, 22.0, 1.0], [-0.0609359816, 0.0, 0.0, 0.0], [0.634500027, 23.0, 24.0, 2.0], [0.649500012, 25.0, 26.0, 2.0], [-0.128091007, 0.0, 0.0, 0.0], [0.0230989307, 0.0, 0.0, 0.0], [0.0544389971, 0.0, 0.0, 0.0], [0.182980508, 0.0, 0.0, 0.0], [-0.0373145044, 0.0, 0.0, 0.0], [0.0312593617, 0.0, 0.0, 0.0], [0.126637831, 0.0, 0.0, 0.0], [-0.0386514552, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 8, 21, 22, 16, 10, 23, 24, 25, 26, 19, 20])
    branch_indices = np.array([0, 1, 4, 7, 2, 5, 9, 15, 6, 11, 17, 18, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_439(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.218499988, 1.0, 2.0, 0.0], [-0.228500009, 3.0, 4.0, 0.0], [-0.213499993, 5.0, 6.0, 0.0], [0.514500022, 7.0, 8.0, 2.0], [-0.745000005, 9.0, 10.0, 1.0], [0.116859943, 0.0, 0.0, 0.0], [-0.9745, 11.0, 12.0, 3.0], [-0.825500011, 13.0, 14.0, 1.0], [0.673500001, 15.0, 16.0, 2.0], [-0.136113331, 0.0, 0.0, 0.0], [-0.6875, 17.0, 18.0, 1.0], [-0.994500041, 19.0, 20.0, 3.0], [-0.645500004, 21.0, 22.0, 1.0], [-0.0757197812, 0.0, 0.0, 0.0], [-0.74150002, 23.0, 24.0, 1.0], [-0.291500002, 25.0, 26.0, 0.0], [-0.422500014, 27.0, 28.0, 1.0], [0.079966329, 0.0, 0.0, 0.0], [-0.0636109933, 0.0, 0.0, 0.0], [-0.805500031, 29.0, 30.0, 1.0], [-0.965499997, 31.0, 32.0, 4.0], [-0.139310703, 0.0, 0.0, 0.0], [0.0270691309, 0.0, 0.0, 0.0], [0.116570391, 0.0, 0.0, 0.0], [-0.0133395391, 0.0, 0.0, 0.0], [0.0045821839, 0.0, 0.0, 0.0], [-0.0821707845, 0.0, 0.0, 0.0], [-0.0129513396, 0.0, 0.0, 0.0], [0.104413547, 0.0, 0.0, 0.0], [0.0505289733, 0.0, 0.0, 0.0], [-0.0352609716, 0.0, 0.0, 0.0], [0.0122804046, 0.0, 0.0, 0.0], [0.108225279, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 23, 24, 25, 26, 27, 28, 9, 17, 18, 5, 29, 30, 31, 32, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 15, 16, 4, 10, 2, 6, 11, 19, 20, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_440(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.305000007, 1.0, 2.0, 1.0], [0.476500005, 3.0, 4.0, 2.0], [0.0651014969, 0.0, 0.0, 0.0], [-0.972499967, 5.0, 6.0, 4.0], [0.548500001, 7.0, 8.0, 2.0], [-0.770500004, 9.0, 10.0, 1.0], [0.411000013, 11.0, 12.0, 2.0], [-0.965499997, 13.0, 14.0, 3.0], [-0.736500025, 15.0, 16.0, 1.0], [-0.0310031176, 0.0, 0.0, 0.0], [0.0644460768, 0.0, 0.0, 0.0], [0.00556087447, 0.0, 0.0, 0.0], [-0.109974772, 0.0, 0.0, 0.0], [-0.992499948, 17.0, 18.0, 3.0], [-0.0578143373, 0.0, 0.0, 0.0], [0.0854680315, 0.0, 0.0, 0.0], [-0.682999969, 19.0, 20.0, 1.0], [0.0149635356, 0.0, 0.0, 0.0], [0.137491822, 0.0, 0.0, 0.0], [-0.142089888, 0.0, 0.0, 0.0], [-0.000615132216, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 17, 18, 14, 15, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 4, 7, 13, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_441(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.37349999, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.296499997, 9.0, 10.0, 0.0], [-0.822000027, 11.0, 12.0, 2.0], [-0.205500007, 13.0, 14.0, 0.0], [0.00014395258, 0.0, 0.0, 0.0], [0.0629609078, 0.0, 0.0, 0.0], [-0.0241756104, 0.0, 0.0, 0.0], [-0.082254298, 0.0, 0.0, 0.0], [0.1194515, 0.0, 0.0, 0.0], [-0.011090952, 0.0, 0.0, 0.0], [-0.2095, 15.0, 16.0, 0.0], [-0.190499991, 17.0, 18.0, 0.0], [0.00234956993, 0.0, 0.0, 0.0], [-0.119696602, 0.0, 0.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.142500013, 21.0, 22.0, 0.0], [0.0189137049, 0.0, 0.0, 0.0], [0.102241673, 0.0, 0.0, 0.0], [-0.0734968036, 0.0, 0.0, 0.0], [0.00186414015, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 6, 13, 14, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_442(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [0.074149996, 7.0, 8.0, 0.0], [0.150889516, 0.0, 0.0, 0.0], [-0.25799042, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.03785, 11.0, 12.0, 0.0], [-0.229035795, 0.0, 0.0, 0.0], [0.0883999988, 13.0, 14.0, 0.0], [-0.11259193, 0.0, 0.0, 0.0], [0.0293500014, 15.0, 16.0, 0.0], [0.0424499996, 17.0, 18.0, 0.0], [0.0867500007, 19.0, 20.0, 0.0], [0.0892499983, 21.0, 22.0, 0.0], [0.00300068082, 0.0, 0.0, 0.0], [-0.193742722, 0.0, 0.0, 0.0], [0.278317392, 0.0, 0.0, 0.0], [0.0354481488, 0.0, 0.0, 0.0], [-0.0320402086, 0.0, 0.0, 0.0], [0.139243707, 0.0, 0.0, 0.0], [-0.109516799, 0.0, 0.0, 0.0], [0.0209962465, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 19, 20, 21, 22, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_443(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.747500002, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.996500015, 5.0, 6.0, 1.0], [0.615499973, 7.0, 8.0, 0.0], [0.253000021, 9.0, 10.0, 0.0], [-0.620499969, 11.0, 12.0, 2.0], [0.0398642272, 0.0, 0.0, 0.0], [0.5625, 13.0, 14.0, 0.0], [0.618499994, 15.0, 16.0, 0.0], [-0.294, 17.0, 18.0, 0.0], [0.428499997, 19.0, 20.0, 0.0], [-0.1555406, 0.0, 0.0, 0.0], [0.0411636643, 0.0, 0.0, 0.0], [0.431500018, 21.0, 22.0, 0.0], [0.111572906, 0.0, 0.0, 0.0], [-0.135065898, 0.0, 0.0, 0.0], [-0.00847542007, 0.0, 0.0, 0.0], [-0.4375, 23.0, 24.0, 0.0], [-0.0592, 25.0, 26.0, 0.0], [0.182454899, 0.0, 0.0, 0.0], [0.437000006, 27.0, 28.0, 0.0], [0.00690524327, 0.0, 0.0, 0.0], [-0.0256424956, 0.0, 0.0, 0.0], [0.0261695851, 0.0, 0.0, 0.0], [0.105815679, 0.0, 0.0, 0.0], [-0.173469871, 0.0, 0.0, 0.0], [-0.0265595019, 0.0, 0.0, 0.0], [-0.113822073, 0.0, 0.0, 0.0], [0.0516004264, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 23, 24, 25, 26, 19, 27, 28, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 9, 17, 18, 10, 20, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_444(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 1.0], [-0.971500039, 3.0, 4.0, 4.0], [-0.597499967, 5.0, 6.0, 1.0], [-0.180500001, 7.0, 8.0, 0.0], [-0.206, 9.0, 10.0, 0.0], [-0.996500015, 11.0, 12.0, 3.0], [-0.578999996, 13.0, 14.0, 1.0], [-0.2095, 15.0, 16.0, 0.0], [-0.090751797, 0.0, 0.0, 0.0], [-0.213499993, 17.0, 18.0, 0.0], [-0.743499994, 19.0, 20.0, 1.0], [-0.135822132, 0.0, 0.0, 0.0], [-0.976000011, 21.0, 22.0, 3.0], [0.102306947, 0.0, 0.0, 0.0], [-0.825999975, 23.0, 24.0, 4.0], [-0.792500019, 25.0, 26.0, 1.0], [0.145471886, 0.0, 0.0, 0.0], [-0.240500003, 27.0, 28.0, 0.0], [0.142673329, 0.0, 0.0, 0.0], [-0.805500031, 29.0, 30.0, 1.0], [0.55250001, 31.0, 32.0, 2.0], [0.0619734079, 0.0, 0.0, 0.0], [-0.0993719548, 0.0, 0.0, 0.0], [-0.148499995, 33.0, 34.0, 0.0], [-0.712499976, 35.0, 36.0, 4.0], [0.00363628357, 0.0, 0.0, 0.0], [-0.114882916, 0.0, 0.0, 0.0], [0.0501122996, 0.0, 0.0, 0.0], [-0.0382411592, 0.0, 0.0, 0.0], [-0.0460220389, 0.0, 0.0, 0.0], [0.112653807, 0.0, 0.0, 0.0], [-0.147735015, 0.0, 0.0, 0.0], [0.032641314, 0.0, 0.0, 0.0], [-0.138107538, 0.0, 0.0, 0.0], [-0.00276350207, 0.0, 0.0, 0.0], [0.0553370304, 0.0, 0.0, 0.0], [-0.0435333177, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 8, 27, 28, 18, 29, 30, 31, 32, 11, 21, 22, 13, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 17, 10, 19, 20, 2, 5, 12, 6, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_445(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.723500013, 1.0, 2.0, 1.0], [0.407499999, 3.0, 4.0, 2.0], [-0.962499976, 5.0, 6.0, 4.0], [-0.132499993, 7.0, 8.0, 0.0], [-0.171499997, 9.0, 10.0, 0.0], [-0.210500002, 11.0, 12.0, 0.0], [-0.205500007, 13.0, 14.0, 0.0], [-0.945500016, 15.0, 16.0, 4.0], [-0.0744914785, 0.0, 0.0, 0.0], [-0.958500028, 17.0, 18.0, 4.0], [0.0507629327, 0.0, 0.0, 0.0], [-0.592499971, 19.0, 20.0, 1.0], [-0.64349997, 21.0, 22.0, 1.0], [-0.630499959, 23.0, 24.0, 1.0], [-0.653499961, 25.0, 26.0, 1.0], [-0.219500005, 27.0, 28.0, 0.0], [-0.044822339, 0.0, 0.0, 0.0], [-0.996500015, 29.0, 30.0, 3.0], [-0.877499998, 31.0, 32.0, 4.0], [0.174574465, 0.0, 0.0, 0.0], [0.0242231749, 0.0, 0.0, 0.0], [-0.0711797476, 0.0, 0.0, 0.0], [0.0261429641, 0.0, 0.0, 0.0], [-0.229499996, 33.0, 34.0, 0.0], [-0.527500033, 35.0, 36.0, 1.0], [0.122732684, 0.0, 0.0, 0.0], [-0.00919798575, 0.0, 0.0, 0.0], [0.125757262, 0.0, 0.0, 0.0], [0.0343212709, 0.0, 0.0, 0.0], [-0.0306640156, 0.0, 0.0, 0.0], [-0.149051338, 0.0, 0.0, 0.0], [-0.0196016598, 0.0, 0.0, 0.0], [0.0655614957, 0.0, 0.0, 0.0], [-0.0162389893, 0.0, 0.0, 0.0], [-0.180718213, 0.0, 0.0, 0.0], [0.108231291, 0.0, 0.0, 0.0], [-0.0346448049, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 8, 29, 30, 31, 32, 10, 19, 20, 21, 22, 33, 34, 35, 36, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 17, 18, 2, 5, 11, 12, 6, 13, 23, 24, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_446(xs):
    #Predicts Class 2
    function_dict = np.array([[0.331499994, 1.0, 2.0, 2.0], [-0.0606786087, 0.0, 0.0, 0.0], [-0.977499962, 3.0, 4.0, 4.0], [-0.0578660816, 0.0, 0.0, 0.0], [-0.0749500021, 5.0, 6.0, 0.0], [0.459500015, 7.0, 8.0, 2.0], [-0.0592326485, 0.0, 0.0, 0.0], [-0.95449996, 9.0, 10.0, 4.0], [0.566499949, 11.0, 12.0, 2.0], [0.100094773, 0.0, 0.0, 0.0], [-0.0161044523, 0.0, 0.0, 0.0], [-0.0291490611, 0.0, 0.0, 0.0], [0.0220570527, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 9, 10, 11, 12, 6])
    branch_indices = np.array([0, 2, 4, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_447(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.654500008, 3.0, 4.0, 2.0], [-0.99849999, 5.0, 6.0, 1.0], [-0.680500031, 7.0, 8.0, 2.0], [-0.0879999995, 9.0, 10.0, 0.0], [-0.103100725, 0.0, 0.0, 0.0], [0.0301934667, 0.0, 0.0, 0.0], [-0.99849999, 11.0, 12.0, 4.0], [-0.109505892, 0.0, 0.0, 0.0], [-0.601000011, 13.0, 14.0, 2.0], [0.0516000018, 15.0, 16.0, 0.0], [0.564499974, 17.0, 18.0, 0.0], [-0.0915690586, 0.0, 0.0, 0.0], [0.110590912, 0.0, 0.0, 0.0], [0.0160050802, 0.0, 0.0, 0.0], [-0.0225000009, 19.0, 20.0, 0.0], [0.0579402298, 0.0, 0.0, 0.0], [0.00108374516, 0.0, 0.0, 0.0], [0.0397056788, 0.0, 0.0, 0.0], [-0.0687131807, 0.0, 0.0, 0.0], [-0.0146931745, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 13, 14, 19, 20, 16, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 9, 10, 15, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_448(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0760499984, 1.0, 2.0, 0.0], [0.0477499999, 3.0, 4.0, 0.0], [0.0825999975, 5.0, 6.0, 0.0], [0.0417999998, 7.0, 8.0, 0.0], [0.0506500006, 9.0, 10.0, 0.0], [-0.215623528, 0.0, 0.0, 0.0], [0.0854000002, 11.0, 12.0, 0.0], [0.0353999995, 13.0, 14.0, 0.0], [-0.155911773, 0.0, 0.0, 0.0], [0.250331551, 0.0, 0.0, 0.0], [0.0740500018, 15.0, 16.0, 0.0], [0.157382593, 0.0, 0.0, 0.0], [0.0873000026, 17.0, 18.0, 0.0], [0.0293500014, 19.0, 20.0, 0.0], [0.179587185, 0.0, 0.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [0.133364156, 0.0, 0.0, 0.0], [-0.147183627, 0.0, 0.0, 0.0], [0.0894500017, 23.0, 24.0, 0.0], [0.00135011936, 0.0, 0.0, 0.0], [-0.245935678, 0.0, 0.0, 0.0], [-0.258093745, 0.0, 0.0, 0.0], [0.0992491692, 0.0, 0.0, 0.0], [0.111643225, 0.0, 0.0, 0.0], [-0.0288706906, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 21, 22, 16, 5, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 15, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_449(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.601000011, 1.0, 2.0, 2.0], [-0.99849999, 3.0, 4.0, 4.0], [-0.062516734, 0.0, 0.0, 0.0], [0.392499983, 5.0, 6.0, 0.0], [0.0852531195, 0.0, 0.0, 0.0], [0.344999999, 7.0, 8.0, 0.0], [0.401499987, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [-0.166010708, 0.0, 0.0, 0.0], [0.107781522, 0.0, 0.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.0130848009, 0.0, 0.0, 0.0], [0.0425800607, 0.0, 0.0, 0.0], [-0.00347025669, 0.0, 0.0, 0.0], [0.0526172332, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_450(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [0.388500005, 3.0, 4.0, 2.0], [-0.813500047, 5.0, 6.0, 1.0], [-0.0884077922, 0.0, 0.0, 0.0], [0.0106593538, 0.0, 0.0, 0.0], [0.487500012, 7.0, 8.0, 2.0], [-0.80250001, 9.0, 10.0, 1.0], [-0.96449995, 11.0, 12.0, 4.0], [-0.0148383528, 0.0, 0.0, 0.0], [-0.0667693019, 0.0, 0.0, 0.0], [-0.793500006, 13.0, 14.0, 1.0], [-0.000893217628, 0.0, 0.0, 0.0], [0.110326692, 0.0, 0.0, 0.0], [0.0723795444, 0.0, 0.0, 0.0], [-0.786499977, 15.0, 16.0, 1.0], [-0.0870754048, 0.0, 0.0, 0.0], [0.000952873263, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 8, 9, 13, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 7, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_451(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.132499993, 1.0, 2.0, 0.0], [-0.946500003, 3.0, 4.0, 4.0], [0.0696500018, 5.0, 6.0, 0.0], [-0.485000014, 7.0, 8.0, 1.0], [-0.941499949, 9.0, 10.0, 4.0], [-0.107569471, 0.0, 0.0, 0.0], [0.0375022031, 0.0, 0.0, 0.0], [-0.556499958, 11.0, 12.0, 1.0], [-0.399999976, 13.0, 14.0, 1.0], [-0.0885980204, 0.0, 0.0, 0.0], [-0.367500007, 15.0, 16.0, 1.0], [0.408500016, 17.0, 18.0, 2.0], [0.141653493, 0.0, 0.0, 0.0], [-0.0721356273, 0.0, 0.0, 0.0], [0.0325137377, 0.0, 0.0, 0.0], [-0.488499999, 19.0, 20.0, 1.0], [-0.0774080232, 0.0, 0.0, 0.0], [0.0657862201, 0.0, 0.0, 0.0], [-0.00581713906, 0.0, 0.0, 0.0], [-0.011807723, 0.0, 0.0, 0.0], [0.0944229886, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 9, 19, 20, 16, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 4, 10, 15, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_452(xs):
    #Predicts Class 2
    function_dict = np.array([[0.331499994, 1.0, 2.0, 2.0], [-0.0480624177, 0.0, 0.0, 0.0], [-0.713500023, 3.0, 4.0, 1.0], [-0.925500035, 5.0, 6.0, 4.0], [-0.884500027, 7.0, 8.0, 4.0], [-0.762500048, 9.0, 10.0, 1.0], [-0.0311436523, 0.0, 0.0, 0.0], [-0.904500008, 11.0, 12.0, 4.0], [-0.99150002, 13.0, 14.0, 3.0], [-0.804499984, 15.0, 16.0, 1.0], [-0.965499997, 17.0, 18.0, 4.0], [-0.99849999, 19.0, 20.0, 3.0], [-0.0895946175, 0.0, 0.0, 0.0], [-0.816499949, 21.0, 22.0, 4.0], [0.639500022, 23.0, 24.0, 2.0], [0.0576065555, 0.0, 0.0, 0.0], [-0.0671128929, 0.0, 0.0, 0.0], [-0.00850812159, 0.0, 0.0, 0.0], [0.122629955, 0.0, 0.0, 0.0], [0.0638209507, 0.0, 0.0, 0.0], [-0.0316855125, 0.0, 0.0, 0.0], [0.126133844, 0.0, 0.0, 0.0], [0.0019219286, 0.0, 0.0, 0.0], [-0.0824200734, 0.0, 0.0, 0.0], [0.0174885876, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 6, 19, 20, 12, 21, 22, 23, 24])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 7, 11, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_453(xs):
    #Predicts Class 3
    function_dict = np.array([[0.000549999997, 1.0, 2.0, 0.0], [-0.000714999973, 3.0, 4.0, 0.0], [0.00171500002, 5.0, 6.0, 0.0], [-0.00163000007, 7.0, 8.0, 0.0], [0.164794832, 0.0, 0.0, 0.0], [-0.313203752, 0.0, 0.0, 0.0], [0.00325499987, 9.0, 10.0, 0.0], [-0.00413500005, 11.0, 12.0, 0.0], [-0.135103762, 0.0, 0.0, 0.0], [0.00202000001, 13.0, 14.0, 0.0], [0.00588999968, 15.0, 16.0, 0.0], [-0.00496499985, 17.0, 18.0, 0.0], [-0.00322999991, 19.0, 20.0, 0.0], [0.0100238277, 0.0, 0.0, 0.0], [0.216712728, 0.0, 0.0, 0.0], [0.00456999987, 21.0, 22.0, 0.0], [0.00768500008, 23.0, 24.0, 0.0], [0.00566278631, 0.0, 0.0, 0.0], [-0.159346387, 0.0, 0.0, 0.0], [0.276153564, 0.0, 0.0, 0.0], [0.0182897542, 0.0, 0.0, 0.0], [-0.033905793, 0.0, 0.0, 0.0], [-0.329507947, 0.0, 0.0, 0.0], [0.144183755, 0.0, 0.0, 0.0], [-0.00305964751, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 13, 14, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_454(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0101749999, 1.0, 2.0, 0.0], [-0.0150499996, 3.0, 4.0, 0.0], [-0.00885999948, 5.0, 6.0, 0.0], [-0.0156999994, 7.0, 8.0, 0.0], [-0.300027341, 0.0, 0.0, 0.0], [0.234391659, 0.0, 0.0, 0.0], [-0.00550500024, 9.0, 10.0, 0.0], [-0.0244999994, 11.0, 12.0, 0.0], [0.224798366, 0.0, 0.0, 0.0], [-0.248200774, 0.0, 0.0, 0.0], [-0.00478500035, 13.0, 14.0, 0.0], [-0.0252999999, 15.0, 16.0, 0.0], [-0.247097179, 0.0, 0.0, 0.0], [0.172300398, 0.0, 0.0, 0.0], [-0.00322999991, 17.0, 18.0, 0.0], [-0.00423394283, 0.0, 0.0, 0.0], [0.225551888, 0.0, 0.0, 0.0], [-0.140031248, 0.0, 0.0, 0.0], [0.0107961791, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_455(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.539999962, 7.0, 8.0, 0.0], [-0.117513247, 0.0, 0.0, 0.0], [0.083118014, 0.0, 0.0, 0.0], [-0.0036622663, 0.0, 0.0, 0.0], [0.534000039, 9.0, 10.0, 0.0], [0.547500014, 11.0, 12.0, 0.0], [-0.885499954, 13.0, 14.0, 2.0], [-0.134285048, 0.0, 0.0, 0.0], [0.541499972, 15.0, 16.0, 0.0], [0.557999969, 17.0, 18.0, 0.0], [0.00728644291, 0.0, 0.0, 0.0], [-0.0485301502, 0.0, 0.0, 0.0], [0.0172718149, 0.0, 0.0, 0.0], [0.102379709, 0.0, 0.0, 0.0], [-0.0448562168, 0.0, 0.0, 0.0], [0.0896588638, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_456(xs):
    #Predicts Class 0
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [0.693500042, 3.0, 4.0, 2.0], [0.772500038, 5.0, 6.0, 2.0], [-0.578999996, 7.0, 8.0, 1.0], [-0.102690235, 0.0, 0.0, 0.0], [-0.983500004, 9.0, 10.0, 3.0], [-0.553499997, 11.0, 12.0, 1.0], [0.657500029, 13.0, 14.0, 2.0], [-0.145500004, 15.0, 16.0, 0.0], [0.124047637, 0.0, 0.0, 0.0], [0.0056955046, 0.0, 0.0, 0.0], [-0.0663281158, 0.0, 0.0, 0.0], [0.0128158722, 0.0, 0.0, 0.0], [-0.995499969, 17.0, 18.0, 3.0], [0.0800972208, 0.0, 0.0, 0.0], [-0.234499991, 19.0, 20.0, 0.0], [-0.110368088, 0.0, 0.0, 0.0], [-0.0306875017, 0.0, 0.0, 0.0], [0.0130707696, 0.0, 0.0, 0.0], [-0.0605229884, 0.0, 0.0, 0.0], [0.0791353881, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 19, 20, 16, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_457(xs):
    #Predicts Class 1
    function_dict = np.array([[0.277500004, 1.0, 2.0, 2.0], [-0.0601723343, 0.0, 0.0, 0.0], [-0.365500003, 3.0, 4.0, 0.0], [0.0632444397, 0.0, 0.0, 0.0], [-0.334500015, 5.0, 6.0, 0.0], [-0.620499969, 7.0, 8.0, 1.0], [0.712499976, 9.0, 10.0, 2.0], [-0.115126818, 0.0, 0.0, 0.0], [0.0340619758, 0.0, 0.0, 0.0], [-0.291500002, 11.0, 12.0, 0.0], [-0.0732272267, 0.0, 0.0, 0.0], [0.0824780092, 0.0, 0.0, 0.0], [0.000655691838, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 8, 11, 12, 10])
    branch_indices = np.array([0, 2, 4, 5, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_458(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.956499994, 3.0, 4.0, 4.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [-0.99849999, 9.0, 10.0, 3.0], [-0.318499982, 11.0, 12.0, 0.0], [-0.825999975, 13.0, 14.0, 4.0], [0.546499968, 15.0, 16.0, 2.0], [0.50849998, 17.0, 18.0, 2.0], [0.605000019, 19.0, 20.0, 2.0], [0.672500014, 21.0, 22.0, 2.0], [0.049509801, 0.0, 0.0, 0.0], [-0.085448809, 0.0, 0.0, 0.0], [-0.218499988, 23.0, 24.0, 0.0], [0.00204603118, 0.0, 0.0, 0.0], [0.438499987, 25.0, 26.0, 2.0], [-0.968500018, 27.0, 28.0, 4.0], [-0.00274752872, 0.0, 0.0, 0.0], [-0.168552995, 0.0, 0.0, 0.0], [-0.0925760642, 0.0, 0.0, 0.0], [0.00572656514, 0.0, 0.0, 0.0], [-0.590999961, 29.0, 30.0, 1.0], [0.712499976, 31.0, 32.0, 2.0], [0.124116242, 0.0, 0.0, 0.0], [0.0135619342, 0.0, 0.0, 0.0], [0.0279405918, 0.0, 0.0, 0.0], [-0.0849376172, 0.0, 0.0, 0.0], [-0.0269875675, 0.0, 0.0, 0.0], [0.133519605, 0.0, 0.0, 0.0], [0.00333600189, 0.0, 0.0, 0.0], [0.130021736, 0.0, 0.0, 0.0], [-0.104408637, 0.0, 0.0, 0.0], [0.0094854217, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 17, 18, 19, 20, 29, 30, 31, 32, 11, 12, 23, 24, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 10, 21, 22, 2, 5, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_459(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0968500003, 1.0, 2.0, 0.0], [-0.0987499952, 3.0, 4.0, 0.0], [-0.0914499983, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [-0.231604874, 0.0, 0.0, 0.0], [-0.0932999998, 9.0, 10.0, 0.0], [-0.0910999998, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.654500008, 15.0, 16.0, 2.0], [0.0627980605, 0.0, 0.0, 0.0], [0.28230539, 0.0, 0.0, 0.0], [-0.276571482, 0.0, 0.0, 0.0], [-0.0905999988, 17.0, 18.0, 0.0], [-0.132499993, 19.0, 20.0, 0.0], [-0.13350001, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [-0.493000001, 25.0, 26.0, 2.0], [0.261991024, 0.0, 0.0, 0.0], [-0.0801500008, 27.0, 28.0, 0.0], [0.0181734506, 0.0, 0.0, 0.0], [-0.0568300188, 0.0, 0.0, 0.0], [-0.065671742, 0.0, 0.0, 0.0], [0.287855357, 0.0, 0.0, 0.0], [-0.163201869, 0.0, 0.0, 0.0], [-0.0364764072, 0.0, 0.0, 0.0], [-0.0113352556, 0.0, 0.0, 0.0], [0.0547307655, 0.0, 0.0, 0.0], [-0.229361609, 0.0, 0.0, 0.0], [0.00339733902, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 4, 9, 10, 11, 17, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_460(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0973500013, 1.0, 2.0, 0.0], [-0.0987499952, 3.0, 4.0, 0.0], [-0.0914499983, 5.0, 6.0, 0.0], [-0.111500002, 7.0, 8.0, 0.0], [0.234470382, 0.0, 0.0, 0.0], [-0.0938000008, 9.0, 10.0, 0.0], [-0.0910999998, 11.0, 12.0, 0.0], [-0.115500003, 13.0, 14.0, 0.0], [-0.102499999, 15.0, 16.0, 0.0], [-0.0963499993, 17.0, 18.0, 0.0], [-0.278826356, 0.0, 0.0, 0.0], [0.27936852, 0.0, 0.0, 0.0], [-0.0904500037, 19.0, 20.0, 0.0], [-0.1175, 21.0, 22.0, 0.0], [0.234902367, 0.0, 0.0, 0.0], [-0.104499996, 23.0, 24.0, 0.0], [-0.101500005, 25.0, 26.0, 0.0], [-0.248675987, 0.0, 0.0, 0.0], [0.174847245, 0.0, 0.0, 0.0], [-0.255254328, 0.0, 0.0, 0.0], [-0.0811500028, 27.0, 28.0, 0.0], [0.0085299965, 0.0, 0.0, 0.0], [-0.0945809633, 0.0, 0.0, 0.0], [-0.0434331261, 0.0, 0.0, 0.0], [-0.181531355, 0.0, 0.0, 0.0], [0.0886924267, 0.0, 0.0, 0.0], [0.0208057929, 0.0, 0.0, 0.0], [0.233084574, 0.0, 0.0, 0.0], [-0.00753757218, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 25, 26, 4, 17, 18, 10, 11, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 2, 5, 9, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_461(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.393000007, 3.0, 4.0, 0.0], [-0.158500001, 5.0, 6.0, 0.0], [-0.407499999, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.122540064, 0.0, 0.0, 0.0], [-0.99849999, 11.0, 12.0, 4.0], [-0.424499989, 13.0, 14.0, 0.0], [0.121493459, 0.0, 0.0, 0.0], [-0.168500006, 15.0, 16.0, 0.0], [-0.166500002, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [0.0908879861, 0.0, 0.0, 0.0], [-0.453500003, 21.0, 22.0, 0.0], [-0.0889505297, 0.0, 0.0, 0.0], [-0.296499997, 23.0, 24.0, 0.0], [-0.1655, 25.0, 26.0, 0.0], [-0.0500121824, 0.0, 0.0, 0.0], [0.0984116122, 0.0, 0.0, 0.0], [-0.923500001, 27.0, 28.0, 2.0], [-0.923500001, 29.0, 30.0, 2.0], [-0.0129350955, 0.0, 0.0, 0.0], [0.0844057575, 0.0, 0.0, 0.0], [-0.107491069, 0.0, 0.0, 0.0], [0.0677839965, 0.0, 0.0, 0.0], [-0.218852371, 0.0, 0.0, 0.0], [-0.0334548764, 0.0, 0.0, 0.0], [0.0100067053, 0.0, 0.0, 0.0], [-0.132392272, 0.0, 0.0, 0.0], [-0.131698743, 0.0, 0.0, 0.0], [0.0290214159, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 23, 24, 25, 26, 17, 18, 5, 27, 28, 29, 30, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 15, 16, 10, 2, 6, 11, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_462(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.727499962, 3.0, 4.0, 4.0], [-0.902500033, 5.0, 6.0, 4.0], [-0.782500029, 7.0, 8.0, 4.0], [0.728999972, 9.0, 10.0, 2.0], [0.0645162538, 0.0, 0.0, 0.0], [0.00271068607, 0.0, 0.0, 0.0], [-0.315500021, 11.0, 12.0, 0.0], [-0.0898060873, 0.0, 0.0, 0.0], [0.0921021029, 0.0, 0.0, 0.0], [-0.0218830444, 0.0, 0.0, 0.0], [-0.334500015, 13.0, 14.0, 0.0], [-0.24149999, 15.0, 16.0, 0.0], [0.0031804489, 0.0, 0.0, 0.0], [-0.10645885, 0.0, 0.0, 0.0], [0.0513340831, 0.0, 0.0, 0.0], [-0.0144268787, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_463(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.860499978, 1.0, 2.0, 1.0], [-0.0523942709, 0.0, 0.0, 0.0], [-0.315500021, 3.0, 4.0, 0.0], [-0.429499984, 5.0, 6.0, 1.0], [-0.906499982, 7.0, 8.0, 4.0], [-0.987499952, 9.0, 10.0, 3.0], [-0.0488076136, 0.0, 0.0, 0.0], [-0.917500019, 11.0, 12.0, 4.0], [-0.746500015, 13.0, 14.0, 1.0], [0.094943285, 0.0, 0.0, 0.0], [-0.922999978, 15.0, 16.0, 4.0], [-0.218499988, 17.0, 18.0, 0.0], [0.0819291323, 0.0, 0.0, 0.0], [-0.109826759, 0.0, 0.0, 0.0], [-0.651000023, 19.0, 20.0, 1.0], [-0.0353780575, 0.0, 0.0, 0.0], [0.0409133956, 0.0, 0.0, 0.0], [-0.0166996457, 0.0, 0.0, 0.0], [0.0223337039, 0.0, 0.0, 0.0], [0.0629195496, 0.0, 0.0, 0.0], [-0.0835998356, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 15, 16, 6, 17, 18, 12, 13, 19, 20])
    branch_indices = np.array([0, 2, 3, 5, 10, 4, 7, 11, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_464(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.415000021, 1.0, 2.0, 1.0], [-0.435499996, 3.0, 4.0, 1.0], [-0.266499996, 5.0, 6.0, 0.0], [-0.892500043, 7.0, 8.0, 3.0], [-0.0685048997, 0.0, 0.0, 0.0], [-0.0271256659, 0.0, 0.0, 0.0], [0.109062023, 0.0, 0.0, 0.0], [-0.928499997, 9.0, 10.0, 3.0], [-0.604499996, 11.0, 12.0, 1.0], [-0.484499991, 13.0, 14.0, 1.0], [0.0878459662, 0.0, 0.0, 0.0], [0.0109407222, 0.0, 0.0, 0.0], [-0.0921109319, 0.0, 0.0, 0.0], [-0.00899942778, 0.0, 0.0, 0.0], [0.0514727645, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_465(xs):
    #Predicts Class 3
    function_dict = np.array([[0.0203999989, 1.0, 2.0, 0.0], [0.0110500008, 3.0, 4.0, 0.0], [0.0234000012, 5.0, 6.0, 0.0], [0.0101999994, 7.0, 8.0, 0.0], [-0.198167637, 0.0, 0.0, 0.0], [0.302495599, 0.0, 0.0, 0.0], [0.025150001, 9.0, 10.0, 0.0], [0.00768500008, 11.0, 12.0, 0.0], [0.214533865, 0.0, 0.0, 0.0], [-0.213905752, 0.0, 0.0, 0.0], [0.0260500014, 13.0, 14.0, 0.0], [0.00655000005, 15.0, 16.0, 0.0], [-0.175535709, 0.0, 0.0, 0.0], [0.255177051, 0.0, 0.0, 0.0], [0.0271000005, 17.0, 18.0, 0.0], [-0.00369001576, 0.0, 0.0, 0.0], [0.158222258, 0.0, 0.0, 0.0], [-0.21315062, 0.0, 0.0, 0.0], [0.002646751, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_466(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [0.074149996, 7.0, 8.0, 0.0], [0.136895105, 0.0, 0.0, 0.0], [-0.245679632, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0694999993, 11.0, 12.0, 0.0], [-0.215770677, 0.0, 0.0, 0.0], [0.1105, 13.0, 14.0, 0.0], [-0.851999998, 15.0, 16.0, 2.0], [0.0560500026, 17.0, 18.0, 0.0], [0.133321255, 0.0, 0.0, 0.0], [0.0883999988, 19.0, 20.0, 0.0], [0.157999992, 21.0, 22.0, 0.0], [0.167622924, 0.0, 0.0, 0.0], [-0.00146212685, 0.0, 0.0, 0.0], [0.0035710365, 0.0, 0.0, 0.0], [-0.159595877, 0.0, 0.0, 0.0], [0.0440994166, 0.0, 0.0, 0.0], [-0.111529984, 0.0, 0.0, 0.0], [0.182510629, 0.0, 0.0, 0.0], [-0.01545035, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 21, 22, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_467(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0498886034, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0952323452, 0.0, 0.0, 0.0], [0.556499958, 7.0, 8.0, 0.0], [0.111058496, 0.0, 0.0, 0.0], [0.537500024, 9.0, 10.0, 0.0], [-0.0708389282, 0.0, 0.0, 0.0], [-0.00314779999, 0.0, 0.0, 0.0], [0.0638598055, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 8, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_468(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.797500014, 1.0, 2.0, 1.0], [0.45450002, 3.0, 4.0, 2.0], [-0.925500035, 5.0, 6.0, 4.0], [-0.201499999, 7.0, 8.0, 0.0], [-0.933500051, 9.0, 10.0, 4.0], [0.680500031, 11.0, 12.0, 2.0], [0.612499952, 13.0, 14.0, 2.0], [-0.817499995, 15.0, 16.0, 1.0], [-0.838999987, 17.0, 18.0, 1.0], [0.0995490551, 0.0, 0.0, 0.0], [-0.0268267598, 0.0, 0.0, 0.0], [0.442499995, 19.0, 20.0, 2.0], [0.0749399737, 0.0, 0.0, 0.0], [-0.259499997, 21.0, 22.0, 0.0], [-0.597000003, 23.0, 24.0, 1.0], [-0.00911401119, 0.0, 0.0, 0.0], [-0.080429107, 0.0, 0.0, 0.0], [-0.0207751337, 0.0, 0.0, 0.0], [0.0830244124, 0.0, 0.0, 0.0], [0.414499998, 25.0, 26.0, 2.0], [0.504500031, 27.0, 28.0, 2.0], [0.123718038, 0.0, 0.0, 0.0], [-0.997500002, 29.0, 30.0, 3.0], [-0.690999985, 31.0, 32.0, 1.0], [-0.250499994, 33.0, 34.0, 0.0], [-0.0209010523, 0.0, 0.0, 0.0], [0.0750697628, 0.0, 0.0, 0.0], [-0.116971493, 0.0, 0.0, 0.0], [-0.0211144071, 0.0, 0.0, 0.0], [0.101971857, 0.0, 0.0, 0.0], [-0.0212102458, 0.0, 0.0, 0.0], [-0.000481871277, 0.0, 0.0, 0.0], [-0.108637698, 0.0, 0.0, 0.0], [-0.0501628742, 0.0, 0.0, 0.0], [0.0596315227, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 9, 10, 25, 26, 27, 28, 12, 21, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 8, 4, 2, 5, 11, 19, 20, 6, 13, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_469(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.654500008, 3.0, 4.0, 1.0], [-0.96449995, 5.0, 6.0, 4.0], [-0.960500002, 7.0, 8.0, 4.0], [0.62349999, 9.0, 10.0, 2.0], [-0.98150003, 11.0, 12.0, 4.0], [-0.55400002, 13.0, 14.0, 1.0], [0.436500013, 15.0, 16.0, 2.0], [-0.922500014, 17.0, 18.0, 4.0], [0.0870663077, 0.0, 0.0, 0.0], [-0.0151606509, 0.0, 0.0, 0.0], [-0.0332924537, 0.0, 0.0, 0.0], [-0.25150001, 19.0, 20.0, 0.0], [-0.930500031, 21.0, 22.0, 4.0], [-0.417500019, 23.0, 24.0, 1.0], [-0.0177420992, 0.0, 0.0, 0.0], [-0.122792803, 0.0, 0.0, 0.0], [0.503499985, 25.0, 26.0, 2.0], [-0.060813196, 0.0, 0.0, 0.0], [-0.0424198322, 0.0, 0.0, 0.0], [-0.195499986, 27.0, 28.0, 0.0], [-0.226500005, 29.0, 30.0, 0.0], [-0.992499948, 31.0, 32.0, 3.0], [-0.300500005, 33.0, 34.0, 0.0], [0.0363064893, 0.0, 0.0, 0.0], [0.0884817988, 0.0, 0.0, 0.0], [-0.026375629, 0.0, 0.0, 0.0], [0.122816928, 0.0, 0.0, 0.0], [0.0156368949, 0.0, 0.0, 0.0], [0.0202864036, 0.0, 0.0, 0.0], [-0.0809453204, 0.0, 0.0, 0.0], [-0.0295042116, 0.0, 0.0, 0.0], [0.0756740868, 0.0, 0.0, 0.0], [0.00990416389, 0.0, 0.0, 0.0], [-0.124168523, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 25, 26, 18, 9, 10, 11, 19, 27, 28, 29, 30, 31, 32, 33, 34, 24])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 4, 2, 5, 12, 20, 6, 13, 21, 22, 14, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_470(xs):
    #Predicts Class 2
    function_dict = np.array([[0.436500013, 1.0, 2.0, 2.0], [-0.980499983, 3.0, 4.0, 4.0], [0.483500004, 5.0, 6.0, 2.0], [0.0311962385, 0.0, 0.0, 0.0], [-0.228500009, 7.0, 8.0, 0.0], [0.466499984, 9.0, 10.0, 2.0], [0.529500008, 11.0, 12.0, 2.0], [0.00782627147, 0.0, 0.0, 0.0], [-0.0955233648, 0.0, 0.0, 0.0], [-0.206499994, 13.0, 14.0, 0.0], [0.0973703116, 0.0, 0.0, 0.0], [-0.159999996, 15.0, 16.0, 0.0], [0.557500005, 17.0, 18.0, 2.0], [-0.0393126532, 0.0, 0.0, 0.0], [0.0559690632, 0.0, 0.0, 0.0], [-0.119877823, 0.0, 0.0, 0.0], [0.0367948338, 0.0, 0.0, 0.0], [-0.995499969, 19.0, 20.0, 3.0], [-0.976500034, 21.0, 22.0, 3.0], [0.109384865, 0.0, 0.0, 0.0], [-0.00526041957, 0.0, 0.0, 0.0], [-0.0275249258, 0.0, 0.0, 0.0], [0.0300817844, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 13, 14, 10, 15, 16, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 6, 11, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_471(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.37349999, 3.0, 4.0, 0.0], [-0.20449999, 5.0, 6.0, 0.0], [-0.529500008, 7.0, 8.0, 0.0], [-0.284500003, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.193500012, 13.0, 14.0, 0.0], [0.0464094318, 0.0, 0.0, 0.0], [0.0047596721, 0.0, 0.0, 0.0], [-0.0823622122, 0.0, 0.0, 0.0], [-0.0202161558, 0.0, 0.0, 0.0], [0.0883829892, 0.0, 0.0, 0.0], [-0.250499994, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.190499991, 19.0, 20.0, 0.0], [-0.0641801357, 0.0, 0.0, 0.0], [0.0224708673, 0.0, 0.0, 0.0], [-0.108946279, 0.0, 0.0, 0.0], [-0.0309771206, 0.0, 0.0, 0.0], [0.0745611414, 0.0, 0.0, 0.0], [-0.162499994, 21.0, 22.0, 0.0], [-0.0829401314, 0.0, 0.0, 0.0], [0.00116520072, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 21, 22])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 12, 6, 13, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_472(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00463499967, 1.0, 2.0, 0.0], [-0.0052199997, 3.0, 4.0, 0.0], [-0.00390999997, 5.0, 6.0, 0.0], [-0.0101749999, 7.0, 8.0, 0.0], [-0.174161419, 0.0, 0.0, 0.0], [0.221355811, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.0150499996, 11.0, 12.0, 0.0], [-0.00885999948, 13.0, 14.0, 0.0], [-0.00209000008, 15.0, 16.0, 0.0], [0.0107000005, 17.0, 18.0, 0.0], [-0.0156999994, 19.0, 20.0, 0.0], [-0.267615855, 0.0, 0.0, 0.0], [0.173385754, 0.0, 0.0, 0.0], [-0.03269675, 0.0, 0.0, 0.0], [-0.235959888, 0.0, 0.0, 0.0], [-0.00132499996, 21.0, 22.0, 0.0], [-0.822000027, 23.0, 24.0, 2.0], [0.0694999993, 25.0, 26.0, 0.0], [-0.00461689336, 0.0, 0.0, 0.0], [0.170038939, 0.0, 0.0, 0.0], [0.148947135, 0.0, 0.0, 0.0], [-0.00702513335, 0.0, 0.0, 0.0], [0.291874915, 0.0, 0.0, 0.0], [0.0213865191, 0.0, 0.0, 0.0], [-0.163190857, 0.0, 0.0, 0.0], [0.0535755269, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 15, 21, 22, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_473(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.105113901, 0.0, 0.0, 0.0], [0.0834845603, 0.0, 0.0, 0.0], [-0.0172601361, 0.0, 0.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [0.561499953, 11.0, 12.0, 0.0], [0.528499961, 13.0, 14.0, 0.0], [0.541499972, 15.0, 16.0, 0.0], [0.0983059853, 0.0, 0.0, 0.0], [-0.0119870584, 0.0, 0.0, 0.0], [-0.000529026845, 0.0, 0.0, 0.0], [0.121108666, 0.0, 0.0, 0.0], [-0.106570832, 0.0, 0.0, 0.0], [-0.0193594955, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_474(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.990499973, 1.0, 2.0, 3.0], [-0.881500006, 3.0, 4.0, 4.0], [0.354499996, 5.0, 6.0, 2.0], [-0.922500014, 7.0, 8.0, 4.0], [0.713500023, 9.0, 10.0, 2.0], [-0.0541167744, 0.0, 0.0, 0.0], [0.536499977, 11.0, 12.0, 2.0], [-0.818500042, 13.0, 14.0, 1.0], [-0.199499995, 15.0, 16.0, 0.0], [-0.194000006, 17.0, 18.0, 0.0], [0.0393293947, 0.0, 0.0, 0.0], [-0.752499998, 19.0, 20.0, 1.0], [0.573500037, 21.0, 22.0, 2.0], [0.37650001, 23.0, 24.0, 2.0], [-0.739500046, 25.0, 26.0, 1.0], [0.1199788, 0.0, 0.0, 0.0], [-0.0203365088, 0.0, 0.0, 0.0], [-0.136550412, 0.0, 0.0, 0.0], [0.0160036292, 0.0, 0.0, 0.0], [-0.982499957, 27.0, 28.0, 3.0], [0.484499991, 29.0, 30.0, 2.0], [-0.9745, 31.0, 32.0, 3.0], [-0.644500017, 33.0, 34.0, 1.0], [-0.0064009577, 0.0, 0.0, 0.0], [0.0799103677, 0.0, 0.0, 0.0], [-0.0633879825, 0.0, 0.0, 0.0], [0.00969757233, 0.0, 0.0, 0.0], [0.0225130562, 0.0, 0.0, 0.0], [0.135108739, 0.0, 0.0, 0.0], [-0.0683789849, 0.0, 0.0, 0.0], [0.071326673, 0.0, 0.0, 0.0], [-0.120948583, 0.0, 0.0, 0.0], [-0.0109593952, 0.0, 0.0, 0.0], [0.0827212185, 0.0, 0.0, 0.0], [-0.0187987424, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 16, 17, 18, 10, 5, 27, 28, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 9, 2, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_475(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.33950001, 1.0, 2.0, 1.0], [0.554499984, 3.0, 4.0, 2.0], [-0.0580941625, 0.0, 0.0, 0.0], [0.512500048, 5.0, 6.0, 2.0], [0.576499999, 7.0, 8.0, 2.0], [-0.997500002, 9.0, 10.0, 3.0], [-0.222499996, 11.0, 12.0, 0.0], [-0.734500051, 13.0, 14.0, 1.0], [0.591500044, 15.0, 16.0, 2.0], [-0.963500023, 17.0, 18.0, 4.0], [-0.221500009, 19.0, 20.0, 0.0], [-0.293500006, 21.0, 22.0, 0.0], [0.0199462883, 0.0, 0.0, 0.0], [0.00308685168, 0.0, 0.0, 0.0], [0.114195228, 0.0, 0.0, 0.0], [-0.100038037, 0.0, 0.0, 0.0], [0.60650003, 23.0, 24.0, 2.0], [-0.0775041729, 0.0, 0.0, 0.0], [0.0145995216, 0.0, 0.0, 0.0], [0.0667515919, 0.0, 0.0, 0.0], [-0.0169001762, 0.0, 0.0, 0.0], [0.0164101142, 0.0, 0.0, 0.0], [-0.169926792, 0.0, 0.0, 0.0], [0.0847169086, 0.0, 0.0, 0.0], [-0.00613668188, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 12, 13, 14, 15, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 4, 7, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_476(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.200500011, 3.0, 4.0, 0.0], [-0.0555714481, 0.0, 0.0, 0.0], [-0.736500025, 5.0, 6.0, 4.0], [-0.918500006, 7.0, 8.0, 4.0], [-0.828999996, 9.0, 10.0, 4.0], [0.0621457659, 0.0, 0.0, 0.0], [-0.152500004, 11.0, 12.0, 0.0], [-0.777999997, 13.0, 14.0, 4.0], [-0.217500001, 15.0, 16.0, 0.0], [-0.103795432, 0.0, 0.0, 0.0], [-0.186500013, 17.0, 18.0, 0.0], [-0.0678200349, 0.0, 0.0, 0.0], [-0.643000007, 19.0, 20.0, 1.0], [-0.0354687236, 0.0, 0.0, 0.0], [0.0136546651, 0.0, 0.0, 0.0], [-0.0611039475, 0.0, 0.0, 0.0], [-0.0480948053, 0.0, 0.0, 0.0], [0.0822083354, 0.0, 0.0, 0.0], [0.018591227, 0.0, 0.0, 0.0], [0.12316405, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 17, 18, 12, 19, 20, 14, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 11, 8, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_477(xs):
    #Predicts Class 3
    function_dict = np.array([[0.521499991, 1.0, 2.0, 0.0], [0.489499986, 3.0, 4.0, 0.0], [0.522500038, 5.0, 6.0, 0.0], [0.479499996, 7.0, 8.0, 0.0], [0.506000042, 9.0, 10.0, 0.0], [0.15288493, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.46450001, 13.0, 14.0, 0.0], [0.201975375, 0.0, 0.0, 0.0], [-0.160187095, 0.0, 0.0, 0.0], [-0.00279491581, 0.0, 0.0, 0.0], [0.534000039, 15.0, 16.0, 0.0], [-0.0862230882, 0.0, 0.0, 0.0], [0.446500003, 17.0, 18.0, 0.0], [-0.11624451, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.539999962, 21.0, 22.0, 0.0], [-0.00218718941, 0.0, 0.0, 0.0], [0.130322769, 0.0, 0.0, 0.0], [-0.166687235, 0.0, 0.0, 0.0], [0.0231439676, 0.0, 0.0, 0.0], [0.149464622, 0.0, 0.0, 0.0], [0.0158325378, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 10, 5, 19, 20, 21, 22, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_478(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.000944999978, 1.0, 2.0, 0.0], [-0.00200500013, 3.0, 4.0, 0.0], [0.00171500002, 5.0, 6.0, 0.0], [-0.00322999991, 7.0, 8.0, 0.0], [-0.198472932, 0.0, 0.0, 0.0], [0.000549999997, 9.0, 10.0, 0.0], [0.00325499987, 11.0, 12.0, 0.0], [-0.0382499993, 13.0, 14.0, 0.0], [0.161822036, 0.0, 0.0, 0.0], [0.0139178857, 0.0, 0.0, 0.0], [0.271636456, 0.0, 0.0, 0.0], [0.00202000001, 15.0, 16.0, 0.0], [0.0042849998, 17.0, 18.0, 0.0], [-0.0435499996, 19.0, 20.0, 0.0], [-0.0310500003, 21.0, 22.0, 0.0], [-0.00298933545, 0.0, 0.0, 0.0], [-0.164202377, 0.0, 0.0, 0.0], [0.279209584, 0.0, 0.0, 0.0], [0.00637499988, 23.0, 24.0, 0.0], [-0.00250989152, 0.0, 0.0, 0.0], [0.153514743, 0.0, 0.0, 0.0], [-0.251438648, 0.0, 0.0, 0.0], [-0.0341252126, 0.0, 0.0, 0.0], [-0.113837689, 0.0, 0.0, 0.0], [0.00755622098, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 10, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_479(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.412999988, 1.0, 2.0, 0.0], [-0.4375, 3.0, 4.0, 0.0], [-0.394500017, 5.0, 6.0, 0.0], [-0.552999973, 7.0, 8.0, 0.0], [0.0894448683, 0.0, 0.0, 0.0], [-0.106867902, 0.0, 0.0, 0.0], [-0.382499993, 9.0, 10.0, 0.0], [0.0546381809, 0.0, 0.0, 0.0], [-0.0570669286, 0.0, 0.0, 0.0], [0.104780704, 0.0, 0.0, 0.0], [-0.161500007, 11.0, 12.0, 0.0], [-0.706500053, 13.0, 14.0, 2.0], [-0.0123999994, 15.0, 16.0, 0.0], [-0.0650384575, 0.0, 0.0, 0.0], [0.0561473295, 0.0, 0.0, 0.0], [0.0441247746, 0.0, 0.0, 0.0], [-0.00390144344, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_480(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0455270335, 0.0, 0.0, 0.0], [-0.946500003, 3.0, 4.0, 4.0], [-0.228500009, 5.0, 6.0, 0.0], [-0.211499989, 7.0, 8.0, 0.0], [-0.2465, 9.0, 10.0, 0.0], [-0.184500009, 11.0, 12.0, 0.0], [-0.243499994, 13.0, 14.0, 0.0], [-0.183499992, 15.0, 16.0, 0.0], [-0.2755, 17.0, 18.0, 0.0], [-0.139794648, 0.0, 0.0, 0.0], [-0.207500011, 19.0, 20.0, 0.0], [-0.138500005, 21.0, 22.0, 0.0], [-0.255500019, 23.0, 24.0, 0.0], [0.554499984, 25.0, 26.0, 2.0], [-0.965499997, 27.0, 28.0, 3.0], [-0.134499997, 29.0, 30.0, 0.0], [-0.0740060881, 0.0, 0.0, 0.0], [0.049401924, 0.0, 0.0, 0.0], [0.00191379641, 0.0, 0.0, 0.0], [0.108481623, 0.0, 0.0, 0.0], [-0.0893566608, 0.0, 0.0, 0.0], [0.0352926999, 0.0, 0.0, 0.0], [0.035338752, 0.0, 0.0, 0.0], [-0.0542550646, 0.0, 0.0, 0.0], [0.125388831, 0.0, 0.0, 0.0], [0.0449868701, 0.0, 0.0, 0.0], [-0.110616229, 0.0, 0.0, 0.0], [-0.00515295798, 0.0, 0.0, 0.0], [0.0952987894, 0.0, 0.0, 0.0], [-0.0389168002, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_481(xs):
    #Predicts Class 1
    function_dict = np.array([[0.701499999, 1.0, 2.0, 2.0], [-0.875499964, 3.0, 4.0, 4.0], [-0.467500001, 5.0, 6.0, 1.0], [-0.902500033, 7.0, 8.0, 4.0], [-0.0708993375, 0.0, 0.0, 0.0], [0.0800474733, 0.0, 0.0, 0.0], [-0.0202317331, 0.0, 0.0, 0.0], [-0.946500003, 9.0, 10.0, 4.0], [0.0712540075, 0.0, 0.0, 0.0], [-0.107500002, 11.0, 12.0, 0.0], [-0.994500041, 13.0, 14.0, 3.0], [0.0181309339, 0.0, 0.0, 0.0], [-0.101347834, 0.0, 0.0, 0.0], [-0.0731853098, 0.0, 0.0, 0.0], [-0.00379287638, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_482(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [-0.24849999, 3.0, 4.0, 0.0], [0.0476240106, 0.0, 0.0, 0.0], [-0.533499956, 5.0, 6.0, 1.0], [-0.889500022, 7.0, 8.0, 4.0], [-0.0951207504, 0.0, 0.0, 0.0], [0.687000036, 9.0, 10.0, 2.0], [-0.956499994, 11.0, 12.0, 4.0], [-0.554999948, 13.0, 14.0, 1.0], [0.636000037, 15.0, 16.0, 2.0], [-0.0750895217, 0.0, 0.0, 0.0], [-0.972499967, 17.0, 18.0, 4.0], [-0.893000007, 19.0, 20.0, 3.0], [-0.818499982, 21.0, 22.0, 4.0], [-0.2095, 23.0, 24.0, 0.0], [-0.0103242425, 0.0, 0.0, 0.0], [0.0786393359, 0.0, 0.0, 0.0], [0.0244770609, 0.0, 0.0, 0.0], [-0.0490907431, 0.0, 0.0, 0.0], [0.0674866661, 0.0, 0.0, 0.0], [-0.0457201377, 0.0, 0.0, 0.0], [-0.15910469, 0.0, 0.0, 0.0], [0.00778510282, 0.0, 0.0, 0.0], [-0.0424566306, 0.0, 0.0, 0.0], [0.0642006546, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 15, 16, 10, 17, 18, 19, 20, 21, 22, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 6, 9, 4, 7, 11, 12, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_483(xs):
    #Predicts Class 3
    function_dict = np.array([[0.00185999996, 1.0, 2.0, 0.0], [0.00118499994, 3.0, 4.0, 0.0], [0.00280499994, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [0.189072505, 0.0, 0.0, 0.0], [-0.258339643, 0.0, 0.0, 0.0], [0.00456999987, 9.0, 10.0, 0.0], [-0.885499954, 11.0, 12.0, 2.0], [-0.260500014, 13.0, 14.0, 0.0], [0.129792839, 0.0, 0.0, 0.0], [0.00588999968, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [-0.0701999962, 19.0, 20.0, 0.0], [-0.374500006, 21.0, 22.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [-0.297336042, 0.0, 0.0, 0.0], [0.00768500008, 25.0, 26.0, 0.0], [-0.00360166584, 0.0, 0.0, 0.0], [-0.151803166, 0.0, 0.0, 0.0], [-0.08087679, 0.0, 0.0, 0.0], [0.144190803, 0.0, 0.0, 0.0], [-0.0265899375, 0.0, 0.0, 0.0], [-0.112791836, 0.0, 0.0, 0.0], [0.206918404, 0.0, 0.0, 0.0], [0.027167825, 0.0, 0.0, 0.0], [0.107607238, 0.0, 0.0, 0.0], [-0.00232064538, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 5, 9, 15, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_484(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00185999996, 1.0, 2.0, 0.0], [0.00118499994, 3.0, 4.0, 0.0], [0.00280499994, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [-0.185074821, 0.0, 0.0, 0.0], [0.262489438, 0.0, 0.0, 0.0], [0.00456999987, 9.0, 10.0, 0.0], [-0.000944999978, 11.0, 12.0, 0.0], [-0.260500014, 13.0, 14.0, 0.0], [-0.125589982, 0.0, 0.0, 0.0], [0.00588999968, 15.0, 16.0, 0.0], [-0.00200500013, 17.0, 18.0, 0.0], [-9.49999958e-05, 19.0, 20.0, 0.0], [-0.333499998, 21.0, 22.0, 0.0], [-0.923500001, 23.0, 24.0, 2.0], [0.244451389, 0.0, 0.0, 0.0], [0.00768500008, 25.0, 26.0, 0.0], [0.00320250401, 0.0, 0.0, 0.0], [-0.126237556, 0.0, 0.0, 0.0], [0.118526228, 0.0, 0.0, 0.0], [0.0107913697, 0.0, 0.0, 0.0], [-0.0449281149, 0.0, 0.0, 0.0], [0.0991778001, 0.0, 0.0, 0.0], [-0.164082736, 0.0, 0.0, 0.0], [-0.0220327973, 0.0, 0.0, 0.0], [-0.107078448, 0.0, 0.0, 0.0], [0.00461165374, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 5, 9, 15, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_485(xs):
    #Predicts Class 5
    function_dict = np.array([[0.256500006, 1.0, 2.0, 0.0], [0.228500009, 3.0, 4.0, 0.0], [0.260500014, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [-0.175506726, 0.0, 0.0, 0.0], [0.214481831, 0.0, 0.0, 0.0], [0.272000015, 9.0, 10.0, 0.0], [-0.0123999994, 11.0, 12.0, 0.0], [0.215499997, 13.0, 14.0, 0.0], [0.264499992, 15.0, 16.0, 0.0], [0.276499987, 17.0, 18.0, 0.0], [-0.0154499998, 19.0, 20.0, 0.0], [0.198500007, 21.0, 22.0, 0.0], [0.165530041, 0.0, 0.0, 0.0], [-0.0134800533, 0.0, 0.0, 0.0], [0.00792052224, 0.0, 0.0, 0.0], [-0.185683802, 0.0, 0.0, 0.0], [0.159745574, 0.0, 0.0, 0.0], [0.341000021, 23.0, 24.0, 0.0], [-0.00512254657, 0.0, 0.0, 0.0], [0.184605718, 0.0, 0.0, 0.0], [-0.147918761, 0.0, 0.0, 0.0], [-0.0204113275, 0.0, 0.0, 0.0], [-0.137066364, 0.0, 0.0, 0.0], [0.00933637843, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 4, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_486(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.712499976, 5.0, 6.0, 4.0], [-0.0932501853, 0.0, 0.0, 0.0], [-0.977499962, 7.0, 8.0, 3.0], [-0.199499995, 9.0, 10.0, 0.0], [-0.0439831354, 0.0, 0.0, 0.0], [0.593999982, 11.0, 12.0, 2.0], [-0.0454152338, 0.0, 0.0, 0.0], [-0.906499982, 13.0, 14.0, 4.0], [-0.194499999, 15.0, 16.0, 0.0], [-0.00353951938, 0.0, 0.0, 0.0], [0.0559572913, 0.0, 0.0, 0.0], [-0.656499982, 17.0, 18.0, 1.0], [-0.250499994, 19.0, 20.0, 0.0], [-0.0829951987, 0.0, 0.0, 0.0], [-0.1875, 21.0, 22.0, 0.0], [0.0287594721, 0.0, 0.0, 0.0], [-0.0955435485, 0.0, 0.0, 0.0], [-0.0397782363, 0.0, 0.0, 0.0], [0.117583074, 0.0, 0.0, 0.0], [0.0616570413, 0.0, 0.0, 0.0], [-0.00819524936, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 8, 17, 18, 19, 20, 15, 21, 22, 6])
    branch_indices = np.array([0, 1, 4, 7, 2, 5, 9, 13, 14, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_487(xs):
    #Predicts Class 1
    function_dict = np.array([[0.0696500018, 1.0, 2.0, 0.0], [-0.228500009, 3.0, 4.0, 0.0], [0.054967761, 0.0, 0.0, 0.0], [-0.95449996, 5.0, 6.0, 3.0], [-0.218499988, 7.0, 8.0, 0.0], [-0.973500013, 9.0, 10.0, 4.0], [-0.915500045, 11.0, 12.0, 3.0], [-0.745000005, 13.0, 14.0, 1.0], [-0.213499993, 15.0, 16.0, 0.0], [0.0715085715, 0.0, 0.0, 0.0], [0.46450001, 17.0, 18.0, 2.0], [0.104522176, 0.0, 0.0, 0.0], [0.000832854537, 0.0, 0.0, 0.0], [-0.126020044, 0.0, 0.0, 0.0], [-0.00460186182, 0.0, 0.0, 0.0], [0.0884981677, 0.0, 0.0, 0.0], [-0.9745, 19.0, 20.0, 3.0], [-0.0708166808, 0.0, 0.0, 0.0], [0.00465739053, 0.0, 0.0, 0.0], [0.00756381452, 0.0, 0.0, 0.0], [-0.106307387, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 17, 18, 11, 12, 13, 14, 15, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 4, 7, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_488(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.712499976, 1.0, 2.0, 4.0], [0.787500024, 3.0, 4.0, 2.0], [0.0473821238, 0.0, 0.0, 0.0], [-0.0683000013, 5.0, 6.0, 0.0], [-0.0632465184, 0.0, 0.0, 0.0], [-0.109499998, 7.0, 8.0, 0.0], [-0.0524254516, 0.0, 0.0, 0.0], [-0.149500012, 9.0, 10.0, 0.0], [0.0622959398, 0.0, 0.0, 0.0], [0.00690957019, 0.0, 0.0, 0.0], [-0.0686717555, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 8, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_489(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 1.0], [-0.390500009, 3.0, 4.0, 0.0], [-0.654500008, 5.0, 6.0, 2.0], [0.0939221829, 0.0, 0.0, 0.0], [-0.601000011, 7.0, 8.0, 2.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.125499994, 11.0, 12.0, 0.0], [-0.142500013, 13.0, 14.0, 0.0], [-0.0970753506, 0.0, 0.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.795000017, 17.0, 18.0, 2.0], [-0.0755648762, 0.0, 0.0, 0.0], [0.0934000015, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.137499988, 23.0, 24.0, 0.0], [0.203000009, 25.0, 26.0, 0.0], [-0.0228049997, 27.0, 28.0, 0.0], [-7.37556256e-05, 0.0, 0.0, 0.0], [-0.180386811, 0.0, 0.0, 0.0], [0.106990866, 0.0, 0.0, 0.0], [-0.014909626, 0.0, 0.0, 0.0], [-0.0613068715, 0.0, 0.0, 0.0], [0.0925966054, 0.0, 0.0, 0.0], [0.0624045208, 0.0, 0.0, 0.0], [0.00140985416, 0.0, 0.0, 0.0], [-0.123689666, 0.0, 0.0, 0.0], [-0.0129605234, 0.0, 0.0, 0.0], [0.0300056264, 0.0, 0.0, 0.0], [0.119302727, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 21, 22, 23, 24, 8, 25, 26, 27, 28, 17, 18, 11, 19, 20])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 2, 5, 9, 15, 16, 10, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_490(xs):
    #Predicts Class 4
    function_dict = np.array([[0.111500002, 1.0, 2.0, 0.0], [0.0912000015, 3.0, 4.0, 0.0], [0.152999997, 5.0, 6.0, 0.0], [0.0760499984, 7.0, 8.0, 0.0], [0.0945499986, 9.0, 10.0, 0.0], [-0.201852947, 0.0, 0.0, 0.0], [0.192499995, 11.0, 12.0, 0.0], [0.028549999, 13.0, 14.0, 0.0], [0.0825999975, 15.0, 16.0, 0.0], [0.119541027, 0.0, 0.0, 0.0], [0.00633125706, 0.0, 0.0, 0.0], [0.0697000325, 0.0, 0.0, 0.0], [0.202500001, 17.0, 18.0, 0.0], [0.02685, 19.0, 20.0, 0.0], [0.0300999992, 21.0, 22.0, 0.0], [-0.202754498, 0.0, 0.0, 0.0], [0.0854000002, 23.0, 24.0, 0.0], [0.194499999, 25.0, 26.0, 0.0], [0.0395066626, 0.0, 0.0, 0.0], [0.0017607091, 0.0, 0.0, 0.0], [-0.286519259, 0.0, 0.0, 0.0], [0.287435085, 0.0, 0.0, 0.0], [0.0218384601, 0.0, 0.0, 0.0], [0.132129729, 0.0, 0.0, 0.0], [-0.0504850335, 0.0, 0.0, 0.0], [-0.00340533396, 0.0, 0.0, 0.0], [-0.0577499084, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 23, 24, 9, 10, 5, 11, 25, 26, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 2, 6, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_491(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.885499954, 3.0, 4.0, 2.0], [0.00518500013, 5.0, 6.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.10837546, 0.0, 0.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.344999999, 11.0, 12.0, 0.0], [-0.166500002, 13.0, 14.0, 0.0], [-0.155499995, 15.0, 16.0, 0.0], [-0.360500008, 17.0, 18.0, 0.0], [-0.997500002, 19.0, 20.0, 1.0], [-0.996500015, 21.0, 22.0, 1.0], [0.430999994, 23.0, 24.0, 0.0], [-0.421000004, 25.0, 26.0, 0.0], [0.121956371, 0.0, 0.0, 0.0], [-0.241309777, 0.0, 0.0, 0.0], [-0.0744999945, 27.0, 28.0, 0.0], [-0.452000022, 29.0, 30.0, 0.0], [0.121452361, 0.0, 0.0, 0.0], [-0.147976905, 0.0, 0.0, 0.0], [0.0106820222, 0.0, 0.0, 0.0], [-0.923500001, 31.0, 32.0, 2.0], [-0.0383751094, 0.0, 0.0, 0.0], [0.411500007, 33.0, 34.0, 0.0], [0.527500033, 35.0, 36.0, 0.0], [-0.0781401619, 0.0, 0.0, 0.0], [0.0123929149, 0.0, 0.0, 0.0], [0.0622776598, 0.0, 0.0, 0.0], [-0.012412033, 0.0, 0.0, 0.0], [0.0829732493, 0.0, 0.0, 0.0], [-0.0981505364, 0.0, 0.0, 0.0], [0.182840362, 0.0, 0.0, 0.0], [-0.0427008905, 0.0, 0.0, 0.0], [-0.0230216347, 0.0, 0.0, 0.0], [-0.128043205, 0.0, 0.0, 0.0], [0.099890694, 0.0, 0.0, 0.0], [-0.03275593, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 14, 15, 27, 28, 4, 29, 30, 18, 19, 20, 31, 32, 22, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 17, 10, 6, 11, 21, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_492(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0392201804, 0.0, 0.0, 0.0], [-0.975499988, 3.0, 4.0, 4.0], [0.0677828789, 0.0, 0.0, 0.0], [-0.996500015, 5.0, 6.0, 3.0], [0.555999994, 7.0, 8.0, 2.0], [0.555500031, 9.0, 10.0, 2.0], [0.434000015, 11.0, 12.0, 2.0], [0.622500002, 13.0, 14.0, 2.0], [0.354499996, 15.0, 16.0, 2.0], [-0.940500021, 17.0, 18.0, 4.0], [-0.0030319225, 0.0, 0.0, 0.0], [-0.0714737475, 0.0, 0.0, 0.0], [0.109506525, 0.0, 0.0, 0.0], [-0.0534949042, 0.0, 0.0, 0.0], [-0.0518191494, 0.0, 0.0, 0.0], [0.0447558649, 0.0, 0.0, 0.0], [-0.0882689357, 0.0, 0.0, 0.0], [0.0154277319, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 11, 12, 13, 14, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 4, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_493(xs):
    #Predicts Class 1
    function_dict = np.array([[0.455500007, 1.0, 2.0, 2.0], [-0.980499983, 3.0, 4.0, 3.0], [-0.210500002, 5.0, 6.0, 0.0], [-0.988499999, 7.0, 8.0, 3.0], [-0.945500016, 9.0, 10.0, 3.0], [-0.217500001, 11.0, 12.0, 0.0], [-0.191500008, 13.0, 14.0, 0.0], [-0.821500003, 15.0, 16.0, 1.0], [-0.0878747925, 0.0, 0.0, 0.0], [0.115197428, 0.0, 0.0, 0.0], [-0.0147494758, 0.0, 0.0, 0.0], [-0.969500005, 17.0, 18.0, 4.0], [0.084145166, 0.0, 0.0, 0.0], [-0.657000005, 19.0, 20.0, 1.0], [-0.958500028, 21.0, 22.0, 4.0], [-0.0513749868, 0.0, 0.0, 0.0], [-0.180500001, 23.0, 24.0, 0.0], [0.075474754, 0.0, 0.0, 0.0], [0.493499994, 25.0, 26.0, 2.0], [-0.171707287, 0.0, 0.0, 0.0], [0.0193588436, 0.0, 0.0, 0.0], [0.0659834817, 0.0, 0.0, 0.0], [-0.0331528708, 0.0, 0.0, 0.0], [0.06698706, 0.0, 0.0, 0.0], [-0.0372634418, 0.0, 0.0, 0.0], [-0.156964511, 0.0, 0.0, 0.0], [0.00367459049, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 23, 24, 8, 9, 10, 17, 25, 26, 12, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 16, 4, 2, 5, 11, 18, 6, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_494(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [0.655499995, 3.0, 4.0, 2.0], [-0.962499976, 5.0, 6.0, 3.0], [0.60650003, 7.0, 8.0, 2.0], [-0.095684424, 0.0, 0.0, 0.0], [-0.976500034, 9.0, 10.0, 3.0], [-0.794499993, 11.0, 12.0, 4.0], [0.557500005, 13.0, 14.0, 2.0], [0.0896678343, 0.0, 0.0, 0.0], [-0.590999961, 15.0, 16.0, 1.0], [0.099525854, 0.0, 0.0, 0.0], [-0.872500002, 17.0, 18.0, 4.0], [0.0367475301, 0.0, 0.0, 0.0], [0.476500005, 19.0, 20.0, 2.0], [-0.0877007246, 0.0, 0.0, 0.0], [0.104911365, 0.0, 0.0, 0.0], [0.58950001, 21.0, 22.0, 2.0], [0.0162009224, 0.0, 0.0, 0.0], [-0.147310197, 0.0, 0.0, 0.0], [-0.034224052, 0.0, 0.0, 0.0], [0.0516061336, 0.0, 0.0, 0.0], [0.0639254972, 0.0, 0.0, 0.0], [-0.0437974334, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 15, 21, 22, 10, 17, 18, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 16, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_495(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.283500016, 1.0, 2.0, 0.0], [-0.284500003, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [0.0953367576, 0.0, 0.0, 0.0], [-0.273499995, 9.0, 10.0, 0.0], [-0.20449999, 11.0, 12.0, 0.0], [-0.374500006, 13.0, 14.0, 0.0], [-0.0430630147, 0.0, 0.0, 0.0], [-0.000180192685, 0.0, 0.0, 0.0], [-0.770500004, 15.0, 16.0, 2.0], [0.0758327469, 0.0, 0.0, 0.0], [-0.191500008, 17.0, 18.0, 0.0], [-0.0342072062, 0.0, 0.0, 0.0], [0.0483273491, 0.0, 0.0, 0.0], [-0.145786434, 0.0, 0.0, 0.0], [-0.0154710198, 0.0, 0.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.185499996, 21.0, 22.0, 0.0], [-0.181769744, 0.0, 0.0, 0.0], [0.101780698, 0.0, 0.0, 0.0], [0.131162494, 0.0, 0.0, 0.0], [-0.00195702096, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 9, 15, 16, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 10, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_496(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.282499999, 1.0, 2.0, 0.0], [-0.297500014, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [-0.292500019, 9.0, 10.0, 0.0], [-0.273499995, 11.0, 12.0, 0.0], [-0.20449999, 13.0, 14.0, 0.0], [-0.408500016, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.141642615, 0.0, 0.0, 0.0], [-0.0404230878, 0.0, 0.0, 0.0], [0.00172020867, 0.0, 0.0, 0.0], [-0.770500004, 19.0, 20.0, 2.0], [-0.0788860768, 0.0, 0.0, 0.0], [-0.1505, 21.0, 22.0, 0.0], [-0.130762994, 0.0, 0.0, 0.0], [-0.38349998, 23.0, 24.0, 0.0], [0.131530255, 0.0, 0.0, 0.0], [0.0184211694, 0.0, 0.0, 0.0], [0.177870154, 0.0, 0.0, 0.0], [0.00687501533, 0.0, 0.0, 0.0], [-0.153499991, 25.0, 26.0, 0.0], [-0.144499987, 27.0, 28.0, 0.0], [0.0687923655, 0.0, 0.0, 0.0], [-0.0572817214, 0.0, 0.0, 0.0], [0.00427606469, 0.0, 0.0, 0.0], [0.276626378, 0.0, 0.0, 0.0], [-0.112568535, 0.0, 0.0, 0.0], [0.00143504189, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 23, 24, 17, 18, 9, 10, 11, 19, 20, 13, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 4, 2, 5, 12, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_497(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.212500006, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [0.201499999, 7.0, 8.0, 0.0], [0.253499985, 9.0, 10.0, 0.0], [0.141712457, 0.0, 0.0, 0.0], [0.363499999, 11.0, 12.0, 0.0], [-0.0123999994, 13.0, 14.0, 0.0], [0.0792134777, 0.0, 0.0, 0.0], [0.223000005, 15.0, 16.0, 0.0], [0.259499997, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.394500017, 21.0, 22.0, 0.0], [-0.0150499996, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [-0.0493180305, 0.0, 0.0, 0.0], [-0.176069945, 0.0, 0.0, 0.0], [0.102581382, 0.0, 0.0, 0.0], [-0.107964128, 0.0, 0.0, 0.0], [-0.147806749, 0.0, 0.0, 0.0], [0.00792765059, 0.0, 0.0, 0.0], [0.112363547, 0.0, 0.0, 0.0], [0.404500008, 27.0, 28.0, 0.0], [-0.0100615369, 0.0, 0.0, 0.0], [0.165645391, 0.0, 0.0, 0.0], [-0.218640462, 0.0, 0.0, 0.0], [0.00977311376, 0.0, 0.0, 0.0], [-0.119373135, 0.0, 0.0, 0.0], [0.00953174941, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 15, 16, 17, 18, 5, 19, 20, 21, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 10, 2, 6, 11, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_498(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 4.0], [0.497500002, 5.0, 6.0, 2.0], [0.455500007, 7.0, 8.0, 2.0], [-0.0371614844, 0.0, 0.0, 0.0], [-0.925500035, 9.0, 10.0, 4.0], [-0.997500002, 11.0, 12.0, 3.0], [-0.237500012, 13.0, 14.0, 0.0], [-0.818500042, 15.0, 16.0, 1.0], [0.428499997, 17.0, 18.0, 2.0], [0.0300551746, 0.0, 0.0, 0.0], [-0.711500049, 19.0, 20.0, 1.0], [-0.583500028, 21.0, 22.0, 1.0], [0.0608682707, 0.0, 0.0, 0.0], [-0.965499997, 23.0, 24.0, 4.0], [0.00866969768, 0.0, 0.0, 0.0], [0.117687456, 0.0, 0.0, 0.0], [0.00455988664, 0.0, 0.0, 0.0], [-0.713500023, 25.0, 26.0, 1.0], [0.109523058, 0.0, 0.0, 0.0], [-0.200500011, 27.0, 28.0, 0.0], [-0.620499969, 29.0, 30.0, 1.0], [0.720499992, 31.0, 32.0, 2.0], [0.0255386177, 0.0, 0.0, 0.0], [-0.0785534307, 0.0, 0.0, 0.0], [-0.133700922, 0.0, 0.0, 0.0], [-0.0130727626, 0.0, 0.0, 0.0], [-0.050480146, 0.0, 0.0, 0.0], [0.0575149506, 0.0, 0.0, 0.0], [-0.0146994181, 0.0, 0.0, 0.0], [0.0848606899, 0.0, 0.0, 0.0], [-0.0939016342, 0.0, 0.0, 0.0], [0.0151016572, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 23, 24, 15, 16, 4, 17, 25, 26, 10, 19, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 2, 5, 9, 18, 6, 11, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_499(xs):
    #Predicts Class 1
    function_dict = np.array([[0.635499954, 1.0, 2.0, 2.0], [-0.932500005, 3.0, 4.0, 4.0], [0.67750001, 5.0, 6.0, 2.0], [-0.107500002, 7.0, 8.0, 0.0], [0.4375, 9.0, 10.0, 2.0], [-0.938500047, 11.0, 12.0, 4.0], [-0.2465, 13.0, 14.0, 0.0], [-0.178499997, 15.0, 16.0, 0.0], [-0.0894550607, 0.0, 0.0, 0.0], [-0.0250119865, 0.0, 0.0, 0.0], [-0.200500011, 17.0, 18.0, 0.0], [0.00735699665, 0.0, 0.0, 0.0], [-0.10548985, 0.0, 0.0, 0.0], [-0.301499993, 19.0, 20.0, 0.0], [-0.0484011471, 0.0, 0.0, 0.0], [-0.716500044, 21.0, 22.0, 1.0], [0.0787490159, 0.0, 0.0, 0.0], [-0.985000014, 23.0, 24.0, 3.0], [-0.00569430878, 0.0, 0.0, 0.0], [-0.0153993983, 0.0, 0.0, 0.0], [0.0933436528, 0.0, 0.0, 0.0], [-0.0475439429, 0.0, 0.0, 0.0], [0.0353287123, 0.0, 0.0, 0.0], [0.116394006, 0.0, 0.0, 0.0], [0.0120376758, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 8, 9, 23, 24, 18, 11, 12, 19, 20, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 10, 17, 2, 5, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_500(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.999500036, 3.0, 4.0, 3.0], [-0.233500004, 5.0, 6.0, 0.0], [-0.0656380355, 0.0, 0.0, 0.0], [-0.979499996, 7.0, 8.0, 3.0], [-0.318499982, 9.0, 10.0, 0.0], [-0.191500008, 11.0, 12.0, 0.0], [-0.179500014, 13.0, 14.0, 0.0], [-0.203500003, 15.0, 16.0, 0.0], [0.0561111681, 0.0, 0.0, 0.0], [-0.983500004, 17.0, 18.0, 3.0], [0.106355429, 0.0, 0.0, 0.0], [0.00661962852, 0.0, 0.0, 0.0], [-0.862499952, 19.0, 20.0, 4.0], [-0.134499997, 21.0, 22.0, 0.0], [-0.63349998, 23.0, 24.0, 1.0], [-0.16049999, 25.0, 26.0, 0.0], [-0.114342518, 0.0, 0.0, 0.0], [-0.407499999, 27.0, 28.0, 1.0], [0.0137269106, 0.0, 0.0, 0.0], [0.11422991, 0.0, 0.0, 0.0], [-0.100245953, 0.0, 0.0, 0.0], [0.0103132082, 0.0, 0.0, 0.0], [-0.0243095327, 0.0, 0.0, 0.0], [-0.115911104, 0.0, 0.0, 0.0], [0.0548702441, 0.0, 0.0, 0.0], [-0.0216158982, 0.0, 0.0, 0.0], [0.0766476169, 0.0, 0.0, 0.0], [-0.0234197732, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 19, 20, 21, 22, 23, 24, 25, 26, 9, 17, 27, 28, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 8, 15, 16, 2, 5, 10, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_501(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.127499998, 1.0, 2.0, 0.0], [-0.129500002, 3.0, 4.0, 0.0], [-0.125499994, 5.0, 6.0, 0.0], [-0.130499989, 7.0, 8.0, 0.0], [-0.236645684, 0.0, 0.0, 0.0], [-0.12650001, 9.0, 10.0, 0.0], [-0.120499998, 11.0, 12.0, 0.0], [-0.131500006, 13.0, 14.0, 0.0], [0.127612248, 0.0, 0.0, 0.0], [0.0170694627, 0.0, 0.0, 0.0], [0.220047355, 0.0, 0.0, 0.0], [-0.183381513, 0.0, 0.0, 0.0], [-0.119499996, 15.0, 16.0, 0.0], [-0.135500014, 17.0, 18.0, 0.0], [-0.111286677, 0.0, 0.0, 0.0], [0.124033242, 0.0, 0.0, 0.0], [-0.111500002, 19.0, 20.0, 0.0], [-0.0152464053, 0.0, 0.0, 0.0], [0.0412363634, 0.0, 0.0, 0.0], [-0.0514780134, 0.0, 0.0, 0.0], [0.0039638239, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_502(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0914499983, 3.0, 4.0, 0.0], [-0.0793000013, 5.0, 6.0, 0.0], [-0.0998999998, 7.0, 8.0, 0.0], [0.174840137, 0.0, 0.0, 0.0], [-0.0811500028, 9.0, 10.0, 0.0], [-0.0771999955, 11.0, 12.0, 0.0], [-0.102499999, 13.0, 14.0, 0.0], [-0.0965999961, 15.0, 16.0, 0.0], [-0.0496913493, 0.0, 0.0, 0.0], [-0.309186637, 0.0, 0.0, 0.0], [0.263366491, 0.0, 0.0, 0.0], [-0.0742499977, 17.0, 18.0, 0.0], [-0.104499996, 19.0, 20.0, 0.0], [0.11773856, 0.0, 0.0, 0.0], [-0.207247913, 0.0, 0.0, 0.0], [-0.0938000008, 21.0, 22.0, 0.0], [-0.322095931, 0.0, 0.0, 0.0], [-0.0728500038, 23.0, 24.0, 0.0], [0.00783608854, 0.0, 0.0, 0.0], [-0.148575962, 0.0, 0.0, 0.0], [0.187815681, 0.0, 0.0, 0.0], [-0.17055887, 0.0, 0.0, 0.0], [0.260652244, 0.0, 0.0, 0.0], [-0.00281718071, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 21, 22, 4, 9, 10, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_503(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.393000007, 1.0, 2.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [-0.296499997, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [0.12453635, 0.0, 0.0, 0.0], [-0.382499993, 9.0, 10.0, 0.0], [-0.99849999, 11.0, 12.0, 1.0], [-0.46450001, 13.0, 14.0, 0.0], [-0.078122288, 0.0, 0.0, 0.0], [-0.0151034519, 0.0, 0.0, 0.0], [-0.0962309837, 0.0, 0.0, 0.0], [0.256500006, 15.0, 16.0, 0.0], [-0.99150002, 17.0, 18.0, 1.0], [0.0544953942, 0.0, 0.0, 0.0], [0.00332426117, 0.0, 0.0, 0.0], [0.223000005, 19.0, 20.0, 0.0], [0.260500014, 21.0, 22.0, 0.0], [0.475499988, 23.0, 24.0, 0.0], [-0.0381662324, 0.0, 0.0, 0.0], [-0.0129708061, 0.0, 0.0, 0.0], [-0.156201109, 0.0, 0.0, 0.0], [0.188169435, 0.0, 0.0, 0.0], [-0.00627976283, 0.0, 0.0, 0.0], [0.111150831, 0.0, 0.0, 0.0], [-0.0443664566, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 9, 10, 19, 20, 21, 22, 23, 24, 18])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 6, 11, 15, 16, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_504(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.968500018, 3.0, 4.0, 4.0], [0.442499995, 5.0, 6.0, 2.0], [-0.193500012, 7.0, 8.0, 0.0], [-0.199499995, 9.0, 10.0, 0.0], [0.0574130043, 0.0, 0.0, 0.0], [0.456499994, 11.0, 12.0, 2.0], [-0.0968304053, 0.0, 0.0, 0.0], [-0.0101492964, 0.0, 0.0, 0.0], [0.0498981848, 0.0, 0.0, 0.0], [-0.0487266406, 0.0, 0.0, 0.0], [-0.0459773317, 0.0, 0.0, 0.0], [-0.793500006, 13.0, 14.0, 1.0], [-0.941499949, 15.0, 16.0, 4.0], [-0.101500005, 17.0, 18.0, 0.0], [0.0855489969, 0.0, 0.0, 0.0], [-0.00845684297, 0.0, 0.0, 0.0], [0.00676914398, 0.0, 0.0, 0.0], [-0.058431074, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 5, 11, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 4, 2, 6, 12, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_505(xs):
    #Predicts Class 1
    function_dict = np.array([[0.0696500018, 1.0, 2.0, 0.0], [-0.132499993, 3.0, 4.0, 0.0], [0.0601778179, 0.0, 0.0, 0.0], [0.570500016, 5.0, 6.0, 2.0], [-0.0839278176, 0.0, 0.0, 0.0], [-0.973500013, 7.0, 8.0, 4.0], [-0.236499995, 9.0, 10.0, 0.0], [-0.82249999, 11.0, 12.0, 1.0], [0.554499984, 13.0, 14.0, 2.0], [-0.296499997, 15.0, 16.0, 0.0], [-0.528499961, 17.0, 18.0, 1.0], [-0.0310978368, 0.0, 0.0, 0.0], [0.0865583047, 0.0, 0.0, 0.0], [-0.0109197274, 0.0, 0.0, 0.0], [0.0653405488, 0.0, 0.0, 0.0], [-0.0253708232, 0.0, 0.0, 0.0], [0.0424991995, 0.0, 0.0, 0.0], [-0.133598953, 0.0, 0.0, 0.0], [0.0360529087, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_506(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.651499987, 1.0, 2.0, 1.0], [-0.108500004, 3.0, 4.0, 0.0], [-0.138500005, 5.0, 6.0, 0.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.0828104615, 0.0, 0.0, 0.0], [-0.191500008, 9.0, 10.0, 0.0], [-0.987499952, 11.0, 12.0, 3.0], [-0.997500002, 13.0, 14.0, 3.0], [-0.715499997, 15.0, 16.0, 1.0], [-0.240500003, 17.0, 18.0, 0.0], [-0.158500001, 19.0, 20.0, 0.0], [0.111946464, 0.0, 0.0, 0.0], [0.00662856083, 0.0, 0.0, 0.0], [0.531499982, 21.0, 22.0, 2.0], [-0.9745, 23.0, 24.0, 4.0], [-0.0235244595, 0.0, 0.0, 0.0], [0.119194336, 0.0, 0.0, 0.0], [-0.551499963, 25.0, 26.0, 1.0], [0.684499979, 27.0, 28.0, 2.0], [-0.0632390156, 0.0, 0.0, 0.0], [-0.014574863, 0.0, 0.0, 0.0], [-0.0404192545, 0.0, 0.0, 0.0], [0.108197205, 0.0, 0.0, 0.0], [0.0271766856, 0.0, 0.0, 0.0], [-0.0931128412, 0.0, 0.0, 0.0], [-0.108664766, 0.0, 0.0, 0.0], [0.0200747382, 0.0, 0.0, 0.0], [-0.00143213279, 0.0, 0.0, 0.0], [0.115199424, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 4, 25, 26, 27, 28, 19, 20, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 9, 17, 18, 10, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_507(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.0656000003, 3.0, 4.0, 0.0], [-0.0667591095, 0.0, 0.0, 0.0], [-0.0728500038, 5.0, 6.0, 0.0], [-0.0601500012, 7.0, 8.0, 0.0], [-0.0743499994, 9.0, 10.0, 0.0], [-0.0720499977, 11.0, 12.0, 0.0], [-0.309674144, 0.0, 0.0, 0.0], [-0.0579499975, 13.0, 14.0, 0.0], [-0.076700002, 15.0, 16.0, 0.0], [-0.242122442, 0.0, 0.0, 0.0], [0.395917207, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.367685795, 0.0, 0.0, 0.0], [-0.0568500012, 19.0, 20.0, 0.0], [-0.00167938997, 0.0, 0.0, 0.0], [0.231608704, 0.0, 0.0, 0.0], [-0.24406375, 0.0, 0.0, 0.0], [0.207480863, 0.0, 0.0, 0.0], [-0.359249324, 0.0, 0.0, 0.0], [0.000928076275, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 11, 17, 18, 7, 13, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 12, 4, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_508(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0720499977, 1.0, 2.0, 0.0], [-0.0728500038, 3.0, 4.0, 0.0], [-0.0603, 5.0, 6.0, 0.0], [-0.0742499977, 7.0, 8.0, 0.0], [-0.393135905, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.0579499975, 11.0, 12.0, 0.0], [-0.0771999955, 13.0, 14.0, 0.0], [0.231392696, 0.0, 0.0, 0.0], [0.346780658, 0.0, 0.0, 0.0], [-0.128865778, 0.0, 0.0, 0.0], [-0.364091784, 0.0, 0.0, 0.0], [-0.0568500012, 15.0, 16.0, 0.0], [-0.0793000013, 17.0, 18.0, 0.0], [-0.280764282, 0.0, 0.0, 0.0], [0.363836676, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.00380775891, 0.0, 0.0, 0.0], [0.230904385, 0.0, 0.0, 0.0], [-0.0185429845, 0.0, 0.0, 0.0], [0.0796478465, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_509(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.489499986, 7.0, 8.0, 0.0], [0.5255, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.138574645, 0.0, 0.0, 0.0], [0.479499996, 13.0, 14.0, 0.0], [0.506000042, 15.0, 16.0, 0.0], [-0.0411863737, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.0836700425, 0.0, 0.0, 0.0], [0.549999952, 19.0, 20.0, 0.0], [0.46450001, 21.0, 22.0, 0.0], [-0.166579843, 0.0, 0.0, 0.0], [0.115555674, 0.0, 0.0, 0.0], [0.00486663543, 0.0, 0.0, 0.0], [-0.035084419, 0.0, 0.0, 0.0], [-0.121784747, 0.0, 0.0, 0.0], [-0.107553288, 0.0, 0.0, 0.0], [0.561499953, 23.0, 24.0, 0.0], [-0.00304388884, 0.0, 0.0, 0.0], [0.0865397453, 0.0, 0.0, 0.0], [0.0703491494, 0.0, 0.0, 0.0], [-0.0279070511, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 9, 17, 18, 11, 19, 23, 24, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 2, 5, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_510(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [0.398499995, 3.0, 4.0, 2.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.0755744129, 0.0, 0.0, 0.0], [-0.328500003, 9.0, 10.0, 0.0], [-0.24149999, 11.0, 12.0, 0.0], [-0.0489535555, 0.0, 0.0, 0.0], [-0.8125, 13.0, 14.0, 1.0], [0.64199996, 15.0, 16.0, 2.0], [-0.0733182952, 0.0, 0.0, 0.0], [-0.250499994, 17.0, 18.0, 0.0], [-0.234499991, 19.0, 20.0, 0.0], [0.0533637665, 0.0, 0.0, 0.0], [0.0013632637, 0.0, 0.0, 0.0], [0.0423195623, 0.0, 0.0, 0.0], [-0.0309200492, 0.0, 0.0, 0.0], [-0.813499987, 21.0, 22.0, 4.0], [0.104146175, 0.0, 0.0, 0.0], [-0.0764334425, 0.0, 0.0, 0.0], [0.484499991, 23.0, 24.0, 2.0], [0.0445932783, 0.0, 0.0, 0.0], [-0.0673533976, 0.0, 0.0, 0.0], [-0.0255892072, 0.0, 0.0, 0.0], [0.021463152, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 4, 15, 16, 10, 21, 22, 18, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 8, 2, 5, 9, 6, 11, 17, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_511(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.341499984, 1.0, 2.0, 0.0], [0.620999992, 3.0, 4.0, 2.0], [-0.855499983, 5.0, 6.0, 4.0], [-0.0201574452, 0.0, 0.0, 0.0], [0.0784621462, 0.0, 0.0, 0.0], [-0.331499994, 7.0, 8.0, 0.0], [-0.0672333241, 0.0, 0.0, 0.0], [-0.0653045401, 0.0, 0.0, 0.0], [-0.2755, 9.0, 10.0, 0.0], [-0.953500032, 11.0, 12.0, 4.0], [-0.256500006, 13.0, 14.0, 0.0], [-0.0567274168, 0.0, 0.0, 0.0], [0.0959926844, 0.0, 0.0, 0.0], [-0.0742785558, 0.0, 0.0, 0.0], [0.00300725969, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 11, 12, 13, 14, 6])
    branch_indices = np.array([0, 1, 2, 5, 8, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_512(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [-0.936499953, 3.0, 4.0, 4.0], [0.0526646338, 0.0, 0.0, 0.0], [-0.300500005, 5.0, 6.0, 0.0], [-0.413500011, 7.0, 8.0, 1.0], [-0.0574687608, 0.0, 0.0, 0.0], [-0.218499988, 9.0, 10.0, 0.0], [-0.526499987, 11.0, 12.0, 1.0], [0.0416090451, 0.0, 0.0, 0.0], [-0.973500013, 13.0, 14.0, 4.0], [0.442499995, 15.0, 16.0, 2.0], [-0.55250001, 17.0, 18.0, 1.0], [-0.216499999, 19.0, 20.0, 0.0], [-0.0472323224, 0.0, 0.0, 0.0], [0.0920629874, 0.0, 0.0, 0.0], [-0.0668600574, 0.0, 0.0, 0.0], [0.0216581952, 0.0, 0.0, 0.0], [-0.0357661024, 0.0, 0.0, 0.0], [0.101584479, 0.0, 0.0, 0.0], [-0.107431628, 0.0, 0.0, 0.0], [-0.00163278333, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 13, 14, 15, 16, 17, 18, 19, 20, 8, 2])
    branch_indices = np.array([0, 1, 3, 6, 9, 10, 4, 7, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_513(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0496499985, 1.0, 2.0, 0.0], [-0.0569499992, 3.0, 4.0, 0.0], [-0.0460999981, 5.0, 6.0, 0.0], [-0.0581500009, 7.0, 8.0, 0.0], [-0.923500001, 9.0, 10.0, 2.0], [-0.220457882, 0.0, 0.0, 0.0], [-0.0435499996, 11.0, 12.0, 0.0], [-0.066399999, 13.0, 14.0, 0.0], [-0.234235376, 0.0, 0.0, 0.0], [0.362037271, 0.0, 0.0, 0.0], [-0.218533248, 0.0, 0.0, 0.0], [0.217054397, 0.0, 0.0, 0.0], [-0.0307, 15.0, 16.0, 0.0], [-0.0720499977, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.972000003, 21.0, 22.0, 2.0], [-0.0297999997, 23.0, 24.0, 0.0], [0.00414487673, 0.0, 0.0, 0.0], [-0.176036328, 0.0, 0.0, 0.0], [-0.0417497493, 0.0, 0.0, 0.0], [0.261948556, 0.0, 0.0, 0.0], [0.0103798117, 0.0, 0.0, 0.0], [-0.346768022, 0.0, 0.0, 0.0], [0.295269072, 0.0, 0.0, 0.0], [-0.00247965753, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_514(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.770500004, 3.0, 4.0, 2.0], [0.0577500015, 5.0, 6.0, 0.0], [-0.795000017, 7.0, 8.0, 2.0], [-0.0685499981, 9.0, 10.0, 0.0], [-0.41049999, 11.0, 12.0, 0.0], [0.0514877103, 0.0, 0.0, 0.0], [-0.885499954, 13.0, 14.0, 2.0], [-0.108823158, 0.0, 0.0, 0.0], [0.168903247, 0.0, 0.0, 0.0], [-0.0168149993, 15.0, 16.0, 0.0], [0.0391231552, 0.0, 0.0, 0.0], [-0.333499998, 17.0, 18.0, 0.0], [-0.401000023, 19.0, 20.0, 0.0], [0.0683500022, 21.0, 22.0, 0.0], [-0.0622740835, 0.0, 0.0, 0.0], [0.0608876199, 0.0, 0.0, 0.0], [-0.156717479, 0.0, 0.0, 0.0], [-0.260500014, 23.0, 24.0, 0.0], [-0.08435563, 0.0, 0.0, 0.0], [0.00133807946, 0.0, 0.0, 0.0], [0.012769646, 0.0, 0.0, 0.0], [0.195684776, 0.0, 0.0, 0.0], [0.0725545213, 0.0, 0.0, 0.0], [-0.0611862354, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 15, 16, 11, 17, 23, 24, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 2, 5, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_515(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.851999998, 3.0, 4.0, 2.0], [0.538500011, 5.0, 6.0, 0.0], [0.615499973, 7.0, 8.0, 0.0], [-0.100949042, 0.0, 0.0, 0.0], [0.5255, 9.0, 10.0, 0.0], [0.101617269, 0.0, 0.0, 0.0], [0.5625, 11.0, 12.0, 0.0], [0.621500015, 13.0, 14.0, 0.0], [0.43599999, 15.0, 16.0, 0.0], [-0.0925891325, 0.0, 0.0, 0.0], [0.446500003, 17.0, 18.0, 0.0], [0.107712328, 0.0, 0.0, 0.0], [-0.11795029, 0.0, 0.0, 0.0], [0.0285296384, 0.0, 0.0, 0.0], [0.428499997, 19.0, 20.0, 0.0], [0.135818273, 0.0, 0.0, 0.0], [0.00744582573, 0.0, 0.0, 0.0], [-0.0334765203, 0.0, 0.0, 0.0], [0.0270009991, 0.0, 0.0, 0.0], [-0.0977041349, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 19, 20, 16, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 5, 9, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_516(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0442794152, 0.0, 0.0, 0.0], [-0.997500002, 3.0, 4.0, 3.0], [0.622500002, 5.0, 6.0, 2.0], [-0.996500015, 7.0, 8.0, 3.0], [0.466499984, 9.0, 10.0, 2.0], [-0.0327876545, 0.0, 0.0, 0.0], [-0.0716585144, 0.0, 0.0, 0.0], [-0.9745, 11.0, 12.0, 4.0], [0.00109590392, 0.0, 0.0, 0.0], [-0.199000001, 13.0, 14.0, 0.0], [-0.0568201505, 0.0, 0.0, 0.0], [-0.752499998, 15.0, 16.0, 1.0], [0.114867948, 0.0, 0.0, 0.0], [0.0231881272, 0.0, 0.0, 0.0], [0.0411723256, 0.0, 0.0, 0.0], [-0.0101950541, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 13, 14, 6, 7, 11, 15, 16])
    branch_indices = np.array([0, 2, 3, 5, 10, 4, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_517(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.912500024, 1.0, 2.0, 4.0], [-0.6875, 3.0, 4.0, 1.0], [-0.688500047, 5.0, 6.0, 1.0], [-0.978500009, 7.0, 8.0, 3.0], [-0.388999999, 9.0, 10.0, 1.0], [-0.861999989, 11.0, 12.0, 4.0], [-0.434000015, 13.0, 14.0, 1.0], [-0.736500025, 15.0, 16.0, 1.0], [0.503499985, 17.0, 18.0, 2.0], [-0.186500013, 19.0, 20.0, 0.0], [-0.0400414579, 0.0, 0.0, 0.0], [-0.0119938739, 0.0, 0.0, 0.0], [0.0552106947, 0.0, 0.0, 0.0], [-0.0903597251, 0.0, 0.0, 0.0], [0.00514807459, 0.0, 0.0, 0.0], [-0.767500043, 21.0, 22.0, 1.0], [-0.223500013, 23.0, 24.0, 0.0], [-0.222499996, 25.0, 26.0, 0.0], [-0.0295038465, 0.0, 0.0, 0.0], [-0.938500047, 27.0, 28.0, 4.0], [-0.0503439792, 0.0, 0.0, 0.0], [-0.0297471676, 0.0, 0.0, 0.0], [0.0672407523, 0.0, 0.0, 0.0], [-0.123029701, 0.0, 0.0, 0.0], [-0.0221608896, 0.0, 0.0, 0.0], [0.108119503, 0.0, 0.0, 0.0], [-0.00233839615, 0.0, 0.0, 0.0], [0.0349429846, 0.0, 0.0, 0.0], [0.101990953, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 18, 27, 28, 20, 10, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 19, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_518(xs):
    #Predicts Class 2
    function_dict = np.array([[0.772500038, 1.0, 2.0, 2.0], [-0.767500043, 3.0, 4.0, 4.0], [-0.50999999, 5.0, 6.0, 1.0], [0.723500013, 7.0, 8.0, 2.0], [-0.0572078228, 0.0, 0.0, 0.0], [-0.00507468497, 0.0, 0.0, 0.0], [0.0708850771, 0.0, 0.0, 0.0], [0.693500042, 9.0, 10.0, 2.0], [-0.0528302342, 0.0, 0.0, 0.0], [0.673500001, 11.0, 12.0, 2.0], [0.0685115829, 0.0, 0.0, 0.0], [0.0101166535, 0.0, 0.0, 0.0], [-0.0643489361, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_519(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.161500007, 3.0, 4.0, 0.0], [-0.137499988, 5.0, 6.0, 0.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.145500004, 9.0, 10.0, 0.0], [0.0656001717, 0.0, 0.0, 0.0], [-0.135500014, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.179500014, 15.0, 16.0, 0.0], [-0.200286031, 0.0, 0.0, 0.0], [-0.144499987, 17.0, 18.0, 0.0], [-0.0681825951, 0.0, 0.0, 0.0], [-0.134499997, 19.0, 20.0, 0.0], [-0.20449999, 21.0, 22.0, 0.0], [-0.747500002, 23.0, 24.0, 2.0], [0.161376745, 0.0, 0.0, 0.0], [0.0046779206, 0.0, 0.0, 0.0], [0.0743732527, 0.0, 0.0, 0.0], [-0.142500013, 25.0, 26.0, 0.0], [0.0869567618, 0.0, 0.0, 0.0], [-0.127499998, 27.0, 28.0, 0.0], [-0.00260829017, 0.0, 0.0, 0.0], [-0.0886919275, 0.0, 0.0, 0.0], [0.111524284, 0.0, 0.0, 0.0], [-0.033399187, 0.0, 0.0, 0.0], [-0.145746857, 0.0, 0.0, 0.0], [-0.0114278262, 0.0, 0.0, 0.0], [-0.0492397882, 0.0, 0.0, 0.0], [0.00237614708, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 9, 17, 25, 26, 5, 11, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 10, 18, 2, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_520(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [0.0560500026, 7.0, 8.0, 0.0], [0.127098367, 0.0, 0.0, 0.0], [-0.234044313, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.0477499999, 11.0, 12.0, 0.0], [-0.934000015, 13.0, 14.0, 2.0], [0.190499991, 15.0, 16.0, 0.0], [-0.122883134, 0.0, 0.0, 0.0], [0.0417999998, 17.0, 18.0, 0.0], [0.159302935, 0.0, 0.0, 0.0], [-0.141383499, 0.0, 0.0, 0.0], [0.0241620727, 0.0, 0.0, 0.0], [0.111500002, 19.0, 20.0, 0.0], [0.196500003, 21.0, 22.0, 0.0], [0.00278880028, 0.0, 0.0, 0.0], [-0.112674676, 0.0, 0.0, 0.0], [0.034591008, 0.0, 0.0, 0.0], [-0.123263903, 0.0, 0.0, 0.0], [0.0793457478, 0.0, 0.0, 0.0], [0.00128694531, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 19, 20, 21, 22, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_521(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.282499999, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [0.272000015, 9.0, 10.0, 0.0], [0.156235591, 0.0, 0.0, 0.0], [0.392499983, 11.0, 12.0, 0.0], [0.228500009, 13.0, 14.0, 0.0], [0.260500014, 15.0, 16.0, 0.0], [-0.178590521, 0.0, 0.0, 0.0], [-0.020155251, 0.0, 0.0, 0.0], [0.344999999, 17.0, 18.0, 0.0], [0.394500017, 19.0, 20.0, 0.0], [0.203500003, 21.0, 22.0, 0.0], [-0.133410484, 0.0, 0.0, 0.0], [0.127985626, 0.0, 0.0, 0.0], [0.00532978773, 0.0, 0.0, 0.0], [0.00754798204, 0.0, 0.0, 0.0], [-0.156182036, 0.0, 0.0, 0.0], [0.131925508, 0.0, 0.0, 0.0], [0.404500008, 23.0, 24.0, 0.0], [-0.0165331326, 0.0, 0.0, 0.0], [0.0756590962, 0.0, 0.0, 0.0], [-0.0889066607, 0.0, 0.0, 0.0], [0.0120924916, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 9, 10, 5, 17, 18, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 2, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_522(xs):
    #Predicts Class 0
    function_dict = np.array([[0.600499988, 1.0, 2.0, 2.0], [-0.782500029, 3.0, 4.0, 1.0], [-0.615499973, 5.0, 6.0, 1.0], [-0.961500049, 7.0, 8.0, 4.0], [-0.221500009, 9.0, 10.0, 0.0], [-0.94749999, 11.0, 12.0, 4.0], [-0.592499971, 13.0, 14.0, 1.0], [-0.965499997, 15.0, 16.0, 4.0], [-0.929499984, 17.0, 18.0, 4.0], [-0.264499992, 19.0, 20.0, 0.0], [-0.201499999, 21.0, 22.0, 0.0], [-0.0545924753, 0.0, 0.0, 0.0], [-0.902500033, 23.0, 24.0, 4.0], [-0.0791169629, 0.0, 0.0, 0.0], [-0.250499994, 25.0, 26.0, 0.0], [-0.180500001, 27.0, 28.0, 0.0], [-0.109626934, 0.0, 0.0, 0.0], [-0.237000003, 29.0, 30.0, 0.0], [-0.00205942267, 0.0, 0.0, 0.0], [0.0132075595, 0.0, 0.0, 0.0], [-0.747500002, 31.0, 32.0, 1.0], [-0.727999985, 33.0, 34.0, 1.0], [-0.150999993, 35.0, 36.0, 0.0], [0.133759737, 0.0, 0.0, 0.0], [-0.703000009, 37.0, 38.0, 1.0], [-0.0511340871, 0.0, 0.0, 0.0], [0.715000033, 39.0, 40.0, 2.0], [0.0698173419, 0.0, 0.0, 0.0], [-0.0392690115, 0.0, 0.0, 0.0], [0.0893319622, 0.0, 0.0, 0.0], [0.0226327106, 0.0, 0.0, 0.0], [-0.0260441806, 0.0, 0.0, 0.0], [-0.116754614, 0.0, 0.0, 0.0], [0.00685815513, 0.0, 0.0, 0.0], [0.0832208991, 0.0, 0.0, 0.0], [-0.0908814594, 0.0, 0.0, 0.0], [0.0149048157, 0.0, 0.0, 0.0], [-0.0337061398, 0.0, 0.0, 0.0], [0.0651110485, 0.0, 0.0, 0.0], [-0.0191862453, 0.0, 0.0, 0.0], [0.0735262781, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 29, 30, 18, 19, 31, 32, 33, 34, 35, 36, 11, 23, 37, 38, 13, 25, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 9, 20, 10, 21, 22, 2, 5, 12, 24, 6, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_523(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.9745, 1.0, 2.0, 4.0], [-0.219500005, 3.0, 4.0, 0.0], [-0.956499994, 5.0, 6.0, 4.0], [0.0428912118, 0.0, 0.0, 0.0], [-0.98150003, 7.0, 8.0, 4.0], [-0.9745, 9.0, 10.0, 3.0], [-0.953500032, 11.0, 12.0, 4.0], [-0.108074024, 0.0, 0.0, 0.0], [0.00501596183, 0.0, 0.0, 0.0], [0.553499997, 13.0, 14.0, 2.0], [-0.0550892204, 0.0, 0.0, 0.0], [-0.0817816183, 0.0, 0.0, 0.0], [0.635499954, 15.0, 16.0, 2.0], [0.516000032, 17.0, 18.0, 2.0], [-0.993499994, 19.0, 20.0, 3.0], [-0.749500036, 21.0, 22.0, 1.0], [-0.421999991, 23.0, 24.0, 1.0], [0.0574250221, 0.0, 0.0, 0.0], [-0.0784373581, 0.0, 0.0, 0.0], [0.00457717618, 0.0, 0.0, 0.0], [0.151456118, 0.0, 0.0, 0.0], [-0.0166428983, 0.0, 0.0, 0.0], [0.0545249321, 0.0, 0.0, 0.0], [-0.0616831332, 0.0, 0.0, 0.0], [0.0312712118, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 17, 18, 19, 20, 10, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 13, 14, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_524(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.977499962, 3.0, 4.0, 4.0], [-0.0450616106, 0.0, 0.0, 0.0], [-0.0445823148, 0.0, 0.0, 0.0], [-0.972499967, 5.0, 6.0, 4.0], [0.0639992282, 0.0, 0.0, 0.0], [-0.965499997, 7.0, 8.0, 4.0], [-0.0620298646, 0.0, 0.0, 0.0], [-0.207500011, 9.0, 10.0, 0.0], [-0.0114808921, 0.0, 0.0, 0.0], [0.0344520546, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 5, 7, 9, 10, 2])
    branch_indices = np.array([0, 1, 4, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_525(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.613499999, 3.0, 4.0, 2.0], [-0.0549238548, 0.0, 0.0, 0.0], [-0.770500004, 5.0, 6.0, 2.0], [-0.997500002, 7.0, 8.0, 1.0], [-0.795000017, 9.0, 10.0, 2.0], [0.0982500017, 11.0, 12.0, 0.0], [-0.552000046, 13.0, 14.0, 2.0], [-0.062783882, 0.0, 0.0, 0.0], [-0.996500015, 15.0, 16.0, 1.0], [0.0838286951, 0.0, 0.0, 0.0], [-0.120999999, 17.0, 18.0, 0.0], [0.0821804628, 0.0, 0.0, 0.0], [0.138988554, 0.0, 0.0, 0.0], [0.0232894681, 0.0, 0.0, 0.0], [0.000442774646, 0.0, 0.0, 0.0], [0.0840228051, 0.0, 0.0, 0.0], [0.0362115875, 0.0, 0.0, 0.0], [-0.115586035, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 17, 18, 12, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 11, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_526(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.0476500019, 3.0, 4.0, 0.0], [0.0577500015, 5.0, 6.0, 0.0], [0.0447499976, 7.0, 8.0, 0.0], [0.0551500022, 9.0, 10.0, 0.0], [-0.1505, 11.0, 12.0, 0.0], [0.0540092364, 0.0, 0.0, 0.0], [0.0372999981, 13.0, 14.0, 0.0], [0.266317815, 0.0, 0.0, 0.0], [-0.167827904, 0.0, 0.0, 0.0], [0.0760499984, 15.0, 16.0, 0.0], [-0.188499987, 17.0, 18.0, 0.0], [-0.680500031, 19.0, 20.0, 2.0], [0.0256000012, 21.0, 22.0, 0.0], [-0.109971695, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [0.0824999958, 25.0, 26.0, 0.0], [-0.747500002, 27.0, 28.0, 2.0], [0.133391738, 0.0, 0.0, 0.0], [-0.156574368, 0.0, 0.0, 0.0], [-0.654500008, 29.0, 30.0, 2.0], [-0.000724326062, 0.0, 0.0, 0.0], [0.125127628, 0.0, 0.0, 0.0], [0.140682071, 0.0, 0.0, 0.0], [-0.0894728154, 0.0, 0.0, 0.0], [-0.194829762, 0.0, 0.0, 0.0], [-0.000583847053, 0.0, 0.0, 0.0], [-0.0971318483, 0.0, 0.0, 0.0], [0.0122385425, 0.0, 0.0, 0.0], [0.0847553015, 0.0, 0.0, 0.0], [-0.0716001764, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 9, 23, 24, 25, 26, 27, 28, 18, 19, 29, 30, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 15, 16, 2, 5, 11, 17, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_527(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [0.253499985, 7.0, 8.0, 0.0], [-0.126852855, 0.0, 0.0, 0.0], [0.129875034, 0.0, 0.0, 0.0], [0.341000021, 9.0, 10.0, 0.0], [0.212500006, 11.0, 12.0, 0.0], [0.0892415866, 0.0, 0.0, 0.0], [0.276499987, 13.0, 14.0, 0.0], [0.431500018, 15.0, 16.0, 0.0], [-0.644500017, 17.0, 18.0, 2.0], [-0.111352064, 0.0, 0.0, 0.0], [-0.00713539869, 0.0, 0.0, 0.0], [-0.119682558, 0.0, 0.0, 0.0], [0.429499984, 19.0, 20.0, 0.0], [0.436500013, 21.0, 22.0, 0.0], [0.0067062485, 0.0, 0.0, 0.0], [-0.0886635706, 0.0, 0.0, 0.0], [0.00269990135, 0.0, 0.0, 0.0], [0.232114613, 0.0, 0.0, 0.0], [-0.0751745999, 0.0, 0.0, 0.0], [0.00839872938, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_528(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [-0.916499972, 3.0, 4.0, 4.0], [-0.0604500026, 5.0, 6.0, 0.0], [0.572000027, 7.0, 8.0, 2.0], [0.0164965354, 0.0, 0.0, 0.0], [0.702499986, 9.0, 10.0, 2.0], [-0.0334185176, 0.0, 0.0, 0.0], [-0.109152585, 0.0, 0.0, 0.0], [-0.00139212864, 0.0, 0.0, 0.0], [-0.945500016, 11.0, 12.0, 4.0], [-0.593500018, 13.0, 14.0, 1.0], [-0.228500009, 15.0, 16.0, 0.0], [-0.25849998, 17.0, 18.0, 0.0], [-0.0594188832, 0.0, 0.0, 0.0], [-0.985499978, 19.0, 20.0, 3.0], [-0.0433610938, 0.0, 0.0, 0.0], [0.0126136951, 0.0, 0.0, 0.0], [0.133613095, 0.0, 0.0, 0.0], [0.0196762364, 0.0, 0.0, 0.0], [0.044896163, 0.0, 0.0, 0.0], [-0.0228905641, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 15, 16, 17, 18, 13, 19, 20, 6])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 11, 12, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_529(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.5995, 1.0, 2.0, 1.0], [-0.630499959, 3.0, 4.0, 1.0], [-0.319499999, 5.0, 6.0, 0.0], [-0.651499987, 7.0, 8.0, 1.0], [0.0925657302, 0.0, 0.0, 0.0], [0.0328384526, 0.0, 0.0, 0.0], [-0.931499958, 9.0, 10.0, 4.0], [-0.997500002, 11.0, 12.0, 3.0], [-0.0704591274, 0.0, 0.0, 0.0], [0.5995, 13.0, 14.0, 2.0], [-0.0962765515, 0.0, 0.0, 0.0], [-0.250499994, 15.0, 16.0, 0.0], [0.407499999, 17.0, 18.0, 2.0], [-0.0677908659, 0.0, 0.0, 0.0], [0.648499966, 19.0, 20.0, 2.0], [0.0365071483, 0.0, 0.0, 0.0], [-0.0529083312, 0.0, 0.0, 0.0], [0.0575378947, 0.0, 0.0, 0.0], [0.00302039436, 0.0, 0.0, 0.0], [0.0639693141, 0.0, 0.0, 0.0], [0.0160264783, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 13, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_530(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.526499987, 3.0, 4.0, 1.0], [-0.949000001, 5.0, 6.0, 3.0], [-0.149500012, 7.0, 8.0, 0.0], [-0.0701775178, 0.0, 0.0, 0.0], [0.675500035, 9.0, 10.0, 2.0], [0.656000018, 11.0, 12.0, 2.0], [-0.593500018, 13.0, 14.0, 1.0], [0.523000002, 15.0, 16.0, 2.0], [-0.4745, 17.0, 18.0, 1.0], [0.730499983, 19.0, 20.0, 2.0], [-0.0604528263, 0.0, 0.0, 0.0], [0.00753741711, 0.0, 0.0, 0.0], [-0.630499959, 21.0, 22.0, 1.0], [-0.937999964, 23.0, 24.0, 4.0], [-0.735000014, 25.0, 26.0, 1.0], [-0.874500036, 27.0, 28.0, 4.0], [0.128828213, 0.0, 0.0, 0.0], [-0.401499987, 29.0, 30.0, 1.0], [-0.0981017798, 0.0, 0.0, 0.0], [0.0706283078, 0.0, 0.0, 0.0], [0.0113278134, 0.0, 0.0, 0.0], [-0.111140206, 0.0, 0.0, 0.0], [-0.0175967794, 0.0, 0.0, 0.0], [0.104908742, 0.0, 0.0, 0.0], [-0.0346095636, 0.0, 0.0, 0.0], [0.0888208672, 0.0, 0.0, 0.0], [-0.128322795, 0.0, 0.0, 0.0], [0.00755138323, 0.0, 0.0, 0.0], [-0.00707298145, 0.0, 0.0, 0.0], [0.0538281128, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 27, 28, 4, 17, 29, 30, 19, 20, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 9, 18, 10, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_531(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.161500007, 3.0, 4.0, 0.0], [-0.0496499985, 5.0, 6.0, 0.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.142500013, 9.0, 10.0, 0.0], [-0.0569499992, 11.0, 12.0, 0.0], [-0.0460999981, 13.0, 14.0, 0.0], [-0.99849999, 15.0, 16.0, 4.0], [-0.185499996, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.00800842606, 0.0, 0.0, 0.0], [-0.0658500046, 21.0, 22.0, 0.0], [-0.923500001, 23.0, 24.0, 2.0], [-0.0470499992, 25.0, 26.0, 0.0], [-0.0435499996, 27.0, 28.0, 0.0], [-0.747500002, 29.0, 30.0, 2.0], [0.0657292232, 0.0, 0.0, 0.0], [0.152652681, 0.0, 0.0, 0.0], [-0.00513549894, 0.0, 0.0, 0.0], [-0.13922374, 0.0, 0.0, 0.0], [-0.0387603231, 0.0, 0.0, 0.0], [-0.0698499978, 31.0, 32.0, 0.0], [-0.0599500015, 33.0, 34.0, 0.0], [0.321894407, 0.0, 0.0, 0.0], [-0.180172041, 0.0, 0.0, 0.0], [-0.169201776, 0.0, 0.0, 0.0], [-0.0581934564, 0.0, 0.0, 0.0], [0.165718332, 0.0, 0.0, 0.0], [-0.0307, 35.0, 36.0, 0.0], [-0.00431199791, 0.0, 0.0, 0.0], [-0.135971397, 0.0, 0.0, 0.0], [0.00276582618, 0.0, 0.0, 0.0], [0.211428523, 0.0, 0.0, 0.0], [-0.247005016, 0.0, 0.0, 0.0], [0.00757741323, 0.0, 0.0, 0.0], [-0.0848050267, 0.0, 0.0, 0.0], [0.00348551967, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 17, 18, 19, 20, 10, 31, 32, 33, 34, 23, 24, 25, 26, 27, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 9, 2, 5, 11, 21, 22, 12, 6, 13, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_532(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.191500008, 3.0, 4.0, 0.0], [-0.4375, 5.0, 6.0, 0.0], [-0.20449999, 7.0, 8.0, 0.0], [-0.189500004, 9.0, 10.0, 0.0], [0.0527671501, 0.0, 0.0, 0.0], [-0.822000027, 11.0, 12.0, 2.0], [-0.205500007, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.1497816, 0.0, 0.0, 0.0], [0.082949996, 17.0, 18.0, 0.0], [-0.997500002, 19.0, 20.0, 1.0], [-0.706500053, 21.0, 22.0, 2.0], [-0.273499995, 23.0, 24.0, 0.0], [-0.129830107, 0.0, 0.0, 0.0], [0.275770128, 0.0, 0.0, 0.0], [-0.127185732, 0.0, 0.0, 0.0], [0.0757500008, 25.0, 26.0, 0.0], [0.0867500007, 27.0, 28.0, 0.0], [-0.148499995, 29.0, 30.0, 0.0], [0.010581133, 0.0, 0.0, 0.0], [0.102906898, 0.0, 0.0, 0.0], [-0.67050004, 31.0, 32.0, 2.0], [-0.00531787053, 0.0, 0.0, 0.0], [0.0941208825, 0.0, 0.0, 0.0], [-0.000153714616, 0.0, 0.0, 0.0], [0.123411492, 0.0, 0.0, 0.0], [-0.167367294, 0.0, 0.0, 0.0], [0.00139261386, 0.0, 0.0, 0.0], [-0.0107755978, 0.0, 0.0, 0.0], [-0.224365011, 0.0, 0.0, 0.0], [-0.115494676, 0.0, 0.0, 0.0], [-0.00217107567, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 9, 25, 26, 27, 28, 5, 29, 30, 20, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 17, 18, 2, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_533(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.421000004, 3.0, 4.0, 0.0], [0.194000006, 5.0, 6.0, 0.0], [-0.0854030326, 0.0, 0.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.344999999, 11.0, 12.0, 0.0], [0.111566581, 0.0, 0.0, 0.0], [-0.38349998, 13.0, 14.0, 0.0], [-0.923500001, 15.0, 16.0, 2.0], [-0.996500015, 17.0, 18.0, 1.0], [-0.923500001, 19.0, 20.0, 2.0], [0.430999994, 21.0, 22.0, 0.0], [-0.119809888, 0.0, 0.0, 0.0], [-0.16049999, 23.0, 24.0, 0.0], [-0.00458847964, 0.0, 0.0, 0.0], [0.0674221516, 0.0, 0.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [0.0277409125, 0.0, 0.0, 0.0], [0.253000021, 27.0, 28.0, 0.0], [-0.00929174386, 0.0, 0.0, 0.0], [-0.0814467743, 0.0, 0.0, 0.0], [0.527500033, 29.0, 30.0, 0.0], [0.0708985701, 0.0, 0.0, 0.0], [-0.012556863, 0.0, 0.0, 0.0], [-0.0444681421, 0.0, 0.0, 0.0], [-0.157123417, 0.0, 0.0, 0.0], [0.0320612714, 0.0, 0.0, 0.0], [0.227581784, 0.0, 0.0, 0.0], [0.101592556, 0.0, 0.0, 0.0], [-0.0315203927, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 13, 23, 24, 15, 16, 25, 26, 18, 27, 28, 20, 21, 29, 30])
    branch_indices = np.array([0, 1, 4, 8, 14, 2, 5, 9, 10, 17, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_534(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0412976071, 0.0, 0.0, 0.0], [-0.825500011, 3.0, 4.0, 1.0], [-0.989500046, 5.0, 6.0, 3.0], [0.411500007, 7.0, 8.0, 2.0], [0.0786569044, 0.0, 0.0, 0.0], [-0.00138834014, 0.0, 0.0, 0.0], [-0.953500032, 9.0, 10.0, 4.0], [0.442499995, 11.0, 12.0, 2.0], [0.000343927532, 0.0, 0.0, 0.0], [-0.0766914189, 0.0, 0.0, 0.0], [0.0631535649, 0.0, 0.0, 0.0], [0.485500008, 13.0, 14.0, 2.0], [-0.039390631, 0.0, 0.0, 0.0], [0.00839099009, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 9, 10, 11, 13, 14])
    branch_indices = np.array([0, 2, 3, 4, 7, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_535(xs):
    #Predicts Class 1
    function_dict = np.array([[0.0696500018, 1.0, 2.0, 0.0], [-0.138500005, 3.0, 4.0, 0.0], [0.0459991582, 0.0, 0.0, 0.0], [0.603500009, 5.0, 6.0, 2.0], [-0.0594846234, 0.0, 0.0, 0.0], [0.591500044, 7.0, 8.0, 2.0], [-0.2465, 9.0, 10.0, 0.0], [0.570500016, 11.0, 12.0, 2.0], [0.0794611648, 0.0, 0.0, 0.0], [0.687000036, 13.0, 14.0, 2.0], [-0.0723781735, 0.0, 0.0, 0.0], [0.00815373473, 0.0, 0.0, 0.0], [-0.0552403145, 0.0, 0.0, 0.0], [-0.0292990711, 0.0, 0.0, 0.0], [0.0536555164, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_536(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.514999986, 3.0, 4.0, 1.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.651499987, 7.0, 8.0, 1.0], [-0.0525940582, 0.0, 0.0, 0.0], [-0.318499982, 9.0, 10.0, 0.0], [-0.825999975, 11.0, 12.0, 4.0], [-0.674499989, 13.0, 14.0, 1.0], [-0.956499994, 15.0, 16.0, 4.0], [0.0290376022, 0.0, 0.0, 0.0], [-0.0646070391, 0.0, 0.0, 0.0], [0.0819324479, 0.0, 0.0, 0.0], [0.00174487382, 0.0, 0.0, 0.0], [-0.233500004, 17.0, 18.0, 0.0], [-0.0683840886, 0.0, 0.0, 0.0], [-0.0355160162, 0.0, 0.0, 0.0], [-0.872500002, 19.0, 20.0, 4.0], [-0.0710466802, 0.0, 0.0, 0.0], [0.0155928154, 0.0, 0.0, 0.0], [0.0710012615, 0.0, 0.0, 0.0], [-0.0135351392, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 15, 19, 20, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_537(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0152500002, 1.0, 2.0, 0.0], [-0.0293500014, 3.0, 4.0, 0.0], [-0.00963000022, 5.0, 6.0, 0.0], [-0.0339000002, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.0128499996, 11.0, 12.0, 0.0], [-0.00550500024, 13.0, 14.0, 0.0], [-0.042750001, 15.0, 16.0, 0.0], [-0.0307, 17.0, 18.0, 0.0], [-0.0159499999, 19.0, 20.0, 0.0], [-0.0269000009, 21.0, 22.0, 0.0], [-0.021805061, 0.0, 0.0, 0.0], [-0.152646571, 0.0, 0.0, 0.0], [-0.00885999948, 23.0, 24.0, 0.0], [-0.00478500035, 25.0, 26.0, 0.0], [-0.0469499975, 27.0, 28.0, 0.0], [-0.0394999981, 29.0, 30.0, 0.0], [-0.278555065, 0.0, 0.0, 0.0], [-0.0090995105, 0.0, 0.0, 0.0], [0.25983882, 0.0, 0.0, 0.0], [0.0537988469, 0.0, 0.0, 0.0], [0.192346379, 0.0, 0.0, 0.0], [-0.125963181, 0.0, 0.0, 0.0], [0.024180539, 0.0, 0.0, 0.0], [0.224108249, 0.0, 0.0, 0.0], [-0.162523448, 0.0, 0.0, 0.0], [-0.00209000008, 31.0, 32.0, 0.0], [0.00476319389, 0.0, 0.0, 0.0], [-0.144252524, 0.0, 0.0, 0.0], [0.177714407, 0.0, 0.0, 0.0], [-0.00224104384, 0.0, 0.0, 0.0], [0.104970798, 0.0, 0.0, 0.0], [-0.00545245362, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 18, 19, 20, 21, 22, 11, 12, 23, 24, 25, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 10, 2, 5, 6, 13, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_538(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.414000005, 3.0, 4.0, 0.0], [0.0741500035, 5.0, 6.0, 0.0], [-0.0713567287, 0.0, 0.0, 0.0], [-0.394999981, 7.0, 8.0, 0.0], [-0.41049999, 9.0, 10.0, 0.0], [0.0552834757, 0.0, 0.0, 0.0], [0.11959134, 0.0, 0.0, 0.0], [-0.380499989, 11.0, 12.0, 0.0], [0.0450549796, 0.0, 0.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [-0.0857744887, 0.0, 0.0, 0.0], [-0.284500003, 15.0, 16.0, 0.0], [-0.157499999, 17.0, 18.0, 0.0], [-0.249500006, 19.0, 20.0, 0.0], [0.0871039033, 0.0, 0.0, 0.0], [0.000947285676, 0.0, 0.0, 0.0], [-0.154042572, 0.0, 0.0, 0.0], [0.0112948138, 0.0, 0.0, 0.0], [-0.091706939, 0.0, 0.0, 0.0], [0.016208604, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 15, 16, 9, 17, 18, 19, 20, 6])
    branch_indices = np.array([0, 1, 4, 8, 12, 2, 5, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_539(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.282499999, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.132780328, 0.0, 0.0, 0.0], [0.132680058, 0.0, 0.0, 0.0], [0.363499999, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [0.260500014, 13.0, 14.0, 0.0], [-0.0882501155, 0.0, 0.0, 0.0], [0.405499995, 15.0, 16.0, 0.0], [0.203500003, 17.0, 18.0, 0.0], [-0.123197854, 0.0, 0.0, 0.0], [0.118992038, 0.0, 0.0, 0.0], [0.00837223046, 0.0, 0.0, 0.0], [0.404500008, 19.0, 20.0, 0.0], [0.409500003, 21.0, 22.0, 0.0], [-0.0127763543, 0.0, 0.0, 0.0], [0.0803689212, 0.0, 0.0, 0.0], [0.0151569284, 0.0, 0.0, 0.0], [0.121026024, 0.0, 0.0, 0.0], [-0.138525486, 0.0, 0.0, 0.0], [0.0114534376, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_540(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [-0.916499972, 3.0, 4.0, 4.0], [0.559499979, 5.0, 6.0, 2.0], [-0.825500011, 7.0, 8.0, 1.0], [0.0150407525, 0.0, 0.0, 0.0], [-0.70449996, 9.0, 10.0, 1.0], [-0.706499994, 11.0, 12.0, 1.0], [0.0164698102, 0.0, 0.0, 0.0], [-0.0917897522, 0.0, 0.0, 0.0], [-0.726500034, 13.0, 14.0, 1.0], [-0.977499962, 15.0, 16.0, 3.0], [-0.931499958, 17.0, 18.0, 4.0], [-0.654500008, 19.0, 20.0, 1.0], [-0.968500018, 21.0, 22.0, 4.0], [0.138926953, 0.0, 0.0, 0.0], [0.527500033, 23.0, 24.0, 2.0], [0.0549066067, 0.0, 0.0, 0.0], [-0.0986713693, 0.0, 0.0, 0.0], [-0.00363687053, 0.0, 0.0, 0.0], [0.0964608565, 0.0, 0.0, 0.0], [-0.597499967, 25.0, 26.0, 1.0], [-0.0234076977, 0.0, 0.0, 0.0], [0.0365641564, 0.0, 0.0, 0.0], [-0.145555869, 0.0, 0.0, 0.0], [0.000678425014, 0.0, 0.0, 0.0], [-0.0637098476, 0.0, 0.0, 0.0], [0.0182179157, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 21, 22, 14, 23, 24, 16, 17, 18, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 13, 10, 15, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_541(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.734500051, 1.0, 2.0, 1.0], [-0.74150002, 3.0, 4.0, 1.0], [-0.942499995, 5.0, 6.0, 4.0], [-0.225499988, 7.0, 8.0, 0.0], [-0.0840840712, 0.0, 0.0, 0.0], [-0.996500015, 9.0, 10.0, 3.0], [-0.2095, 11.0, 12.0, 0.0], [-0.825500011, 13.0, 14.0, 1.0], [-0.178499997, 15.0, 16.0, 0.0], [0.550500035, 17.0, 18.0, 2.0], [-0.193500012, 19.0, 20.0, 0.0], [-0.919499993, 21.0, 22.0, 4.0], [0.0385243632, 0.0, 0.0, 0.0], [-0.0312265866, 0.0, 0.0, 0.0], [0.511500001, 23.0, 24.0, 2.0], [-0.949499965, 25.0, 26.0, 4.0], [-0.132499993, 27.0, 28.0, 0.0], [0.0284472536, 0.0, 0.0, 0.0], [-0.0503475592, 0.0, 0.0, 0.0], [-0.219500005, 29.0, 30.0, 0.0], [-0.010787555, 0.0, 0.0, 0.0], [0.598500013, 31.0, 32.0, 2.0], [-0.992499948, 33.0, 34.0, 3.0], [0.0919895545, 0.0, 0.0, 0.0], [-0.0196767878, 0.0, 0.0, 0.0], [-0.114044271, 0.0, 0.0, 0.0], [0.0191528518, 0.0, 0.0, 0.0], [0.0889757648, 0.0, 0.0, 0.0], [-0.0274107438, 0.0, 0.0, 0.0], [0.0237021297, 0.0, 0.0, 0.0], [0.123105884, 0.0, 0.0, 0.0], [-0.0948818773, 0.0, 0.0, 0.0], [-0.0164840408, 0.0, 0.0, 0.0], [-0.0470274761, 0.0, 0.0, 0.0], [0.0352128148, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 23, 24, 25, 26, 27, 28, 4, 17, 18, 29, 30, 20, 31, 32, 33, 34, 12])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 15, 16, 2, 5, 9, 10, 19, 6, 11, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_542(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.109499998, 3.0, 4.0, 0.0], [-0.0478547104, 0.0, 0.0, 0.0], [-0.770500004, 5.0, 6.0, 1.0], [0.0536766835, 0.0, 0.0, 0.0], [-0.0498217046, 0.0, 0.0, 0.0], [0.414499998, 7.0, 8.0, 2.0], [0.0708838776, 0.0, 0.0, 0.0], [-0.965499997, 9.0, 10.0, 3.0], [0.00837763492, 0.0, 0.0, 0.0], [-0.038849555, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 7, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_543(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.139236331, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [0.424000025, 13.0, 14.0, 0.0], [0.0795354322, 0.0, 0.0, 0.0], [-0.140510216, 0.0, 0.0, 0.0], [-0.0148121659, 0.0, 0.0, 0.0], [0.547500014, 15.0, 16.0, 0.0], [0.124314547, 0.0, 0.0, 0.0], [0.415000021, 17.0, 18.0, 0.0], [0.431500018, 19.0, 20.0, 0.0], [0.539999962, 21.0, 22.0, 0.0], [0.588, 23.0, 24.0, 0.0], [-0.000282808294, 0.0, 0.0, 0.0], [0.073446922, 0.0, 0.0, 0.0], [-0.130896449, 0.0, 0.0, 0.0], [0.00246586325, 0.0, 0.0, 0.0], [-0.00767093897, 0.0, 0.0, 0.0], [-0.146192521, 0.0, 0.0, 0.0], [0.058452893, 0.0, 0.0, 0.0], [-0.025465304, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 21, 22, 23, 24, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_544(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0079549998, 1.0, 2.0, 0.0], [0.00758500025, 3.0, 4.0, 0.0], [0.00974999927, 5.0, 6.0, 0.0], [0.0042849998, 7.0, 8.0, 0.0], [0.239215076, 0.0, 0.0, 0.0], [-0.232125804, 0.0, 0.0, 0.0], [0.0131000001, 9.0, 10.0, 0.0], [0.00325499987, 11.0, 12.0, 0.0], [0.00540999975, 13.0, 14.0, 0.0], [0.0104999999, 15.0, 16.0, 0.0], [0.0192999989, 17.0, 18.0, 0.0], [0.00202000001, 19.0, 20.0, 0.0], [0.277504086, 0.0, 0.0, 0.0], [-0.148307711, 0.0, 0.0, 0.0], [-0.00327734416, 0.0, 0.0, 0.0], [0.00779854087, 0.0, 0.0, 0.0], [0.208143309, 0.0, 0.0, 0.0], [-0.26859054, 0.0, 0.0, 0.0], [0.025150001, 21.0, 22.0, 0.0], [0.00142083212, 0.0, 0.0, 0.0], [-0.188592896, 0.0, 0.0, 0.0], [0.113220811, 0.0, 0.0, 0.0], [-0.0112034697, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_545(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.885499954, 3.0, 4.0, 2.0], [0.194000006, 5.0, 6.0, 0.0], [0.446500003, 7.0, 8.0, 0.0], [-0.0813576058, 0.0, 0.0, 0.0], [-0.418500006, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [0.424000025, 13.0, 14.0, 0.0], [0.494000018, 15.0, 16.0, 0.0], [0.0655898079, 0.0, 0.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.923500001, 19.0, 20.0, 2.0], [0.538500011, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [0.431500018, 25.0, 26.0, 0.0], [0.465499997, 27.0, 28.0, 0.0], [0.538499951, 29.0, 30.0, 0.0], [-0.108845964, 0.0, 0.0, 0.0], [-0.639999986, 31.0, 32.0, 2.0], [0.253000021, 33.0, 34.0, 0.0], [0.0103012593, 0.0, 0.0, 0.0], [0.523499966, 35.0, 36.0, 0.0], [0.079924427, 0.0, 0.0, 0.0], [-0.0238835756, 0.0, 0.0, 0.0], [0.0940823406, 0.0, 0.0, 0.0], [0.278027445, 0.0, 0.0, 0.0], [0.0062444252, 0.0, 0.0, 0.0], [-0.0224028118, 0.0, 0.0, 0.0], [-0.18965216, 0.0, 0.0, 0.0], [0.0543557778, 0.0, 0.0, 0.0], [-0.0339286588, 0.0, 0.0, 0.0], [0.033122737, 0.0, 0.0, 0.0], [-0.0879393816, 0.0, 0.0, 0.0], [0.0259935167, 0.0, 0.0, 0.0], [0.150102019, 0.0, 0.0, 0.0], [-0.000425168197, 0.0, 0.0, 0.0], [-0.090874657, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 29, 30, 4, 9, 17, 31, 32, 33, 34, 20, 35, 36, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 10, 18, 6, 11, 19, 12, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_546(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.538499951, 1.0, 2.0, 1.0], [-0.597499967, 3.0, 4.0, 1.0], [-0.971500039, 5.0, 6.0, 3.0], [-0.847000003, 7.0, 8.0, 4.0], [-0.983500004, 9.0, 10.0, 3.0], [-0.073522158, 0.0, 0.0, 0.0], [-0.78550005, 11.0, 12.0, 4.0], [-0.0580499992, 13.0, 14.0, 0.0], [-0.063552402, 0.0, 0.0, 0.0], [0.0963295847, 0.0, 0.0, 0.0], [-0.0122736767, 0.0, 0.0, 0.0], [0.0516946279, 0.0, 0.0, 0.0], [-0.0279831737, 0.0, 0.0, 0.0], [0.654500008, 15.0, 16.0, 2.0], [-0.0560979135, 0.0, 0.0, 0.0], [0.00268285698, 0.0, 0.0, 0.0], [0.073124513, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 14, 8, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_547(xs):
    #Predicts Class 1
    function_dict = np.array([[0.737499952, 1.0, 2.0, 2.0], [0.701499999, 3.0, 4.0, 2.0], [-0.0429042615, 0.0, 0.0, 0.0], [0.657500029, 5.0, 6.0, 2.0], [0.0596042126, 0.0, 0.0, 0.0], [0.642500043, 7.0, 8.0, 2.0], [-0.0443477817, 0.0, 0.0, 0.0], [0.602499962, 9.0, 10.0, 2.0], [0.0665011555, 0.0, 0.0, 0.0], [0.00350135937, 0.0, 0.0, 0.0], [-0.0503707156, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 8, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_548(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.509500027, 1.0, 2.0, 1.0], [-0.179500014, 3.0, 4.0, 0.0], [-0.4745, 5.0, 6.0, 1.0], [-0.210500002, 7.0, 8.0, 0.0], [-0.907999992, 9.0, 10.0, 3.0], [0.0609312318, 0.0, 0.0, 0.0], [-0.448500007, 11.0, 12.0, 1.0], [0.438499987, 13.0, 14.0, 2.0], [0.529500008, 15.0, 16.0, 2.0], [-0.897500038, 17.0, 18.0, 4.0], [0.034389127, 0.0, 0.0, 0.0], [-0.0561983027, 0.0, 0.0, 0.0], [-0.266499996, 19.0, 20.0, 0.0], [0.0291680228, 0.0, 0.0, 0.0], [-0.956499994, 21.0, 22.0, 4.0], [-0.0254880134, 0.0, 0.0, 0.0], [0.63499999, 23.0, 24.0, 2.0], [-0.9375, 25.0, 26.0, 4.0], [-0.0964631587, 0.0, 0.0, 0.0], [-0.975000024, 27.0, 28.0, 3.0], [0.0717264712, 0.0, 0.0, 0.0], [-0.0925448239, 0.0, 0.0, 0.0], [-0.00232154923, 0.0, 0.0, 0.0], [0.0997468829, 0.0, 0.0, 0.0], [0.00883902796, 0.0, 0.0, 0.0], [-0.0404556319, 0.0, 0.0, 0.0], [0.0512950085, 0.0, 0.0, 0.0], [-0.04169406, 0.0, 0.0, 0.0], [0.0234858021, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 21, 22, 15, 23, 24, 25, 26, 18, 10, 5, 11, 27, 28, 20])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 16, 4, 9, 17, 2, 6, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_549(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.654500008, 3.0, 4.0, 2.0], [0.0689999983, 5.0, 6.0, 0.0], [-0.747500002, 7.0, 8.0, 2.0], [-0.0428500026, 9.0, 10.0, 0.0], [0.0248496216, 0.0, 0.0, 0.0], [-0.108604155, 0.0, 0.0, 0.0], [-0.996500015, 11.0, 12.0, 1.0], [0.0144500006, 13.0, 14.0, 0.0], [-0.601000011, 15.0, 16.0, 2.0], [-0.613499999, 17.0, 18.0, 2.0], [-0.99849999, 19.0, 20.0, 1.0], [0.0602657087, 0.0, 0.0, 0.0], [-0.120999999, 21.0, 22.0, 0.0], [0.0733823404, 0.0, 0.0, 0.0], [0.152959526, 0.0, 0.0, 0.0], [-0.0414389409, 0.0, 0.0, 0.0], [-0.0704819188, 0.0, 0.0, 0.0], [0.0608958676, 0.0, 0.0, 0.0], [0.00209988886, 0.0, 0.0, 0.0], [-0.0753668845, 0.0, 0.0, 0.0], [0.0137940412, 0.0, 0.0, 0.0], [-0.150391266, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 21, 22, 14, 15, 16, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 4, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_550(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0203999989, 1.0, 2.0, 0.0], [0.0110500008, 3.0, 4.0, 0.0], [0.0234000012, 5.0, 6.0, 0.0], [0.0101999994, 7.0, 8.0, 0.0], [0.172700867, 0.0, 0.0, 0.0], [-0.278242677, 0.0, 0.0, 0.0], [0.025150001, 9.0, 10.0, 0.0], [0.00768500008, 11.0, 12.0, 0.0], [-0.216762394, 0.0, 0.0, 0.0], [0.124470614, 0.0, 0.0, 0.0], [0.0260500014, 13.0, 14.0, 0.0], [0.00655000005, 15.0, 16.0, 0.0], [0.134729952, 0.0, 0.0, 0.0], [-0.205414414, 0.0, 0.0, 0.0], [0.0271000005, 17.0, 18.0, 0.0], [0.000893990626, 0.0, 0.0, 0.0], [-0.136376664, 0.0, 0.0, 0.0], [0.165579766, 0.0, 0.0, 0.0], [-0.00391689315, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_551(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.503000021, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.466499984, 7.0, 8.0, 0.0], [0.513000011, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.135352015, 0.0, 0.0, 0.0], [0.463499993, 13.0, 14.0, 0.0], [0.487500012, 15.0, 16.0, 0.0], [-0.125590146, 0.0, 0.0, 0.0], [0.523499966, 17.0, 18.0, 0.0], [0.059100315, 0.0, 0.0, 0.0], [0.549999952, 19.0, 20.0, 0.0], [0.436500013, 21.0, 22.0, 0.0], [-0.0929300189, 0.0, 0.0, 0.0], [0.179912582, 0.0, 0.0, 0.0], [0.0267306846, 0.0, 0.0, 0.0], [0.0400390141, 0.0, 0.0, 0.0], [0.527500033, 23.0, 24.0, 0.0], [-0.0937618837, 0.0, 0.0, 0.0], [0.561499953, 25.0, 26.0, 0.0], [-0.00537535828, 0.0, 0.0, 0.0], [0.0848983303, 0.0, 0.0, 0.0], [-0.0200162865, 0.0, 0.0, 0.0], [-0.090319775, 0.0, 0.0, 0.0], [0.0786660016, 0.0, 0.0, 0.0], [-0.0269470792, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 9, 17, 23, 24, 11, 19, 25, 26, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 18, 2, 5, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_552(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [-0.916499972, 3.0, 4.0, 4.0], [-0.218499988, 5.0, 6.0, 0.0], [-0.805000007, 7.0, 8.0, 1.0], [0.0123637812, 0.0, 0.0, 0.0], [-0.944499969, 9.0, 10.0, 3.0], [-0.881500006, 11.0, 12.0, 4.0], [0.00444391882, 0.0, 0.0, 0.0], [-0.0898146257, 0.0, 0.0, 0.0], [-0.938500047, 13.0, 14.0, 4.0], [-0.033561103, 0.0, 0.0, 0.0], [-0.189500004, 15.0, 16.0, 0.0], [-0.182500005, 17.0, 18.0, 0.0], [0.485500008, 19.0, 20.0, 2.0], [0.687000036, 21.0, 22.0, 2.0], [0.473999977, 23.0, 24.0, 2.0], [-0.631500006, 25.0, 26.0, 1.0], [-0.109223008, 0.0, 0.0, 0.0], [0.669499993, 27.0, 28.0, 2.0], [-0.0470790714, 0.0, 0.0, 0.0], [0.0410256721, 0.0, 0.0, 0.0], [0.120949656, 0.0, 0.0, 0.0], [-0.0024197679, 0.0, 0.0, 0.0], [-0.0332476944, 0.0, 0.0, 0.0], [0.0846028998, 0.0, 0.0, 0.0], [-0.0430369303, 0.0, 0.0, 0.0], [0.0608968437, 0.0, 0.0, 0.0], [0.102879211, 0.0, 0.0, 0.0], [-0.0461809151, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 19, 20, 21, 22, 10, 23, 24, 25, 26, 17, 27, 28])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 13, 14, 6, 11, 15, 16, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_553(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.365500003, 1.0, 2.0, 1.0], [-0.315500021, 3.0, 4.0, 0.0], [-0.0439072289, 0.0, 0.0, 0.0], [-0.606999993, 5.0, 6.0, 1.0], [-0.906499982, 7.0, 8.0, 4.0], [-0.334500015, 9.0, 10.0, 0.0], [0.0829173028, 0.0, 0.0, 0.0], [-0.940500021, 11.0, 12.0, 4.0], [-0.877499998, 13.0, 14.0, 4.0], [-0.0464971103, 0.0, 0.0, 0.0], [0.0454720557, 0.0, 0.0, 0.0], [-0.946500003, 15.0, 16.0, 4.0], [0.600499988, 17.0, 18.0, 2.0], [-0.0962960571, 0.0, 0.0, 0.0], [0.00519908639, 0.0, 0.0, 0.0], [0.00355929183, 0.0, 0.0, 0.0], [-0.0934265181, 0.0, 0.0, 0.0], [0.0565754436, 0.0, 0.0, 0.0], [-0.029028343, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 6, 15, 16, 17, 18, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 5, 4, 7, 11, 12, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_554(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.351499975, 1.0, 2.0, 1.0], [-0.857499957, 3.0, 4.0, 3.0], [0.0453803949, 0.0, 0.0, 0.0], [0.801499963, 5.0, 6.0, 2.0], [-0.0562765859, 0.0, 0.0, 0.0], [0.765500009, 7.0, 8.0, 2.0], [0.0592637248, 0.0, 0.0, 0.0], [0.331499994, 9.0, 10.0, 2.0], [-0.0659585148, 0.0, 0.0, 0.0], [-0.052019991, 0.0, 0.0, 0.0], [0.00889995508, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 8, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_555(xs):
    #Predicts Class 3
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [-0.0492354222, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [0.101884045, 0.0, 0.0, 0.0], [0.556499958, 7.0, 8.0, 0.0], [-0.104062416, 0.0, 0.0, 0.0], [0.541499972, 9.0, 10.0, 0.0], [0.557999969, 11.0, 12.0, 0.0], [0.00107845897, 0.0, 0.0, 0.0], [-0.0709540099, 0.0, 0.0, 0.0], [0.0884343907, 0.0, 0.0, 0.0], [0.0128247775, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_556(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00894000009, 1.0, 2.0, 0.0], [-0.0150499996, 3.0, 4.0, 0.0], [-0.0052199997, 5.0, 6.0, 0.0], [-0.0156999994, 7.0, 8.0, 0.0], [-0.0101749999, 9.0, 10.0, 0.0], [0.143666312, 0.0, 0.0, 0.0], [-0.00463499967, 11.0, 12.0, 0.0], [-0.0293500014, 13.0, 14.0, 0.0], [0.147519276, 0.0, 0.0, 0.0], [-0.243930459, 0.0, 0.0, 0.0], [-0.0210971683, 0.0, 0.0, 0.0], [-0.13402462, 0.0, 0.0, 0.0], [-0.00390999997, 15.0, 16.0, 0.0], [-0.0310500003, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.206826389, 0.0, 0.0, 0.0], [-0.00209000008, 21.0, 22.0, 0.0], [-0.0035914199, 0.0, 0.0, 0.0], [0.122853614, 0.0, 0.0, 0.0], [-0.220262244, 0.0, 0.0, 0.0], [-0.00832073949, 0.0, 0.0, 0.0], [-0.116952799, 0.0, 0.0, 0.0], [0.00601566909, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_557(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0584892817, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.100021407, 0.0, 0.0, 0.0], [0.556499958, 7.0, 8.0, 0.0], [0.109584555, 0.0, 0.0, 0.0], [0.541499972, 9.0, 10.0, 0.0], [0.557999969, 11.0, 12.0, 0.0], [-0.00129549287, 0.0, 0.0, 0.0], [0.0755833313, 0.0, 0.0, 0.0], [-0.0874183178, 0.0, 0.0, 0.0], [-0.0104424134, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_558(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.722499967, 1.0, 2.0, 1.0], [-0.113499999, 3.0, 4.0, 0.0], [-0.943500042, 5.0, 6.0, 4.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.0600499995, 9.0, 10.0, 0.0], [-0.207500011, 11.0, 12.0, 0.0], [-0.931499958, 13.0, 14.0, 4.0], [-0.963500023, 15.0, 16.0, 4.0], [0.0740196854, 0.0, 0.0, 0.0], [-0.0682698563, 0.0, 0.0, 0.0], [0.0318308584, 0.0, 0.0, 0.0], [-0.0911264345, 0.0, 0.0, 0.0], [-0.645500004, 17.0, 18.0, 1.0], [0.0752975568, 0.0, 0.0, 0.0], [-0.855499983, 19.0, 20.0, 3.0], [0.425000012, 21.0, 22.0, 2.0], [-0.234499991, 23.0, 24.0, 0.0], [-0.068949692, 0.0, 0.0, 0.0], [0.0470636375, 0.0, 0.0, 0.0], [-0.727499962, 25.0, 26.0, 4.0], [0.0571902283, 0.0, 0.0, 0.0], [-0.0358138606, 0.0, 0.0, 0.0], [0.0820915774, 0.0, 0.0, 0.0], [0.0338697135, 0.0, 0.0, 0.0], [-0.0532745495, 0.0, 0.0, 0.0], [-0.0394626372, 0.0, 0.0, 0.0], [0.048700124, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 11, 17, 18, 13, 25, 26, 20])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 12, 6, 14, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_559(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.74849999, 1.0, 2.0, 1.0], [-0.770500004, 3.0, 4.0, 1.0], [-0.175500005, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 4.0], [-0.236499995, 9.0, 10.0, 0.0], [0.635499954, 11.0, 12.0, 2.0], [-0.0557102039, 0.0, 0.0, 0.0], [0.411499977, 13.0, 14.0, 2.0], [0.0414993726, 0.0, 0.0, 0.0], [-0.0223911852, 0.0, 0.0, 0.0], [-0.0897373557, 0.0, 0.0, 0.0], [-0.953500032, 15.0, 16.0, 4.0], [-0.560500026, 17.0, 18.0, 1.0], [-0.156500012, 19.0, 20.0, 0.0], [-0.179500014, 21.0, 22.0, 0.0], [-0.968500018, 23.0, 24.0, 4.0], [-0.956499994, 25.0, 26.0, 3.0], [-0.0623145141, 0.0, 0.0, 0.0], [-0.928499997, 27.0, 28.0, 4.0], [0.059419658, 0.0, 0.0, 0.0], [-0.0444435887, 0.0, 0.0, 0.0], [-0.0751838014, 0.0, 0.0, 0.0], [0.0246873889, 0.0, 0.0, 0.0], [0.0718644932, 0.0, 0.0, 0.0], [-0.0420786329, 0.0, 0.0, 0.0], [0.0859032795, 0.0, 0.0, 0.0], [-0.0120852627, 0.0, 0.0, 0.0], [0.0884716734, 0.0, 0.0, 0.0], [-0.0496794619, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 23, 24, 25, 26, 17, 27, 28, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 5, 11, 15, 16, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_560(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.257499993, 1.0, 2.0, 0.0], [-0.884500027, 3.0, 4.0, 4.0], [-0.526499987, 5.0, 6.0, 1.0], [-0.953500032, 7.0, 8.0, 4.0], [0.0787068456, 0.0, 0.0, 0.0], [-0.581499994, 9.0, 10.0, 1.0], [-0.440500021, 11.0, 12.0, 1.0], [0.0511426292, 0.0, 0.0, 0.0], [-0.0690667108, 0.0, 0.0, 0.0], [-0.941499949, 13.0, 14.0, 4.0], [-0.199000001, 15.0, 16.0, 0.0], [-0.208499998, 17.0, 18.0, 0.0], [0.031202184, 0.0, 0.0, 0.0], [-0.951499999, 19.0, 20.0, 4.0], [-0.818499982, 21.0, 22.0, 4.0], [0.0830795094, 0.0, 0.0, 0.0], [0.00325218402, 0.0, 0.0, 0.0], [-0.11657986, 0.0, 0.0, 0.0], [0.00825928617, 0.0, 0.0, 0.0], [0.000860296015, 0.0, 0.0, 0.0], [0.0768992081, 0.0, 0.0, 0.0], [-0.0660875663, 0.0, 0.0, 0.0], [0.0503959209, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 19, 20, 21, 22, 15, 16, 17, 18, 12])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 13, 14, 10, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_561(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.127499998, 1.0, 2.0, 0.0], [-0.999500036, 3.0, 4.0, 4.0], [-0.125499994, 5.0, 6.0, 0.0], [-0.132499993, 7.0, 8.0, 0.0], [-0.132499993, 9.0, 10.0, 0.0], [-0.12650001, 11.0, 12.0, 0.0], [-0.120499998, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.161500007, 19.0, 20.0, 0.0], [0.206790701, 0.0, 0.0, 0.0], [0.0109141422, 0.0, 0.0, 0.0], [0.15071179, 0.0, 0.0, 0.0], [-0.158538803, 0.0, 0.0, 0.0], [-0.1105, 21.0, 22.0, 0.0], [-0.136500001, 23.0, 24.0, 0.0], [-0.143951058, 0.0, 0.0, 0.0], [-0.306591183, 0.0, 0.0, 0.0], [0.116268143, 0.0, 0.0, 0.0], [-0.192499995, 25.0, 26.0, 0.0], [-0.120861523, 0.0, 0.0, 0.0], [-0.1175, 27.0, 28.0, 0.0], [-0.104499996, 29.0, 30.0, 0.0], [-0.010927299, 0.0, 0.0, 0.0], [0.0584190153, 0.0, 0.0, 0.0], [-0.00947137736, 0.0, 0.0, 0.0], [0.148703396, 0.0, 0.0, 0.0], [0.0153128775, 0.0, 0.0, 0.0], [0.102319911, 0.0, 0.0, 0.0], [-0.0833881423, 0.0, 0.0, 0.0], [0.00261348579, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 17, 18, 25, 26, 20, 10, 11, 12, 13, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 9, 19, 2, 5, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_562(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0914499983, 3.0, 4.0, 0.0], [-0.0793000013, 5.0, 6.0, 0.0], [-0.0973500013, 7.0, 8.0, 0.0], [0.137917012, 0.0, 0.0, 0.0], [-0.0811500028, 9.0, 10.0, 0.0], [-0.0771999955, 11.0, 12.0, 0.0], [-0.100500003, 13.0, 14.0, 0.0], [-0.0952499956, 15.0, 16.0, 0.0], [-0.0208573043, 0.0, 0.0, 0.0], [-0.231865391, 0.0, 0.0, 0.0], [0.20867379, 0.0, 0.0, 0.0], [-0.0720499977, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.112946756, 0.0, 0.0, 0.0], [-0.124678783, 0.0, 0.0, 0.0], [-0.02607801, 0.0, 0.0, 0.0], [-0.175678745, 0.0, 0.0, 0.0], [-0.0673500001, 21.0, 22.0, 0.0], [0.00790350139, 0.0, 0.0, 0.0], [-0.0277226064, 0.0, 0.0, 0.0], [0.167562306, 0.0, 0.0, 0.0], [-0.00529935397, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 16, 4, 9, 10, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_563(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.393000007, 1.0, 2.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [-0.161500007, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [0.12872918, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.158500001, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [-0.0820146799, 0.0, 0.0, 0.0], [-0.168500006, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [0.121591121, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 4.0], [0.0583835393, 0.0, 0.0, 0.0], [0.00336904312, 0.0, 0.0, 0.0], [-0.169499993, 21.0, 22.0, 0.0], [-0.117401533, 0.0, 0.0, 0.0], [0.0642592907, 0.0, 0.0, 0.0], [-0.0613346249, 0.0, 0.0, 0.0], [-0.747500002, 23.0, 24.0, 2.0], [0.0773716122, 0.0, 0.0, 0.0], [-0.0746167004, 0.0, 0.0, 0.0], [0.0864285231, 0.0, 0.0, 0.0], [0.000954705523, 0.0, 0.0, 0.0], [-0.0663076639, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 21, 22, 16, 17, 18, 11, 23, 24, 20])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 9, 15, 10, 6, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_564(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.642500043, 1.0, 2.0, 1.0], [-0.96449995, 3.0, 4.0, 3.0], [-0.870499969, 5.0, 6.0, 4.0], [-0.107500002, 7.0, 8.0, 0.0], [-0.699499965, 9.0, 10.0, 1.0], [-0.148499995, 11.0, 12.0, 0.0], [-0.812000036, 13.0, 14.0, 4.0], [-0.17050001, 15.0, 16.0, 0.0], [0.0607498363, 0.0, 0.0, 0.0], [-0.750999987, 17.0, 18.0, 1.0], [0.10736151, 0.0, 0.0, 0.0], [-0.988499999, 19.0, 20.0, 3.0], [0.00848001707, 0.0, 0.0, 0.0], [0.075651899, 0.0, 0.0, 0.0], [-0.767500043, 21.0, 22.0, 4.0], [-0.892500043, 23.0, 24.0, 4.0], [-0.961500049, 25.0, 26.0, 4.0], [0.0604963377, 0.0, 0.0, 0.0], [-0.050734397, 0.0, 0.0, 0.0], [-0.0304276515, 0.0, 0.0, 0.0], [-0.123571761, 0.0, 0.0, 0.0], [-0.0600868091, 0.0, 0.0, 0.0], [0.728999972, 27.0, 28.0, 2.0], [0.0191371627, 0.0, 0.0, 0.0], [-0.0622731633, 0.0, 0.0, 0.0], [-0.11249797, 0.0, 0.0, 0.0], [0.00936834048, 0.0, 0.0, 0.0], [0.0570986383, 0.0, 0.0, 0.0], [-0.0385896005, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 17, 18, 10, 19, 20, 12, 13, 21, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 2, 5, 11, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_565(xs):
    #Predicts Class 1
    function_dict = np.array([[0.361499995, 1.0, 2.0, 2.0], [-0.996500015, 3.0, 4.0, 3.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.0792326033, 0.0, 0.0, 0.0], [-0.218499988, 7.0, 8.0, 0.0], [0.466499984, 9.0, 10.0, 2.0], [0.490500003, 11.0, 12.0, 2.0], [-0.0360768512, 0.0, 0.0, 0.0], [0.0566316321, 0.0, 0.0, 0.0], [-0.218499988, 13.0, 14.0, 0.0], [-0.234499991, 15.0, 16.0, 0.0], [0.407499999, 17.0, 18.0, 2.0], [-0.970499992, 19.0, 20.0, 3.0], [-0.00118799484, 0.0, 0.0, 0.0], [0.14213337, 0.0, 0.0, 0.0], [-0.318499982, 21.0, 22.0, 0.0], [-0.2095, 23.0, 24.0, 0.0], [0.0188866705, 0.0, 0.0, 0.0], [-0.717000008, 25.0, 26.0, 1.0], [-0.990499973, 27.0, 28.0, 3.0], [-0.504500031, 29.0, 30.0, 1.0], [-0.0223934315, 0.0, 0.0, 0.0], [0.0751692653, 0.0, 0.0, 0.0], [-0.0939847454, 0.0, 0.0, 0.0], [-0.0234398618, 0.0, 0.0, 0.0], [-0.0758749321, 0.0, 0.0, 0.0], [-0.00392430229, 0.0, 0.0, 0.0], [0.0355878696, 0.0, 0.0, 0.0], [-0.0330842361, 0.0, 0.0, 0.0], [0.0654805675, 0.0, 0.0, 0.0], [-0.00686127692, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 13, 14, 21, 22, 23, 24, 17, 25, 26, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 10, 15, 16, 6, 11, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_566(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.872500002, 1.0, 2.0, 4.0], [-0.983500004, 3.0, 4.0, 3.0], [-0.978999972, 5.0, 6.0, 3.0], [0.63349998, 7.0, 8.0, 2.0], [-0.912500024, 9.0, 10.0, 4.0], [-0.182500005, 11.0, 12.0, 0.0], [-0.726500034, 13.0, 14.0, 4.0], [-0.718500018, 15.0, 16.0, 1.0], [0.678499997, 17.0, 18.0, 2.0], [-0.729499996, 19.0, 20.0, 1.0], [0.124256179, 0.0, 0.0, 0.0], [0.0748845562, 0.0, 0.0, 0.0], [-0.0330257565, 0.0, 0.0, 0.0], [-0.110172406, 0.0, 0.0, 0.0], [0.0316495746, 0.0, 0.0, 0.0], [0.438499987, 21.0, 22.0, 2.0], [-0.994500041, 23.0, 24.0, 3.0], [-0.110879116, 0.0, 0.0, 0.0], [-0.00174728408, 0.0, 0.0, 0.0], [0.0670634136, 0.0, 0.0, 0.0], [-0.476499975, 25.0, 26.0, 1.0], [0.019838132, 0.0, 0.0, 0.0], [-0.0721091554, 0.0, 0.0, 0.0], [0.00314581394, 0.0, 0.0, 0.0], [0.0850414261, 0.0, 0.0, 0.0], [-0.0690585747, 0.0, 0.0, 0.0], [0.0182708539, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 17, 18, 19, 25, 26, 10, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 20, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_567(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.588, 3.0, 4.0, 0.0], [-0.706500053, 5.0, 6.0, 2.0], [0.564499974, 7.0, 8.0, 0.0], [0.620499969, 9.0, 10.0, 0.0], [-0.0950115919, 0.0, 0.0, 0.0], [0.0106080491, 0.0, 0.0, 0.0], [0.549000025, 11.0, 12.0, 0.0], [0.112862065, 0.0, 0.0, 0.0], [-0.0910550579, 0.0, 0.0, 0.0], [0.037913885, 0.0, 0.0, 0.0], [0.538499951, 13.0, 14.0, 0.0], [0.561499953, 15.0, 16.0, 0.0], [-0.000510287762, 0.0, 0.0, 0.0], [0.0776980668, 0.0, 0.0, 0.0], [-0.0860852301, 0.0, 0.0, 0.0], [0.00946616288, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_568(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00496499985, 1.0, 2.0, 0.0], [-0.00885999948, 3.0, 4.0, 0.0], [-0.00413500005, 5.0, 6.0, 0.0], [-0.0101749999, 7.0, 8.0, 0.0], [-0.138990089, 0.0, 0.0, 0.0], [0.184430063, 0.0, 0.0, 0.0], [-0.00209000008, 9.0, 10.0, 0.0], [-0.0150499996, 11.0, 12.0, 0.0], [0.127283111, 0.0, 0.0, 0.0], [-0.122064792, 0.0, 0.0, 0.0], [-0.00132499996, 13.0, 14.0, 0.0], [-0.0156999994, 15.0, 16.0, 0.0], [-0.216915816, 0.0, 0.0, 0.0], [0.144523382, 0.0, 0.0, 0.0], [0.000549999997, 17.0, 18.0, 0.0], [-0.00377658103, 0.0, 0.0, 0.0], [0.114032529, 0.0, 0.0, 0.0], [-0.0987594724, 0.0, 0.0, 0.0], [0.00667708786, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_569(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.108327761, 0.0, 0.0, 0.0], [0.0934450775, 0.0, 0.0, 0.0], [-0.0262353551, 0.0, 0.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [0.561499953, 11.0, 12.0, 0.0], [0.528499961, 13.0, 14.0, 0.0], [0.541499972, 15.0, 16.0, 0.0], [0.0879761875, 0.0, 0.0, 0.0], [-0.00737021631, 0.0, 0.0, 0.0], [-0.00110106054, 0.0, 0.0, 0.0], [0.124898858, 0.0, 0.0, 0.0], [-0.100587584, 0.0, 0.0, 0.0], [-0.02464322, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_570(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.851500034, 1.0, 2.0, 1.0], [0.0479551367, 0.0, 0.0, 0.0], [-0.971500039, 3.0, 4.0, 4.0], [-0.180500001, 5.0, 6.0, 0.0], [-0.281499982, 7.0, 8.0, 0.0], [-0.763499975, 9.0, 10.0, 1.0], [-0.11171487, 0.0, 0.0, 0.0], [-0.916499972, 11.0, 12.0, 4.0], [0.559499979, 13.0, 14.0, 2.0], [0.0438628793, 0.0, 0.0, 0.0], [-0.0398060828, 0.0, 0.0, 0.0], [-0.0764192864, 0.0, 0.0, 0.0], [0.0173324868, 0.0, 0.0, 0.0], [-0.70449996, 15.0, 16.0, 1.0], [-0.940500021, 17.0, 18.0, 3.0], [0.0549906716, 0.0, 0.0, 0.0], [-0.0270436145, 0.0, 0.0, 0.0], [0.0114599429, 0.0, 0.0, 0.0], [-0.063714169, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 6, 11, 12, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 3, 5, 4, 7, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_571(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.860499978, 1.0, 2.0, 1.0], [-0.0475763604, 0.0, 0.0, 0.0], [-0.912500024, 3.0, 4.0, 4.0], [-0.2755, 5.0, 6.0, 0.0], [0.536499977, 7.0, 8.0, 2.0], [-0.625999987, 9.0, 10.0, 1.0], [-0.625499964, 11.0, 12.0, 1.0], [-0.072159566, 0.0, 0.0, 0.0], [-0.613499999, 13.0, 14.0, 1.0], [0.559499979, 15.0, 16.0, 2.0], [-0.4745, 17.0, 18.0, 1.0], [-0.236499995, 19.0, 20.0, 0.0], [-0.48300001, 21.0, 22.0, 1.0], [-0.272000015, 23.0, 24.0, 0.0], [-0.0549768247, 0.0, 0.0, 0.0], [0.112513773, 0.0, 0.0, 0.0], [0.0116414549, 0.0, 0.0, 0.0], [-0.0560646206, 0.0, 0.0, 0.0], [0.0501897633, 0.0, 0.0, 0.0], [-0.0585805774, 0.0, 0.0, 0.0], [0.0115475813, 0.0, 0.0, 0.0], [0.0655118749, 0.0, 0.0, 0.0], [-0.0134065347, 0.0, 0.0, 0.0], [-0.0195621848, 0.0, 0.0, 0.0], [0.0887398794, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 19, 20, 21, 22, 7, 23, 24, 14])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 8, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_572(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.718500018, 1.0, 2.0, 1.0], [-0.756500006, 3.0, 4.0, 1.0], [0.483500004, 5.0, 6.0, 2.0], [-0.799499989, 7.0, 8.0, 1.0], [-0.195499986, 9.0, 10.0, 0.0], [0.0544362664, 0.0, 0.0, 0.0], [0.529500008, 11.0, 12.0, 2.0], [-0.0299810059, 0.0, 0.0, 0.0], [0.0482189693, 0.0, 0.0, 0.0], [-0.0728295594, 0.0, 0.0, 0.0], [-0.0185460541, 0.0, 0.0, 0.0], [-0.0445768982, 0.0, 0.0, 0.0], [-0.940500021, 13.0, 14.0, 3.0], [-0.995499969, 15.0, 16.0, 3.0], [-0.216499999, 17.0, 18.0, 0.0], [0.0314165279, 0.0, 0.0, 0.0], [-0.0277953316, 0.0, 0.0, 0.0], [-0.0210148692, 0.0, 0.0, 0.0], [0.0941191539, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 5, 11, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 4, 2, 6, 12, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_573(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.111500002, 1.0, 2.0, 0.0], [-0.116499998, 3.0, 4.0, 0.0], [-0.105499998, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [-0.129392892, 0.0, 0.0, 0.0], [-0.1065, 9.0, 10.0, 0.0], [-0.103500001, 11.0, 12.0, 0.0], [-0.120499998, 13.0, 14.0, 0.0], [-0.201499999, 15.0, 16.0, 0.0], [0.0356556475, 0.0, 0.0, 0.0], [0.161906153, 0.0, 0.0, 0.0], [-0.126812145, 0.0, 0.0, 0.0], [-0.101500005, 17.0, 18.0, 0.0], [-0.125499994, 19.0, 20.0, 0.0], [-0.118500002, 21.0, 22.0, 0.0], [-0.212500006, 23.0, 24.0, 0.0], [-0.132499993, 25.0, 26.0, 0.0], [0.0899651572, 0.0, 0.0, 0.0], [-0.0989499986, 27.0, 28.0, 0.0], [0.00754472287, 0.0, 0.0, 0.0], [-0.244106725, 0.0, 0.0, 0.0], [0.16658406, 0.0, 0.0, 0.0], [0.00279157376, 0.0, 0.0, 0.0], [-0.0496311001, 0.0, 0.0, 0.0], [0.0676373392, 0.0, 0.0, 0.0], [-0.151027173, 0.0, 0.0, 0.0], [-0.0344632268, 0.0, 0.0, 0.0], [-0.0915340781, 0.0, 0.0, 0.0], [0.00255431281, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 4, 9, 10, 11, 17, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_574(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0079549998, 1.0, 2.0, 0.0], [0.00637499988, 3.0, 4.0, 0.0], [0.00974999927, 5.0, 6.0, 0.0], [0.0042849998, 7.0, 8.0, 0.0], [0.165577278, 0.0, 0.0, 0.0], [-0.213868693, 0.0, 0.0, 0.0], [0.0117000006, 9.0, 10.0, 0.0], [0.00325499987, 11.0, 12.0, 0.0], [-0.11097008, 0.0, 0.0, 0.0], [0.116515316, 0.0, 0.0, 0.0], [0.0192999989, 13.0, 14.0, 0.0], [0.00202000001, 15.0, 16.0, 0.0], [0.242250368, 0.0, 0.0, 0.0], [-0.23577559, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.00140940852, 0.0, 0.0, 0.0], [-0.161040485, 0.0, 0.0, 0.0], [0.0142591055, 0.0, 0.0, 0.0], [-0.0606263764, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_575(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.212500006, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [0.201499999, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.118419617, 0.0, 0.0, 0.0], [0.363499999, 11.0, 12.0, 0.0], [-0.0123999994, 13.0, 14.0, 0.0], [0.0661932379, 0.0, 0.0, 0.0], [0.256500006, 15.0, 16.0, 0.0], [0.0465800352, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.428499997, 19.0, 20.0, 0.0], [-0.0136000002, 21.0, 22.0, 0.0], [-0.99849999, 23.0, 24.0, 1.0], [-0.223855868, 0.0, 0.0, 0.0], [-0.0353277586, 0.0, 0.0, 0.0], [-0.112823538, 0.0, 0.0, 0.0], [-0.0175173655, 0.0, 0.0, 0.0], [-0.972000003, 25.0, 26.0, 2.0], [0.432500005, 27.0, 28.0, 0.0], [-0.00699164392, 0.0, 0.0, 0.0], [0.15828532, 0.0, 0.0, 0.0], [-0.155046985, 0.0, 0.0, 0.0], [0.0132372538, 0.0, 0.0, 0.0], [0.0168186631, 0.0, 0.0, 0.0], [0.178288788, 0.0, 0.0, 0.0], [-0.127143756, 0.0, 0.0, 0.0], [0.00737485336, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 16, 10, 5, 17, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 2, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_576(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.962499976, 1.0, 2.0, 3.0], [0.539499998, 3.0, 4.0, 2.0], [-0.229499996, 5.0, 6.0, 0.0], [-0.70449996, 7.0, 8.0, 1.0], [-0.615499973, 9.0, 10.0, 1.0], [-0.256500006, 11.0, 12.0, 0.0], [-0.203500003, 13.0, 14.0, 0.0], [-0.763499975, 15.0, 16.0, 1.0], [-0.100774094, 0.0, 0.0, 0.0], [-0.943500042, 17.0, 18.0, 4.0], [-0.794499993, 19.0, 20.0, 4.0], [0.0316855833, 0.0, 0.0, 0.0], [-0.050506983, 0.0, 0.0, 0.0], [0.0921183228, 0.0, 0.0, 0.0], [-0.874500036, 21.0, 22.0, 3.0], [-0.965499997, 23.0, 24.0, 4.0], [-0.221500009, 25.0, 26.0, 0.0], [-0.995499969, 27.0, 28.0, 3.0], [-0.851000011, 29.0, 30.0, 4.0], [-0.993499994, 31.0, 32.0, 3.0], [0.00414113468, 0.0, 0.0, 0.0], [-0.0151735544, 0.0, 0.0, 0.0], [0.0447960757, 0.0, 0.0, 0.0], [0.0119400797, 0.0, 0.0, 0.0], [-0.0653747693, 0.0, 0.0, 0.0], [-0.00677519012, 0.0, 0.0, 0.0], [0.0782849938, 0.0, 0.0, 0.0], [0.031130828, 0.0, 0.0, 0.0], [-0.0661957711, 0.0, 0.0, 0.0], [0.11533089, 0.0, 0.0, 0.0], [-0.0430666655, 0.0, 0.0, 0.0], [0.000141379744, 0.0, 0.0, 0.0], [-0.103031613, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 27, 28, 29, 30, 31, 32, 20, 11, 12, 13, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 17, 18, 10, 19, 2, 5, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_577(xs):
    #Predicts Class 1
    function_dict = np.array([[0.539499998, 1.0, 2.0, 2.0], [-0.107500002, 3.0, 4.0, 0.0], [-0.235500008, 5.0, 6.0, 0.0], [-0.913499951, 7.0, 8.0, 4.0], [-0.0418920256, 0.0, 0.0, 0.0], [-0.970499992, 9.0, 10.0, 3.0], [-0.647500038, 11.0, 12.0, 1.0], [0.516499996, 13.0, 14.0, 2.0], [-0.0464605466, 0.0, 0.0, 0.0], [-0.334500015, 15.0, 16.0, 0.0], [0.0516030937, 0.0, 0.0, 0.0], [0.00181625481, 0.0, 0.0, 0.0], [-0.528499961, 17.0, 18.0, 1.0], [-0.270500004, 19.0, 20.0, 0.0], [0.081061393, 0.0, 0.0, 0.0], [-0.060241729, 0.0, 0.0, 0.0], [-0.948500037, 21.0, 22.0, 4.0], [-0.128284305, 0.0, 0.0, 0.0], [0.00444168737, 0.0, 0.0, 0.0], [-0.0561683849, 0.0, 0.0, 0.0], [0.0320434049, 0.0, 0.0, 0.0], [-0.0495389216, 0.0, 0.0, 0.0], [0.058340393, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 15, 21, 22, 10, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 16, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_578(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.594500005, 3.0, 4.0, 1.0], [-0.901499987, 5.0, 6.0, 4.0], [0.534500003, 7.0, 8.0, 2.0], [-0.997500002, 9.0, 10.0, 3.0], [-0.0606600083, 0.0, 0.0, 0.0], [-0.00125205878, 0.0, 0.0, 0.0], [-0.205500007, 11.0, 12.0, 0.0], [-0.943500042, 13.0, 14.0, 4.0], [-0.0392235741, 0.0, 0.0, 0.0], [-0.451499999, 15.0, 16.0, 1.0], [0.438499987, 17.0, 18.0, 2.0], [0.442499995, 19.0, 20.0, 2.0], [0.034791667, 0.0, 0.0, 0.0], [-0.862499952, 21.0, 22.0, 4.0], [-0.789999962, 23.0, 24.0, 4.0], [0.675999999, 25.0, 26.0, 2.0], [0.00620513968, 0.0, 0.0, 0.0], [-0.0798181146, 0.0, 0.0, 0.0], [-0.0236127619, 0.0, 0.0, 0.0], [0.0899671093, 0.0, 0.0, 0.0], [-0.12625286, 0.0, 0.0, 0.0], [0.0288144499, 0.0, 0.0, 0.0], [0.113455057, 0.0, 0.0, 0.0], [-0.0178537816, 0.0, 0.0, 0.0], [0.0147009874, 0.0, 0.0, 0.0], [-0.0597383082, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 21, 22, 9, 23, 24, 25, 26, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 4, 10, 15, 16, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_579(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.0203999989, 3.0, 4.0, 0.0], [0.0689999983, 5.0, 6.0, 0.0], [0.0110500008, 7.0, 8.0, 0.0], [0.0240500011, 9.0, 10.0, 0.0], [0.0143170971, 0.0, 0.0, 0.0], [-0.0876287967, 0.0, 0.0, 0.0], [0.00881000049, 11.0, 12.0, 0.0], [-0.154540464, 0.0, 0.0, 0.0], [0.205388874, 0.0, 0.0, 0.0], [0.02685, 13.0, 14.0, 0.0], [0.00471000001, 15.0, 16.0, 0.0], [0.121919036, 0.0, 0.0, 0.0], [0.0256000012, 17.0, 18.0, 0.0], [0.028549999, 19.0, 20.0, 0.0], [0.00159571343, 0.0, 0.0, 0.0], [-0.119446404, 0.0, 0.0, 0.0], [-0.00953984819, 0.0, 0.0, 0.0], [-0.23695454, 0.0, 0.0, 0.0], [0.269596845, 0.0, 0.0, 0.0], [-0.00129701057, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 9, 17, 18, 19, 20, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 10, 13, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_580(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 4.0], [-0.0493500009, 3.0, 4.0, 0.0], [-0.0551500022, 5.0, 6.0, 0.0], [-0.070100002, 7.0, 8.0, 0.0], [-0.0467999987, 9.0, 10.0, 0.0], [-0.0701999962, 11.0, 12.0, 0.0], [-0.0293500014, 13.0, 14.0, 0.0], [-0.0734999999, 15.0, 16.0, 0.0], [-0.0601500012, 17.0, 18.0, 0.0], [-0.346819252, 0.0, 0.0, 0.0], [-0.0297999997, 19.0, 20.0, 0.0], [-0.0742999986, 21.0, 22.0, 0.0], [-0.0627000034, 23.0, 24.0, 0.0], [-0.795000017, 25.0, 26.0, 2.0], [-0.00337000005, 27.0, 28.0, 0.0], [-0.0796499997, 29.0, 30.0, 0.0], [-0.174543589, 0.0, 0.0, 0.0], [0.230674699, 0.0, 0.0, 0.0], [-0.0534999967, 31.0, 32.0, 0.0], [-0.0428999998, 33.0, 34.0, 0.0], [-0.0154499998, 35.0, 36.0, 0.0], [-0.107500002, 37.0, 38.0, 0.0], [0.270466566, 0.0, 0.0, 0.0], [-0.388572276, 0.0, 0.0, 0.0], [-0.0477213152, 0.0, 0.0, 0.0], [0.373362958, 0.0, 0.0, 0.0], [0.0860816762, 0.0, 0.0, 0.0], [-0.00551000005, 39.0, 40.0, 0.0], [0.0101999994, 41.0, 42.0, 0.0], [-9.96690324e-06, 0.0, 0.0, 0.0], [0.169242501, 0.0, 0.0, 0.0], [-0.0702736452, 0.0, 0.0, 0.0], [0.156040102, 0.0, 0.0, 0.0], [0.110291995, 0.0, 0.0, 0.0], [-0.209942043, 0.0, 0.0, 0.0], [0.186731771, 0.0, 0.0, 0.0], [-0.00659480924, 0.0, 0.0, 0.0], [-0.00409761723, 0.0, 0.0, 0.0], [-0.134055883, 0.0, 0.0, 0.0], [-0.239607081, 0.0, 0.0, 0.0], [-0.062597245, 0.0, 0.0, 0.0], [0.263614655, 0.0, 0.0, 0.0], [-0.0553396717, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 17, 31, 32, 9, 33, 34, 35, 36, 37, 38, 22, 23, 24, 25, 26, 39, 40, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 18, 4, 10, 19, 20, 2, 5, 11, 21, 12, 6, 13, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_581(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 1.0], [-0.16049999, 3.0, 4.0, 0.0], [-0.060165748, 0.0, 0.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [-0.155499995, 7.0, 8.0, 0.0], [-0.38349998, 9.0, 10.0, 0.0], [-0.418500006, 11.0, 12.0, 0.0], [-0.212173983, 0.0, 0.0, 0.0], [-0.149500012, 13.0, 14.0, 0.0], [-0.401000023, 15.0, 16.0, 0.0], [-0.1655, 17.0, 18.0, 0.0], [0.0414304174, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 1.0], [-0.1505, 21.0, 22.0, 0.0], [-0.0127000008, 23.0, 24.0, 0.0], [0.0357028097, 0.0, 0.0, 0.0], [-0.084393166, 0.0, 0.0, 0.0], [0.0451697595, 0.0, 0.0, 0.0], [0.123384483, 0.0, 0.0, 0.0], [-0.137588367, 0.0, 0.0, 0.0], [-0.00728566386, 0.0, 0.0, 0.0], [0.0192388631, 0.0, 0.0, 0.0], [0.147035584, 0.0, 0.0, 0.0], [-0.0681802928, 0.0, 0.0, 0.0], [0.004085931, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 11, 19, 20, 7, 21, 22, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_582(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.797500014, 1.0, 2.0, 1.0], [-0.979499996, 3.0, 4.0, 4.0], [-0.102499999, 5.0, 6.0, 0.0], [-0.0290488806, 0.0, 0.0, 0.0], [-0.208499998, 7.0, 8.0, 0.0], [-0.166500002, 9.0, 10.0, 0.0], [0.5, 11.0, 12.0, 2.0], [-0.949999988, 13.0, 14.0, 4.0], [0.442499995, 15.0, 16.0, 2.0], [-0.1875, 17.0, 18.0, 0.0], [-0.631500006, 19.0, 20.0, 1.0], [-0.00971060432, 0.0, 0.0, 0.0], [-0.0729007125, 0.0, 0.0, 0.0], [0.0868641287, 0.0, 0.0, 0.0], [0.00547688967, 0.0, 0.0, 0.0], [0.0454609804, 0.0, 0.0, 0.0], [-0.0297876, 0.0, 0.0, 0.0], [-0.995499969, 21.0, 22.0, 3.0], [-0.0702640191, 0.0, 0.0, 0.0], [-0.0178524777, 0.0, 0.0, 0.0], [-0.560500026, 23.0, 24.0, 1.0], [-0.0322372206, 0.0, 0.0, 0.0], [0.0153805688, 0.0, 0.0, 0.0], [0.110444546, 0.0, 0.0, 0.0], [-0.00759455282, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 16, 21, 22, 18, 19, 23, 24, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 8, 2, 5, 9, 17, 10, 20, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_583(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.808500051, 1.0, 2.0, 1.0], [-0.96449995, 3.0, 4.0, 4.0], [-0.315500021, 5.0, 6.0, 0.0], [0.333999991, 7.0, 8.0, 2.0], [-0.0673762783, 0.0, 0.0, 0.0], [-0.476999998, 9.0, 10.0, 1.0], [-0.9745, 11.0, 12.0, 3.0], [-0.0165940579, 0.0, 0.0, 0.0], [0.0349283442, 0.0, 0.0, 0.0], [-0.916999996, 13.0, 14.0, 4.0], [-0.0114651257, 0.0, 0.0, 0.0], [-0.922500014, 15.0, 16.0, 4.0], [0.467999995, 17.0, 18.0, 2.0], [0.0903513506, 0.0, 0.0, 0.0], [0.0179649871, 0.0, 0.0, 0.0], [-0.963500023, 19.0, 20.0, 4.0], [-0.992499948, 21.0, 22.0, 3.0], [0.0294308551, 0.0, 0.0, 0.0], [-0.943500042, 23.0, 24.0, 3.0], [-0.0172010567, 0.0, 0.0, 0.0], [0.0598390251, 0.0, 0.0, 0.0], [-0.0780799687, 0.0, 0.0, 0.0], [0.0269989315, 0.0, 0.0, 0.0], [-0.104302377, 0.0, 0.0, 0.0], [-0.0106080845, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 14, 10, 19, 20, 21, 22, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 6, 11, 15, 16, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_584(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.568500042, 3.0, 4.0, 1.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.235500008, 7.0, 8.0, 0.0], [-0.2315, 9.0, 10.0, 0.0], [-0.318499982, 11.0, 12.0, 0.0], [-0.985499978, 13.0, 14.0, 3.0], [-0.0516942516, 0.0, 0.0, 0.0], [-0.60800004, 15.0, 16.0, 1.0], [0.0238917824, 0.0, 0.0, 0.0], [-0.173999995, 17.0, 18.0, 0.0], [0.0274683237, 0.0, 0.0, 0.0], [-0.0501534678, 0.0, 0.0, 0.0], [0.0792813674, 0.0, 0.0, 0.0], [-0.424499989, 19.0, 20.0, 1.0], [-0.179500014, 21.0, 22.0, 0.0], [0.0707018748, 0.0, 0.0, 0.0], [-0.106831633, 0.0, 0.0, 0.0], [-0.0154961338, 0.0, 0.0, 0.0], [0.0337601863, 0.0, 0.0, 0.0], [-0.0206108205, 0.0, 0.0, 0.0], [0.0270817764, 0.0, 0.0, 0.0], [-0.0323863402, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 21, 22, 16, 9, 17, 18, 11, 12, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 8, 15, 4, 10, 2, 5, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_585(xs):
    #Predicts Class 3
    function_dict = np.array([[0.503000021, 1.0, 2.0, 0.0], [0.46450001, 3.0, 4.0, 0.0], [0.537500024, 5.0, 6.0, 0.0], [0.446500003, 7.0, 8.0, 0.0], [0.478500009, 9.0, 10.0, 0.0], [0.521499991, 11.0, 12.0, 0.0], [0.543500006, 13.0, 14.0, 0.0], [0.436500013, 15.0, 16.0, 0.0], [0.125224307, 0.0, 0.0, 0.0], [-0.126336887, 0.0, 0.0, 0.0], [-0.0143132908, 0.0, 0.0, 0.0], [0.507500052, 17.0, 18.0, 0.0], [0.522500038, 19.0, 20.0, 0.0], [0.539999962, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [0.433499992, 25.0, 26.0, 0.0], [-0.127847657, 0.0, 0.0, 0.0], [0.0337546617, 0.0, 0.0, 0.0], [-0.0187452901, 0.0, 0.0, 0.0], [0.127690569, 0.0, 0.0, 0.0], [0.527500033, 27.0, 28.0, 0.0], [-0.0257853847, 0.0, 0.0, 0.0], [-0.102689482, 0.0, 0.0, 0.0], [0.615499973, 29.0, 30.0, 0.0], [-0.0921850875, 0.0, 0.0, 0.0], [-0.00195940468, 0.0, 0.0, 0.0], [0.100163095, 0.0, 0.0, 0.0], [-0.0239752587, 0.0, 0.0, 0.0], [0.0986555144, 0.0, 0.0, 0.0], [0.0108003411, 0.0, 0.0, 0.0], [0.0870624706, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 8, 9, 10, 17, 18, 19, 27, 28, 21, 22, 29, 30, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 11, 12, 20, 6, 13, 14, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_586(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.423500001, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.372500002, 5.0, 6.0, 0.0], [0.00752384588, 0.0, 0.0, 0.0], [0.0644846708, 0.0, 0.0, 0.0], [-0.395500004, 7.0, 8.0, 0.0], [-0.297500014, 9.0, 10.0, 0.0], [0.000358324207, 0.0, 0.0, 0.0], [-0.11683476, 0.0, 0.0, 0.0], [0.102118008, 0.0, 0.0, 0.0], [-0.292500019, 11.0, 12.0, 0.0], [-0.110085003, 0.0, 0.0, 0.0], [-0.162499994, 13.0, 14.0, 0.0], [0.0286202505, 0.0, 0.0, 0.0], [-0.0021776536, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 2, 5, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_587(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.538500011, 5.0, 6.0, 0.0], [0.5625, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.5255, 11.0, 12.0, 0.0], [0.0956554636, 0.0, 0.0, 0.0], [0.547500014, 13.0, 14.0, 0.0], [0.0928434506, 0.0, 0.0, 0.0], [-0.118004896, 0.0, 0.0, 0.0], [0.0198595449, 0.0, 0.0, 0.0], [0.430999994, 15.0, 16.0, 0.0], [-0.0704791397, 0.0, 0.0, 0.0], [0.527999997, 17.0, 18.0, 0.0], [-0.0718539804, 0.0, 0.0, 0.0], [0.344999999, 19.0, 20.0, 0.0], [0.43599999, 21.0, 22.0, 0.0], [-0.00672662305, 0.0, 0.0, 0.0], [0.0622616187, 0.0, 0.0, 0.0], [0.0233855825, 0.0, 0.0, 0.0], [-0.0974712819, 0.0, 0.0, 0.0], [0.0245091114, 0.0, 0.0, 0.0], [0.0874859244, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 10, 19, 20, 21, 22, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 5, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_588(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0434487686, 0.0, 0.0, 0.0], [-0.825500011, 3.0, 4.0, 1.0], [0.421000004, 5.0, 6.0, 2.0], [-0.71449995, 7.0, 8.0, 1.0], [0.0621037707, 0.0, 0.0, 0.0], [0.00933999382, 0.0, 0.0, 0.0], [-0.193500012, 9.0, 10.0, 0.0], [-0.644500017, 11.0, 12.0, 1.0], [0.504500031, 13.0, 14.0, 2.0], [-0.111499995, 15.0, 16.0, 0.0], [-0.199499995, 17.0, 18.0, 0.0], [-0.597499967, 19.0, 20.0, 1.0], [-0.0663740188, 0.0, 0.0, 0.0], [0.0059873932, 0.0, 0.0, 0.0], [0.0687084049, 0.0, 0.0, 0.0], [-0.0429194868, 0.0, 0.0, 0.0], [0.0768923163, 0.0, 0.0, 0.0], [-0.0125012714, 0.0, 0.0, 0.0], [-0.0545654558, 0.0, 0.0, 0.0], [0.0129073113, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 13, 14, 15, 16, 17, 18, 19, 20])
    branch_indices = np.array([0, 2, 3, 4, 7, 9, 10, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_589(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.956499994, 1.0, 2.0, 4.0], [-0.210500002, 3.0, 4.0, 0.0], [0.455500007, 5.0, 6.0, 2.0], [-0.497500002, 7.0, 8.0, 1.0], [-0.975499988, 9.0, 10.0, 4.0], [-0.993499994, 11.0, 12.0, 3.0], [0.516499996, 13.0, 14.0, 2.0], [-0.716500044, 15.0, 16.0, 1.0], [-0.0338851362, 0.0, 0.0, 0.0], [-0.0676035434, 0.0, 0.0, 0.0], [-0.171499997, 17.0, 18.0, 0.0], [-0.0387980044, 0.0, 0.0, 0.0], [0.0624443144, 0.0, 0.0, 0.0], [-0.930500031, 19.0, 20.0, 4.0], [-0.270500004, 21.0, 22.0, 0.0], [-0.221500009, 23.0, 24.0, 0.0], [0.126401916, 0.0, 0.0, 0.0], [-0.035112828, 0.0, 0.0, 0.0], [0.0752084404, 0.0, 0.0, 0.0], [-0.13619253, 0.0, 0.0, 0.0], [0.0052440688, 0.0, 0.0, 0.0], [-0.334500015, 25.0, 26.0, 0.0], [-0.215499997, 27.0, 28.0, 0.0], [0.0392458476, 0.0, 0.0, 0.0], [-0.0413485132, 0.0, 0.0, 0.0], [-0.0262091085, 0.0, 0.0, 0.0], [0.058497455, 0.0, 0.0, 0.0], [-0.0691792369, 0.0, 0.0, 0.0], [0.0215534307, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 17, 18, 11, 12, 19, 20, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 10, 2, 5, 6, 13, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_590(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.315500021, 3.0, 4.0, 0.0], [-0.917500019, 5.0, 6.0, 4.0], [-0.0680053905, 0.0, 0.0, 0.0], [-0.279500008, 7.0, 8.0, 0.0], [0.0577185415, 0.0, 0.0, 0.0], [-0.00102994579, 0.0, 0.0, 0.0], [0.0743640661, 0.0, 0.0, 0.0], [-0.526499987, 9.0, 10.0, 1.0], [-0.956499994, 11.0, 12.0, 4.0], [-0.484499991, 13.0, 14.0, 1.0], [-0.0169224739, 0.0, 0.0, 0.0], [0.0186677743, 0.0, 0.0, 0.0], [-0.0723649636, 0.0, 0.0, 0.0], [0.0045300764, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 12, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 4, 8, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_591(xs):
    #Predicts Class 3
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [0.0898121968, 0.0, 0.0, 0.0], [-0.0700286329, 0.0, 0.0, 0.0], [0.00833627582, 0.0, 0.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [-0.0694600269, 0.0, 0.0, 0.0], [0.528499961, 11.0, 12.0, 0.0], [0.541499972, 13.0, 14.0, 0.0], [-3.2055952e-05, 0.0, 0.0, 0.0], [-0.0961197615, 0.0, 0.0, 0.0], [0.0952042192, 0.0, 0.0, 0.0], [0.0100073703, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_592(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0131000001, 3.0, 4.0, 0.0], [0.025150001, 5.0, 6.0, 0.0], [0.0104999999, 7.0, 8.0, 0.0], [-0.247289971, 0.0, 0.0, 0.0], [0.131948635, 0.0, 0.0, 0.0], [0.0260500014, 9.0, 10.0, 0.0], [0.0079549998, 11.0, 12.0, 0.0], [0.145448521, 0.0, 0.0, 0.0], [-0.173570439, 0.0, 0.0, 0.0], [0.0293500014, 13.0, 14.0, 0.0], [0.00758500025, 15.0, 16.0, 0.0], [0.00974999927, 17.0, 18.0, 0.0], [0.02795, 19.0, 20.0, 0.0], [0.0353999995, 21.0, 22.0, 0.0], [-0.00160131382, 0.0, 0.0, 0.0], [0.119374745, 0.0, 0.0, 0.0], [-0.182950318, 0.0, 0.0, 0.0], [0.014017011, 0.0, 0.0, 0.0], [0.00674255611, 0.0, 0.0, 0.0], [0.200585157, 0.0, 0.0, 0.0], [-0.235327452, 0.0, 0.0, 0.0], [0.010903229, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_593(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [-0.0854376256, 0.0, 0.0, 0.0], [0.0725446716, 0.0, 0.0, 0.0], [0.00276655401, 0.0, 0.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [0.0721051618, 0.0, 0.0, 0.0], [0.528499961, 11.0, 12.0, 0.0], [0.541499972, 13.0, 14.0, 0.0], [-0.000199757444, 0.0, 0.0, 0.0], [0.0969500616, 0.0, 0.0, 0.0], [-0.0931109414, 0.0, 0.0, 0.0], [-0.0057464675, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_594(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.538499951, 1.0, 2.0, 1.0], [-0.777500033, 3.0, 4.0, 4.0], [-0.2095, 5.0, 6.0, 0.0], [-0.213499993, 7.0, 8.0, 0.0], [0.0649391934, 0.0, 0.0, 0.0], [-0.791499972, 9.0, 10.0, 4.0], [-0.0581590571, 0.0, 0.0, 0.0], [-0.759500027, 11.0, 12.0, 1.0], [-0.0580499992, 13.0, 14.0, 0.0], [0.0501509346, 0.0, 0.0, 0.0], [-0.0398905762, 0.0, 0.0, 0.0], [-0.786499977, 15.0, 16.0, 1.0], [0.636500001, 17.0, 18.0, 2.0], [-0.9745, 19.0, 20.0, 3.0], [-0.0468652174, 0.0, 0.0, 0.0], [-0.0195215493, 0.0, 0.0, 0.0], [0.0832002088, 0.0, 0.0, 0.0], [-0.0800859854, 0.0, 0.0, 0.0], [0.0231467821, 0.0, 0.0, 0.0], [0.0127783874, 0.0, 0.0, 0.0], [0.0611706935, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 20, 14, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_595(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.341499984, 1.0, 2.0, 0.0], [0.0366745032, 0.0, 0.0, 0.0], [-0.855499983, 3.0, 4.0, 4.0], [-0.915500045, 5.0, 6.0, 4.0], [-0.072618857, 0.0, 0.0, 0.0], [0.67750001, 7.0, 8.0, 2.0], [0.613999963, 9.0, 10.0, 2.0], [-0.313499987, 11.0, 12.0, 0.0], [0.0690261796, 0.0, 0.0, 0.0], [-0.726000011, 13.0, 14.0, 1.0], [-0.00872732326, 0.0, 0.0, 0.0], [-0.0856195837, 0.0, 0.0, 0.0], [-0.00720902579, 0.0, 0.0, 0.0], [0.0209295806, 0.0, 0.0, 0.0], [0.0905375332, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 8, 13, 14, 10, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_596(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.192499995, 1.0, 2.0, 0.0], [-0.196500003, 3.0, 4.0, 0.0], [-0.174499989, 5.0, 6.0, 0.0], [-0.977499962, 7.0, 8.0, 4.0], [0.0737196803, 0.0, 0.0, 0.0], [-0.0558817908, 0.0, 0.0, 0.0], [0.676499963, 9.0, 10.0, 2.0], [-0.0543971658, 0.0, 0.0, 0.0], [-0.919499993, 11.0, 12.0, 4.0], [-0.891499996, 13.0, 14.0, 4.0], [0.0464066043, 0.0, 0.0, 0.0], [-0.300500005, 15.0, 16.0, 0.0], [-0.864500046, 17.0, 18.0, 4.0], [-0.735000014, 19.0, 20.0, 1.0], [-0.0895204023, 0.0, 0.0, 0.0], [-0.0331993625, 0.0, 0.0, 0.0], [0.0471992046, 0.0, 0.0, 0.0], [-0.0715746954, 0.0, 0.0, 0.0], [0.0218223147, 0.0, 0.0, 0.0], [-0.0405793004, 0.0, 0.0, 0.0], [0.0539430939, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 17, 18, 4, 5, 19, 20, 14, 10])
    branch_indices = np.array([0, 1, 3, 8, 11, 12, 2, 6, 9, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_597(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.997500002, 3.0, 4.0, 1.0], [-0.0531961322, 0.0, 0.0, 0.0], [-0.851999998, 5.0, 6.0, 2.0], [0.101500005, 7.0, 8.0, 0.0], [-0.885499954, 9.0, 10.0, 2.0], [0.115500003, 11.0, 12.0, 0.0], [-0.0855499953, 13.0, 14.0, 0.0], [0.0371985845, 0.0, 0.0, 0.0], [-0.057099998, 15.0, 16.0, 0.0], [-0.0978273675, 0.0, 0.0, 0.0], [0.0242500007, 17.0, 18.0, 0.0], [0.454999983, 19.0, 20.0, 0.0], [0.00935423747, 0.0, 0.0, 0.0], [-0.16463086, 0.0, 0.0, 0.0], [-0.00926512573, 0.0, 0.0, 0.0], [0.00622560969, 0.0, 0.0, 0.0], [0.0453429855, 0.0, 0.0, 0.0], [-0.131151333, 0.0, 0.0, 0.0], [0.196326032, 0.0, 0.0, 0.0], [0.000192311491, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 17, 18, 19, 20, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 11, 12, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_598(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0825999975, 3.0, 4.0, 0.0], [0.0941499993, 5.0, 6.0, 0.0], [0.0760499984, 7.0, 8.0, 0.0], [0.0854000002, 9.0, 10.0, 0.0], [-0.104722701, 0.0, 0.0, 0.0], [0.111500002, 11.0, 12.0, 0.0], [0.03785, 13.0, 14.0, 0.0], [-0.18001087, 0.0, 0.0, 0.0], [0.153959125, 0.0, 0.0, 0.0], [0.0873000026, 15.0, 16.0, 0.0], [0.101500005, 17.0, 18.0, 0.0], [0.190499991, 19.0, 20.0, 0.0], [0.0293500014, 21.0, 22.0, 0.0], [0.0476500019, 23.0, 24.0, 0.0], [-0.0988154188, 0.0, 0.0, 0.0], [0.0867175534, 0.0, 0.0, 0.0], [0.110389814, 0.0, 0.0, 0.0], [0.0298832841, 0.0, 0.0, 0.0], [-0.115344487, 0.0, 0.0, 0.0], [0.196500003, 25.0, 26.0, 0.0], [1.50870869e-06, 0.0, 0.0, 0.0], [-0.138623297, 0.0, 0.0, 0.0], [0.198751956, 0.0, 0.0, 0.0], [-0.0124815442, 0.0, 0.0, 0.0], [0.0451443493, 0.0, 0.0, 0.0], [-0.0300605185, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 15, 16, 5, 17, 18, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 2, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_599(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0520776212, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0928553194, 0.0, 0.0, 0.0], [0.556499958, 7.0, 8.0, 0.0], [0.101851389, 0.0, 0.0, 0.0], [0.539999962, 9.0, 10.0, 0.0], [-0.0657759979, 0.0, 0.0, 0.0], [-0.0017249696, 0.0, 0.0, 0.0], [0.057998728, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 8, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_600(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0407351293, 0.0, 0.0, 0.0], [0.398499995, 3.0, 4.0, 2.0], [-0.203000009, 5.0, 6.0, 0.0], [0.426499993, 7.0, 8.0, 2.0], [0.0677225888, 0.0, 0.0, 0.0], [-0.00254343264, 0.0, 0.0, 0.0], [-0.0551989377, 0.0, 0.0, 0.0], [-0.179500014, 9.0, 10.0, 0.0], [-0.24149999, 11.0, 12.0, 0.0], [0.669499993, 13.0, 14.0, 2.0], [0.0200749189, 0.0, 0.0, 0.0], [-0.0331598781, 0.0, 0.0, 0.0], [0.0625512451, 0.0, 0.0, 0.0], [-0.0142549574, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 7, 11, 12, 13, 14])
    branch_indices = np.array([0, 2, 3, 4, 8, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_601(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.228500009, 3.0, 4.0, 0.0], [-0.878499985, 5.0, 6.0, 4.0], [-0.74150002, 7.0, 8.0, 1.0], [-0.571500003, 9.0, 10.0, 1.0], [-0.334500015, 11.0, 12.0, 0.0], [-0.717000008, 13.0, 14.0, 1.0], [-0.804499984, 15.0, 16.0, 1.0], [0.555500031, 17.0, 18.0, 2.0], [-0.817499995, 19.0, 20.0, 1.0], [0.0599468984, 0.0, 0.0, 0.0], [-0.0939769447, 0.0, 0.0, 0.0], [-0.281499982, 21.0, 22.0, 0.0], [0.0595192686, 0.0, 0.0, 0.0], [-0.0063460907, 0.0, 0.0, 0.0], [-0.01391201, 0.0, 0.0, 0.0], [0.13258855, 0.0, 0.0, 0.0], [-0.0612924471, 0.0, 0.0, 0.0], [0.0619314164, 0.0, 0.0, 0.0], [0.0338059664, 0.0, 0.0, 0.0], [0.436500013, 23.0, 24.0, 2.0], [0.0429190844, 0.0, 0.0, 0.0], [-0.979499996, 25.0, 26.0, 3.0], [0.00475340802, 0.0, 0.0, 0.0], [-0.0696265921, 0.0, 0.0, 0.0], [-0.00531231752, 0.0, 0.0, 0.0], [-0.0696501732, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 23, 24, 10, 11, 21, 25, 26, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 8, 4, 9, 20, 2, 5, 12, 22, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_602(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.415000021, 1.0, 2.0, 1.0], [-0.470499992, 3.0, 4.0, 1.0], [-0.977499962, 5.0, 6.0, 3.0], [-0.509500027, 7.0, 8.0, 1.0], [-0.250499994, 9.0, 10.0, 0.0], [0.0437204093, 0.0, 0.0, 0.0], [0.00709704263, 0.0, 0.0, 0.0], [0.62349999, 11.0, 12.0, 2.0], [0.0479012989, 0.0, 0.0, 0.0], [0.0136275534, 0.0, 0.0, 0.0], [-0.0723018795, 0.0, 0.0, 0.0], [0.557500005, 13.0, 14.0, 2.0], [-0.996500015, 15.0, 16.0, 3.0], [0.00172717054, 0.0, 0.0, 0.0], [-0.0532758869, 0.0, 0.0, 0.0], [0.0875850692, 0.0, 0.0, 0.0], [-0.0208359007, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_603(xs):
    #Predicts Class 3
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [0.116122112, 0.0, 0.0, 0.0], [-0.0872042775, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [-0.0679786131, 0.0, 0.0, 0.0], [0.0531759635, 0.0, 0.0, 0.0], [-0.0306036528, 0.0, 0.0, 0.0], [0.539999962, 13.0, 14.0, 0.0], [0.0819691122, 0.0, 0.0, 0.0], [0.00031881922, 0.0, 0.0, 0.0], [-0.0883642584, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_604(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.1105, 3.0, 4.0, 0.0], [-0.1505, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [-0.188499987, 11.0, 12.0, 0.0], [-0.607499957, 13.0, 14.0, 2.0], [0.0892499983, 15.0, 16.0, 0.0], [-0.214977369, 0.0, 0.0, 0.0], [0.192204699, 0.0, 0.0, 0.0], [0.193500012, 17.0, 18.0, 0.0], [-0.260500014, 19.0, 20.0, 0.0], [0.112758666, 0.0, 0.0, 0.0], [-0.0414500013, 21.0, 22.0, 0.0], [-0.467500001, 23.0, 24.0, 2.0], [0.0883999988, 25.0, 26.0, 0.0], [0.0917500034, 27.0, 28.0, 0.0], [-0.122472405, 0.0, 0.0, 0.0], [0.194499999, 29.0, 30.0, 0.0], [-0.333499998, 31.0, 32.0, 0.0], [-0.0845973119, 0.0, 0.0, 0.0], [-0.99849999, 33.0, 34.0, 1.0], [0.005045, 35.0, 36.0, 0.0], [0.0730984956, 0.0, 0.0, 0.0], [-0.00765294023, 0.0, 0.0, 0.0], [0.00246040849, 0.0, 0.0, 0.0], [-0.20186621, 0.0, 0.0, 0.0], [0.134848073, 0.0, 0.0, 0.0], [0.0167551227, 0.0, 0.0, 0.0], [0.0731473118, 0.0, 0.0, 0.0], [-0.00657017622, 0.0, 0.0, 0.0], [-0.0408970416, 0.0, 0.0, 0.0], [0.0958994702, 0.0, 0.0, 0.0], [-0.220529094, 0.0, 0.0, 0.0], [-0.0489195175, 0.0, 0.0, 0.0], [0.0796440616, 0.0, 0.0, 0.0], [-0.0650491789, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 9, 17, 29, 30, 31, 32, 20, 12, 33, 34, 35, 36, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 18, 2, 5, 11, 19, 6, 13, 21, 22, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_605(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.112448558, 0.0, 0.0, 0.0], [0.0888780877, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.0699060187, 0.0, 0.0, 0.0], [-0.0509395152, 0.0, 0.0, 0.0], [0.0395895131, 0.0, 0.0, 0.0], [0.539999962, 13.0, 14.0, 0.0], [-0.0764937177, 0.0, 0.0, 0.0], [0.000960386824, 0.0, 0.0, 0.0], [0.0908420533, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_606(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [-0.80250001, 3.0, 4.0, 1.0], [-0.971500039, 5.0, 6.0, 4.0], [-0.992499948, 7.0, 8.0, 3.0], [0.0566917583, 0.0, 0.0, 0.0], [-0.052409295, 0.0, 0.0, 0.0], [-0.300500005, 9.0, 10.0, 0.0], [-0.825500011, 11.0, 12.0, 1.0], [-0.823500037, 13.0, 14.0, 1.0], [-0.0477152541, 0.0, 0.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [0.0172361303, 0.0, 0.0, 0.0], [-0.0821805298, 0.0, 0.0, 0.0], [-0.0163251888, 0.0, 0.0, 0.0], [0.0738633424, 0.0, 0.0, 0.0], [-0.213499993, 17.0, 18.0, 0.0], [-0.179500014, 19.0, 20.0, 0.0], [0.00789704546, 0.0, 0.0, 0.0], [0.0998070091, 0.0, 0.0, 0.0], [-0.0659623742, 0.0, 0.0, 0.0], [0.0117078768, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_607(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.361499995, 1.0, 2.0, 0.0], [0.0418831669, 0.0, 0.0, 0.0], [-0.906499982, 3.0, 4.0, 4.0], [-0.6875, 5.0, 6.0, 1.0], [-0.880499959, 7.0, 8.0, 4.0], [-0.978500009, 9.0, 10.0, 3.0], [-0.594500005, 11.0, 12.0, 1.0], [-0.0639912114, 0.0, 0.0, 0.0], [-0.855499983, 13.0, 14.0, 4.0], [-0.736500025, 15.0, 16.0, 1.0], [-0.968500018, 17.0, 18.0, 3.0], [-0.98150003, 19.0, 20.0, 3.0], [-0.996500015, 21.0, 22.0, 3.0], [0.0464517996, 0.0, 0.0, 0.0], [-0.0428998694, 0.0, 0.0, 0.0], [0.00276897661, 0.0, 0.0, 0.0], [-0.0842854604, 0.0, 0.0, 0.0], [0.0711801648, 0.0, 0.0, 0.0], [-0.0150639601, 0.0, 0.0, 0.0], [0.081297487, 0.0, 0.0, 0.0], [-0.0201573279, 0.0, 0.0, 0.0], [-0.0473904237, 0.0, 0.0, 0.0], [0.0183157921, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 19, 20, 21, 22, 7, 13, 14])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_608(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.968500018, 1.0, 2.0, 4.0], [0.453500003, 3.0, 4.0, 2.0], [0.468500018, 5.0, 6.0, 2.0], [-0.194499999, 7.0, 8.0, 0.0], [-0.0706987232, 0.0, 0.0, 0.0], [0.411000013, 9.0, 10.0, 2.0], [-0.872500002, 11.0, 12.0, 4.0], [0.000521452923, 0.0, 0.0, 0.0], [0.0455749556, 0.0, 0.0, 0.0], [0.0226998497, 0.0, 0.0, 0.0], [-0.0792121813, 0.0, 0.0, 0.0], [-0.975499988, 13.0, 14.0, 3.0], [-0.962499976, 15.0, 16.0, 3.0], [0.578500032, 17.0, 18.0, 2.0], [-0.634500027, 19.0, 20.0, 1.0], [-0.167999998, 21.0, 22.0, 0.0], [-0.0532941669, 0.0, 0.0, 0.0], [0.0530365892, 0.0, 0.0, 0.0], [-0.0336314514, 0.0, 0.0, 0.0], [0.0135309882, 0.0, 0.0, 0.0], [0.0973122641, 0.0, 0.0, 0.0], [0.0384518541, 0.0, 0.0, 0.0], [-0.0238137636, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 10, 17, 18, 19, 20, 21, 22, 16])
    branch_indices = np.array([0, 1, 3, 2, 5, 6, 11, 13, 14, 12, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_609(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.478500009, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.429499984, 15.0, 16.0, 0.0], [0.0887264311, 0.0, 0.0, 0.0], [-0.12259198, 0.0, 0.0, 0.0], [-0.0373263434, 0.0, 0.0, 0.0], [0.0281080157, 0.0, 0.0, 0.0], [0.148238033, 0.0, 0.0, 0.0], [0.506000042, 17.0, 18.0, 0.0], [0.136225522, 0.0, 0.0, 0.0], [0.421999991, 19.0, 20.0, 0.0], [0.433499992, 21.0, 22.0, 0.0], [-0.0985795185, 0.0, 0.0, 0.0], [0.522500038, 23.0, 24.0, 0.0], [-0.00095951336, 0.0, 0.0, 0.0], [0.107765459, 0.0, 0.0, 0.0], [-0.114448816, 0.0, 0.0, 0.0], [-0.00209225062, 0.0, 0.0, 0.0], [0.0625392273, 0.0, 0.0, 0.0], [-0.0107610114, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 11, 12, 17, 23, 24, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 13, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_610(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.192499995, 3.0, 4.0, 0.0], [0.0559670851, 0.0, 0.0, 0.0], [0.152999997, 5.0, 6.0, 0.0], [0.195499986, 7.0, 8.0, 0.0], [0.0945499986, 9.0, 10.0, 0.0], [0.111379057, 0.0, 0.0, 0.0], [-0.081774123, 0.0, 0.0, 0.0], [-0.0125928326, 0.0, 0.0, 0.0], [0.0912000015, 11.0, 12.0, 0.0], [0.1105, 13.0, 14.0, 0.0], [-0.00193929917, 0.0, 0.0, 0.0], [0.0882446244, 0.0, 0.0, 0.0], [-0.142273739, 0.0, 0.0, 0.0], [-0.0043443474, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_611(xs):
    #Predicts Class 5
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.479499996, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.409500003, 15.0, 16.0, 0.0], [-0.0870611966, 0.0, 0.0, 0.0], [0.123512909, 0.0, 0.0, 0.0], [0.039167732, 0.0, 0.0, 0.0], [-0.0267731566, 0.0, 0.0, 0.0], [-0.147746712, 0.0, 0.0, 0.0], [0.506000042, 17.0, 18.0, 0.0], [-0.130342364, 0.0, 0.0, 0.0], [0.405499995, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.100513026, 0.0, 0.0, 0.0], [0.522500038, 23.0, 24.0, 0.0], [0.00187678984, 0.0, 0.0, 0.0], [-0.125446767, 0.0, 0.0, 0.0], [0.0648906603, 0.0, 0.0, 0.0], [-0.018274745, 0.0, 0.0, 0.0], [-0.0600613616, 0.0, 0.0, 0.0], [0.0154626332, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 11, 12, 17, 23, 24, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 13, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_612(xs):
    #Predicts Class 0
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [-0.560500026, 3.0, 4.0, 1.0], [-0.712499976, 5.0, 6.0, 4.0], [-0.951499999, 7.0, 8.0, 3.0], [-0.0562148951, 0.0, 0.0, 0.0], [-0.232999995, 9.0, 10.0, 0.0], [-0.0407577269, 0.0, 0.0, 0.0], [-0.881000042, 11.0, 12.0, 4.0], [-0.926499963, 13.0, 14.0, 4.0], [0.00637806486, 0.0, 0.0, 0.0], [0.0815348029, 0.0, 0.0, 0.0], [0.411500007, 15.0, 16.0, 2.0], [0.612499952, 17.0, 18.0, 2.0], [0.0595387891, 0.0, 0.0, 0.0], [-0.00622631749, 0.0, 0.0, 0.0], [-0.0446121581, 0.0, 0.0, 0.0], [0.020268511, 0.0, 0.0, 0.0], [-0.00587555999, 0.0, 0.0, 0.0], [-0.0794626325, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_613(xs):
    #Predicts Class 1
    function_dict = np.array([[0.0463999994, 1.0, 2.0, 0.0], [-0.138500005, 3.0, 4.0, 0.0], [0.0429543853, 0.0, 0.0, 0.0], [-0.951499999, 5.0, 6.0, 4.0], [-0.0613671355, 0.0, 0.0, 0.0], [-0.183499992, 7.0, 8.0, 0.0], [-0.244500011, 9.0, 10.0, 0.0], [-0.228500009, 11.0, 12.0, 0.0], [0.0680885389, 0.0, 0.0, 0.0], [-0.789999962, 13.0, 14.0, 1.0], [-0.933500051, 15.0, 16.0, 4.0], [0.0340731181, 0.0, 0.0, 0.0], [-0.0241847783, 0.0, 0.0, 0.0], [-0.039521981, 0.0, 0.0, 0.0], [0.0238222424, 0.0, 0.0, 0.0], [-0.0941291675, 0.0, 0.0, 0.0], [0.0053968681, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_614(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.962499976, 3.0, 4.0, 4.0], [0.654500008, 5.0, 6.0, 2.0], [-0.70449996, 7.0, 8.0, 1.0], [-0.958500028, 9.0, 10.0, 4.0], [0.00789848156, 0.0, 0.0, 0.0], [0.040853139, 0.0, 0.0, 0.0], [-0.770500004, 11.0, 12.0, 1.0], [-0.0722130612, 0.0, 0.0, 0.0], [0.0597005934, 0.0, 0.0, 0.0], [-0.700500011, 13.0, 14.0, 1.0], [-0.0240151547, 0.0, 0.0, 0.0], [0.0421097875, 0.0, 0.0, 0.0], [-0.973500013, 15.0, 16.0, 3.0], [-0.490500003, 17.0, 18.0, 1.0], [-0.0638323575, 0.0, 0.0, 0.0], [0.00512065785, 0.0, 0.0, 0.0], [0.0263650566, 0.0, 0.0, 0.0], [-0.0377175584, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 15, 16, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 10, 13, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_615(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [0.534000039, 3.0, 4.0, 0.0], [-0.00567999994, 5.0, 6.0, 0.0], [0.513000011, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.066399999, 11.0, 12.0, 0.0], [0.0533500016, 13.0, 14.0, 0.0], [0.503000021, 15.0, 16.0, 0.0], [0.5255, 17.0, 18.0, 0.0], [0.539999962, 19.0, 20.0, 0.0], [-0.114307225, 0.0, 0.0, 0.0], [-0.1215, 21.0, 22.0, 0.0], [-0.721500039, 23.0, 24.0, 2.0], [-0.145537764, 0.0, 0.0, 0.0], [-0.626000047, 25.0, 26.0, 2.0], [0.466499984, 27.0, 28.0, 0.0], [0.117741115, 0.0, 0.0, 0.0], [-0.0865233615, 0.0, 0.0, 0.0], [-0.0151478248, 0.0, 0.0, 0.0], [0.155530304, 0.0, 0.0, 0.0], [0.543500006, 29.0, 30.0, 0.0], [-0.1435, 31.0, 32.0, 0.0], [-0.127173692, 0.0, 0.0, 0.0], [0.0211574137, 0.0, 0.0, 0.0], [0.119648717, 0.0, 0.0, 0.0], [0.0716414675, 0.0, 0.0, 0.0], [-0.068488881, 0.0, 0.0, 0.0], [0.00227962364, 0.0, 0.0, 0.0], [-0.138687253, 0.0, 0.0, 0.0], [-0.0636582896, 0.0, 0.0, 0.0], [0.0402239524, 0.0, 0.0, 0.0], [-0.062983796, 0.0, 0.0, 0.0], [0.0980618224, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 17, 18, 19, 29, 30, 10, 31, 32, 22, 23, 24, 13, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 9, 20, 2, 5, 11, 21, 12, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_616(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0867500007, 3.0, 4.0, 0.0], [0.0941499993, 5.0, 6.0, 0.0], [0.082949996, 7.0, 8.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [-0.111024663, 0.0, 0.0, 0.0], [0.111500002, 11.0, 12.0, 0.0], [0.0757500008, 13.0, 14.0, 0.0], [-0.139821425, 0.0, 0.0, 0.0], [0.128081992, 0.0, 0.0, 0.0], [0.0888999999, 15.0, 16.0, 0.0], [0.100432135, 0.0, 0.0, 0.0], [0.190499991, 17.0, 18.0, 0.0], [0.0560500026, 19.0, 20.0, 0.0], [0.109569818, 0.0, 0.0, 0.0], [-0.010237162, 0.0, 0.0, 0.0], [0.0554649122, 0.0, 0.0, 0.0], [-0.11739102, 0.0, 0.0, 0.0], [0.194499999, 21.0, 22.0, 0.0], [0.000532880891, 0.0, 0.0, 0.0], [-0.0829058886, 0.0, 0.0, 0.0], [0.0624028519, 0.0, 0.0, 0.0], [-0.0121816322, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 15, 16, 5, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_617(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.421000004, 3.0, 4.0, 0.0], [0.172499999, 5.0, 6.0, 0.0], [-0.0793740228, 0.0, 0.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.527500033, 11.0, 12.0, 0.0], [0.109434262, 0.0, 0.0, 0.0], [-0.38349998, 13.0, 14.0, 0.0], [-0.923500001, 15.0, 16.0, 2.0], [-0.996500015, 17.0, 18.0, 1.0], [-0.747500002, 19.0, 20.0, 2.0], [-0.0441554785, 0.0, 0.0, 0.0], [-0.0977320895, 0.0, 0.0, 0.0], [-0.16049999, 21.0, 22.0, 0.0], [-0.012384438, 0.0, 0.0, 0.0], [0.0580963977, 0.0, 0.0, 0.0], [-0.127886251, 0.0, 0.0, 0.0], [0.0204281677, 0.0, 0.0, 0.0], [0.253000021, 23.0, 24.0, 0.0], [-0.0256238375, 0.0, 0.0, 0.0], [0.0499417372, 0.0, 0.0, 0.0], [-0.00944022182, 0.0, 0.0, 0.0], [-8.75985643e-06, 0.0, 0.0, 0.0], [0.0983294994, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 13, 21, 22, 15, 16, 17, 18, 23, 24, 20, 12])
    branch_indices = np.array([0, 1, 4, 8, 14, 2, 5, 9, 10, 6, 11, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_618(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.833500028, 1.0, 2.0, 4.0], [-0.578999996, 3.0, 4.0, 1.0], [-0.213499993, 5.0, 6.0, 0.0], [-0.674499989, 7.0, 8.0, 1.0], [-0.0591108687, 0.0, 0.0, 0.0], [-0.754000008, 9.0, 10.0, 4.0], [-0.730999947, 11.0, 12.0, 4.0], [-0.759500027, 13.0, 14.0, 1.0], [-0.919499993, 15.0, 16.0, 4.0], [0.0897804424, 0.0, 0.0, 0.0], [-0.00983444881, 0.0, 0.0, 0.0], [-0.0403129905, 0.0, 0.0, 0.0], [0.00517819589, 0.0, 0.0, 0.0], [-0.107500002, 17.0, 18.0, 0.0], [-0.263500005, 19.0, 20.0, 0.0], [-0.213499993, 21.0, 22.0, 0.0], [0.0770028234, 0.0, 0.0, 0.0], [-0.00226153084, 0.0, 0.0, 0.0], [0.0543567128, 0.0, 0.0, 0.0], [0.0206369925, 0.0, 0.0, 0.0], [-0.0488149896, 0.0, 0.0, 0.0], [-0.0414603092, 0.0, 0.0, 0.0], [0.0336668119, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 16, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_619(xs):
    #Predicts Class 1
    function_dict = np.array([[0.602499962, 1.0, 2.0, 2.0], [-0.75849998, 3.0, 4.0, 1.0], [-0.973500013, 5.0, 6.0, 3.0], [-0.770500004, 7.0, 8.0, 1.0], [-0.74150002, 9.0, 10.0, 1.0], [-0.528499961, 11.0, 12.0, 1.0], [0.0177452955, 0.0, 0.0, 0.0], [-0.997500002, 13.0, 14.0, 3.0], [-0.0565351136, 0.0, 0.0, 0.0], [0.0796165839, 0.0, 0.0, 0.0], [-0.222499996, 15.0, 16.0, 0.0], [-0.682999969, 17.0, 18.0, 1.0], [0.0192158464, 0.0, 0.0, 0.0], [-0.218499988, 19.0, 20.0, 0.0], [-0.969500005, 21.0, 22.0, 4.0], [-0.296499997, 23.0, 24.0, 0.0], [-0.202500001, 25.0, 26.0, 0.0], [-0.00951639563, 0.0, 0.0, 0.0], [-0.0924343243, 0.0, 0.0, 0.0], [-0.0491432957, 0.0, 0.0, 0.0], [0.00490968209, 0.0, 0.0, 0.0], [0.0624220595, 0.0, 0.0, 0.0], [-0.0139465965, 0.0, 0.0, 0.0], [0.062200997, 0.0, 0.0, 0.0], [-0.0652022138, 0.0, 0.0, 0.0], [0.0769475996, 0.0, 0.0, 0.0], [0.00809669401, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 23, 24, 25, 26, 17, 18, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 15, 16, 2, 5, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_620(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.186500013, 3.0, 4.0, 0.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.756500006, 7.0, 8.0, 1.0], [-0.897500038, 9.0, 10.0, 4.0], [-0.318499982, 11.0, 12.0, 0.0], [-0.825999975, 13.0, 14.0, 4.0], [0.0325591378, 0.0, 0.0, 0.0], [-0.222499996, 15.0, 16.0, 0.0], [-0.631500006, 17.0, 18.0, 1.0], [0.670000017, 19.0, 20.0, 2.0], [0.02710649, 0.0, 0.0, 0.0], [-0.0419613086, 0.0, 0.0, 0.0], [0.0632597357, 0.0, 0.0, 0.0], [0.00252398313, 0.0, 0.0, 0.0], [-0.979499996, 21.0, 22.0, 3.0], [-0.203500003, 23.0, 24.0, 0.0], [-0.108500004, 25.0, 26.0, 0.0], [-0.0173395872, 0.0, 0.0, 0.0], [-0.0453391559, 0.0, 0.0, 0.0], [0.00807202049, 0.0, 0.0, 0.0], [0.0247489996, 0.0, 0.0, 0.0], [-0.0579814427, 0.0, 0.0, 0.0], [-0.0876970142, 0.0, 0.0, 0.0], [-0.0211379249, 0.0, 0.0, 0.0], [0.0989878625, 0.0, 0.0, 0.0], [-0.0256992597, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 21, 22, 23, 24, 25, 26, 18, 19, 20, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 8, 15, 16, 4, 9, 17, 10, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_621(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 4.0], [-0.127499998, 3.0, 4.0, 0.0], [-0.0579499975, 5.0, 6.0, 0.0], [-0.132499993, 7.0, 8.0, 0.0], [-0.0392000005, 9.0, 10.0, 0.0], [-0.0698499978, 11.0, 12.0, 0.0], [-0.0293500014, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.0428999998, 19.0, 20.0, 0.0], [-0.0307, 21.0, 22.0, 0.0], [-0.0742999986, 23.0, 24.0, 0.0], [0.2685664, 0.0, 0.0, 0.0], [-0.235466063, 0.0, 0.0, 0.0], [-0.00337000005, 25.0, 26.0, 0.0], [-0.142500013, 27.0, 28.0, 0.0], [-0.122412078, 0.0, 0.0, 0.0], [-0.273424208, 0.0, 0.0, 0.0], [0.0819116384, 0.0, 0.0, 0.0], [-0.0467999987, 29.0, 30.0, 0.0], [0.296141267, 0.0, 0.0, 0.0], [-0.0375999995, 31.0, 32.0, 0.0], [-0.0297999997, 33.0, 34.0, 0.0], [-0.923500001, 35.0, 36.0, 2.0], [-0.23115252, 0.0, 0.0, 0.0], [0.169829562, 0.0, 0.0, 0.0], [0.0101999994, 37.0, 38.0, 0.0], [-0.00909068715, 0.0, 0.0, 0.0], [0.026588114, 0.0, 0.0, 0.0], [0.0226305816, 0.0, 0.0, 0.0], [-0.0743008703, 0.0, 0.0, 0.0], [-0.198364452, 0.0, 0.0, 0.0], [-0.0671055168, 0.0, 0.0, 0.0], [0.243807122, 0.0, 0.0, 0.0], [-0.00195396133, 0.0, 0.0, 0.0], [0.0899285376, 0.0, 0.0, 0.0], [-0.0528781936, 0.0, 0.0, 0.0], [-0.210617185, 0.0, 0.0, 0.0], [0.0237856451, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 17, 18, 29, 30, 20, 31, 32, 33, 34, 35, 36, 24, 12, 13, 25, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 9, 19, 10, 21, 22, 2, 5, 11, 23, 6, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_622(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.407499999, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.393000007, 5.0, 6.0, 0.0], [-0.0316192433, 0.0, 0.0, 0.0], [0.0949388817, 0.0, 0.0, 0.0], [-0.106791869, 0.0, 0.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [-0.297500014, 9.0, 10.0, 0.0], [-0.822000027, 11.0, 12.0, 2.0], [0.0915405378, 0.0, 0.0, 0.0], [-0.282999992, 13.0, 14.0, 0.0], [-0.997500002, 15.0, 16.0, 1.0], [-0.706500053, 17.0, 18.0, 2.0], [-0.0449368171, 0.0, 0.0, 0.0], [0.00280870427, 0.0, 0.0, 0.0], [-0.0950387195, 0.0, 0.0, 0.0], [0.00804266986, 0.0, 0.0, 0.0], [0.0723777637, 0.0, 0.0, 0.0], [-0.0258531049, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 13, 14, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 2, 6, 7, 10, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_623(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.29549998, 3.0, 4.0, 0.0], [-0.158500001, 5.0, 6.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.108239003, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.401000023, 13.0, 14.0, 0.0], [0.0854271203, 0.0, 0.0, 0.0], [-0.168500006, 15.0, 16.0, 0.0], [-0.0102321459, 0.0, 0.0, 0.0], [-0.0331500024, 17.0, 18.0, 0.0], [-0.923500001, 19.0, 20.0, 2.0], [-0.420000017, 21.0, 22.0, 0.0], [-0.0712492168, 0.0, 0.0, 0.0], [-0.0104318559, 0.0, 0.0, 0.0], [-0.114118114, 0.0, 0.0, 0.0], [-0.149500012, 23.0, 24.0, 0.0], [-0.0123999994, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.999500036, 29.0, 30.0, 4.0], [-0.0281159077, 0.0, 0.0, 0.0], [0.0692914277, 0.0, 0.0, 0.0], [0.0375941992, 0.0, 0.0, 0.0], [-0.238017082, 0.0, 0.0, 0.0], [0.0980576649, 0.0, 0.0, 0.0], [-0.00428408803, 0.0, 0.0, 0.0], [0.132632166, 0.0, 0.0, 0.0], [0.00216460414, 0.0, 0.0, 0.0], [-0.104796574, 0.0, 0.0, 0.0], [0.0410057344, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 15, 16, 10, 5, 23, 24, 25, 26, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 2, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_624(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.860499978, 1.0, 2.0, 1.0], [0.0400522389, 0.0, 0.0, 0.0], [0.338, 3.0, 4.0, 2.0], [-0.0570415296, 0.0, 0.0, 0.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.987499952, 7.0, 8.0, 3.0], [-0.797500014, 9.0, 10.0, 1.0], [-0.0608584359, 0.0, 0.0, 0.0], [0.0105433781, 0.0, 0.0, 0.0], [-0.987499952, 11.0, 12.0, 3.0], [-0.102499999, 13.0, 14.0, 0.0], [0.0606093034, 0.0, 0.0, 0.0], [-0.00544159906, 0.0, 0.0, 0.0], [0.010074608, 0.0, 0.0, 0.0], [-0.051717367, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 8, 11, 12, 13, 14])
    branch_indices = np.array([0, 2, 4, 5, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_625(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.860499978, 1.0, 2.0, 1.0], [-0.0400635637, 0.0, 0.0, 0.0], [0.386500001, 3.0, 4.0, 2.0], [-0.776499987, 5.0, 6.0, 1.0], [-0.202500001, 7.0, 8.0, 0.0], [-0.218499988, 9.0, 10.0, 0.0], [-0.0148325702, 0.0, 0.0, 0.0], [0.635499954, 11.0, 12.0, 2.0], [-0.74150002, 13.0, 14.0, 1.0], [0.00909688696, 0.0, 0.0, 0.0], [0.0891796947, 0.0, 0.0, 0.0], [-0.508000016, 15.0, 16.0, 1.0], [-0.314999998, 17.0, 18.0, 0.0], [-0.0787561983, 0.0, 0.0, 0.0], [0.542500019, 19.0, 20.0, 2.0], [0.0298616625, 0.0, 0.0, 0.0], [-0.0210024454, 0.0, 0.0, 0.0], [0.0238518249, 0.0, 0.0, 0.0], [-0.053889811, 0.0, 0.0, 0.0], [0.0444404259, 0.0, 0.0, 0.0], [-0.0230963603, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 6, 15, 16, 17, 18, 13, 19, 20])
    branch_indices = np.array([0, 2, 3, 5, 4, 7, 11, 12, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_626(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.45450002, 1.0, 2.0, 1.0], [-0.102499999, 3.0, 4.0, 0.0], [-0.932500005, 5.0, 6.0, 4.0], [-0.816499949, 7.0, 8.0, 4.0], [0.0402856246, 0.0, 0.0, 0.0], [-0.0210749693, 0.0, 0.0, 0.0], [-0.268999994, 9.0, 10.0, 0.0], [-0.581499994, 11.0, 12.0, 1.0], [0.722000003, 13.0, 14.0, 2.0], [0.0641595796, 0.0, 0.0, 0.0], [0.0158265531, 0.0, 0.0, 0.0], [-0.630499959, 15.0, 16.0, 1.0], [-0.913499951, 17.0, 18.0, 4.0], [-0.0931467414, 0.0, 0.0, 0.0], [0.00482419366, 0.0, 0.0, 0.0], [0.00261007622, 0.0, 0.0, 0.0], [-0.100868553, 0.0, 0.0, 0.0], [-0.0143854711, 0.0, 0.0, 0.0], [0.0745876878, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_627(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0569499992, 1.0, 2.0, 0.0], [-0.0594500005, 3.0, 4.0, 0.0], [-0.0496499985, 5.0, 6.0, 0.0], [-0.066399999, 7.0, 8.0, 0.0], [-0.200613528, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.0460999981, 11.0, 12.0, 0.0], [-0.0904500037, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.258483052, 0.0, 0.0, 0.0], [-0.00828042813, 0.0, 0.0, 0.0], [-0.130951509, 0.0, 0.0, 0.0], [-0.0435499996, 17.0, 18.0, 0.0], [-0.0910999998, 19.0, 20.0, 0.0], [-0.851999998, 21.0, 22.0, 2.0], [0.015425384, 0.0, 0.0, 0.0], [0.124409132, 0.0, 0.0, 0.0], [0.193981498, 0.0, 0.0, 0.0], [-0.0293500014, 23.0, 24.0, 0.0], [-0.00661470974, 0.0, 0.0, 0.0], [0.155109882, 0.0, 0.0, 0.0], [-0.111347333, 0.0, 0.0, 0.0], [0.0869514719, 0.0, 0.0, 0.0], [-0.0844523609, 0.0, 0.0, 0.0], [0.00331405224, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 16, 4, 9, 10, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_628(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0965999961, 3.0, 4.0, 0.0], [-0.0883999988, 5.0, 6.0, 0.0], [-0.0998999998, 7.0, 8.0, 0.0], [-0.0929999948, 9.0, 10.0, 0.0], [-0.18399398, 0.0, 0.0, 0.0], [-0.0771999955, 11.0, 12.0, 0.0], [-0.102499999, 13.0, 14.0, 0.0], [-0.145383343, 0.0, 0.0, 0.0], [0.223077357, 0.0, 0.0, 0.0], [-0.0913500041, 15.0, 16.0, 0.0], [0.0551552884, 0.0, 0.0, 0.0], [-0.0720499977, 17.0, 18.0, 0.0], [-0.104499996, 19.0, 20.0, 0.0], [0.0757033527, 0.0, 0.0, 0.0], [-0.100334913, 0.0, 0.0, 0.0], [0.0731937736, 0.0, 0.0, 0.0], [-0.129440561, 0.0, 0.0, 0.0], [-0.0673500001, 21.0, 22.0, 0.0], [0.00639892183, 0.0, 0.0, 0.0], [-0.120172746, 0.0, 0.0, 0.0], [0.12794672, 0.0, 0.0, 0.0], [-0.00351989875, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 15, 16, 5, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_629(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.995499969, 1.0, 2.0, 1.0], [-0.453500003, 3.0, 4.0, 0.0], [-0.989500046, 5.0, 6.0, 1.0], [-0.0792003721, 0.0, 0.0, 0.0], [-0.294, 7.0, 8.0, 0.0], [-0.0873695016, 0.0, 0.0, 0.0], [0.00938531943, 0.0, 0.0, 0.0], [-0.38349998, 9.0, 10.0, 0.0], [-0.161500007, 11.0, 12.0, 0.0], [-0.412999988, 13.0, 14.0, 0.0], [0.160516426, 0.0, 0.0, 0.0], [-0.166500002, 15.0, 16.0, 0.0], [-0.158500001, 17.0, 18.0, 0.0], [0.0737399459, 0.0, 0.0, 0.0], [-0.0600210838, 0.0, 0.0, 0.0], [-0.0764537975, 0.0, 0.0, 0.0], [-0.024502309, 0.0, 0.0, 0.0], [0.0810630843, 0.0, 0.0, 0.0], [0.00243068184, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 10, 15, 16, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 4, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_630(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.642500043, 1.0, 2.0, 1.0], [-0.713500023, 3.0, 4.0, 1.0], [0.671499968, 5.0, 6.0, 2.0], [-0.728500009, 7.0, 8.0, 1.0], [-0.98150003, 9.0, 10.0, 3.0], [-0.871000051, 11.0, 12.0, 4.0], [0.75150001, 13.0, 14.0, 2.0], [-0.184500009, 15.0, 16.0, 0.0], [-0.0498582609, 0.0, 0.0, 0.0], [-0.694499969, 17.0, 18.0, 1.0], [0.0768255293, 0.0, 0.0, 0.0], [-0.0707687065, 0.0, 0.0, 0.0], [-0.00179998006, 0.0, 0.0, 0.0], [-0.221500009, 19.0, 20.0, 0.0], [-0.0249694232, 0.0, 0.0, 0.0], [0.489499986, 21.0, 22.0, 2.0], [-0.799499989, 23.0, 24.0, 1.0], [0.0503682941, 0.0, 0.0, 0.0], [-0.0428723618, 0.0, 0.0, 0.0], [0.056904953, 0.0, 0.0, 0.0], [0.000191715822, 0.0, 0.0, 0.0], [-0.00948582869, 0.0, 0.0, 0.0], [0.056202732, 0.0, 0.0, 0.0], [0.0260988697, 0.0, 0.0, 0.0], [-0.0700483024, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 17, 18, 10, 11, 12, 19, 20, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 2, 5, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_631(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.847499967, 1.0, 2.0, 4.0], [-0.332499981, 3.0, 4.0, 0.0], [0.0361069702, 0.0, 0.0, 0.0], [-0.606999993, 5.0, 6.0, 1.0], [-0.315500021, 7.0, 8.0, 0.0], [-0.0858059004, 0.0, 0.0, 0.0], [0.0155471452, 0.0, 0.0, 0.0], [0.0698993355, 0.0, 0.0, 0.0], [-0.906499982, 9.0, 10.0, 4.0], [-0.980499983, 11.0, 12.0, 3.0], [-0.0511091016, 0.0, 0.0, 0.0], [-0.0048981593, 0.0, 0.0, 0.0], [0.0283235572, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 7, 11, 12, 10, 2])
    branch_indices = np.array([0, 1, 3, 4, 8, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_632(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.109499998, 3.0, 4.0, 0.0], [-0.0437174179, 0.0, 0.0, 0.0], [-0.718500018, 5.0, 6.0, 1.0], [0.0582298711, 0.0, 0.0, 0.0], [-0.756500006, 7.0, 8.0, 1.0], [-0.630499959, 9.0, 10.0, 1.0], [0.436500013, 11.0, 12.0, 2.0], [-0.075179413, 0.0, 0.0, 0.0], [-0.186500013, 13.0, 14.0, 0.0], [-0.593500018, 15.0, 16.0, 1.0], [-0.0484220609, 0.0, 0.0, 0.0], [0.0530431531, 0.0, 0.0, 0.0], [-7.72498097e-05, 0.0, 0.0, 0.0], [0.0906892642, 0.0, 0.0, 0.0], [-0.07072106, 0.0, 0.0, 0.0], [0.0068259961, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_633(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.190499991, 1.0, 2.0, 0.0], [-0.274500012, 3.0, 4.0, 0.0], [-0.146499991, 5.0, 6.0, 0.0], [-0.296499997, 7.0, 8.0, 0.0], [-0.747500002, 9.0, 10.0, 2.0], [-0.185499996, 11.0, 12.0, 0.0], [-0.141499996, 13.0, 14.0, 0.0], [-0.393000007, 15.0, 16.0, 0.0], [-0.0496259257, 0.0, 0.0, 0.0], [-0.248999998, 17.0, 18.0, 0.0], [-0.0431203954, 0.0, 0.0, 0.0], [-0.00676612649, 0.0, 0.0, 0.0], [-0.130192995, 0.0, 0.0, 0.0], [-0.1435, 19.0, 20.0, 0.0], [-0.136500001, 21.0, 22.0, 0.0], [-0.0272503048, 0.0, 0.0, 0.0], [0.0400207825, 0.0, 0.0, 0.0], [0.144877583, 0.0, 0.0, 0.0], [-0.205500007, 23.0, 24.0, 0.0], [0.0275955666, 0.0, 0.0, 0.0], [0.11561247, 0.0, 0.0, 0.0], [-0.0521549992, 0.0, 0.0, 0.0], [-0.644500017, 25.0, 26.0, 2.0], [-0.0619913004, 0.0, 0.0, 0.0], [0.0863856524, 0.0, 0.0, 0.0], [0.00202057534, 0.0, 0.0, 0.0], [-0.04972101, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 17, 23, 24, 10, 11, 12, 19, 20, 21, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 18, 2, 5, 6, 13, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_634(xs):
    #Predicts Class 4
    function_dict = np.array([[0.028549999, 1.0, 2.0, 0.0], [0.02685, 3.0, 4.0, 0.0], [0.0368999988, 5.0, 6.0, 0.0], [0.0256000012, 7.0, 8.0, 0.0], [-0.242661446, 0.0, 0.0, 0.0], [0.172457069, 0.0, 0.0, 0.0], [0.0477499999, 9.0, 10.0, 0.0], [0.0203999989, 11.0, 12.0, 0.0], [0.198041812, 0.0, 0.0, 0.0], [0.0417999998, 13.0, 14.0, 0.0], [0.0524500012, 15.0, 16.0, 0.0], [0.0110500008, 17.0, 18.0, 0.0], [0.0234000012, 19.0, 20.0, 0.0], [0.00314655551, 0.0, 0.0, 0.0], [-0.145905152, 0.0, 0.0, 0.0], [0.189578876, 0.0, 0.0, 0.0], [0.0825999975, 21.0, 22.0, 0.0], [-0.00322633889, 0.0, 0.0, 0.0], [0.141703174, 0.0, 0.0, 0.0], [-0.236436695, 0.0, 0.0, 0.0], [-0.0250547696, 0.0, 0.0, 0.0], [-0.0441358499, 0.0, 0.0, 0.0], [0.0139967175, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 13, 14, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_635(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 1.0], [-0.16049999, 3.0, 4.0, 0.0], [-0.0619983226, 0.0, 0.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [-0.1505, 7.0, 8.0, 0.0], [-0.398999989, 9.0, 10.0, 0.0], [-0.418500006, 11.0, 12.0, 0.0], [-0.0657285154, 0.0, 0.0, 0.0], [-0.149500012, 13.0, 14.0, 0.0], [-0.411000013, 15.0, 16.0, 0.0], [-0.380499989, 17.0, 18.0, 0.0], [0.0385757722, 0.0, 0.0, 0.0], [-0.0936527923, 0.0, 0.0, 0.0], [0.100165211, 0.0, 0.0, 0.0], [-0.0127000008, 19.0, 20.0, 0.0], [0.0312384162, 0.0, 0.0, 0.0], [-0.0918712765, 0.0, 0.0, 0.0], [0.143411592, 0.0, 0.0, 0.0], [0.0457457863, 0.0, 0.0, 0.0], [-0.0531818904, 0.0, 0.0, 0.0], [0.0051215142, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 11, 12, 7, 13, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 4, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_636(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.166500002, 1.0, 2.0, 0.0], [-0.615499973, 3.0, 4.0, 1.0], [-0.96449995, 5.0, 6.0, 4.0], [-0.1875, 7.0, 8.0, 0.0], [-0.827499986, 9.0, 10.0, 4.0], [-0.0451039784, 0.0, 0.0, 0.0], [-0.9375, 11.0, 12.0, 4.0], [-0.902500033, 13.0, 14.0, 4.0], [-0.0581679381, 0.0, 0.0, 0.0], [-0.0911383107, 0.0, 0.0, 0.0], [-0.764999986, 15.0, 16.0, 4.0], [0.0845338255, 0.0, 0.0, 0.0], [-0.138500005, 17.0, 18.0, 0.0], [-0.213499993, 19.0, 20.0, 0.0], [-0.223000005, 21.0, 22.0, 0.0], [0.0478413254, 0.0, 0.0, 0.0], [-0.0430646539, 0.0, 0.0, 0.0], [0.0630373359, 0.0, 0.0, 0.0], [-0.642500043, 23.0, 24.0, 1.0], [-0.000250667857, 0.0, 0.0, 0.0], [0.0734162107, 0.0, 0.0, 0.0], [0.011678529, 0.0, 0.0, 0.0], [-0.0820270479, 0.0, 0.0, 0.0], [0.0229749009, 0.0, 0.0, 0.0], [-0.0431305021, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 15, 16, 5, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_637(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.975499988, 1.0, 2.0, 4.0], [-0.219500005, 3.0, 4.0, 0.0], [-0.192499995, 5.0, 6.0, 0.0], [0.0364328921, 0.0, 0.0, 0.0], [-0.982499957, 7.0, 8.0, 4.0], [0.555500031, 9.0, 10.0, 2.0], [-0.961500049, 11.0, 12.0, 4.0], [-0.0792002603, 0.0, 0.0, 0.0], [-0.00197440339, 0.0, 0.0, 0.0], [0.476500005, 13.0, 14.0, 2.0], [0.657500029, 15.0, 16.0, 2.0], [0.0740460679, 0.0, 0.0, 0.0], [-0.00258922274, 0.0, 0.0, 0.0], [-0.995499969, 17.0, 18.0, 3.0], [-0.291500002, 19.0, 20.0, 0.0], [-0.746000051, 21.0, 22.0, 1.0], [-0.315500021, 23.0, 24.0, 0.0], [0.0733065009, 0.0, 0.0, 0.0], [-0.0361815281, 0.0, 0.0, 0.0], [0.0307472758, 0.0, 0.0, 0.0], [-0.091177769, 0.0, 0.0, 0.0], [-0.0158440061, 0.0, 0.0, 0.0], [0.0577200428, 0.0, 0.0, 0.0], [0.0331199318, 0.0, 0.0, 0.0], [-0.0500728302, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 11, 12])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 13, 14, 10, 15, 16, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_638(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [-0.783500016, 3.0, 4.0, 4.0], [-0.661499977, 5.0, 6.0, 1.0], [-0.531499982, 7.0, 8.0, 1.0], [0.0506445915, 0.0, 0.0, 0.0], [-0.0552980416, 0.0, 0.0, 0.0], [-0.138500005, 9.0, 10.0, 0.0], [0.529500008, 11.0, 12.0, 2.0], [-0.299499989, 13.0, 14.0, 0.0], [-0.0396682471, 0.0, 0.0, 0.0], [0.045239307, 0.0, 0.0, 0.0], [-0.961500049, 15.0, 16.0, 4.0], [0.646499991, 17.0, 18.0, 2.0], [0.0253145136, 0.0, 0.0, 0.0], [-0.965499997, 19.0, 20.0, 3.0], [0.0215321835, 0.0, 0.0, 0.0], [-0.0709318295, 0.0, 0.0, 0.0], [0.0623600781, 0.0, 0.0, 0.0], [-0.00528963422, 0.0, 0.0, 0.0], [-0.0782657489, 0.0, 0.0, 0.0], [0.00805078447, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 19, 20, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_639(xs):
    #Predicts Class 3
    function_dict = np.array([[0.428499997, 1.0, 2.0, 0.0], [0.42049998, 3.0, 4.0, 0.0], [0.432500005, 5.0, 6.0, 0.0], [0.415000021, 7.0, 8.0, 0.0], [-0.122696631, 0.0, 0.0, 0.0], [0.119132049, 0.0, 0.0, 0.0], [0.434499979, 9.0, 10.0, 0.0], [0.406499982, 11.0, 12.0, 0.0], [0.0794981048, 0.0, 0.0, 0.0], [-0.0905797258, 0.0, 0.0, 0.0], [0.436500013, 13.0, 14.0, 0.0], [-0.99150002, 15.0, 16.0, 1.0], [-0.135866791, 0.0, 0.0, 0.0], [0.111716062, 0.0, 0.0, 0.0], [0.446500003, 17.0, 18.0, 0.0], [-0.000559562584, 0.0, 0.0, 0.0], [0.0825559795, 0.0, 0.0, 0.0], [-0.13229914, 0.0, 0.0, 0.0], [0.0121939182, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_640(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.393000007, 3.0, 4.0, 0.0], [-0.41049999, 5.0, 6.0, 0.0], [-0.406000018, 7.0, 8.0, 0.0], [-0.297500014, 9.0, 10.0, 0.0], [0.0612559617, 0.0, 0.0, 0.0], [0.0577500015, 11.0, 12.0, 0.0], [0.00667359727, 0.0, 0.0, 0.0], [-0.101857319, 0.0, 0.0, 0.0], [0.107754223, 0.0, 0.0, 0.0], [-0.282999992, 13.0, 14.0, 0.0], [-0.119499996, 15.0, 16.0, 0.0], [0.033802554, 0.0, 0.0, 0.0], [-0.284500003, 17.0, 18.0, 0.0], [-0.210500002, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.0403999984, 23.0, 24.0, 0.0], [0.0233021155, 0.0, 0.0, 0.0], [-0.074196279, 0.0, 0.0, 0.0], [0.0919396132, 0.0, 0.0, 0.0], [0.000855374499, 0.0, 0.0, 0.0], [-0.0828653425, 0.0, 0.0, 0.0], [0.0286013409, 0.0, 0.0, 0.0], [-0.13548027, 0.0, 0.0, 0.0], [-0.0446037352, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 17, 18, 19, 20, 5, 21, 22, 23, 24, 12])
    branch_indices = np.array([0, 1, 3, 4, 10, 13, 14, 2, 6, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_641(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.466499984, 7.0, 8.0, 0.0], [0.527500033, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.117415756, 0.0, 0.0, 0.0], [0.446500003, 13.0, 14.0, 0.0], [0.487500012, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [-0.101489171, 0.0, 0.0, 0.0], [0.0481125452, 0.0, 0.0, 0.0], [0.5625, 19.0, 20.0, 0.0], [0.436500013, 21.0, 22.0, 0.0], [0.46450001, 23.0, 24.0, 0.0], [0.144049853, 0.0, 0.0, 0.0], [0.507500052, 25.0, 26.0, 0.0], [-0.0889374465, 0.0, 0.0, 0.0], [0.0417024046, 0.0, 0.0, 0.0], [0.556499958, 27.0, 28.0, 0.0], [0.583500028, 29.0, 30.0, 0.0], [-0.00274335174, 0.0, 0.0, 0.0], [0.134431243, 0.0, 0.0, 0.0], [-0.118929498, 0.0, 0.0, 0.0], [0.000980509096, 0.0, 0.0, 0.0], [-0.0262492821, 0.0, 0.0, 0.0], [0.0496536158, 0.0, 0.0, 0.0], [0.00295510073, 0.0, 0.0, 0.0], [-0.0717110857, 0.0, 0.0, 0.0], [0.0940930247, 0.0, 0.0, 0.0], [-0.0346177109, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 17, 18, 10, 11, 27, 28, 29, 30, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 9, 2, 5, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_642(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.916499972, 1.0, 2.0, 4.0], [-0.657500029, 3.0, 4.0, 1.0], [-0.191500008, 5.0, 6.0, 0.0], [0.571500003, 7.0, 8.0, 2.0], [-0.175500005, 9.0, 10.0, 0.0], [0.653499961, 11.0, 12.0, 2.0], [-0.643000007, 13.0, 14.0, 1.0], [-0.281499982, 15.0, 16.0, 0.0], [0.0465356074, 0.0, 0.0, 0.0], [-0.0866654888, 0.0, 0.0, 0.0], [0.00780121051, 0.0, 0.0, 0.0], [-0.902500033, 17.0, 18.0, 4.0], [-0.540500045, 19.0, 20.0, 1.0], [0.085218288, 0.0, 0.0, 0.0], [-0.551499963, 21.0, 22.0, 1.0], [-0.0690518022, 0.0, 0.0, 0.0], [-0.236499995, 23.0, 24.0, 0.0], [0.0270411782, 0.0, 0.0, 0.0], [-0.990499973, 25.0, 26.0, 3.0], [0.0860943645, 0.0, 0.0, 0.0], [-0.0208379254, 0.0, 0.0, 0.0], [-0.0343926884, 0.0, 0.0, 0.0], [0.0475676246, 0.0, 0.0, 0.0], [0.0476515256, 0.0, 0.0, 0.0], [-0.0147257233, 0.0, 0.0, 0.0], [-0.105572321, 0.0, 0.0, 0.0], [-0.00874793064, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 23, 24, 8, 9, 10, 17, 25, 26, 19, 20, 13, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 16, 4, 2, 5, 11, 18, 12, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_643(xs):
    #Predicts Class 1
    function_dict = np.array([[0.570500016, 1.0, 2.0, 2.0], [-0.107500002, 3.0, 4.0, 0.0], [0.591500044, 5.0, 6.0, 2.0], [-0.946500003, 7.0, 8.0, 4.0], [-0.0522515662, 0.0, 0.0, 0.0], [-0.0671655014, 0.0, 0.0, 0.0], [-0.973500013, 9.0, 10.0, 3.0], [-0.178499997, 11.0, 12.0, 0.0], [-0.234499991, 13.0, 14.0, 0.0], [-0.528499961, 15.0, 16.0, 1.0], [0.0391027369, 0.0, 0.0, 0.0], [-0.734500051, 17.0, 18.0, 1.0], [0.0845833272, 0.0, 0.0, 0.0], [-0.281499982, 19.0, 20.0, 0.0], [-0.200500011, 21.0, 22.0, 0.0], [-0.250999987, 23.0, 24.0, 0.0], [-0.939499974, 25.0, 26.0, 4.0], [-0.0167455915, 0.0, 0.0, 0.0], [0.0580775924, 0.0, 0.0, 0.0], [0.0127841532, 0.0, 0.0, 0.0], [-0.0829302073, 0.0, 0.0, 0.0], [0.0711702779, 0.0, 0.0, 0.0], [-0.0313255712, 0.0, 0.0, 0.0], [-0.00623949617, 0.0, 0.0, 0.0], [-0.0679343715, 0.0, 0.0, 0.0], [0.0497072674, 0.0, 0.0, 0.0], [-0.00789600797, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 19, 20, 21, 22, 4, 5, 23, 24, 25, 26, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 2, 6, 9, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_644(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.871500015, 3.0, 4.0, 3.0], [-0.357500017, 5.0, 6.0, 1.0], [0.331499994, 7.0, 8.0, 2.0], [-0.0491604842, 0.0, 0.0, 0.0], [0.0412345305, 0.0, 0.0, 0.0], [0.00688079465, 0.0, 0.0, 0.0], [-0.0534070618, 0.0, 0.0, 0.0], [-0.928499997, 9.0, 10.0, 3.0], [-0.179500014, 11.0, 12.0, 0.0], [0.0653448179, 0.0, 0.0, 0.0], [0.00958125107, 0.0, 0.0, 0.0], [-0.0379195586, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 10, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_645(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 1.0], [-0.390500009, 3.0, 4.0, 0.0], [0.344000012, 5.0, 6.0, 0.0], [0.0631971434, 0.0, 0.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [-0.0183500014, 9.0, 10.0, 0.0], [-0.079740651, 0.0, 0.0, 0.0], [-0.0616392568, 0.0, 0.0, 0.0], [-0.273499995, 11.0, 12.0, 0.0], [-0.120499998, 13.0, 14.0, 0.0], [-0.996500015, 15.0, 16.0, 1.0], [0.0535819754, 0.0, 0.0, 0.0], [-0.210500002, 17.0, 18.0, 0.0], [-0.199499995, 19.0, 20.0, 0.0], [-0.118263163, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [0.12566711, 0.0, 0.0, 0.0], [-0.100769237, 0.0, 0.0, 0.0], [0.000792055042, 0.0, 0.0, 0.0], [-0.0514719523, 0.0, 0.0, 0.0], [0.0823754594, 0.0, 0.0, 0.0], [-0.0814380273, 0.0, 0.0, 0.0], [0.0938426703, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 17, 18, 19, 20, 14, 21, 22, 16, 6])
    branch_indices = np.array([0, 1, 4, 8, 12, 2, 5, 9, 13, 10, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_646(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.421499997, 3.0, 4.0, 0.0], [-0.0625900775, 0.0, 0.0, 0.0], [0.0485742129, 0.0, 0.0, 0.0], [-0.380499989, 5.0, 6.0, 0.0], [-0.394999981, 7.0, 8.0, 0.0], [-0.297500014, 9.0, 10.0, 0.0], [0.00960865617, 0.0, 0.0, 0.0], [-0.102871075, 0.0, 0.0, 0.0], [0.108520664, 0.0, 0.0, 0.0], [-0.294, 11.0, 12.0, 0.0], [-0.0746656358, 0.0, 0.0, 0.0], [0.000261434965, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 11, 12, 2])
    branch_indices = np.array([0, 1, 4, 5, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_647(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.5255, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.513000011, 7.0, 8.0, 0.0], [-0.07069242, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.0949066877, 0.0, 0.0, 0.0], [0.503000021, 11.0, 12.0, 0.0], [0.0661337525, 0.0, 0.0, 0.0], [0.61650002, 13.0, 14.0, 0.0], [0.050073199, 0.0, 0.0, 0.0], [0.466499984, 15.0, 16.0, 0.0], [-0.0798934251, 0.0, 0.0, 0.0], [0.5625, 17.0, 18.0, 0.0], [0.621500015, 19.0, 20.0, 0.0], [-0.00175555353, 0.0, 0.0, 0.0], [0.0844297335, 0.0, 0.0, 0.0], [-0.00563083682, 0.0, 0.0, 0.0], [0.0822617114, 0.0, 0.0, 0.0], [-0.114187725, 0.0, 0.0, 0.0], [0.0224749185, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 17, 18, 19, 20, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_648(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.847499967, 1.0, 2.0, 1.0], [0.0374929644, 0.0, 0.0, 0.0], [-0.916499972, 3.0, 4.0, 4.0], [-0.931499958, 5.0, 6.0, 4.0], [-0.976500034, 7.0, 8.0, 3.0], [-0.939499974, 9.0, 10.0, 4.0], [-0.990499973, 11.0, 12.0, 3.0], [-0.847499967, 13.0, 14.0, 4.0], [-0.526499987, 15.0, 16.0, 1.0], [-0.228500009, 17.0, 18.0, 0.0], [0.0460682213, 0.0, 0.0, 0.0], [-0.00526801916, 0.0, 0.0, 0.0], [-0.0698181316, 0.0, 0.0, 0.0], [0.0722111762, 0.0, 0.0, 0.0], [-0.789499998, 19.0, 20.0, 4.0], [-0.644999981, 21.0, 22.0, 1.0], [0.0325267278, 0.0, 0.0, 0.0], [-0.0498341359, 0.0, 0.0, 0.0], [0.000721780176, 0.0, 0.0, 0.0], [-0.0748983994, 0.0, 0.0, 0.0], [0.037306454, 0.0, 0.0, 0.0], [-0.000645198976, 0.0, 0.0, 0.0], [-0.0793131143, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 10, 11, 12, 13, 19, 20, 21, 22, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 4, 7, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_649(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.820500016, 1.0, 2.0, 1.0], [-0.989500046, 3.0, 4.0, 3.0], [-0.786499977, 5.0, 6.0, 1.0], [-0.0592237562, 0.0, 0.0, 0.0], [0.0201022923, 0.0, 0.0, 0.0], [-0.99150002, 7.0, 8.0, 3.0], [-0.95449996, 9.0, 10.0, 3.0], [-0.80250001, 11.0, 12.0, 1.0], [-0.0225260984, 0.0, 0.0, 0.0], [-0.767500043, 13.0, 14.0, 1.0], [-0.237500012, 15.0, 16.0, 0.0], [0.0923924968, 0.0, 0.0, 0.0], [0.012557121, 0.0, 0.0, 0.0], [-0.0680785105, 0.0, 0.0, 0.0], [-0.9745, 17.0, 18.0, 3.0], [0.0871200264, 0.0, 0.0, 0.0], [-0.0427943468, 0.0, 0.0, 0.0], [0.0104140937, 0.0, 0.0, 0.0], [-0.0539314337, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 8, 13, 17, 18, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 7, 6, 9, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_650(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.915500045, 1.0, 2.0, 4.0], [-0.930500031, 3.0, 4.0, 4.0], [0.754500031, 5.0, 6.0, 2.0], [0.646499991, 7.0, 8.0, 2.0], [0.0508079343, 0.0, 0.0, 0.0], [0.715499997, 9.0, 10.0, 2.0], [0.0506885983, 0.0, 0.0, 0.0], [-0.962499976, 11.0, 12.0, 4.0], [-0.0470700748, 0.0, 0.0, 0.0], [-0.642500043, 13.0, 14.0, 1.0], [-0.0827179477, 0.0, 0.0, 0.0], [-0.99849999, 15.0, 16.0, 3.0], [-0.958500028, 17.0, 18.0, 4.0], [-0.0678055063, 0.0, 0.0, 0.0], [-0.441500008, 19.0, 20.0, 1.0], [0.037600901, 0.0, 0.0, 0.0], [-0.0337176546, 0.0, 0.0, 0.0], [0.082519643, 0.0, 0.0, 0.0], [0.00653704582, 0.0, 0.0, 0.0], [0.0481887124, 0.0, 0.0, 0.0], [-0.0245194472, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 13, 19, 20, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 5, 9, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_651(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.0602062047, 0.0, 0.0, 0.0], [0.115724869, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.0278764386, 0.0, 0.0, 0.0], [0.0306185428, 0.0, 0.0, 0.0], [-0.721500039, 11.0, 12.0, 2.0], [-0.0840327293, 0.0, 0.0, 0.0], [-0.770500004, 13.0, 14.0, 2.0], [0.00720999995, 15.0, 16.0, 0.0], [-0.00012693918, 0.0, 0.0, 0.0], [-0.0799155608, 0.0, 0.0, 0.0], [0.00476364372, 0.0, 0.0, 0.0], [0.11202874, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 13, 14, 15, 16, 10])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_652(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.414000005, 3.0, 4.0, 0.0], [-0.41049999, 5.0, 6.0, 0.0], [-0.0756306872, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [0.0406341143, 0.0, 0.0, 0.0], [-0.607499957, 9.0, 10.0, 2.0], [0.0904460773, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.254500002, 13.0, 14.0, 0.0], [-0.208499998, 15.0, 16.0, 0.0], [-0.0493500009, 17.0, 18.0, 0.0], [-0.0559500009, 19.0, 20.0, 0.0], [0.0345918648, 0.0, 0.0, 0.0], [0.0424000025, 21.0, 22.0, 0.0], [-0.07829611, 0.0, 0.0, 0.0], [-0.0526500009, 23.0, 24.0, 0.0], [0.00905130524, 0.0, 0.0, 0.0], [-0.015480347, 0.0, 0.0, 0.0], [-0.0407606289, 0.0, 0.0, 0.0], [0.087565884, 0.0, 0.0, 0.0], [-0.0821436644, 0.0, 0.0, 0.0], [0.00996921305, 0.0, 0.0, 0.0], [0.0964766219, 0.0, 0.0, 0.0], [0.0106009338, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 17, 18, 19, 20, 5, 13, 21, 22, 15, 23, 24])
    branch_indices = np.array([0, 1, 4, 8, 11, 12, 2, 6, 9, 14, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_653(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.0552780554, 0.0, 0.0, 0.0], [-0.99150002, 3.0, 4.0, 1.0], [-0.421499997, 5.0, 6.0, 0.0], [-0.082164146, 0.0, 0.0, 0.0], [-0.0651663616, 0.0, 0.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [0.0822989941, 0.0, 0.0, 0.0], [-0.38349998, 9.0, 10.0, 0.0], [-0.0829709992, 0.0, 0.0, 0.0], [0.00464396365, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 7, 9, 10, 4])
    branch_indices = np.array([0, 2, 3, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_654(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.918500006, 1.0, 2.0, 3.0], [-0.940500021, 3.0, 4.0, 3.0], [-0.196500003, 5.0, 6.0, 0.0], [-0.960500002, 7.0, 8.0, 3.0], [-0.0473488234, 0.0, 0.0, 0.0], [0.0602575354, 0.0, 0.0, 0.0], [-0.0158615448, 0.0, 0.0, 0.0], [-0.0580499992, 9.0, 10.0, 0.0], [0.0375712737, 0.0, 0.0, 0.0], [-0.149500012, 11.0, 12.0, 0.0], [-0.0526831672, 0.0, 0.0, 0.0], [-0.010916614, 0.0, 0.0, 0.0], [0.0359220803, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_655(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.42750001, 1.0, 2.0, 1.0], [-0.4745, 3.0, 4.0, 1.0], [-0.0304770172, 0.0, 0.0, 0.0], [-0.921499968, 5.0, 6.0, 3.0], [0.0449267961, 0.0, 0.0, 0.0], [-0.982499957, 7.0, 8.0, 3.0], [-0.0556613691, 0.0, 0.0, 0.0], [-0.218499988, 9.0, 10.0, 0.0], [-0.69749999, 11.0, 12.0, 1.0], [-0.0261828396, 0.0, 0.0, 0.0], [0.0186095349, 0.0, 0.0, 0.0], [0.0674388707, 0.0, 0.0, 0.0], [-0.021046428, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_656(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.415000021, 1.0, 2.0, 1.0], [0.69749999, 3.0, 4.0, 2.0], [0.0403265357, 0.0, 0.0, 0.0], [0.667500019, 5.0, 6.0, 2.0], [-0.189999998, 7.0, 8.0, 0.0], [-0.889500022, 9.0, 10.0, 4.0], [-0.0877241194, 0.0, 0.0, 0.0], [0.749500036, 11.0, 12.0, 2.0], [-0.0388065465, 0.0, 0.0, 0.0], [-0.19749999, 13.0, 14.0, 0.0], [-0.0366677307, 0.0, 0.0, 0.0], [0.0991899148, 0.0, 0.0, 0.0], [-0.0157237668, 0.0, 0.0, 0.0], [-0.0142315514, 0.0, 0.0, 0.0], [0.0420437865, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 11, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_657(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 1.0], [-0.851999998, 3.0, 4.0, 2.0], [-0.125499994, 5.0, 6.0, 0.0], [-0.885499954, 7.0, 8.0, 2.0], [-0.0699499995, 9.0, 10.0, 0.0], [-0.0743735656, 0.0, 0.0, 0.0], [0.22299999, 11.0, 12.0, 0.0], [-0.2095, 13.0, 14.0, 0.0], [-0.0686936155, 0.0, 0.0, 0.0], [-0.201000005, 15.0, 16.0, 0.0], [-0.0542500019, 17.0, 18.0, 0.0], [0.0551499985, 19.0, 20.0, 0.0], [-0.0786356404, 0.0, 0.0, 0.0], [-0.274500012, 21.0, 22.0, 0.0], [-0.191500008, 23.0, 24.0, 0.0], [-0.250499994, 25.0, 26.0, 0.0], [-0.100710154, 0.0, 0.0, 0.0], [0.198222533, 0.0, 0.0, 0.0], [0.00679999962, 27.0, 28.0, 0.0], [0.0836811736, 0.0, 0.0, 0.0], [0.00560280029, 0.0, 0.0, 0.0], [-0.00814688019, 0.0, 0.0, 0.0], [0.116568856, 0.0, 0.0, 0.0], [-0.0915125459, 0.0, 0.0, 0.0], [2.32535567e-05, 0.0, 0.0, 0.0], [-0.0354438089, 0.0, 0.0, 0.0], [0.0708720759, 0.0, 0.0, 0.0], [-0.0346147716, 0.0, 0.0, 0.0], [0.0652673542, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 25, 26, 16, 17, 27, 28, 5, 19, 20, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 15, 10, 18, 2, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_658(xs):
    #Predicts Class 4
    function_dict = np.array([[0.03785, 1.0, 2.0, 0.0], [0.0293500014, 3.0, 4.0, 0.0], [0.0476500019, 5.0, 6.0, 0.0], [0.0256000012, 7.0, 8.0, 0.0], [-0.144369826, 0.0, 0.0, 0.0], [0.178836927, 0.0, 0.0, 0.0], [0.0551500022, 9.0, 10.0, 0.0], [0.0203999989, 11.0, 12.0, 0.0], [0.107434526, 0.0, 0.0, 0.0], [-0.129867107, 0.0, 0.0, 0.0], [0.074149996, 13.0, 14.0, 0.0], [0.0110500008, 15.0, 16.0, 0.0], [0.0240500011, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [0.0825999975, 21.0, 22.0, 0.0], [-0.00219013123, 0.0, 0.0, 0.0], [0.104217574, 0.0, 0.0, 0.0], [-0.159224346, 0.0, 0.0, 0.0], [0.0272362214, 0.0, 0.0, 0.0], [0.147773549, 0.0, 0.0, 0.0], [-0.0259516425, 0.0, 0.0, 0.0], [-0.10264609, 0.0, 0.0, 0.0], [0.0110074384, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_659(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0485500321, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0847396553, 0.0, 0.0, 0.0], [-0.382499993, 7.0, 8.0, 0.0], [0.0706278756, 0.0, 0.0, 0.0], [-0.394500017, 9.0, 10.0, 0.0], [-0.161500007, 11.0, 12.0, 0.0], [-0.00883586518, 0.0, 0.0, 0.0], [0.111085415, 0.0, 0.0, 0.0], [-0.0424684808, 0.0, 0.0, 0.0], [0.00289069349, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_660(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [-0.992499948, 3.0, 4.0, 3.0], [-0.934499979, 5.0, 6.0, 4.0], [0.43900001, 7.0, 8.0, 2.0], [-0.817499995, 9.0, 10.0, 1.0], [0.497500002, 11.0, 12.0, 2.0], [0.510500014, 13.0, 14.0, 2.0], [-0.0353599302, 0.0, 0.0, 0.0], [0.0296292938, 0.0, 0.0, 0.0], [-0.000820265501, 0.0, 0.0, 0.0], [0.0783534124, 0.0, 0.0, 0.0], [-0.995499969, 15.0, 16.0, 3.0], [0.551499963, 17.0, 18.0, 2.0], [-0.917500019, 19.0, 20.0, 4.0], [-0.6505, 21.0, 22.0, 1.0], [-0.0997252017, 0.0, 0.0, 0.0], [-0.980499983, 23.0, 24.0, 3.0], [0.0460134372, 0.0, 0.0, 0.0], [-0.706499994, 25.0, 26.0, 1.0], [-0.00162984838, 0.0, 0.0, 0.0], [0.0706516281, 0.0, 0.0, 0.0], [0.576499999, 27.0, 28.0, 2.0], [-0.810000002, 29.0, 30.0, 4.0], [0.0279861763, 0.0, 0.0, 0.0], [-0.0338926762, 0.0, 0.0, 0.0], [-0.0713288933, 0.0, 0.0, 0.0], [0.0215164591, 0.0, 0.0, 0.0], [-0.0812462792, 0.0, 0.0, 0.0], [0.00640334189, 0.0, 0.0, 0.0], [0.0580816977, 0.0, 0.0, 0.0], [-0.031249227, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 15, 23, 24, 17, 25, 26, 19, 20, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 11, 16, 12, 18, 6, 13, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_661(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.797500014, 1.0, 2.0, 1.0], [0.422500014, 3.0, 4.0, 2.0], [-0.786499977, 5.0, 6.0, 1.0], [-0.844500005, 7.0, 8.0, 1.0], [0.475499988, 9.0, 10.0, 2.0], [0.0514541939, 0.0, 0.0, 0.0], [-0.95449996, 11.0, 12.0, 3.0], [-0.0240836777, 0.0, 0.0, 0.0], [0.0286069475, 0.0, 0.0, 0.0], [-0.0839077681, 0.0, 0.0, 0.0], [0.0056120595, 0.0, 0.0, 0.0], [-0.767500043, 13.0, 14.0, 1.0], [-0.244500011, 15.0, 16.0, 0.0], [-0.0552053787, 0.0, 0.0, 0.0], [-0.334500015, 17.0, 18.0, 0.0], [0.0612291582, 0.0, 0.0, 0.0], [-0.0056151133, 0.0, 0.0, 0.0], [-0.0526305363, 0.0, 0.0, 0.0], [0.00907037873, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 5, 13, 17, 18, 15, 16])
    branch_indices = np.array([0, 1, 3, 4, 2, 6, 11, 14, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_662(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.514999986, 3.0, 4.0, 1.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.220499992, 7.0, 8.0, 0.0], [-0.0425433479, 0.0, 0.0, 0.0], [0.652500033, 9.0, 10.0, 2.0], [-0.958500028, 11.0, 12.0, 3.0], [-0.630499959, 13.0, 14.0, 1.0], [-0.9745, 15.0, 16.0, 4.0], [0.0140493568, 0.0, 0.0, 0.0], [-0.0361606739, 0.0, 0.0, 0.0], [0.062651515, 0.0, 0.0, 0.0], [0.00453229481, 0.0, 0.0, 0.0], [-0.997500002, 17.0, 18.0, 3.0], [-0.0450661331, 0.0, 0.0, 0.0], [0.0502580591, 0.0, 0.0, 0.0], [-0.94749999, 19.0, 20.0, 4.0], [0.0392968841, 0.0, 0.0, 0.0], [-0.0357435644, 0.0, 0.0, 0.0], [-0.0517702773, 0.0, 0.0, 0.0], [0.0202271137, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 15, 19, 20, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_663(xs):
    #Predicts Class 3
    function_dict = np.array([[0.260500014, 1.0, 2.0, 0.0], [0.201499999, 3.0, 4.0, 0.0], [0.272000015, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.212500006, 9.0, 10.0, 0.0], [0.264499992, 11.0, 12.0, 0.0], [0.276499987, 13.0, 14.0, 0.0], [0.0477499999, 15.0, 16.0, 0.0], [0.1105, 17.0, 18.0, 0.0], [0.202500001, 19.0, 20.0, 0.0], [0.256500006, 21.0, 22.0, 0.0], [0.0050992677, 0.0, 0.0, 0.0], [0.176651567, 0.0, 0.0, 0.0], [-0.159820676, 0.0, 0.0, 0.0], [0.36500001, 23.0, 24.0, 0.0], [0.0422499999, 25.0, 26.0, 0.0], [0.0533500016, 27.0, 28.0, 0.0], [0.0945499986, 29.0, 30.0, 0.0], [0.157999992, 31.0, 32.0, 0.0], [-0.0399325602, 0.0, 0.0, 0.0], [-0.168213904, 0.0, 0.0, 0.0], [0.228500009, 33.0, 34.0, 0.0], [-0.116969198, 0.0, 0.0, 0.0], [0.126174435, 0.0, 0.0, 0.0], [0.428499997, 35.0, 36.0, 0.0], [-0.000746713951, 0.0, 0.0, 0.0], [0.130792111, 0.0, 0.0, 0.0], [-0.181305736, 0.0, 0.0, 0.0], [-0.013448488, 0.0, 0.0, 0.0], [0.018035261, 0.0, 0.0, 0.0], [0.147598326, 0.0, 0.0, 0.0], [-0.0907571018, 0.0, 0.0, 0.0], [0.0539561734, 0.0, 0.0, 0.0], [0.00856256671, 0.0, 0.0, 0.0], [0.129442081, 0.0, 0.0, 0.0], [-0.0298602115, 0.0, 0.0, 0.0], [0.0116123809, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 31, 32, 19, 20, 33, 34, 22, 11, 12, 13, 23, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 10, 21, 2, 5, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_664(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0137499999, 3.0, 4.0, 0.0], [0.025150001, 5.0, 6.0, 0.0], [0.00974999927, 7.0, 8.0, 0.0], [-0.245796382, 0.0, 0.0, 0.0], [0.148184583, 0.0, 0.0, 0.0], [0.028549999, 9.0, 10.0, 0.0], [0.00588999968, 11.0, 12.0, 0.0], [0.0723444968, 0.0, 0.0, 0.0], [-0.14650467, 0.0, 0.0, 0.0], [0.0368999988, 13.0, 14.0, 0.0], [0.000549999997, 15.0, 16.0, 0.0], [0.00768500008, 17.0, 18.0, 0.0], [0.0335000008, 19.0, 20.0, 0.0], [0.0447499976, 21.0, 22.0, 0.0], [-0.00358078536, 0.0, 0.0, 0.0], [0.0885224193, 0.0, 0.0, 0.0], [-0.16761522, 0.0, 0.0, 0.0], [0.0140733421, 0.0, 0.0, 0.0], [0.0544289872, 0.0, 0.0, 0.0], [0.178970993, 0.0, 0.0, 0.0], [-0.119881317, 0.0, 0.0, 0.0], [0.00930878613, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_665(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 2.0], [0.172499999, 5.0, 6.0, 0.0], [-0.421000004, 7.0, 8.0, 0.0], [-0.0747268647, 0.0, 0.0, 0.0], [-0.193500012, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [-0.0683055967, 0.0, 0.0, 0.0], [-0.16049999, 13.0, 14.0, 0.0], [-0.885499954, 15.0, 16.0, 2.0], [-0.0727340132, 0.0, 0.0, 0.0], [0.116552681, 0.0, 0.0, 0.0], [0.348500013, 17.0, 18.0, 0.0], [-0.1655, 19.0, 20.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [-0.0176049545, 0.0, 0.0, 0.0], [0.0587751679, 0.0, 0.0, 0.0], [-0.0655570477, 0.0, 0.0, 0.0], [0.428499997, 23.0, 24.0, 0.0], [0.0210849084, 0.0, 0.0, 0.0], [0.0879856646, 0.0, 0.0, 0.0], [-0.0109265801, 0.0, 0.0, 0.0], [0.0724365488, 0.0, 0.0, 0.0], [0.1459039, 0.0, 0.0, 0.0], [0.00436094357, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 19, 20, 21, 22, 4, 15, 16, 10, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 8, 13, 14, 2, 5, 9, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_666(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.730999947, 1.0, 2.0, 4.0], [-0.560500026, 3.0, 4.0, 1.0], [0.0335554779, 0.0, 0.0, 0.0], [-0.96449995, 5.0, 6.0, 3.0], [0.678499997, 7.0, 8.0, 2.0], [-0.847000003, 9.0, 10.0, 4.0], [-0.212500006, 11.0, 12.0, 0.0], [-0.0611017011, 0.0, 0.0, 0.0], [-0.00196448388, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 3.0], [-0.0610009916, 0.0, 0.0, 0.0], [-0.00546929426, 0.0, 0.0, 0.0], [0.0563695766, 0.0, 0.0, 0.0], [-0.0378235728, 0.0, 0.0, 0.0], [0.00933254883, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_667(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.820500016, 1.0, 2.0, 1.0], [-0.989500046, 3.0, 4.0, 3.0], [-0.763499975, 5.0, 6.0, 1.0], [-0.0404580086, 0.0, 0.0, 0.0], [0.00898270775, 0.0, 0.0, 0.0], [-0.228500009, 7.0, 8.0, 0.0], [-0.747500002, 9.0, 10.0, 1.0], [-0.787500024, 11.0, 12.0, 1.0], [-0.988499999, 13.0, 14.0, 3.0], [-0.0528680012, 0.0, 0.0, 0.0], [-0.965499997, 15.0, 16.0, 4.0], [0.0166524518, 0.0, 0.0, 0.0], [0.0707389191, 0.0, 0.0, 0.0], [-0.965499997, 17.0, 18.0, 4.0], [-0.0558903255, 0.0, 0.0, 0.0], [-0.210500002, 19.0, 20.0, 0.0], [-0.953500032, 21.0, 22.0, 4.0], [-0.0144738061, 0.0, 0.0, 0.0], [0.0462492779, 0.0, 0.0, 0.0], [0.074318029, 0.0, 0.0, 0.0], [-0.033351101, 0.0, 0.0, 0.0], [-0.0433807485, 0.0, 0.0, 0.0], [0.00856062584, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 17, 18, 14, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 13, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_668(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.977499962, 3.0, 4.0, 4.0], [-0.0397123769, 0.0, 0.0, 0.0], [-0.0489326641, 0.0, 0.0, 0.0], [-0.109499998, 5.0, 6.0, 0.0], [-0.149500012, 7.0, 8.0, 0.0], [0.0564509891, 0.0, 0.0, 0.0], [-0.174499989, 9.0, 10.0, 0.0], [-0.0367624909, 0.0, 0.0, 0.0], [0.00434173737, 0.0, 0.0, 0.0], [0.0690708086, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 9, 10, 8, 6, 2])
    branch_indices = np.array([0, 1, 4, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_669(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0491999984, 1.0, 2.0, 0.0], [-0.0579499975, 3.0, 4.0, 0.0], [-0.0469499975, 5.0, 6.0, 0.0], [-0.0728500038, 7.0, 8.0, 0.0], [-0.13425453, 0.0, 0.0, 0.0], [0.216140211, 0.0, 0.0, 0.0], [-0.0455499999, 9.0, 10.0, 0.0], [-0.0748500004, 11.0, 12.0, 0.0], [-0.885499954, 13.0, 14.0, 2.0], [-0.0967127606, 0.0, 0.0, 0.0], [-0.0152500002, 15.0, 16.0, 0.0], [-0.0801500008, 17.0, 18.0, 0.0], [-0.173190489, 0.0, 0.0, 0.0], [-0.0656000003, 19.0, 20.0, 0.0], [0.203259125, 0.0, 0.0, 0.0], [-0.0238499995, 21.0, 22.0, 0.0], [-0.00963000022, 23.0, 24.0, 0.0], [-0.00534332031, 0.0, 0.0, 0.0], [0.0937607661, 0.0, 0.0, 0.0], [0.0696738884, 0.0, 0.0, 0.0], [-0.0824995488, 0.0, 0.0, 0.0], [-0.00608638953, 0.0, 0.0, 0.0], [0.204029962, 0.0, 0.0, 0.0], [-0.114743747, 0.0, 0.0, 0.0], [0.00109445746, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 19, 20, 14, 4, 5, 9, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_670(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.0567497686, 0.0, 0.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [0.0925733298, 0.0, 0.0, 0.0], [-0.393000007, 5.0, 6.0, 0.0], [-0.0969518572, 0.0, 0.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.292500019, 11.0, 12.0, 0.0], [0.10024786, 0.0, 0.0, 0.0], [-0.0177379102, 0.0, 0.0, 0.0], [-0.0703289509, 0.0, 0.0, 0.0], [0.000672445574, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 9, 10, 11, 12])
    branch_indices = np.array([0, 2, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_671(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.494000018, 3.0, 4.0, 0.0], [0.194000006, 5.0, 6.0, 0.0], [0.465499997, 7.0, 8.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [-0.438499987, 11.0, 12.0, 0.0], [0.344999999, 13.0, 14.0, 0.0], [0.458500028, 15.0, 16.0, 0.0], [-0.160559207, 0.0, 0.0, 0.0], [0.527999997, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.0535238273, 0.0, 0.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [-0.923500001, 23.0, 24.0, 2.0], [0.430999994, 25.0, 26.0, 0.0], [0.433499992, 27.0, 28.0, 0.0], [0.074365072, 0.0, 0.0, 0.0], [0.518999994, 29.0, 30.0, 0.0], [0.156120092, 0.0, 0.0, 0.0], [0.569999993, 31.0, 32.0, 0.0], [0.0668820366, 0.0, 0.0, 0.0], [-0.114975572, 0.0, 0.0, 0.0], [-0.639999986, 33.0, 34.0, 2.0], [0.253000021, 35.0, 36.0, 0.0], [0.0057493425, 0.0, 0.0, 0.0], [-0.0876588896, 0.0, 0.0, 0.0], [0.527500033, 37.0, 38.0, 0.0], [-0.00126567495, 0.0, 0.0, 0.0], [-0.079253912, 0.0, 0.0, 0.0], [0.0791634545, 0.0, 0.0, 0.0], [-0.0757953078, 0.0, 0.0, 0.0], [-0.0494638421, 0.0, 0.0, 0.0], [0.0204865634, 0.0, 0.0, 0.0], [0.0628015324, 0.0, 0.0, 0.0], [-0.0721719414, 0.0, 0.0, 0.0], [0.0135619119, 0.0, 0.0, 0.0], [0.192392036, 0.0, 0.0, 0.0], [0.0742638558, 0.0, 0.0, 0.0], [-0.0204580314, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 8, 29, 30, 18, 31, 32, 20, 11, 21, 33, 34, 35, 36, 24, 25, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 17, 10, 19, 2, 5, 12, 22, 6, 13, 23, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_672(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.833500028, 1.0, 2.0, 4.0], [-0.782500029, 3.0, 4.0, 1.0], [-0.213499993, 5.0, 6.0, 0.0], [-0.952499986, 7.0, 8.0, 4.0], [-0.933500051, 9.0, 10.0, 3.0], [-0.762499988, 11.0, 12.0, 4.0], [-0.0167668555, 0.0, 0.0, 0.0], [-0.965499997, 13.0, 14.0, 4.0], [-0.929499984, 15.0, 16.0, 4.0], [-0.972499967, 17.0, 18.0, 3.0], [-0.0535697155, 0.0, 0.0, 0.0], [0.0806809664, 0.0, 0.0, 0.0], [0.00127509877, 0.0, 0.0, 0.0], [-0.826499999, 19.0, 20.0, 1.0], [-0.0587565862, 0.0, 0.0, 0.0], [0.0681138933, 0.0, 0.0, 0.0], [-0.00722929323, 0.0, 0.0, 0.0], [0.497500002, 21.0, 22.0, 2.0], [0.0371919237, 0.0, 0.0, 0.0], [-0.0191178266, 0.0, 0.0, 0.0], [0.0580604374, 0.0, 0.0, 0.0], [-0.0562698878, 0.0, 0.0, 0.0], [0.00177572714, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 16, 21, 22, 18, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 9, 17, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_673(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.218499988, 1.0, 2.0, 0.0], [-0.226500005, 3.0, 4.0, 0.0], [-0.9745, 5.0, 6.0, 3.0], [-0.74150002, 7.0, 8.0, 1.0], [-0.055912517, 0.0, 0.0, 0.0], [-0.972499967, 9.0, 10.0, 4.0], [-0.0342346318, 0.0, 0.0, 0.0], [-0.804499984, 11.0, 12.0, 1.0], [-0.711500049, 13.0, 14.0, 1.0], [-0.028250169, 0.0, 0.0, 0.0], [-0.993499994, 15.0, 16.0, 3.0], [-0.019742284, 0.0, 0.0, 0.0], [-0.946500003, 17.0, 18.0, 4.0], [-0.0629891902, 0.0, 0.0, 0.0], [-0.985499978, 19.0, 20.0, 3.0], [0.477999985, 21.0, 22.0, 2.0], [0.0809940174, 0.0, 0.0, 0.0], [0.0980183855, 0.0, 0.0, 0.0], [0.0115121631, 0.0, 0.0, 0.0], [0.0309808664, 0.0, 0.0, 0.0], [-0.0298327338, 0.0, 0.0, 0.0], [0.0385649279, 0.0, 0.0, 0.0], [-0.0234949961, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 17, 18, 13, 19, 20, 4, 9, 21, 22, 16, 6])
    branch_indices = np.array([0, 1, 3, 7, 12, 8, 14, 2, 5, 10, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_674(xs):
    #Predicts Class 2
    function_dict = np.array([[0.331499994, 1.0, 2.0, 2.0], [-0.0363082886, 0.0, 0.0, 0.0], [0.483500004, 3.0, 4.0, 2.0], [-0.218499988, 5.0, 6.0, 0.0], [0.529500008, 7.0, 8.0, 2.0], [0.0604662746, 0.0, 0.0, 0.0], [-0.989500046, 9.0, 10.0, 3.0], [-0.0623157434, 0.0, 0.0, 0.0], [-0.215499997, 11.0, 12.0, 0.0], [-0.0417196862, 0.0, 0.0, 0.0], [0.0363568887, 0.0, 0.0, 0.0], [0.722499967, 13.0, 14.0, 2.0], [-0.183499992, 15.0, 16.0, 0.0], [-0.0301924869, 0.0, 0.0, 0.0], [0.0280454904, 0.0, 0.0, 0.0], [0.0725679472, 0.0, 0.0, 0.0], [-0.0158828534, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 9, 10, 7, 13, 14, 15, 16])
    branch_indices = np.array([0, 2, 3, 6, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_675(xs):
    #Predicts Class 3
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.523499966, 3.0, 4.0, 0.0], [0.561499953, 5.0, 6.0, 0.0], [0.513000011, 7.0, 8.0, 0.0], [0.0755182281, 0.0, 0.0, 0.0], [0.549000025, 9.0, 10.0, 0.0], [0.565500021, 11.0, 12.0, 0.0], [0.503000021, 13.0, 14.0, 0.0], [-0.0585391223, 0.0, 0.0, 0.0], [0.543500006, 15.0, 16.0, 0.0], [-0.0753561035, 0.0, 0.0, 0.0], [0.0830325708, 0.0, 0.0, 0.0], [0.620499969, 17.0, 18.0, 0.0], [0.466499984, 19.0, 20.0, 0.0], [0.0777079463, 0.0, 0.0, 0.0], [-0.0532531589, 0.0, 0.0, 0.0], [0.0142976521, 0.0, 0.0, 0.0], [0.616999984, 21.0, 22.0, 0.0], [0.0244132355, 0.0, 0.0, 0.0], [0.00110712042, 0.0, 0.0, 0.0], [-0.0769045204, 0.0, 0.0, 0.0], [-0.00614190707, 0.0, 0.0, 0.0], [-0.0737718269, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 15, 16, 10, 11, 21, 22, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 6, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_676(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0101999994, 3.0, 4.0, 0.0], [0.025150001, 5.0, 6.0, 0.0], [0.00768500008, 7.0, 8.0, 0.0], [0.0137499999, 9.0, 10.0, 0.0], [0.0966868326, 0.0, 0.0, 0.0], [0.0260500014, 11.0, 12.0, 0.0], [0.0042849998, 13.0, 14.0, 0.0], [0.125573024, 0.0, 0.0, 0.0], [-0.070138447, 0.0, 0.0, 0.0], [-0.218976378, 0.0, 0.0, 0.0], [-0.152549386, 0.0, 0.0, 0.0], [0.0476500019, 15.0, 16.0, 0.0], [0.00185999996, 17.0, 18.0, 0.0], [-0.112072498, 0.0, 0.0, 0.0], [0.03785, 19.0, 20.0, 0.0], [0.0551500022, 21.0, 22.0, 0.0], [-0.00184969581, 0.0, 0.0, 0.0], [0.134921283, 0.0, 0.0, 0.0], [-0.0115924664, 0.0, 0.0, 0.0], [0.177732646, 0.0, 0.0, 0.0], [-0.11313916, 0.0, 0.0, 0.0], [0.00371797802, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 10, 5, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_677(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.523499966, 3.0, 4.0, 0.0], [0.561499953, 5.0, 6.0, 0.0], [0.513000011, 7.0, 8.0, 0.0], [-0.0736544579, 0.0, 0.0, 0.0], [0.549000025, 9.0, 10.0, 0.0], [0.565500021, 11.0, 12.0, 0.0], [0.503000021, 13.0, 14.0, 0.0], [0.0617078617, 0.0, 0.0, 0.0], [0.543500006, 15.0, 16.0, 0.0], [0.0774258003, 0.0, 0.0, 0.0], [-0.0792949721, 0.0, 0.0, 0.0], [0.620499969, 17.0, 18.0, 0.0], [0.466499984, 19.0, 20.0, 0.0], [-0.0755949393, 0.0, 0.0, 0.0], [0.055759687, 0.0, 0.0, 0.0], [-0.0093024075, 0.0, 0.0, 0.0], [0.616999984, 21.0, 22.0, 0.0], [-0.0138894171, 0.0, 0.0, 0.0], [-0.00393582555, 0.0, 0.0, 0.0], [0.0800180584, 0.0, 0.0, 0.0], [0.00901708193, 0.0, 0.0, 0.0], [0.0754050985, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 15, 16, 10, 11, 21, 22, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 6, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_678(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0385513008, 0.0, 0.0, 0.0], [0.398499995, 3.0, 4.0, 2.0], [-0.213499993, 5.0, 6.0, 0.0], [0.463499993, 7.0, 8.0, 2.0], [0.00100404292, 0.0, 0.0, 0.0], [0.0617313869, 0.0, 0.0, 0.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.102499999, 11.0, 12.0, 0.0], [-0.06547831, 0.0, 0.0, 0.0], [-0.983500004, 13.0, 14.0, 3.0], [-0.558500051, 15.0, 16.0, 1.0], [-0.0418659262, 0.0, 0.0, 0.0], [0.0501265042, 0.0, 0.0, 0.0], [-0.0279449821, 0.0, 0.0, 0.0], [0.0262368284, 0.0, 0.0, 0.0], [-0.0305515658, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 9, 13, 14, 15, 16, 12])
    branch_indices = np.array([0, 2, 3, 4, 7, 10, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_679(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.973500013, 1.0, 2.0, 3.0], [-0.217500001, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.969500005, 7.0, 8.0, 4.0], [-0.99849999, 9.0, 10.0, 3.0], [-0.547500014, 11.0, 12.0, 1.0], [-0.0432377569, 0.0, 0.0, 0.0], [-0.976500034, 13.0, 14.0, 4.0], [0.642500043, 15.0, 16.0, 2.0], [-0.0311445333, 0.0, 0.0, 0.0], [-0.207500011, 17.0, 18.0, 0.0], [-0.950500011, 19.0, 20.0, 3.0], [-0.0226183832, 0.0, 0.0, 0.0], [-0.0178159364, 0.0, 0.0, 0.0], [0.05048519, 0.0, 0.0, 0.0], [-0.74150002, 21.0, 22.0, 1.0], [-0.305500001, 23.0, 24.0, 0.0], [0.0672253445, 0.0, 0.0, 0.0], [0.437999994, 25.0, 26.0, 2.0], [0.0934249833, 0.0, 0.0, 0.0], [0.00857706834, 0.0, 0.0, 0.0], [0.000764169905, 0.0, 0.0, 0.0], [-0.07293199, 0.0, 0.0, 0.0], [-0.0232017748, 0.0, 0.0, 0.0], [0.04615191, 0.0, 0.0, 0.0], [0.0597996004, 0.0, 0.0, 0.0], [-0.0372457244, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 21, 22, 23, 24, 9, 17, 25, 26, 19, 20, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 16, 4, 10, 18, 2, 5, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_680(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.930500031, 3.0, 4.0, 3.0], [-0.962499976, 5.0, 6.0, 3.0], [-0.98150003, 7.0, 8.0, 4.0], [0.0303371269, 0.0, 0.0, 0.0], [-0.794499993, 9.0, 10.0, 4.0], [0.657000005, 11.0, 12.0, 2.0], [0.0291085374, 0.0, 0.0, 0.0], [-0.71449995, 13.0, 14.0, 1.0], [-0.983500004, 15.0, 16.0, 3.0], [-0.0241315067, 0.0, 0.0, 0.0], [-0.0636639148, 0.0, 0.0, 0.0], [0.014733295, 0.0, 0.0, 0.0], [-0.195499986, 17.0, 18.0, 0.0], [-0.219500005, 19.0, 20.0, 0.0], [-0.490500003, 21.0, 22.0, 1.0], [0.0858867094, 0.0, 0.0, 0.0], [-0.0389600731, 0.0, 0.0, 0.0], [0.0359764844, 0.0, 0.0, 0.0], [0.0111391088, 0.0, 0.0, 0.0], [-0.0953202397, 0.0, 0.0, 0.0], [0.0545342676, 0.0, 0.0, 0.0], [-0.0215813965, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 17, 18, 19, 20, 4, 21, 22, 16, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 8, 13, 14, 2, 5, 9, 15, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_681(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0599500015, 1.0, 2.0, 0.0], [-0.0658500046, 3.0, 4.0, 0.0], [-0.0496499985, 5.0, 6.0, 0.0], [-0.0728500038, 7.0, 8.0, 0.0], [-0.217285827, 0.0, 0.0, 0.0], [-0.0569499992, 9.0, 10.0, 0.0], [-0.0460999981, 11.0, 12.0, 0.0], [-0.0904500037, 13.0, 14.0, 0.0], [-0.0692999959, 15.0, 16.0, 0.0], [0.00508599449, 0.0, 0.0, 0.0], [0.186420605, 0.0, 0.0, 0.0], [-0.0470499992, 17.0, 18.0, 0.0], [-0.0435499996, 19.0, 20.0, 0.0], [-0.0910999998, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [0.11001204, 0.0, 0.0, 0.0], [0.0268598739, 0.0, 0.0, 0.0], [-0.150685892, 0.0, 0.0, 0.0], [-0.0443794169, 0.0, 0.0, 0.0], [0.156075433, 0.0, 0.0, 0.0], [-0.0382499993, 25.0, 26.0, 0.0], [-0.00326589053, 0.0, 0.0, 0.0], [0.112628013, 0.0, 0.0, 0.0], [-0.155460522, 0.0, 0.0, 0.0], [0.0371723995, 0.0, 0.0, 0.0], [-0.085715726, 0.0, 0.0, 0.0], [0.0025195505, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 4, 9, 10, 17, 18, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_682(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0240500011, 1.0, 2.0, 0.0], [0.0203999989, 3.0, 4.0, 0.0], [0.02685, 5.0, 6.0, 0.0], [0.0110500008, 7.0, 8.0, 0.0], [-0.178706706, 0.0, 0.0, 0.0], [0.0256000012, 9.0, 10.0, 0.0], [-0.822000027, 11.0, 12.0, 2.0], [0.0101999994, 13.0, 14.0, 0.0], [0.136574402, 0.0, 0.0, 0.0], [0.0292528551, 0.0, 0.0, 0.0], [0.194301635, 0.0, 0.0, 0.0], [0.03785, 15.0, 16.0, 0.0], [-0.73150003, 17.0, 18.0, 2.0], [0.00768500008, 19.0, 20.0, 0.0], [-0.182684615, 0.0, 0.0, 0.0], [0.0293500014, 21.0, 22.0, 0.0], [0.0476500019, 23.0, 24.0, 0.0], [0.15428929, 0.0, 0.0, 0.0], [0.00746704545, 0.0, 0.0, 0.0], [-0.000933690113, 0.0, 0.0, 0.0], [0.0908486545, 0.0, 0.0, 0.0], [0.00717215426, 0.0, 0.0, 0.0], [-0.203815907, 0.0, 0.0, 0.0], [0.131042153, 0.0, 0.0, 0.0], [-0.0120984139, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 10, 21, 22, 23, 24, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 15, 16, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_683(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [-0.0318999998, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [-0.080400005, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.116042614, 0.0, 0.0, 0.0], [0.392499983, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.999500036, 15.0, 16.0, 4.0], [0.210999995, 17.0, 18.0, 0.0], [-0.997500002, 19.0, 20.0, 1.0], [-0.999500036, 21.0, 22.0, 1.0], [0.394500017, 23.0, 24.0, 0.0], [-0.16049999, 25.0, 26.0, 0.0], [-0.257499993, 27.0, 28.0, 0.0], [0.145832509, 0.0, 0.0, 0.0], [-0.00800702348, 0.0, 0.0, 0.0], [0.201499999, 29.0, 30.0, 0.0], [-0.11621093, 0.0, 0.0, 0.0], [0.217000008, 31.0, 32.0, 0.0], [-0.0241749194, 0.0, 0.0, 0.0], [-0.137522578, 0.0, 0.0, 0.0], [0.0495862626, 0.0, 0.0, 0.0], [0.103998423, 0.0, 0.0, 0.0], [0.404500008, 33.0, 34.0, 0.0], [0.0326441601, 0.0, 0.0, 0.0], [-0.0275244582, 0.0, 0.0, 0.0], [-0.0077832602, 0.0, 0.0, 0.0], [-0.162399858, 0.0, 0.0, 0.0], [-0.116473399, 0.0, 0.0, 0.0], [0.0310836695, 0.0, 0.0, 0.0], [0.0585487634, 0.0, 0.0, 0.0], [0.0145065431, 0.0, 0.0, 0.0], [-0.0652358159, 0.0, 0.0, 0.0], [0.00689592306, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 15, 16, 29, 30, 18, 31, 32, 20, 5, 21, 22, 23, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 9, 17, 10, 19, 2, 6, 11, 12, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_684(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.759500027, 1.0, 2.0, 1.0], [-0.278500021, 3.0, 4.0, 0.0], [-0.833500028, 5.0, 6.0, 4.0], [-0.0255851094, 0.0, 0.0, 0.0], [-0.971500039, 7.0, 8.0, 4.0], [-0.213499993, 9.0, 10.0, 0.0], [-0.203999996, 11.0, 12.0, 0.0], [-0.180500001, 13.0, 14.0, 0.0], [-0.804499984, 15.0, 16.0, 1.0], [-0.25849998, 17.0, 18.0, 0.0], [-0.199499995, 19.0, 20.0, 0.0], [0.713500023, 21.0, 22.0, 2.0], [-0.0163577013, 0.0, 0.0, 0.0], [0.0453794934, 0.0, 0.0, 0.0], [-0.0568860024, 0.0, 0.0, 0.0], [-0.0162050463, 0.0, 0.0, 0.0], [0.412, 23.0, 24.0, 2.0], [0.577499986, 25.0, 26.0, 2.0], [-0.0766977146, 0.0, 0.0, 0.0], [0.0768315271, 0.0, 0.0, 0.0], [-0.149500012, 27.0, 28.0, 0.0], [0.000199224785, 0.0, 0.0, 0.0], [0.0666655824, 0.0, 0.0, 0.0], [0.0150836203, 0.0, 0.0, 0.0], [0.0953458399, 0.0, 0.0, 0.0], [0.0282411966, 0.0, 0.0, 0.0], [-0.0370291322, 0.0, 0.0, 0.0], [-0.0837239772, 0.0, 0.0, 0.0], [0.0230387766, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 23, 24, 25, 26, 18, 19, 27, 28, 21, 22, 12])
    branch_indices = np.array([0, 1, 4, 7, 8, 16, 2, 5, 9, 17, 10, 20, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_685(xs):
    #Predicts Class 1
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [-0.193500012, 3.0, 4.0, 0.0], [-0.191500008, 5.0, 6.0, 0.0], [-0.973500013, 7.0, 8.0, 4.0], [-0.965499997, 9.0, 10.0, 4.0], [-0.213499993, 11.0, 12.0, 0.0], [0.0625894368, 0.0, 0.0, 0.0], [0.0569421947, 0.0, 0.0, 0.0], [-0.218499988, 13.0, 14.0, 0.0], [-0.0722433776, 0.0, 0.0, 0.0], [-0.0030888014, 0.0, 0.0, 0.0], [-0.527500033, 15.0, 16.0, 1.0], [-0.0614622198, 0.0, 0.0, 0.0], [-0.9745, 17.0, 18.0, 3.0], [0.0309027787, 0.0, 0.0, 0.0], [-0.24149999, 19.0, 20.0, 0.0], [-0.451499999, 21.0, 22.0, 1.0], [-0.0660158545, 0.0, 0.0, 0.0], [0.00765180495, 0.0, 0.0, 0.0], [0.00932685193, 0.0, 0.0, 0.0], [0.0729807168, 0.0, 0.0, 0.0], [-0.0612707622, 0.0, 0.0, 0.0], [0.0253478382, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 17, 18, 14, 9, 10, 19, 20, 21, 22, 12, 6])
    branch_indices = np.array([0, 1, 3, 8, 13, 4, 2, 5, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_686(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.962499976, 3.0, 4.0, 4.0], [0.0260538273, 0.0, 0.0, 0.0], [-0.180500001, 5.0, 6.0, 0.0], [-0.936499953, 7.0, 8.0, 4.0], [0.438499987, 9.0, 10.0, 2.0], [0.022934597, 0.0, 0.0, 0.0], [-0.524999976, 11.0, 12.0, 1.0], [0.685500026, 13.0, 14.0, 2.0], [0.00437860005, 0.0, 0.0, 0.0], [-0.0723795667, 0.0, 0.0, 0.0], [-0.645500004, 15.0, 16.0, 1.0], [0.0918362364, 0.0, 0.0, 0.0], [0.550500035, 17.0, 18.0, 2.0], [-0.789499998, 19.0, 20.0, 4.0], [0.0281654112, 0.0, 0.0, 0.0], [-0.0625738129, 0.0, 0.0, 0.0], [0.0159543417, 0.0, 0.0, 0.0], [-0.0680991486, 0.0, 0.0, 0.0], [0.0452623926, 0.0, 0.0, 0.0], [-0.0147276856, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 6, 15, 16, 12, 17, 18, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 4, 7, 11, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_687(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.557999969, 3.0, 4.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [0.556499958, 7.0, 8.0, 0.0], [0.564499974, 9.0, 10.0, 0.0], [0.0851581842, 0.0, 0.0, 0.0], [-0.0295696948, 0.0, 0.0, 0.0], [0.541499972, 11.0, 12.0, 0.0], [0.0771962181, 0.0, 0.0, 0.0], [-0.0978457704, 0.0, 0.0, 0.0], [-0.0132662645, 0.0, 0.0, 0.0], [0.538499951, 13.0, 14.0, 0.0], [-0.0648309588, 0.0, 0.0, 0.0], [-0.000924297783, 0.0, 0.0, 0.0], [0.104320452, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_688(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0117000006, 3.0, 4.0, 0.0], [0.0237000007, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [-0.196863741, 0.0, 0.0, 0.0], [0.116491482, 0.0, 0.0, 0.0], [0.0256000012, 9.0, 10.0, 0.0], [0.00202000001, 11.0, 12.0, 0.0], [-0.129500002, 13.0, 14.0, 0.0], [-0.0990832821, 0.0, 0.0, 0.0], [0.0368999988, 15.0, 16.0, 0.0], [-0.00496499985, 17.0, 18.0, 0.0], [0.00950999931, 19.0, 20.0, 0.0], [-0.137499988, 21.0, 22.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [0.028549999, 25.0, 26.0, 0.0], [0.0477499999, 27.0, 28.0, 0.0], [-0.00733870408, 0.0, 0.0, 0.0], [0.0790842697, 0.0, 0.0, 0.0], [-0.139707208, 0.0, 0.0, 0.0], [0.111543827, 0.0, 0.0, 0.0], [-0.0124807935, 0.0, 0.0, 0.0], [-0.107046992, 0.0, 0.0, 0.0], [0.154941022, 0.0, 0.0, 0.0], [0.0161037482, 0.0, 0.0, 0.0], [-0.0234815665, 0.0, 0.0, 0.0], [0.150714174, 0.0, 0.0, 0.0], [-0.102774233, 0.0, 0.0, 0.0], [0.0122384401, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 5, 9, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_689(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.393000007, 3.0, 4.0, 0.0], [-0.0746500045, 5.0, 6.0, 0.0], [-0.407499999, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.080400005, 11.0, 12.0, 0.0], [-0.0126499999, 13.0, 14.0, 0.0], [-0.424499989, 15.0, 16.0, 0.0], [0.0814151689, 0.0, 0.0, 0.0], [-0.168500006, 17.0, 18.0, 0.0], [-0.166500002, 19.0, 20.0, 0.0], [-0.153499991, 21.0, 22.0, 0.0], [0.132232442, 0.0, 0.0, 0.0], [-0.10493473, 0.0, 0.0, 0.0], [-0.0123999994, 23.0, 24.0, 0.0], [-0.99849999, 25.0, 26.0, 1.0], [-0.0672325417, 0.0, 0.0, 0.0], [-0.169499993, 27.0, 28.0, 0.0], [-0.102106676, 0.0, 0.0, 0.0], [-0.0222103912, 0.0, 0.0, 0.0], [0.0290887468, 0.0, 0.0, 0.0], [-0.155499995, 29.0, 30.0, 0.0], [-0.0624565929, 0.0, 0.0, 0.0], [0.148035511, 0.0, 0.0, 0.0], [0.203500003, 31.0, 32.0, 0.0], [0.0492500998, 0.0, 0.0, 0.0], [-0.0176406, 0.0, 0.0, 0.0], [-0.0759261549, 0.0, 0.0, 0.0], [0.0615363158, 0.0, 0.0, 0.0], [0.00943382736, 0.0, 0.0, 0.0], [0.0877019912, 0.0, 0.0, 0.0], [-0.0697180554, 0.0, 0.0, 0.0], [0.00684422348, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 8, 27, 28, 18, 19, 20, 29, 30, 22, 12, 13, 23, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 17, 10, 2, 5, 11, 21, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_690(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.722499967, 1.0, 2.0, 1.0], [-0.972499967, 3.0, 4.0, 4.0], [-0.943500042, 5.0, 6.0, 4.0], [-0.805500031, 7.0, 8.0, 1.0], [-0.949499965, 9.0, 10.0, 4.0], [-0.995499969, 11.0, 12.0, 3.0], [-0.125499994, 13.0, 14.0, 0.0], [0.0254154, 0.0, 0.0, 0.0], [-0.0519021191, 0.0, 0.0, 0.0], [-0.810500026, 15.0, 16.0, 1.0], [-0.234499991, 17.0, 18.0, 0.0], [-0.00217746152, 0.0, 0.0, 0.0], [-0.0617939197, 0.0, 0.0, 0.0], [-0.206499994, 19.0, 20.0, 0.0], [0.0593456551, 0.0, 0.0, 0.0], [-0.0121900588, 0.0, 0.0, 0.0], [-0.22299999, 21.0, 22.0, 0.0], [-0.291999996, 23.0, 24.0, 0.0], [-0.191500008, 25.0, 26.0, 0.0], [-0.234499991, 27.0, 28.0, 0.0], [-0.865499973, 29.0, 30.0, 4.0], [-0.0160109047, 0.0, 0.0, 0.0], [0.115855359, 0.0, 0.0, 0.0], [-0.0196769945, 0.0, 0.0, 0.0], [0.0605252869, 0.0, 0.0, 0.0], [-0.0647130758, 0.0, 0.0, 0.0], [0.0159946531, 0.0, 0.0, 0.0], [-0.0287456345, 0.0, 0.0, 0.0], [0.10594292, 0.0, 0.0, 0.0], [-0.089469254, 0.0, 0.0, 0.0], [-0.00407335395, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 15, 21, 22, 23, 24, 25, 26, 11, 12, 27, 28, 29, 30, 14])
    branch_indices = np.array([0, 1, 3, 4, 9, 16, 10, 17, 18, 2, 5, 6, 13, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_691(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.734500051, 1.0, 2.0, 1.0], [-0.949499965, 3.0, 4.0, 4.0], [-0.949499965, 5.0, 6.0, 4.0], [-0.238499999, 7.0, 8.0, 0.0], [-0.234499991, 9.0, 10.0, 0.0], [-0.995499969, 11.0, 12.0, 3.0], [-0.2095, 13.0, 14.0, 0.0], [0.0335825458, 0.0, 0.0, 0.0], [-0.776499987, 15.0, 16.0, 1.0], [-0.290499985, 17.0, 18.0, 0.0], [0.052203849, 0.0, 0.0, 0.0], [-0.0103019886, 0.0, 0.0, 0.0], [-0.245999992, 19.0, 20.0, 0.0], [-0.2465, 21.0, 22.0, 0.0], [0.0449066572, 0.0, 0.0, 0.0], [-0.797500014, 23.0, 24.0, 1.0], [-0.109404877, 0.0, 0.0, 0.0], [0.0227814037, 0.0, 0.0, 0.0], [-0.0448804125, 0.0, 0.0, 0.0], [-0.00172211265, 0.0, 0.0, 0.0], [0.089028053, 0.0, 0.0, 0.0], [-0.305500001, 25.0, 26.0, 0.0], [-0.102684028, 0.0, 0.0, 0.0], [-0.0388688818, 0.0, 0.0, 0.0], [0.0395863205, 0.0, 0.0, 0.0], [-0.0143623818, 0.0, 0.0, 0.0], [0.0505177639, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 23, 24, 16, 17, 18, 10, 11, 19, 20, 25, 26, 22, 14])
    branch_indices = np.array([0, 1, 3, 8, 15, 4, 9, 2, 5, 12, 6, 13, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_692(xs):
    #Predicts Class 2
    function_dict = np.array([[0.436500013, 1.0, 2.0, 2.0], [-0.995499969, 3.0, 4.0, 3.0], [-0.965499997, 5.0, 6.0, 3.0], [-0.0624385141, 0.0, 0.0, 0.0], [0.00233241823, 0.0, 0.0, 0.0], [-0.976500034, 7.0, 8.0, 3.0], [-0.940500021, 9.0, 10.0, 3.0], [0.597499967, 11.0, 12.0, 2.0], [0.0616878979, 0.0, 0.0, 0.0], [-0.0648320019, 0.0, 0.0, 0.0], [-0.855499983, 13.0, 14.0, 3.0], [-0.700500011, 15.0, 16.0, 1.0], [-0.993499994, 17.0, 18.0, 3.0], [0.0419272408, 0.0, 0.0, 0.0], [-0.0339714326, 0.0, 0.0, 0.0], [-0.0118381558, 0.0, 0.0, 0.0], [0.0567308739, 0.0, 0.0, 0.0], [0.0140826106, 0.0, 0.0, 0.0], [-0.0647815987, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 17, 18, 8, 9, 13, 14])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_693(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0491999984, 1.0, 2.0, 0.0], [-0.0579499975, 3.0, 4.0, 0.0], [-0.0469499975, 5.0, 6.0, 0.0], [-0.066399999, 7.0, 8.0, 0.0], [-0.0530999973, 9.0, 10.0, 0.0], [0.195084184, 0.0, 0.0, 0.0], [-0.042750001, 11.0, 12.0, 0.0], [-0.0720499977, 13.0, 14.0, 0.0], [0.121879302, 0.0, 0.0, 0.0], [-0.0568746552, 0.0, 0.0, 0.0], [-0.153525278, 0.0, 0.0, 0.0], [-0.0455499999, 15.0, 16.0, 0.0], [-0.0394999981, 17.0, 18.0, 0.0], [-0.0762000009, 19.0, 20.0, 0.0], [-0.1506574, 0.0, 0.0, 0.0], [-0.0985184386, 0.0, 0.0, 0.0], [-0.0232700724, 0.0, 0.0, 0.0], [0.150835842, 0.0, 0.0, 0.0], [-0.0307, 21.0, 22.0, 0.0], [-0.00549201015, 0.0, 0.0, 0.0], [0.0957110226, 0.0, 0.0, 0.0], [-0.109922618, 0.0, 0.0, 0.0], [0.00354273012, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 10, 5, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_694(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0914499983, 3.0, 4.0, 0.0], [-0.0793000013, 5.0, 6.0, 0.0], [-0.0973500013, 7.0, 8.0, 0.0], [0.149424523, 0.0, 0.0, 0.0], [-0.0811500028, 9.0, 10.0, 0.0], [-0.0494500026, 11.0, 12.0, 0.0], [-0.100500003, 13.0, 14.0, 0.0], [-0.0776422322, 0.0, 0.0, 0.0], [-0.0096195545, 0.0, 0.0, 0.0], [-0.191470549, 0.0, 0.0, 0.0], [-0.0551500022, 15.0, 16.0, 0.0], [-0.0466499999, 17.0, 18.0, 0.0], [-0.103500001, 19.0, 20.0, 0.0], [0.101705439, 0.0, 0.0, 0.0], [-0.0603, 21.0, 22.0, 0.0], [0.159771204, 0.0, 0.0, 0.0], [-0.191950575, 0.0, 0.0, 0.0], [-0.0429500006, 23.0, 24.0, 0.0], [0.005163908, 0.0, 0.0, 0.0], [-0.0648460612, 0.0, 0.0, 0.0], [0.0542465821, 0.0, 0.0, 0.0], [-0.10973344, 0.0, 0.0, 0.0], [0.0896082371, 0.0, 0.0, 0.0], [-0.00718099298, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 10, 21, 22, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 15, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_695(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 2.0], [0.00518500013, 5.0, 6.0, 0.0], [0.620499969, 7.0, 8.0, 0.0], [-0.0725346506, 0.0, 0.0, 0.0], [-0.193500012, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [0.569999993, 13.0, 14.0, 0.0], [-0.0651944652, 0.0, 0.0, 0.0], [-0.360500008, 15.0, 16.0, 0.0], [-0.0731819123, 0.0, 0.0, 0.0], [0.194000006, 17.0, 18.0, 0.0], [-0.747500002, 19.0, 20.0, 2.0], [0.561499953, 21.0, 22.0, 0.0], [0.118310533, 0.0, 0.0, 0.0], [-0.0201754216, 0.0, 0.0, 0.0], [0.0622703694, 0.0, 0.0, 0.0], [0.0265034586, 0.0, 0.0, 0.0], [0.108005255, 0.0, 0.0, 0.0], [0.354999989, 23.0, 24.0, 0.0], [-0.0724682361, 0.0, 0.0, 0.0], [-0.00150915305, 0.0, 0.0, 0.0], [-0.0804430246, 0.0, 0.0, 0.0], [-0.0316270478, 0.0, 0.0, 0.0], [0.0567472652, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 4, 15, 16, 10, 17, 18, 23, 24, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 6, 11, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_696(xs):
    #Predicts Class 0
    function_dict = np.array([[0.29549998, 1.0, 2.0, 2.0], [-0.0369948335, 0.0, 0.0, 0.0], [-0.827499986, 3.0, 4.0, 1.0], [0.0453019105, 0.0, 0.0, 0.0], [-0.281499982, 5.0, 6.0, 0.0], [-0.990499973, 7.0, 8.0, 3.0], [-0.99849999, 9.0, 10.0, 3.0], [-0.0612762719, 0.0, 0.0, 0.0], [0.00824128091, 0.0, 0.0, 0.0], [-0.732499957, 11.0, 12.0, 1.0], [-0.111500002, 13.0, 14.0, 0.0], [0.0927324146, 0.0, 0.0, 0.0], [-0.0196352918, 0.0, 0.0, 0.0], [0.00703115901, 0.0, 0.0, 0.0], [-0.0462942608, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 8, 11, 12, 13, 14])
    branch_indices = np.array([0, 2, 4, 5, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_697(xs):
    #Predicts Class 1
    function_dict = np.array([[0.635499954, 1.0, 2.0, 2.0], [-0.684499979, 3.0, 4.0, 1.0], [0.67750001, 5.0, 6.0, 2.0], [-0.718500018, 7.0, 8.0, 1.0], [-0.966500044, 9.0, 10.0, 4.0], [-0.0514843911, 0.0, 0.0, 0.0], [-0.984500051, 11.0, 12.0, 3.0], [-0.75849998, 13.0, 14.0, 1.0], [-0.0417139307, 0.0, 0.0, 0.0], [-0.030155303, 0.0, 0.0, 0.0], [-0.96449995, 15.0, 16.0, 3.0], [-0.0191011969, 0.0, 0.0, 0.0], [0.0439306796, 0.0, 0.0, 0.0], [-0.997500002, 17.0, 18.0, 3.0], [0.489499986, 19.0, 20.0, 2.0], [-0.944499969, 21.0, 22.0, 4.0], [-0.0109489635, 0.0, 0.0, 0.0], [-0.0374915488, 0.0, 0.0, 0.0], [0.00510114711, 0.0, 0.0, 0.0], [0.0673040673, 0.0, 0.0, 0.0], [-0.0147837829, 0.0, 0.0, 0.0], [0.10285227, 0.0, 0.0, 0.0], [0.0161461979, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 21, 22, 16, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 15, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_698(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.806499958, 1.0, 2.0, 4.0], [-0.872500002, 3.0, 4.0, 4.0], [-0.537999988, 5.0, 6.0, 1.0], [-0.983500004, 7.0, 8.0, 3.0], [-0.0456632935, 0.0, 0.0, 0.0], [-0.00748160342, 0.0, 0.0, 0.0], [0.0458432026, 0.0, 0.0, 0.0], [-0.169499993, 9.0, 10.0, 0.0], [-0.912500024, 11.0, 12.0, 4.0], [-0.217500001, 13.0, 14.0, 0.0], [0.035873659, 0.0, 0.0, 0.0], [-0.729499996, 15.0, 16.0, 1.0], [0.0863141343, 0.0, 0.0, 0.0], [-0.00779369194, 0.0, 0.0, 0.0], [-0.0685325414, 0.0, 0.0, 0.0], [0.0401771702, 0.0, 0.0, 0.0], [-0.0395875685, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_699(xs):
    #Predicts Class 3
    function_dict = np.array([[0.00185999996, 1.0, 2.0, 0.0], [-0.000714999973, 3.0, 4.0, 0.0], [0.0079549998, 5.0, 6.0, 0.0], [-0.00163000007, 7.0, 8.0, 0.0], [0.000549999997, 9.0, 10.0, 0.0], [0.00456999987, 11.0, 12.0, 0.0], [0.0192999989, 13.0, 14.0, 0.0], [-0.00413500005, 15.0, 16.0, 0.0], [-0.150995091, 0.0, 0.0, 0.0], [0.21180439, 0.0, 0.0, 0.0], [0.00384804001, 0.0, 0.0, 0.0], [0.00280499994, 17.0, 18.0, 0.0], [0.00655000005, 19.0, 20.0, 0.0], [0.0101999994, 21.0, 22.0, 0.0], [0.025150001, 23.0, 24.0, 0.0], [-0.00496499985, 25.0, 26.0, 0.0], [-0.00209000008, 27.0, 28.0, 0.0], [-0.123234734, 0.0, 0.0, 0.0], [0.0785310045, 0.0, 0.0, 0.0], [-0.196646169, 0.0, 0.0, 0.0], [-0.0334934667, 0.0, 0.0, 0.0], [0.0331032313, 0.0, 0.0, 0.0], [0.145364225, 0.0, 0.0, 0.0], [0.0234000012, 29.0, 30.0, 0.0], [0.028549999, 31.0, 32.0, 0.0], [0.00384719134, 0.0, 0.0, 0.0], [-0.13583003, 0.0, 0.0, 0.0], [0.150436848, 0.0, 0.0, 0.0], [0.035771329, 0.0, 0.0, 0.0], [-0.0294650216, 0.0, 0.0, 0.0], [-0.10009262, 0.0, 0.0, 0.0], [0.101149745, 0.0, 0.0, 0.0], [-0.00428872509, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 9, 10, 17, 18, 19, 20, 21, 22, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 12, 6, 13, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_700(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0240500011, 1.0, 2.0, 0.0], [0.0203999989, 3.0, 4.0, 0.0], [0.02685, 5.0, 6.0, 0.0], [0.0110500008, 7.0, 8.0, 0.0], [-0.149671823, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.0353999995, 11.0, 12.0, 0.0], [0.0079549998, 13.0, 14.0, 0.0], [0.120182574, 0.0, 0.0, 0.0], [0.166992009, 0.0, 0.0, 0.0], [0.0375756845, 0.0, 0.0, 0.0], [0.0288500004, 15.0, 16.0, 0.0], [0.0417999998, 17.0, 18.0, 0.0], [0.00456999987, 19.0, 20.0, 0.0], [-0.119510822, 0.0, 0.0, 0.0], [-0.0390618928, 0.0, 0.0, 0.0], [-0.144662127, 0.0, 0.0, 0.0], [0.146387056, 0.0, 0.0, 0.0], [0.0477499999, 21.0, 22.0, 0.0], [-0.0043640933, 0.0, 0.0, 0.0], [0.126012847, 0.0, 0.0, 0.0], [-0.111496396, 0.0, 0.0, 0.0], [0.0107621076, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 10, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_701(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.99849999, 3.0, 4.0, 4.0], [0.0582190938, 0.0, 0.0, 0.0], [-0.0315500014, 5.0, 6.0, 0.0], [0.0575112179, 0.0, 0.0, 0.0], [-0.0748500004, 7.0, 8.0, 0.0], [0.198500007, 9.0, 10.0, 0.0], [-0.149500012, 11.0, 12.0, 0.0], [0.113479212, 0.0, 0.0, 0.0], [-0.0863070413, 0.0, 0.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [0.00697062584, 0.0, 0.0, 0.0], [-0.0926696137, 0.0, 0.0, 0.0], [0.00435195351, 0.0, 0.0, 0.0], [-0.0922703892, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_702(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0433861762, 0.0, 0.0, 0.0], [-0.0727999955, 3.0, 4.0, 0.0], [-0.113499999, 5.0, 6.0, 0.0], [0.0497755706, 0.0, 0.0, 0.0], [-0.149500012, 7.0, 8.0, 0.0], [-0.0467568561, 0.0, 0.0, 0.0], [-0.585500002, 9.0, 10.0, 1.0], [0.0388358422, 0.0, 0.0, 0.0], [0.00664858054, 0.0, 0.0, 0.0], [-0.0316426978, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 8, 6, 4])
    branch_indices = np.array([0, 2, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_703(xs):
    #Predicts Class 1
    function_dict = np.array([[0.539499998, 1.0, 2.0, 2.0], [-0.132499993, 3.0, 4.0, 0.0], [-0.235500008, 5.0, 6.0, 0.0], [-0.192499995, 7.0, 8.0, 0.0], [-0.0328268036, 0.0, 0.0, 0.0], [-0.255999982, 9.0, 10.0, 0.0], [-0.634500027, 11.0, 12.0, 1.0], [0.330500007, 13.0, 14.0, 2.0], [0.0554606244, 0.0, 0.0, 0.0], [-0.315500021, 15.0, 16.0, 0.0], [0.0440692119, 0.0, 0.0, 0.0], [0.00467025908, 0.0, 0.0, 0.0], [-0.082972385, 0.0, 0.0, 0.0], [0.058666978, 0.0, 0.0, 0.0], [-0.228500009, 17.0, 18.0, 0.0], [-0.907999992, 19.0, 20.0, 4.0], [0.65200001, 21.0, 22.0, 2.0], [0.0203858707, 0.0, 0.0, 0.0], [-0.0429577492, 0.0, 0.0, 0.0], [-0.00137017621, 0.0, 0.0, 0.0], [0.0429211892, 0.0, 0.0, 0.0], [-0.0506763235, 0.0, 0.0, 0.0], [-0.00471968623, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 17, 18, 8, 4, 19, 20, 21, 22, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 14, 2, 5, 9, 15, 16, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_704(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.977499962, 3.0, 4.0, 4.0], [-0.0468603186, 0.0, 0.0, 0.0], [-0.0411784612, 0.0, 0.0, 0.0], [-0.972499967, 5.0, 6.0, 4.0], [0.0499351472, 0.0, 0.0, 0.0], [-0.207500011, 7.0, 8.0, 0.0], [-0.661000013, 9.0, 10.0, 1.0], [0.529500008, 11.0, 12.0, 2.0], [-0.0542298183, 0.0, 0.0, 0.0], [0.00675128354, 0.0, 0.0, 0.0], [-0.0161256008, 0.0, 0.0, 0.0], [0.0415578261, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 5, 9, 10, 11, 12, 2])
    branch_indices = np.array([0, 1, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_705(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0569499992, 1.0, 2.0, 0.0], [-0.0658500046, 3.0, 4.0, 0.0], [-0.0496499985, 5.0, 6.0, 0.0], [-0.0728500038, 7.0, 8.0, 0.0], [-0.135673344, 0.0, 0.0, 0.0], [0.184919029, 0.0, 0.0, 0.0], [-0.0460999981, 9.0, 10.0, 0.0], [-0.0748500004, 11.0, 12.0, 0.0], [0.0985034034, 0.0, 0.0, 0.0], [-0.146608472, 0.0, 0.0, 0.0], [-0.0435499996, 13.0, 14.0, 0.0], [-0.0801500008, 15.0, 16.0, 0.0], [-0.143340036, 0.0, 0.0, 0.0], [0.155932918, 0.0, 0.0, 0.0], [-0.0382499993, 17.0, 18.0, 0.0], [-0.00527200336, 0.0, 0.0, 0.0], [0.0753202438, 0.0, 0.0, 0.0], [-0.0748645291, 0.0, 0.0, 0.0], [0.00245740451, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_706(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0867500007, 5.0, 6.0, 0.0], [0.0560500026, 7.0, 8.0, 0.0], [0.103576735, 0.0, 0.0, 0.0], [-0.118086874, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.0477499999, 11.0, 12.0, 0.0], [-0.934000015, 13.0, 14.0, 2.0], [0.0883999988, 15.0, 16.0, 0.0], [-0.10247542, 0.0, 0.0, 0.0], [0.0417999998, 17.0, 18.0, 0.0], [0.149269208, 0.0, 0.0, 0.0], [-0.112035729, 0.0, 0.0, 0.0], [0.0262102112, 0.0, 0.0, 0.0], [0.0894374549, 0.0, 0.0, 0.0], [0.0892499983, 19.0, 20.0, 0.0], [0.00139777106, 0.0, 0.0, 0.0], [-0.0817614049, 0.0, 0.0, 0.0], [-0.112357058, 0.0, 0.0, 0.0], [0.0258127991, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 15, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_707(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.382499993, 3.0, 4.0, 0.0], [-0.0746500045, 5.0, 6.0, 0.0], [-0.394500017, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.080400005, 11.0, 12.0, 0.0], [-0.032850001, 13.0, 14.0, 0.0], [-0.412999988, 15.0, 16.0, 0.0], [0.0831641555, 0.0, 0.0, 0.0], [-0.1655, 17.0, 18.0, 0.0], [-0.166500002, 19.0, 20.0, 0.0], [-0.153499991, 21.0, 22.0, 0.0], [0.110498339, 0.0, 0.0, 0.0], [-0.120253675, 0.0, 0.0, 0.0], [-0.0123999994, 23.0, 24.0, 0.0], [-0.439999998, 25.0, 26.0, 0.0], [-0.0968173146, 0.0, 0.0, 0.0], [-0.0867570341, 0.0, 0.0, 0.0], [-0.00196929299, 0.0, 0.0, 0.0], [-0.0311649367, 0.0, 0.0, 0.0], [0.0196687374, 0.0, 0.0, 0.0], [-0.155499995, 27.0, 28.0, 0.0], [-0.0428540334, 0.0, 0.0, 0.0], [-0.0126499999, 29.0, 30.0, 0.0], [0.203500003, 31.0, 32.0, 0.0], [-0.0307011399, 0.0, 0.0, 0.0], [0.0668084845, 0.0, 0.0, 0.0], [0.00439536525, 0.0, 0.0, 0.0], [0.0529725887, 0.0, 0.0, 0.0], [-0.0196350273, 0.0, 0.0, 0.0], [0.134496316, 0.0, 0.0, 0.0], [-0.0468721464, 0.0, 0.0, 0.0], [0.00346703944, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 8, 17, 18, 19, 20, 27, 28, 22, 12, 13, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 10, 2, 5, 11, 21, 6, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_708(xs):
    #Predicts Class 0
    function_dict = np.array([[0.600499988, 1.0, 2.0, 2.0], [-0.782500029, 3.0, 4.0, 1.0], [-0.259499997, 5.0, 6.0, 0.0], [-0.961500049, 7.0, 8.0, 4.0], [-0.263500005, 9.0, 10.0, 0.0], [0.664499998, 11.0, 12.0, 2.0], [-0.216499999, 13.0, 14.0, 0.0], [-0.995499969, 15.0, 16.0, 3.0], [-0.993499994, 17.0, 18.0, 3.0], [0.0360862501, 0.0, 0.0, 0.0], [-0.221500009, 19.0, 20.0, 0.0], [0.0181268305, 0.0, 0.0, 0.0], [-0.0666713193, 0.0, 0.0, 0.0], [0.0751181617, 0.0, 0.0, 0.0], [-0.183499992, 21.0, 22.0, 0.0], [-0.048196651, 0.0, 0.0, 0.0], [0.0175770354, 0.0, 0.0, 0.0], [0.0733420327, 0.0, 0.0, 0.0], [0.0134818451, 0.0, 0.0, 0.0], [-0.0838528425, 0.0, 0.0, 0.0], [-0.925500035, 23.0, 24.0, 4.0], [-0.0352553651, 0.0, 0.0, 0.0], [-0.142000005, 25.0, 26.0, 0.0], [-0.0324808657, 0.0, 0.0, 0.0], [0.0251632277, 0.0, 0.0, 0.0], [0.0448246561, 0.0, 0.0, 0.0], [0.00619096728, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 9, 19, 23, 24, 11, 12, 13, 21, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 8, 4, 10, 20, 2, 5, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_709(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.556499958, 3.0, 4.0, 1.0], [-0.314999998, 5.0, 6.0, 0.0], [0.603500009, 7.0, 8.0, 2.0], [-0.424499989, 9.0, 10.0, 1.0], [0.0198245943, 0.0, 0.0, 0.0], [0.584499955, 11.0, 12.0, 2.0], [-0.941499949, 13.0, 14.0, 4.0], [-0.0494408123, 0.0, 0.0, 0.0], [0.0585758016, 0.0, 0.0, 0.0], [-0.016115047, 0.0, 0.0, 0.0], [-0.0104076788, 0.0, 0.0, 0.0], [-0.0501278713, 0.0, 0.0, 0.0], [-0.132499993, 15.0, 16.0, 0.0], [-0.772500038, 17.0, 18.0, 1.0], [0.00497269491, 0.0, 0.0, 0.0], [-0.0508742593, 0.0, 0.0, 0.0], [-0.00533941388, 0.0, 0.0, 0.0], [0.0621627346, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_710(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.401499987, 1.0, 2.0, 1.0], [-0.940500021, 3.0, 4.0, 4.0], [0.024651967, 0.0, 0.0, 0.0], [-0.956499994, 5.0, 6.0, 4.0], [0.722499967, 7.0, 8.0, 2.0], [0.482500017, 9.0, 10.0, 2.0], [0.0547173731, 0.0, 0.0, 0.0], [-0.216499999, 11.0, 12.0, 0.0], [-0.222499996, 13.0, 14.0, 0.0], [0.436500013, 15.0, 16.0, 2.0], [-0.986500025, 17.0, 18.0, 3.0], [-0.0773568302, 0.0, 0.0, 0.0], [-0.192499995, 19.0, 20.0, 0.0], [0.0406997614, 0.0, 0.0, 0.0], [-0.00562007353, 0.0, 0.0, 0.0], [-0.0114119062, 0.0, 0.0, 0.0], [0.051486332, 0.0, 0.0, 0.0], [-0.0640200078, 0.0, 0.0, 0.0], [-6.36234927e-06, 0.0, 0.0, 0.0], [0.031851463, 0.0, 0.0, 0.0], [-0.0316074379, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 6, 11, 19, 20, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 7, 12, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_711(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.795000017, 3.0, 4.0, 2.0], [-0.208499998, 5.0, 6.0, 0.0], [-0.995499969, 7.0, 8.0, 1.0], [0.0835015625, 0.0, 0.0, 0.0], [0.0338361487, 0.0, 0.0, 0.0], [0.101500005, 9.0, 10.0, 0.0], [-0.142500013, 11.0, 12.0, 0.0], [0.0743241906, 0.0, 0.0, 0.0], [-0.00567999994, 13.0, 14.0, 0.0], [0.405499995, 15.0, 16.0, 0.0], [-0.161500007, 17.0, 18.0, 0.0], [-0.137499988, 19.0, 20.0, 0.0], [-0.0527999997, 21.0, 22.0, 0.0], [-0.112700634, 0.0, 0.0, 0.0], [0.000133852998, 0.0, 0.0, 0.0], [0.0245903134, 0.0, 0.0, 0.0], [0.00562245166, 0.0, 0.0, 0.0], [-0.122874223, 0.0, 0.0, 0.0], [0.0527206473, 0.0, 0.0, 0.0], [-0.00020440876, 0.0, 0.0, 0.0], [-0.0654461086, 0.0, 0.0, 0.0], [0.070055753, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 21, 22, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 13, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_712(xs):
    #Predicts Class 4
    function_dict = np.array([[0.111500002, 1.0, 2.0, 0.0], [0.0941499993, 3.0, 4.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.086848028, 0.0, 0.0, 0.0], [-0.109043561, 0.0, 0.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0885500014, 11.0, 12.0, 0.0], [-0.0852885768, 0.0, 0.0, 0.0], [0.195499986, 13.0, 14.0, 0.0], [-0.0421817899, 0.0, 0.0, 0.0], [0.0854000002, 15.0, 16.0, 0.0], [0.0954741761, 0.0, 0.0, 0.0], [0.00569315022, 0.0, 0.0, 0.0], [0.0746372789, 0.0, 0.0, 0.0], [0.000939467922, 0.0, 0.0, 0.0], [-0.069497101, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 13, 14, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_713(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [-0.995499969, 5.0, 6.0, 1.0], [0.5625, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.344999999, 11.0, 12.0, 0.0], [-0.795000017, 13.0, 14.0, 2.0], [-0.421000004, 15.0, 16.0, 0.0], [0.0797438025, 0.0, 0.0, 0.0], [-0.108129807, 0.0, 0.0, 0.0], [0.0247510783, 0.0, 0.0, 0.0], [0.193000004, 17.0, 18.0, 0.0], [0.430999994, 19.0, 20.0, 0.0], [-0.0623655133, 0.0, 0.0, 0.0], [0.0200989209, 0.0, 0.0, 0.0], [-0.0605111569, 0.0, 0.0, 0.0], [-0.401000023, 21.0, 22.0, 0.0], [-0.885499954, 23.0, 24.0, 2.0], [0.151952609, 0.0, 0.0, 0.0], [-0.104455315, 0.0, 0.0, 0.0], [0.527500033, 25.0, 26.0, 0.0], [0.0943384469, 0.0, 0.0, 0.0], [-0.00510815112, 0.0, 0.0, 0.0], [-0.0470289439, 0.0, 0.0, 0.0], [0.0621497259, 0.0, 0.0, 0.0], [0.0441956073, 0.0, 0.0, 0.0], [-0.0334087387, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 21, 22, 8, 9, 10, 23, 24, 18, 19, 25, 26, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 16, 4, 2, 5, 11, 17, 12, 20, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_714(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.960500002, 1.0, 2.0, 3.0], [0.411500007, 3.0, 4.0, 2.0], [0.516499996, 5.0, 6.0, 2.0], [-0.825500011, 7.0, 8.0, 1.0], [0.449499995, 9.0, 10.0, 2.0], [0.0503850318, 0.0, 0.0, 0.0], [-0.860499978, 11.0, 12.0, 4.0], [0.012275951, 0.0, 0.0, 0.0], [-0.0659722313, 0.0, 0.0, 0.0], [0.0521404594, 0.0, 0.0, 0.0], [-0.78550005, 13.0, 14.0, 1.0], [-0.0458199233, 0.0, 0.0, 0.0], [0.0326789357, 0.0, 0.0, 0.0], [-0.808500051, 15.0, 16.0, 1.0], [-0.700500011, 17.0, 18.0, 1.0], [0.00345462863, 0.0, 0.0, 0.0], [-0.0672842935, 0.0, 0.0, 0.0], [0.03848131, 0.0, 0.0, 0.0], [-0.0237100217, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 15, 16, 17, 18, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 4, 10, 13, 14, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_715(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.2755, 1.0, 2.0, 0.0], [-0.884500027, 3.0, 4.0, 4.0], [-0.218499988, 5.0, 6.0, 0.0], [-0.332499981, 7.0, 8.0, 0.0], [-0.0278677978, 0.0, 0.0, 0.0], [-0.986500025, 9.0, 10.0, 3.0], [-0.985499978, 11.0, 12.0, 3.0], [-0.0175153688, 0.0, 0.0, 0.0], [0.530499995, 13.0, 14.0, 2.0], [-0.68599999, 15.0, 16.0, 1.0], [-0.695500016, 17.0, 18.0, 1.0], [-0.169499993, 19.0, 20.0, 0.0], [-0.953500032, 21.0, 22.0, 4.0], [-0.00625733612, 0.0, 0.0, 0.0], [0.081067577, 0.0, 0.0, 0.0], [-0.788500011, 23.0, 24.0, 1.0], [0.0126302075, 0.0, 0.0, 0.0], [0.0555680953, 0.0, 0.0, 0.0], [-0.0637623891, 0.0, 0.0, 0.0], [0.497999996, 25.0, 26.0, 2.0], [-0.0168297272, 0.0, 0.0, 0.0], [-0.0583932735, 0.0, 0.0, 0.0], [0.0324702784, 0.0, 0.0, 0.0], [-0.011567262, 0.0, 0.0, 0.0], [-0.0846583173, 0.0, 0.0, 0.0], [0.079046227, 0.0, 0.0, 0.0], [-0.0112997703, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 4, 23, 24, 16, 17, 18, 25, 26, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 8, 2, 5, 9, 15, 10, 6, 11, 19, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_716(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0801500008, 1.0, 2.0, 0.0], [-0.968500018, 3.0, 4.0, 4.0], [-0.0343670212, 0.0, 0.0, 0.0], [-0.208499998, 5.0, 6.0, 0.0], [-0.24849999, 7.0, 8.0, 0.0], [0.0172029771, 0.0, 0.0, 0.0], [-0.0616084263, 0.0, 0.0, 0.0], [-0.884500027, 9.0, 10.0, 4.0], [-0.889500022, 11.0, 12.0, 4.0], [0.613499999, 13.0, 14.0, 2.0], [0.0344960727, 0.0, 0.0, 0.0], [-0.628000021, 15.0, 16.0, 1.0], [0.68599999, 17.0, 18.0, 2.0], [0.0113744782, 0.0, 0.0, 0.0], [-0.0800048634, 0.0, 0.0, 0.0], [0.0625516251, 0.0, 0.0, 0.0], [0.000573690224, 0.0, 0.0, 0.0], [-0.0515402965, 0.0, 0.0, 0.0], [0.0225112345, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 13, 14, 10, 15, 16, 17, 18, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 9, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_717(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.210500002, 1.0, 2.0, 0.0], [-0.273499995, 3.0, 4.0, 0.0], [-0.20449999, 5.0, 6.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [-0.770500004, 9.0, 10.0, 2.0], [-0.205500007, 11.0, 12.0, 0.0], [-0.193500012, 13.0, 14.0, 0.0], [-0.37349999, 15.0, 16.0, 0.0], [-0.283500016, 17.0, 18.0, 0.0], [-0.144809097, 0.0, 0.0, 0.0], [-0.0109070493, 0.0, 0.0, 0.0], [0.0201668106, 0.0, 0.0, 0.0], [0.117358901, 0.0, 0.0, 0.0], [-0.0862423331, 0.0, 0.0, 0.0], [-0.190499991, 19.0, 20.0, 0.0], [0.0121844914, 0.0, 0.0, 0.0], [-0.0669606403, 0.0, 0.0, 0.0], [0.0580112301, 0.0, 0.0, 0.0], [0.00745370472, 0.0, 0.0, 0.0], [-0.191500008, 21.0, 22.0, 0.0], [-0.162499994, 23.0, 24.0, 0.0], [-0.019126242, 0.0, 0.0, 0.0], [0.132596239, 0.0, 0.0, 0.0], [-0.0797975361, 0.0, 0.0, 0.0], [0.000977879041, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 9, 10, 11, 12, 13, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 8, 4, 2, 5, 6, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_718(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.210500002, 1.0, 2.0, 0.0], [-0.273499995, 3.0, 4.0, 0.0], [-0.20449999, 5.0, 6.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.770500004, 9.0, 10.0, 2.0], [-0.205500007, 11.0, 12.0, 0.0], [-0.996500015, 13.0, 14.0, 1.0], [-0.923500001, 15.0, 16.0, 2.0], [-0.923500001, 17.0, 18.0, 2.0], [0.167424619, 0.0, 0.0, 0.0], [0.00321413274, 0.0, 0.0, 0.0], [-0.0237862673, 0.0, 0.0, 0.0], [-0.116917796, 0.0, 0.0, 0.0], [-0.193500012, 19.0, 20.0, 0.0], [-0.0942521915, 0.0, 0.0, 0.0], [-0.401000023, 21.0, 22.0, 0.0], [-0.0553592704, 0.0, 0.0, 0.0], [-0.294, 23.0, 24.0, 0.0], [0.0536984466, 0.0, 0.0, 0.0], [0.117451675, 0.0, 0.0, 0.0], [-0.190499991, 25.0, 26.0, 0.0], [0.00540082809, 0.0, 0.0, 0.0], [0.111175053, 0.0, 0.0, 0.0], [-0.0767713934, 0.0, 0.0, 0.0], [-0.0272494499, 0.0, 0.0, 0.0], [-0.0686919242, 0.0, 0.0, 0.0], [0.000738393632, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 23, 24, 18, 9, 10, 11, 12, 19, 25, 26, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 2, 5, 6, 13, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_719(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [-0.086413011, 0.0, 0.0, 0.0], [0.0584149249, 0.0, 0.0, 0.0], [-0.000500309397, 0.0, 0.0, 0.0], [0.556499958, 9.0, 10.0, 0.0], [0.0862212405, 0.0, 0.0, 0.0], [0.539999962, 11.0, 12.0, 0.0], [-0.0594738871, 0.0, 0.0, 0.0], [-0.00211124774, 0.0, 0.0, 0.0], [0.0498399138, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_720(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0314718969, 0.0, 0.0, 0.0], [0.398499995, 3.0, 4.0, 2.0], [-0.801499963, 5.0, 6.0, 1.0], [0.484499991, 7.0, 8.0, 2.0], [0.0524455868, 0.0, 0.0, 0.0], [0.00492185215, 0.0, 0.0, 0.0], [-0.235500008, 9.0, 10.0, 0.0], [-0.102499999, 11.0, 12.0, 0.0], [0.0198804513, 0.0, 0.0, 0.0], [-0.202500001, 13.0, 14.0, 0.0], [-0.560000002, 15.0, 16.0, 1.0], [-0.033227779, 0.0, 0.0, 0.0], [-0.0685972869, 0.0, 0.0, 0.0], [-0.00647018384, 0.0, 0.0, 0.0], [0.0279337503, 0.0, 0.0, 0.0], [-0.0217901915, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 9, 13, 14, 15, 16, 12])
    branch_indices = np.array([0, 2, 3, 4, 7, 10, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_721(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.845499992, 3.0, 4.0, 1.0], [-0.980499983, 5.0, 6.0, 3.0], [-0.0365998223, 0.0, 0.0, 0.0], [-0.289499998, 7.0, 8.0, 0.0], [-0.325500011, 9.0, 10.0, 0.0], [-0.645500004, 11.0, 12.0, 1.0], [0.0675818324, 0.0, 0.0, 0.0], [-0.980499983, 13.0, 14.0, 3.0], [-0.037693724, 0.0, 0.0, 0.0], [-0.922500014, 15.0, 16.0, 4.0], [-0.0650013462, 0.0, 0.0, 0.0], [0.0128278183, 0.0, 0.0, 0.0], [-0.776499987, 17.0, 18.0, 1.0], [-0.692000031, 19.0, 20.0, 1.0], [-0.743000031, 21.0, 22.0, 1.0], [-0.887500048, 23.0, 24.0, 4.0], [0.0221586246, 0.0, 0.0, 0.0], [-0.0302661397, 0.0, 0.0, 0.0], [0.0505837053, 0.0, 0.0, 0.0], [0.0110648023, 0.0, 0.0, 0.0], [0.0649496168, 0.0, 0.0, 0.0], [0.0115707833, 0.0, 0.0, 0.0], [-0.066745393, 0.0, 0.0, 0.0], [0.0372057632, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 17, 18, 19, 20, 9, 21, 22, 23, 24, 11, 12])
    branch_indices = np.array([0, 1, 4, 8, 13, 14, 2, 5, 10, 15, 16, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_722(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.98150003, 3.0, 4.0, 4.0], [-0.960500002, 5.0, 6.0, 3.0], [0.0302343033, 0.0, 0.0, 0.0], [-0.205500007, 7.0, 8.0, 0.0], [-0.794499993, 9.0, 10.0, 4.0], [-0.808499992, 11.0, 12.0, 4.0], [-0.997500002, 13.0, 14.0, 3.0], [-0.996500015, 15.0, 16.0, 3.0], [-0.931499958, 17.0, 18.0, 4.0], [-0.0200155098, 0.0, 0.0, 0.0], [-0.04457682, 0.0, 0.0, 0.0], [0.0214996692, 0.0, 0.0, 0.0], [0.0118761901, 0.0, 0.0, 0.0], [-0.0798520893, 0.0, 0.0, 0.0], [-0.0668704435, 0.0, 0.0, 0.0], [-0.145500004, 19.0, 20.0, 0.0], [0.590999961, 21.0, 22.0, 2.0], [0.0737884417, 0.0, 0.0, 0.0], [0.062208347, 0.0, 0.0, 0.0], [-0.0294674542, 0.0, 0.0, 0.0], [0.0539866015, 0.0, 0.0, 0.0], [-0.035465803, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 19, 20, 21, 22, 18, 10, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 8, 16, 2, 5, 9, 17, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_723(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.37349999, 3.0, 4.0, 0.0], [-0.253499985, 5.0, 6.0, 0.0], [0.00898701977, 0.0, 0.0, 0.0], [-0.0526338443, 0.0, 0.0, 0.0], [0.101032041, 0.0, 0.0, 0.0], [-0.51699996, 7.0, 8.0, 2.0], [-0.654500008, 9.0, 10.0, 2.0], [-0.0689436868, 0.0, 0.0, 0.0], [-0.205500007, 11.0, 12.0, 0.0], [-0.0337999985, 13.0, 14.0, 0.0], [-0.0533807427, 0.0, 0.0, 0.0], [0.000729884487, 0.0, 0.0, 0.0], [0.103204504, 0.0, 0.0, 0.0], [-0.0115292361, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 11, 12, 13, 14, 8])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_724(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.414000005, 3.0, 4.0, 0.0], [-0.41049999, 5.0, 6.0, 0.0], [-0.0710580274, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [0.0507570878, 0.0, 0.0, 0.0], [0.0741500035, 9.0, 10.0, 0.0], [0.0844238251, 0.0, 0.0, 0.0], [0.0760499984, 11.0, 12.0, 0.0], [-0.02575, 13.0, 14.0, 0.0], [0.0396029018, 0.0, 0.0, 0.0], [0.03785, 15.0, 16.0, 0.0], [0.0824999958, 17.0, 18.0, 0.0], [-0.120499998, 19.0, 20.0, 0.0], [-0.110452734, 0.0, 0.0, 0.0], [-0.000580498308, 0.0, 0.0, 0.0], [0.0724709928, 0.0, 0.0, 0.0], [-0.174051881, 0.0, 0.0, 0.0], [0.00697046751, 0.0, 0.0, 0.0], [-0.0518710166, 0.0, 0.0, 0.0], [0.0426193587, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 15, 16, 17, 18, 5, 19, 20, 14, 10])
    branch_indices = np.array([0, 1, 4, 8, 11, 12, 2, 6, 9, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_725(xs):
    #Predicts Class 5
    function_dict = np.array([[0.433499992, 1.0, 2.0, 0.0], [0.429499984, 3.0, 4.0, 0.0], [0.436500013, 5.0, 6.0, 0.0], [0.421999991, 7.0, 8.0, 0.0], [0.0998919308, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.446500003, 11.0, 12.0, 0.0], [0.418500006, 13.0, 14.0, 0.0], [-0.0947439894, 0.0, 0.0, 0.0], [-0.128896654, 0.0, 0.0, 0.0], [-0.0147218779, 0.0, 0.0, 0.0], [0.0855997428, 0.0, 0.0, 0.0], [0.46450001, 15.0, 16.0, 0.0], [0.407999992, 17.0, 18.0, 0.0], [0.0873930231, 0.0, 0.0, 0.0], [-0.0973395333, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [0.00507145654, 0.0, 0.0, 0.0], [-0.102657236, 0.0, 0.0, 0.0], [0.0165192802, 0.0, 0.0, 0.0], [-0.0763831884, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_726(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.250499994, 1.0, 2.0, 0.0], [-0.987499952, 3.0, 4.0, 3.0], [-0.906499982, 5.0, 6.0, 4.0], [-0.938500047, 7.0, 8.0, 4.0], [-0.970499992, 9.0, 10.0, 3.0], [-0.782500029, 11.0, 12.0, 1.0], [-0.216499999, 13.0, 14.0, 0.0], [-0.0723942965, 0.0, 0.0, 0.0], [-0.0173836295, 0.0, 0.0, 0.0], [0.0561498404, 0.0, 0.0, 0.0], [-0.0162124038, 0.0, 0.0, 0.0], [-0.180500001, 15.0, 16.0, 0.0], [-0.972499967, 17.0, 18.0, 3.0], [0.0792601183, 0.0, 0.0, 0.0], [-0.191500008, 19.0, 20.0, 0.0], [-0.966500044, 21.0, 22.0, 4.0], [-0.0143225901, 0.0, 0.0, 0.0], [-0.992499948, 23.0, 24.0, 3.0], [0.0269639883, 0.0, 0.0, 0.0], [-0.0453821793, 0.0, 0.0, 0.0], [-0.976500034, 25.0, 26.0, 3.0], [0.0875144899, 0.0, 0.0, 0.0], [-0.013836395, 0.0, 0.0, 0.0], [-0.0148952194, 0.0, 0.0, 0.0], [-0.0736129731, 0.0, 0.0, 0.0], [0.064705126, 0.0, 0.0, 0.0], [-0.0206618346, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 21, 22, 16, 23, 24, 18, 13, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 11, 15, 12, 17, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_727(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.912500024, 1.0, 2.0, 3.0], [-0.25150001, 3.0, 4.0, 0.0], [-0.0299839322, 0.0, 0.0, 0.0], [-0.987499952, 5.0, 6.0, 3.0], [-0.956499994, 7.0, 8.0, 4.0], [-0.318499982, 9.0, 10.0, 0.0], [-0.973500013, 11.0, 12.0, 3.0], [0.48299998, 13.0, 14.0, 2.0], [-0.217500001, 15.0, 16.0, 0.0], [-0.00176394661, 0.0, 0.0, 0.0], [-0.994500041, 17.0, 18.0, 3.0], [-0.0660361201, 0.0, 0.0, 0.0], [0.0498843081, 0.0, 0.0, 0.0], [0.436500013, 19.0, 20.0, 2.0], [0.55250001, 21.0, 22.0, 2.0], [-0.936499953, 23.0, 24.0, 4.0], [0.484499991, 25.0, 26.0, 2.0], [0.0849074647, 0.0, 0.0, 0.0], [0.0172644332, 0.0, 0.0, 0.0], [0.0139553333, 0.0, 0.0, 0.0], [-0.0544355102, 0.0, 0.0, 0.0], [0.104312755, 0.0, 0.0, 0.0], [-0.0121864323, 0.0, 0.0, 0.0], [-0.100930281, 0.0, 0.0, 0.0], [-0.0100409519, 0.0, 0.0, 0.0], [0.0359412059, 0.0, 0.0, 0.0], [-0.0204669498, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 17, 18, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_728(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.761500001, 1.0, 2.0, 1.0], [-0.0325483829, 0.0, 0.0, 0.0], [0.673500001, 3.0, 4.0, 2.0], [-0.225499988, 5.0, 6.0, 0.0], [-0.712499976, 7.0, 8.0, 4.0], [-0.266499996, 9.0, 10.0, 0.0], [-0.200500011, 11.0, 12.0, 0.0], [-0.966500044, 13.0, 14.0, 3.0], [0.036380738, 0.0, 0.0, 0.0], [-0.982499957, 15.0, 16.0, 3.0], [0.0737085715, 0.0, 0.0, 0.0], [-0.0467907377, 0.0, 0.0, 0.0], [0.5995, 17.0, 18.0, 2.0], [-0.5255, 19.0, 20.0, 1.0], [-0.0705070123, 0.0, 0.0, 0.0], [0.0201427117, 0.0, 0.0, 0.0], [-0.0352840498, 0.0, 0.0, 0.0], [0.0345550478, 0.0, 0.0, 0.0], [-0.0299478788, 0.0, 0.0, 0.0], [0.0391246937, 0.0, 0.0, 0.0], [-0.0472503155, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 10, 11, 17, 18, 19, 20, 14, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 12, 4, 7, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_729(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.111807719, 0.0, 0.0, 0.0], [0.506000042, 11.0, 12.0, 0.0], [0.424000025, 13.0, 14.0, 0.0], [0.0749740899, 0.0, 0.0, 0.0], [-0.103870988, 0.0, 0.0, 0.0], [-0.0267862007, 0.0, 0.0, 0.0], [-0.0874171704, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [0.415000021, 17.0, 18.0, 0.0], [0.431500018, 19.0, 20.0, 0.0], [0.522500038, 21.0, 22.0, 0.0], [0.0853615776, 0.0, 0.0, 0.0], [-0.00174930017, 0.0, 0.0, 0.0], [0.0660796538, 0.0, 0.0, 0.0], [-0.120908536, 0.0, 0.0, 0.0], [0.0204078574, 0.0, 0.0, 0.0], [0.0644106939, 0.0, 0.0, 0.0], [-0.00910704769, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 21, 22, 16])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_730(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0923999995, 1.0, 2.0, 0.0], [0.0912000015, 3.0, 4.0, 0.0], [0.1105, 5.0, 6.0, 0.0], [0.0888999999, 7.0, 8.0, 0.0], [0.1373934, 0.0, 0.0, 0.0], [0.0960000008, 9.0, 10.0, 0.0], [0.157999992, 11.0, 12.0, 0.0], [0.0825999975, 13.0, 14.0, 0.0], [-0.0995242447, 0.0, 0.0, 0.0], [-0.0253225937, 0.0, 0.0, 0.0], [-0.130244732, 0.0, 0.0, 0.0], [0.0987467989, 0.0, 0.0, 0.0], [0.193500012, 15.0, 16.0, 0.0], [0.0760499984, 17.0, 18.0, 0.0], [0.0854000002, 19.0, 20.0, 0.0], [-0.107559353, 0.0, 0.0, 0.0], [0.194499999, 21.0, 22.0, 0.0], [0.000920684426, 0.0, 0.0, 0.0], [-0.139596418, 0.0, 0.0, 0.0], [0.135764226, 0.0, 0.0, 0.0], [-0.00621777819, 0.0, 0.0, 0.0], [0.060269352, 0.0, 0.0, 0.0], [-0.0219902974, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 9, 10, 11, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_731(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.538500011, 5.0, 6.0, 0.0], [0.5625, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [0.0817454383, 0.0, 0.0, 0.0], [0.431500018, 13.0, 14.0, 0.0], [0.0648153275, 0.0, 0.0, 0.0], [-0.0974004641, 0.0, 0.0, 0.0], [0.0178372301, 0.0, 0.0, 0.0], [0.340499997, 15.0, 16.0, 0.0], [0.43599999, 17.0, 18.0, 0.0], [0.424000025, 19.0, 20.0, 0.0], [0.4375, 21.0, 22.0, 0.0], [-0.995499969, 23.0, 24.0, 1.0], [0.106056064, 0.0, 0.0, 0.0], [-0.0726989806, 0.0, 0.0, 0.0], [0.5255, 25.0, 26.0, 0.0], [-0.0057678842, 0.0, 0.0, 0.0], [0.207032129, 0.0, 0.0, 0.0], [-0.0832823589, 0.0, 0.0, 0.0], [-0.00508452067, 0.0, 0.0, 0.0], [0.0292845964, 0.0, 0.0, 0.0], [-0.0660318136, 0.0, 0.0, 0.0], [0.0666005388, 0.0, 0.0, 0.0], [-0.0582432523, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 23, 24, 16, 17, 25, 26, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 5, 11, 15, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_732(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.738499999, 5.0, 6.0, 1.0], [-0.0576382354, 0.0, 0.0, 0.0], [-0.99150002, 7.0, 8.0, 3.0], [-0.990499973, 9.0, 10.0, 3.0], [0.537500024, 11.0, 12.0, 2.0], [-0.933500051, 13.0, 14.0, 4.0], [-0.2465, 15.0, 16.0, 0.0], [-0.99849999, 17.0, 18.0, 3.0], [-0.977499962, 19.0, 20.0, 3.0], [-0.0562007539, 0.0, 0.0, 0.0], [-0.806499958, 21.0, 22.0, 4.0], [0.00582534587, 0.0, 0.0, 0.0], [0.0715830401, 0.0, 0.0, 0.0], [0.661499977, 23.0, 24.0, 2.0], [-0.0562148169, 0.0, 0.0, 0.0], [0.0564507768, 0.0, 0.0, 0.0], [0.449499995, 25.0, 26.0, 2.0], [0.0204375461, 0.0, 0.0, 0.0], [0.0830601081, 0.0, 0.0, 0.0], [-0.196500003, 27.0, 28.0, 0.0], [-0.0289926585, 0.0, 0.0, 0.0], [0.033754915, 0.0, 0.0, 0.0], [-0.0565730743, 0.0, 0.0, 0.0], [0.0236739442, 0.0, 0.0, 0.0], [-0.0761935785, 0.0, 0.0, 0.0], [-0.00416596653, 0.0, 0.0, 0.0], [0.0605667233, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 23, 24, 16, 17, 25, 26, 19, 20, 11, 27, 28, 22])
    branch_indices = np.array([0, 1, 4, 7, 8, 15, 2, 5, 9, 18, 10, 6, 12, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_733(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.734500051, 1.0, 2.0, 1.0], [0.51849997, 3.0, 4.0, 2.0], [-0.5995, 5.0, 6.0, 1.0], [-0.225499988, 7.0, 8.0, 0.0], [-0.0452755764, 0.0, 0.0, 0.0], [-0.202500001, 9.0, 10.0, 0.0], [-0.319499999, 11.0, 12.0, 0.0], [-0.255500019, 13.0, 14.0, 0.0], [-0.949499965, 15.0, 16.0, 4.0], [-0.949499965, 17.0, 18.0, 4.0], [-0.0128605077, 0.0, 0.0, 0.0], [0.031840425, 0.0, 0.0, 0.0], [-0.417500019, 19.0, 20.0, 1.0], [-0.00253220042, 0.0, 0.0, 0.0], [0.0556156263, 0.0, 0.0, 0.0], [-0.178499997, 21.0, 22.0, 0.0], [0.0230593886, 0.0, 0.0, 0.0], [0.0793642476, 0.0, 0.0, 0.0], [-0.915500045, 23.0, 24.0, 4.0], [-0.959499955, 25.0, 26.0, 4.0], [0.0213318355, 0.0, 0.0, 0.0], [-0.075765729, 0.0, 0.0, 0.0], [0.00968851708, 0.0, 0.0, 0.0], [-0.0458824374, 0.0, 0.0, 0.0], [0.044370003, 0.0, 0.0, 0.0], [0.00269351574, 0.0, 0.0, 0.0], [-0.0867419988, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 21, 22, 16, 4, 17, 23, 24, 10, 11, 25, 26, 20])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 2, 5, 9, 18, 6, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_734(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.963500023, 3.0, 4.0, 4.0], [0.60650003, 5.0, 6.0, 2.0], [0.546499968, 7.0, 8.0, 2.0], [-0.956499994, 9.0, 10.0, 4.0], [-0.0190628003, 0.0, 0.0, 0.0], [0.708500028, 11.0, 12.0, 2.0], [-0.193500012, 13.0, 14.0, 0.0], [0.0504835434, 0.0, 0.0, 0.0], [-0.0807371363, 0.0, 0.0, 0.0], [0.550500035, 15.0, 16.0, 2.0], [0.0602023229, 0.0, 0.0, 0.0], [0.000805234828, 0.0, 0.0, 0.0], [-0.0492529124, 0.0, 0.0, 0.0], [0.0234763734, 0.0, 0.0, 0.0], [0.477999985, 17.0, 18.0, 2.0], [-0.634500027, 19.0, 20.0, 1.0], [-0.0395789854, 0.0, 0.0, 0.0], [0.0816760585, 0.0, 0.0, 0.0], [-0.0665478781, 0.0, 0.0, 0.0], [0.00487878267, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 9, 17, 18, 19, 20, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 4, 10, 15, 16, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_735(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 1.0], [0.534000039, 3.0, 4.0, 0.0], [-0.125499994, 5.0, 6.0, 0.0], [0.522500038, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.0800063536, 0.0, 0.0, 0.0], [0.22299999, 11.0, 12.0, 0.0], [0.521499991, 13.0, 14.0, 0.0], [-0.0896047726, 0.0, 0.0, 0.0], [0.539999962, 15.0, 16.0, 0.0], [-0.0956591368, 0.0, 0.0, 0.0], [0.0462658033, 0.0, 0.0, 0.0], [-0.0591834001, 0.0, 0.0, 0.0], [0.49000001, 17.0, 18.0, 0.0], [0.0833880678, 0.0, 0.0, 0.0], [0.12349654, 0.0, 0.0, 0.0], [0.543500006, 19.0, 20.0, 0.0], [0.001385713, 0.0, 0.0, 0.0], [-0.0598425418, 0.0, 0.0, 0.0], [-0.0553712547, 0.0, 0.0, 0.0], [0.0335413441, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 15, 19, 20, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 16, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_736(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0873000026, 3.0, 4.0, 0.0], [0.152999997, 5.0, 6.0, 0.0], [0.082949996, 7.0, 8.0, 0.0], [0.0763926283, 0.0, 0.0, 0.0], [0.0945499986, 9.0, 10.0, 0.0], [0.192499995, 11.0, 12.0, 0.0], [0.0757500008, 13.0, 14.0, 0.0], [0.0867500007, 15.0, 16.0, 0.0], [0.0917500034, 17.0, 18.0, 0.0], [-0.0989046916, 0.0, 0.0, 0.0], [0.127916664, 0.0, 0.0, 0.0], [0.195499986, 19.0, 20.0, 0.0], [0.0506500006, 21.0, 22.0, 0.0], [0.12452466, 0.0, 0.0, 0.0], [-0.111509487, 0.0, 0.0, 0.0], [-0.00684050797, 0.0, 0.0, 0.0], [-0.02754304, 0.0, 0.0, 0.0], [-0.000513139472, 0.0, 0.0, 0.0], [-0.0798924714, 0.0, 0.0, 0.0], [0.196500003, 23.0, 24.0, 0.0], [5.97403923e-05, 0.0, 0.0, 0.0], [-0.0687844679, 0.0, 0.0, 0.0], [0.0581422076, 0.0, 0.0, 0.0], [-0.0267541911, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 4, 17, 18, 10, 11, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 9, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_737(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.0479625463, 0.0, 0.0, 0.0], [-0.420000017, 3.0, 4.0, 0.0], [-0.0663735047, 0.0, 0.0, 0.0], [-0.393000007, 5.0, 6.0, 0.0], [0.0677661821, 0.0, 0.0, 0.0], [-0.161500007, 7.0, 8.0, 0.0], [-0.168500006, 9.0, 10.0, 0.0], [-0.149500012, 11.0, 12.0, 0.0], [-0.0104677975, 0.0, 0.0, 0.0], [-0.0455651581, 0.0, 0.0, 0.0], [0.0398756713, 0.0, 0.0, 0.0], [0.000189601662, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 9, 10, 11, 12])
    branch_indices = np.array([0, 2, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_738(xs):
    #Predicts Class 0
    function_dict = np.array([[0.411500007, 1.0, 2.0, 2.0], [-0.968500018, 3.0, 4.0, 4.0], [-0.101500005, 5.0, 6.0, 0.0], [-0.0556043871, 0.0, 0.0, 0.0], [0.0104143713, 0.0, 0.0, 0.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.0309895985, 0.0, 0.0, 0.0], [-0.864500046, 9.0, 10.0, 4.0], [-0.141499996, 11.0, 12.0, 0.0], [-0.644500017, 13.0, 14.0, 1.0], [-0.978999972, 15.0, 16.0, 3.0], [0.0663363859, 0.0, 0.0, 0.0], [-0.00159381307, 0.0, 0.0, 0.0], [0.0306079872, 0.0, 0.0, 0.0], [-0.0371803604, 0.0, 0.0, 0.0], [-0.0796996355, 0.0, 0.0, 0.0], [0.0199250653, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 15, 16, 11, 12, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 9, 10, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_739(xs):
    #Predicts Class 1
    function_dict = np.array([[0.554499984, 1.0, 2.0, 2.0], [-0.236499995, 3.0, 4.0, 0.0], [-0.235500008, 5.0, 6.0, 0.0], [-0.24849999, 7.0, 8.0, 0.0], [-0.228500009, 9.0, 10.0, 0.0], [0.635499954, 11.0, 12.0, 2.0], [-0.634500027, 13.0, 14.0, 1.0], [-0.958500028, 15.0, 16.0, 4.0], [-0.0815422386, 0.0, 0.0, 0.0], [0.0521641821, 0.0, 0.0, 0.0], [-0.959499955, 17.0, 18.0, 4.0], [-0.687000036, 19.0, 20.0, 1.0], [0.675999999, 21.0, 22.0, 2.0], [0.0278972965, 0.0, 0.0, 0.0], [-0.0586086474, 0.0, 0.0, 0.0], [-0.0394991152, 0.0, 0.0, 0.0], [0.03266133, 0.0, 0.0, 0.0], [-0.98150003, 23.0, 24.0, 4.0], [-0.195499986, 25.0, 26.0, 0.0], [0.00596519653, 0.0, 0.0, 0.0], [0.0954573825, 0.0, 0.0, 0.0], [-0.0410351083, 0.0, 0.0, 0.0], [0.0191366598, 0.0, 0.0, 0.0], [-0.0437620059, 0.0, 0.0, 0.0], [0.0448034741, 0.0, 0.0, 0.0], [-0.0761081353, 0.0, 0.0, 0.0], [0.0118751433, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 9, 23, 24, 25, 26, 19, 20, 21, 22, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 4, 10, 17, 18, 2, 5, 11, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_740(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [-0.526499987, 3.0, 4.0, 1.0], [-0.932500005, 5.0, 6.0, 4.0], [0.62349999, 7.0, 8.0, 2.0], [-0.880500019, 9.0, 10.0, 4.0], [-0.0186288953, 0.0, 0.0, 0.0], [0.0419580452, 0.0, 0.0, 0.0], [-0.997500002, 11.0, 12.0, 3.0], [-0.99150002, 13.0, 14.0, 3.0], [0.0054212166, 0.0, 0.0, 0.0], [-0.0633458048, 0.0, 0.0, 0.0], [0.495000005, 15.0, 16.0, 2.0], [-0.9745, 17.0, 18.0, 4.0], [0.054772649, 0.0, 0.0, 0.0], [-0.0131587926, 0.0, 0.0, 0.0], [-0.000311032753, 0.0, 0.0, 0.0], [-0.0652284473, 0.0, 0.0, 0.0], [0.0568738244, 0.0, 0.0, 0.0], [-0.0176453386, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_741(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.795000017, 3.0, 4.0, 2.0], [-0.00567999994, 5.0, 6.0, 0.0], [-0.057099998, 7.0, 8.0, 0.0], [0.0813777745, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 1.0], [0.101500005, 11.0, 12.0, 0.0], [-0.0656000003, 13.0, 14.0, 0.0], [-0.0496499985, 15.0, 16.0, 0.0], [-0.0530500002, 17.0, 18.0, 0.0], [-0.1215, 19.0, 20.0, 0.0], [-0.104259804, 0.0, 0.0, 0.0], [0.342999995, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [-0.132021546, 0.0, 0.0, 0.0], [0.210699663, 0.0, 0.0, 0.0], [-0.0460999981, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 1.0], [0.120065384, 0.0, 0.0, 0.0], [0.00651884172, 0.0, 0.0, 0.0], [-0.0887747854, 0.0, 0.0, 0.0], [0.0219534636, 0.0, 0.0, 0.0], [0.0013641665, 0.0, 0.0, 0.0], [-0.00830459874, 0.0, 0.0, 0.0], [0.0397010185, 0.0, 0.0, 0.0], [-0.12302655, 0.0, 0.0, 0.0], [0.00381326396, 0.0, 0.0, 0.0], [-0.071246855, 0.0, 0.0, 0.0], [0.0376191922, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 25, 26, 4, 27, 28, 18, 19, 20, 11, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 17, 10, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_742(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.044688724, 0.0, 0.0, 0.0], [0.0941499993, 5.0, 6.0, 0.0], [0.190499991, 7.0, 8.0, 0.0], [0.0894500017, 9.0, 10.0, 0.0], [0.095124729, 0.0, 0.0, 0.0], [-0.103683338, 0.0, 0.0, 0.0], [0.194499999, 11.0, 12.0, 0.0], [0.0850500017, 13.0, 14.0, 0.0], [0.0917500034, 15.0, 16.0, 0.0], [0.0571247302, 0.0, 0.0, 0.0], [-0.0592069738, 0.0, 0.0, 0.0], [-0.000990619184, 0.0, 0.0, 0.0], [0.046529036, 0.0, 0.0, 0.0], [-0.0212124363, 0.0, 0.0, 0.0], [-0.0883884057, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 7, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_743(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0468281917, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0785884112, 0.0, 0.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [0.0695888549, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.1505, 11.0, 12.0, 0.0], [0.0431597084, 0.0, 0.0, 0.0], [-0.0460642427, 0.0, 0.0, 0.0], [-0.0740721449, 0.0, 0.0, 0.0], [0.00276120659, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_744(xs):
    #Predicts Class 0
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [-0.578999996, 3.0, 4.0, 1.0], [0.772500038, 5.0, 6.0, 2.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.0402031727, 0.0, 0.0, 0.0], [0.0610214546, 0.0, 0.0, 0.0], [-0.0170184188, 0.0, 0.0, 0.0], [-0.950500011, 9.0, 10.0, 3.0], [-0.959499955, 11.0, 12.0, 4.0], [-0.977499962, 13.0, 14.0, 3.0], [0.0424400643, 0.0, 0.0, 0.0], [-0.180500001, 15.0, 16.0, 0.0], [-0.701499999, 17.0, 18.0, 1.0], [-0.00934207626, 0.0, 0.0, 0.0], [-0.0757990181, 0.0, 0.0, 0.0], [0.0263777506, 0.0, 0.0, 0.0], [-0.0385596976, 0.0, 0.0, 0.0], [0.0571535267, 0.0, 0.0, 0.0], [-0.00464213267, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_745(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.810500026, 1.0, 2.0, 1.0], [-0.96449995, 3.0, 4.0, 4.0], [-0.300500005, 5.0, 6.0, 0.0], [0.00836366508, 0.0, 0.0, 0.0], [-0.0387469493, 0.0, 0.0, 0.0], [0.671000004, 7.0, 8.0, 2.0], [-0.256500006, 9.0, 10.0, 0.0], [-0.989500046, 11.0, 12.0, 3.0], [-0.0268383622, 0.0, 0.0, 0.0], [-0.985499978, 13.0, 14.0, 3.0], [-0.99849999, 15.0, 16.0, 3.0], [0.0791003332, 0.0, 0.0, 0.0], [0.00156441645, 0.0, 0.0, 0.0], [0.00211348664, 0.0, 0.0, 0.0], [-0.0611620024, 0.0, 0.0, 0.0], [-0.0332484841, 0.0, 0.0, 0.0], [-0.233500004, 17.0, 18.0, 0.0], [0.0544542521, 0.0, 0.0, 0.0], [0.00171419512, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 8, 13, 14, 15, 17, 18])
    branch_indices = np.array([0, 1, 2, 5, 7, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_746(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.880499959, 1.0, 2.0, 3.0], [-0.958500028, 3.0, 4.0, 4.0], [0.0255606472, 0.0, 0.0, 0.0], [-0.968500018, 5.0, 6.0, 4.0], [-0.203500003, 7.0, 8.0, 0.0], [0.438499987, 9.0, 10.0, 2.0], [0.568500042, 11.0, 12.0, 2.0], [0.722499967, 13.0, 14.0, 2.0], [-0.700500011, 15.0, 16.0, 1.0], [0.0206104182, 0.0, 0.0, 0.0], [-0.0460937656, 0.0, 0.0, 0.0], [0.0614229999, 0.0, 0.0, 0.0], [0.00209953263, 0.0, 0.0, 0.0], [-0.490500003, 17.0, 18.0, 1.0], [0.0136818374, 0.0, 0.0, 0.0], [-0.0421082228, 0.0, 0.0, 0.0], [0.598500013, 19.0, 20.0, 2.0], [-0.0139416168, 0.0, 0.0, 0.0], [-0.0773237273, 0.0, 0.0, 0.0], [0.0649942085, 0.0, 0.0, 0.0], [-0.00204512407, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 17, 18, 14, 15, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 4, 7, 13, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_747(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.432500005, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.428499997, 7.0, 8.0, 0.0], [0.434499979, 9.0, 10.0, 0.0], [0.478500009, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.409500003, 15.0, 16.0, 0.0], [0.111464724, 0.0, 0.0, 0.0], [-0.116429448, 0.0, 0.0, 0.0], [0.436500013, 17.0, 18.0, 0.0], [0.0149674676, 0.0, 0.0, 0.0], [0.115582339, 0.0, 0.0, 0.0], [0.547500014, 19.0, 20.0, 0.0], [0.0868747979, 0.0, 0.0, 0.0], [0.405499995, 21.0, 22.0, 0.0], [0.419499993, 23.0, 24.0, 0.0], [0.0766174793, 0.0, 0.0, 0.0], [0.446500003, 25.0, 26.0, 0.0], [0.539999962, 27.0, 28.0, 0.0], [0.588, 29.0, 30.0, 0.0], [-0.000734498317, 0.0, 0.0, 0.0], [0.120936707, 0.0, 0.0, 0.0], [-0.0826262161, 0.0, 0.0, 0.0], [-0.0244358573, 0.0, 0.0, 0.0], [-0.0795610994, 0.0, 0.0, 0.0], [-0.0101767667, 0.0, 0.0, 0.0], [-0.00332141807, 0.0, 0.0, 0.0], [-0.109336443, 0.0, 0.0, 0.0], [0.0505483039, 0.0, 0.0, 0.0], [-0.0180075597, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 17, 25, 26, 11, 12, 27, 28, 29, 30, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 18, 2, 5, 6, 13, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_748(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.395500004, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.337500006, 5.0, 6.0, 0.0], [-0.0461386815, 0.0, 0.0, 0.0], [0.0866675973, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.212500006, 9.0, 10.0, 0.0], [-0.00525067141, 0.0, 0.0, 0.0], [-0.105978034, 0.0, 0.0, 0.0], [-0.273499995, 11.0, 12.0, 0.0], [-0.2095, 13.0, 14.0, 0.0], [-0.284500003, 15.0, 16.0, 0.0], [0.102572285, 0.0, 0.0, 0.0], [-0.0853935704, 0.0, 0.0, 0.0], [-0.996500015, 17.0, 18.0, 1.0], [0.0499284714, 0.0, 0.0, 0.0], [-0.0373451635, 0.0, 0.0, 0.0], [7.70417755e-05, 0.0, 0.0, 0.0], [-0.087375626, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 15, 16, 12, 13, 17, 18])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_749(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [-0.0872418135, 0.0, 0.0, 0.0], [0.0633596405, 0.0, 0.0, 0.0], [-0.00775229465, 0.0, 0.0, 0.0], [0.547500014, 9.0, 10.0, 0.0], [0.0628588051, 0.0, 0.0, 0.0], [0.537500024, 11.0, 12.0, 0.0], [-0.0412332043, 0.0, 0.0, 0.0], [-0.000255934254, 0.0, 0.0, 0.0], [0.049878452, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_750(xs):
    #Predicts Class 0
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [0.627499998, 3.0, 4.0, 2.0], [-0.977499962, 5.0, 6.0, 3.0], [-0.874500036, 7.0, 8.0, 4.0], [-0.703500032, 9.0, 10.0, 1.0], [0.0457359403, 0.0, 0.0, 0.0], [-0.0160910059, 0.0, 0.0, 0.0], [-0.782500029, 11.0, 12.0, 1.0], [0.0459619202, 0.0, 0.0, 0.0], [-0.0570948571, 0.0, 0.0, 0.0], [-0.55250001, 13.0, 14.0, 1.0], [-0.961500049, 15.0, 16.0, 4.0], [0.559499979, 17.0, 18.0, 2.0], [0.0406257734, 0.0, 0.0, 0.0], [-0.0453425683, 0.0, 0.0, 0.0], [-0.00911363121, 0.0, 0.0, 0.0], [0.0527802184, 0.0, 0.0, 0.0], [-0.00334267272, 0.0, 0.0, 0.0], [-0.0563608743, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 9, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_751(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.218499988, 1.0, 2.0, 0.0], [-0.973500013, 3.0, 4.0, 4.0], [-0.972499967, 5.0, 6.0, 4.0], [0.0257018283, 0.0, 0.0, 0.0], [-0.958500028, 7.0, 8.0, 4.0], [-0.0218206849, 0.0, 0.0, 0.0], [-0.922500014, 9.0, 10.0, 4.0], [0.553499997, 11.0, 12.0, 2.0], [-0.946500003, 13.0, 14.0, 4.0], [-0.738000035, 15.0, 16.0, 1.0], [-0.0263923593, 0.0, 0.0, 0.0], [-0.0850462168, 0.0, 0.0, 0.0], [0.0165072642, 0.0, 0.0, 0.0], [0.0426315293, 0.0, 0.0, 0.0], [-0.315500021, 17.0, 18.0, 0.0], [0.00703793764, 0.0, 0.0, 0.0], [0.0738873407, 0.0, 0.0, 0.0], [0.0177510139, 0.0, 0.0, 0.0], [-0.0325742736, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 13, 17, 18, 5, 15, 16, 10])
    branch_indices = np.array([0, 1, 4, 7, 8, 14, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_752(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.526499987, 3.0, 4.0, 1.0], [-0.992499948, 5.0, 6.0, 3.0], [-0.149500012, 7.0, 8.0, 0.0], [-0.0441708565, 0.0, 0.0, 0.0], [0.0504617691, 0.0, 0.0, 0.0], [-0.975499988, 9.0, 10.0, 3.0], [0.529500008, 11.0, 12.0, 2.0], [-0.918500006, 13.0, 14.0, 4.0], [-0.0373839885, 0.0, 0.0, 0.0], [0.0304005947, 0.0, 0.0, 0.0], [-0.961500049, 15.0, 16.0, 4.0], [-0.240500003, 17.0, 18.0, 0.0], [-0.0549888723, 0.0, 0.0, 0.0], [0.0174662303, 0.0, 0.0, 0.0], [0.0121868122, 0.0, 0.0, 0.0], [-0.0576376393, 0.0, 0.0, 0.0], [-0.00974440668, 0.0, 0.0, 0.0], [0.0496636182, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_753(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 2.0], [0.465499997, 3.0, 4.0, 0.0], [0.0921500027, 5.0, 6.0, 0.0], [0.455500007, 7.0, 8.0, 0.0], [0.489499986, 9.0, 10.0, 0.0], [-0.208499998, 11.0, 12.0, 0.0], [-0.113419712, 0.0, 0.0, 0.0], [0.445500016, 13.0, 14.0, 0.0], [0.463499993, 15.0, 16.0, 0.0], [0.135063455, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.0590387881, 0.0, 0.0, 0.0], [-0.0145392008, 0.0, 0.0, 0.0], [0.432500005, 19.0, 20.0, 0.0], [0.0706620589, 0.0, 0.0, 0.0], [-0.079459697, 0.0, 0.0, 0.0], [-0.0190626346, 0.0, 0.0, 0.0], [0.561499953, 21.0, 22.0, 0.0], [0.0733763576, 0.0, 0.0, 0.0], [0.000406265317, 0.0, 0.0, 0.0], [-0.0578463264, 0.0, 0.0, 0.0], [-0.0205760263, 0.0, 0.0, 0.0], [0.0305818301, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 16, 9, 21, 22, 18, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 17, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_754(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0101999994, 3.0, 4.0, 0.0], [0.025150001, 5.0, 6.0, 0.0], [0.00768500008, 7.0, 8.0, 0.0], [-0.111626312, 0.0, 0.0, 0.0], [0.0237000007, 9.0, 10.0, 0.0], [0.028549999, 11.0, 12.0, 0.0], [0.00588999968, 13.0, 14.0, 0.0], [0.110831238, 0.0, 0.0, 0.0], [0.096041128, 0.0, 0.0, 0.0], [0.0265027303, 0.0, 0.0, 0.0], [-0.0958948433, 0.0, 0.0, 0.0], [0.0368999988, 15.0, 16.0, 0.0], [0.00325499987, 17.0, 18.0, 0.0], [-0.138333097, 0.0, 0.0, 0.0], [0.128103197, 0.0, 0.0, 0.0], [0.0447499976, 19.0, 20.0, 0.0], [-0.00364896073, 0.0, 0.0, 0.0], [0.109845817, 0.0, 0.0, 0.0], [-0.117761672, 0.0, 0.0, 0.0], [0.00657493668, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_755(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.538500011, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.523499966, 11.0, 12.0, 0.0], [0.0862044841, 0.0, 0.0, 0.0], [0.538499951, 13.0, 14.0, 0.0], [0.561499953, 15.0, 16.0, 0.0], [-0.0886547789, 0.0, 0.0, 0.0], [0.010820006, 0.0, 0.0, 0.0], [0.348500013, 17.0, 18.0, 0.0], [-0.0598583743, 0.0, 0.0, 0.0], [0.527999997, 19.0, 20.0, 0.0], [0.541999996, 21.0, 22.0, 0.0], [0.068289198, 0.0, 0.0, 0.0], [-0.00136580982, 0.0, 0.0, 0.0], [0.228500009, 23.0, 24.0, 0.0], [-0.99849999, 25.0, 26.0, 1.0], [-0.00267060567, 0.0, 0.0, 0.0], [0.138445809, 0.0, 0.0, 0.0], [-0.0969412178, 0.0, 0.0, 0.0], [-0.0275058523, 0.0, 0.0, 0.0], [0.0243394505, 0.0, 0.0, 0.0], [-0.0750556365, 0.0, 0.0, 0.0], [0.0212658886, 0.0, 0.0, 0.0], [0.101679951, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 16, 9, 10, 23, 24, 25, 26, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 2, 5, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_756(xs):
    #Predicts Class 0
    function_dict = np.array([[0.411500007, 1.0, 2.0, 2.0], [-0.825500011, 3.0, 4.0, 1.0], [-0.101500005, 5.0, 6.0, 0.0], [0.0191921592, 0.0, 0.0, 0.0], [-0.0489913039, 0.0, 0.0, 0.0], [-0.801499963, 7.0, 8.0, 1.0], [-0.0271641705, 0.0, 0.0, 0.0], [-0.0246099774, 0.0, 0.0, 0.0], [-0.932500005, 9.0, 10.0, 3.0], [-0.202500001, 11.0, 12.0, 0.0], [-0.88349998, 13.0, 14.0, 3.0], [0.00814194418, 0.0, 0.0, 0.0], [0.0552852824, 0.0, 0.0, 0.0], [-0.0418813005, 0.0, 0.0, 0.0], [-0.000412301248, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 11, 12, 13, 14, 6])
    branch_indices = np.array([0, 1, 2, 5, 8, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_757(xs):
    #Predicts Class 1
    function_dict = np.array([[0.407499999, 1.0, 2.0, 2.0], [-0.156500012, 3.0, 4.0, 0.0], [0.444499999, 5.0, 6.0, 2.0], [-0.96449995, 7.0, 8.0, 4.0], [-0.0225061625, 0.0, 0.0, 0.0], [-0.0344055258, 0.0, 0.0, 0.0], [0.4745, 9.0, 10.0, 2.0], [0.0528002046, 0.0, 0.0, 0.0], [-0.00290392735, 0.0, 0.0, 0.0], [0.0369331352, 0.0, 0.0, 0.0], [-0.191500008, 11.0, 12.0, 0.0], [-0.908499956, 13.0, 14.0, 4.0], [0.0322341137, 0.0, 0.0, 0.0], [-0.0284343213, 0.0, 0.0, 0.0], [0.0226159301, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 12])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_758(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [0.777500033, 3.0, 4.0, 2.0], [-0.266499996, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.0422260948, 0.0, 0.0, 0.0], [-0.00872548204, 0.0, 0.0, 0.0], [0.0411346555, 0.0, 0.0, 0.0], [-0.654500008, 9.0, 10.0, 1.0], [-0.651499987, 11.0, 12.0, 1.0], [0.00601276616, 0.0, 0.0, 0.0], [-0.0558084585, 0.0, 0.0, 0.0], [-0.185499996, 13.0, 14.0, 0.0], [-0.221500009, 15.0, 16.0, 0.0], [-0.0438134484, 0.0, 0.0, 0.0], [0.0217305962, 0.0, 0.0, 0.0], [0.0719259828, 0.0, 0.0, 0.0], [-0.00272293086, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 13, 14, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_759(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.130499989, 1.0, 2.0, 0.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.129500002, 5.0, 6.0, 0.0], [-0.13350001, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.155228153, 0.0, 0.0, 0.0], [-0.12650001, 11.0, 12.0, 0.0], [-0.186500013, 13.0, 14.0, 0.0], [-0.071886152, 0.0, 0.0, 0.0], [-0.181921527, 0.0, 0.0, 0.0], [-0.191500008, 15.0, 16.0, 0.0], [-0.101979464, 0.0, 0.0, 0.0], [-0.125499994, 17.0, 18.0, 0.0], [-0.2095, 19.0, 20.0, 0.0], [-0.185499996, 21.0, 22.0, 0.0], [-0.747500002, 23.0, 24.0, 2.0], [-0.0780153945, 0.0, 0.0, 0.0], [0.109648615, 0.0, 0.0, 0.0], [-0.120499998, 25.0, 26.0, 0.0], [0.0184366517, 0.0, 0.0, 0.0], [-0.0787890479, 0.0, 0.0, 0.0], [0.154257759, 0.0, 0.0, 0.0], [0.00839491375, 0.0, 0.0, 0.0], [0.126798093, 0.0, 0.0, 0.0], [-0.030479528, 0.0, 0.0, 0.0], [-0.123614088, 0.0, 0.0, 0.0], [0.002111529, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 23, 24, 16, 5, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 15, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_760(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0494500026, 1.0, 2.0, 0.0], [-0.0579499975, 3.0, 4.0, 0.0], [-0.0466499999, 5.0, 6.0, 0.0], [-0.0673500001, 7.0, 8.0, 0.0], [0.129005611, 0.0, 0.0, 0.0], [-0.160199225, 0.0, 0.0, 0.0], [-0.0429500006, 9.0, 10.0, 0.0], [-0.0720499977, 11.0, 12.0, 0.0], [-0.124466658, 0.0, 0.0, 0.0], [0.0587125123, 0.0, 0.0, 0.0], [-0.0297999997, 13.0, 14.0, 0.0], [-0.0771999955, 15.0, 16.0, 0.0], [0.139315799, 0.0, 0.0, 0.0], [-0.0382499993, 17.0, 18.0, 0.0], [-0.0154499998, 19.0, 20.0, 0.0], [0.00402300199, 0.0, 0.0, 0.0], [-0.120710693, 0.0, 0.0, 0.0], [-0.00702650053, 0.0, 0.0, 0.0], [-0.17298311, 0.0, 0.0, 0.0], [0.11036814, 0.0, 0.0, 0.0], [-0.00497142738, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_761(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.0640298799, 0.0, 0.0, 0.0], [0.0532076322, 0.0, 0.0, 0.0], [-0.000769007776, 0.0, 0.0, 0.0], [0.534000039, 9.0, 10.0, 0.0], [0.0488340259, 0.0, 0.0, 0.0], [0.46450001, 11.0, 12.0, 0.0], [0.539999962, 13.0, 14.0, 0.0], [-0.00168176799, 0.0, 0.0, 0.0], [0.0248997882, 0.0, 0.0, 0.0], [-0.103467979, 0.0, 0.0, 0.0], [-0.00262344396, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_762(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.960500002, 1.0, 2.0, 3.0], [-0.847499967, 3.0, 4.0, 4.0], [-0.931499958, 5.0, 6.0, 3.0], [-0.91050005, 7.0, 8.0, 4.0], [-0.767500043, 9.0, 10.0, 4.0], [0.0424552187, 0.0, 0.0, 0.0], [-0.892500043, 11.0, 12.0, 3.0], [0.659500003, 13.0, 14.0, 2.0], [0.576499999, 15.0, 16.0, 2.0], [-0.0635855719, 0.0, 0.0, 0.0], [0.00316272932, 0.0, 0.0, 0.0], [-0.0330957472, 0.0, 0.0, 0.0], [0.0231235828, 0.0, 0.0, 0.0], [0.565500021, 17.0, 18.0, 2.0], [-0.0565058514, 0.0, 0.0, 0.0], [-0.00415877486, 0.0, 0.0, 0.0], [0.0567434505, 0.0, 0.0, 0.0], [-0.0180625655, 0.0, 0.0, 0.0], [0.0487835146, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 15, 16, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_763(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.975499988, 1.0, 2.0, 4.0], [0.33950001, 3.0, 4.0, 2.0], [-0.9745, 5.0, 6.0, 3.0], [-0.0451394059, 0.0, 0.0, 0.0], [0.00899243262, 0.0, 0.0, 0.0], [-0.334500015, 7.0, 8.0, 0.0], [-0.930500031, 9.0, 10.0, 4.0], [-0.0420460515, 0.0, 0.0, 0.0], [-0.989500046, 11.0, 12.0, 3.0], [-0.0543812327, 0.0, 0.0, 0.0], [0.590999961, 13.0, 14.0, 2.0], [-0.996500015, 15.0, 16.0, 3.0], [-0.24849999, 17.0, 18.0, 0.0], [-0.00130689575, 0.0, 0.0, 0.0], [0.0285317358, 0.0, 0.0, 0.0], [0.0257396493, 0.0, 0.0, 0.0], [-0.0239367057, 0.0, 0.0, 0.0], [0.0208957028, 0.0, 0.0, 0.0], [0.078014411, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 15, 16, 17, 18, 9, 13, 14])
    branch_indices = np.array([0, 1, 2, 5, 8, 11, 12, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_764(xs):
    #Predicts Class 2
    function_dict = np.array([[0.772500038, 1.0, 2.0, 2.0], [-0.24849999, 3.0, 4.0, 0.0], [0.028615756, 0.0, 0.0, 0.0], [0.652500033, 5.0, 6.0, 2.0], [-0.236499995, 7.0, 8.0, 0.0], [0.0104918163, 0.0, 0.0, 0.0], [-0.0694905221, 0.0, 0.0, 0.0], [0.0564083904, 0.0, 0.0, 0.0], [-0.889500022, 9.0, 10.0, 4.0], [-0.956499994, 11.0, 12.0, 4.0], [-0.0466098562, 0.0, 0.0, 0.0], [-0.0087567037, 0.0, 0.0, 0.0], [0.0341791064, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 7, 11, 12, 10, 2])
    branch_indices = np.array([0, 1, 3, 4, 8, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_765(xs):
    #Predicts Class 3
    function_dict = np.array([[0.487500012, 1.0, 2.0, 0.0], [0.466499984, 3.0, 4.0, 0.0], [0.513000011, 5.0, 6.0, 0.0], [0.463499993, 7.0, 8.0, 0.0], [-0.131921962, 0.0, 0.0, 0.0], [0.0787166655, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.455500007, 11.0, 12.0, 0.0], [0.0691835508, 0.0, 0.0, 0.0], [0.543500006, 13.0, 14.0, 0.0], [0.0523890518, 0.0, 0.0, 0.0], [0.445500016, 15.0, 16.0, 0.0], [-0.0631429106, 0.0, 0.0, 0.0], [0.537500024, 17.0, 18.0, 0.0], [0.549000025, 19.0, 20.0, 0.0], [-0.00126180658, 0.0, 0.0, 0.0], [0.0516224615, 0.0, 0.0, 0.0], [0.005550039, 0.0, 0.0, 0.0], [-0.129345804, 0.0, 0.0, 0.0], [0.0703392699, 0.0, 0.0, 0.0], [0.00295714056, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 17, 18, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_766(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.999500036, 3.0, 4.0, 4.0], [-0.1505, 5.0, 6.0, 0.0], [0.00950999931, 7.0, 8.0, 0.0], [-0.143999994, 9.0, 10.0, 0.0], [-0.188499987, 11.0, 12.0, 0.0], [-0.607499957, 13.0, 14.0, 2.0], [0.00588999968, 15.0, 16.0, 0.0], [0.0830000043, 17.0, 18.0, 0.0], [-0.196999997, 19.0, 20.0, 0.0], [0.0107000005, 21.0, 22.0, 0.0], [-0.260500014, 23.0, 24.0, 0.0], [0.0966579169, 0.0, 0.0, 0.0], [-0.0414500013, 25.0, 26.0, 0.0], [0.0304469541, 0.0, 0.0, 0.0], [0.00325499987, 27.0, 28.0, 0.0], [0.00768500008, 29.0, 30.0, 0.0], [0.0237000007, 31.0, 32.0, 0.0], [0.0892499983, 33.0, 34.0, 0.0], [0.0152491154, 0.0, 0.0, 0.0], [-0.162, 35.0, 36.0, 0.0], [-0.972000003, 37.0, 38.0, 2.0], [0.0686499998, 39.0, 40.0, 0.0], [-0.333499998, 41.0, 42.0, 0.0], [-0.0791711658, 0.0, 0.0, 0.0], [-0.160766199, 0.0, 0.0, 0.0], [-0.747500002, 43.0, 44.0, 2.0], [-0.00582542177, 0.0, 0.0, 0.0], [0.103335448, 0.0, 0.0, 0.0], [-0.248872891, 0.0, 0.0, 0.0], [-0.0412544757, 0.0, 0.0, 0.0], [0.131695986, 0.0, 0.0, 0.0], [0.0357138216, 0.0, 0.0, 0.0], [-0.160231486, 0.0, 0.0, 0.0], [0.0316581987, 0.0, 0.0, 0.0], [-0.0392303169, 0.0, 0.0, 0.0], [-0.126652554, 0.0, 0.0, 0.0], [0.200885415, 0.0, 0.0, 0.0], [0.0145514486, 0.0, 0.0, 0.0], [-0.173711702, 0.0, 0.0, 0.0], [0.0800947845, 0.0, 0.0, 0.0], [-0.0185024086, 0.0, 0.0, 0.0], [0.0780504271, 0.0, 0.0, 0.0], [-0.0323753022, 0.0, 0.0, 0.0], [0.0230532847, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 31, 32, 33, 34, 19, 35, 36, 37, 38, 39, 40, 41, 42, 24, 12, 25, 43, 44, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 20, 10, 21, 22, 2, 5, 11, 23, 6, 13, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_767(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0427379683, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0700619221, 0.0, 0.0, 0.0], [0.487500012, 7.0, 8.0, 0.0], [0.0889937282, 0.0, 0.0, 0.0], [0.466499984, 9.0, 10.0, 0.0], [0.513000011, 11.0, 12.0, 0.0], [0.000474020926, 0.0, 0.0, 0.0], [0.134783626, 0.0, 0.0, 0.0], [-0.0765586123, 0.0, 0.0, 0.0], [-0.00674371514, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_768(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.0796000063, 1.0, 2.0, 0.0], [-0.109499998, 3.0, 4.0, 0.0], [0.0316083468, 0.0, 0.0, 0.0], [-0.281499982, 5.0, 6.0, 0.0], [-0.0442131981, 0.0, 0.0, 0.0], [0.573500037, 7.0, 8.0, 2.0], [-0.725499988, 9.0, 10.0, 4.0], [-0.0497500487, 0.0, 0.0, 0.0], [0.00843407959, 0.0, 0.0, 0.0], [0.63349998, 11.0, 12.0, 2.0], [-0.034636952, 0.0, 0.0, 0.0], [-0.000658890989, 0.0, 0.0, 0.0], [0.0415362492, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 11, 12, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_769(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.42750001, 1.0, 2.0, 1.0], [-0.315500021, 3.0, 4.0, 0.0], [-0.0271516349, 0.0, 0.0, 0.0], [-0.679499984, 5.0, 6.0, 1.0], [0.648499966, 7.0, 8.0, 2.0], [0.0115213376, 0.0, 0.0, 0.0], [0.0504786186, 0.0, 0.0, 0.0], [-0.70449996, 9.0, 10.0, 1.0], [-0.0484627783, 0.0, 0.0, 0.0], [-0.244500011, 11.0, 12.0, 0.0], [-0.959499955, 13.0, 14.0, 4.0], [0.0216145255, 0.0, 0.0, 0.0], [-0.0222487412, 0.0, 0.0, 0.0], [0.0596673414, 0.0, 0.0, 0.0], [0.00450637331, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 11, 12, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_770(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.895500004, 1.0, 2.0, 4.0], [-0.24849999, 3.0, 4.0, 0.0], [-0.257499993, 5.0, 6.0, 0.0], [-0.989500046, 7.0, 8.0, 3.0], [-0.218499988, 9.0, 10.0, 0.0], [0.0595318452, 0.0, 0.0, 0.0], [-0.203999996, 11.0, 12.0, 0.0], [-0.0716709122, 0.0, 0.0, 0.0], [0.00684391242, 0.0, 0.0, 0.0], [-0.233500004, 13.0, 14.0, 0.0], [-0.186500013, 15.0, 16.0, 0.0], [-0.0519860387, 0.0, 0.0, 0.0], [0.685500026, 17.0, 18.0, 2.0], [-0.00477808062, 0.0, 0.0, 0.0], [0.0563925169, 0.0, 0.0, 0.0], [-0.985499978, 19.0, 20.0, 3.0], [-0.989500046, 21.0, 22.0, 3.0], [-0.00110797561, 0.0, 0.0, 0.0], [0.0575610436, 0.0, 0.0, 0.0], [-0.0800393149, 0.0, 0.0, 0.0], [0.020432163, 0.0, 0.0, 0.0], [0.0393916331, 0.0, 0.0, 0.0], [-0.0279176068, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 13, 14, 19, 20, 21, 22, 5, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 4, 9, 10, 15, 16, 2, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_771(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.161500007, 3.0, 4.0, 0.0], [-0.137499988, 5.0, 6.0, 0.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.142500013, 9.0, 10.0, 0.0], [-0.138500005, 11.0, 12.0, 0.0], [-0.135500014, 13.0, 14.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [0.0724695474, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.0200652611, 0.0, 0.0, 0.0], [-0.139499992, 19.0, 20.0, 0.0], [0.062314216, 0.0, 0.0, 0.0], [-0.0628377274, 0.0, 0.0, 0.0], [0.0240500011, 21.0, 22.0, 0.0], [-0.205500007, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [-0.120457657, 0.0, 0.0, 0.0], [-0.0172816012, 0.0, 0.0, 0.0], [0.0518954992, 0.0, 0.0, 0.0], [-0.016897928, 0.0, 0.0, 0.0], [0.0203999989, 27.0, 28.0, 0.0], [0.02685, 29.0, 30.0, 0.0], [-0.0150426365, 0.0, 0.0, 0.0], [0.0803304091, 0.0, 0.0, 0.0], [-0.0665815771, 0.0, 0.0, 0.0], [0.0254414305, 0.0, 0.0, 0.0], [0.00448656315, 0.0, 0.0, 0.0], [0.159455881, 0.0, 0.0, 0.0], [-0.12904726, 0.0, 0.0, 0.0], [-0.000572514487, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 17, 18, 10, 19, 20, 12, 13, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 2, 5, 11, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_772(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0603, 1.0, 2.0, 0.0], [-0.0680499971, 3.0, 4.0, 0.0], [-0.0496499985, 5.0, 6.0, 0.0], [-0.0728500038, 7.0, 8.0, 0.0], [0.122376561, 0.0, 0.0, 0.0], [-0.0571999997, 9.0, 10.0, 0.0], [-0.0473999977, 11.0, 12.0, 0.0], [-0.0793000013, 13.0, 14.0, 0.0], [-0.0920240581, 0.0, 0.0, 0.0], [-0.0339349508, 0.0, 0.0, 0.0], [-0.14338094, 0.0, 0.0, 0.0], [0.118591979, 0.0, 0.0, 0.0], [-0.0297999997, 15.0, 16.0, 0.0], [-0.0811500028, 17.0, 18.0, 0.0], [0.088903904, 0.0, 0.0, 0.0], [-0.0382499993, 19.0, 20.0, 0.0], [-0.0154499998, 21.0, 22.0, 0.0], [0.00432456285, 0.0, 0.0, 0.0], [-0.131875351, 0.0, 0.0, 0.0], [-0.0123857437, 0.0, 0.0, 0.0], [-0.135493413, 0.0, 0.0, 0.0], [0.0725956485, 0.0, 0.0, 0.0], [-0.00606501708, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_773(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.654500008, 1.0, 2.0, 2.0], [-0.770500004, 3.0, 4.0, 2.0], [0.00526000001, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 1.0], [0.0431444682, 0.0, 0.0, 0.0], [-0.0641444623, 0.0, 0.0, 0.0], [0.000324938446, 0.0, 0.0, 0.0], [-0.457500011, 9.0, 10.0, 0.0], [-0.216499999, 11.0, 12.0, 0.0], [-0.0719442368, 0.0, 0.0, 0.0], [-0.408500016, 13.0, 14.0, 0.0], [0.00185012561, 0.0, 0.0, 0.0], [-0.0792569965, 0.0, 0.0, 0.0], [0.114453398, 0.0, 0.0, 0.0], [0.00324058859, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 10, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_774(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [0.455500007, 3.0, 4.0, 2.0], [-0.934499979, 5.0, 6.0, 4.0], [-0.813500047, 7.0, 8.0, 1.0], [0.0443828702, 0.0, 0.0, 0.0], [-0.996500015, 9.0, 10.0, 3.0], [0.612499952, 11.0, 12.0, 2.0], [0.0159391128, 0.0, 0.0, 0.0], [-0.029101599, 0.0, 0.0, 0.0], [-0.058803428, 0.0, 0.0, 0.0], [-0.201499999, 13.0, 14.0, 0.0], [-0.742500007, 15.0, 16.0, 1.0], [0.713500023, 17.0, 18.0, 2.0], [-0.235500008, 19.0, 20.0, 0.0], [-0.0282871332, 0.0, 0.0, 0.0], [0.0557965748, 0.0, 0.0, 0.0], [0.55250001, 21.0, 22.0, 2.0], [-0.979499996, 23.0, 24.0, 3.0], [-0.20449999, 25.0, 26.0, 0.0], [-0.0125854192, 0.0, 0.0, 0.0], [0.0461627841, 0.0, 0.0, 0.0], [-0.0175030213, 0.0, 0.0, 0.0], [0.0339347906, 0.0, 0.0, 0.0], [-0.0594297722, 0.0, 0.0, 0.0], [-0.000153795801, 0.0, 0.0, 0.0], [0.0422700681, 0.0, 0.0, 0.0], [-0.0269104559, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 19, 20, 14, 15, 21, 22, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 2, 5, 10, 13, 6, 11, 16, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_775(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.810500026, 1.0, 2.0, 1.0], [-0.989500046, 3.0, 4.0, 3.0], [-0.786499977, 5.0, 6.0, 1.0], [-0.0341245122, 0.0, 0.0, 0.0], [0.00770721911, 0.0, 0.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [-0.752499998, 9.0, 10.0, 1.0], [-0.0184438601, 0.0, 0.0, 0.0], [0.0638967529, 0.0, 0.0, 0.0], [-0.235500008, 11.0, 12.0, 0.0], [-0.718500018, 13.0, 14.0, 1.0], [-0.0013707527, 0.0, 0.0, 0.0], [-0.0451193005, 0.0, 0.0, 0.0], [-0.953999996, 15.0, 16.0, 4.0], [-0.912500024, 17.0, 18.0, 4.0], [0.00489247078, 0.0, 0.0, 0.0], [0.0517500155, 0.0, 0.0, 0.0], [0.00946418382, 0.0, 0.0, 0.0], [-0.0297511816, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 11, 12, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_776(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.761500001, 1.0, 2.0, 1.0], [-0.0294141266, 0.0, 0.0, 0.0], [-0.962499976, 3.0, 4.0, 3.0], [-0.976500034, 5.0, 6.0, 3.0], [-0.622500002, 7.0, 8.0, 1.0], [-0.862499952, 9.0, 10.0, 4.0], [0.0550478734, 0.0, 0.0, 0.0], [0.0271860138, 0.0, 0.0, 0.0], [0.657000005, 11.0, 12.0, 2.0], [-0.948500037, 13.0, 14.0, 4.0], [0.0354971811, 0.0, 0.0, 0.0], [-0.0623078384, 0.0, 0.0, 0.0], [0.0112971058, 0.0, 0.0, 0.0], [0.0206495319, 0.0, 0.0, 0.0], [-0.0401098579, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 10, 6, 7, 11, 12])
    branch_indices = np.array([0, 2, 3, 5, 9, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_777(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.253499985, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.0503088944, 0.0, 0.0, 0.0], [0.08717563, 0.0, 0.0, 0.0], [-0.210500002, 9.0, 10.0, 0.0], [-0.0130440006, 0.0, 0.0, 0.0], [0.0453859083, 0.0, 0.0, 0.0], [-0.0867178887, 0.0, 0.0, 0.0], [-0.2095, 11.0, 12.0, 0.0], [0.0710863769, 0.0, 0.0, 0.0], [-0.721500039, 13.0, 14.0, 2.0], [-0.000858208339, 0.0, 0.0, 0.0], [0.0301489718, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_778(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0923999995, 1.0, 2.0, 0.0], [0.0912000015, 3.0, 4.0, 0.0], [0.1105, 5.0, 6.0, 0.0], [0.0883999988, 7.0, 8.0, 0.0], [0.117651224, 0.0, 0.0, 0.0], [-0.0970728993, 0.0, 0.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [0.0850500017, 11.0, 12.0, 0.0], [0.0892499983, 13.0, 14.0, 0.0], [0.0915360451, 0.0, 0.0, 0.0], [0.193500012, 15.0, 16.0, 0.0], [0.0760499984, 17.0, 18.0, 0.0], [0.112921275, 0.0, 0.0, 0.0], [-0.103138037, 0.0, 0.0, 0.0], [0.0135401897, 0.0, 0.0, 0.0], [-0.103551835, 0.0, 0.0, 0.0], [0.194499999, 19.0, 20.0, 0.0], [3.39161052e-05, 0.0, 0.0, 0.0], [-0.083069779, 0.0, 0.0, 0.0], [0.0458592363, 0.0, 0.0, 0.0], [-0.0169509277, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_779(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.393000007, 3.0, 4.0, 0.0], [-0.149500012, 5.0, 6.0, 0.0], [-0.407499999, 7.0, 8.0, 0.0], [-0.360500008, 9.0, 10.0, 0.0], [-0.1505, 11.0, 12.0, 0.0], [-0.0126499999, 13.0, 14.0, 0.0], [-0.424499989, 15.0, 16.0, 0.0], [0.0879921019, 0.0, 0.0, 0.0], [-0.075549297, 0.0, 0.0, 0.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.154500008, 19.0, 20.0, 0.0], [0.100337304, 0.0, 0.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [-0.0123999994, 23.0, 24.0, 0.0], [-0.468999982, 25.0, 26.0, 0.0], [-0.0858923048, 0.0, 0.0, 0.0], [-0.168500006, 27.0, 28.0, 0.0], [0.0467491448, 0.0, 0.0, 0.0], [-0.155499995, 29.0, 30.0, 0.0], [-0.0377376266, 0.0, 0.0, 0.0], [-0.143725708, 0.0, 0.0, 0.0], [0.0476863384, 0.0, 0.0, 0.0], [0.105662271, 0.0, 0.0, 0.0], [0.201499999, 31.0, 32.0, 0.0], [-0.00530204456, 0.0, 0.0, 0.0], [0.0389016122, 0.0, 0.0, 0.0], [-0.00628403714, 0.0, 0.0, 0.0], [-0.0469871983, 0.0, 0.0, 0.0], [0.00390164508, 0.0, 0.0, 0.0], [0.0806279853, 0.0, 0.0, 0.0], [-0.0671562031, 0.0, 0.0, 0.0], [0.00410073064, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 8, 9, 27, 28, 18, 29, 30, 20, 12, 21, 22, 23, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 10, 17, 2, 5, 11, 19, 6, 13, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_780(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.730999947, 1.0, 2.0, 4.0], [-0.806499958, 3.0, 4.0, 4.0], [0.0307134185, 0.0, 0.0, 0.0], [-0.1065, 5.0, 6.0, 0.0], [-0.045119036, 0.0, 0.0, 0.0], [-0.173500001, 7.0, 8.0, 0.0], [0.0364589617, 0.0, 0.0, 0.0], [0.654500008, 9.0, 10.0, 2.0], [-0.636000037, 11.0, 12.0, 1.0], [-0.00827127136, 0.0, 0.0, 0.0], [0.0464972779, 0.0, 0.0, 0.0], [-0.0595038421, 0.0, 0.0, 0.0], [0.0146637373, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_781(xs):
    #Predicts Class 1
    function_dict = np.array([[0.386500001, 1.0, 2.0, 2.0], [-0.996500015, 3.0, 4.0, 3.0], [-0.207500011, 5.0, 6.0, 0.0], [-0.0238806307, 0.0, 0.0, 0.0], [0.0407248028, 0.0, 0.0, 0.0], [-0.218499988, 7.0, 8.0, 0.0], [-0.140500009, 9.0, 10.0, 0.0], [-0.958500028, 11.0, 12.0, 4.0], [0.0458128415, 0.0, 0.0, 0.0], [-0.659000039, 13.0, 14.0, 1.0], [0.02247696, 0.0, 0.0, 0.0], [0.553499997, 15.0, 16.0, 2.0], [-0.699000001, 17.0, 18.0, 1.0], [-0.0804408491, 0.0, 0.0, 0.0], [0.01801694, 0.0, 0.0, 0.0], [-0.0643636584, 0.0, 0.0, 0.0], [0.0228892602, 0.0, 0.0, 0.0], [0.0398657024, 0.0, 0.0, 0.0], [-0.015124605, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 17, 18, 8, 13, 14, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_782(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [-0.211499989, 3.0, 4.0, 0.0], [-0.715499997, 5.0, 6.0, 1.0], [-0.506999969, 7.0, 8.0, 1.0], [0.529500008, 9.0, 10.0, 2.0], [-0.0552762561, 0.0, 0.0, 0.0], [0.590999961, 11.0, 12.0, 2.0], [-0.979499996, 13.0, 14.0, 3.0], [0.652500033, 15.0, 16.0, 2.0], [-0.0234611426, 0.0, 0.0, 0.0], [0.0603674687, 0.0, 0.0, 0.0], [0.0437708683, 0.0, 0.0, 0.0], [-0.0324877538, 0.0, 0.0, 0.0], [-0.955500007, 17.0, 18.0, 4.0], [-0.0449805446, 0.0, 0.0, 0.0], [0.0455782786, 0.0, 0.0, 0.0], [-0.0182565488, 0.0, 0.0, 0.0], [-0.0266555287, 0.0, 0.0, 0.0], [0.0255702566, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 15, 16, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_783(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.276499987, 3.0, 4.0, 0.0], [0.0689999983, 5.0, 6.0, 0.0], [0.272000015, 7.0, 8.0, 0.0], [0.392499983, 9.0, 10.0, 0.0], [0.0284376498, 0.0, 0.0, 0.0], [-0.0944391638, 0.0, 0.0, 0.0], [0.264499992, 11.0, 12.0, 0.0], [-0.140240565, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [0.415000021, 15.0, 16.0, 0.0], [0.201499999, 17.0, 18.0, 0.0], [0.16210185, 0.0, 0.0, 0.0], [0.211927414, 0.0, 0.0, 0.0], [0.00706387311, 0.0, 0.0, 0.0], [0.406499982, 19.0, 20.0, 0.0], [0.42049998, 21.0, 22.0, 0.0], [0.00219802, 0.0, 0.0, 0.0], [-0.0602155253, 0.0, 0.0, 0.0], [-0.00634780759, 0.0, 0.0, 0.0], [-0.122373246, 0.0, 0.0, 0.0], [0.0782354251, 0.0, 0.0, 0.0], [0.00319554796, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 13, 14, 19, 20, 21, 22, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 9, 10, 15, 16, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_784(xs):
    #Predicts Class 4
    function_dict = np.array([[0.03785, 1.0, 2.0, 0.0], [0.0293500014, 3.0, 4.0, 0.0], [0.0476500019, 5.0, 6.0, 0.0], [0.0256000012, 7.0, 8.0, 0.0], [-0.125459269, 0.0, 0.0, 0.0], [0.15070723, 0.0, 0.0, 0.0], [0.0551500022, 9.0, 10.0, 0.0], [0.0203999989, 11.0, 12.0, 0.0], [0.106594086, 0.0, 0.0, 0.0], [-0.108686611, 0.0, 0.0, 0.0], [0.0894500017, 13.0, 14.0, 0.0], [0.0104999999, 15.0, 16.0, 0.0], [0.0240500011, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.152999997, 21.0, 22.0, 0.0], [-0.00310900109, 0.0, 0.0, 0.0], [0.107184656, 0.0, 0.0, 0.0], [-0.120247282, 0.0, 0.0, 0.0], [-0.00379020651, 0.0, 0.0, 0.0], [0.00494656386, 0.0, 0.0, 0.0], [0.143384665, 0.0, 0.0, 0.0], [-0.0599246062, 0.0, 0.0, 0.0], [0.0129647879, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_785(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.399500012, 3.0, 4.0, 0.0], [0.0472836196, 0.0, 0.0, 0.0], [-0.412999988, 5.0, 6.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.4375, 9.0, 10.0, 0.0], [-0.0859607235, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.1505, 13.0, 14.0, 0.0], [-0.0285166539, 0.0, 0.0, 0.0], [0.0479738824, 0.0, 0.0, 0.0], [-0.1655, 15.0, 16.0, 0.0], [-0.0457492657, 0.0, 0.0, 0.0], [-0.0548115112, 0.0, 0.0, 0.0], [-0.0315500014, 17.0, 18.0, 0.0], [0.0317341499, 0.0, 0.0, 0.0], [0.0920784399, 0.0, 0.0, 0.0], [0.0474913493, 0.0, 0.0, 0.0], [-0.00476791989, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 6, 15, 16, 12, 13, 17, 18, 2])
    branch_indices = np.array([0, 1, 3, 5, 4, 7, 11, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_786(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.642500043, 1.0, 2.0, 1.0], [-0.98150003, 3.0, 4.0, 3.0], [-0.597499967, 5.0, 6.0, 1.0], [-0.0960499942, 7.0, 8.0, 0.0], [-0.707499981, 9.0, 10.0, 1.0], [-0.0445493683, 0.0, 0.0, 0.0], [-0.538499951, 11.0, 12.0, 1.0], [-0.232499987, 13.0, 14.0, 0.0], [0.0387605503, 0.0, 0.0, 0.0], [-0.772500038, 15.0, 16.0, 1.0], [0.0759049207, 0.0, 0.0, 0.0], [0.0380658619, 0.0, 0.0, 0.0], [-0.971500039, 17.0, 18.0, 3.0], [-0.300500005, 19.0, 20.0, 0.0], [-0.965499997, 21.0, 22.0, 4.0], [0.0394614637, 0.0, 0.0, 0.0], [-0.0390143208, 0.0, 0.0, 0.0], [-0.0464422069, 0.0, 0.0, 0.0], [0.0124551626, 0.0, 0.0, 0.0], [-0.0407264754, 0.0, 0.0, 0.0], [0.0587461889, 0.0, 0.0, 0.0], [0.0159669071, 0.0, 0.0, 0.0], [-0.060047958, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 15, 16, 10, 5, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 2, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_787(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.729499996, 1.0, 2.0, 1.0], [0.565500021, 3.0, 4.0, 2.0], [-0.698500037, 5.0, 6.0, 1.0], [0.461499989, 7.0, 8.0, 2.0], [-0.0509324484, 0.0, 0.0, 0.0], [0.0383097865, 0.0, 0.0, 0.0], [-0.654500008, 9.0, 10.0, 1.0], [-0.99849999, 11.0, 12.0, 3.0], [-0.779500008, 13.0, 14.0, 1.0], [-0.0289930701, 0.0, 0.0, 0.0], [0.67050004, 15.0, 16.0, 2.0], [0.0444131568, 0.0, 0.0, 0.0], [0.407499999, 17.0, 18.0, 2.0], [-0.00509043224, 0.0, 0.0, 0.0], [0.0465828292, 0.0, 0.0, 0.0], [-0.506500006, 19.0, 20.0, 1.0], [-0.0189954564, 0.0, 0.0, 0.0], [0.00731564919, 0.0, 0.0, 0.0], [-0.0799016505, 0.0, 0.0, 0.0], [0.0474704392, 0.0, 0.0, 0.0], [-0.00896955747, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 17, 18, 13, 14, 4, 5, 9, 19, 20, 16])
    branch_indices = np.array([0, 1, 3, 7, 12, 8, 2, 6, 10, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_788(xs):
    #Predicts Class 2
    function_dict = np.array([[0.60650003, 1.0, 2.0, 2.0], [-0.982499957, 3.0, 4.0, 3.0], [-0.215499997, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.928499997, 9.0, 10.0, 3.0], [-0.257499993, 11.0, 12.0, 0.0], [-0.166500002, 13.0, 14.0, 0.0], [-0.96449995, 15.0, 16.0, 4.0], [-0.962499976, 17.0, 18.0, 4.0], [-0.0606165566, 0.0, 0.0, 0.0], [0.00547607895, 0.0, 0.0, 0.0], [0.0304360464, 0.0, 0.0, 0.0], [-0.0488842018, 0.0, 0.0, 0.0], [0.0616524927, 0.0, 0.0, 0.0], [-0.0127916737, 0.0, 0.0, 0.0], [-0.00870120618, 0.0, 0.0, 0.0], [-0.0491020307, 0.0, 0.0, 0.0], [-0.00307556707, 0.0, 0.0, 0.0], [0.0550642647, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 9, 10, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 8, 4, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_789(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.136500001, 1.0, 2.0, 0.0], [-0.141499996, 3.0, 4.0, 0.0], [-0.129500002, 5.0, 6.0, 0.0], [-0.142500013, 7.0, 8.0, 0.0], [-0.0546478778, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.12650001, 11.0, 12.0, 0.0], [-0.185499996, 13.0, 14.0, 0.0], [0.17540361, 0.0, 0.0, 0.0], [-0.132499993, 15.0, 16.0, 0.0], [0.134745479, 0.0, 0.0, 0.0], [-0.0771269575, 0.0, 0.0, 0.0], [-0.125499994, 17.0, 18.0, 0.0], [-0.186500013, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.134499997, 23.0, 24.0, 0.0], [-0.22606349, 0.0, 0.0, 0.0], [0.0771822259, 0.0, 0.0, 0.0], [-0.120499998, 25.0, 26.0, 0.0], [-0.00935008936, 0.0, 0.0, 0.0], [0.0947267115, 0.0, 0.0, 0.0], [-0.145676151, 0.0, 0.0, 0.0], [0.0201505329, 0.0, 0.0, 0.0], [0.0709656999, 0.0, 0.0, 0.0], [0.00590003887, 0.0, 0.0, 0.0], [-0.112643838, 0.0, 0.0, 0.0], [0.00126447296, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 23, 24, 16, 10, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_790(xs):
    #Predicts Class 4
    function_dict = np.array([[0.192499995, 1.0, 2.0, 0.0], [0.152999997, 3.0, 4.0, 0.0], [0.195499986, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.116158403, 0.0, 0.0, 0.0], [-0.0829323083, 0.0, 0.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0912000015, 11.0, 12.0, 0.0], [0.1105, 13.0, 14.0, 0.0], [0.0538661629, 0.0, 0.0, 0.0], [-0.0303245634, 0.0, 0.0, 0.0], [0.0888999999, 15.0, 16.0, 0.0], [0.089018099, 0.0, 0.0, 0.0], [-0.102166444, 0.0, 0.0, 0.0], [-0.0266197976, 0.0, 0.0, 0.0], [0.00163771072, 0.0, 0.0, 0.0], [-0.0728813186, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 13, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_791(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.344999999, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.115582772, 0.0, 0.0, 0.0], [0.11837057, 0.0, 0.0, 0.0], [0.404500008, 9.0, 10.0, 0.0], [0.212500006, 11.0, 12.0, 0.0], [0.260500014, 13.0, 14.0, 0.0], [0.397499979, 15.0, 16.0, 0.0], [0.405499995, 17.0, 18.0, 0.0], [-0.644500017, 19.0, 20.0, 2.0], [-0.108063519, 0.0, 0.0, 0.0], [0.111557536, 0.0, 0.0, 0.0], [-0.0123298364, 0.0, 0.0, 0.0], [-0.0496760234, 0.0, 0.0, 0.0], [-0.014083541, 0.0, 0.0, 0.0], [0.0873227865, 0.0, 0.0, 0.0], [0.409500003, 21.0, 22.0, 0.0], [0.00206629909, 0.0, 0.0, 0.0], [-0.0680749342, 0.0, 0.0, 0.0], [-0.110461697, 0.0, 0.0, 0.0], [0.00701376749, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_792(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0299351979, 0.0, 0.0, 0.0], [-0.60650003, 3.0, 4.0, 1.0], [0.484499991, 5.0, 6.0, 2.0], [-0.825999975, 7.0, 8.0, 4.0], [-0.813500047, 9.0, 10.0, 1.0], [-0.943500042, 11.0, 12.0, 4.0], [-0.0359765366, 0.0, 0.0, 0.0], [0.728999972, 13.0, 14.0, 2.0], [0.0499773733, 0.0, 0.0, 0.0], [0.428499997, 15.0, 16.0, 2.0], [-0.960500002, 17.0, 18.0, 4.0], [-0.89349997, 19.0, 20.0, 4.0], [0.0372333564, 0.0, 0.0, 0.0], [-0.0328348689, 0.0, 0.0, 0.0], [0.0146978106, 0.0, 0.0, 0.0], [-0.0558188111, 0.0, 0.0, 0.0], [0.0251933243, 0.0, 0.0, 0.0], [-0.0377162285, 0.0, 0.0, 0.0], [0.0657635108, 0.0, 0.0, 0.0], [-0.00722848019, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 15, 16, 17, 18, 19, 20, 7, 13, 14])
    branch_indices = np.array([0, 2, 3, 5, 10, 6, 11, 12, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_793(xs):
    #Predicts Class 1
    function_dict = np.array([[0.701499999, 1.0, 2.0, 2.0], [0.657500029, 3.0, 4.0, 2.0], [0.0280313846, 0.0, 0.0, 0.0], [-0.132499993, 5.0, 6.0, 0.0], [-0.0385013968, 0.0, 0.0, 0.0], [-0.946500003, 7.0, 8.0, 4.0], [-0.0322200097, 0.0, 0.0, 0.0], [-0.183499992, 9.0, 10.0, 0.0], [-0.887500048, 11.0, 12.0, 4.0], [0.00517934095, 0.0, 0.0, 0.0], [0.0548524186, 0.0, 0.0, 0.0], [-0.0283840653, 0.0, 0.0, 0.0], [0.0362837389, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_794(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.941499949, 3.0, 4.0, 4.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.956499994, 7.0, 8.0, 4.0], [0.550500035, 9.0, 10.0, 2.0], [0.0409491435, 0.0, 0.0, 0.0], [-0.912500024, 11.0, 12.0, 4.0], [0.443499982, 13.0, 14.0, 2.0], [0.041872561, 0.0, 0.0, 0.0], [0.00843032822, 0.0, 0.0, 0.0], [-0.0711831376, 0.0, 0.0, 0.0], [0.614500046, 15.0, 16.0, 2.0], [-0.825999975, 17.0, 18.0, 4.0], [0.0140655162, 0.0, 0.0, 0.0], [-0.035751678, 0.0, 0.0, 0.0], [0.00176411052, 0.0, 0.0, 0.0], [-0.0568565764, 0.0, 0.0, 0.0], [0.064261131, 0.0, 0.0, 0.0], [-0.213499993, 19.0, 20.0, 0.0], [-0.0340085179, 0.0, 0.0, 0.0], [0.00609465176, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 9, 10, 5, 15, 16, 17, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 4, 2, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_795(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 4.0], [-0.923500001, 3.0, 4.0, 2.0], [0.263000011, 5.0, 6.0, 0.0], [0.588, 7.0, 8.0, 0.0], [-0.0269000009, 9.0, 10.0, 0.0], [0.115000002, 11.0, 12.0, 0.0], [0.42900002, 13.0, 14.0, 0.0], [0.564499974, 15.0, 16.0, 0.0], [0.620499969, 17.0, 18.0, 0.0], [0.117990419, 0.0, 0.0, 0.0], [0.0928000063, 19.0, 20.0, 0.0], [0.0830999985, 21.0, 22.0, 0.0], [0.155226827, 0.0, 0.0, 0.0], [-0.18800962, 0.0, 0.0, 0.0], [0.0613391139, 0.0, 0.0, 0.0], [0.46450001, 23.0, 24.0, 0.0], [0.0986365974, 0.0, 0.0, 0.0], [-0.111983076, 0.0, 0.0, 0.0], [0.0410371386, 0.0, 0.0, 0.0], [0.0234500002, 25.0, 26.0, 0.0], [0.0850309432, 0.0, 0.0, 0.0], [0.0107000005, 27.0, 28.0, 0.0], [-0.187965423, 0.0, 0.0, 0.0], [0.00241873437, 0.0, 0.0, 0.0], [-0.0207859594, 0.0, 0.0, 0.0], [-0.00202667457, 0.0, 0.0, 0.0], [-0.108017758, 0.0, 0.0, 0.0], [-0.0251046456, 0.0, 0.0, 0.0], [0.122166082, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 17, 18, 9, 25, 26, 20, 27, 28, 22, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 19, 2, 5, 11, 21, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_796(xs):
    #Predicts Class 4
    function_dict = np.array([[0.111500002, 1.0, 2.0, 0.0], [0.0941499993, 3.0, 4.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [0.0917500034, 7.0, 8.0, 0.0], [0.102006748, 0.0, 0.0, 0.0], [-0.104928806, 0.0, 0.0, 0.0], [0.194499999, 9.0, 10.0, 0.0], [0.0892499983, 11.0, 12.0, 0.0], [-0.0924846828, 0.0, 0.0, 0.0], [0.047283683, 0.0, 0.0, 0.0], [0.202500001, 13.0, 14.0, 0.0], [0.0883999988, 15.0, 16.0, 0.0], [0.119585939, 0.0, 0.0, 0.0], [-0.0545698144, 0.0, 0.0, 0.0], [0.0373391807, 0.0, 0.0, 0.0], [0.000935519405, 0.0, 0.0, 0.0], [-0.0729441792, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_797(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [-0.106705099, 0.0, 0.0, 0.0], [0.12471687, 0.0, 0.0, 0.0], [0.363499999, 9.0, 10.0, 0.0], [0.202500001, 11.0, 12.0, 0.0], [0.216499999, 13.0, 14.0, 0.0], [0.278999984, 15.0, 16.0, 0.0], [0.401499987, 17.0, 18.0, 0.0], [0.201499999, 19.0, 20.0, 0.0], [-0.0817876905, 0.0, 0.0, 0.0], [0.0914075747, 0.0, 0.0, 0.0], [0.25150001, 21.0, 22.0, 0.0], [-0.00296350149, 0.0, 0.0, 0.0], [-0.0966476053, 0.0, 0.0, 0.0], [0.0688973665, 0.0, 0.0, 0.0], [0.406499982, 23.0, 24.0, 0.0], [-0.00785425957, 0.0, 0.0, 0.0], [0.053818997, 0.0, 0.0, 0.0], [-0.0596037544, 0.0, 0.0, 0.0], [0.0439903438, 0.0, 0.0, 0.0], [-0.0591037162, 0.0, 0.0, 0.0], [0.00516749592, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 21, 22, 4, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_798(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [0.446500003, 3.0, 4.0, 2.0], [0.338, 5.0, 6.0, 2.0], [-0.0480486862, 0.0, 0.0, 0.0], [-0.689499974, 7.0, 8.0, 1.0], [-0.0291735809, 0.0, 0.0, 0.0], [0.529500008, 9.0, 10.0, 2.0], [-0.770500004, 11.0, 12.0, 1.0], [-0.526000023, 13.0, 14.0, 1.0], [-0.208499998, 15.0, 16.0, 0.0], [-0.679499984, 17.0, 18.0, 1.0], [-0.014347285, 0.0, 0.0, 0.0], [0.0454741456, 0.0, 0.0, 0.0], [-0.0451444946, 0.0, 0.0, 0.0], [0.0197097957, 0.0, 0.0, 0.0], [0.0772573724, 0.0, 0.0, 0.0], [0.458499998, 19.0, 20.0, 2.0], [-0.0393445864, 0.0, 0.0, 0.0], [0.634500027, 21.0, 22.0, 2.0], [-0.0332381278, 0.0, 0.0, 0.0], [0.0471989401, 0.0, 0.0, 0.0], [0.0458081067, 0.0, 0.0, 0.0], [-0.0136792352, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 13, 14, 5, 15, 19, 20, 17, 21, 22])
    branch_indices = np.array([0, 1, 4, 7, 8, 2, 6, 9, 16, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_799(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.2755, 1.0, 2.0, 0.0], [-0.884500027, 3.0, 4.0, 4.0], [-0.256500006, 5.0, 6.0, 0.0], [-0.334500015, 7.0, 8.0, 0.0], [-0.0211394224, 0.0, 0.0, 0.0], [-0.04417843, 0.0, 0.0, 0.0], [-0.941499949, 9.0, 10.0, 4.0], [-0.0151131982, 0.0, 0.0, 0.0], [-0.9375, 11.0, 12.0, 4.0], [-0.968500018, 13.0, 14.0, 4.0], [-0.906499982, 15.0, 16.0, 4.0], [0.0179194976, 0.0, 0.0, 0.0], [0.0832839087, 0.0, 0.0, 0.0], [-0.219500005, 17.0, 18.0, 0.0], [-0.218499988, 19.0, 20.0, 0.0], [-0.692499995, 21.0, 22.0, 1.0], [-0.0201703832, 0.0, 0.0, 0.0], [0.0726103932, 0.0, 0.0, 0.0], [-0.0259575099, 0.0, 0.0, 0.0], [-0.0548067689, 0.0, 0.0, 0.0], [-0.00231783697, 0.0, 0.0, 0.0], [0.0154911317, 0.0, 0.0, 0.0], [0.0633356273, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 4, 5, 17, 18, 19, 20, 21, 22, 16])
    branch_indices = np.array([0, 1, 3, 8, 2, 6, 9, 13, 14, 10, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_800(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.266499996, 1.0, 2.0, 0.0], [-0.436500013, 3.0, 4.0, 1.0], [-0.448500007, 5.0, 6.0, 1.0], [0.00753193721, 0.0, 0.0, 0.0], [-0.0477688164, 0.0, 0.0, 0.0], [-0.985499978, 7.0, 8.0, 3.0], [0.0552273877, 0.0, 0.0, 0.0], [0.63349998, 9.0, 10.0, 2.0], [0.529500008, 11.0, 12.0, 2.0], [0.566499949, 13.0, 14.0, 2.0], [-0.0526606441, 0.0, 0.0, 0.0], [-0.0169769377, 0.0, 0.0, 0.0], [-0.888499975, 15.0, 16.0, 4.0], [-0.0261873193, 0.0, 0.0, 0.0], [0.0520655178, 0.0, 0.0, 0.0], [0.064880088, 0.0, 0.0, 0.0], [-0.00445150258, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 10, 11, 15, 16, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 9, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_801(xs):
    #Predicts Class 3
    function_dict = np.array([[0.521499991, 1.0, 2.0, 0.0], [0.489499986, 3.0, 4.0, 0.0], [0.537500024, 5.0, 6.0, 0.0], [0.465499997, 7.0, 8.0, 0.0], [-0.0600568727, 0.0, 0.0, 0.0], [0.0654100254, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.436500013, 11.0, 12.0, 0.0], [0.084653154, 0.0, 0.0, 0.0], [0.567000031, 13.0, 14.0, 0.0], [-0.112344205, 0.0, 0.0, 0.0], [0.434499979, 15.0, 16.0, 0.0], [0.446500003, 17.0, 18.0, 0.0], [0.561499953, 19.0, 20.0, 0.0], [0.616999984, 21.0, 22.0, 0.0], [-0.00116299943, 0.0, 0.0, 0.0], [0.0778864548, 0.0, 0.0, 0.0], [-0.0807810128, 0.0, 0.0, 0.0], [0.00224231882, 0.0, 0.0, 0.0], [0.0100968964, 0.0, 0.0, 0.0], [0.0956790969, 0.0, 0.0, 0.0], [-0.0621456802, 0.0, 0.0, 0.0], [0.0251341164, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 19, 20, 21, 22, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_802(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0101999994, 3.0, 4.0, 0.0], [0.0237000007, 5.0, 6.0, 0.0], [0.00768500008, 7.0, 8.0, 0.0], [-0.118959405, 0.0, 0.0, 0.0], [0.119986176, 0.0, 0.0, 0.0], [0.0256000012, 9.0, 10.0, 0.0], [0.0042849998, 11.0, 12.0, 0.0], [0.084955804, 0.0, 0.0, 0.0], [-0.100160077, 0.0, 0.0, 0.0], [-0.822000027, 13.0, 14.0, 2.0], [0.00185999996, 15.0, 16.0, 0.0], [0.00540999975, 17.0, 18.0, 0.0], [0.0293500014, 19.0, 20.0, 0.0], [-0.73150003, 21.0, 22.0, 2.0], [-0.00247203489, 0.0, 0.0, 0.0], [0.111095831, 0.0, 0.0, 0.0], [-0.142233476, 0.0, 0.0, 0.0], [-0.0191633478, 0.0, 0.0, 0.0], [0.078374289, 0.0, 0.0, 0.0], [-0.00650788331, 0.0, 0.0, 0.0], [0.162393197, 0.0, 0.0, 0.0], [-0.0334884226, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_803(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.421000004, 3.0, 4.0, 0.0], [0.538500011, 5.0, 6.0, 0.0], [-0.0595776662, 0.0, 0.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [0.428499997, 9.0, 10.0, 0.0], [0.080289267, 0.0, 0.0, 0.0], [0.0643309131, 0.0, 0.0, 0.0], [-0.169499993, 11.0, 12.0, 0.0], [-0.995499969, 13.0, 14.0, 1.0], [0.43599999, 15.0, 16.0, 0.0], [-0.0763056278, 0.0, 0.0, 0.0], [-0.16049999, 17.0, 18.0, 0.0], [0.157000005, 19.0, 20.0, 0.0], [-0.0290236417, 0.0, 0.0, 0.0], [-0.0566294156, 0.0, 0.0, 0.0], [-0.0144741284, 0.0, 0.0, 0.0], [0.0328231975, 0.0, 0.0, 0.0], [-0.00884122308, 0.0, 0.0, 0.0], [-0.00625434937, 0.0, 0.0, 0.0], [0.0879893899, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 17, 18, 19, 20, 14, 15, 16, 6])
    branch_indices = np.array([0, 1, 4, 8, 12, 2, 5, 9, 13, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_804(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.213499993, 1.0, 2.0, 0.0], [-0.828999996, 3.0, 4.0, 4.0], [-0.140500009, 5.0, 6.0, 0.0], [-0.772500038, 7.0, 8.0, 1.0], [0.0241655316, 0.0, 0.0, 0.0], [-0.57099998, 9.0, 10.0, 1.0], [-0.990499973, 11.0, 12.0, 3.0], [0.440500021, 13.0, 14.0, 2.0], [0.555500031, 15.0, 16.0, 2.0], [0.471000016, 17.0, 18.0, 2.0], [-0.0230991449, 0.0, 0.0, 0.0], [0.490999997, 19.0, 20.0, 2.0], [0.0242180284, 0.0, 0.0, 0.0], [-0.0207269248, 0.0, 0.0, 0.0], [0.033656206, 0.0, 0.0, 0.0], [0.491999984, 21.0, 22.0, 2.0], [0.657500029, 23.0, 24.0, 2.0], [-0.0163930636, 0.0, 0.0, 0.0], [0.058350563, 0.0, 0.0, 0.0], [-0.00992192701, 0.0, 0.0, 0.0], [-0.0529124141, 0.0, 0.0, 0.0], [-0.0163635146, 0.0, 0.0, 0.0], [0.0184100773, 0.0, 0.0, 0.0], [-0.0937747508, 0.0, 0.0, 0.0], [-0.00441937335, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 21, 22, 23, 24, 4, 17, 18, 10, 19, 20, 12])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 16, 2, 5, 9, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_805(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.975499988, 1.0, 2.0, 4.0], [-0.210500002, 3.0, 4.0, 0.0], [-0.968500018, 5.0, 6.0, 4.0], [0.0138163231, 0.0, 0.0, 0.0], [-0.0419917107, 0.0, 0.0, 0.0], [0.467500001, 7.0, 8.0, 2.0], [-0.953500032, 9.0, 10.0, 4.0], [0.00700563099, 0.0, 0.0, 0.0], [0.0423422791, 0.0, 0.0, 0.0], [0.555500031, 11.0, 12.0, 2.0], [-0.946500003, 13.0, 14.0, 4.0], [0.455500007, 15.0, 16.0, 2.0], [0.0275894627, 0.0, 0.0, 0.0], [0.0496004038, 0.0, 0.0, 0.0], [0.600499988, 17.0, 18.0, 2.0], [0.00557682756, 0.0, 0.0, 0.0], [-0.0751738399, 0.0, 0.0, 0.0], [0.0128076905, 0.0, 0.0, 0.0], [-0.0217899941, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 15, 16, 12, 13, 17, 18])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_806(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.651499987, 1.0, 2.0, 1.0], [-0.961500049, 3.0, 4.0, 4.0], [-0.138500005, 5.0, 6.0, 0.0], [0.423500001, 7.0, 8.0, 2.0], [-0.993499994, 9.0, 10.0, 3.0], [-0.191500008, 11.0, 12.0, 0.0], [0.043867141, 0.0, 0.0, 0.0], [-0.0184782315, 0.0, 0.0, 0.0], [0.0281918384, 0.0, 0.0, 0.0], [0.00301699759, 0.0, 0.0, 0.0], [-0.0555744581, 0.0, 0.0, 0.0], [-0.997500002, 13.0, 14.0, 3.0], [-0.0413999073, 0.0, 0.0, 0.0], [-0.0272216536, 0.0, 0.0, 0.0], [-0.266499996, 15.0, 16.0, 0.0], [-0.0159556419, 0.0, 0.0, 0.0], [0.0526619405, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 13, 15, 16, 12, 6])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 11, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_807(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.585000038, 3.0, 4.0, 0.0], [0.0142000001, 5.0, 6.0, 0.0], [0.5625, 7.0, 8.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [-0.0136679653, 0.0, 0.0, 0.0], [-0.0508111902, 0.0, 0.0, 0.0], [0.538499951, 11.0, 12.0, 0.0], [-0.0858956277, 0.0, 0.0, 0.0], [0.0871375278, 0.0, 0.0, 0.0], [-0.0323507413, 0.0, 0.0, 0.0], [0.528499961, 13.0, 14.0, 0.0], [0.541499972, 15.0, 16.0, 0.0], [0.000587053364, 0.0, 0.0, 0.0], [-0.08495453, 0.0, 0.0, 0.0], [0.0848798677, 0.0, 0.0, 0.0], [0.00791482534, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_808(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0353999995, 1.0, 2.0, 0.0], [0.02685, 3.0, 4.0, 0.0], [0.0417999998, 5.0, 6.0, 0.0], [0.0240500011, 7.0, 8.0, 0.0], [-0.126602665, 0.0, 0.0, 0.0], [0.125143647, 0.0, 0.0, 0.0], [0.0477499999, 9.0, 10.0, 0.0], [0.0203999989, 11.0, 12.0, 0.0], [0.100390002, 0.0, 0.0, 0.0], [-0.0974925607, 0.0, 0.0, 0.0], [0.0560500026, 13.0, 14.0, 0.0], [0.0104999999, 15.0, 16.0, 0.0], [-0.102952294, 0.0, 0.0, 0.0], [0.131717056, 0.0, 0.0, 0.0], [0.0740500018, 17.0, 18.0, 0.0], [-0.0020273074, 0.0, 0.0, 0.0], [0.101766609, 0.0, 0.0, 0.0], [-0.106512792, 0.0, 0.0, 0.0], [0.0111735919, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_809(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.344999999, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.118706949, 0.0, 0.0, 0.0], [0.100670315, 0.0, 0.0, 0.0], [0.404500008, 9.0, 10.0, 0.0], [0.212500006, 11.0, 12.0, 0.0], [0.260500014, 13.0, 14.0, 0.0], [0.397499979, 15.0, 16.0, 0.0], [0.405499995, 17.0, 18.0, 0.0], [-0.161500007, 19.0, 20.0, 0.0], [-0.0813708678, 0.0, 0.0, 0.0], [0.105923012, 0.0, 0.0, 0.0], [-0.0122106792, 0.0, 0.0, 0.0], [-0.0523845851, 0.0, 0.0, 0.0], [-0.0154375527, 0.0, 0.0, 0.0], [0.0822578743, 0.0, 0.0, 0.0], [0.409500003, 21.0, 22.0, 0.0], [-0.0172620453, 0.0, 0.0, 0.0], [0.0138995154, 0.0, 0.0, 0.0], [-0.0968144685, 0.0, 0.0, 0.0], [0.00701786717, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_810(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.266499996, 3.0, 4.0, 0.0], [0.600499988, 5.0, 6.0, 2.0], [-0.0242856741, 0.0, 0.0, 0.0], [-0.828500032, 7.0, 8.0, 1.0], [-0.263500005, 9.0, 10.0, 0.0], [-0.615499973, 11.0, 12.0, 1.0], [-0.0155531261, 0.0, 0.0, 0.0], [0.449499995, 13.0, 14.0, 2.0], [0.0284296386, 0.0, 0.0, 0.0], [-0.221500009, 15.0, 16.0, 0.0], [-0.201000005, 17.0, 18.0, 0.0], [-0.178499997, 19.0, 20.0, 0.0], [0.0586318113, 0.0, 0.0, 0.0], [-0.00400813343, 0.0, 0.0, 0.0], [-0.0671238527, 0.0, 0.0, 0.0], [-0.647500038, 21.0, 22.0, 1.0], [0.0507703722, 0.0, 0.0, 0.0], [-0.00121583592, 0.0, 0.0, 0.0], [-0.0368643515, 0.0, 0.0, 0.0], [0.022317538, 0.0, 0.0, 0.0], [-0.0249211714, 0.0, 0.0, 0.0], [0.0298301801, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 13, 14, 9, 15, 21, 22, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 4, 8, 2, 5, 10, 16, 6, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_811(xs):
    #Predicts Class 1
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [0.455500007, 3.0, 4.0, 2.0], [0.539499998, 5.0, 6.0, 2.0], [-0.757500052, 7.0, 8.0, 1.0], [-0.0455405042, 0.0, 0.0, 0.0], [-0.957499981, 9.0, 10.0, 4.0], [-0.908499956, 11.0, 12.0, 4.0], [-0.791499972, 13.0, 14.0, 1.0], [0.0307739507, 0.0, 0.0, 0.0], [0.0728255659, 0.0, 0.0, 0.0], [-0.00943884812, 0.0, 0.0, 0.0], [0.637500048, 15.0, 16.0, 2.0], [-0.871500015, 17.0, 18.0, 4.0], [-0.821500003, 19.0, 20.0, 1.0], [-0.0486415923, 0.0, 0.0, 0.0], [-0.961500049, 21.0, 22.0, 4.0], [0.0182300266, 0.0, 0.0, 0.0], [0.0592252314, 0.0, 0.0, 0.0], [-0.021727737, 0.0, 0.0, 0.0], [-0.0240630209, 0.0, 0.0, 0.0], [0.0410318077, 0.0, 0.0, 0.0], [-0.00137464306, 0.0, 0.0, 0.0], [-0.0511331335, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 10, 21, 22, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 15, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_812(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.401499987, 1.0, 2.0, 1.0], [-0.892500043, 3.0, 4.0, 3.0], [0.0261570904, 0.0, 0.0, 0.0], [-0.976500034, 5.0, 6.0, 3.0], [-0.0325701348, 0.0, 0.0, 0.0], [-0.230500013, 7.0, 8.0, 0.0], [-0.651000023, 9.0, 10.0, 1.0], [-0.9005, 11.0, 12.0, 4.0], [-0.179500014, 13.0, 14.0, 0.0], [-0.012552198, 0.0, 0.0, 0.0], [-0.895500004, 15.0, 16.0, 4.0], [-0.0597234666, 0.0, 0.0, 0.0], [0.0159410872, 0.0, 0.0, 0.0], [0.0302988701, 0.0, 0.0, 0.0], [-0.0286276378, 0.0, 0.0, 0.0], [0.0600821003, 0.0, 0.0, 0.0], [0.0103950202, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_813(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0293500014, 1.0, 2.0, 0.0], [-0.0339000002, 3.0, 4.0, 0.0], [-0.0250499994, 5.0, 6.0, 0.0], [-0.0491999984, 7.0, 8.0, 0.0], [-0.191206351, 0.0, 0.0, 0.0], [0.189306244, 0.0, 0.0, 0.0], [-0.0154499998, 9.0, 10.0, 0.0], [-0.0579499975, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.0849323943, 0.0, 0.0, 0.0], [-0.0128499996, 15.0, 16.0, 0.0], [-0.066399999, 17.0, 18.0, 0.0], [-0.102007039, 0.0, 0.0, 0.0], [-0.0467999987, 19.0, 20.0, 0.0], [-0.20062016, 0.0, 0.0, 0.0], [0.128601164, 0.0, 0.0, 0.0], [-0.00963000022, 21.0, 22.0, 0.0], [-0.00557348039, 0.0, 0.0, 0.0], [0.122318506, 0.0, 0.0, 0.0], [0.25681901, 0.0, 0.0, 0.0], [0.0730191991, 0.0, 0.0, 0.0], [-0.0881352946, 0.0, 0.0, 0.0], [0.00231552124, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 19, 20, 14, 4, 5, 9, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_814(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.414000005, 3.0, 4.0, 0.0], [0.0741500035, 5.0, 6.0, 0.0], [-0.0563195162, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.02575, 9.0, 10.0, 0.0], [0.0442853197, 0.0, 0.0, 0.0], [0.0775337666, 0.0, 0.0, 0.0], [-0.282999992, 11.0, 12.0, 0.0], [-0.120499998, 13.0, 14.0, 0.0], [-0.0971112102, 0.0, 0.0, 0.0], [-0.284500003, 15.0, 16.0, 0.0], [-0.210500002, 17.0, 18.0, 0.0], [-0.639999986, 19.0, 20.0, 2.0], [0.0558894277, 0.0, 0.0, 0.0], [-0.0150111225, 0.0, 0.0, 0.0], [-0.0529147238, 0.0, 0.0, 0.0], [0.0911781862, 0.0, 0.0, 0.0], [0.00141406711, 0.0, 0.0, 0.0], [-0.0594298467, 0.0, 0.0, 0.0], [0.0326628648, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 15, 16, 17, 18, 19, 20, 14, 10, 6])
    branch_indices = np.array([0, 1, 4, 8, 11, 12, 2, 5, 9, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_815(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.0535915792, 0.0, 0.0, 0.0], [-0.420000017, 3.0, 4.0, 0.0], [-0.0666807219, 0.0, 0.0, 0.0], [-0.401000023, 5.0, 6.0, 0.0], [0.0703290179, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.0753821805, 0.0, 0.0, 0.0], [-0.337500006, 9.0, 10.0, 0.0], [0.0920363143, 0.0, 0.0, 0.0], [-0.00262414874, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 7, 9, 10])
    branch_indices = np.array([0, 2, 4, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_816(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [0.573500037, 3.0, 4.0, 2.0], [-0.1875, 5.0, 6.0, 0.0], [-0.0427949503, 0.0, 0.0, 0.0], [0.00790529978, 0.0, 0.0, 0.0], [0.442499995, 7.0, 8.0, 2.0], [-0.593500018, 9.0, 10.0, 1.0], [-0.219500005, 11.0, 12.0, 0.0], [0.485500008, 13.0, 14.0, 2.0], [-0.799499989, 15.0, 16.0, 1.0], [0.0231830049, 0.0, 0.0, 0.0], [0.00962180831, 0.0, 0.0, 0.0], [0.0619874746, 0.0, 0.0, 0.0], [-0.0650550947, 0.0, 0.0, 0.0], [-0.728500009, 17.0, 18.0, 1.0], [0.0220053773, 0.0, 0.0, 0.0], [-0.941499949, 19.0, 20.0, 4.0], [0.0664541796, 0.0, 0.0, 0.0], [-0.00217617769, 0.0, 0.0, 0.0], [-0.0599859841, 0.0, 0.0, 0.0], [-0.0189069305, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 13, 17, 18, 15, 19, 20, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 14, 6, 9, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_817(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 3.0], [0.436500013, 3.0, 4.0, 2.0], [-0.930500031, 5.0, 6.0, 4.0], [0.361999989, 7.0, 8.0, 2.0], [-0.654500008, 9.0, 10.0, 1.0], [-0.946500003, 11.0, 12.0, 4.0], [-0.541499972, 13.0, 14.0, 1.0], [-0.0238085538, 0.0, 0.0, 0.0], [0.0569673181, 0.0, 0.0, 0.0], [-0.212500006, 15.0, 16.0, 0.0], [0.0214800462, 0.0, 0.0, 0.0], [-0.980499983, 17.0, 18.0, 3.0], [-0.0634075329, 0.0, 0.0, 0.0], [-0.913499951, 19.0, 20.0, 4.0], [-0.0258638021, 0.0, 0.0, 0.0], [-0.0627462938, 0.0, 0.0, 0.0], [-0.00180071907, 0.0, 0.0, 0.0], [-0.986500025, 21.0, 22.0, 3.0], [-0.96449995, 23.0, 24.0, 3.0], [0.0886938944, 0.0, 0.0, 0.0], [0.00535975816, 0.0, 0.0, 0.0], [0.0160421133, 0.0, 0.0, 0.0], [-0.0341474414, 0.0, 0.0, 0.0], [0.0519592464, 0.0, 0.0, 0.0], [0.00667535467, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 15, 16, 10, 21, 22, 23, 24, 12, 19, 20, 14])
    branch_indices = np.array([0, 1, 3, 4, 9, 2, 5, 11, 17, 18, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_818(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.186500013, 1.0, 2.0, 0.0], [-0.782500029, 3.0, 4.0, 4.0], [-0.149500012, 5.0, 6.0, 0.0], [-0.756500006, 7.0, 8.0, 1.0], [0.0294345971, 0.0, 0.0, 0.0], [0.0389062539, 0.0, 0.0, 0.0], [-0.988499999, 9.0, 10.0, 3.0], [0.027506236, 0.0, 0.0, 0.0], [-0.287, 11.0, 12.0, 0.0], [0.027540056, 0.0, 0.0, 0.0], [-0.0403306894, 0.0, 0.0, 0.0], [0.0125064412, 0.0, 0.0, 0.0], [-0.978500009, 13.0, 14.0, 3.0], [-0.0149917221, 0.0, 0.0, 0.0], [-0.0692119226, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 13, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 8, 12, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_819(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.0411883816, 0.0, 0.0, 0.0], [0.0775699392, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.0238023289, 0.0, 0.0, 0.0], [0.0258667767, 0.0, 0.0, 0.0], [-0.721500039, 11.0, 12.0, 2.0], [-0.0583330728, 0.0, 0.0, 0.0], [-0.205500007, 13.0, 14.0, 0.0], [-0.120999999, 15.0, 16.0, 0.0], [-0.0647410899, 0.0, 0.0, 0.0], [0.000729628373, 0.0, 0.0, 0.0], [0.0896278694, 0.0, 0.0, 0.0], [-0.000212760395, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 13, 14, 15, 16, 10])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_820(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0825999975, 3.0, 4.0, 0.0], [0.1105, 5.0, 6.0, 0.0], [0.0760499984, 7.0, 8.0, 0.0], [0.0854000002, 9.0, 10.0, 0.0], [0.0945499986, 11.0, 12.0, 0.0], [0.157999992, 13.0, 14.0, 0.0], [0.0740500018, 15.0, 16.0, 0.0], [-0.155102178, 0.0, 0.0, 0.0], [0.13531816, 0.0, 0.0, 0.0], [0.0873000026, 17.0, 18.0, 0.0], [0.0917500034, 19.0, 20.0, 0.0], [-0.126508459, 0.0, 0.0, 0.0], [0.0938779041, 0.0, 0.0, 0.0], [0.193500012, 21.0, 22.0, 0.0], [0.0506500006, 23.0, 24.0, 0.0], [0.0998081267, 0.0, 0.0, 0.0], [-0.0776753798, 0.0, 0.0, 0.0], [0.0910260007, 0.0, 0.0, 0.0], [-0.0449827947, 0.0, 0.0, 0.0], [0.00759636238, 0.0, 0.0, 0.0], [-0.0946624875, 0.0, 0.0, 0.0], [0.196500003, 25.0, 26.0, 0.0], [0.000628490467, 0.0, 0.0, 0.0], [-0.0738694072, 0.0, 0.0, 0.0], [0.0308572538, 0.0, 0.0, 0.0], [-0.0317376442, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 17, 18, 19, 20, 12, 13, 21, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 10, 2, 5, 11, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_821(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [-0.0868083388, 0.0, 0.0, 0.0], [0.100693025, 0.0, 0.0, 0.0], [0.392499983, 9.0, 10.0, 0.0], [-0.0318999998, 11.0, 12.0, 0.0], [0.228500009, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [0.401499987, 17.0, 18.0, 0.0], [-0.0748500004, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.0809583217, 0.0, 0.0, 0.0], [-0.0181040503, 0.0, 0.0, 0.0], [-0.108317912, 0.0, 0.0, 0.0], [0.00202958612, 0.0, 0.0, 0.0], [0.077095218, 0.0, 0.0, 0.0], [0.406499982, 23.0, 24.0, 0.0], [-0.00604770985, 0.0, 0.0, 0.0], [0.0633423924, 0.0, 0.0, 0.0], [-0.0592685901, 0.0, 0.0, 0.0], [-0.00134263537, 0.0, 0.0, 0.0], [-0.051026836, 0.0, 0.0, 0.0], [0.00715779699, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 4, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_822(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.250499994, 1.0, 2.0, 0.0], [0.62650001, 3.0, 4.0, 2.0], [-0.240500003, 5.0, 6.0, 0.0], [0.523000002, 7.0, 8.0, 2.0], [-0.043084953, 0.0, 0.0, 0.0], [0.0404131711, 0.0, 0.0, 0.0], [-0.700500011, 9.0, 10.0, 1.0], [-0.0129089179, 0.0, 0.0, 0.0], [0.0350500271, 0.0, 0.0, 0.0], [0.554499984, 11.0, 12.0, 2.0], [-0.597499967, 13.0, 14.0, 1.0], [0.456499994, 15.0, 16.0, 2.0], [-0.023379596, 0.0, 0.0, 0.0], [-0.166500002, 17.0, 18.0, 0.0], [0.723500013, 19.0, 20.0, 2.0], [-0.00710640242, 0.0, 0.0, 0.0], [0.0576710254, 0.0, 0.0, 0.0], [-0.06132048, 0.0, 0.0, 0.0], [-0.00348746544, 0.0, 0.0, 0.0], [-0.0116930567, 0.0, 0.0, 0.0], [0.0399412289, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 15, 16, 12, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_823(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.878499985, 1.0, 2.0, 4.0], [-0.922500014, 3.0, 4.0, 4.0], [0.0261258744, 0.0, 0.0, 0.0], [-0.96449995, 5.0, 6.0, 3.0], [-0.988499999, 7.0, 8.0, 3.0], [-0.948500037, 9.0, 10.0, 4.0], [-0.0318061896, 0.0, 0.0, 0.0], [-0.0477343611, 0.0, 0.0, 0.0], [0.00735623436, 0.0, 0.0, 0.0], [-0.74150002, 11.0, 12.0, 1.0], [-0.76699996, 13.0, 14.0, 1.0], [0.0126909046, 0.0, 0.0, 0.0], [-0.0220194329, 0.0, 0.0, 0.0], [0.00513859978, 0.0, 0.0, 0.0], [0.0569182597, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_824(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.761500001, 1.0, 2.0, 1.0], [-0.0261466298, 0.0, 0.0, 0.0], [0.673500001, 3.0, 4.0, 2.0], [-0.99150002, 5.0, 6.0, 3.0], [-0.174499989, 7.0, 8.0, 0.0], [-0.223500013, 9.0, 10.0, 0.0], [-0.4745, 11.0, 12.0, 1.0], [0.722499967, 13.0, 14.0, 2.0], [0.0348051414, 0.0, 0.0, 0.0], [0.0270977728, 0.0, 0.0, 0.0], [0.566499949, 15.0, 16.0, 2.0], [0.577499986, 17.0, 18.0, 2.0], [-0.0118335169, 0.0, 0.0, 0.0], [-0.0712804124, 0.0, 0.0, 0.0], [0.0030964294, 0.0, 0.0, 0.0], [-0.0449882001, 0.0, 0.0, 0.0], [-0.00245493394, 0.0, 0.0, 0.0], [0.0634369031, 0.0, 0.0, 0.0], [-0.00569971744, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 15, 16, 17, 18, 12, 13, 14, 8])
    branch_indices = np.array([0, 2, 3, 5, 10, 6, 11, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_825(xs):
    #Predicts Class 3
    function_dict = np.array([[0.534000039, 1.0, 2.0, 0.0], [0.46450001, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.446500003, 7.0, 8.0, 0.0], [0.478500009, 9.0, 10.0, 0.0], [0.539999962, 11.0, 12.0, 0.0], [-0.0974140465, 0.0, 0.0, 0.0], [0.436500013, 13.0, 14.0, 0.0], [0.102365635, 0.0, 0.0, 0.0], [-0.108464658, 0.0, 0.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.121190116, 0.0, 0.0, 0.0], [0.546000004, 17.0, 18.0, 0.0], [0.433499992, 19.0, 20.0, 0.0], [-0.0585826524, 0.0, 0.0, 0.0], [0.513000011, 21.0, 22.0, 0.0], [0.110251173, 0.0, 0.0, 0.0], [-0.0230022594, 0.0, 0.0, 0.0], [0.588, 23.0, 24.0, 0.0], [-0.000589658914, 0.0, 0.0, 0.0], [0.0411766991, 0.0, 0.0, 0.0], [0.0568384305, 0.0, 0.0, 0.0], [-0.0877370685, 0.0, 0.0, 0.0], [0.0516117513, 0.0, 0.0, 0.0], [-0.0143768471, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 21, 22, 16, 11, 17, 23, 24, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 15, 2, 5, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_826(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0825999975, 3.0, 4.0, 0.0], [0.152999997, 5.0, 6.0, 0.0], [0.0760499984, 7.0, 8.0, 0.0], [0.0854000002, 9.0, 10.0, 0.0], [0.0945499986, 11.0, 12.0, 0.0], [0.192499995, 13.0, 14.0, 0.0], [0.0447499976, 15.0, 16.0, 0.0], [-0.125307903, 0.0, 0.0, 0.0], [0.0997684747, 0.0, 0.0, 0.0], [0.0873000026, 17.0, 18.0, 0.0], [0.0917500034, 19.0, 20.0, 0.0], [-0.089643091, 0.0, 0.0, 0.0], [0.115846261, 0.0, 0.0, 0.0], [0.195499986, 21.0, 22.0, 0.0], [0.0368999988, 23.0, 24.0, 0.0], [0.0506500006, 25.0, 26.0, 0.0], [-0.0568461679, 0.0, 0.0, 0.0], [0.0637583807, 0.0, 0.0, 0.0], [-0.0357923284, 0.0, 0.0, 0.0], [0.00576873682, 0.0, 0.0, 0.0], [-0.0722219869, 0.0, 0.0, 0.0], [0.196500003, 27.0, 28.0, 0.0], [-0.000314287463, 0.0, 0.0, 0.0], [-0.123480327, 0.0, 0.0, 0.0], [0.129823536, 0.0, 0.0, 0.0], [0.00677979598, 0.0, 0.0, 0.0], [0.0457461812, 0.0, 0.0, 0.0], [-0.025765175, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 9, 17, 18, 19, 20, 12, 13, 21, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 2, 5, 11, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_827(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.382499993, 1.0, 2.0, 0.0], [-0.399500012, 3.0, 4.0, 0.0], [-0.161500007, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [0.102004454, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.153499991, 11.0, 12.0, 0.0], [-0.468999982, 13.0, 14.0, 0.0], [-0.0564601645, 0.0, 0.0, 0.0], [-0.168500006, 15.0, 16.0, 0.0], [-0.00292058405, 0.0, 0.0, 0.0], [-0.155499995, 17.0, 18.0, 0.0], [-0.032850001, 19.0, 20.0, 0.0], [-0.000938334444, 0.0, 0.0, 0.0], [0.0418365747, 0.0, 0.0, 0.0], [-0.169499993, 21.0, 22.0, 0.0], [-0.0801015049, 0.0, 0.0, 0.0], [0.00105046376, 0.0, 0.0, 0.0], [0.0664566979, 0.0, 0.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [-0.923500001, 25.0, 26.0, 2.0], [-0.0782158524, 0.0, 0.0, 0.0], [0.0510215089, 0.0, 0.0, 0.0], [-0.0945740938, 0.0, 0.0, 0.0], [0.0222133547, 0.0, 0.0, 0.0], [0.00634012744, 0.0, 0.0, 0.0], [-0.0390273035, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 21, 22, 16, 10, 17, 18, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 9, 15, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_828(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0267274771, 0.0, 0.0, 0.0], [-0.825500011, 3.0, 4.0, 1.0], [0.0352734625, 0.0, 0.0, 0.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.032451082, 0.0, 0.0, 0.0], [0.484499991, 7.0, 8.0, 2.0], [0.442499995, 9.0, 10.0, 2.0], [-0.806499958, 11.0, 12.0, 4.0], [0.0090862615, 0.0, 0.0, 0.0], [-0.0379330628, 0.0, 0.0, 0.0], [0.0260073449, 0.0, 0.0, 0.0], [-0.0160814542, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 9, 10, 11, 12])
    branch_indices = np.array([0, 2, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_829(xs):
    #Predicts Class 1
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [0.455500007, 3.0, 4.0, 2.0], [0.602499962, 5.0, 6.0, 2.0], [-0.980499983, 7.0, 8.0, 3.0], [-0.0372965783, 0.0, 0.0, 0.0], [-0.291500002, 9.0, 10.0, 0.0], [0.642500043, 11.0, 12.0, 2.0], [-0.2095, 13.0, 14.0, 0.0], [0.0269344486, 0.0, 0.0, 0.0], [0.0541683361, 0.0, 0.0, 0.0], [-0.957499981, 15.0, 16.0, 4.0], [-0.0433798172, 0.0, 0.0, 0.0], [-0.270500004, 17.0, 18.0, 0.0], [-0.791499972, 19.0, 20.0, 1.0], [0.0187756922, 0.0, 0.0, 0.0], [0.0436757021, 0.0, 0.0, 0.0], [-0.92750001, 21.0, 22.0, 4.0], [0.0310449433, 0.0, 0.0, 0.0], [-0.0303245354, 0.0, 0.0, 0.0], [0.00384553405, 0.0, 0.0, 0.0], [-0.0539536327, 0.0, 0.0, 0.0], [-0.0775779337, 0.0, 0.0, 0.0], [0.0232227929, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 15, 21, 22, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 10, 16, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_830(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [0.777500033, 3.0, 4.0, 2.0], [-0.281499982, 5.0, 6.0, 0.0], [0.69749999, 7.0, 8.0, 2.0], [-0.0406506658, 0.0, 0.0, 0.0], [-0.00580621371, 0.0, 0.0, 0.0], [0.0363074727, 0.0, 0.0, 0.0], [-0.186500013, 9.0, 10.0, 0.0], [0.0373267494, 0.0, 0.0, 0.0], [-0.756500006, 11.0, 12.0, 1.0], [-0.151499987, 13.0, 14.0, 0.0], [0.0244024545, 0.0, 0.0, 0.0], [-0.040697705, 0.0, 0.0, 0.0], [0.0501071997, 0.0, 0.0, 0.0], [-0.0136347329, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_831(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.795000017, 3.0, 4.0, 2.0], [-0.706500053, 5.0, 6.0, 2.0], [0.521499991, 7.0, 8.0, 0.0], [0.0604762509, 0.0, 0.0, 0.0], [-0.0436500013, 9.0, 10.0, 0.0], [0.0087799998, 11.0, 12.0, 0.0], [0.466499984, 13.0, 14.0, 0.0], [0.537500024, 15.0, 16.0, 0.0], [-0.0136652924, 0.0, 0.0, 0.0], [-0.0714868158, 0.0, 0.0, 0.0], [-0.1215, 17.0, 18.0, 0.0], [-0.620499969, 19.0, 20.0, 2.0], [0.463499993, 21.0, 22.0, 0.0], [0.503000021, 23.0, 24.0, 0.0], [0.5255, 25.0, 26.0, 0.0], [0.543500006, 27.0, 28.0, 0.0], [-0.99849999, 29.0, 30.0, 1.0], [-0.637500048, 31.0, 32.0, 2.0], [0.150512576, 0.0, 0.0, 0.0], [-0.0538755283, 0.0, 0.0, 0.0], [-8.10562415e-05, 0.0, 0.0, 0.0], [0.0671452656, 0.0, 0.0, 0.0], [-0.0978637338, 0.0, 0.0, 0.0], [-0.00250047632, 0.0, 0.0, 0.0], [0.0188954901, 0.0, 0.0, 0.0], [0.0773611441, 0.0, 0.0, 0.0], [-0.0576768294, 0.0, 0.0, 0.0], [0.0164891239, 0.0, 0.0, 0.0], [0.0459000766, 0.0, 0.0, 0.0], [-0.00161096838, 0.0, 0.0, 0.0], [-0.193407118, 0.0, 0.0, 0.0], [0.0467779599, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 27, 28, 4, 9, 10, 29, 30, 31, 32, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 6, 11, 17, 18, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_832(xs):
    #Predicts Class 4
    function_dict = np.array([[0.028549999, 1.0, 2.0, 0.0], [0.025150001, 3.0, 4.0, 0.0], [0.0368999988, 5.0, 6.0, 0.0], [0.0234000012, 7.0, 8.0, 0.0], [-0.12692669, 0.0, 0.0, 0.0], [0.122478463, 0.0, 0.0, 0.0], [0.0447499976, 9.0, 10.0, 0.0], [0.0131000001, 11.0, 12.0, 0.0], [0.144917384, 0.0, 0.0, 0.0], [-0.0932523012, 0.0, 0.0, 0.0], [0.0506500006, 13.0, 14.0, 0.0], [0.00974999927, 15.0, 16.0, 0.0], [-0.110118821, 0.0, 0.0, 0.0], [0.100058153, 0.0, 0.0, 0.0], [0.0694999993, 17.0, 18.0, 0.0], [-0.00290747592, 0.0, 0.0, 0.0], [0.0926785171, 0.0, 0.0, 0.0], [-0.0931100845, 0.0, 0.0, 0.0], [0.00495430827, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_833(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.164499998, 1.0, 2.0, 0.0], [-0.1655, 3.0, 4.0, 0.0], [-0.155499995, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [0.0805343613, 0.0, 0.0, 0.0], [-0.104759961, 0.0, 0.0, 0.0], [-0.149500012, 9.0, 10.0, 0.0], [-0.380499989, 11.0, 12.0, 0.0], [-0.194499999, 13.0, 14.0, 0.0], [-0.1505, 15.0, 16.0, 0.0], [-0.032850001, 17.0, 18.0, 0.0], [-0.421000004, 19.0, 20.0, 0.0], [-0.0636846647, 0.0, 0.0, 0.0], [-0.00478948699, 0.0, 0.0, 0.0], [0.0866995975, 0.0, 0.0, 0.0], [-0.154500008, 21.0, 22.0, 0.0], [0.0869933888, 0.0, 0.0, 0.0], [-0.0746500045, 23.0, 24.0, 0.0], [-0.0123999994, 25.0, 26.0, 0.0], [-0.0302854497, 0.0, 0.0, 0.0], [0.0639035404, 0.0, 0.0, 0.0], [0.0579120442, 0.0, 0.0, 0.0], [-0.0237573255, 0.0, 0.0, 0.0], [-0.0188013427, 0.0, 0.0, 0.0], [-0.113864556, 0.0, 0.0, 0.0], [0.0472471938, 0.0, 0.0, 0.0], [-0.000569275056, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 21, 22, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 15, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_834(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.730999947, 1.0, 2.0, 4.0], [-0.560500026, 3.0, 4.0, 1.0], [0.0260395352, 0.0, 0.0, 0.0], [-0.0604500026, 5.0, 6.0, 0.0], [-0.030028427, 0.0, 0.0, 0.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.0416908897, 0.0, 0.0, 0.0], [-0.234499991, 9.0, 10.0, 0.0], [-0.805000007, 11.0, 12.0, 1.0], [0.00650308141, 0.0, 0.0, 0.0], [-0.0408104174, 0.0, 0.0, 0.0], [-0.0121730668, 0.0, 0.0, 0.0], [0.0399220325, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_835(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.42750001, 1.0, 2.0, 1.0], [-0.556499958, 3.0, 4.0, 1.0], [-0.0230392199, 0.0, 0.0, 0.0], [-0.887500048, 5.0, 6.0, 4.0], [0.0291326009, 0.0, 0.0, 0.0], [-0.219500005, 7.0, 8.0, 0.0], [0.0301938746, 0.0, 0.0, 0.0], [0.603500009, 9.0, 10.0, 2.0], [-0.178499997, 11.0, 12.0, 0.0], [0.0207734909, 0.0, 0.0, 0.0], [-0.0410710983, 0.0, 0.0, 0.0], [-0.0499104075, 0.0, 0.0, 0.0], [0.0101437932, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_836(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.761500001, 1.0, 2.0, 1.0], [-0.025538113, 0.0, 0.0, 0.0], [0.673500001, 3.0, 4.0, 2.0], [-0.426999986, 5.0, 6.0, 1.0], [-0.174499989, 7.0, 8.0, 0.0], [-0.200500011, 9.0, 10.0, 0.0], [0.0432209, 0.0, 0.0, 0.0], [0.722499967, 11.0, 12.0, 2.0], [0.0312026683, 0.0, 0.0, 0.0], [-0.240500003, 13.0, 14.0, 0.0], [-0.1505, 15.0, 16.0, 0.0], [-0.062312711, 0.0, 0.0, 0.0], [0.00572719425, 0.0, 0.0, 0.0], [0.0146947661, 0.0, 0.0, 0.0], [-0.0415315889, 0.0, 0.0, 0.0], [0.0550493523, 0.0, 0.0, 0.0], [-0.0140603147, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 11, 12, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_837(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.747500002, 3.0, 4.0, 2.0], [-0.0388827585, 0.0, 0.0, 0.0], [-0.190499991, 5.0, 6.0, 0.0], [-0.529999971, 7.0, 8.0, 2.0], [-0.191500008, 9.0, 10.0, 0.0], [-0.140500009, 11.0, 12.0, 0.0], [0.214499995, 13.0, 14.0, 0.0], [0.0372711122, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [0.122181945, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.137499988, 19.0, 20.0, 0.0], [-0.627499998, 21.0, 22.0, 2.0], [0.0167165753, 0.0, 0.0, 0.0], [-0.0131939109, 0.0, 0.0, 0.0], [0.06945391, 0.0, 0.0, 0.0], [-0.084945403, 0.0, 0.0, 0.0], [0.0104823951, 0.0, 0.0, 0.0], [0.0557522997, 0.0, 0.0, 0.0], [0.000383106672, 0.0, 0.0, 0.0], [-0.0769714639, 0.0, 0.0, 0.0], [0.0118196346, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 17, 18, 19, 20, 21, 22, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 11, 12, 4, 7, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_838(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0867500007, 5.0, 6.0, 0.0], [0.0696500018, 7.0, 8.0, 0.0], [0.113763742, 0.0, 0.0, 0.0], [-0.114882246, 0.0, 0.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [0.0477499999, 11.0, 12.0, 0.0], [-0.0754368082, 0.0, 0.0, 0.0], [0.0958753154, 0.0, 0.0, 0.0], [0.0892499983, 13.0, 14.0, 0.0], [0.0417999998, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [-0.110490412, 0.0, 0.0, 0.0], [0.0917500034, 19.0, 20.0, 0.0], [6.92106187e-05, 0.0, 0.0, 0.0], [-0.101788655, 0.0, 0.0, 0.0], [0.114899054, 0.0, 0.0, 0.0], [0.0186892934, 0.0, 0.0, 0.0], [0.0890034959, 0.0, 0.0, 0.0], [-0.0123844473, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_839(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 2.0], [0.430999994, 5.0, 6.0, 0.0], [-0.421000004, 7.0, 8.0, 0.0], [-0.0552959666, 0.0, 0.0, 0.0], [0.344999999, 9.0, 10.0, 0.0], [0.527500033, 11.0, 12.0, 0.0], [-0.0540675372, 0.0, 0.0, 0.0], [-0.16049999, 13.0, 14.0, 0.0], [-0.995499969, 15.0, 16.0, 1.0], [-0.0728742257, 0.0, 0.0, 0.0], [0.0798587054, 0.0, 0.0, 0.0], [-0.0103009315, 0.0, 0.0, 0.0], [-0.1655, 17.0, 18.0, 0.0], [0.201499999, 19.0, 20.0, 0.0], [0.193000004, 21.0, 22.0, 0.0], [-0.0460922569, 0.0, 0.0, 0.0], [0.0105816703, 0.0, 0.0, 0.0], [0.0660614222, 0.0, 0.0, 0.0], [-0.0416601077, 0.0, 0.0, 0.0], [0.00446759723, 0.0, 0.0, 0.0], [-0.0074053565, 0.0, 0.0, 0.0], [0.10593842, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 17, 18, 19, 20, 4, 21, 22, 16, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 8, 13, 14, 2, 5, 9, 15, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_840(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [0.382499993, 3.0, 4.0, 2.0], [-0.934499979, 5.0, 6.0, 4.0], [-0.0109440442, 0.0, 0.0, 0.0], [-0.228500009, 7.0, 8.0, 0.0], [-0.195499986, 9.0, 10.0, 0.0], [0.510500014, 11.0, 12.0, 2.0], [-0.00336286868, 0.0, 0.0, 0.0], [0.0509728566, 0.0, 0.0, 0.0], [-0.996500015, 13.0, 14.0, 3.0], [0.0111771571, 0.0, 0.0, 0.0], [0.0451466553, 0.0, 0.0, 0.0], [0.713500023, 15.0, 16.0, 2.0], [-0.083186388, 0.0, 0.0, 0.0], [-0.983500004, 17.0, 18.0, 3.0], [-0.911499977, 19.0, 20.0, 4.0], [0.772500038, 21.0, 22.0, 2.0], [0.0305356085, 0.0, 0.0, 0.0], [-0.0438188687, 0.0, 0.0, 0.0], [0.0171561614, 0.0, 0.0, 0.0], [-0.0294108354, 0.0, 0.0, 0.0], [0.04976983, 0.0, 0.0, 0.0], [-0.0171307269, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 13, 17, 18, 10, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 14, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_841(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [-0.218499988, 3.0, 4.0, 0.0], [-0.791999996, 5.0, 6.0, 1.0], [0.554499984, 7.0, 8.0, 2.0], [0.553499997, 9.0, 10.0, 2.0], [0.00338883442, 0.0, 0.0, 0.0], [-0.0410194919, 0.0, 0.0, 0.0], [-0.968500018, 11.0, 12.0, 4.0], [0.635499954, 13.0, 14.0, 2.0], [-0.989500046, 15.0, 16.0, 3.0], [-0.0159784202, 0.0, 0.0, 0.0], [0.0182249267, 0.0, 0.0, 0.0], [0.456499994, 17.0, 18.0, 2.0], [-0.67900002, 19.0, 20.0, 1.0], [0.701499999, 21.0, 22.0, 2.0], [0.0625519082, 0.0, 0.0, 0.0], [0.0148642147, 0.0, 0.0, 0.0], [-0.00114893215, 0.0, 0.0, 0.0], [-0.0689537525, 0.0, 0.0, 0.0], [0.0102663757, 0.0, 0.0, 0.0], [0.0616811328, 0.0, 0.0, 0.0], [-0.0453131795, 0.0, 0.0, 0.0], [0.0137213459, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 17, 18, 19, 20, 21, 22, 15, 16, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 12, 8, 13, 14, 4, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_842(xs):
    #Predicts Class 2
    function_dict = np.array([[0.476500005, 1.0, 2.0, 2.0], [0.41049999, 3.0, 4.0, 2.0], [-0.995499969, 5.0, 6.0, 3.0], [0.0098543521, 0.0, 0.0, 0.0], [-0.035334032, 0.0, 0.0, 0.0], [-0.234499991, 7.0, 8.0, 0.0], [-0.186500013, 9.0, 10.0, 0.0], [-0.00422762614, 0.0, 0.0, 0.0], [-0.625499964, 11.0, 12.0, 1.0], [-0.558500051, 13.0, 14.0, 1.0], [-0.593500018, 15.0, 16.0, 1.0], [-0.00398482429, 0.0, 0.0, 0.0], [0.0669699088, 0.0, 0.0, 0.0], [-0.0610856116, 0.0, 0.0, 0.0], [-0.4745, 17.0, 18.0, 1.0], [0.0601018183, 0.0, 0.0, 0.0], [-0.0173493959, 0.0, 0.0, 0.0], [0.0510595068, 0.0, 0.0, 0.0], [-0.0280107893, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 11, 12, 13, 17, 18, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 8, 6, 9, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_843(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 1.0], [-0.0601500012, 3.0, 4.0, 0.0], [0.101500005, 5.0, 6.0, 0.0], [-0.0905500054, 7.0, 8.0, 0.0], [-0.0496499985, 9.0, 10.0, 0.0], [-0.552000046, 11.0, 12.0, 2.0], [0.0172992181, 0.0, 0.0, 0.0], [-0.0927000046, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.057099998, 17.0, 18.0, 0.0], [-0.0460999981, 19.0, 20.0, 0.0], [-0.0976665914, 0.0, 0.0, 0.0], [0.0316144451, 0.0, 0.0, 0.0], [-0.0965999961, 21.0, 22.0, 0.0], [-0.0909000039, 23.0, 24.0, 0.0], [-0.0728500038, 25.0, 26.0, 0.0], [-0.0742999986, 27.0, 28.0, 0.0], [0.026775863, 0.0, 0.0, 0.0], [0.156314626, 0.0, 0.0, 0.0], [-0.0477499999, 29.0, 30.0, 0.0], [-0.0392000005, 31.0, 32.0, 0.0], [0.00238132197, 0.0, 0.0, 0.0], [-0.202901542, 0.0, 0.0, 0.0], [0.149726495, 0.0, 0.0, 0.0], [-0.0129600912, 0.0, 0.0, 0.0], [-0.152148277, 0.0, 0.0, 0.0], [-0.051860299, 0.0, 0.0, 0.0], [0.107014351, 0.0, 0.0, 0.0], [-0.0315135717, 0.0, 0.0, 0.0], [-0.0290188789, 0.0, 0.0, 0.0], [-0.121941142, 0.0, 0.0, 0.0], [0.0844128802, 0.0, 0.0, 0.0], [0.000839935616, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 27, 28, 17, 18, 29, 30, 31, 32, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 9, 10, 19, 20, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_844(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.414000005, 3.0, 4.0, 0.0], [-0.41049999, 5.0, 6.0, 0.0], [-0.0628717095, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [0.0409700871, 0.0, 0.0, 0.0], [0.0741500035, 9.0, 10.0, 0.0], [0.0730836242, 0.0, 0.0, 0.0], [-0.282999992, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [0.0416150987, 0.0, 0.0, 0.0], [-0.284500003, 15.0, 16.0, 0.0], [-0.210500002, 17.0, 18.0, 0.0], [-0.0871435553, 0.0, 0.0, 0.0], [-0.249500006, 19.0, 20.0, 0.0], [0.00125288521, 0.0, 0.0, 0.0], [-0.0535104536, 0.0, 0.0, 0.0], [0.0752556026, 0.0, 0.0, 0.0], [0.00021115155, 0.0, 0.0, 0.0], [-0.0696886331, 0.0, 0.0, 0.0], [0.00785550196, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 15, 16, 17, 18, 5, 13, 19, 20, 10])
    branch_indices = np.array([0, 1, 4, 8, 11, 12, 2, 6, 9, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_845(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.0488112457, 0.0, 0.0, 0.0], [-0.99150002, 3.0, 4.0, 1.0], [-0.407499999, 5.0, 6.0, 0.0], [-0.0583972707, 0.0, 0.0, 0.0], [-0.039146807, 0.0, 0.0, 0.0], [-0.294, 7.0, 8.0, 0.0], [-0.38349998, 9.0, 10.0, 0.0], [-0.161500007, 11.0, 12.0, 0.0], [-0.00319627579, 0.0, 0.0, 0.0], [0.102789603, 0.0, 0.0, 0.0], [-0.0453355163, 0.0, 0.0, 0.0], [0.00407640962, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 9, 10, 11, 12, 4])
    branch_indices = np.array([0, 2, 3, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_846(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.833500028, 1.0, 2.0, 4.0], [-0.983500004, 3.0, 4.0, 3.0], [-0.203999996, 5.0, 6.0, 0.0], [0.565500021, 7.0, 8.0, 2.0], [0.556499958, 9.0, 10.0, 2.0], [0.041963052, 0.0, 0.0, 0.0], [-0.0156770162, 0.0, 0.0, 0.0], [0.480499983, 11.0, 12.0, 2.0], [-0.935500026, 13.0, 14.0, 4.0], [0.446500003, 15.0, 16.0, 2.0], [-0.0591227971, 0.0, 0.0, 0.0], [0.407499999, 17.0, 18.0, 2.0], [0.518999994, 19.0, 20.0, 2.0], [0.000419826712, 0.0, 0.0, 0.0], [0.0487470999, 0.0, 0.0, 0.0], [-0.0293710362, 0.0, 0.0, 0.0], [0.0392020978, 0.0, 0.0, 0.0], [-0.0110325553, 0.0, 0.0, 0.0], [0.0371802263, 0.0, 0.0, 0.0], [-0.0517397188, 0.0, 0.0, 0.0], [-0.00897876825, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 15, 16, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 4, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_847(xs):
    #Predicts Class 1
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [-0.940500021, 3.0, 4.0, 4.0], [0.539499998, 5.0, 6.0, 2.0], [-0.978500009, 7.0, 8.0, 3.0], [0.0150045669, 0.0, 0.0, 0.0], [-0.957499981, 9.0, 10.0, 4.0], [-0.884500027, 11.0, 12.0, 4.0], [0.436500013, 13.0, 14.0, 2.0], [0.0200840663, 0.0, 0.0, 0.0], [0.0580325276, 0.0, 0.0, 0.0], [-0.00224644039, 0.0, 0.0, 0.0], [-0.915500045, 15.0, 16.0, 4.0], [-0.0343767256, 0.0, 0.0, 0.0], [-0.995499969, 17.0, 18.0, 3.0], [-0.0722424239, 0.0, 0.0, 0.0], [0.578500032, 19.0, 20.0, 2.0], [0.0390973948, 0.0, 0.0, 0.0], [0.0264235269, 0.0, 0.0, 0.0], [-0.0372615159, 0.0, 0.0, 0.0], [-0.0342542455, 0.0, 0.0, 0.0], [0.0136740124, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 19, 20, 16, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_848(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.872500002, 1.0, 2.0, 4.0], [-0.983500004, 3.0, 4.0, 3.0], [-0.978999972, 5.0, 6.0, 3.0], [0.534500003, 7.0, 8.0, 2.0], [-0.946500003, 9.0, 10.0, 4.0], [0.0184532274, 0.0, 0.0, 0.0], [-0.0395797491, 0.0, 0.0, 0.0], [-0.718500018, 11.0, 12.0, 1.0], [-0.607499957, 13.0, 14.0, 1.0], [-0.0072553046, 0.0, 0.0, 0.0], [0.0587810725, 0.0, 0.0, 0.0], [-0.0130780898, 0.0, 0.0, 0.0], [0.0498507135, 0.0, 0.0, 0.0], [-0.055042807, 0.0, 0.0, 0.0], [-0.995499969, 15.0, 16.0, 3.0], [0.0295740422, 0.0, 0.0, 0.0], [-0.0423073396, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 15, 16, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 14, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_849(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 4.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.0566999987, 5.0, 6.0, 0.0], [0.00151000009, 7.0, 8.0, 0.0], [-0.885499954, 9.0, 10.0, 2.0], [-0.0698499978, 11.0, 12.0, 0.0], [-0.0293500014, 13.0, 14.0, 0.0], [-0.000944999978, 15.0, 16.0, 0.0], [0.00325499987, 17.0, 18.0, 0.0], [0.0914311334, 0.0, 0.0, 0.0], [0.0234500002, 19.0, 20.0, 0.0], [-0.0748500004, 21.0, 22.0, 0.0], [0.170728207, 0.0, 0.0, 0.0], [-0.208970129, 0.0, 0.0, 0.0], [-0.00337000005, 23.0, 24.0, 0.0], [-0.00200500013, 25.0, 26.0, 0.0], [-0.15698494, 0.0, 0.0, 0.0], [0.175195217, 0.0, 0.0, 0.0], [0.00588999968, 27.0, 28.0, 0.0], [0.0841659606, 0.0, 0.0, 0.0], [-0.123921379, 0.0, 0.0, 0.0], [-0.132499993, 29.0, 30.0, 0.0], [-0.14580287, 0.0, 0.0, 0.0], [0.156626359, 0.0, 0.0, 0.0], [0.0107000005, 31.0, 32.0, 0.0], [-0.00379383005, 0.0, 0.0, 0.0], [0.135734111, 0.0, 0.0, 0.0], [-0.089635998, 0.0, 0.0, 0.0], [0.00376861286, 0.0, 0.0, 0.0], [-0.0396809913, 0.0, 0.0, 0.0], [0.0680458099, 0.0, 0.0, 0.0], [-0.152280271, 0.0, 0.0, 0.0], [0.0083665438, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 27, 28, 9, 19, 20, 29, 30, 22, 12, 13, 23, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 18, 4, 10, 2, 5, 11, 21, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_850(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.0411222465, 0.0, 0.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [0.0745740309, 0.0, 0.0, 0.0], [-0.393000007, 5.0, 6.0, 0.0], [-0.0837541521, 0.0, 0.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [0.0639301613, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 1.0], [0.000508728437, 0.0, 0.0, 0.0], [-0.0451996699, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 7, 9, 10])
    branch_indices = np.array([0, 2, 4, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_851(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.393000007, 1.0, 2.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [-0.296499997, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [0.0927353129, 0.0, 0.0, 0.0], [-0.0681565031, 0.0, 0.0, 0.0], [-0.997500002, 9.0, 10.0, 1.0], [-0.468999982, 11.0, 12.0, 0.0], [-0.0653966069, 0.0, 0.0, 0.0], [-0.822000027, 13.0, 14.0, 2.0], [-0.795000017, 15.0, 16.0, 2.0], [0.00118762604, 0.0, 0.0, 0.0], [0.0506474078, 0.0, 0.0, 0.0], [-0.161500007, 17.0, 18.0, 0.0], [-0.076575242, 0.0, 0.0, 0.0], [-0.0280065034, 0.0, 0.0, 0.0], [0.109857671, 0.0, 0.0, 0.0], [-0.0281478614, 0.0, 0.0, 0.0], [0.00397985522, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 17, 18, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 9, 13, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_852(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [0.442499995, 3.0, 4.0, 2.0], [-0.140500009, 5.0, 6.0, 0.0], [-0.229499996, 7.0, 8.0, 0.0], [-0.216499999, 9.0, 10.0, 0.0], [0.0409949198, 0.0, 0.0, 0.0], [-0.988499999, 11.0, 12.0, 3.0], [-0.00721045118, 0.0, 0.0, 0.0], [0.046413064, 0.0, 0.0, 0.0], [-0.734500051, 13.0, 14.0, 1.0], [-0.897500038, 15.0, 16.0, 4.0], [-0.0960499942, 17.0, 18.0, 0.0], [0.0259511918, 0.0, 0.0, 0.0], [-0.784500003, 19.0, 20.0, 1.0], [0.631999969, 21.0, 22.0, 2.0], [-0.727999985, 23.0, 24.0, 1.0], [-0.0846851021, 0.0, 0.0, 0.0], [-0.0367029347, 0.0, 0.0, 0.0], [-0.00984799862, 0.0, 0.0, 0.0], [-0.00556667009, 0.0, 0.0, 0.0], [0.0558739491, 0.0, 0.0, 0.0], [-0.0570984744, 0.0, 0.0, 0.0], [0.0140175885, 0.0, 0.0, 0.0], [-0.0215781201, 0.0, 0.0, 0.0], [0.00768772559, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 19, 20, 21, 22, 23, 24, 16, 5, 17, 18, 12])
    branch_indices = np.array([0, 1, 3, 4, 9, 13, 14, 10, 15, 2, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_853(xs):
    #Predicts Class 1
    function_dict = np.array([[0.444499999, 1.0, 2.0, 2.0], [-0.953500032, 3.0, 4.0, 4.0], [0.4745, 5.0, 6.0, 2.0], [-0.973500013, 7.0, 8.0, 4.0], [0.017625697, 0.0, 0.0, 0.0], [0.0413805135, 0.0, 0.0, 0.0], [-0.191500008, 9.0, 10.0, 0.0], [-0.00309742917, 0.0, 0.0, 0.0], [-0.0529517271, 0.0, 0.0, 0.0], [-0.210500002, 11.0, 12.0, 0.0], [0.0262837838, 0.0, 0.0, 0.0], [0.657500029, 13.0, 14.0, 2.0], [-0.0515996367, 0.0, 0.0, 0.0], [0.0163926389, 0.0, 0.0, 0.0], [-0.0232896712, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 13, 14, 12, 10])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_854(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.192499995, 1.0, 2.0, 0.0], [-0.266499996, 3.0, 4.0, 0.0], [-0.174499989, 5.0, 6.0, 0.0], [-0.899500012, 7.0, 8.0, 4.0], [-0.955500007, 9.0, 10.0, 3.0], [-0.0461166166, 0.0, 0.0, 0.0], [-0.661499977, 11.0, 12.0, 1.0], [-0.0313074663, 0.0, 0.0, 0.0], [0.0178413521, 0.0, 0.0, 0.0], [0.668500006, 13.0, 14.0, 2.0], [0.0594713017, 0.0, 0.0, 0.0], [-0.0209860504, 0.0, 0.0, 0.0], [-0.567999959, 15.0, 16.0, 1.0], [0.529500008, 17.0, 18.0, 2.0], [-0.0317259766, 0.0, 0.0, 0.0], [0.0389033221, 0.0, 0.0, 0.0], [-0.000779549009, 0.0, 0.0, 0.0], [-0.0224691257, 0.0, 0.0, 0.0], [0.0549913496, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 17, 18, 14, 10, 5, 11, 15, 16])
    branch_indices = np.array([0, 1, 3, 4, 9, 13, 2, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_855(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 2.0], [0.212500006, 3.0, 4.0, 0.0], [-0.208499998, 5.0, 6.0, 0.0], [0.201499999, 7.0, 8.0, 0.0], [0.253499985, 9.0, 10.0, 0.0], [0.0528386943, 0.0, 0.0, 0.0], [-0.00657499954, 11.0, 12.0, 0.0], [0.0894500017, 13.0, 14.0, 0.0], [-0.115390122, 0.0, 0.0, 0.0], [0.134646475, 0.0, 0.0, 0.0], [0.260500014, 15.0, 16.0, 0.0], [-0.0234865546, 0.0, 0.0, 0.0], [-0.0897241458, 0.0, 0.0, 0.0], [0.0850500017, 17.0, 18.0, 0.0], [0.1105, 19.0, 20.0, 0.0], [-0.0897601917, 0.0, 0.0, 0.0], [0.272000015, 21.0, 22.0, 0.0], [0.00104711263, 0.0, 0.0, 0.0], [-0.0498401262, 0.0, 0.0, 0.0], [0.0808650553, 0.0, 0.0, 0.0], [0.00150777935, 0.0, 0.0, 0.0], [0.104585528, 0.0, 0.0, 0.0], [0.00329656084, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 15, 21, 22, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 16, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_856(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.141499996, 1.0, 2.0, 0.0], [-0.142500013, 3.0, 4.0, 0.0], [-0.136500001, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.149911135, 0.0, 0.0, 0.0], [0.0480334274, 0.0, 0.0, 0.0], [-0.607499957, 9.0, 10.0, 2.0], [-0.16049999, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.851999998, 15.0, 16.0, 2.0], [0.059461534, 0.0, 0.0, 0.0], [-0.163500011, 17.0, 18.0, 0.0], [-0.1505, 19.0, 20.0, 0.0], [0.0916742682, 0.0, 0.0, 0.0], [-0.795000017, 21.0, 22.0, 2.0], [-0.999500036, 23.0, 24.0, 4.0], [0.0122999996, 25.0, 26.0, 0.0], [-0.00989876315, 0.0, 0.0, 0.0], [-0.149572223, 0.0, 0.0, 0.0], [0.0666309223, 0.0, 0.0, 0.0], [-0.0377264395, 0.0, 0.0, 0.0], [0.0397800319, 0.0, 0.0, 0.0], [-0.0381446928, 0.0, 0.0, 0.0], [-0.00300970743, 0.0, 0.0, 0.0], [0.0386955254, 0.0, 0.0, 0.0], [-0.0690702349, 0.0, 0.0, 0.0], [0.0325101726, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 21, 22, 4, 5, 23, 24, 25, 26, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6, 9, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_857(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.972000003, 3.0, 4.0, 2.0], [0.272000015, 5.0, 6.0, 0.0], [-0.398999989, 7.0, 8.0, 0.0], [-0.923500001, 9.0, 10.0, 2.0], [0.264499992, 11.0, 12.0, 0.0], [0.276499987, 13.0, 14.0, 0.0], [-0.426499993, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.08222045, 0.0, 0.0, 0.0], [0.0255044792, 0.0, 0.0, 0.0], [0.256500006, 19.0, 20.0, 0.0], [-0.143761769, 0.0, 0.0, 0.0], [0.134469658, 0.0, 0.0, 0.0], [0.363499999, 21.0, 22.0, 0.0], [0.00168032246, 0.0, 0.0, 0.0], [-0.0371482596, 0.0, 0.0, 0.0], [-0.1655, 23.0, 24.0, 0.0], [0.0140848793, 0.0, 0.0, 0.0], [0.212500006, 25.0, 26.0, 0.0], [0.260500014, 27.0, 28.0, 0.0], [-0.110108741, 0.0, 0.0, 0.0], [-0.972000003, 29.0, 30.0, 2.0], [0.0069201584, 0.0, 0.0, 0.0], [0.127363384, 0.0, 0.0, 0.0], [-0.00509796664, 0.0, 0.0, 0.0], [-0.08800596, 0.0, 0.0, 0.0], [0.0993584245, 0.0, 0.0, 0.0], [-0.0118672177, 0.0, 0.0, 0.0], [-0.00261162757, 0.0, 0.0, 0.0], [0.0680490881, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 23, 24, 18, 9, 10, 25, 26, 27, 28, 12, 13, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 4, 2, 5, 11, 19, 20, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_858(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.960500002, 1.0, 2.0, 3.0], [-0.166500002, 3.0, 4.0, 0.0], [-0.931499958, 5.0, 6.0, 3.0], [-0.696500003, 7.0, 8.0, 1.0], [-0.96449995, 9.0, 10.0, 4.0], [0.0379601493, 0.0, 0.0, 0.0], [-0.892500043, 11.0, 12.0, 3.0], [0.504500031, 13.0, 14.0, 2.0], [-0.24849999, 15.0, 16.0, 0.0], [-0.0255659763, 0.0, 0.0, 0.0], [-0.109499998, 17.0, 18.0, 0.0], [-0.0297347698, 0.0, 0.0, 0.0], [0.0206460785, 0.0, 0.0, 0.0], [-0.965499997, 19.0, 20.0, 4.0], [-0.291999996, 21.0, 22.0, 0.0], [0.0100483745, 0.0, 0.0, 0.0], [-0.0717238933, 0.0, 0.0, 0.0], [0.0635472164, 0.0, 0.0, 0.0], [-0.00579479756, 0.0, 0.0, 0.0], [0.01361416, 0.0, 0.0, 0.0], [-0.0456302352, 0.0, 0.0, 0.0], [-0.0169419553, 0.0, 0.0, 0.0], [0.0631068125, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 16, 9, 17, 18, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 10, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_859(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.218499988, 1.0, 2.0, 0.0], [0.554499984, 3.0, 4.0, 2.0], [-0.194499999, 5.0, 6.0, 0.0], [-0.968500018, 7.0, 8.0, 4.0], [0.635499954, 9.0, 10.0, 2.0], [0.476500005, 11.0, 12.0, 2.0], [-0.953500032, 13.0, 14.0, 4.0], [0.0126685314, 0.0, 0.0, 0.0], [-0.741999984, 15.0, 16.0, 1.0], [-0.67900002, 17.0, 18.0, 1.0], [0.701499999, 19.0, 20.0, 2.0], [0.0659945756, 0.0, 0.0, 0.0], [-0.00160826696, 0.0, 0.0, 0.0], [0.417999983, 21.0, 22.0, 2.0], [0.0164543651, 0.0, 0.0, 0.0], [0.000675653864, 0.0, 0.0, 0.0], [-0.0641299412, 0.0, 0.0, 0.0], [0.000718059659, 0.0, 0.0, 0.0], [0.0440466702, 0.0, 0.0, 0.0], [-0.0357931741, 0.0, 0.0, 0.0], [0.0203337781, 0.0, 0.0, 0.0], [-0.0488534421, 0.0, 0.0, 0.0], [0.00661038514, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 17, 18, 19, 20, 11, 12, 21, 22, 14])
    branch_indices = np.array([0, 1, 3, 8, 4, 9, 10, 2, 5, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_860(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [0.557500005, 3.0, 4.0, 2.0], [-0.963500023, 5.0, 6.0, 3.0], [0.476500005, 7.0, 8.0, 2.0], [-0.566499949, 9.0, 10.0, 1.0], [-0.283999979, 11.0, 12.0, 0.0], [-0.0152194276, 0.0, 0.0, 0.0], [-0.972499967, 13.0, 14.0, 4.0], [0.0375935733, 0.0, 0.0, 0.0], [-0.634500027, 15.0, 16.0, 1.0], [-0.0451236553, 0.0, 0.0, 0.0], [0.00622517243, 0.0, 0.0, 0.0], [0.0516476817, 0.0, 0.0, 0.0], [0.0175141934, 0.0, 0.0, 0.0], [-0.0323103368, 0.0, 0.0, 0.0], [-0.0394395478, 0.0, 0.0, 0.0], [0.0403479189, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 15, 16, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_861(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.137499988, 5.0, 6.0, 0.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.146499991, 9.0, 10.0, 0.0], [0.0500220656, 0.0, 0.0, 0.0], [-0.135500014, 11.0, 12.0, 0.0], [-0.747500002, 13.0, 14.0, 2.0], [0.0900224224, 0.0, 0.0, 0.0], [-0.120744132, 0.0, 0.0, 0.0], [-0.144499987, 15.0, 16.0, 0.0], [-0.0565830357, 0.0, 0.0, 0.0], [-0.1105, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.0591583997, 0.0, 0.0, 0.0], [0.0804072917, 0.0, 0.0, 0.0], [-0.067051284, 0.0, 0.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [-0.104499996, 23.0, 24.0, 0.0], [-0.0128381141, 0.0, 0.0, 0.0], [0.0432162136, 0.0, 0.0, 0.0], [-0.022942204, 0.0, 0.0, 0.0], [0.176294476, 0.0, 0.0, 0.0], [-0.0781998336, 0.0, 0.0, 0.0], [0.00117433909, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 15, 16, 5, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 2, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_862(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.162499994, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.159500003, 5.0, 6.0, 0.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.1655, 9.0, 10.0, 0.0], [-0.163468525, 0.0, 0.0, 0.0], [-0.1505, 11.0, 12.0, 0.0], [-0.273499995, 13.0, 14.0, 0.0], [-0.0889351889, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [0.0858533531, 0.0, 0.0, 0.0], [-0.154500008, 17.0, 18.0, 0.0], [-0.141499996, 19.0, 20.0, 0.0], [-0.795000017, 21.0, 22.0, 2.0], [-0.212500006, 23.0, 24.0, 0.0], [0.0616417006, 0.0, 0.0, 0.0], [-0.0147574805, 0.0, 0.0, 0.0], [0.0113596488, 0.0, 0.0, 0.0], [0.0475666337, 0.0, 0.0, 0.0], [-0.142500013, 25.0, 26.0, 0.0], [-0.130499989, 27.0, 28.0, 0.0], [-0.0274211317, 0.0, 0.0, 0.0], [0.0348933488, 0.0, 0.0, 0.0], [0.112647399, 0.0, 0.0, 0.0], [-0.00327080186, 0.0, 0.0, 0.0], [-0.0294794887, 0.0, 0.0, 0.0], [-0.109590992, 0.0, 0.0, 0.0], [0.0222318172, 0.0, 0.0, 0.0], [-0.00171418418, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 16, 10, 5, 17, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 2, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_863(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.538500011, 5.0, 6.0, 0.0], [0.5625, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.5255, 11.0, 12.0, 0.0], [0.0681376383, 0.0, 0.0, 0.0], [-0.0315500014, 13.0, 14.0, 0.0], [0.0734258741, 0.0, 0.0, 0.0], [-0.0836089998, 0.0, 0.0, 0.0], [0.0117339157, 0.0, 0.0, 0.0], [0.430999994, 15.0, 16.0, 0.0], [-0.0524899177, 0.0, 0.0, 0.0], [-0.162, 17.0, 18.0, 0.0], [0.263000011, 19.0, 20.0, 0.0], [0.344999999, 21.0, 22.0, 0.0], [0.0642283037, 0.0, 0.0, 0.0], [-0.021117866, 0.0, 0.0, 0.0], [0.0478808284, 0.0, 0.0, 0.0], [-0.0575026087, 0.0, 0.0, 0.0], [0.00298664789, 0.0, 0.0, 0.0], [0.0195920113, 0.0, 0.0, 0.0], [-0.0504832119, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 21, 22, 16, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 5, 11, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_864(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [0.455500007, 3.0, 4.0, 2.0], [-0.925500035, 5.0, 6.0, 4.0], [-0.970499992, 7.0, 8.0, 4.0], [0.0378385223, 0.0, 0.0, 0.0], [-0.739500046, 9.0, 10.0, 1.0], [0.612499952, 11.0, 12.0, 2.0], [-0.0272452049, 0.0, 0.0, 0.0], [0.0278610736, 0.0, 0.0, 0.0], [-0.766499996, 13.0, 14.0, 1.0], [-0.952499986, 15.0, 16.0, 4.0], [-0.196500003, 17.0, 18.0, 0.0], [-0.250499994, 19.0, 20.0, 0.0], [0.00221160846, 0.0, 0.0, 0.0], [-0.0703806356, 0.0, 0.0, 0.0], [-0.990499973, 21.0, 22.0, 3.0], [-0.0308379401, 0.0, 0.0, 0.0], [0.0524434373, 0.0, 0.0, 0.0], [0.00911041908, 0.0, 0.0, 0.0], [-0.0648801699, 0.0, 0.0, 0.0], [-0.20449999, 23.0, 24.0, 0.0], [0.0449998863, 0.0, 0.0, 0.0], [-0.0134567879, 0.0, 0.0, 0.0], [0.0466081873, 0.0, 0.0, 0.0], [-0.0155331567, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 14, 21, 22, 16, 17, 18, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 10, 15, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_865(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.794499993, 1.0, 2.0, 1.0], [-0.994500041, 3.0, 4.0, 3.0], [-0.926499963, 5.0, 6.0, 4.0], [-0.0503709987, 0.0, 0.0, 0.0], [-0.960500002, 7.0, 8.0, 4.0], [0.428499997, 9.0, 10.0, 2.0], [-0.96449995, 11.0, 12.0, 3.0], [0.0199996065, 0.0, 0.0, 0.0], [0.00113903568, 0.0, 0.0, 0.0], [-0.0178990997, 0.0, 0.0, 0.0], [0.504500031, 13.0, 14.0, 2.0], [-0.651499987, 15.0, 16.0, 1.0], [0.0229994711, 0.0, 0.0, 0.0], [0.0627583936, 0.0, 0.0, 0.0], [0.559499979, 17.0, 18.0, 2.0], [-0.00460106414, 0.0, 0.0, 0.0], [-0.0604052655, 0.0, 0.0, 0.0], [-0.0311418865, 0.0, 0.0, 0.0], [0.029720217, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 13, 17, 18, 15, 16, 12])
    branch_indices = np.array([0, 1, 4, 2, 5, 10, 14, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_866(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.725499988, 1.0, 2.0, 4.0], [-0.872500002, 3.0, 4.0, 4.0], [0.0284241866, 0.0, 0.0, 0.0], [-0.985499978, 5.0, 6.0, 3.0], [-0.978999972, 7.0, 8.0, 3.0], [-0.247500002, 9.0, 10.0, 0.0], [-0.926499963, 11.0, 12.0, 4.0], [0.0168980639, 0.0, 0.0, 0.0], [-0.0596985891, 0.0, 0.0, 0.0], [-0.0511520356, 0.0, 0.0, 0.0], [-0.217500001, 13.0, 14.0, 0.0], [-0.21450001, 15.0, 16.0, 0.0], [0.0561402999, 0.0, 0.0, 0.0], [0.0452513732, 0.0, 0.0, 0.0], [-0.0205080621, 0.0, 0.0, 0.0], [-0.0335669592, 0.0, 0.0, 0.0], [0.0234342981, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 15, 16, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 11, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_867(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.190499991, 3.0, 4.0, 0.0], [-0.137499988, 5.0, 6.0, 0.0], [-0.191500008, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.039885167, 0.0, 0.0, 0.0], [-0.127499998, 11.0, 12.0, 0.0], [-0.20449999, 13.0, 14.0, 0.0], [0.0923678204, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [0.0152640371, 0.0, 0.0, 0.0], [-0.132499993, 17.0, 18.0, 0.0], [-0.125499994, 19.0, 20.0, 0.0], [-0.274500012, 21.0, 22.0, 0.0], [-0.0556546487, 0.0, 0.0, 0.0], [-0.142500013, 23.0, 24.0, 0.0], [-0.00815381017, 0.0, 0.0, 0.0], [-0.135500014, 25.0, 26.0, 0.0], [-0.972000003, 27.0, 28.0, 2.0], [0.0731151327, 0.0, 0.0, 0.0], [-0.1175, 29.0, 30.0, 0.0], [-0.0261847209, 0.0, 0.0, 0.0], [0.0404012203, 0.0, 0.0, 0.0], [-0.112226412, 0.0, 0.0, 0.0], [-0.0161595084, 0.0, 0.0, 0.0], [-0.0313977674, 0.0, 0.0, 0.0], [0.0240230095, 0.0, 0.0, 0.0], [-0.223740742, 0.0, 0.0, 0.0], [0.0798055083, 0.0, 0.0, 0.0], [-0.0518248975, 0.0, 0.0, 0.0], [0.00106899114, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 23, 24, 16, 10, 5, 25, 26, 27, 28, 19, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 15, 2, 6, 11, 17, 18, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_868(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.552000046, 1.0, 2.0, 2.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.0861999989, 5.0, 6.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [-0.298500001, 9.0, 10.0, 0.0], [-0.0761026666, 0.0, 0.0, 0.0], [0.0264120493, 0.0, 0.0, 0.0], [-0.0973683894, 0.0, 0.0, 0.0], [-0.38349998, 11.0, 12.0, 0.0], [0.109752871, 0.0, 0.0, 0.0], [-0.822000027, 13.0, 14.0, 2.0], [0.0953931808, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.0791030899, 0.0, 0.0, 0.0], [0.0687887818, 0.0, 0.0, 0.0], [0.00105018273, 0.0, 0.0, 0.0], [-0.0399936475, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 15, 16, 9, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 12, 4, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_869(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.164499998, 1.0, 2.0, 0.0], [-0.38349998, 3.0, 4.0, 0.0], [-0.155499995, 5.0, 6.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.125817865, 0.0, 0.0, 0.0], [-0.153499991, 11.0, 12.0, 0.0], [-0.420000017, 13.0, 14.0, 0.0], [-0.0734636635, 0.0, 0.0, 0.0], [0.0588243604, 0.0, 0.0, 0.0], [-0.000752260908, 0.0, 0.0, 0.0], [0.0688648447, 0.0, 0.0, 0.0], [-0.080400005, 15.0, 16.0, 0.0], [-0.46450001, 17.0, 18.0, 0.0], [0.0867897868, 0.0, 0.0, 0.0], [-0.0548762269, 0.0, 0.0, 0.0], [-0.0746500045, 19.0, 20.0, 0.0], [0.0316267423, 0.0, 0.0, 0.0], [-0.0542098619, 0.0, 0.0, 0.0], [0.0717938319, 0.0, 0.0, 0.0], [-0.00101599586, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 10, 5, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_870(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.0796000063, 1.0, 2.0, 0.0], [-0.560500026, 3.0, 4.0, 1.0], [0.0260106586, 0.0, 0.0, 0.0], [-0.674499989, 5.0, 6.0, 1.0], [-0.767500043, 7.0, 8.0, 4.0], [0.573500037, 9.0, 10.0, 2.0], [-0.205500007, 11.0, 12.0, 0.0], [-0.0479580089, 0.0, 0.0, 0.0], [0.00177947246, 0.0, 0.0, 0.0], [0.480499983, 13.0, 14.0, 2.0], [-0.990499973, 15.0, 16.0, 3.0], [-0.00020848772, 0.0, 0.0, 0.0], [0.0464448072, 0.0, 0.0, 0.0], [0.00775657035, 0.0, 0.0, 0.0], [-0.0459757075, 0.0, 0.0, 0.0], [-0.0115442229, 0.0, 0.0, 0.0], [0.0452116877, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_871(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.729499996, 1.0, 2.0, 1.0], [-0.770500004, 3.0, 4.0, 1.0], [-0.651499987, 5.0, 6.0, 1.0], [-0.976500034, 7.0, 8.0, 4.0], [-0.74849999, 9.0, 10.0, 1.0], [-0.240500003, 11.0, 12.0, 0.0], [-0.963500023, 13.0, 14.0, 3.0], [-0.0280935857, 0.0, 0.0, 0.0], [-0.996500015, 15.0, 16.0, 3.0], [-0.0430624932, 0.0, 0.0, 0.0], [-0.00502201263, 0.0, 0.0, 0.0], [-0.00769443018, 0.0, 0.0, 0.0], [0.0467418097, 0.0, 0.0, 0.0], [-0.996500015, 17.0, 18.0, 3.0], [0.0256534293, 0.0, 0.0, 0.0], [0.0510178395, 0.0, 0.0, 0.0], [-0.2245, 19.0, 20.0, 0.0], [0.0151845682, 0.0, 0.0, 0.0], [-0.4745, 21.0, 22.0, 1.0], [0.0139666367, 0.0, 0.0, 0.0], [-0.0313368626, 0.0, 0.0, 0.0], [-0.0590432286, 0.0, 0.0, 0.0], [0.00951449759, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 19, 20, 9, 10, 11, 12, 17, 21, 22, 14])
    branch_indices = np.array([0, 1, 3, 8, 16, 4, 2, 5, 6, 13, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_872(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.581499994, 1.0, 2.0, 1.0], [-0.235500008, 3.0, 4.0, 0.0], [-0.963500023, 5.0, 6.0, 3.0], [-0.0452759638, 0.0, 0.0, 0.0], [-0.179500014, 7.0, 8.0, 0.0], [0.730499983, 9.0, 10.0, 2.0], [-0.0159939695, 0.0, 0.0, 0.0], [-0.735499978, 11.0, 12.0, 1.0], [0.523000002, 13.0, 14.0, 2.0], [-0.902500033, 15.0, 16.0, 4.0], [0.0563274212, 0.0, 0.0, 0.0], [0.0440400913, 0.0, 0.0, 0.0], [-0.0119855721, 0.0, 0.0, 0.0], [0.0128520057, 0.0, 0.0, 0.0], [-0.0501341112, 0.0, 0.0, 0.0], [0.0436770581, 0.0, 0.0, 0.0], [-0.0533822887, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 13, 14, 15, 16, 10, 6])
    branch_indices = np.array([0, 1, 4, 7, 8, 2, 5, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_873(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 4.0], [-0.1435, 3.0, 4.0, 0.0], [0.263000011, 5.0, 6.0, 0.0], [-0.190499991, 7.0, 8.0, 0.0], [-0.141499996, 9.0, 10.0, 0.0], [0.0107000005, 11.0, 12.0, 0.0], [0.42900002, 13.0, 14.0, 0.0], [-0.191500008, 15.0, 16.0, 0.0], [-0.0817449689, 0.0, 0.0, 0.0], [0.123125464, 0.0, 0.0, 0.0], [-0.136500001, 17.0, 18.0, 0.0], [0.00191000011, 19.0, 20.0, 0.0], [0.0689999983, 21.0, 22.0, 0.0], [-0.163947925, 0.0, 0.0, 0.0], [0.0508524254, 0.0, 0.0, 0.0], [-0.2095, 23.0, 24.0, 0.0], [0.0703377202, 0.0, 0.0, 0.0], [-0.0374008678, 0.0, 0.0, 0.0], [-0.134499997, 25.0, 26.0, 0.0], [-0.00499999989, 27.0, 28.0, 0.0], [-0.17758216, 0.0, 0.0, 0.0], [-0.822000027, 29.0, 30.0, 2.0], [0.0892000049, 31.0, 32.0, 0.0], [0.0103431661, 0.0, 0.0, 0.0], [-0.0675567016, 0.0, 0.0, 0.0], [0.073921375, 0.0, 0.0, 0.0], [0.000618486374, 0.0, 0.0, 0.0], [-0.0263615195, 0.0, 0.0, 0.0], [0.10537646, 0.0, 0.0, 0.0], [0.22373946, 0.0, 0.0, 0.0], [-0.016392421, 0.0, 0.0, 0.0], [-0.131249025, 0.0, 0.0, 0.0], [0.108158812, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 17, 25, 26, 27, 28, 20, 29, 30, 31, 32, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 10, 18, 2, 5, 11, 19, 12, 21, 22, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_874(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.273499995, 1.0, 2.0, 0.0], [-0.395500004, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [-0.378499985, 9.0, 10.0, 0.0], [0.105057724, 0.0, 0.0, 0.0], [-0.996500015, 11.0, 12.0, 1.0], [-0.0340263955, 0.0, 0.0, 0.0], [0.064762257, 0.0, 0.0, 0.0], [-0.0975784883, 0.0, 0.0, 0.0], [-0.284500003, 13.0, 14.0, 0.0], [-0.2095, 15.0, 16.0, 0.0], [-0.0722891241, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [-0.0375619382, 0.0, 0.0, 0.0], [-0.056938339, 0.0, 0.0, 0.0], [-0.162499994, 19.0, 20.0, 0.0], [0.0597979911, 0.0, 0.0, 0.0], [-0.0276080221, 0.0, 0.0, 0.0], [0.0274223294, 0.0, 0.0, 0.0], [-0.000357875833, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 17, 18, 14, 5, 15, 19, 20, 12])
    branch_indices = np.array([0, 1, 3, 4, 10, 13, 2, 6, 11, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_875(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.164499998, 1.0, 2.0, 0.0], [-0.399500012, 3.0, 4.0, 0.0], [-0.155499995, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [-0.382499993, 9.0, 10.0, 0.0], [-0.0969043002, 0.0, 0.0, 0.0], [-0.149500012, 11.0, 12.0, 0.0], [-0.468999982, 13.0, 14.0, 0.0], [-0.053417597, 0.0, 0.0, 0.0], [0.0946655571, 0.0, 0.0, 0.0], [-0.169499993, 15.0, 16.0, 0.0], [-0.1505, 17.0, 18.0, 0.0], [-0.032850001, 19.0, 20.0, 0.0], [-0.0127327871, 0.0, 0.0, 0.0], [0.0468349382, 0.0, 0.0, 0.0], [-0.042053394, 0.0, 0.0, 0.0], [-0.168500006, 21.0, 22.0, 0.0], [-0.154500008, 23.0, 24.0, 0.0], [0.0569437258, 0.0, 0.0, 0.0], [-0.0746500045, 25.0, 26.0, 0.0], [-0.0123999994, 27.0, 28.0, 0.0], [0.054266829, 0.0, 0.0, 0.0], [0.0123660555, 0.0, 0.0, 0.0], [0.0424897522, 0.0, 0.0, 0.0], [-0.00463821553, 0.0, 0.0, 0.0], [-0.0197371952, 0.0, 0.0, 0.0], [-0.0996968597, 0.0, 0.0, 0.0], [0.0570955873, 0.0, 0.0, 0.0], [0.00039823589, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 9, 15, 21, 22, 5, 23, 24, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 4, 10, 16, 2, 6, 11, 17, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_876(xs):
    #Predicts Class 0
    function_dict = np.array([[0.627499998, 1.0, 2.0, 2.0], [-0.658499956, 3.0, 4.0, 1.0], [-0.597499967, 5.0, 6.0, 1.0], [-0.972499967, 7.0, 8.0, 4.0], [-0.0275671128, 0.0, 0.0, 0.0], [-0.89349997, 9.0, 10.0, 4.0], [-0.516499996, 11.0, 12.0, 1.0], [-0.805500031, 13.0, 14.0, 1.0], [-0.804499984, 15.0, 16.0, 1.0], [-0.002375104, 0.0, 0.0, 0.0], [-0.0546681844, 0.0, 0.0, 0.0], [0.0380415581, 0.0, 0.0, 0.0], [-0.0153315011, 0.0, 0.0, 0.0], [0.0198523998, 0.0, 0.0, 0.0], [-0.0524126366, 0.0, 0.0, 0.0], [-0.0108704334, 0.0, 0.0, 0.0], [-0.949499965, 17.0, 18.0, 4.0], [0.0621939152, 0.0, 0.0, 0.0], [0.0107437782, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 17, 18, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 8, 16, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_877(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.136500001, 3.0, 4.0, 0.0], [-0.230500013, 5.0, 6.0, 0.0], [0.386500001, 7.0, 8.0, 2.0], [-0.0276334453, 0.0, 0.0, 0.0], [0.516000032, 9.0, 10.0, 2.0], [0.0119620152, 0.0, 0.0, 0.0], [0.050289087, 0.0, 0.0, 0.0], [0.444499999, 11.0, 12.0, 2.0], [-0.0542586371, 0.0, 0.0, 0.0], [-0.334500015, 13.0, 14.0, 0.0], [-0.0491038859, 0.0, 0.0, 0.0], [-0.207500011, 15.0, 16.0, 0.0], [-0.0319613591, 0.0, 0.0, 0.0], [-0.895500004, 17.0, 18.0, 4.0], [0.0273686554, 0.0, 0.0, 0.0], [-0.0134169022, 0.0, 0.0, 0.0], [0.0529198945, 0.0, 0.0, 0.0], [-0.0268190298, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 15, 16, 4, 9, 13, 17, 18, 6])
    branch_indices = np.array([0, 1, 3, 8, 12, 2, 5, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_878(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.930500031, 1.0, 2.0, 4.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.157499999, 5.0, 6.0, 0.0], [0.0162868928, 0.0, 0.0, 0.0], [-0.233500004, 7.0, 8.0, 0.0], [-0.455500007, 9.0, 10.0, 1.0], [0.0397028625, 0.0, 0.0, 0.0], [-0.0524332747, 0.0, 0.0, 0.0], [-0.217500001, 11.0, 12.0, 0.0], [-0.526499987, 13.0, 14.0, 1.0], [0.0436422601, 0.0, 0.0, 0.0], [0.0514633805, 0.0, 0.0, 0.0], [-0.985499978, 15.0, 16.0, 3.0], [0.00699130306, 0.0, 0.0, 0.0], [-0.0774235129, 0.0, 0.0, 0.0], [-0.0527568497, 0.0, 0.0, 0.0], [0.0191544332, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 15, 16, 13, 14, 10, 6])
    branch_indices = np.array([0, 1, 4, 8, 12, 2, 5, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_879(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 1.0], [-0.274500012, 3.0, 4.0, 0.0], [-0.99150002, 5.0, 6.0, 1.0], [-0.390500009, 7.0, 8.0, 0.0], [-0.249500006, 9.0, 10.0, 0.0], [-0.0883000046, 11.0, 12.0, 0.0], [0.0187428482, 0.0, 0.0, 0.0], [0.0408217199, 0.0, 0.0, 0.0], [-0.296499997, 13.0, 14.0, 0.0], [0.103763439, 0.0, 0.0, 0.0], [-0.205500007, 15.0, 16.0, 0.0], [0.0105623417, 0.0, 0.0, 0.0], [-0.0791925043, 0.0, 0.0, 0.0], [-0.0102896253, 0.0, 0.0, 0.0], [-0.047267884, 0.0, 0.0, 0.0], [-0.0417745113, 0.0, 0.0, 0.0], [-0.20449999, 17.0, 18.0, 0.0], [0.0801903903, 0.0, 0.0, 0.0], [-0.000192471416, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 9, 15, 17, 18, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 8, 4, 10, 16, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_880(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.163500011, 3.0, 4.0, 0.0], [-0.1505, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [-0.088972725, 0.0, 0.0, 0.0], [0.0626471266, 0.0, 0.0, 0.0], [-0.144499987, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.997500002, 13.0, 14.0, 1.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.140500009, 17.0, 18.0, 0.0], [-0.168500006, 19.0, 20.0, 0.0], [0.0574760884, 0.0, 0.0, 0.0], [-0.747500002, 21.0, 22.0, 2.0], [0.0517055877, 0.0, 0.0, 0.0], [-0.0110083707, 0.0, 0.0, 0.0], [-0.0919596851, 0.0, 0.0, 0.0], [0.0741086379, 0.0, 0.0, 0.0], [-0.137499988, 23.0, 24.0, 0.0], [-0.0125332996, 0.0, 0.0, 0.0], [0.0449594893, 0.0, 0.0, 0.0], [-0.0790722221, 0.0, 0.0, 0.0], [-0.00895593967, 0.0, 0.0, 0.0], [-0.0395287536, 0.0, 0.0, 0.0], [0.00210987194, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 21, 22, 14, 4, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_881(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 2.0], [0.208000004, 5.0, 6.0, 0.0], [-0.421000004, 7.0, 8.0, 0.0], [-0.0447952449, 0.0, 0.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [-0.0550593138, 0.0, 0.0, 0.0], [-0.393000007, 13.0, 14.0, 0.0], [-0.997500002, 15.0, 16.0, 1.0], [-0.795000017, 17.0, 18.0, 2.0], [-0.923500001, 19.0, 20.0, 2.0], [0.43599999, 21.0, 22.0, 0.0], [0.0763237104, 0.0, 0.0, 0.0], [0.263000011, 23.0, 24.0, 0.0], [0.0592894815, 0.0, 0.0, 0.0], [-0.00355753908, 0.0, 0.0, 0.0], [-0.0655147955, 0.0, 0.0, 0.0], [0.000499902351, 0.0, 0.0, 0.0], [0.0869719982, 0.0, 0.0, 0.0], [-0.00283883675, 0.0, 0.0, 0.0], [-0.0448416322, 0.0, 0.0, 0.0], [0.527500033, 25.0, 26.0, 0.0], [-0.0138424728, 0.0, 0.0, 0.0], [0.00528242346, 0.0, 0.0, 0.0], [0.0595778823, 0.0, 0.0, 0.0], [-0.0125346398, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 23, 24, 4, 15, 16, 17, 18, 19, 20, 21, 25, 26])
    branch_indices = np.array([0, 1, 3, 8, 14, 2, 5, 9, 10, 6, 11, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_882(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.988499999, 3.0, 4.0, 3.0], [-0.759500027, 5.0, 6.0, 1.0], [-0.0390691757, 0.0, 0.0, 0.0], [0.0118970368, 0.0, 0.0, 0.0], [-0.965499997, 7.0, 8.0, 4.0], [-0.71449995, 9.0, 10.0, 1.0], [0.0586496629, 0.0, 0.0, 0.0], [-0.944499969, 11.0, 12.0, 4.0], [-0.734500051, 13.0, 14.0, 1.0], [-0.60650003, 15.0, 16.0, 1.0], [-0.0263029616, 0.0, 0.0, 0.0], [0.0241983682, 0.0, 0.0, 0.0], [-0.00600063987, 0.0, 0.0, 0.0], [-0.0492583625, 0.0, 0.0, 0.0], [-0.946500003, 17.0, 18.0, 4.0], [-0.149500012, 19.0, 20.0, 0.0], [-0.0120343165, 0.0, 0.0, 0.0], [0.0401255079, 0.0, 0.0, 0.0], [-0.0260355342, 0.0, 0.0, 0.0], [0.0159781724, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 11, 12, 13, 14, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 2, 5, 8, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_883(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.810500026, 1.0, 2.0, 1.0], [-0.208499998, 3.0, 4.0, 0.0], [-0.78550005, 5.0, 6.0, 1.0], [-0.0406622849, 0.0, 0.0, 0.0], [0.0148962177, 0.0, 0.0, 0.0], [0.0294506159, 0.0, 0.0, 0.0], [-0.75849998, 7.0, 8.0, 1.0], [-0.0284990259, 0.0, 0.0, 0.0], [-0.967499971, 9.0, 10.0, 4.0], [0.0339882933, 0.0, 0.0, 0.0], [-0.953500032, 11.0, 12.0, 4.0], [-0.0306761246, 0.0, 0.0, 0.0], [0.00753840338, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 9, 11, 12])
    branch_indices = np.array([0, 1, 2, 6, 8, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_884(xs):
    #Predicts Class 2
    function_dict = np.array([[0.603500009, 1.0, 2.0, 2.0], [-0.111500002, 3.0, 4.0, 0.0], [0.651499987, 5.0, 6.0, 2.0], [-0.218499988, 7.0, 8.0, 0.0], [0.0211303681, 0.0, 0.0, 0.0], [0.0426860638, 0.0, 0.0, 0.0], [-0.240500003, 9.0, 10.0, 0.0], [-0.656499982, 11.0, 12.0, 1.0], [-0.67050004, 13.0, 14.0, 1.0], [-0.031979911, 0.0, 0.0, 0.0], [0.723500013, 15.0, 16.0, 2.0], [-0.0325472169, 0.0, 0.0, 0.0], [0.0456037894, 0.0, 0.0, 0.0], [0.0134465937, 0.0, 0.0, 0.0], [-0.0817755684, 0.0, 0.0, 0.0], [0.043014016, 0.0, 0.0, 0.0], [-0.0104004536, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 4, 5, 9, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 8, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_885(xs):
    #Predicts Class 3
    function_dict = np.array([[0.276499987, 1.0, 2.0, 0.0], [0.272000015, 3.0, 4.0, 0.0], [0.36500001, 5.0, 6.0, 0.0], [0.260500014, 7.0, 8.0, 0.0], [-0.100471579, 0.0, 0.0, 0.0], [0.11272908, 0.0, 0.0, 0.0], [0.415000021, 9.0, 10.0, 0.0], [0.201499999, 11.0, 12.0, 0.0], [0.0692438856, 0.0, 0.0, 0.0], [0.406499982, 13.0, 14.0, 0.0], [0.424000025, 15.0, 16.0, 0.0], [0.111500002, 17.0, 18.0, 0.0], [0.212500006, 19.0, 20.0, 0.0], [0.401499987, 21.0, 22.0, 0.0], [-0.096879065, 0.0, 0.0, 0.0], [0.419499993, 23.0, 24.0, 0.0], [0.431500018, 25.0, 26.0, 0.0], [-0.0015732355, 0.0, 0.0, 0.0], [0.0378875993, 0.0, 0.0, 0.0], [-0.0994638205, 0.0, 0.0, 0.0], [-0.000102658545, 0.0, 0.0, 0.0], [-0.0393185765, 0.0, 0.0, 0.0], [0.0419576094, 0.0, 0.0, 0.0], [0.0234668963, 0.0, 0.0, 0.0], [0.0747663528, 0.0, 0.0, 0.0], [-0.0936127156, 0.0, 0.0, 0.0], [0.0104670944, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 21, 22, 14, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 13, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_886(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00894000009, 1.0, 2.0, 0.0], [-0.0150499996, 3.0, 4.0, 0.0], [-0.00478500035, 5.0, 6.0, 0.0], [-0.0156999994, 7.0, 8.0, 0.0], [-0.135256961, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.00322999991, 11.0, 12.0, 0.0], [-0.0293500014, 13.0, 14.0, 0.0], [0.116458312, 0.0, 0.0, 0.0], [0.226484403, 0.0, 0.0, 0.0], [-0.0096609788, 0.0, 0.0, 0.0], [-0.113451183, 0.0, 0.0, 0.0], [-0.00200500013, 15.0, 16.0, 0.0], [-0.0310500003, 17.0, 18.0, 0.0], [-0.0250499994, 19.0, 20.0, 0.0], [0.163707629, 0.0, 0.0, 0.0], [0.000549999997, 21.0, 22.0, 0.0], [-0.00254201912, 0.0, 0.0, 0.0], [0.121332161, 0.0, 0.0, 0.0], [-0.150340468, 0.0, 0.0, 0.0], [-0.0212984476, 0.0, 0.0, 0.0], [-0.0853199363, 0.0, 0.0, 0.0], [0.00203551049, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 9, 10, 11, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_887(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.0318999998, 1.0, 2.0, 0.0], [-0.0748500004, 3.0, 4.0, 0.0], [0.201499999, 5.0, 6.0, 0.0], [-0.149500012, 7.0, 8.0, 0.0], [0.0760408267, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.161500007, 13.0, 14.0, 0.0], [-0.0789664313, 0.0, 0.0, 0.0], [-0.0718118697, 0.0, 0.0, 0.0], [-0.00648701796, 0.0, 0.0, 0.0], [0.210999995, 15.0, 16.0, 0.0], [0.412500024, 17.0, 18.0, 0.0], [-0.168500006, 19.0, 20.0, 0.0], [-0.153499991, 21.0, 22.0, 0.0], [0.202500001, 23.0, 24.0, 0.0], [0.253499985, 25.0, 26.0, 0.0], [0.0862135515, 0.0, 0.0, 0.0], [-0.0264649224, 0.0, 0.0, 0.0], [0.0140571753, 0.0, 0.0, 0.0], [-0.0408579409, 0.0, 0.0, 0.0], [0.0619719476, 0.0, 0.0, 0.0], [0.00690255081, 0.0, 0.0, 0.0], [0.0438137129, 0.0, 0.0, 0.0], [0.0146071836, 0.0, 0.0, 0.0], [-0.104492404, 0.0, 0.0, 0.0], [-0.00140855473, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 10, 23, 24, 25, 26, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 6, 11, 15, 16, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_888(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.847499967, 1.0, 2.0, 1.0], [0.0257110968, 0.0, 0.0, 0.0], [0.354499996, 3.0, 4.0, 2.0], [-0.0442162752, 0.0, 0.0, 0.0], [-0.797500014, 5.0, 6.0, 1.0], [0.0300006401, 0.0, 0.0, 0.0], [-0.102499999, 7.0, 8.0, 0.0], [-0.756500006, 9.0, 10.0, 1.0], [-0.0326144286, 0.0, 0.0, 0.0], [-0.0263269078, 0.0, 0.0, 0.0], [0.011001857, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 9, 10, 8])
    branch_indices = np.array([0, 2, 4, 6, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_889(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 3.0], [-0.930500031, 3.0, 4.0, 4.0], [-0.9745, 5.0, 6.0, 3.0], [-0.821500003, 7.0, 8.0, 1.0], [-0.0425927117, 0.0, 0.0, 0.0], [-0.230500013, 9.0, 10.0, 0.0], [-0.928499997, 11.0, 12.0, 4.0], [-0.0416189209, 0.0, 0.0, 0.0], [0.436500013, 13.0, 14.0, 2.0], [-0.291000009, 15.0, 16.0, 0.0], [0.048701562, 0.0, 0.0, 0.0], [0.4745, 17.0, 18.0, 2.0], [0.0136856968, 0.0, 0.0, 0.0], [0.0661836937, 0.0, 0.0, 0.0], [-0.654500008, 19.0, 20.0, 1.0], [0.0343655832, 0.0, 0.0, 0.0], [-0.042009104, 0.0, 0.0, 0.0], [-0.000470494968, 0.0, 0.0, 0.0], [-0.0424673632, 0.0, 0.0, 0.0], [-0.0428312272, 0.0, 0.0, 0.0], [0.048147887, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 19, 20, 4, 15, 16, 10, 17, 18, 12])
    branch_indices = np.array([0, 1, 3, 8, 14, 2, 5, 9, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_890(xs):
    #Predicts Class 2
    function_dict = np.array([[0.735499978, 1.0, 2.0, 2.0], [-0.24849999, 3.0, 4.0, 0.0], [0.0217234083, 0.0, 0.0, 0.0], [0.652500033, 5.0, 6.0, 2.0], [-0.889500022, 7.0, 8.0, 4.0], [0.00530211488, 0.0, 0.0, 0.0], [-0.0629234836, 0.0, 0.0, 0.0], [-0.956499994, 9.0, 10.0, 4.0], [-0.0253051072, 0.0, 0.0, 0.0], [-0.994500041, 11.0, 12.0, 3.0], [0.526000023, 13.0, 14.0, 2.0], [0.0137483208, 0.0, 0.0, 0.0], [-0.0392073579, 0.0, 0.0, 0.0], [-0.00306505593, 0.0, 0.0, 0.0], [0.0720842332, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 11, 12, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_891(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.127499998, 1.0, 2.0, 0.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.1105, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [-0.201499999, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.103500001, 13.0, 14.0, 0.0], [-0.132499993, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.250499994, 19.0, 20.0, 0.0], [-0.137014717, 0.0, 0.0, 0.0], [-0.116499998, 21.0, 22.0, 0.0], [0.158819452, 0.0, 0.0, 0.0], [-0.105499998, 23.0, 24.0, 0.0], [-0.0987499952, 25.0, 26.0, 0.0], [-0.136500001, 27.0, 28.0, 0.0], [-0.124451883, 0.0, 0.0, 0.0], [-0.145999998, 29.0, 30.0, 0.0], [0.089853175, 0.0, 0.0, 0.0], [-0.0468262509, 0.0, 0.0, 0.0], [0.0402923897, 0.0, 0.0, 0.0], [-0.120499998, 31.0, 32.0, 0.0], [-0.0878847688, 0.0, 0.0, 0.0], [0.00986680761, 0.0, 0.0, 0.0], [-0.113153569, 0.0, 0.0, 0.0], [0.0592135377, 0.0, 0.0, 0.0], [-0.0922500044, 33.0, 34.0, 0.0], [-0.00913074706, 0.0, 0.0, 0.0], [0.0371909998, 0.0, 0.0, 0.0], [-0.0639322996, 0.0, 0.0, 0.0], [0.0521655083, 0.0, 0.0, 0.0], [-0.021074634, 0.0, 0.0, 0.0], [0.101344623, 0.0, 0.0, 0.0], [-0.116595589, 0.0, 0.0, 0.0], [0.000888690003, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 29, 30, 18, 19, 20, 10, 31, 32, 22, 12, 23, 24, 25, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 9, 2, 5, 11, 21, 6, 13, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_892(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0912000015, 1.0, 2.0, 0.0], [0.0883999988, 3.0, 4.0, 0.0], [0.111500002, 5.0, 6.0, 0.0], [0.0850500017, 7.0, 8.0, 0.0], [0.0892499983, 9.0, 10.0, 0.0], [0.0923999995, 11.0, 12.0, 0.0], [0.190499991, 13.0, 14.0, 0.0], [0.0760499984, 15.0, 16.0, 0.0], [0.0607331879, 0.0, 0.0, 0.0], [-0.10822022, 0.0, 0.0, 0.0], [-0.0107275946, 0.0, 0.0, 0.0], [0.11054983, 0.0, 0.0, 0.0], [0.0294325836, 0.0, 0.0, 0.0], [-0.0875726342, 0.0, 0.0, 0.0], [0.194499999, 17.0, 18.0, 0.0], [0.03785, 19.0, 20.0, 0.0], [0.0825999975, 21.0, 22.0, 0.0], [0.0630148128, 0.0, 0.0, 0.0], [0.202500001, 23.0, 24.0, 0.0], [-0.0014083304, 0.0, 0.0, 0.0], [0.0509262234, 0.0, 0.0, 0.0], [-0.134774163, 0.0, 0.0, 0.0], [-0.00741389301, 0.0, 0.0, 0.0], [-0.0383036099, 0.0, 0.0, 0.0], [0.0156527553, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 11, 12, 13, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 14, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_893(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.0802000016, 3.0, 4.0, 0.0], [-0.593999982, 5.0, 6.0, 2.0], [-0.162, 7.0, 8.0, 0.0], [-0.0331500024, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [-0.0337839462, 0.0, 0.0, 0.0], [-0.38349998, 13.0, 14.0, 0.0], [-0.155499995, 15.0, 16.0, 0.0], [-0.108656168, 0.0, 0.0, 0.0], [-0.0123999994, 17.0, 18.0, 0.0], [-0.99849999, 19.0, 20.0, 1.0], [0.340499997, 21.0, 22.0, 0.0], [-0.401000023, 23.0, 24.0, 0.0], [-0.168500006, 25.0, 26.0, 0.0], [0.0124617741, 0.0, 0.0, 0.0], [0.039999228, 0.0, 0.0, 0.0], [0.0629133433, 0.0, 0.0, 0.0], [0.204999998, 27.0, 28.0, 0.0], [0.0953883156, 0.0, 0.0, 0.0], [-0.298500001, 29.0, 30.0, 0.0], [-0.0672373921, 0.0, 0.0, 0.0], [0.428499997, 31.0, 32.0, 0.0], [0.012839511, 0.0, 0.0, 0.0], [-0.080348447, 0.0, 0.0, 0.0], [0.0367366113, 0.0, 0.0, 0.0], [-0.0213753339, 0.0, 0.0, 0.0], [-0.0760964304, 0.0, 0.0, 0.0], [0.000720566371, 0.0, 0.0, 0.0], [-0.0512335673, 0.0, 0.0, 0.0], [0.0481215678, 0.0, 0.0, 0.0], [0.0801869109, 0.0, 0.0, 0.0], [0.00239370903, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 16, 9, 17, 27, 28, 19, 29, 30, 21, 31, 32, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 10, 18, 2, 5, 11, 20, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_894(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.244500011, 1.0, 2.0, 0.0], [-0.987499952, 3.0, 4.0, 3.0], [-0.208499998, 5.0, 6.0, 0.0], [-0.0379655324, 0.0, 0.0, 0.0], [-0.957499981, 7.0, 8.0, 3.0], [-0.993499994, 9.0, 10.0, 3.0], [-0.0796000063, 11.0, 12.0, 0.0], [0.0358868912, 0.0, 0.0, 0.0], [-0.0317226909, 0.0, 0.0, 0.0], [0.0511035249, 0.0, 0.0, 0.0], [-0.9745, 13.0, 14.0, 3.0], [-0.965499997, 15.0, 16.0, 4.0], [0.0291573871, 0.0, 0.0, 0.0], [-0.0229164548, 0.0, 0.0, 0.0], [0.0160132255, 0.0, 0.0, 0.0], [0.0330607258, 0.0, 0.0, 0.0], [-0.965499997, 17.0, 18.0, 3.0], [-0.0452208221, 0.0, 0.0, 0.0], [0.0131870927, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 13, 14, 15, 17, 18, 12])
    branch_indices = np.array([0, 1, 4, 2, 5, 10, 6, 11, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_895(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [0.657500029, 3.0, 4.0, 2.0], [-0.968500018, 5.0, 6.0, 4.0], [-0.658499956, 7.0, 8.0, 1.0], [-0.984500051, 9.0, 10.0, 3.0], [0.000397534342, 0.0, 0.0, 0.0], [-0.0281957407, 0.0, 0.0, 0.0], [-0.221500009, 11.0, 12.0, 0.0], [-0.230500013, 13.0, 14.0, 0.0], [-0.0409213603, 0.0, 0.0, 0.0], [0.0112780323, 0.0, 0.0, 0.0], [-0.781499982, 15.0, 16.0, 1.0], [-0.965499997, 17.0, 18.0, 4.0], [-0.00286669144, 0.0, 0.0, 0.0], [0.0728594661, 0.0, 0.0, 0.0], [-0.0114652235, 0.0, 0.0, 0.0], [0.0307164434, 0.0, 0.0, 0.0], [-0.0517088138, 0.0, 0.0, 0.0], [-0.000497846981, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_896(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.607499957, 1.0, 2.0, 1.0], [0.483500004, 3.0, 4.0, 2.0], [0.745499969, 5.0, 6.0, 2.0], [-0.736500025, 7.0, 8.0, 1.0], [-0.183499992, 9.0, 10.0, 0.0], [0.67750001, 11.0, 12.0, 2.0], [0.0373528711, 0.0, 0.0, 0.0], [0.409500003, 13.0, 14.0, 2.0], [0.0400302149, 0.0, 0.0, 0.0], [-0.000860831526, 0.0, 0.0, 0.0], [-0.0474411398, 0.0, 0.0, 0.0], [-0.953500032, 15.0, 16.0, 3.0], [-0.0292657632, 0.0, 0.0, 0.0], [-0.0287222378, 0.0, 0.0, 0.0], [0.00813816115, 0.0, 0.0, 0.0], [0.590999961, 17.0, 18.0, 2.0], [-0.0190861709, 0.0, 0.0, 0.0], [0.0490703695, 0.0, 0.0, 0.0], [-0.000947109889, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 9, 10, 17, 18, 16, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 2, 5, 11, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_897(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.111500002, 1.0, 2.0, 0.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.105499998, 5.0, 6.0, 0.0], [-0.119499996, 7.0, 8.0, 0.0], [-0.201499999, 9.0, 10.0, 0.0], [-0.1065, 11.0, 12.0, 0.0], [-0.0989499986, 13.0, 14.0, 0.0], [-0.130499989, 15.0, 16.0, 0.0], [-0.1175, 17.0, 18.0, 0.0], [-0.607499957, 19.0, 20.0, 2.0], [-0.120019145, 0.0, 0.0, 0.0], [0.0208140835, 0.0, 0.0, 0.0], [0.133902892, 0.0, 0.0, 0.0], [-0.102499999, 21.0, 22.0, 0.0], [-0.0965999961, 23.0, 24.0, 0.0], [-0.972000003, 25.0, 26.0, 2.0], [-0.129500002, 27.0, 28.0, 0.0], [-0.101535343, 0.0, 0.0, 0.0], [-0.00482915947, 0.0, 0.0, 0.0], [-0.040304143, 0.0, 0.0, 0.0], [0.042727761, 0.0, 0.0, 0.0], [0.0130153634, 0.0, 0.0, 0.0], [-0.083842963, 0.0, 0.0, 0.0], [0.155676499, 0.0, 0.0, 0.0], [-0.0907500014, 29.0, 30.0, 0.0], [0.00130871299, 0.0, 0.0, 0.0], [-0.0953834429, 0.0, 0.0, 0.0], [0.145501539, 0.0, 0.0, 0.0], [0.0269031152, 0.0, 0.0, 0.0], [-0.0925948694, 0.0, 0.0, 0.0], [0.00213964842, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 17, 18, 19, 20, 10, 11, 12, 21, 22, 23, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 2, 5, 6, 13, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_898(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00202000001, 1.0, 2.0, 0.0], [0.000549999997, 3.0, 4.0, 0.0], [0.00456999987, 5.0, 6.0, 0.0], [-0.000834999955, 7.0, 8.0, 0.0], [0.139080867, 0.0, 0.0, 0.0], [-0.151187122, 0.0, 0.0, 0.0], [0.0079549998, 9.0, 10.0, 0.0], [-0.00163000007, 11.0, 12.0, 0.0], [-0.177795261, 0.0, 0.0, 0.0], [0.0943851843, 0.0, 0.0, 0.0], [0.0192999989, 13.0, 14.0, 0.0], [-0.00413500005, 15.0, 16.0, 0.0], [0.162815094, 0.0, 0.0, 0.0], [-0.117202006, 0.0, 0.0, 0.0], [0.0237000007, 17.0, 18.0, 0.0], [0.00316864997, 0.0, 0.0, 0.0], [-0.086258173, 0.0, 0.0, 0.0], [0.118369877, 0.0, 0.0, 0.0], [-0.0051011052, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_899(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.164499998, 1.0, 2.0, 0.0], [-0.166500002, 3.0, 4.0, 0.0], [-0.155499995, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.1655, 9.0, 10.0, 0.0], [-0.0873519778, 0.0, 0.0, 0.0], [0.588, 11.0, 12.0, 0.0], [-0.420000017, 13.0, 14.0, 0.0], [-0.296499997, 15.0, 16.0, 0.0], [0.0201786924, 0.0, 0.0, 0.0], [0.0720068738, 0.0, 0.0, 0.0], [0.564499974, 17.0, 18.0, 0.0], [0.620499969, 19.0, 20.0, 0.0], [-0.46450001, 21.0, 22.0, 0.0], [0.0487076454, 0.0, 0.0, 0.0], [-0.0546701923, 0.0, 0.0, 0.0], [0.00916940719, 0.0, 0.0, 0.0], [0.549000025, 23.0, 24.0, 0.0], [-0.0675752386, 0.0, 0.0, 0.0], [0.0572143011, 0.0, 0.0, 0.0], [-0.00321061467, 0.0, 0.0, 0.0], [0.0332942493, 0.0, 0.0, 0.0], [-0.0548730753, 0.0, 0.0, 0.0], [-0.00189915637, 0.0, 0.0, 0.0], [0.0490914546, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 9, 10, 5, 23, 24, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 2, 6, 11, 17, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_900(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0287323482, 0.0, 0.0, 0.0], [0.398499995, 3.0, 4.0, 2.0], [0.0306943674, 0.0, 0.0, 0.0], [0.463499993, 5.0, 6.0, 2.0], [-0.791499972, 7.0, 8.0, 1.0], [-0.234499991, 9.0, 10.0, 0.0], [-0.0565382205, 0.0, 0.0, 0.0], [0.00149300531, 0.0, 0.0, 0.0], [-0.615499973, 11.0, 12.0, 1.0], [-0.976500034, 13.0, 14.0, 3.0], [0.000322704145, 0.0, 0.0, 0.0], [-0.0427499153, 0.0, 0.0, 0.0], [0.0333883204, 0.0, 0.0, 0.0], [0.000465783, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 8, 11, 12, 13, 14])
    branch_indices = np.array([0, 2, 4, 5, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_901(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.953500032, 3.0, 4.0, 4.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.984500051, 7.0, 8.0, 3.0], [0.0410039127, 0.0, 0.0, 0.0], [0.0169899575, 0.0, 0.0, 0.0], [-0.956499994, 9.0, 10.0, 3.0], [0.444499999, 11.0, 12.0, 2.0], [-0.967499971, 13.0, 14.0, 3.0], [-0.230500013, 15.0, 16.0, 0.0], [-0.0528482199, 0.0, 0.0, 0.0], [-0.218499988, 17.0, 18.0, 0.0], [-0.737499952, 19.0, 20.0, 1.0], [-0.037866734, 0.0, 0.0, 0.0], [0.00552533846, 0.0, 0.0, 0.0], [-0.70449996, 21.0, 22.0, 1.0], [0.0257668551, 0.0, 0.0, 0.0], [-0.0326710045, 0.0, 0.0, 0.0], [0.00792672206, 0.0, 0.0, 0.0], [0.0700679347, 0.0, 0.0, 0.0], [-0.0100274589, 0.0, 0.0, 0.0], [-0.0466843732, 0.0, 0.0, 0.0], [0.00315325218, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 21, 22, 16, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_902(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.911499977, 1.0, 2.0, 3.0], [-0.594500005, 3.0, 4.0, 1.0], [0.0225811973, 0.0, 0.0, 0.0], [-0.71449995, 5.0, 6.0, 1.0], [-0.801500022, 7.0, 8.0, 4.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.996500015, 11.0, 12.0, 3.0], [-0.294499993, 13.0, 14.0, 0.0], [-0.021618003, 0.0, 0.0, 0.0], [-0.0225726347, 0.0, 0.0, 0.0], [0.0284499824, 0.0, 0.0, 0.0], [0.0108506996, 0.0, 0.0, 0.0], [-0.0629229248, 0.0, 0.0, 0.0], [-0.0175167713, 0.0, 0.0, 0.0], [-0.956499994, 15.0, 16.0, 4.0], [-0.0135297766, 0.0, 0.0, 0.0], [0.0723046735, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 13, 15, 16, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 4, 7, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_903(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 4.0], [-0.0392000005, 3.0, 4.0, 0.0], [-0.144499987, 5.0, 6.0, 0.0], [-0.0428999998, 7.0, 8.0, 0.0], [-0.0307, 9.0, 10.0, 0.0], [-0.192499995, 11.0, 12.0, 0.0], [-0.105499998, 13.0, 14.0, 0.0], [-0.0467999987, 15.0, 16.0, 0.0], [0.239458546, 0.0, 0.0, 0.0], [-0.125474572, 0.0, 0.0, 0.0], [-0.0152500002, 17.0, 18.0, 0.0], [-0.249500006, 19.0, 20.0, 0.0], [0.0709050596, 0.0, 0.0, 0.0], [-0.129500002, 21.0, 22.0, 0.0], [-0.0566999987, 23.0, 24.0, 0.0], [-0.0493500009, 25.0, 26.0, 0.0], [-0.076150544, 0.0, 0.0, 0.0], [-0.0239499994, 27.0, 28.0, 0.0], [-0.00939000025, 29.0, 30.0, 0.0], [0.0344762616, 0.0, 0.0, 0.0], [-0.0529121086, 0.0, 0.0, 0.0], [-0.0348198824, 0.0, 0.0, 0.0], [-0.169306368, 0.0, 0.0, 0.0], [-0.0698499978, 31.0, 32.0, 0.0], [-0.0293500014, 33.0, 34.0, 0.0], [-0.00233870628, 0.0, 0.0, 0.0], [0.243630543, 0.0, 0.0, 0.0], [-0.0186227765, 0.0, 0.0, 0.0], [0.160021305, 0.0, 0.0, 0.0], [-0.113903083, 0.0, 0.0, 0.0], [0.00253577414, 0.0, 0.0, 0.0], [-0.00207972713, 0.0, 0.0, 0.0], [0.140447989, 0.0, 0.0, 0.0], [-0.165917352, 0.0, 0.0, 0.0], [0.000276431674, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 8, 9, 27, 28, 29, 30, 19, 20, 12, 21, 22, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 10, 17, 18, 2, 5, 11, 6, 13, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_904(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.999500036, 3.0, 4.0, 4.0], [-0.67050004, 5.0, 6.0, 2.0], [0.0941499993, 7.0, 8.0, 0.0], [-0.0559500009, 9.0, 10.0, 0.0], [-0.997500002, 11.0, 12.0, 1.0], [-0.552000046, 13.0, 14.0, 2.0], [0.0883999988, 15.0, 16.0, 0.0], [0.192499995, 17.0, 18.0, 0.0], [-0.0701999962, 19.0, 20.0, 0.0], [-0.0300000012, 21.0, 22.0, 0.0], [-0.148499995, 23.0, 24.0, 0.0], [0.0314895138, 0.0, 0.0, 0.0], [-0.104949996, 25.0, 26.0, 0.0], [-0.0861999989, 27.0, 28.0, 0.0], [0.0192999989, 29.0, 30.0, 0.0], [0.0892499983, 31.0, 32.0, 0.0], [0.148499995, 33.0, 34.0, 0.0], [0.195499986, 35.0, 36.0, 0.0], [-0.143999994, 37.0, 38.0, 0.0], [-0.135407224, 0.0, 0.0, 0.0], [0.237546861, 0.0, 0.0, 0.0], [-0.00337000005, 39.0, 40.0, 0.0], [-0.245499998, 41.0, 42.0, 0.0], [-0.150363401, 0.0, 0.0, 0.0], [0.106154799, 0.0, 0.0, 0.0], [-0.0357980281, 0.0, 0.0, 0.0], [-0.0677357167, 0.0, 0.0, 0.0], [0.0286280923, 0.0, 0.0, 0.0], [-0.00535825128, 0.0, 0.0, 0.0], [0.0297404621, 0.0, 0.0, 0.0], [-0.278347403, 0.0, 0.0, 0.0], [0.00750587648, 0.0, 0.0, 0.0], [0.0426390804, 0.0, 0.0, 0.0], [0.13290377, 0.0, 0.0, 0.0], [-0.0466975719, 0.0, 0.0, 0.0], [0.0184317883, 0.0, 0.0, 0.0], [-0.0386892632, 0.0, 0.0, 0.0], [0.0808269233, 0.0, 0.0, 0.0], [-0.0999250412, 0.0, 0.0, 0.0], [0.0573107898, 0.0, 0.0, 0.0], [-0.0510873683, 0.0, 0.0, 0.0], [0.0459422581, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 20, 21, 39, 40, 41, 42, 24, 12, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 19, 10, 22, 2, 5, 11, 23, 6, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_905(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0366132148, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0679635555, 0.0, 0.0, 0.0], [0.556499958, 7.0, 8.0, 0.0], [0.0807223171, 0.0, 0.0, 0.0], [0.539999962, 9.0, 10.0, 0.0], [-0.0397129841, 0.0, 0.0, 0.0], [-0.00112941547, 0.0, 0.0, 0.0], [0.039242547, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 8, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_906(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.970499992, 3.0, 4.0, 4.0], [0.478500009, 5.0, 6.0, 2.0], [-0.0453779139, 0.0, 0.0, 0.0], [0.004851609, 0.0, 0.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [-0.919499993, 9.0, 10.0, 4.0], [0.0487295203, 0.0, 0.0, 0.0], [-0.000679356803, 0.0, 0.0, 0.0], [-0.189500004, 11.0, 12.0, 0.0], [-0.976500034, 13.0, 14.0, 3.0], [-0.2755, 15.0, 16.0, 0.0], [-0.036580395, 0.0, 0.0, 0.0], [-0.250999987, 17.0, 18.0, 0.0], [-0.527500033, 19.0, 20.0, 1.0], [-0.0364651307, 0.0, 0.0, 0.0], [0.0235511009, 0.0, 0.0, 0.0], [-0.0175631773, 0.0, 0.0, 0.0], [0.0500713103, 0.0, 0.0, 0.0], [-0.0344360359, 0.0, 0.0, 0.0], [0.0174410064, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 15, 16, 12, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_907(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [0.637500048, 3.0, 4.0, 2.0], [0.612499952, 5.0, 6.0, 2.0], [0.570500016, 7.0, 8.0, 2.0], [0.025551958, 0.0, 0.0, 0.0], [-0.0336882323, 0.0, 0.0, 0.0], [0.00603477564, 0.0, 0.0, 0.0], [-0.993499994, 9.0, 10.0, 3.0], [-0.0303706806, 0.0, 0.0, 0.0], [0.436500013, 11.0, 12.0, 2.0], [-0.960500002, 13.0, 14.0, 3.0], [0.0243940894, 0.0, 0.0, 0.0], [-0.0385964997, 0.0, 0.0, 0.0], [0.0363502763, 0.0, 0.0, 0.0], [-0.00932239555, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_908(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.718500018, 1.0, 2.0, 1.0], [-0.179500014, 3.0, 4.0, 0.0], [-0.125499994, 5.0, 6.0, 0.0], [-0.21450001, 7.0, 8.0, 0.0], [-0.0340915397, 0.0, 0.0, 0.0], [-0.630499959, 9.0, 10.0, 1.0], [-0.0273930468, 0.0, 0.0, 0.0], [-0.0128688179, 0.0, 0.0, 0.0], [0.0183152482, 0.0, 0.0, 0.0], [-0.200500011, 11.0, 12.0, 0.0], [0.66050005, 13.0, 14.0, 2.0], [-0.00569413695, 0.0, 0.0, 0.0], [0.0853115246, 0.0, 0.0, 0.0], [-0.506500006, 15.0, 16.0, 1.0], [0.715000033, 17.0, 18.0, 2.0], [-0.0530508421, 0.0, 0.0, 0.0], [-0.00321740634, 0.0, 0.0, 0.0], [0.0486640818, 0.0, 0.0, 0.0], [-0.0053558466, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 11, 12, 15, 16, 17, 18, 6])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_909(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.130499989, 1.0, 2.0, 0.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.129500002, 5.0, 6.0, 0.0], [-0.2095, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.11599499, 0.0, 0.0, 0.0], [-0.120499998, 11.0, 12.0, 0.0], [-0.274500012, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.154098421, 0.0, 0.0, 0.0], [-0.191500008, 17.0, 18.0, 0.0], [-0.125499994, 19.0, 20.0, 0.0], [-0.119499996, 21.0, 22.0, 0.0], [-0.294499993, 23.0, 24.0, 0.0], [0.0762575567, 0.0, 0.0, 0.0], [-0.191500008, 25.0, 26.0, 0.0], [0.0831977651, 0.0, 0.0, 0.0], [-0.212500006, 27.0, 28.0, 0.0], [-0.0514065363, 0.0, 0.0, 0.0], [-0.12650001, 29.0, 30.0, 0.0], [-0.0909893215, 0.0, 0.0, 0.0], [0.13162218, 0.0, 0.0, 0.0], [-0.1175, 31.0, 32.0, 0.0], [0.0204555895, 0.0, 0.0, 0.0], [-0.0293816794, 0.0, 0.0, 0.0], [-0.117545731, 0.0, 0.0, 0.0], [0.00169596414, 0.0, 0.0, 0.0], [-0.0292920452, 0.0, 0.0, 0.0], [0.101369157, 0.0, 0.0, 0.0], [-0.0545309633, 0.0, 0.0, 0.0], [0.0391911082, 0.0, 0.0, 0.0], [-0.0768450052, 0.0, 0.0, 0.0], [0.00262338831, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 25, 26, 16, 9, 27, 28, 18, 5, 29, 30, 20, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 10, 17, 2, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_910(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00171500002, 1.0, 2.0, 0.0], [-0.00463499967, 3.0, 4.0, 0.0], [0.00325499987, 5.0, 6.0, 0.0], [-0.0052199997, 7.0, 8.0, 0.0], [-0.00200500013, 9.0, 10.0, 0.0], [-0.119745009, 0.0, 0.0, 0.0], [0.00588999968, 11.0, 12.0, 0.0], [-0.00894000009, 13.0, 14.0, 0.0], [-0.121614821, 0.0, 0.0, 0.0], [0.140437156, 0.0, 0.0, 0.0], [-0.000944999978, 15.0, 16.0, 0.0], [0.0769539252, 0.0, 0.0, 0.0], [0.00768500008, 17.0, 18.0, 0.0], [-0.0154499998, 19.0, 20.0, 0.0], [0.154277742, 0.0, 0.0, 0.0], [-0.102036282, 0.0, 0.0, 0.0], [0.112352751, 0.0, 0.0, 0.0], [-0.116595283, 0.0, 0.0, 0.0], [0.0101999994, 21.0, 22.0, 0.0], [0.000727844425, 0.0, 0.0, 0.0], [-0.1067378, 0.0, 0.0, 0.0], [0.0753832534, 0.0, 0.0, 0.0], [-0.00786117651, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 15, 16, 5, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_911(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.344999999, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [-0.108047381, 0.0, 0.0, 0.0], [0.10191045, 0.0, 0.0, 0.0], [0.404500008, 9.0, 10.0, 0.0], [-0.0318999998, 11.0, 12.0, 0.0], [0.228500009, 13.0, 14.0, 0.0], [0.394500017, 15.0, 16.0, 0.0], [0.405499995, 17.0, 18.0, 0.0], [-0.080400005, 19.0, 20.0, 0.0], [0.172499999, 21.0, 22.0, 0.0], [0.0815992206, 0.0, 0.0, 0.0], [0.259499997, 23.0, 24.0, 0.0], [-0.0168235395, 0.0, 0.0, 0.0], [-0.0620334148, 0.0, 0.0, 0.0], [0.0855042934, 0.0, 0.0, 0.0], [0.409500003, 25.0, 26.0, 0.0], [-0.00561736571, 0.0, 0.0, 0.0], [0.049886208, 0.0, 0.0, 0.0], [-0.06973508, 0.0, 0.0, 0.0], [-0.0213902574, 0.0, 0.0, 0.0], [-0.00910320785, 0.0, 0.0, 0.0], [0.0324852169, 0.0, 0.0, 0.0], [-0.111872077, 0.0, 0.0, 0.0], [0.00619584508, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 23, 24, 4, 5, 15, 16, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_912(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.266499996, 3.0, 4.0, 0.0], [-0.271499991, 5.0, 6.0, 0.0], [-0.0141768465, 0.0, 0.0, 0.0], [-0.961500049, 7.0, 8.0, 4.0], [0.0227030292, 0.0, 0.0, 0.0], [-0.236499995, 9.0, 10.0, 0.0], [-0.180500001, 11.0, 12.0, 0.0], [0.0508238859, 0.0, 0.0, 0.0], [0.636000037, 13.0, 14.0, 2.0], [-0.938500047, 15.0, 16.0, 3.0], [0.0267822482, 0.0, 0.0, 0.0], [-0.0249674544, 0.0, 0.0, 0.0], [-0.0478001684, 0.0, 0.0, 0.0], [-0.0113544827, 0.0, 0.0, 0.0], [0.534500003, 17.0, 18.0, 2.0], [0.0321131498, 0.0, 0.0, 0.0], [-0.0408430174, 0.0, 0.0, 0.0], [0.00644673081, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 8, 5, 13, 14, 17, 18, 16])
    branch_indices = np.array([0, 1, 4, 7, 2, 6, 9, 10, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_913(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [0.600499988, 3.0, 4.0, 2.0], [-0.02146497, 0.0, 0.0, 0.0], [-0.779500008, 5.0, 6.0, 1.0], [0.642500043, 7.0, 8.0, 2.0], [-0.994500041, 9.0, 10.0, 3.0], [-0.995499969, 11.0, 12.0, 3.0], [-0.045013424, 0.0, 0.0, 0.0], [-0.314999998, 13.0, 14.0, 0.0], [-0.0374224484, 0.0, 0.0, 0.0], [0.0161599778, 0.0, 0.0, 0.0], [-0.958500028, 15.0, 16.0, 4.0], [0.549000025, 17.0, 18.0, 2.0], [0.0217527132, 0.0, 0.0, 0.0], [-0.0156873241, 0.0, 0.0, 0.0], [0.00379796955, 0.0, 0.0, 0.0], [0.0776159167, 0.0, 0.0, 0.0], [-0.0196528453, 0.0, 0.0, 0.0], [0.0453704782, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 15, 16, 17, 18, 7, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 11, 12, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_914(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.794499993, 1.0, 2.0, 4.0], [-0.962499976, 3.0, 4.0, 3.0], [0.0251761377, 0.0, 0.0, 0.0], [-0.612499952, 5.0, 6.0, 1.0], [-0.919499993, 7.0, 8.0, 4.0], [0.534500003, 9.0, 10.0, 2.0], [-0.931499958, 11.0, 12.0, 4.0], [0.0045039882, 0.0, 0.0, 0.0], [-0.0421008579, 0.0, 0.0, 0.0], [-0.205500007, 13.0, 14.0, 0.0], [-0.0379421525, 0.0, 0.0, 0.0], [-0.234999999, 15.0, 16.0, 0.0], [0.0497902632, 0.0, 0.0, 0.0], [-0.0263792984, 0.0, 0.0, 0.0], [0.0327801555, 0.0, 0.0, 0.0], [-0.00706355786, 0.0, 0.0, 0.0], [0.00742579531, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 11, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_915(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [-0.0640522018, 0.0, 0.0, 0.0], [0.0787524655, 0.0, 0.0, 0.0], [0.506000042, 9.0, 10.0, 0.0], [0.432500005, 11.0, 12.0, 0.0], [0.0643793792, 0.0, 0.0, 0.0], [-0.0650814623, 0.0, 0.0, 0.0], [0.537500024, 13.0, 14.0, 0.0], [0.428499997, 15.0, 16.0, 0.0], [0.434499979, 17.0, 18.0, 0.0], [0.5255, 19.0, 20.0, 0.0], [0.543500006, 21.0, 22.0, 0.0], [-0.00109851931, 0.0, 0.0, 0.0], [0.0803150609, 0.0, 0.0, 0.0], [-0.0814066529, 0.0, 0.0, 0.0], [-0.00551489508, 0.0, 0.0, 0.0], [0.0215123966, 0.0, 0.0, 0.0], [0.060015209, 0.0, 0.0, 0.0], [-0.0462244451, 0.0, 0.0, 0.0], [0.0091173891, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_916(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.41049999, 5.0, 6.0, 0.0], [0.0912000015, 7.0, 8.0, 0.0], [-0.0472499989, 9.0, 10.0, 0.0], [0.0385750197, 0.0, 0.0, 0.0], [-0.0403999984, 11.0, 12.0, 0.0], [0.0476500019, 13.0, 14.0, 0.0], [0.157999992, 15.0, 16.0, 0.0], [-0.0679499954, 17.0, 18.0, 0.0], [0.0234500002, 19.0, 20.0, 0.0], [-0.1505, 21.0, 22.0, 0.0], [0.00490000006, 23.0, 24.0, 0.0], [0.03785, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [0.1105, 29.0, 30.0, 0.0], [0.193500012, 31.0, 32.0, 0.0], [-0.136000007, 33.0, 34.0, 0.0], [0.137526974, 0.0, 0.0, 0.0], [-0.822000027, 35.0, 36.0, 2.0], [0.0781836063, 0.0, 0.0, 0.0], [-0.249500006, 37.0, 38.0, 0.0], [-0.101975441, 0.0, 0.0, 0.0], [0.0735909715, 0.0, 0.0, 0.0], [-0.0336804539, 0.0, 0.0, 0.0], [-0.00215964182, 0.0, 0.0, 0.0], [0.155953452, 0.0, 0.0, 0.0], [-0.067551218, 0.0, 0.0, 0.0], [0.0460445993, 0.0, 0.0, 0.0], [0.0176777896, 0.0, 0.0, 0.0], [0.116603859, 0.0, 0.0, 0.0], [-0.0813053027, 0.0, 0.0, 0.0], [0.0281749312, 0.0, 0.0, 0.0], [0.0695284009, 0.0, 0.0, 0.0], [-0.0428477377, 0.0, 0.0, 0.0], [0.0400379859, 0.0, 0.0, 0.0], [-0.199587524, 0.0, 0.0, 0.0], [-0.0678516477, 0.0, 0.0, 0.0], [0.0540299863, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 18, 35, 36, 20, 5, 37, 38, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 9, 17, 10, 19, 2, 6, 11, 21, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_917(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.16049999, 3.0, 4.0, 0.0], [0.0359390974, 0.0, 0.0, 0.0], [-0.394999981, 5.0, 6.0, 0.0], [0.2755, 7.0, 8.0, 0.0], [-0.424499989, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.264499992, 13.0, 14.0, 0.0], [0.344999999, 15.0, 16.0, 0.0], [-0.468999982, 17.0, 18.0, 0.0], [-0.0543596596, 0.0, 0.0, 0.0], [-0.1655, 19.0, 20.0, 0.0], [-0.022683328, 0.0, 0.0, 0.0], [0.253499985, 21.0, 22.0, 0.0], [-0.127031848, 0.0, 0.0, 0.0], [0.0759640709, 0.0, 0.0, 0.0], [0.397499979, 23.0, 24.0, 0.0], [-0.00804197975, 0.0, 0.0, 0.0], [0.0384205282, 0.0, 0.0, 0.0], [0.0204003863, 0.0, 0.0, 0.0], [0.0711205155, 0.0, 0.0, 0.0], [-0.0209191423, 0.0, 0.0, 0.0], [0.0582019947, 0.0, 0.0, 0.0], [-0.0439727828, 0.0, 0.0, 0.0], [0.0025282132, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 19, 20, 12, 21, 22, 14, 15, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 11, 4, 7, 13, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_918(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.990499973, 1.0, 2.0, 3.0], [0.657500029, 3.0, 4.0, 2.0], [-0.644500017, 5.0, 6.0, 1.0], [-0.89349997, 7.0, 8.0, 4.0], [0.0205926038, 0.0, 0.0, 0.0], [0.573500037, 9.0, 10.0, 2.0], [-0.526499987, 11.0, 12.0, 1.0], [-0.938500047, 13.0, 14.0, 4.0], [-0.0668107048, 0.0, 0.0, 0.0], [-0.740499973, 15.0, 16.0, 1.0], [0.0614338443, 0.0, 0.0, 0.0], [-0.0367005803, 0.0, 0.0, 0.0], [0.0128007689, 0.0, 0.0, 0.0], [-0.995499969, 17.0, 18.0, 3.0], [0.0418006815, 0.0, 0.0, 0.0], [-0.796499968, 19.0, 20.0, 1.0], [-0.032132078, 0.0, 0.0, 0.0], [-0.0330097005, 0.0, 0.0, 0.0], [0.0147594828, 0.0, 0.0, 0.0], [-0.00379676139, 0.0, 0.0, 0.0], [0.0435954481, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 19, 20, 16, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 15, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_919(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.334500015, 1.0, 2.0, 0.0], [-0.0201846212, 0.0, 0.0, 0.0], [-0.9745, 3.0, 4.0, 3.0], [-0.9745, 5.0, 6.0, 4.0], [-0.694999993, 7.0, 8.0, 1.0], [-0.0268920492, 0.0, 0.0, 0.0], [-0.982499957, 9.0, 10.0, 3.0], [0.0056127701, 0.0, 0.0, 0.0], [-0.0386646092, 0.0, 0.0, 0.0], [-0.915500045, 11.0, 12.0, 4.0], [0.0636810511, 0.0, 0.0, 0.0], [-0.00515126297, 0.0, 0.0, 0.0], [0.0461725295, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 11, 12, 10, 7, 8])
    branch_indices = np.array([0, 2, 3, 6, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_920(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.761500001, 1.0, 2.0, 1.0], [-0.0189528745, 0.0, 0.0, 0.0], [0.483500004, 3.0, 4.0, 2.0], [0.0256656483, 0.0, 0.0, 0.0], [0.540500045, 5.0, 6.0, 2.0], [-0.038771268, 0.0, 0.0, 0.0], [0.598500013, 7.0, 8.0, 2.0], [0.0370481536, 0.0, 0.0, 0.0], [-0.166500002, 9.0, 10.0, 0.0], [0.0114958351, 0.0, 0.0, 0.0], [-0.035547629, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 7, 9, 10])
    branch_indices = np.array([0, 2, 4, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_921(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0152500002, 1.0, 2.0, 0.0], [-0.0238499995, 3.0, 4.0, 0.0], [-0.00963000022, 5.0, 6.0, 0.0], [-0.0297999997, 7.0, 8.0, 0.0], [0.134325936, 0.0, 0.0, 0.0], [-0.1096306, 0.0, 0.0, 0.0], [-0.00550500024, 9.0, 10.0, 0.0], [-0.0382499993, 11.0, 12.0, 0.0], [-0.105973683, 0.0, 0.0, 0.0], [0.139269844, 0.0, 0.0, 0.0], [-0.00478500035, 13.0, 14.0, 0.0], [-0.0424499996, 15.0, 16.0, 0.0], [0.125966534, 0.0, 0.0, 0.0], [-0.152975172, 0.0, 0.0, 0.0], [-0.00209000008, 17.0, 18.0, 0.0], [0.00213083532, 0.0, 0.0, 0.0], [-0.0955596119, 0.0, 0.0, 0.0], [0.0916857123, 0.0, 0.0, 0.0], [-0.00316572096, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_922(xs):
    #Predicts Class 4
    function_dict = np.array([[0.196500003, 1.0, 2.0, 0.0], [0.190499991, 3.0, 4.0, 0.0], [-0.0475666001, 0.0, 0.0, 0.0], [0.111500002, 5.0, 6.0, 0.0], [0.194499999, 7.0, 8.0, 0.0], [0.0941499993, 9.0, 10.0, 0.0], [-0.0935357735, 0.0, 0.0, 0.0], [0.0580697693, 0.0, 0.0, 0.0], [0.0142752938, 0.0, 0.0, 0.0], [0.0894500017, 11.0, 12.0, 0.0], [0.0806677416, 0.0, 0.0, 0.0], [0.00144138455, 0.0, 0.0, 0.0], [-0.0710784495, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_923(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [-0.0860327259, 0.0, 0.0, 0.0], [0.132371455, 0.0, 0.0, 0.0], [0.36500001, 9.0, 10.0, 0.0], [-0.0742499977, 11.0, 12.0, 0.0], [0.228500009, 13.0, 14.0, 0.0], [-0.0796878785, 0.0, 0.0, 0.0], [0.401499987, 15.0, 16.0, 0.0], [-0.080400005, 17.0, 18.0, 0.0], [-0.0126499999, 19.0, 20.0, 0.0], [0.0660881624, 0.0, 0.0, 0.0], [-0.0136797419, 0.0, 0.0, 0.0], [0.0519437939, 0.0, 0.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [-0.00621687667, 0.0, 0.0, 0.0], [0.0750467256, 0.0, 0.0, 0.0], [-0.0945857838, 0.0, 0.0, 0.0], [0.00384739321, 0.0, 0.0, 0.0], [-0.00393550564, 0.0, 0.0, 0.0], [0.0411896817, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_924(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.847499967, 1.0, 2.0, 1.0], [0.0227485783, 0.0, 0.0, 0.0], [0.354499996, 3.0, 4.0, 2.0], [-0.0452005491, 0.0, 0.0, 0.0], [-0.971500039, 5.0, 6.0, 4.0], [-0.0301323757, 0.0, 0.0, 0.0], [0.621500015, 7.0, 8.0, 2.0], [-0.750999987, 9.0, 10.0, 1.0], [-0.597499967, 11.0, 12.0, 1.0], [0.0524247885, 0.0, 0.0, 0.0], [0.00245980662, 0.0, 0.0, 0.0], [-0.0414127447, 0.0, 0.0, 0.0], [0.0155783966, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 9, 10, 11, 12])
    branch_indices = np.array([0, 2, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_925(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.847499967, 3.0, 4.0, 1.0], [0.612499952, 5.0, 6.0, 2.0], [-0.0236210786, 0.0, 0.0, 0.0], [0.354499996, 7.0, 8.0, 2.0], [-0.0336533897, 0.0, 0.0, 0.0], [0.00653504953, 0.0, 0.0, 0.0], [0.0401209258, 0.0, 0.0, 0.0], [-0.797500014, 9.0, 10.0, 1.0], [-0.0355001949, 0.0, 0.0, 0.0], [-0.74150002, 11.0, 12.0, 1.0], [0.0433133952, 0.0, 0.0, 0.0], [-0.00155871944, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 9, 11, 12, 5, 6])
    branch_indices = np.array([0, 1, 4, 8, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_926(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.794499993, 1.0, 2.0, 4.0], [-0.872500002, 3.0, 4.0, 4.0], [0.0200483389, 0.0, 0.0, 0.0], [-0.983500004, 5.0, 6.0, 3.0], [-0.0325730741, 0.0, 0.0, 0.0], [0.63349998, 7.0, 8.0, 2.0], [0.528999984, 9.0, 10.0, 2.0], [-0.199499995, 11.0, 12.0, 0.0], [-0.0495303646, 0.0, 0.0, 0.0], [-0.0182951353, 0.0, 0.0, 0.0], [0.6505, 13.0, 14.0, 2.0], [-0.0196560062, 0.0, 0.0, 0.0], [0.0318352208, 0.0, 0.0, 0.0], [0.0503835902, 0.0, 0.0, 0.0], [0.0113011599, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_927(xs):
    #Predicts Class 3
    function_dict = np.array([[0.538499951, 1.0, 2.0, 0.0], [0.528499961, 3.0, 4.0, 0.0], [0.541499972, 5.0, 6.0, 0.0], [0.521499991, 7.0, 8.0, 0.0], [-0.0949135125, 0.0, 0.0, 0.0], [0.0908130854, 0.0, 0.0, 0.0], [0.585000038, 9.0, 10.0, 0.0], [0.46450001, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [0.5625, 15.0, 16.0, 0.0], [0.618499994, 17.0, 18.0, 0.0], [0.446500003, 19.0, 20.0, 0.0], [0.478500009, 21.0, 22.0, 0.0], [0.0639740601, 0.0, 0.0, 0.0], [0.0114640109, 0.0, 0.0, 0.0], [0.547500014, 23.0, 24.0, 0.0], [-0.0608099364, 0.0, 0.0, 0.0], [0.0555813611, 0.0, 0.0, 0.0], [-0.0202766117, 0.0, 0.0, 0.0], [-0.00107392261, 0.0, 0.0, 0.0], [0.0877897814, 0.0, 0.0, 0.0], [-0.0879719928, 0.0, 0.0, 0.0], [0.00429438148, 0.0, 0.0, 0.0], [-0.0274208058, 0.0, 0.0, 0.0], [0.0275952537, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 4, 5, 23, 24, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9, 15, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_928(xs):
    #Predicts Class 4
    function_dict = np.array([[0.196500003, 1.0, 2.0, 0.0], [0.0873000026, 3.0, 4.0, 0.0], [-0.0355792418, 0.0, 0.0, 0.0], [0.082949996, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.0757500008, 9.0, 10.0, 0.0], [0.0867500007, 11.0, 12.0, 0.0], [0.106610589, 0.0, 0.0, 0.0], [0.152999997, 13.0, 14.0, 0.0], [0.0476500019, 15.0, 16.0, 0.0], [0.103895977, 0.0, 0.0, 0.0], [-0.103577331, 0.0, 0.0, 0.0], [-0.008742081, 0.0, 0.0, 0.0], [0.0945499986, 17.0, 18.0, 0.0], [0.192499995, 19.0, 20.0, 0.0], [0.00060900487, 0.0, 0.0, 0.0], [-0.0602321625, 0.0, 0.0, 0.0], [0.00304268557, 0.0, 0.0, 0.0], [-0.0859628245, 0.0, 0.0, 0.0], [0.106415182, 0.0, 0.0, 0.0], [-0.00905936491, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 11, 12, 7, 17, 18, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_929(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.538499951, 3.0, 4.0, 0.0], [0.430999994, 5.0, 6.0, 0.0], [0.527999997, 7.0, 8.0, 0.0], [0.541999996, 9.0, 10.0, 0.0], [0.344999999, 11.0, 12.0, 0.0], [0.527500033, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.121932596, 0.0, 0.0, 0.0], [-0.088743262, 0.0, 0.0, 0.0], [0.615499973, 17.0, 18.0, 0.0], [-0.995499969, 19.0, 20.0, 1.0], [-0.0622774325, 0.0, 0.0, 0.0], [0.0567677505, 0.0, 0.0, 0.0], [-0.00157064735, 0.0, 0.0, 0.0], [0.513000011, 21.0, 22.0, 0.0], [-0.0745999962, 23.0, 24.0, 0.0], [0.5625, 25.0, 26.0, 0.0], [0.621500015, 27.0, 28.0, 0.0], [0.193000004, 29.0, 30.0, 0.0], [-0.0490898453, 0.0, 0.0, 0.0], [-0.00349114579, 0.0, 0.0, 0.0], [0.0684424937, 0.0, 0.0, 0.0], [0.00515010301, 0.0, 0.0, 0.0], [-0.100084141, 0.0, 0.0, 0.0], [-0.00595334265, 0.0, 0.0, 0.0], [0.0548178516, 0.0, 0.0, 0.0], [-0.0681790709, 0.0, 0.0, 0.0], [0.00755939167, 0.0, 0.0, 0.0], [-0.0121294009, 0.0, 0.0, 0.0], [0.10143806, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 25, 26, 27, 28, 29, 30, 20, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 17, 18, 2, 5, 11, 19, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_930(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.0796000063, 1.0, 2.0, 0.0], [-0.113499999, 3.0, 4.0, 0.0], [0.0249990057, 0.0, 0.0, 0.0], [-0.149500012, 5.0, 6.0, 0.0], [-0.0384666733, 0.0, 0.0, 0.0], [-0.99849999, 7.0, 8.0, 3.0], [0.0313306153, 0.0, 0.0, 0.0], [-0.032931149, 0.0, 0.0, 0.0], [-0.585500002, 9.0, 10.0, 1.0], [0.0125774723, 0.0, 0.0, 0.0], [-0.0234886091, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 9, 10, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_931(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.556499958, 3.0, 4.0, 1.0], [-0.688500047, 5.0, 6.0, 1.0], [-0.928499997, 7.0, 8.0, 4.0], [-0.444999993, 9.0, 10.0, 1.0], [0.00675857207, 0.0, 0.0, 0.0], [-0.0301380828, 0.0, 0.0, 0.0], [0.571500003, 11.0, 12.0, 2.0], [0.0311351195, 0.0, 0.0, 0.0], [0.0389535464, 0.0, 0.0, 0.0], [-0.00098448724, 0.0, 0.0, 0.0], [-0.972499967, 13.0, 14.0, 3.0], [-0.0459809117, 0.0, 0.0, 0.0], [0.0112766111, 0.0, 0.0, 0.0], [-0.0295588858, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_932(xs):
    #Predicts Class 2
    function_dict = np.array([[0.693500042, 1.0, 2.0, 2.0], [-0.911499977, 3.0, 4.0, 3.0], [-0.240500003, 5.0, 6.0, 0.0], [-0.982499957, 7.0, 8.0, 3.0], [0.0232128259, 0.0, 0.0, 0.0], [-0.00779583491, 0.0, 0.0, 0.0], [0.0290017873, 0.0, 0.0, 0.0], [0.63349998, 9.0, 10.0, 2.0], [-0.0378600396, 0.0, 0.0, 0.0], [-0.997500002, 11.0, 12.0, 3.0], [-0.0329783782, 0.0, 0.0, 0.0], [-0.0169480275, 0.0, 0.0, 0.0], [0.0330318362, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_933(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.588, 3.0, 4.0, 0.0], [-0.0370431691, 0.0, 0.0, 0.0], [0.564499974, 5.0, 6.0, 0.0], [0.620499969, 7.0, 8.0, 0.0], [0.549000025, 9.0, 10.0, 0.0], [0.078282319, 0.0, 0.0, 0.0], [-0.0706989691, 0.0, 0.0, 0.0], [0.0223708712, 0.0, 0.0, 0.0], [0.534000039, 11.0, 12.0, 0.0], [-0.046592962, 0.0, 0.0, 0.0], [0.000250285841, 0.0, 0.0, 0.0], [0.0465407223, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_934(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.163500011, 3.0, 4.0, 0.0], [-0.1505, 5.0, 6.0, 0.0], [-0.185499996, 7.0, 8.0, 0.0], [-0.0743729547, 0.0, 0.0, 0.0], [0.0532260686, 0.0, 0.0, 0.0], [-0.141499996, 9.0, 10.0, 0.0], [-0.186500013, 11.0, 12.0, 0.0], [-0.166500002, 13.0, 14.0, 0.0], [-0.142500013, 15.0, 16.0, 0.0], [-0.136500001, 17.0, 18.0, 0.0], [-0.282499999, 19.0, 20.0, 0.0], [-0.0980061367, 0.0, 0.0, 0.0], [0.053028293, 0.0, 0.0, 0.0], [-0.1655, 21.0, 22.0, 0.0], [-0.149500012, 23.0, 24.0, 0.0], [-0.101031423, 0.0, 0.0, 0.0], [0.0360871255, 0.0, 0.0, 0.0], [-0.0297999997, 25.0, 26.0, 0.0], [-0.0188051723, 0.0, 0.0, 0.0], [0.0123521853, 0.0, 0.0, 0.0], [0.00384419318, 0.0, 0.0, 0.0], [-0.0216405503, 0.0, 0.0, 0.0], [-0.0373443328, 0.0, 0.0, 0.0], [0.0294428468, 0.0, 0.0, 0.0], [-0.00839012861, 0.0, 0.0, 0.0], [0.00585607253, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 21, 22, 4, 5, 23, 24, 16, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 2, 6, 9, 15, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_935(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.0754535198, 0.0, 0.0, 0.0], [0.0733614117, 0.0, 0.0, 0.0], [-0.0133143943, 0.0, 0.0, 0.0], [0.534000039, 9.0, 10.0, 0.0], [0.0485671945, 0.0, 0.0, 0.0], [-0.851999998, 11.0, 12.0, 2.0], [0.539999962, 13.0, 14.0, 0.0], [0.00485303672, 0.0, 0.0, 0.0], [-0.040312957, 0.0, 0.0, 0.0], [-0.10305775, 0.0, 0.0, 0.0], [0.00565297203, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_936(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.916499972, 1.0, 2.0, 4.0], [-0.657500029, 3.0, 4.0, 1.0], [-0.892500043, 5.0, 6.0, 4.0], [-0.2755, 7.0, 8.0, 0.0], [-0.0419326089, 0.0, 0.0, 0.0], [0.0367802754, 0.0, 0.0, 0.0], [-0.182500005, 9.0, 10.0, 0.0], [-0.0367418714, 0.0, 0.0, 0.0], [-0.184500009, 11.0, 12.0, 0.0], [-0.223500013, 13.0, 14.0, 0.0], [0.0263180677, 0.0, 0.0, 0.0], [0.485500008, 15.0, 16.0, 2.0], [-0.107500002, 17.0, 18.0, 0.0], [0.0129520399, 0.0, 0.0, 0.0], [-0.0555914119, 0.0, 0.0, 0.0], [-0.00283475639, 0.0, 0.0, 0.0], [0.0704221278, 0.0, 0.0, 0.0], [-0.0500995629, 0.0, 0.0, 0.0], [0.0266135931, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 17, 18, 4, 5, 13, 14, 10])
    branch_indices = np.array([0, 1, 3, 8, 11, 12, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_937(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.966500044, 3.0, 4.0, 4.0], [-0.961500049, 5.0, 6.0, 4.0], [-0.0473338924, 0.0, 0.0, 0.0], [-0.711500049, 7.0, 8.0, 1.0], [0.461499989, 9.0, 10.0, 2.0], [-0.267499983, 11.0, 12.0, 0.0], [-0.0155847203, 0.0, 0.0, 0.0], [0.0361140184, 0.0, 0.0, 0.0], [0.00348864798, 0.0, 0.0, 0.0], [0.0506302789, 0.0, 0.0, 0.0], [-0.323500007, 13.0, 14.0, 0.0], [-0.935500026, 15.0, 16.0, 4.0], [-0.00596555136, 0.0, 0.0, 0.0], [0.030758338, 0.0, 0.0, 0.0], [-0.0557349585, 0.0, 0.0, 0.0], [-0.227499992, 17.0, 18.0, 0.0], [-0.0112178344, 0.0, 0.0, 0.0], [0.0264968816, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 10, 13, 14, 15, 17, 18])
    branch_indices = np.array([0, 1, 4, 2, 5, 6, 11, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_938(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.977499962, 1.0, 2.0, 4.0], [-0.0232364032, 0.0, 0.0, 0.0], [-0.107500002, 3.0, 4.0, 0.0], [0.459500015, 5.0, 6.0, 2.0], [-0.0267079398, 0.0, 0.0, 0.0], [0.0400768779, 0.0, 0.0, 0.0], [0.529500008, 7.0, 8.0, 2.0], [-0.0448127463, 0.0, 0.0, 0.0], [-0.266499996, 9.0, 10.0, 0.0], [-0.0162144341, 0.0, 0.0, 0.0], [0.0223667286, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 7, 9, 10, 4])
    branch_indices = np.array([0, 2, 3, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_939(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.000714999973, 1.0, 2.0, 0.0], [-0.00163000007, 3.0, 4.0, 0.0], [0.000549999997, 5.0, 6.0, 0.0], [-0.00413500005, 7.0, 8.0, 0.0], [-0.13779138, 0.0, 0.0, 0.0], [0.165208057, 0.0, 0.0, 0.0], [0.00202000001, 9.0, 10.0, 0.0], [-0.00496499985, 11.0, 12.0, 0.0], [-0.00209000008, 13.0, 14.0, 0.0], [-0.113882191, 0.0, 0.0, 0.0], [0.00456999987, 15.0, 16.0, 0.0], [-0.00885999948, 17.0, 18.0, 0.0], [-0.152069539, 0.0, 0.0, 0.0], [0.132108629, 0.0, 0.0, 0.0], [-0.0259497818, 0.0, 0.0, 0.0], [0.111135378, 0.0, 0.0, 0.0], [0.00655000005, 19.0, 20.0, 0.0], [-0.00151832891, 0.0, 0.0, 0.0], [0.117668718, 0.0, 0.0, 0.0], [-0.119650625, 0.0, 0.0, 0.0], [0.0035396805, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_940(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0042849998, 1.0, 2.0, 0.0], [0.00185999996, 3.0, 4.0, 0.0], [0.00974999927, 5.0, 6.0, 0.0], [-0.000834999955, 7.0, 8.0, 0.0], [0.145900086, 0.0, 0.0, 0.0], [-0.0990623012, 0.0, 0.0, 0.0], [0.0203999989, 9.0, 10.0, 0.0], [-0.00209000008, 11.0, 12.0, 0.0], [0.000549999997, 13.0, 14.0, 0.0], [0.0110500008, 15.0, 16.0, 0.0], [0.0240500011, 17.0, 18.0, 0.0], [-0.00413500005, 19.0, 20.0, 0.0], [-0.00132499996, 21.0, 22.0, 0.0], [-0.164203256, 0.0, 0.0, 0.0], [-0.0221693404, 0.0, 0.0, 0.0], [0.013879722, 0.0, 0.0, 0.0], [0.106655173, 0.0, 0.0, 0.0], [-0.110155977, 0.0, 0.0, 0.0], [0.02685, 23.0, 24.0, 0.0], [0.00129484094, 0.0, 0.0, 0.0], [-0.130636185, 0.0, 0.0, 0.0], [0.154002279, 0.0, 0.0, 0.0], [0.0152596692, 0.0, 0.0, 0.0], [0.0876633748, 0.0, 0.0, 0.0], [-0.00582200522, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 4, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_941(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.537500024, 7.0, 8.0, 0.0], [-0.0775918663, 0.0, 0.0, 0.0], [0.0471119583, 0.0, 0.0, 0.0], [-0.00472885231, 0.0, 0.0, 0.0], [0.5255, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.513000011, 13.0, 14.0, 0.0], [-0.0627507642, 0.0, 0.0, 0.0], [0.0788420141, 0.0, 0.0, 0.0], [0.549000025, 15.0, 16.0, 0.0], [-0.000984078972, 0.0, 0.0, 0.0], [0.0383784324, 0.0, 0.0, 0.0], [-0.0431567095, 0.0, 0.0, 0.0], [0.0325882249, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_942(xs):
    #Predicts Class 0
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [-0.560500026, 3.0, 4.0, 1.0], [0.772500038, 5.0, 6.0, 2.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.0307350699, 0.0, 0.0, 0.0], [0.0340099931, 0.0, 0.0, 0.0], [-0.0040557147, 0.0, 0.0, 0.0], [-0.323500007, 9.0, 10.0, 0.0], [-0.817499995, 11.0, 12.0, 1.0], [0.0327334926, 0.0, 0.0, 0.0], [-0.765499949, 13.0, 14.0, 1.0], [-0.0183640253, 0.0, 0.0, 0.0], [-0.100999996, 15.0, 16.0, 0.0], [-0.00284674228, 0.0, 0.0, 0.0], [-0.0415239297, 0.0, 0.0, 0.0], [0.0318636484, 0.0, 0.0, 0.0], [-0.00592811918, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 11, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 10, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_943(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.256500006, 1.0, 2.0, 0.0], [-0.283500016, 3.0, 4.0, 0.0], [-0.99849999, 5.0, 6.0, 3.0], [-0.4745, 7.0, 8.0, 1.0], [-0.033699356, 0.0, 0.0, 0.0], [-0.0234984998, 0.0, 0.0, 0.0], [-0.801499963, 9.0, 10.0, 1.0], [-0.685500026, 11.0, 12.0, 1.0], [0.0253984742, 0.0, 0.0, 0.0], [-0.017914312, 0.0, 0.0, 0.0], [-0.210500002, 13.0, 14.0, 0.0], [0.00541835465, 0.0, 0.0, 0.0], [-0.0338979699, 0.0, 0.0, 0.0], [-0.956499994, 15.0, 16.0, 4.0], [0.473999977, 17.0, 18.0, 2.0], [0.0818401724, 0.0, 0.0, 0.0], [0.0137408348, 0.0, 0.0, 0.0], [0.015758574, 0.0, 0.0, 0.0], [-0.0429639257, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 9, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_944(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.401499987, 1.0, 2.0, 1.0], [-0.4745, 3.0, 4.0, 1.0], [0.026300177, 0.0, 0.0, 0.0], [-0.523499966, 5.0, 6.0, 1.0], [-0.0260645058, 0.0, 0.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [0.0281915143, 0.0, 0.0, 0.0], [-0.770500004, 9.0, 10.0, 1.0], [0.550500035, 11.0, 12.0, 2.0], [-0.0241366643, 0.0, 0.0, 0.0], [0.0359510407, 0.0, 0.0, 0.0], [0.0131339431, 0.0, 0.0, 0.0], [-0.0348358825, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_945(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 2.0], [-0.73150003, 3.0, 4.0, 2.0], [-0.00657499954, 5.0, 6.0, 0.0], [-0.770500004, 7.0, 8.0, 2.0], [0.00371999992, 9.0, 10.0, 0.0], [-0.523000002, 11.0, 12.0, 2.0], [-0.0700411797, 0.0, 0.0, 0.0], [-0.190499991, 13.0, 14.0, 0.0], [-0.0472206511, 0.0, 0.0, 0.0], [-0.0330824219, 0.0, 0.0, 0.0], [0.150194481, 0.0, 0.0, 0.0], [0.0397256464, 0.0, 0.0, 0.0], [-0.0161346439, 0.0, 0.0, 0.0], [-0.205500007, 15.0, 16.0, 0.0], [-0.140500009, 17.0, 18.0, 0.0], [-0.0105908178, 0.0, 0.0, 0.0], [0.0715233311, 0.0, 0.0, 0.0], [-0.0519315004, 0.0, 0.0, 0.0], [0.00112374942, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 9, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_946(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0477499999, 1.0, 2.0, 0.0], [0.0417999998, 3.0, 4.0, 0.0], [0.074149996, 5.0, 6.0, 0.0], [0.0353999995, 7.0, 8.0, 0.0], [-0.109467767, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0825999975, 11.0, 12.0, 0.0], [0.02685, 13.0, 14.0, 0.0], [0.0997960195, 0.0, 0.0, 0.0], [0.124039233, 0.0, 0.0, 0.0], [-0.0261383802, 0.0, 0.0, 0.0], [0.0760499984, 15.0, 16.0, 0.0], [0.0854000002, 17.0, 18.0, 0.0], [0.0234000012, 19.0, 20.0, 0.0], [-0.10560251, 0.0, 0.0, 0.0], [-0.0213798881, 0.0, 0.0, 0.0], [-0.129893541, 0.0, 0.0, 0.0], [0.0960642993, 0.0, 0.0, 0.0], [0.0873000026, 21.0, 22.0, 0.0], [-0.00257466594, 0.0, 0.0, 0.0], [0.0600399114, 0.0, 0.0, 0.0], [-0.0635760725, 0.0, 0.0, 0.0], [0.0114241084, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 10, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_947(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.348500013, 5.0, 6.0, 0.0], [-0.162, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [0.527500033, 13.0, 14.0, 0.0], [-0.1655, 15.0, 16.0, 0.0], [-0.153499991, 17.0, 18.0, 0.0], [-0.079227142, 0.0, 0.0, 0.0], [0.0104853641, 0.0, 0.0, 0.0], [-0.639999986, 19.0, 20.0, 2.0], [-0.0694638565, 0.0, 0.0, 0.0], [-0.99849999, 21.0, 22.0, 1.0], [0.0105074849, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [-0.051789768, 0.0, 0.0, 0.0], [0.0566461571, 0.0, 0.0, 0.0], [0.263000011, 25.0, 26.0, 0.0], [-0.885499954, 27.0, 28.0, 2.0], [-0.0299858171, 0.0, 0.0, 0.0], [0.437000006, 29.0, 30.0, 0.0], [0.0683364421, 0.0, 0.0, 0.0], [-0.0171190053, 0.0, 0.0, 0.0], [0.0370554477, 0.0, 0.0, 0.0], [-0.0226134807, 0.0, 0.0, 0.0], [0.00615824806, 0.0, 0.0, 0.0], [0.00836072396, 0.0, 0.0, 0.0], [0.0743272305, 0.0, 0.0, 0.0], [-0.0138272997, 0.0, 0.0, 0.0], [0.0565494224, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 17, 25, 26, 9, 10, 27, 28, 20, 12, 29, 30, 22, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 18, 4, 2, 5, 11, 19, 6, 13, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_948(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.730999947, 1.0, 2.0, 4.0], [0.6505, 3.0, 4.0, 2.0], [0.0202631392, 0.0, 0.0, 0.0], [-0.151499987, 5.0, 6.0, 0.0], [-0.196500003, 7.0, 8.0, 0.0], [0.591500044, 9.0, 10.0, 2.0], [-0.109499998, 11.0, 12.0, 0.0], [0.0376294591, 0.0, 0.0, 0.0], [-0.0249258187, 0.0, 0.0, 0.0], [-0.198500007, 13.0, 14.0, 0.0], [-0.0663737059, 0.0, 0.0, 0.0], [0.0353252925, 0.0, 0.0, 0.0], [-0.0101946415, 0.0, 0.0, 0.0], [0.00875699706, 0.0, 0.0, 0.0], [-0.0387823246, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_949(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.218499988, 1.0, 2.0, 0.0], [-0.226500005, 3.0, 4.0, 0.0], [-0.169499993, 5.0, 6.0, 0.0], [-0.74150002, 7.0, 8.0, 1.0], [-0.0393503644, 0.0, 0.0, 0.0], [-0.986500025, 9.0, 10.0, 3.0], [-0.0135423252, 0.0, 0.0, 0.0], [-0.790500045, 11.0, 12.0, 1.0], [-0.689499974, 13.0, 14.0, 1.0], [0.476500005, 15.0, 16.0, 2.0], [-0.0169844721, 0.0, 0.0, 0.0], [-0.00907132681, 0.0, 0.0, 0.0], [0.0549875759, 0.0, 0.0, 0.0], [-0.0431807414, 0.0, 0.0, 0.0], [-0.529500008, 17.0, 18.0, 1.0], [0.0679645985, 0.0, 0.0, 0.0], [0.00795128755, 0.0, 0.0, 0.0], [0.0341523848, 0.0, 0.0, 0.0], [-0.0258432124, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 17, 18, 4, 15, 16, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 14, 2, 5, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_950(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.568500042, 3.0, 4.0, 1.0], [0.656499982, 5.0, 6.0, 2.0], [0.605499983, 7.0, 8.0, 2.0], [-0.222499996, 9.0, 10.0, 0.0], [-0.00973102357, 0.0, 0.0, 0.0], [0.0383036211, 0.0, 0.0, 0.0], [-0.966500044, 11.0, 12.0, 3.0], [0.0336539298, 0.0, 0.0, 0.0], [0.00965015776, 0.0, 0.0, 0.0], [-0.0467221886, 0.0, 0.0, 0.0], [-0.778499961, 13.0, 14.0, 1.0], [0.0231377389, 0.0, 0.0, 0.0], [0.01213565, 0.0, 0.0, 0.0], [-0.0335582718, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_951(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.433499992, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.0781886429, 0.0, 0.0, 0.0], [0.506000042, 11.0, 12.0, 0.0], [0.429499984, 13.0, 14.0, 0.0], [0.436500013, 15.0, 16.0, 0.0], [-0.0717716366, 0.0, 0.0, 0.0], [-0.00912618451, 0.0, 0.0, 0.0], [-0.0471582748, 0.0, 0.0, 0.0], [0.537500024, 17.0, 18.0, 0.0], [0.421999991, 19.0, 20.0, 0.0], [-0.0797910765, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [-0.0112217376, 0.0, 0.0, 0.0], [0.522500038, 23.0, 24.0, 0.0], [0.543500006, 25.0, 26.0, 0.0], [-0.00153161038, 0.0, 0.0, 0.0], [0.101195425, 0.0, 0.0, 0.0], [0.108493574, 0.0, 0.0, 0.0], [-0.0118305897, 0.0, 0.0, 0.0], [0.0582790114, 0.0, 0.0, 0.0], [0.0240023267, 0.0, 0.0, 0.0], [-0.0558030978, 0.0, 0.0, 0.0], [0.00778197311, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 21, 22, 16, 9, 10, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 2, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_952(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.999500036, 3.0, 4.0, 4.0], [-0.41049999, 5.0, 6.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [0.0107000005, 9.0, 10.0, 0.0], [0.0355965607, 0.0, 0.0, 0.0], [-0.67050004, 11.0, 12.0, 2.0], [-0.0638578758, 0.0, 0.0, 0.0], [-0.38349998, 13.0, 14.0, 0.0], [-0.00337000005, 15.0, 16.0, 0.0], [0.0686499998, 17.0, 18.0, 0.0], [0.000444999954, 19.0, 20.0, 0.0], [-0.997500002, 21.0, 22.0, 1.0], [0.0839252099, 0.0, 0.0, 0.0], [0.0892499983, 23.0, 24.0, 0.0], [-0.0300000012, 25.0, 26.0, 0.0], [0.209340215, 0.0, 0.0, 0.0], [-0.125207633, 0.0, 0.0, 0.0], [0.0233606678, 0.0, 0.0, 0.0], [-0.206, 27.0, 28.0, 0.0], [0.024099797, 0.0, 0.0, 0.0], [-0.99849999, 29.0, 30.0, 4.0], [-0.0476201586, 0.0, 0.0, 0.0], [-0.00453816075, 0.0, 0.0, 0.0], [0.0238160379, 0.0, 0.0, 0.0], [0.0210548211, 0.0, 0.0, 0.0], [-0.0840499401, 0.0, 0.0, 0.0], [-0.0101952441, 0.0, 0.0, 0.0], [-0.111172087, 0.0, 0.0, 0.0], [0.0828184932, 0.0, 0.0, 0.0], [-0.03096129, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 23, 24, 25, 26, 16, 17, 18, 5, 27, 28, 20, 29, 30, 22])
    branch_indices = np.array([0, 1, 3, 8, 14, 4, 9, 15, 10, 2, 6, 11, 19, 12, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_953(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.556499958, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.537500024, 7.0, 8.0, 0.0], [0.557999969, 9.0, 10.0, 0.0], [0.0453965701, 0.0, 0.0, 0.0], [-0.000789828191, 0.0, 0.0, 0.0], [0.521499991, 11.0, 12.0, 0.0], [0.543500006, 13.0, 14.0, 0.0], [-0.0600400232, 0.0, 0.0, 0.0], [-0.00795233063, 0.0, 0.0, 0.0], [-0.851999998, 15.0, 16.0, 2.0], [0.522500038, 17.0, 18.0, 0.0], [0.0581537336, 0.0, 0.0, 0.0], [0.0077625406, 0.0, 0.0, 0.0], [0.00561322831, 0.0, 0.0, 0.0], [-0.0307004265, 0.0, 0.0, 0.0], [-0.071245797, 0.0, 0.0, 0.0], [-0.0220795311, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_954(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.836500049, 3.0, 4.0, 4.0], [-0.955500007, 5.0, 6.0, 4.0], [-0.722499967, 7.0, 8.0, 1.0], [-0.967999995, 9.0, 10.0, 3.0], [0.0138383536, 0.0, 0.0, 0.0], [-0.0360964872, 0.0, 0.0, 0.0], [-0.80250001, 11.0, 12.0, 1.0], [-0.675000012, 13.0, 14.0, 1.0], [0.0402214676, 0.0, 0.0, 0.0], [0.00615829416, 0.0, 0.0, 0.0], [-0.825500011, 15.0, 16.0, 1.0], [-0.986500025, 17.0, 18.0, 3.0], [-0.041559469, 0.0, 0.0, 0.0], [-0.213499993, 19.0, 20.0, 0.0], [0.0171744525, 0.0, 0.0, 0.0], [-0.0448814481, 0.0, 0.0, 0.0], [0.05073772, 0.0, 0.0, 0.0], [-0.00877808593, 0.0, 0.0, 0.0], [-0.0294838697, 0.0, 0.0, 0.0], [0.0253279097, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 19, 20, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_955(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.729499996, 1.0, 2.0, 1.0], [-0.78550005, 3.0, 4.0, 1.0], [-0.651499987, 5.0, 6.0, 1.0], [-0.236499995, 7.0, 8.0, 0.0], [-0.237500012, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 2.0], [-0.242500007, 13.0, 14.0, 0.0], [-0.0183611866, 0.0, 0.0, 0.0], [-0.965499997, 15.0, 16.0, 4.0], [0.00230235723, 0.0, 0.0, 0.0], [-0.0471500456, 0.0, 0.0, 0.0], [-0.00597129948, 0.0, 0.0, 0.0], [0.0447315536, 0.0, 0.0, 0.0], [-0.932500005, 17.0, 18.0, 4.0], [-0.0288483351, 0.0, 0.0, 0.0], [-0.00970282778, 0.0, 0.0, 0.0], [0.0532895736, 0.0, 0.0, 0.0], [0.0361267067, 0.0, 0.0, 0.0], [-0.0101097617, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 9, 10, 11, 12, 17, 18, 14])
    branch_indices = np.array([0, 1, 3, 8, 4, 2, 5, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_956(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.968500018, 1.0, 2.0, 4.0], [-0.208499998, 3.0, 4.0, 0.0], [0.455500007, 5.0, 6.0, 2.0], [0.0164597575, 0.0, 0.0, 0.0], [-0.0402002595, 0.0, 0.0, 0.0], [-0.0227057561, 0.0, 0.0, 0.0], [0.598500013, 7.0, 8.0, 2.0], [-0.988499999, 9.0, 10.0, 3.0], [-0.975499988, 11.0, 12.0, 3.0], [0.0536010787, 0.0, 0.0, 0.0], [-0.00407126779, 0.0, 0.0, 0.0], [0.730499983, 13.0, 14.0, 2.0], [-0.234499991, 15.0, 16.0, 0.0], [-0.0377666056, 0.0, 0.0, 0.0], [0.0191214159, 0.0, 0.0, 0.0], [0.0317227803, 0.0, 0.0, 0.0], [-0.00285180937, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 10, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 2, 6, 7, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_957(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.00200500013, 1.0, 2.0, 0.0], [-0.00463499967, 3.0, 4.0, 0.0], [-0.000944999978, 5.0, 6.0, 0.0], [-0.0052199997, 7.0, 8.0, 0.0], [-0.14171122, 0.0, 0.0, 0.0], [0.134720743, 0.0, 0.0, 0.0], [0.00171500002, 9.0, 10.0, 0.0], [-0.00894000009, 11.0, 12.0, 0.0], [0.1246273, 0.0, 0.0, 0.0], [-0.110196173, 0.0, 0.0, 0.0], [0.00325499987, 13.0, 14.0, 0.0], [-0.0154499998, 15.0, 16.0, 0.0], [-0.147445858, 0.0, 0.0, 0.0], [0.122979164, 0.0, 0.0, 0.0], [0.00588999968, 17.0, 18.0, 0.0], [-0.00203061709, 0.0, 0.0, 0.0], [0.0640921667, 0.0, 0.0, 0.0], [-0.0920255631, 0.0, 0.0, 0.0], [0.00308918231, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_958(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00200500013, 1.0, 2.0, 0.0], [-0.00463499967, 3.0, 4.0, 0.0], [-0.000944999978, 5.0, 6.0, 0.0], [-0.0052199997, 7.0, 8.0, 0.0], [0.143616408, 0.0, 0.0, 0.0], [-0.12936388, 0.0, 0.0, 0.0], [0.00146499998, 9.0, 10.0, 0.0], [-0.00894000009, 11.0, 12.0, 0.0], [-0.122912504, 0.0, 0.0, 0.0], [0.111706726, 0.0, 0.0, 0.0], [0.00325499987, 13.0, 14.0, 0.0], [-0.0150499996, 15.0, 16.0, 0.0], [0.15615724, 0.0, 0.0, 0.0], [-0.121615879, 0.0, 0.0, 0.0], [0.0079549998, 17.0, 18.0, 0.0], [0.00107588281, 0.0, 0.0, 0.0], [-0.106193691, 0.0, 0.0, 0.0], [0.0556629226, 0.0, 0.0, 0.0], [-0.00977320131, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_959(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.431500018, 3.0, 4.0, 0.0], [0.348500013, 5.0, 6.0, 0.0], [0.424000025, 7.0, 8.0, 0.0], [0.4375, 9.0, 10.0, 0.0], [-0.29549998, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [0.419499993, 15.0, 16.0, 0.0], [0.169256285, 0.0, 0.0, 0.0], [0.433499992, 17.0, 18.0, 0.0], [0.446500003, 19.0, 20.0, 0.0], [-0.923500001, 21.0, 22.0, 2.0], [-0.0371000022, 23.0, 24.0, 0.0], [0.527500033, 25.0, 26.0, 0.0], [0.0642023981, 0.0, 0.0, 0.0], [0.409500003, 27.0, 28.0, 0.0], [-0.0697615519, 0.0, 0.0, 0.0], [-0.017593829, 0.0, 0.0, 0.0], [-0.0822986737, 0.0, 0.0, 0.0], [0.0537543073, 0.0, 0.0, 0.0], [0.46450001, 29.0, 30.0, 0.0], [0.00642285123, 0.0, 0.0, 0.0], [0.0552315265, 0.0, 0.0, 0.0], [-0.0762318447, 0.0, 0.0, 0.0], [0.228500009, 31.0, 32.0, 0.0], [0.437000006, 33.0, 34.0, 0.0], [-0.024066817, 0.0, 0.0, 0.0], [-0.00754352566, 0.0, 0.0, 0.0], [0.0849597678, 0.0, 0.0, 0.0], [-0.0913762823, 0.0, 0.0, 0.0], [-0.000142824952, 0.0, 0.0, 0.0], [0.0457749404, 0.0, 0.0, 0.0], [-0.0518183932, 0.0, 0.0, 0.0], [0.0136512918, 0.0, 0.0, 0.0], [0.0635895208, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 8, 17, 18, 19, 29, 30, 21, 22, 23, 31, 32, 33, 34, 26, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 10, 20, 2, 5, 11, 12, 24, 6, 13, 25])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_960(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0250920504, 0.0, 0.0, 0.0], [0.398499995, 3.0, 4.0, 2.0], [0.0273286793, 0.0, 0.0, 0.0], [0.463499993, 5.0, 6.0, 2.0], [-0.2095, 7.0, 8.0, 0.0], [-0.578999996, 9.0, 10.0, 1.0], [-4.98043555e-05, 0.0, 0.0, 0.0], [-0.0455671139, 0.0, 0.0, 0.0], [-0.847000003, 11.0, 12.0, 4.0], [0.715000033, 13.0, 14.0, 2.0], [0.0218217, 0.0, 0.0, 0.0], [-0.0205326639, 0.0, 0.0, 0.0], [-0.0341111869, 0.0, 0.0, 0.0], [0.00925040059, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 8, 11, 12, 13, 14])
    branch_indices = np.array([0, 2, 4, 5, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_961(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.95449996, 3.0, 4.0, 3.0], [0.612499952, 5.0, 6.0, 2.0], [-0.236499995, 7.0, 8.0, 0.0], [0.0304143932, 0.0, 0.0, 0.0], [-0.028732514, 0.0, 0.0, 0.0], [0.00342644192, 0.0, 0.0, 0.0], [-0.987499952, 9.0, 10.0, 3.0], [-0.972499967, 11.0, 12.0, 4.0], [-0.997500002, 13.0, 14.0, 3.0], [-0.0538741164, 0.0, 0.0, 0.0], [-0.789499998, 15.0, 16.0, 1.0], [-0.207500011, 17.0, 18.0, 0.0], [-0.0165192019, 0.0, 0.0, 0.0], [0.0359979384, 0.0, 0.0, 0.0], [0.00390631566, 0.0, 0.0, 0.0], [-0.0366068371, 0.0, 0.0, 0.0], [0.0485970229, 0.0, 0.0, 0.0], [0.00772395125, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_962(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.161500007, 3.0, 4.0, 0.0], [-0.0212497246, 0.0, 0.0, 0.0], [0.602499962, 5.0, 6.0, 2.0], [-0.918500006, 7.0, 8.0, 4.0], [-0.716500044, 9.0, 10.0, 1.0], [-0.824499965, 11.0, 12.0, 4.0], [-0.0156197306, 0.0, 0.0, 0.0], [0.0562239587, 0.0, 0.0, 0.0], [0.0143232821, 0.0, 0.0, 0.0], [-0.590000033, 13.0, 14.0, 1.0], [-0.929499984, 15.0, 16.0, 4.0], [-0.0316077098, 0.0, 0.0, 0.0], [-0.0524015948, 0.0, 0.0, 0.0], [-0.013185462, 0.0, 0.0, 0.0], [0.000129816268, 0.0, 0.0, 0.0], [0.0593847297, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 15, 16, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 11, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_963(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.851999998, 1.0, 2.0, 2.0], [-0.885499954, 3.0, 4.0, 2.0], [-0.644500017, 5.0, 6.0, 2.0], [0.534000039, 7.0, 8.0, 0.0], [-0.0566930659, 0.0, 0.0, 0.0], [0.0784000009, 9.0, 10.0, 0.0], [-0.00657499954, 11.0, 12.0, 0.0], [0.513000011, 13.0, 14.0, 0.0], [0.539999962, 15.0, 16.0, 0.0], [0.0242500007, 17.0, 18.0, 0.0], [0.0977100283, 0.0, 0.0, 0.0], [-0.523000002, 19.0, 20.0, 2.0], [-0.0524451509, 0.0, 0.0, 0.0], [0.503000021, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [0.0927290097, 0.0, 0.0, 0.0], [0.618499994, 25.0, 26.0, 0.0], [-0.747500002, 27.0, 28.0, 2.0], [-0.0910680145, 0.0, 0.0, 0.0], [0.0320732892, 0.0, 0.0, 0.0], [-0.018146744, 0.0, 0.0, 0.0], [-0.00208759867, 0.0, 0.0, 0.0], [0.0728921518, 0.0, 0.0, 0.0], [-0.0659961104, 0.0, 0.0, 0.0], [0.00679232134, 0.0, 0.0, 0.0], [0.0144486846, 0.0, 0.0, 0.0], [-0.0244830381, 0.0, 0.0, 0.0], [0.0652704388, 0.0, 0.0, 0.0], [-0.0246255286, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 4, 27, 28, 18, 10, 19, 20, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 9, 17, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_964(xs):
    #Predicts Class 4
    function_dict = np.array([[0.157999992, 1.0, 2.0, 0.0], [0.1105, 3.0, 4.0, 0.0], [0.193500012, 5.0, 6.0, 0.0], [0.0923999995, 7.0, 8.0, 0.0], [0.0788234398, 0.0, 0.0, 0.0], [-0.0944297388, 0.0, 0.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0912000015, 11.0, 12.0, 0.0], [-0.0718298405, 0.0, 0.0, 0.0], [0.195499986, 13.0, 14.0, 0.0], [-0.0322275572, 0.0, 0.0, 0.0], [0.0888999999, 15.0, 16.0, 0.0], [0.0940549299, 0.0, 0.0, 0.0], [0.00228193402, 0.0, 0.0, 0.0], [0.0431194678, 0.0, 0.0, 0.0], [-0.000518030429, 0.0, 0.0, 0.0], [-0.0658645704, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 13, 14, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_965(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0373146944, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0614417084, 0.0, 0.0, 0.0], [0.534000039, 7.0, 8.0, 0.0], [0.0705744624, 0.0, 0.0, 0.0], [0.513000011, 9.0, 10.0, 0.0], [0.539999962, 11.0, 12.0, 0.0], [0.00116575439, 0.0, 0.0, 0.0], [0.0405623391, 0.0, 0.0, 0.0], [-0.0918989778, 0.0, 0.0, 0.0], [0.00366713433, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_966(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.916499972, 1.0, 2.0, 4.0], [-0.2755, 3.0, 4.0, 0.0], [-0.847499967, 5.0, 6.0, 4.0], [-0.0411167182, 0.0, 0.0, 0.0], [-0.657500029, 7.0, 8.0, 1.0], [-0.980499983, 9.0, 10.0, 3.0], [0.685000002, 11.0, 12.0, 2.0], [-0.184500009, 13.0, 14.0, 0.0], [-0.0340196677, 0.0, 0.0, 0.0], [0.0512252674, 0.0, 0.0, 0.0], [-0.0124638993, 0.0, 0.0, 0.0], [0.0231606271, 0.0, 0.0, 0.0], [-0.0352790505, 0.0, 0.0, 0.0], [0.504500031, 15.0, 16.0, 2.0], [-0.794499993, 17.0, 18.0, 1.0], [0.000208587837, 0.0, 0.0, 0.0], [0.0621825196, 0.0, 0.0, 0.0], [0.0174225643, 0.0, 0.0, 0.0], [-0.0470172353, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 15, 16, 17, 18, 8, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_967(xs):
    #Predicts Class 1
    function_dict = np.array([[0.67750001, 1.0, 2.0, 2.0], [0.602499962, 3.0, 4.0, 2.0], [0.0219591167, 0.0, 0.0, 0.0], [-0.291500002, 5.0, 6.0, 0.0], [-0.0296916831, 0.0, 0.0, 0.0], [0.0388459861, 0.0, 0.0, 0.0], [-0.969500005, 7.0, 8.0, 4.0], [0.461499989, 9.0, 10.0, 2.0], [0.455500007, 11.0, 12.0, 2.0], [-0.0144714024, 0.0, 0.0, 0.0], [0.0635952204, 0.0, 0.0, 0.0], [0.0107521741, 0.0, 0.0, 0.0], [-0.039609801, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 10, 11, 12, 4, 2])
    branch_indices = np.array([0, 1, 3, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_968(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.691499949, 1.0, 2.0, 1.0], [-0.961500049, 3.0, 4.0, 4.0], [-0.624500036, 5.0, 6.0, 1.0], [0.436500013, 7.0, 8.0, 2.0], [-0.0370472111, 0.0, 0.0, 0.0], [0.0342335925, 0.0, 0.0, 0.0], [-0.158500001, 9.0, 10.0, 0.0], [-0.0172353145, 0.0, 0.0, 0.0], [0.0306470115, 0.0, 0.0, 0.0], [-0.257499993, 11.0, 12.0, 0.0], [0.0244803783, 0.0, 0.0, 0.0], [-0.436500013, 13.0, 14.0, 1.0], [-0.526499987, 15.0, 16.0, 1.0], [0.0337917916, 0.0, 0.0, 0.0], [-0.0190056562, 0.0, 0.0, 0.0], [0.0109291691, 0.0, 0.0, 0.0], [-0.0525059626, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 13, 14, 15, 16, 10])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_969(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0909000039, 3.0, 4.0, 0.0], [-0.0286398716, 0.0, 0.0, 0.0], [-0.0927000046, 5.0, 6.0, 0.0], [-0.0802000016, 7.0, 8.0, 0.0], [-0.0987499952, 9.0, 10.0, 0.0], [0.135533452, 0.0, 0.0, 0.0], [-0.10754659, 0.0, 0.0, 0.0], [-0.0743499994, 11.0, 12.0, 0.0], [-0.103500001, 13.0, 14.0, 0.0], [-0.106164306, 0.0, 0.0, 0.0], [-0.0762000009, 15.0, 16.0, 0.0], [-0.0600499995, 17.0, 18.0, 0.0], [0.00016280479, 0.0, 0.0, 0.0], [0.0533418134, 0.0, 0.0, 0.0], [-0.0232335832, 0.0, 0.0, 0.0], [0.141661316, 0.0, 0.0, 0.0], [-0.0943286121, 0.0, 0.0, 0.0], [0.00210646936, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 15, 16, 17, 18, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_970(xs):
    #Predicts Class 4
    function_dict = np.array([[0.111500002, 1.0, 2.0, 0.0], [0.0941499993, 3.0, 4.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.0809468627, 0.0, 0.0, 0.0], [-0.0950344726, 0.0, 0.0, 0.0], [0.194499999, 9.0, 10.0, 0.0], [0.0850500017, 11.0, 12.0, 0.0], [-0.0690592006, 0.0, 0.0, 0.0], [0.0405930206, 0.0, 0.0, 0.0], [0.202500001, 13.0, 14.0, 0.0], [0.0776499957, 15.0, 16.0, 0.0], [0.0885500014, 17.0, 18.0, 0.0], [-0.0455037542, 0.0, 0.0, 0.0], [0.0231704172, 0.0, 0.0, 0.0], [-0.00112475723, 0.0, 0.0, 0.0], [-0.0878176093, 0.0, 0.0, 0.0], [0.0349701568, 0.0, 0.0, 0.0], [0.0879134014, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_971(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.253000021, 5.0, 6.0, 0.0], [-0.394999981, 7.0, 8.0, 0.0], [-0.0436286591, 0.0, 0.0, 0.0], [-0.193500012, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [-0.429499984, 13.0, 14.0, 0.0], [-0.164499998, 15.0, 16.0, 0.0], [-0.360500008, 17.0, 18.0, 0.0], [0.172499999, 19.0, 20.0, 0.0], [0.0786575451, 0.0, 0.0, 0.0], [0.43599999, 21.0, 22.0, 0.0], [0.0042456775, 0.0, 0.0, 0.0], [-0.0557593256, 0.0, 0.0, 0.0], [-0.344999999, 23.0, 24.0, 0.0], [-0.155499995, 25.0, 26.0, 0.0], [-0.00754737714, 0.0, 0.0, 0.0], [0.0633072555, 0.0, 0.0, 0.0], [-0.0574696027, 0.0, 0.0, 0.0], [-0.0163243152, 0.0, 0.0, 0.0], [-0.044261232, 0.0, 0.0, 0.0], [0.0397646539, 0.0, 0.0, 0.0], [0.0547448397, 0.0, 0.0, 0.0], [0.0182375684, 0.0, 0.0, 0.0], [-0.0773821175, 0.0, 0.0, 0.0], [0.00447629532, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 23, 24, 25, 26, 4, 17, 18, 19, 20, 11, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 16, 2, 5, 9, 10, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_972(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [0.442499995, 3.0, 4.0, 2.0], [-0.96449995, 5.0, 6.0, 4.0], [-0.229499996, 7.0, 8.0, 0.0], [-0.230500013, 9.0, 10.0, 0.0], [-0.0233057626, 0.0, 0.0, 0.0], [0.669499993, 11.0, 12.0, 2.0], [-0.0210154951, 0.0, 0.0, 0.0], [0.0469985008, 0.0, 0.0, 0.0], [-0.977499962, 13.0, 14.0, 3.0], [-0.98150003, 15.0, 16.0, 3.0], [-0.109499998, 17.0, 18.0, 0.0], [-0.00636612717, 0.0, 0.0, 0.0], [-0.996500015, 19.0, 20.0, 3.0], [-0.0191186871, 0.0, 0.0, 0.0], [-0.95449996, 21.0, 22.0, 4.0], [0.0102379434, 0.0, 0.0, 0.0], [0.0615133606, 0.0, 0.0, 0.0], [0.00264544087, 0.0, 0.0, 0.0], [-0.0152241513, 0.0, 0.0, 0.0], [0.0404676236, 0.0, 0.0, 0.0], [-0.0129676973, 0.0, 0.0, 0.0], [-0.0783719495, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 19, 20, 14, 21, 22, 16, 5, 17, 18, 12])
    branch_indices = np.array([0, 1, 3, 4, 9, 13, 10, 15, 2, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_973(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.132499993, 1.0, 2.0, 0.0], [-0.946500003, 3.0, 4.0, 4.0], [-0.016983727, 0.0, 0.0, 0.0], [-0.74150002, 5.0, 6.0, 1.0], [-0.908499956, 7.0, 8.0, 4.0], [0.435499996, 9.0, 10.0, 2.0], [-0.681499958, 11.0, 12.0, 1.0], [-0.63349998, 13.0, 14.0, 1.0], [0.634000003, 15.0, 16.0, 2.0], [0.0550251901, 0.0, 0.0, 0.0], [-0.000487441866, 0.0, 0.0, 0.0], [-0.0328794457, 0.0, 0.0, 0.0], [0.570500016, 17.0, 18.0, 2.0], [-0.931499958, 19.0, 20.0, 4.0], [0.00366050098, 0.0, 0.0, 0.0], [0.0282121822, 0.0, 0.0, 0.0], [-0.0103805037, 0.0, 0.0, 0.0], [0.0429198705, 0.0, 0.0, 0.0], [-0.013328271, 0.0, 0.0, 0.0], [-0.0522584282, 0.0, 0.0, 0.0], [-0.0021042875, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 17, 18, 19, 20, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 12, 4, 7, 13, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_974(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [-0.864500046, 3.0, 4.0, 4.0], [-0.661499977, 5.0, 6.0, 1.0], [-0.919499993, 7.0, 8.0, 4.0], [0.0314146169, 0.0, 0.0, 0.0], [-0.035356611, 0.0, 0.0, 0.0], [0.00434472878, 0.0, 0.0, 0.0], [-0.968500018, 9.0, 10.0, 4.0], [-0.0436189324, 0.0, 0.0, 0.0], [-0.0181948394, 0.0, 0.0, 0.0], [-0.242500007, 11.0, 12.0, 0.0], [-0.0036825873, 0.0, 0.0, 0.0], [0.0452252738, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 11, 12, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_975(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.73150003, 1.0, 2.0, 2.0], [-0.770500004, 3.0, 4.0, 2.0], [0.0087799998, 5.0, 6.0, 0.0], [-0.995499969, 7.0, 8.0, 1.0], [-0.0425218083, 0.0, 0.0, 0.0], [-0.1215, 9.0, 10.0, 0.0], [-0.620499969, 11.0, 12.0, 2.0], [-0.99849999, 13.0, 14.0, 1.0], [0.0408705547, 0.0, 0.0, 0.0], [-0.208499998, 15.0, 16.0, 0.0], [-0.0594791248, 0.0, 0.0, 0.0], [0.121459939, 0.0, 0.0, 0.0], [-0.00624406058, 0.0, 0.0, 0.0], [-0.282999992, 17.0, 18.0, 0.0], [-0.0348687395, 0.0, 0.0, 0.0], [0.00547623495, 0.0, 0.0, 0.0], [0.0404265523, 0.0, 0.0, 0.0], [0.02503567, 0.0, 0.0, 0.0], [-0.000891844509, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 15, 16, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_976(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.721500039, 1.0, 2.0, 2.0], [-0.997500002, 3.0, 4.0, 1.0], [0.00526000001, 5.0, 6.0, 0.0], [-0.408500016, 7.0, 8.0, 0.0], [0.0525352359, 0.0, 0.0, 0.0], [-0.120499998, 9.0, 10.0, 0.0], [-0.103401773, 0.0, 0.0, 0.0], [-0.0764515623, 0.0, 0.0, 0.0], [-0.297500014, 11.0, 12.0, 0.0], [-0.211499989, 13.0, 14.0, 0.0], [0.0561870672, 0.0, 0.0, 0.0], [-0.393000007, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.0323101915, 0.0, 0.0, 0.0], [-0.0879444405, 0.0, 0.0, 0.0], [-0.0154865757, 0.0, 0.0, 0.0], [0.0964167938, 0.0, 0.0, 0.0], [0.00036343906, 0.0, 0.0, 0.0], [-0.0488197878, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 17, 18, 4, 13, 14, 10, 6])
    branch_indices = np.array([0, 1, 3, 8, 11, 12, 2, 5, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_977(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.556499958, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.537500024, 7.0, 8.0, 0.0], [0.557999969, 9.0, 10.0, 0.0], [0.0504193418, 0.0, 0.0, 0.0], [-0.00295197242, 0.0, 0.0, 0.0], [0.521499991, 11.0, 12.0, 0.0], [0.543500006, 13.0, 14.0, 0.0], [-0.0413964242, 0.0, 0.0, 0.0], [-0.0098772943, 0.0, 0.0, 0.0], [0.466499984, 15.0, 16.0, 0.0], [-0.0530226864, 0.0, 0.0, 0.0], [0.0536763929, 0.0, 0.0, 0.0], [0.0107548004, 0.0, 0.0, 0.0], [0.00013702485, 0.0, 0.0, 0.0], [0.0407432802, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 13, 14, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_978(xs):
    #Predicts Class 0
    function_dict = np.array([[0.576499999, 1.0, 2.0, 2.0], [-0.950500011, 3.0, 4.0, 3.0], [-0.234499991, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 3.0], [0.0246391296, 0.0, 0.0, 0.0], [-0.294499993, 9.0, 10.0, 0.0], [-0.992499948, 11.0, 12.0, 3.0], [0.444000006, 13.0, 14.0, 2.0], [-0.766499996, 15.0, 16.0, 1.0], [0.0201806687, 0.0, 0.0, 0.0], [-0.0330111124, 0.0, 0.0, 0.0], [-0.0146228336, 0.0, 0.0, 0.0], [-0.86650002, 17.0, 18.0, 4.0], [-0.00880405772, 0.0, 0.0, 0.0], [0.0268741604, 0.0, 0.0, 0.0], [0.411000013, 19.0, 20.0, 2.0], [-0.0563170724, 0.0, 0.0, 0.0], [0.0566826649, 0.0, 0.0, 0.0], [0.0149721187, 0.0, 0.0, 0.0], [-0.0281727146, 0.0, 0.0, 0.0], [0.0172797423, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 19, 20, 16, 4, 9, 10, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 2, 5, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_979(xs):
    #Predicts Class 1
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [-0.940500021, 3.0, 4.0, 4.0], [-0.334500015, 5.0, 6.0, 0.0], [-0.195499986, 7.0, 8.0, 0.0], [0.0131307309, 0.0, 0.0, 0.0], [-0.0198630355, 0.0, 0.0, 0.0], [-0.665500045, 9.0, 10.0, 1.0], [-0.801499963, 11.0, 12.0, 1.0], [-0.0412158072, 0.0, 0.0, 0.0], [-0.74849999, 13.0, 14.0, 1.0], [-0.948500037, 15.0, 16.0, 4.0], [-0.0292565245, 0.0, 0.0, 0.0], [0.0265075937, 0.0, 0.0, 0.0], [0.00237123808, 0.0, 0.0, 0.0], [0.0546562262, 0.0, 0.0, 0.0], [-0.0288980659, 0.0, 0.0, 0.0], [0.019634584, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_980(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.401499987, 1.0, 2.0, 1.0], [0.667500019, 3.0, 4.0, 2.0], [0.0252180435, 0.0, 0.0, 0.0], [-0.962499976, 5.0, 6.0, 4.0], [0.722499967, 7.0, 8.0, 2.0], [0.438499987, 9.0, 10.0, 2.0], [-0.939499974, 11.0, 12.0, 3.0], [-0.0435794741, 0.0, 0.0, 0.0], [0.00244285376, 0.0, 0.0, 0.0], [0.0113050183, 0.0, 0.0, 0.0], [-0.0336039141, 0.0, 0.0, 0.0], [-0.99150002, 13.0, 14.0, 3.0], [-0.0276183542, 0.0, 0.0, 0.0], [-0.000494016218, 0.0, 0.0, 0.0], [0.0500066578, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 13, 14, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 11, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_981(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.127499998, 1.0, 2.0, 0.0], [-0.137499988, 3.0, 4.0, 0.0], [-0.1105, 5.0, 6.0, 0.0], [-0.140500009, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.104499996, 13.0, 14.0, 0.0], [-0.185499996, 15.0, 16.0, 0.0], [-0.138500005, 17.0, 18.0, 0.0], [-0.13350001, 19.0, 20.0, 0.0], [-0.130499989, 21.0, 22.0, 0.0], [-0.116499998, 23.0, 24.0, 0.0], [0.156739041, 0.0, 0.0, 0.0], [-0.0767361447, 0.0, 0.0, 0.0], [-0.102499999, 25.0, 26.0, 0.0], [-0.186500013, 27.0, 28.0, 0.0], [-0.146499991, 29.0, 30.0, 0.0], [-0.139499992, 31.0, 32.0, 0.0], [0.061814405, 0.0, 0.0, 0.0], [-0.134499997, 33.0, 34.0, 0.0], [-0.110227332, 0.0, 0.0, 0.0], [-0.0699607506, 0.0, 0.0, 0.0], [0.114152744, 0.0, 0.0, 0.0], [-0.120499998, 35.0, 36.0, 0.0], [-0.0679920241, 0.0, 0.0, 0.0], [0.0970748067, 0.0, 0.0, 0.0], [-0.0989499986, 37.0, 38.0, 0.0], [-0.0106062377, 0.0, 0.0, 0.0], [0.0878217742, 0.0, 0.0, 0.0], [-0.109495379, 0.0, 0.0, 0.0], [-0.00720902858, 0.0, 0.0, 0.0], [0.0420875773, 0.0, 0.0, 0.0], [-0.00772488629, 0.0, 0.0, 0.0], [-0.00527403411, 0.0, 0.0, 0.0], [-0.0134982271, 0.0, 0.0, 0.0], [-0.0215563923, 0.0, 0.0, 0.0], [0.0864756182, 0.0, 0.0, 0.0], [-0.0771737769, 0.0, 0.0, 0.0], [0.00293681398, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 31, 32, 18, 33, 34, 20, 21, 22, 35, 36, 24, 12, 13, 25, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 19, 10, 2, 5, 11, 23, 6, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_982(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0998999998, 1.0, 2.0, 0.0], [-0.102499999, 3.0, 4.0, 0.0], [-0.0965999961, 5.0, 6.0, 0.0], [-0.104499996, 7.0, 8.0, 0.0], [0.0781040341, 0.0, 0.0, 0.0], [-0.129868805, 0.0, 0.0, 0.0], [-0.0907500014, 9.0, 10.0, 0.0], [-0.108500004, 11.0, 12.0, 0.0], [-0.0958795547, 0.0, 0.0, 0.0], [-0.0914499983, 13.0, 14.0, 0.0], [-0.0869500041, 15.0, 16.0, 0.0], [-0.1175, 17.0, 18.0, 0.0], [0.0771847889, 0.0, 0.0, 0.0], [-0.00783753861, 0.0, 0.0, 0.0], [0.117971346, 0.0, 0.0, 0.0], [-0.155611336, 0.0, 0.0, 0.0], [-0.0720499977, 19.0, 20.0, 0.0], [0.00326930708, 0.0, 0.0, 0.0], [-0.0821969137, 0.0, 0.0, 0.0], [-0.0419788398, 0.0, 0.0, 0.0], [0.000759929477, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_983(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.0315500014, 3.0, 4.0, 0.0], [0.035239283, 0.0, 0.0, 0.0], [-0.0748500004, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [-0.149500012, 9.0, 10.0, 0.0], [0.105017029, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.444000006, 13.0, 14.0, 0.0], [-0.161500007, 15.0, 16.0, 0.0], [-0.0780638978, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.0770762637, 0.0, 0.0, 0.0], [-0.0884814337, 0.0, 0.0, 0.0], [0.0116423192, 0.0, 0.0, 0.0], [-0.00390538503, 0.0, 0.0, 0.0], [0.0300347414, 0.0, 0.0, 0.0], [-0.00177192537, 0.0, 0.0, 0.0], [-0.0720093027, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 17, 18, 12, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 11, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_984(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.934499979, 1.0, 2.0, 4.0], [-0.994500041, 3.0, 4.0, 3.0], [-0.138500005, 5.0, 6.0, 0.0], [0.439500004, 7.0, 8.0, 2.0], [-0.766000032, 9.0, 10.0, 1.0], [-0.269500017, 11.0, 12.0, 0.0], [-0.0278358515, 0.0, 0.0, 0.0], [-0.0488921329, 0.0, 0.0, 0.0], [0.5255, 13.0, 14.0, 2.0], [0.035136044, 0.0, 0.0, 0.0], [-0.0119204866, 0.0, 0.0, 0.0], [-0.0152918166, 0.0, 0.0, 0.0], [-0.940500021, 15.0, 16.0, 3.0], [0.0115172202, 0.0, 0.0, 0.0], [-0.024024317, 0.0, 0.0, 0.0], [-0.230500013, 17.0, 18.0, 0.0], [-0.00260520657, 0.0, 0.0, 0.0], [0.0870371535, 0.0, 0.0, 0.0], [-0.00105423899, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 9, 10, 11, 17, 18, 16, 6])
    branch_indices = np.array([0, 1, 3, 8, 4, 2, 5, 12, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_985(xs):
    #Predicts Class 1
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [0.386500001, 3.0, 4.0, 2.0], [-0.944499969, 5.0, 6.0, 4.0], [-0.208499998, 7.0, 8.0, 0.0], [-0.996500015, 9.0, 10.0, 3.0], [-0.664499998, 11.0, 12.0, 1.0], [-0.237500012, 13.0, 14.0, 0.0], [-0.013366661, 0.0, 0.0, 0.0], [0.0277504213, 0.0, 0.0, 0.0], [0.0145413084, 0.0, 0.0, 0.0], [-0.0419525541, 0.0, 0.0, 0.0], [0.044861488, 0.0, 0.0, 0.0], [-0.541499972, 15.0, 16.0, 1.0], [-0.332499981, 17.0, 18.0, 0.0], [-0.0394758694, 0.0, 0.0, 0.0], [-0.0237603877, 0.0, 0.0, 0.0], [0.0200706199, 0.0, 0.0, 0.0], [-0.0169912949, 0.0, 0.0, 0.0], [0.638000011, 19.0, 20.0, 2.0], [0.0430764556, 0.0, 0.0, 0.0], [-0.00501603028, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 15, 16, 17, 19, 20, 14])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 12, 6, 13, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_986(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.911499977, 1.0, 2.0, 3.0], [-0.993499994, 3.0, 4.0, 3.0], [0.0226698797, 0.0, 0.0, 0.0], [0.62349999, 5.0, 6.0, 2.0], [-0.80400002, 7.0, 8.0, 4.0], [0.457499981, 9.0, 10.0, 2.0], [0.0366643146, 0.0, 0.0, 0.0], [-0.651499987, 11.0, 12.0, 1.0], [-0.0478185639, 0.0, 0.0, 0.0], [0.0180472024, 0.0, 0.0, 0.0], [-0.0347964689, 0.0, 0.0, 0.0], [-0.0361316577, 0.0, 0.0, 0.0], [-0.451499999, 13.0, 14.0, 1.0], [0.0514831953, 0.0, 0.0, 0.0], [-0.0300688036, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 6, 11, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 4, 7, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_987(xs):
    #Predicts Class 3
    function_dict = np.array([[0.03785, 1.0, 2.0, 0.0], [0.0293500014, 3.0, 4.0, 0.0], [0.0476500019, 5.0, 6.0, 0.0], [0.0256000012, 7.0, 8.0, 0.0], [0.125971004, 0.0, 0.0, 0.0], [-0.13019228, 0.0, 0.0, 0.0], [0.0551500022, 9.0, 10.0, 0.0], [0.0237000007, 11.0, 12.0, 0.0], [-0.105306737, 0.0, 0.0, 0.0], [0.108627945, 0.0, 0.0, 0.0], [0.074149996, 13.0, 14.0, 0.0], [0.0192999989, 15.0, 16.0, 0.0], [0.12377657, 0.0, 0.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [0.0821999982, 19.0, 20.0, 0.0], [0.00338141015, 0.0, 0.0, 0.0], [-0.10007415, 0.0, 0.0, 0.0], [-0.00319204107, 0.0, 0.0, 0.0], [-0.111979343, 0.0, 0.0, 0.0], [0.0752123222, 0.0, 0.0, 0.0], [-0.00432225969, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_988(xs):
    #Predicts Class 4
    function_dict = np.array([[0.03785, 1.0, 2.0, 0.0], [0.0293500014, 3.0, 4.0, 0.0], [0.0476500019, 5.0, 6.0, 0.0], [0.0256000012, 7.0, 8.0, 0.0], [-0.123088777, 0.0, 0.0, 0.0], [0.130313292, 0.0, 0.0, 0.0], [0.0551500022, 9.0, 10.0, 0.0], [0.0237000007, 11.0, 12.0, 0.0], [0.105585232, 0.0, 0.0, 0.0], [-0.106267765, 0.0, 0.0, 0.0], [0.074149996, 13.0, 14.0, 0.0], [0.0192999989, 15.0, 16.0, 0.0], [-0.123213485, 0.0, 0.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [0.0825999975, 19.0, 20.0, 0.0], [-0.00348869129, 0.0, 0.0, 0.0], [0.10036993, 0.0, 0.0, 0.0], [0.00416616909, 0.0, 0.0, 0.0], [0.11558903, 0.0, 0.0, 0.0], [-0.0742774531, 0.0, 0.0, 0.0], [0.00912187062, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_989(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0330462083, 0.0, 0.0, 0.0], [0.557999969, 5.0, 6.0, 0.0], [-0.0566148087, 0.0, 0.0, 0.0], [0.465499997, 7.0, 8.0, 0.0], [0.0475728028, 0.0, 0.0, 0.0], [0.455500007, 9.0, 10.0, 0.0], [0.489499986, 11.0, 12.0, 0.0], [0.000975510164, 0.0, 0.0, 0.0], [0.054233443, 0.0, 0.0, 0.0], [-0.0681101754, 0.0, 0.0, 0.0], [-0.00019864022, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_990(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.538499951, 1.0, 2.0, 1.0], [-0.597499967, 3.0, 4.0, 1.0], [-0.0189067684, 0.0, 0.0, 0.0], [-0.657500029, 5.0, 6.0, 1.0], [0.0396043099, 0.0, 0.0, 0.0], [0.573500037, 7.0, 8.0, 2.0], [-0.0228731055, 0.0, 0.0, 0.0], [0.529500008, 9.0, 10.0, 2.0], [-0.71449995, 11.0, 12.0, 1.0], [0.00740406848, 0.0, 0.0, 0.0], [-0.0392574482, 0.0, 0.0, 0.0], [0.00171199685, 0.0, 0.0, 0.0], [0.0388461947, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_991(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.963500023, 3.0, 4.0, 4.0], [0.642500043, 5.0, 6.0, 2.0], [-0.0347731337, 0.0, 0.0, 0.0], [0.0124154445, 0.0, 0.0, 0.0], [0.570500016, 7.0, 8.0, 2.0], [-0.912500024, 9.0, 10.0, 4.0], [-0.221500009, 11.0, 12.0, 0.0], [-0.0393806659, 0.0, 0.0, 0.0], [0.0410776548, 0.0, 0.0, 0.0], [-0.00192380545, 0.0, 0.0, 0.0], [-0.946500003, 13.0, 14.0, 4.0], [0.461499989, 15.0, 16.0, 2.0], [0.0481823161, 0.0, 0.0, 0.0], [-0.00401991513, 0.0, 0.0, 0.0], [-0.0233398713, 0.0, 0.0, 0.0], [0.0197339524, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 15, 16, 8, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_992(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [0.763999999, 3.0, 4.0, 2.0], [0.656499982, 5.0, 6.0, 2.0], [-0.24849999, 7.0, 8.0, 0.0], [-0.0404768176, 0.0, 0.0, 0.0], [-0.00363996648, 0.0, 0.0, 0.0], [0.0321777202, 0.0, 0.0, 0.0], [-0.0260802768, 0.0, 0.0, 0.0], [-0.228500009, 9.0, 10.0, 0.0], [0.03858006, 0.0, 0.0, 0.0], [0.442499995, 11.0, 12.0, 2.0], [-0.0260629188, 0.0, 0.0, 0.0], [0.00731275696, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 9, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_993(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.111500002, 1.0, 2.0, 0.0], [-0.118500002, 3.0, 4.0, 0.0], [-0.105499998, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [-0.0789105594, 0.0, 0.0, 0.0], [-0.1065, 9.0, 10.0, 0.0], [-0.103500001, 11.0, 12.0, 0.0], [-0.120499998, 13.0, 14.0, 0.0], [-0.201499999, 15.0, 16.0, 0.0], [0.0241334289, 0.0, 0.0, 0.0], [0.13484633, 0.0, 0.0, 0.0], [-0.122311428, 0.0, 0.0, 0.0], [-0.0987499952, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [0.0918936506, 0.0, 0.0, 0.0], [-0.250499994, 21.0, 22.0, 0.0], [-0.0899913609, 0.0, 0.0, 0.0], [0.0684573278, 0.0, 0.0, 0.0], [-0.0922500044, 23.0, 24.0, 0.0], [-0.0100868298, 0.0, 0.0, 0.0], [0.0512007959, 0.0, 0.0, 0.0], [-0.0369491391, 0.0, 0.0, 0.0], [0.0266600847, 0.0, 0.0, 0.0], [-0.105787545, 0.0, 0.0, 0.0], [0.00167397386, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 21, 22, 16, 4, 9, 10, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_994(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.111500002, 1.0, 2.0, 0.0], [-0.118500002, 3.0, 4.0, 0.0], [-0.105499998, 5.0, 6.0, 0.0], [-0.120499998, 7.0, 8.0, 0.0], [0.080965586, 0.0, 0.0, 0.0], [-0.107500002, 9.0, 10.0, 0.0], [-0.103500001, 11.0, 12.0, 0.0], [-0.129500002, 13.0, 14.0, 0.0], [-0.119499996, 15.0, 16.0, 0.0], [-0.0243932307, 0.0, 0.0, 0.0], [-0.134136096, 0.0, 0.0, 0.0], [0.123801835, 0.0, 0.0, 0.0], [-0.0987499952, 17.0, 18.0, 0.0], [-0.130499989, 19.0, 20.0, 0.0], [0.045614358, 0.0, 0.0, 0.0], [-0.0798397362, 0.0, 0.0, 0.0], [0.00597594725, 0.0, 0.0, 0.0], [-0.0674943104, 0.0, 0.0, 0.0], [-0.0929999948, 21.0, 22.0, 0.0], [0.00317163742, 0.0, 0.0, 0.0], [-0.0842081159, 0.0, 0.0, 0.0], [0.110270061, 0.0, 0.0, 0.0], [-0.00353153865, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 16, 4, 9, 10, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_995(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.561499953, 3.0, 4.0, 0.0], [0.348500013, 5.0, 6.0, 0.0], [0.527999997, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [0.445500016, 15.0, 16.0, 0.0], [0.543500006, 17.0, 18.0, 0.0], [0.615499973, 19.0, 20.0, 0.0], [0.00420334935, 0.0, 0.0, 0.0], [0.172499999, 21.0, 22.0, 0.0], [-0.0502697304, 0.0, 0.0, 0.0], [0.5255, 23.0, 24.0, 0.0], [0.0626331195, 0.0, 0.0, 0.0], [0.42049998, 25.0, 26.0, 0.0], [0.46450001, 27.0, 28.0, 0.0], [0.0491312183, 0.0, 0.0, 0.0], [0.549000025, 29.0, 30.0, 0.0], [-0.0183624066, 0.0, 0.0, 0.0], [-0.0623669066, 0.0, 0.0, 0.0], [-0.993499994, 31.0, 32.0, 1.0], [0.0531673245, 0.0, 0.0, 0.0], [0.0377483219, 0.0, 0.0, 0.0], [-0.00568107096, 0.0, 0.0, 0.0], [-0.00584434438, 0.0, 0.0, 0.0], [0.0467930399, 0.0, 0.0, 0.0], [-0.0625818521, 0.0, 0.0, 0.0], [-0.00607163226, 0.0, 0.0, 0.0], [-0.0382497497, 0.0, 0.0, 0.0], [0.0443179868, 0.0, 0.0, 0.0], [-0.0358126536, 0.0, 0.0, 0.0], [0.0525390767, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 17, 29, 30, 19, 20, 10, 31, 32, 22, 12, 23, 24, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 9, 2, 5, 11, 21, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_996(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.970499992, 3.0, 4.0, 4.0], [-0.892500043, 5.0, 6.0, 4.0], [-0.0372785367, 0.0, 0.0, 0.0], [0.00454412634, 0.0, 0.0, 0.0], [-0.919499993, 7.0, 8.0, 4.0], [-0.182500005, 9.0, 10.0, 0.0], [0.478500009, 11.0, 12.0, 2.0], [0.0464342088, 0.0, 0.0, 0.0], [-0.978999972, 13.0, 14.0, 3.0], [0.0222797599, 0.0, 0.0, 0.0], [0.0269511472, 0.0, 0.0, 0.0], [0.522500038, 15.0, 16.0, 2.0], [-0.0516092144, 0.0, 0.0, 0.0], [0.011512218, 0.0, 0.0, 0.0], [-0.0369535945, 0.0, 0.0, 0.0], [0.00509432284, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 15, 16, 8, 13, 14, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 12, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_997(xs):
    #Predicts Class 1
    function_dict = np.array([[0.591500044, 1.0, 2.0, 2.0], [-0.791499972, 3.0, 4.0, 1.0], [-0.615499973, 5.0, 6.0, 1.0], [-0.821500003, 7.0, 8.0, 1.0], [-0.75849998, 9.0, 10.0, 1.0], [-0.0119236875, 0.0, 0.0, 0.0], [-0.929499984, 11.0, 12.0, 4.0], [-0.00672355248, 0.0, 0.0, 0.0], [0.0299576037, 0.0, 0.0, 0.0], [-0.0419460721, 0.0, 0.0, 0.0], [0.468500018, 13.0, 14.0, 2.0], [0.05558642, 0.0, 0.0, 0.0], [-0.00939303637, 0.0, 0.0, 0.0], [0.0293715689, 0.0, 0.0, 0.0], [-0.241999999, 15.0, 16.0, 0.0], [-0.0333224535, 0.0, 0.0, 0.0], [0.00554544339, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 13, 15, 16, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 4, 10, 14, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_998(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.794499993, 1.0, 2.0, 4.0], [0.557500005, 3.0, 4.0, 2.0], [0.020560598, 0.0, 0.0, 0.0], [0.476500005, 5.0, 6.0, 2.0], [0.60650003, 7.0, 8.0, 2.0], [-0.995499969, 9.0, 10.0, 3.0], [0.0359629616, 0.0, 0.0, 0.0], [-0.0415527076, 0.0, 0.0, 0.0], [-0.966500044, 11.0, 12.0, 3.0], [-0.0303890724, 0.0, 0.0, 0.0], [0.0100595979, 0.0, 0.0, 0.0], [-0.528499961, 13.0, 14.0, 1.0], [-0.0474993475, 0.0, 0.0, 0.0], [0.0436118729, 0.0, 0.0, 0.0], [-0.0158014875, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 6, 7, 13, 14, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 4, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_999(xs):
    #Predicts Class 3
    function_dict = np.array([[0.276499987, 1.0, 2.0, 0.0], [0.272000015, 3.0, 4.0, 0.0], [0.392499983, 5.0, 6.0, 0.0], [0.260500014, 7.0, 8.0, 0.0], [-0.10711848, 0.0, 0.0, 0.0], [0.0859661847, 0.0, 0.0, 0.0], [0.394500017, 9.0, 10.0, 0.0], [0.201499999, 11.0, 12.0, 0.0], [0.063737087, 0.0, 0.0, 0.0], [-0.0617045201, 0.0, 0.0, 0.0], [0.404500008, 13.0, 14.0, 0.0], [0.0945499986, 15.0, 16.0, 0.0], [0.212500006, 17.0, 18.0, 0.0], [0.0583731309, 0.0, 0.0, 0.0], [0.407999992, 19.0, 20.0, 0.0], [-0.00153035193, 0.0, 0.0, 0.0], [0.0348286107, 0.0, 0.0, 0.0], [-0.0891359448, 0.0, 0.0, 0.0], [0.0015672876, 0.0, 0.0, 0.0], [-0.0559716783, 0.0, 0.0, 0.0], [0.00904252846, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1000(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.1505, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.132499993, 9.0, 10.0, 0.0], [-0.249500006, 11.0, 12.0, 0.0], [-0.607499957, 13.0, 14.0, 2.0], [-0.0559760034, 0.0, 0.0, 0.0], [0.0042849998, 15.0, 16.0, 0.0], [-0.187999994, 17.0, 18.0, 0.0], [-0.105499998, 19.0, 20.0, 0.0], [-0.885499954, 21.0, 22.0, 2.0], [0.0502847172, 0.0, 0.0, 0.0], [-0.0414500013, 23.0, 24.0, 0.0], [0.0169171728, 0.0, 0.0, 0.0], [0.00185999996, 25.0, 26.0, 0.0], [0.00768500008, 27.0, 28.0, 0.0], [-0.0172583517, 0.0, 0.0, 0.0], [0.229790151, 0.0, 0.0, 0.0], [-0.173072621, 0.0, 0.0, 0.0], [-0.0365500003, 29.0, 30.0, 0.0], [0.0458855145, 0.0, 0.0, 0.0], [-0.0752093196, 0.0, 0.0, 0.0], [-0.134065911, 0.0, 0.0, 0.0], [0.0127009554, 0.0, 0.0, 0.0], [0.000966558931, 0.0, 0.0, 0.0], [0.15047048, 0.0, 0.0, 0.0], [-0.16739735, 0.0, 0.0, 0.0], [0.000551607984, 0.0, 0.0, 0.0], [0.0994140133, 0.0, 0.0, 0.0], [-0.0157394018, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 25, 26, 27, 28, 17, 18, 19, 29, 30, 21, 22, 12, 23, 24, 14])
    branch_indices = np.array([0, 1, 3, 8, 15, 16, 4, 9, 10, 20, 2, 5, 11, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1001(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.0528774373, 0.0, 0.0, 0.0], [0.0615292937, 0.0, 0.0, 0.0], [-0.00676632859, 0.0, 0.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [0.0360131115, 0.0, 0.0, 0.0], [0.528499961, 11.0, 12.0, 0.0], [0.541499972, 13.0, 14.0, 0.0], [-0.000899890438, 0.0, 0.0, 0.0], [0.0937325731, 0.0, 0.0, 0.0], [-0.0791847631, 0.0, 0.0, 0.0], [0.00710769976, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1002(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.801499963, 3.0, 4.0, 1.0], [-0.976500034, 5.0, 6.0, 3.0], [0.0050706449, 0.0, 0.0, 0.0], [-0.0304276794, 0.0, 0.0, 0.0], [-0.946500003, 7.0, 8.0, 4.0], [-0.930500031, 9.0, 10.0, 4.0], [0.547999978, 11.0, 12.0, 2.0], [-0.182500005, 13.0, 14.0, 0.0], [0.0282978974, 0.0, 0.0, 0.0], [-0.541499972, 15.0, 16.0, 1.0], [0.0113024442, 0.0, 0.0, 0.0], [-0.0301763471, 0.0, 0.0, 0.0], [0.636500001, 17.0, 18.0, 2.0], [0.0587122291, 0.0, 0.0, 0.0], [-0.0513147339, 0.0, 0.0, 0.0], [0.0118159801, 0.0, 0.0, 0.0], [-0.0261751693, 0.0, 0.0, 0.0], [0.0341738872, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 17, 18, 14, 9, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 13, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1003(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.45450002, 1.0, 2.0, 1.0], [-0.557500005, 3.0, 4.0, 1.0], [-0.0184957869, 0.0, 0.0, 0.0], [-0.94749999, 5.0, 6.0, 3.0], [0.0314368531, 0.0, 0.0, 0.0], [-0.982499957, 7.0, 8.0, 3.0], [-0.0242693704, 0.0, 0.0, 0.0], [-0.694499969, 9.0, 10.0, 1.0], [-0.757500052, 11.0, 12.0, 1.0], [-0.0157472622, 0.0, 0.0, 0.0], [0.0199482962, 0.0, 0.0, 0.0], [0.037539959, 0.0, 0.0, 0.0], [0.00463942019, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1004(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [0.5995, 3.0, 4.0, 2.0], [-0.919499993, 5.0, 6.0, 4.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.931499958, 9.0, 10.0, 4.0], [0.0411657505, 0.0, 0.0, 0.0], [-0.00658213673, 0.0, 0.0, 0.0], [-0.0224664062, 0.0, 0.0, 0.0], [0.513499975, 11.0, 12.0, 2.0], [-0.0422558971, 0.0, 0.0, 0.0], [0.722000003, 13.0, 14.0, 2.0], [0.41049999, 15.0, 16.0, 2.0], [0.0453138351, 0.0, 0.0, 0.0], [-0.0220792685, 0.0, 0.0, 0.0], [0.0168967899, 0.0, 0.0, 0.0], [0.0190795809, 0.0, 0.0, 0.0], [-0.0244759098, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 12, 9, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 11, 4, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1005(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.033955887, 0.0, 0.0, 0.0], [0.538499951, 5.0, 6.0, 0.0], [0.026349999, 7.0, 8.0, 0.0], [0.513000011, 9.0, 10.0, 0.0], [0.567000031, 11.0, 12.0, 0.0], [-0.00517999986, 13.0, 14.0, 0.0], [0.0784000009, 15.0, 16.0, 0.0], [0.465499997, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.549999952, 21.0, 22.0, 0.0], [0.620499969, 23.0, 24.0, 0.0], [-0.0269000009, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.150922537, 0.0, 0.0, 0.0], [0.380500019, 29.0, 30.0, 0.0], [0.000593046308, 0.0, 0.0, 0.0], [0.0591334142, 0.0, 0.0, 0.0], [-0.0995173529, 0.0, 0.0, 0.0], [0.0266919062, 0.0, 0.0, 0.0], [0.0590944514, 0.0, 0.0, 0.0], [0.0253484417, 0.0, 0.0, 0.0], [-0.0392722189, 0.0, 0.0, 0.0], [0.0191210601, 0.0, 0.0, 0.0], [-0.0016503064, 0.0, 0.0, 0.0], [-0.11720176, 0.0, 0.0, 0.0], [0.185905054, 0.0, 0.0, 0.0], [0.0323444568, 0.0, 0.0, 0.0], [0.10693296, 0.0, 0.0, 0.0], [-0.0325076208, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 15, 29, 30, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1006(xs):
    #Predicts Class 4
    function_dict = np.array([[0.028549999, 1.0, 2.0, 0.0], [0.025150001, 3.0, 4.0, 0.0], [0.0368999988, 5.0, 6.0, 0.0], [0.0234000012, 7.0, 8.0, 0.0], [-0.133089826, 0.0, 0.0, 0.0], [0.141514704, 0.0, 0.0, 0.0], [0.0447499976, 9.0, 10.0, 0.0], [0.0137499999, 11.0, 12.0, 0.0], [0.112000033, 0.0, 0.0, 0.0], [-0.130500734, 0.0, 0.0, 0.0], [0.0506500006, 13.0, 14.0, 0.0], [0.00974999927, 15.0, 16.0, 0.0], [-0.120662868, 0.0, 0.0, 0.0], [0.111328386, 0.0, 0.0, 0.0], [0.0740500018, 17.0, 18.0, 0.0], [-0.00206162548, 0.0, 0.0, 0.0], [0.0915071964, 0.0, 0.0, 0.0], [-0.0933935568, 0.0, 0.0, 0.0], [0.0157622416, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1007(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.394999981, 3.0, 4.0, 0.0], [0.253000021, 5.0, 6.0, 0.0], [-0.042873323, 0.0, 0.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.418500006, 17.0, 18.0, 0.0], [-0.770500004, 19.0, 20.0, 2.0], [0.0866715983, 0.0, 0.0, 0.0], [0.43599999, 21.0, 22.0, 0.0], [-0.1655, 23.0, 24.0, 0.0], [-0.00279394607, 0.0, 0.0, 0.0], [0.409500003, 25.0, 26.0, 0.0], [0.417999983, 27.0, 28.0, 0.0], [0.0405730195, 0.0, 0.0, 0.0], [0.00831686798, 0.0, 0.0, 0.0], [-0.0687707961, 0.0, 0.0, 0.0], [0.021223845, 0.0, 0.0, 0.0], [-0.0388912186, 0.0, 0.0, 0.0], [0.527500033, 29.0, 30.0, 0.0], [0.00283722649, 0.0, 0.0, 0.0], [0.0743830428, 0.0, 0.0, 0.0], [-0.0254636481, 0.0, 0.0, 0.0], [0.00754354242, 0.0, 0.0, 0.0], [0.0949174911, 0.0, 0.0, 0.0], [-0.0403974913, 0.0, 0.0, 0.0], [0.0423679762, 0.0, 0.0, 0.0], [0.0118922079, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 23, 24, 14, 25, 26, 27, 28, 17, 18, 19, 20, 11, 21, 29, 30])
    branch_indices = np.array([0, 1, 4, 7, 13, 8, 15, 16, 2, 5, 9, 10, 6, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1008(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.578999996, 1.0, 2.0, 1.0], [-0.914499998, 3.0, 4.0, 4.0], [0.715000033, 5.0, 6.0, 2.0], [0.522500038, 7.0, 8.0, 2.0], [0.569000006, 9.0, 10.0, 2.0], [-0.0371372327, 0.0, 0.0, 0.0], [0.00568926986, 0.0, 0.0, 0.0], [-0.225499988, 11.0, 12.0, 0.0], [-0.943500042, 13.0, 14.0, 4.0], [0.0499447398, 0.0, 0.0, 0.0], [-0.00389939663, 0.0, 0.0, 0.0], [-0.0471927747, 0.0, 0.0, 0.0], [-0.189500004, 15.0, 16.0, 0.0], [-0.0125061255, 0.0, 0.0, 0.0], [0.0485014729, 0.0, 0.0, 0.0], [0.0482847132, 0.0, 0.0, 0.0], [-0.0258830283, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 15, 16, 13, 14, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 12, 8, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1009(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.2755, 1.0, 2.0, 0.0], [-0.916499972, 3.0, 4.0, 4.0], [-0.5995, 5.0, 6.0, 1.0], [-0.318499982, 7.0, 8.0, 0.0], [-0.00914317835, 0.0, 0.0, 0.0], [0.559499979, 9.0, 10.0, 2.0], [-0.027896123, 0.0, 0.0, 0.0], [0.00679922523, 0.0, 0.0, 0.0], [0.0328697339, 0.0, 0.0, 0.0], [0.4745, 11.0, 12.0, 2.0], [0.0341904089, 0.0, 0.0, 0.0], [0.441500008, 13.0, 14.0, 2.0], [-0.0322310962, 0.0, 0.0, 0.0], [-0.00911192689, 0.0, 0.0, 0.0], [0.0371006466, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 14, 12, 10, 6])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1010(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.266499996, 1.0, 2.0, 0.0], [-0.982499957, 3.0, 4.0, 3.0], [-0.484499991, 5.0, 6.0, 1.0], [0.00650357036, 0.0, 0.0, 0.0], [-0.0349834524, 0.0, 0.0, 0.0], [-0.94749999, 7.0, 8.0, 4.0], [0.0375553779, 0.0, 0.0, 0.0], [-0.963500023, 9.0, 10.0, 4.0], [0.671499968, 11.0, 12.0, 2.0], [0.452499986, 13.0, 14.0, 2.0], [-0.0419853069, 0.0, 0.0, 0.0], [-0.151499987, 15.0, 16.0, 0.0], [-0.0216193721, 0.0, 0.0, 0.0], [-0.00935925264, 0.0, 0.0, 0.0], [0.0227803513, 0.0, 0.0, 0.0], [0.0437786914, 0.0, 0.0, 0.0], [0.00373130268, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 10, 15, 16, 12, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 9, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1011(xs):
    #Predicts Class 3
    function_dict = np.array([[0.506000042, 1.0, 2.0, 0.0], [0.466499984, 3.0, 4.0, 0.0], [0.537500024, 5.0, 6.0, 0.0], [0.463499993, 7.0, 8.0, 0.0], [0.503000021, 9.0, 10.0, 0.0], [0.0596576445, 0.0, 0.0, 0.0], [0.547500014, 11.0, 12.0, 0.0], [0.455500007, 13.0, 14.0, 0.0], [0.0611607768, 0.0, 0.0, 0.0], [-0.0833625346, 0.0, 0.0, 0.0], [-0.00229654647, 0.0, 0.0, 0.0], [0.541499972, 15.0, 16.0, 0.0], [0.565500021, 17.0, 18.0, 0.0], [-0.851999998, 19.0, 20.0, 2.0], [-0.0736091062, 0.0, 0.0, 0.0], [-0.0166151635, 0.0, 0.0, 0.0], [-0.0548661575, 0.0, 0.0, 0.0], [0.557999969, 21.0, 22.0, 0.0], [0.620499969, 23.0, 24.0, 0.0], [-0.00221103546, 0.0, 0.0, 0.0], [0.0204844642, 0.0, 0.0, 0.0], [0.0386627764, 0.0, 0.0, 0.0], [0.00945751369, 0.0, 0.0, 0.0], [-0.0361371078, 0.0, 0.0, 0.0], [0.00950731058, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 10, 5, 15, 16, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 11, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1012(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0998999998, 1.0, 2.0, 0.0], [-0.102499999, 3.0, 4.0, 0.0], [-0.0908499956, 5.0, 6.0, 0.0], [-0.104499996, 7.0, 8.0, 0.0], [0.070729889, 0.0, 0.0, 0.0], [-0.0973500013, 9.0, 10.0, 0.0], [-0.0811500028, 11.0, 12.0, 0.0], [-0.108500004, 13.0, 14.0, 0.0], [-0.0856014639, 0.0, 0.0, 0.0], [-0.00460674567, 0.0, 0.0, 0.0], [-0.0914499983, 15.0, 16.0, 0.0], [0.0968218669, 0.0, 0.0, 0.0], [-0.0793000013, 17.0, 18.0, 0.0], [-0.1175, 19.0, 20.0, 0.0], [0.0812533051, 0.0, 0.0, 0.0], [-0.148803338, 0.0, 0.0, 0.0], [-0.0326014012, 0.0, 0.0, 0.0], [-0.111248575, 0.0, 0.0, 0.0], [-0.0728500038, 21.0, 22.0, 0.0], [0.00435016118, 0.0, 0.0, 0.0], [-0.0835361406, 0.0, 0.0, 0.0], [0.0645720363, 0.0, 0.0, 0.0], [-0.00310174678, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 15, 16, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 10, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1013(xs):
    #Predicts Class 5
    function_dict = np.array([[0.539999962, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [0.547500014, 5.0, 6.0, 0.0], [0.466499984, 7.0, 8.0, 0.0], [0.534000039, 9.0, 10.0, 0.0], [0.0582535192, 0.0, 0.0, 0.0], [0.565500021, 11.0, 12.0, 0.0], [0.463499993, 13.0, 14.0, 0.0], [0.503000021, 15.0, 16.0, 0.0], [0.522500038, 17.0, 18.0, 0.0], [-0.0831529424, 0.0, 0.0, 0.0], [0.557999969, 19.0, 20.0, 0.0], [0.620499969, 21.0, 22.0, 0.0], [0.455500007, 23.0, 24.0, 0.0], [-0.0593337491, 0.0, 0.0, 0.0], [0.085759826, 0.0, 0.0, 0.0], [-0.000614629244, 0.0, 0.0, 0.0], [-0.0724782571, 0.0, 0.0, 0.0], [0.0115961535, 0.0, 0.0, 0.0], [-0.0373378843, 0.0, 0.0, 0.0], [-0.00595344789, 0.0, 0.0, 0.0], [0.0389730968, 0.0, 0.0, 0.0], [-0.000450049847, 0.0, 0.0, 0.0], [0.00180775253, 0.0, 0.0, 0.0], [0.074643068, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 17, 18, 10, 5, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 9, 2, 6, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1014(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.847499967, 1.0, 2.0, 1.0], [0.0235811193, 0.0, 0.0, 0.0], [-0.971500039, 3.0, 4.0, 4.0], [-0.0369728617, 0.0, 0.0, 0.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.0263942387, 0.0, 0.0, 0.0], [-0.806499958, 7.0, 8.0, 4.0], [-0.256500006, 9.0, 10.0, 0.0], [-0.0176854711, 0.0, 0.0, 0.0], [0.0616868734, 0.0, 0.0, 0.0], [0.00531012611, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 9, 10, 8])
    branch_indices = np.array([0, 2, 4, 6, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1015(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.218499988, 1.0, 2.0, 0.0], [-0.958500028, 3.0, 4.0, 4.0], [-0.207500011, 5.0, 6.0, 0.0], [-0.973500013, 7.0, 8.0, 4.0], [-0.946500003, 9.0, 10.0, 4.0], [0.0362410247, 0.0, 0.0, 0.0], [0.387499988, 11.0, 12.0, 2.0], [0.0173206069, 0.0, 0.0, 0.0], [-0.0455043353, 0.0, 0.0, 0.0], [0.0343335345, 0.0, 0.0, 0.0], [-0.315500021, 13.0, 14.0, 0.0], [0.0214535352, 0.0, 0.0, 0.0], [-0.703500032, 15.0, 16.0, 1.0], [0.0223326329, 0.0, 0.0, 0.0], [-0.256500006, 17.0, 18.0, 0.0], [-0.0328051075, 0.0, 0.0, 0.0], [0.00974290352, 0.0, 0.0, 0.0], [-0.0462368727, 0.0, 0.0, 0.0], [0.00586764421, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 13, 17, 18, 5, 11, 15, 16])
    branch_indices = np.array([0, 1, 3, 4, 10, 14, 2, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1016(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.794499993, 1.0, 2.0, 4.0], [-0.872500002, 3.0, 4.0, 4.0], [0.0178503152, 0.0, 0.0, 0.0], [-0.983500004, 5.0, 6.0, 3.0], [-0.0357933901, 0.0, 0.0, 0.0], [0.534500003, 7.0, 8.0, 2.0], [0.528999984, 9.0, 10.0, 2.0], [-0.736500025, 11.0, 12.0, 1.0], [-0.943500042, 13.0, 14.0, 4.0], [-0.0100000454, 0.0, 0.0, 0.0], [0.0388448685, 0.0, 0.0, 0.0], [-0.00782196783, 0.0, 0.0, 0.0], [0.0431163572, 0.0, 0.0, 0.0], [-0.00791968405, 0.0, 0.0, 0.0], [-0.05074035, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1017(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0156999994, 1.0, 2.0, 0.0], [-0.0293500014, 3.0, 4.0, 0.0], [-0.00963000022, 5.0, 6.0, 0.0], [-0.0339000002, 7.0, 8.0, 0.0], [-0.0250499994, 9.0, 10.0, 0.0], [-0.0150499996, 11.0, 12.0, 0.0], [-0.00550500024, 13.0, 14.0, 0.0], [-0.0491999984, 15.0, 16.0, 0.0], [-0.111645654, 0.0, 0.0, 0.0], [0.159758657, 0.0, 0.0, 0.0], [0.0286818221, 0.0, 0.0, 0.0], [-0.141972423, 0.0, 0.0, 0.0], [-0.01205, 17.0, 18.0, 0.0], [0.134943679, 0.0, 0.0, 0.0], [-0.00478500035, 19.0, 20.0, 0.0], [-0.0579499975, 21.0, 22.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [0.0245985985, 0.0, 0.0, 0.0], [-0.117144316, 0.0, 0.0, 0.0], [-0.158986405, 0.0, 0.0, 0.0], [-0.00209000008, 25.0, 26.0, 0.0], [0.00323236804, 0.0, 0.0, 0.0], [-0.0997466967, 0.0, 0.0, 0.0], [0.0981691554, 0.0, 0.0, 0.0], [-0.115202002, 0.0, 0.0, 0.0], [0.0943528339, 0.0, 0.0, 0.0], [-0.00190464023, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 11, 17, 18, 13, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 12, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1018(xs):
    #Predicts Class 4
    function_dict = np.array([[0.196500003, 1.0, 2.0, 0.0], [0.0740500018, 3.0, 4.0, 0.0], [-0.0375078209, 0.0, 0.0, 0.0], [0.0560500026, 5.0, 6.0, 0.0], [0.082949996, 7.0, 8.0, 0.0], [0.0477499999, 9.0, 10.0, 0.0], [-0.111598089, 0.0, 0.0, 0.0], [0.0757500008, 11.0, 12.0, 0.0], [0.0867500007, 13.0, 14.0, 0.0], [0.0417999998, 15.0, 16.0, 0.0], [0.10724654, 0.0, 0.0, 0.0], [0.00744468067, 0.0, 0.0, 0.0], [0.137297049, 0.0, 0.0, 0.0], [-0.0928902999, 0.0, 0.0, 0.0], [0.0883999988, 17.0, 18.0, 0.0], [-0.000361269544, 0.0, 0.0, 0.0], [-0.119882867, 0.0, 0.0, 0.0], [0.0584607534, 0.0, 0.0, 0.0], [-0.00132037152, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 11, 12, 13, 17, 18, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1019(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.747500002, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.996500015, 5.0, 6.0, 1.0], [0.564499974, 7.0, 8.0, 0.0], [-0.996500015, 9.0, 10.0, 1.0], [-0.0567680374, 0.0, 0.0, 0.0], [0.0259506255, 0.0, 0.0, 0.0], [0.549000025, 11.0, 12.0, 0.0], [0.621500015, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.039341718, 0.0, 0.0, 0.0], [0.538499951, 17.0, 18.0, 0.0], [0.0420632921, 0.0, 0.0, 0.0], [-0.0605721325, 0.0, 0.0, 0.0], [0.00651884917, 0.0, 0.0, 0.0], [0.264999986, 19.0, 20.0, 0.0], [0.0901513174, 0.0, 0.0, 0.0], [0.00298588001, 0.0, 0.0, 0.0], [-0.0436362922, 0.0, 0.0, 0.0], [-0.031798806, 0.0, 0.0, 0.0], [0.0253516678, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 19, 20, 16, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 4, 9, 15, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1020(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.918500006, 1.0, 2.0, 3.0], [-0.71449995, 3.0, 4.0, 1.0], [0.0210140701, 0.0, 0.0, 0.0], [-0.983500004, 5.0, 6.0, 3.0], [-0.578999996, 7.0, 8.0, 1.0], [-0.99150002, 9.0, 10.0, 3.0], [-0.0398859233, 0.0, 0.0, 0.0], [-0.987499952, 11.0, 12.0, 3.0], [-0.020718703, 0.0, 0.0, 0.0], [-0.997500002, 13.0, 14.0, 3.0], [0.0402004272, 0.0, 0.0, 0.0], [-0.213499993, 15.0, 16.0, 0.0], [0.0507747643, 0.0, 0.0, 0.0], [0.00910950638, 0.0, 0.0, 0.0], [-0.0307853911, 0.0, 0.0, 0.0], [-0.0220331792, 0.0, 0.0, 0.0], [0.0177401565, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 15, 16, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1021(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.975499988, 1.0, 2.0, 4.0], [-0.0147499032, 0.0, 0.0, 0.0], [-0.192499995, 3.0, 4.0, 0.0], [0.554499984, 5.0, 6.0, 2.0], [0.0345629044, 0.0, 0.0, 0.0], [-0.763499975, 7.0, 8.0, 1.0], [0.657500029, 9.0, 10.0, 2.0], [0.00909991376, 0.0, 0.0, 0.0], [-0.988499999, 11.0, 12.0, 3.0], [-0.678499997, 13.0, 14.0, 1.0], [-0.0146314893, 0.0, 0.0, 0.0], [-0.0472859181, 0.0, 0.0, 0.0], [0.000229821846, 0.0, 0.0, 0.0], [-0.00962031446, 0.0, 0.0, 0.0], [0.0533277765, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 7, 11, 12, 13, 14, 10, 4])
    branch_indices = np.array([0, 2, 3, 5, 8, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1022(xs):
    #Predicts Class 2
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [0.436500013, 3.0, 4.0, 2.0], [0.540500045, 5.0, 6.0, 2.0], [-0.00996114593, 0.0, 0.0, 0.0], [0.0328458846, 0.0, 0.0, 0.0], [-0.0356720686, 0.0, 0.0, 0.0], [0.598500013, 7.0, 8.0, 2.0], [0.0204044487, 0.0, 0.0, 0.0], [-0.257499993, 9.0, 10.0, 0.0], [0.0165880136, 0.0, 0.0, 0.0], [-0.526499987, 11.0, 12.0, 1.0], [0.00332394731, 0.0, 0.0, 0.0], [-0.0392795317, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 9, 11, 12])
    branch_indices = np.array([0, 1, 2, 6, 8, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1023(xs):
    #Predicts Class 3
    function_dict = np.array([[0.273999989, 1.0, 2.0, 0.0], [0.263000011, 3.0, 4.0, 0.0], [0.392499983, 5.0, 6.0, 0.0], [0.212500006, 7.0, 8.0, 0.0], [-0.11300727, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.401499987, 11.0, 12.0, 0.0], [0.202500001, 13.0, 14.0, 0.0], [0.253499985, 15.0, 16.0, 0.0], [0.116946019, 0.0, 0.0, 0.0], [-0.0196341574, 0.0, 0.0, 0.0], [-0.0469325222, 0.0, 0.0, 0.0], [0.418500006, 17.0, 18.0, 0.0], [-0.00102999993, 19.0, 20.0, 0.0], [-0.0792319328, 0.0, 0.0, 0.0], [0.0733950064, 0.0, 0.0, 0.0], [-0.00320572336, 0.0, 0.0, 0.0], [0.407999992, 21.0, 22.0, 0.0], [0.421999991, 23.0, 24.0, 0.0], [-0.00402178895, 0.0, 0.0, 0.0], [0.00897944812, 0.0, 0.0, 0.0], [0.00336162536, 0.0, 0.0, 0.0], [0.111353427, 0.0, 0.0, 0.0], [-0.0683209822, 0.0, 0.0, 0.0], [0.00822851062, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 16, 4, 9, 10, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1024(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00102999993, 1.0, 2.0, 0.0], [-0.00209000008, 3.0, 4.0, 0.0], [0.00185999996, 5.0, 6.0, 0.0], [-0.00413500005, 7.0, 8.0, 0.0], [0.14011696, 0.0, 0.0, 0.0], [-0.102326915, 0.0, 0.0, 0.0], [0.0042849998, 9.0, 10.0, 0.0], [-0.00496499985, 11.0, 12.0, 0.0], [-0.118023999, 0.0, 0.0, 0.0], [0.125788435, 0.0, 0.0, 0.0], [0.00637499988, 13.0, 14.0, 0.0], [-0.00885999948, 15.0, 16.0, 0.0], [0.152829736, 0.0, 0.0, 0.0], [-0.0974746048, 0.0, 0.0, 0.0], [0.0079549998, 17.0, 18.0, 0.0], [0.00169620221, 0.0, 0.0, 0.0], [-0.128072143, 0.0, 0.0, 0.0], [0.103983089, 0.0, 0.0, 0.0], [-0.00697726849, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1025(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.523499966, 3.0, 4.0, 0.0], [0.556499958, 5.0, 6.0, 0.0], [-0.851999998, 7.0, 8.0, 2.0], [-0.055862613, 0.0, 0.0, 0.0], [0.543500006, 9.0, 10.0, 0.0], [0.618499994, 11.0, 12.0, 0.0], [0.46450001, 13.0, 14.0, 0.0], [-0.997500002, 15.0, 16.0, 1.0], [0.0498945713, 0.0, 0.0, 0.0], [0.0172413886, 0.0, 0.0, 0.0], [0.585000038, 17.0, 18.0, 0.0], [0.0325211696, 0.0, 0.0, 0.0], [0.446500003, 19.0, 20.0, 0.0], [0.487500012, 21.0, 22.0, 0.0], [-0.0717675015, 0.0, 0.0, 0.0], [0.011714098, 0.0, 0.0, 0.0], [0.557999969, 23.0, 24.0, 0.0], [-0.0607162341, 0.0, 0.0, 0.0], [0.00369208562, 0.0, 0.0, 0.0], [-0.0744279921, 0.0, 0.0, 0.0], [0.0964211524, 0.0, 0.0, 0.0], [-0.00831486471, 0.0, 0.0, 0.0], [-0.0364261977, 0.0, 0.0, 0.0], [0.047608491, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 16, 4, 9, 10, 23, 24, 18, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 6, 11, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1026(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [-0.817499995, 3.0, 4.0, 1.0], [-0.934499979, 5.0, 6.0, 4.0], [-0.847499967, 7.0, 8.0, 1.0], [0.0322244056, 0.0, 0.0, 0.0], [-0.951499999, 9.0, 10.0, 4.0], [0.685500026, 11.0, 12.0, 2.0], [0.0222257301, 0.0, 0.0, 0.0], [-0.0207963698, 0.0, 0.0, 0.0], [-0.207500011, 13.0, 14.0, 0.0], [-0.0491143428, 0.0, 0.0, 0.0], [-0.932500005, 15.0, 16.0, 3.0], [0.737499952, 17.0, 18.0, 2.0], [-0.0251032207, 0.0, 0.0, 0.0], [0.0251171757, 0.0, 0.0, 0.0], [-0.230500013, 19.0, 20.0, 0.0], [-0.0232424438, 0.0, 0.0, 0.0], [-0.0347574465, 0.0, 0.0, 0.0], [0.00752288196, 0.0, 0.0, 0.0], [0.0517026708, 0.0, 0.0, 0.0], [0.0102061639, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 14, 10, 19, 20, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 6, 11, 15, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1027(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.794499993, 1.0, 2.0, 1.0], [-0.994500041, 3.0, 4.0, 3.0], [-0.912500024, 5.0, 6.0, 4.0], [-0.0318987072, 0.0, 0.0, 0.0], [0.00804366078, 0.0, 0.0, 0.0], [0.512500048, 7.0, 8.0, 2.0], [0.612499952, 9.0, 10.0, 2.0], [0.428499997, 11.0, 12.0, 2.0], [-0.624000013, 13.0, 14.0, 1.0], [-0.027101256, 0.0, 0.0, 0.0], [0.00688651623, 0.0, 0.0, 0.0], [-0.00592909474, 0.0, 0.0, 0.0], [0.0510181412, 0.0, 0.0, 0.0], [-0.0224380605, 0.0, 0.0, 0.0], [-0.958500028, 15.0, 16.0, 4.0], [-0.0104166772, 0.0, 0.0, 0.0], [0.0429823659, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 13, 15, 16, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 14, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1028(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.266499996, 1.0, 2.0, 0.0], [-0.982499957, 3.0, 4.0, 3.0], [-0.956499994, 5.0, 6.0, 4.0], [0.00115769589, 0.0, 0.0, 0.0], [-0.0340853967, 0.0, 0.0, 0.0], [-0.972499967, 7.0, 8.0, 4.0], [-0.700500011, 9.0, 10.0, 1.0], [0.0127064874, 0.0, 0.0, 0.0], [-0.0337194204, 0.0, 0.0, 0.0], [-0.0211654995, 0.0, 0.0, 0.0], [0.667999983, 11.0, 12.0, 2.0], [-0.983500004, 13.0, 14.0, 3.0], [-0.983500004, 15.0, 16.0, 3.0], [0.0688712224, 0.0, 0.0, 0.0], [7.62888376e-05, 0.0, 0.0, 0.0], [-0.0314219296, 0.0, 0.0, 0.0], [0.0313903503, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1029(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0152500002, 1.0, 2.0, 0.0], [-0.0238499995, 3.0, 4.0, 0.0], [-0.00963000022, 5.0, 6.0, 0.0], [-0.0297999997, 7.0, 8.0, 0.0], [0.119640999, 0.0, 0.0, 0.0], [-0.101376019, 0.0, 0.0, 0.0], [-0.00550500024, 9.0, 10.0, 0.0], [-0.0382499993, 11.0, 12.0, 0.0], [-0.0875720456, 0.0, 0.0, 0.0], [0.0949448198, 0.0, 0.0, 0.0], [-0.00478500035, 13.0, 14.0, 0.0], [-0.0424499996, 15.0, 16.0, 0.0], [0.103904255, 0.0, 0.0, 0.0], [-0.129152343, 0.0, 0.0, 0.0], [-0.00163000007, 17.0, 18.0, 0.0], [0.00387140666, 0.0, 0.0, 0.0], [-0.0981917679, 0.0, 0.0, 0.0], [0.0686172098, 0.0, 0.0, 0.0], [-0.00308197713, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1030(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0101749999, 1.0, 2.0, 0.0], [-0.0154499998, 3.0, 4.0, 0.0], [-0.00885999948, 5.0, 6.0, 0.0], [-0.0250499994, 7.0, 8.0, 0.0], [-0.131761432, 0.0, 0.0, 0.0], [0.158904031, 0.0, 0.0, 0.0], [-0.00496499985, 9.0, 10.0, 0.0], [-0.0293500014, 11.0, 12.0, 0.0], [0.117644265, 0.0, 0.0, 0.0], [-0.099189654, 0.0, 0.0, 0.0], [-0.00413500005, 13.0, 14.0, 0.0], [-0.03895, 15.0, 16.0, 0.0], [-0.129331917, 0.0, 0.0, 0.0], [0.114440352, 0.0, 0.0, 0.0], [-0.00163000007, 17.0, 18.0, 0.0], [-0.00366442837, 0.0, 0.0, 0.0], [0.0522060618, 0.0, 0.0, 0.0], [-0.0786994696, 0.0, 0.0, 0.0], [0.00663643656, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1031(xs):
    #Predicts Class 5
    function_dict = np.array([[0.432500005, 1.0, 2.0, 0.0], [0.428499997, 3.0, 4.0, 0.0], [0.434499979, 5.0, 6.0, 0.0], [0.42049998, 7.0, 8.0, 0.0], [-0.0858943835, 0.0, 0.0, 0.0], [0.0776077509, 0.0, 0.0, 0.0], [0.436500013, 9.0, 10.0, 0.0], [0.415000021, 11.0, 12.0, 0.0], [0.0669255555, 0.0, 0.0, 0.0], [-0.0580122992, 0.0, 0.0, 0.0], [0.465499997, 13.0, 14.0, 0.0], [0.406499982, 15.0, 16.0, 0.0], [-0.0834947154, 0.0, 0.0, 0.0], [0.455500007, 17.0, 18.0, 0.0], [0.489499986, 19.0, 20.0, 0.0], [-0.00354123372, 0.0, 0.0, 0.0], [0.0895657688, 0.0, 0.0, 0.0], [0.0122858938, 0.0, 0.0, 0.0], [0.0538172945, 0.0, 0.0, 0.0], [-0.0760832652, 0.0, 0.0, 0.0], [0.0113211181, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1032(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.921499968, 1.0, 2.0, 3.0], [-0.536499977, 3.0, 4.0, 1.0], [0.0201250203, 0.0, 0.0, 0.0], [-0.166500002, 5.0, 6.0, 0.0], [-0.028372705, 0.0, 0.0, 0.0], [-0.89349997, 7.0, 8.0, 4.0], [-0.710500002, 9.0, 10.0, 1.0], [-0.933500051, 11.0, 12.0, 4.0], [-0.0396949425, 0.0, 0.0, 0.0], [-0.0108781662, 0.0, 0.0, 0.0], [0.0568683855, 0.0, 0.0, 0.0], [-0.0103699872, 0.0, 0.0, 0.0], [0.0313547254, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1033(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.9745, 1.0, 2.0, 3.0], [-0.32249999, 3.0, 4.0, 0.0], [-0.930500031, 5.0, 6.0, 4.0], [-0.0262600686, 0.0, 0.0, 0.0], [-0.276499987, 7.0, 8.0, 0.0], [-0.0292936731, 0.0, 0.0, 0.0], [0.0140694538, 0.0, 0.0, 0.0], [0.0468554795, 0.0, 0.0, 0.0], [-0.2095, 9.0, 10.0, 0.0], [0.461000025, 11.0, 12.0, 2.0], [-0.169499993, 13.0, 14.0, 0.0], [-0.0412704311, 0.0, 0.0, 0.0], [0.0118481675, 0.0, 0.0, 0.0], [0.0377593227, 0.0, 0.0, 0.0], [-0.00627238536, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 12, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 4, 8, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1034(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.219500005, 3.0, 4.0, 0.0], [-0.949000001, 5.0, 6.0, 3.0], [-0.956499994, 7.0, 8.0, 4.0], [-0.9745, 9.0, 10.0, 4.0], [-0.435499996, 11.0, 12.0, 1.0], [-0.0195917878, 0.0, 0.0, 0.0], [-0.0443566516, 0.0, 0.0, 0.0], [-0.00347569259, 0.0, 0.0, 0.0], [0.0367102362, 0.0, 0.0, 0.0], [-0.952499986, 13.0, 14.0, 3.0], [0.0434052274, 0.0, 0.0, 0.0], [0.00120708579, 0.0, 0.0, 0.0], [-0.918500006, 15.0, 16.0, 4.0], [0.0362371579, 0.0, 0.0, 0.0], [-0.0459989309, 0.0, 0.0, 0.0], [0.00124926248, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 15, 16, 14, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 4, 10, 13, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1035(xs):
    #Predicts Class 3
    function_dict = np.array([[0.276499987, 1.0, 2.0, 0.0], [0.272000015, 3.0, 4.0, 0.0], [0.392499983, 5.0, 6.0, 0.0], [0.260500014, 7.0, 8.0, 0.0], [-0.0984917134, 0.0, 0.0, 0.0], [0.0762817934, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.256500006, 11.0, 12.0, 0.0], [0.0661103129, 0.0, 0.0, 0.0], [0.401499987, 13.0, 14.0, 0.0], [0.527500033, 15.0, 16.0, 0.0], [0.212500006, 17.0, 18.0, 0.0], [-0.0879535377, 0.0, 0.0, 0.0], [0.394500017, 19.0, 20.0, 0.0], [0.409500003, 21.0, 22.0, 0.0], [0.43599999, 23.0, 24.0, 0.0], [0.000855137012, 0.0, 0.0, 0.0], [-0.00180938386, 0.0, 0.0, 0.0], [0.053093493, 0.0, 0.0, 0.0], [-0.0392719172, 0.0, 0.0, 0.0], [-0.00967365783, 0.0, 0.0, 0.0], [0.0654389784, 0.0, 0.0, 0.0], [0.00494210795, 0.0, 0.0, 0.0], [-0.00713933073, 0.0, 0.0, 0.0], [-0.0461779982, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 21, 22, 23, 24, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14, 10, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1036(xs):
    #Predicts Class 4
    function_dict = np.array([[0.196500003, 1.0, 2.0, 0.0], [0.152999997, 3.0, 4.0, 0.0], [-0.033245001, 0.0, 0.0, 0.0], [0.0945499986, 5.0, 6.0, 0.0], [0.192499995, 7.0, 8.0, 0.0], [0.0912000015, 9.0, 10.0, 0.0], [-0.0713641047, 0.0, 0.0, 0.0], [0.106043175, 0.0, 0.0, 0.0], [0.195499986, 11.0, 12.0, 0.0], [0.0883999988, 13.0, 14.0, 0.0], [0.0722937658, 0.0, 0.0, 0.0], [-0.0559601821, 0.0, 0.0, 0.0], [0.0486815795, 0.0, 0.0, 0.0], [0.00123375154, 0.0, 0.0, 0.0], [-0.0571022816, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1037(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.561499953, 3.0, 4.0, 0.0], [0.208000004, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [-0.29549998, 11.0, 12.0, 0.0], [0.344999999, 13.0, 14.0, 0.0], [0.538499951, 15.0, 16.0, 0.0], [0.0410204567, 0.0, 0.0, 0.0], [0.615499973, 17.0, 18.0, 0.0], [0.00129983481, 0.0, 0.0, 0.0], [-0.885499954, 19.0, 20.0, 2.0], [0.00518500013, 21.0, 22.0, 0.0], [0.0706088468, 0.0, 0.0, 0.0], [0.430999994, 23.0, 24.0, 0.0], [0.513000011, 25.0, 26.0, 0.0], [0.541999996, 27.0, 28.0, 0.0], [-0.0115111554, 0.0, 0.0, 0.0], [-0.0569662303, 0.0, 0.0, 0.0], [0.00537899509, 0.0, 0.0, 0.0], [0.0360054113, 0.0, 0.0, 0.0], [-0.0571445301, 0.0, 0.0, 0.0], [-0.00922256894, 0.0, 0.0, 0.0], [-0.0525024831, 0.0, 0.0, 0.0], [0.527500033, 29.0, 30.0, 0.0], [-0.00767363748, 0.0, 0.0, 0.0], [0.0497828946, 0.0, 0.0, 0.0], [-0.0591068864, 0.0, 0.0, 0.0], [-0.00563735282, 0.0, 0.0, 0.0], [0.0490401499, 0.0, 0.0, 0.0], [0.000470687693, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 17, 18, 10, 19, 20, 21, 22, 13, 23, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 2, 5, 11, 12, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1038(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.0796000063, 5.0, 6.0, 0.0], [-0.03309099, 0.0, 0.0, 0.0], [-0.994500041, 7.0, 8.0, 3.0], [-0.034414608, 0.0, 0.0, 0.0], [0.0180438403, 0.0, 0.0, 0.0], [0.0441475697, 0.0, 0.0, 0.0], [-0.98150003, 9.0, 10.0, 3.0], [-0.230500013, 11.0, 12.0, 0.0], [-0.970499992, 13.0, 14.0, 3.0], [0.0131355291, 0.0, 0.0, 0.0], [-0.0492922515, 0.0, 0.0, 0.0], [0.0436279401, 0.0, 0.0, 0.0], [-0.000125259365, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 12, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 4, 8, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1039(xs):
    #Predicts Class 1
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.96449995, 3.0, 4.0, 4.0], [-0.315500021, 5.0, 6.0, 0.0], [0.0289436802, 0.0, 0.0, 0.0], [-0.00998767093, 0.0, 0.0, 0.0], [-0.641499996, 7.0, 8.0, 1.0], [-0.271499991, 9.0, 10.0, 0.0], [0.00105754216, 0.0, 0.0, 0.0], [0.0298233684, 0.0, 0.0, 0.0], [-0.0372485891, 0.0, 0.0, 0.0], [-0.779500008, 11.0, 12.0, 1.0], [-0.0340150781, 0.0, 0.0, 0.0], [-0.636500001, 13.0, 14.0, 1.0], [0.0253640115, 0.0, 0.0, 0.0], [-0.0200030804, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 2, 5, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1040(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.977499962, 1.0, 2.0, 4.0], [-0.0256636813, 0.0, 0.0, 0.0], [-0.872500002, 3.0, 4.0, 4.0], [0.479499996, 5.0, 6.0, 2.0], [-0.203999996, 7.0, 8.0, 0.0], [-0.00848568231, 0.0, 0.0, 0.0], [-0.436999977, 9.0, 10.0, 1.0], [-0.0309992302, 0.0, 0.0, 0.0], [0.0126950387, 0.0, 0.0, 0.0], [-0.956499994, 11.0, 12.0, 4.0], [-0.00826139376, 0.0, 0.0, 0.0], [0.000657424505, 0.0, 0.0, 0.0], [0.0444348715, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 11, 12, 10, 7, 8])
    branch_indices = np.array([0, 2, 3, 6, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1041(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.273999989, 3.0, 4.0, 0.0], [-0.0343447551, 0.0, 0.0, 0.0], [0.263000011, 5.0, 6.0, 0.0], [0.341000021, 7.0, 8.0, 0.0], [0.259499997, 9.0, 10.0, 0.0], [-0.0939920917, 0.0, 0.0, 0.0], [0.0793186501, 0.0, 0.0, 0.0], [0.415000021, 11.0, 12.0, 0.0], [0.201499999, 13.0, 14.0, 0.0], [0.0578236841, 0.0, 0.0, 0.0], [0.406499982, 15.0, 16.0, 0.0], [0.424000025, 17.0, 18.0, 0.0], [0.00119102583, 0.0, 0.0, 0.0], [-0.0375607759, 0.0, 0.0, 0.0], [0.00292798434, 0.0, 0.0, 0.0], [-0.0783137605, 0.0, 0.0, 0.0], [0.0545450486, 0.0, 0.0, 0.0], [0.000997344847, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 15, 16, 17, 18, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1042(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0156999994, 1.0, 2.0, 0.0], [-0.0382499993, 3.0, 4.0, 0.0], [-0.0150499996, 5.0, 6.0, 0.0], [-0.0496499985, 7.0, 8.0, 0.0], [-0.0297999997, 9.0, 10.0, 0.0], [0.138474077, 0.0, 0.0, 0.0], [-0.00894000009, 11.0, 12.0, 0.0], [-0.0571999997, 13.0, 14.0, 0.0], [-0.0460999981, 15.0, 16.0, 0.0], [-0.142404541, 0.0, 0.0, 0.0], [-0.0265999995, 17.0, 18.0, 0.0], [-0.101483218, 0.0, 0.0, 0.0], [-0.0052199997, 19.0, 20.0, 0.0], [-0.0655499995, 21.0, 22.0, 0.0], [-0.16674529, 0.0, 0.0, 0.0], [0.114371933, 0.0, 0.0, 0.0], [-0.0435499996, 23.0, 24.0, 0.0], [0.0717385784, 0.0, 0.0, 0.0], [-0.0754650161, 0.0, 0.0, 0.0], [0.125375301, 0.0, 0.0, 0.0], [-0.00463499967, 25.0, 26.0, 0.0], [-0.00312840473, 0.0, 0.0, 0.0], [0.111008532, 0.0, 0.0, 0.0], [-0.0792117566, 0.0, 0.0, 0.0], [0.0624820217, 0.0, 0.0, 0.0], [-0.111121625, 0.0, 0.0, 0.0], [0.00547153084, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 23, 24, 9, 17, 18, 5, 11, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 4, 10, 2, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1043(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.537500024, 7.0, 8.0, 0.0], [-0.051923696, 0.0, 0.0, 0.0], [0.0568347573, 0.0, 0.0, 0.0], [-0.00493269227, 0.0, 0.0, 0.0], [0.523499966, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [-0.851999998, 13.0, 14.0, 2.0], [-0.0605793856, 0.0, 0.0, 0.0], [0.0458581522, 0.0, 0.0, 0.0], [0.549000025, 15.0, 16.0, 0.0], [0.00352407061, 0.0, 0.0, 0.0], [-0.0261451807, 0.0, 0.0, 0.0], [-0.0244347379, 0.0, 0.0, 0.0], [0.0344729722, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1044(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [-0.989500046, 3.0, 4.0, 3.0], [-0.931499958, 5.0, 6.0, 3.0], [-0.0287146717, 0.0, 0.0, 0.0], [0.00310876407, 0.0, 0.0, 0.0], [-0.236499995, 7.0, 8.0, 0.0], [-0.0118258307, 0.0, 0.0, 0.0], [-0.25150001, 9.0, 10.0, 0.0], [-0.965499997, 11.0, 12.0, 4.0], [0.0051031746, 0.0, 0.0, 0.0], [0.0447732657, 0.0, 0.0, 0.0], [-0.180500001, 13.0, 14.0, 0.0], [0.537500024, 15.0, 16.0, 2.0], [0.048221305, 0.0, 0.0, 0.0], [-0.0146313449, 0.0, 0.0, 0.0], [-0.0372703448, 0.0, 0.0, 0.0], [0.0168940779, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 9, 10, 13, 14, 15, 16, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1045(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.953500032, 1.0, 2.0, 4.0], [-0.962499976, 3.0, 4.0, 4.0], [-0.956499994, 5.0, 6.0, 3.0], [-0.734500051, 7.0, 8.0, 1.0], [-0.0286941212, 0.0, 0.0, 0.0], [-0.325500011, 9.0, 10.0, 0.0], [-0.0243293159, 0.0, 0.0, 0.0], [-0.208499998, 11.0, 12.0, 0.0], [0.0276059713, 0.0, 0.0, 0.0], [-0.0260142498, 0.0, 0.0, 0.0], [-0.270500004, 13.0, 14.0, 0.0], [-0.0313201845, 0.0, 0.0, 0.0], [0.0125859817, 0.0, 0.0, 0.0], [0.0722330511, 0.0, 0.0, 0.0], [-0.230500013, 15.0, 16.0, 0.0], [-0.0342810936, 0.0, 0.0, 0.0], [0.0289898179, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 9, 13, 15, 16, 6])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1046(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.401499987, 1.0, 2.0, 1.0], [-0.4745, 3.0, 4.0, 1.0], [0.0263322629, 0.0, 0.0, 0.0], [-0.533499956, 5.0, 6.0, 1.0], [-0.0280827098, 0.0, 0.0, 0.0], [-0.989500046, 7.0, 8.0, 3.0], [0.0216638148, 0.0, 0.0, 0.0], [0.576499999, 9.0, 10.0, 2.0], [0.57249999, 11.0, 12.0, 2.0], [-0.0072583314, 0.0, 0.0, 0.0], [0.0381483249, 0.0, 0.0, 0.0], [0.00197659549, 0.0, 0.0, 0.0], [-0.0548598431, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1047(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0989499986, 1.0, 2.0, 0.0], [-0.115500003, 3.0, 4.0, 0.0], [-0.0965999961, 5.0, 6.0, 0.0], [-0.1175, 7.0, 8.0, 0.0], [-0.1065, 9.0, 10.0, 0.0], [0.11653477, 0.0, 0.0, 0.0], [-0.0910999998, 11.0, 12.0, 0.0], [-0.124499999, 13.0, 14.0, 0.0], [0.0985814556, 0.0, 0.0, 0.0], [-0.124003619, 0.0, 0.0, 0.0], [-0.105499998, 15.0, 16.0, 0.0], [-0.0978517532, 0.0, 0.0, 0.0], [-0.0904500037, 17.0, 18.0, 0.0], [-0.127499998, 19.0, 20.0, 0.0], [-0.119499996, 21.0, 22.0, 0.0], [0.0800383314, 0.0, 0.0, 0.0], [-0.103500001, 23.0, 24.0, 0.0], [0.139442533, 0.0, 0.0, 0.0], [-0.0762000009, 25.0, 26.0, 0.0], [-0.00630488247, 0.0, 0.0, 0.0], [0.0669861138, 0.0, 0.0, 0.0], [-0.0308150854, 0.0, 0.0, 0.0], [-0.0900524855, 0.0, 0.0, 0.0], [-0.0750201046, 0.0, 0.0, 0.0], [-0.0134897456, 0.0, 0.0, 0.0], [-0.122010358, 0.0, 0.0, 0.0], [0.00322729489, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 15, 23, 24, 5, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 16, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1048(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0998999998, 1.0, 2.0, 0.0], [-0.115500003, 3.0, 4.0, 0.0], [-0.0965999961, 5.0, 6.0, 0.0], [-0.1175, 7.0, 8.0, 0.0], [-0.107500002, 9.0, 10.0, 0.0], [-0.113990247, 0.0, 0.0, 0.0], [-0.0910999998, 11.0, 12.0, 0.0], [-0.123500004, 13.0, 14.0, 0.0], [-0.0977560431, 0.0, 0.0, 0.0], [0.125585869, 0.0, 0.0, 0.0], [-0.105499998, 15.0, 16.0, 0.0], [0.101662017, 0.0, 0.0, 0.0], [-0.0904500037, 17.0, 18.0, 0.0], [-0.127499998, 19.0, 20.0, 0.0], [-0.119499996, 21.0, 22.0, 0.0], [-0.0794136673, 0.0, 0.0, 0.0], [-0.103500001, 23.0, 24.0, 0.0], [-0.138104588, 0.0, 0.0, 0.0], [-0.0771999955, 25.0, 26.0, 0.0], [0.0034773536, 0.0, 0.0, 0.0], [-0.0620609745, 0.0, 0.0, 0.0], [0.0328209884, 0.0, 0.0, 0.0], [0.0905338228, 0.0, 0.0, 0.0], [0.0764623731, 0.0, 0.0, 0.0], [0.0143697252, 0.0, 0.0, 0.0], [0.0903625935, 0.0, 0.0, 0.0], [-0.00449077552, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 15, 23, 24, 5, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 16, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1049(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.2755, 3.0, 4.0, 0.0], [0.212500006, 5.0, 6.0, 0.0], [0.264499992, 7.0, 8.0, 0.0], [0.431500018, 9.0, 10.0, 0.0], [-0.193500012, 11.0, 12.0, 0.0], [0.428499997, 13.0, 14.0, 0.0], [0.256500006, 15.0, 16.0, 0.0], [-0.104426846, 0.0, 0.0, 0.0], [0.42049998, 17.0, 18.0, 0.0], [0.4375, 19.0, 20.0, 0.0], [-0.360500008, 21.0, 22.0, 0.0], [-0.0382381454, 0.0, 0.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [0.43599999, 25.0, 26.0, 0.0], [-0.0315500014, 27.0, 28.0, 0.0], [0.0737348646, 0.0, 0.0, 0.0], [0.405499995, 29.0, 30.0, 0.0], [0.0828041807, 0.0, 0.0, 0.0], [0.433499992, 31.0, 32.0, 0.0], [0.446500003, 33.0, 34.0, 0.0], [-0.0186231881, 0.0, 0.0, 0.0], [0.0615703538, 0.0, 0.0, 0.0], [0.0846928731, 0.0, 0.0, 0.0], [0.0219986066, 0.0, 0.0, 0.0], [-0.0339143164, 0.0, 0.0, 0.0], [0.527500033, 35.0, 36.0, 0.0], [0.00618860777, 0.0, 0.0, 0.0], [-0.0569454134, 0.0, 0.0, 0.0], [0.0300480574, 0.0, 0.0, 0.0], [-0.0353286676, 0.0, 0.0, 0.0], [-0.014557302, 0.0, 0.0, 0.0], [-0.0847846493, 0.0, 0.0, 0.0], [0.0484218448, 0.0, 0.0, 0.0], [-0.00909598824, 0.0, 0.0, 0.0], [0.0353016108, 0.0, 0.0, 0.0], [0.00628132373, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 8, 29, 30, 18, 31, 32, 33, 34, 21, 22, 12, 23, 24, 25, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 17, 10, 19, 20, 2, 5, 11, 6, 13, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1050(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.813500047, 1.0, 2.0, 1.0], [-0.994500041, 3.0, 4.0, 3.0], [0.484499991, 5.0, 6.0, 2.0], [0.00478141848, 0.0, 0.0, 0.0], [0.0284328107, 0.0, 0.0, 0.0], [-0.993499994, 7.0, 8.0, 3.0], [-0.234499991, 9.0, 10.0, 0.0], [0.0060426998, 0.0, 0.0, 0.0], [-0.0395590253, 0.0, 0.0, 0.0], [0.6505, 11.0, 12.0, 2.0], [-0.926499963, 13.0, 14.0, 4.0], [-0.0278322641, 0.0, 0.0, 0.0], [0.00908030104, 0.0, 0.0, 0.0], [-0.00782573596, 0.0, 0.0, 0.0], [0.685500026, 15.0, 16.0, 2.0], [0.0558554269, 0.0, 0.0, 0.0], [-0.0110895261, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 11, 12, 13, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1051(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.207500011, 1.0, 2.0, 0.0], [0.635499954, 3.0, 4.0, 2.0], [0.387499988, 5.0, 6.0, 2.0], [-0.820500016, 7.0, 8.0, 1.0], [-0.314999998, 9.0, 10.0, 0.0], [0.00850061607, 0.0, 0.0, 0.0], [-0.703500032, 11.0, 12.0, 1.0], [-0.0291411728, 0.0, 0.0, 0.0], [-0.558500051, 13.0, 14.0, 1.0], [0.019033391, 0.0, 0.0, 0.0], [-0.0379893817, 0.0, 0.0, 0.0], [-0.0407525934, 0.0, 0.0, 0.0], [0.00276470301, 0.0, 0.0, 0.0], [0.442000002, 15.0, 16.0, 2.0], [-0.0148442974, 0.0, 0.0, 0.0], [0.00449933717, 0.0, 0.0, 0.0], [0.0498205349, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 14, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 8, 13, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1052(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [-0.102499999, 3.0, 4.0, 0.0], [0.656499982, 5.0, 6.0, 2.0], [0.461499989, 7.0, 8.0, 2.0], [0.018052835, 0.0, 0.0, 0.0], [-0.00391949527, 0.0, 0.0, 0.0], [0.0325795077, 0.0, 0.0, 0.0], [0.0156429596, 0.0, 0.0, 0.0], [0.593999982, 9.0, 10.0, 2.0], [-0.992499948, 11.0, 12.0, 3.0], [-0.993499994, 13.0, 14.0, 3.0], [-0.0557198822, 0.0, 0.0, 0.0], [-0.00615482638, 0.0, 0.0, 0.0], [0.0252946205, 0.0, 0.0, 0.0], [-0.0226207227, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 13, 14, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1053(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.851999998, 1.0, 2.0, 2.0], [-0.885499954, 3.0, 4.0, 2.0], [-0.113499999, 5.0, 6.0, 0.0], [0.00202000001, 7.0, 8.0, 0.0], [-0.0475474596, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 1.0], [-0.0578999966, 11.0, 12.0, 0.0], [-0.00496499985, 13.0, 14.0, 0.0], [0.00471000001, 15.0, 16.0, 0.0], [-0.210999995, 17.0, 18.0, 0.0], [-0.0688377246, 0.0, 0.0, 0.0], [0.134972945, 0.0, 0.0, 0.0], [0.00679999962, 19.0, 20.0, 0.0], [-0.00939000025, 21.0, 22.0, 0.0], [-0.00413500005, 23.0, 24.0, 0.0], [0.161193326, 0.0, 0.0, 0.0], [-0.923500001, 25.0, 26.0, 2.0], [-0.0579274409, 0.0, 0.0, 0.0], [0.0688857511, 0.0, 0.0, 0.0], [-0.00572500005, 27.0, 28.0, 0.0], [-0.639999986, 29.0, 30.0, 2.0], [-0.00373938284, 0.0, 0.0, 0.0], [0.104026541, 0.0, 0.0, 0.0], [-0.141930431, 0.0, 0.0, 0.0], [-0.0428382382, 0.0, 0.0, 0.0], [-0.00393071724, 0.0, 0.0, 0.0], [0.135038689, 0.0, 0.0, 0.0], [0.0205863491, 0.0, 0.0, 0.0], [-0.0792456716, 0.0, 0.0, 0.0], [0.0500120893, 0.0, 0.0, 0.0], [-0.0428872444, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 4, 17, 18, 10, 11, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 9, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1054(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0152500002, 1.0, 2.0, 0.0], [-0.0907500014, 3.0, 4.0, 0.0], [-0.00963000022, 5.0, 6.0, 0.0], [-0.0914499983, 7.0, 8.0, 0.0], [-0.0720499977, 9.0, 10.0, 0.0], [0.126612499, 0.0, 0.0, 0.0], [-0.00550500024, 11.0, 12.0, 0.0], [-0.0973500013, 13.0, 14.0, 0.0], [0.131423742, 0.0, 0.0, 0.0], [-0.100794919, 0.0, 0.0, 0.0], [-0.0603, 15.0, 16.0, 0.0], [-0.0952931866, 0.0, 0.0, 0.0], [-0.00102999993, 17.0, 18.0, 0.0], [-0.100500003, 19.0, 20.0, 0.0], [-0.128883153, 0.0, 0.0, 0.0], [0.0859565064, 0.0, 0.0, 0.0], [-0.0496499985, 21.0, 22.0, 0.0], [-0.00463499967, 23.0, 24.0, 0.0], [0.000549999997, 25.0, 26.0, 0.0], [-0.000536284817, 0.0, 0.0, 0.0], [0.136797324, 0.0, 0.0, 0.0], [-0.104638137, 0.0, 0.0, 0.0], [-0.00584535161, 0.0, 0.0, 0.0], [0.00282049458, 0.0, 0.0, 0.0], [0.104793109, 0.0, 0.0, 0.0], [-0.0909277871, 0.0, 0.0, 0.0], [0.00175784028, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 15, 21, 22, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 16, 2, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1055(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.421000004, 3.0, 4.0, 0.0], [-0.0371000022, 5.0, 6.0, 0.0], [-0.0390522517, 0.0, 0.0, 0.0], [-0.380499989, 7.0, 8.0, 0.0], [-0.337500006, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [0.045047462, 0.0, 0.0, 0.0], [-0.162, 13.0, 14.0, 0.0], [0.0246772338, 0.0, 0.0, 0.0], [-0.0456986651, 0.0, 0.0, 0.0], [0.0565914065, 0.0, 0.0, 0.0], [0.348500013, 15.0, 16.0, 0.0], [-0.168500006, 17.0, 18.0, 0.0], [-0.0802000016, 19.0, 20.0, 0.0], [-0.0448940843, 0.0, 0.0, 0.0], [0.479499996, 21.0, 22.0, 0.0], [-0.00270548812, 0.0, 0.0, 0.0], [-0.0461920276, 0.0, 0.0, 0.0], [0.0343893245, 0.0, 0.0, 0.0], [-0.00408967771, 0.0, 0.0, 0.0], [0.0419263318, 0.0, 0.0, 0.0], [0.0110040307, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 17, 18, 19, 20, 9, 10, 11, 15, 21, 22])
    branch_indices = np.array([0, 1, 4, 8, 13, 14, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1056(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.642500043, 1.0, 2.0, 1.0], [-0.961500049, 3.0, 4.0, 4.0], [-0.976500034, 5.0, 6.0, 3.0], [-0.180500001, 7.0, 8.0, 0.0], [-0.950500011, 9.0, 10.0, 3.0], [-0.565500021, 11.0, 12.0, 1.0], [-0.0296162441, 0.0, 0.0, 0.0], [0.45450002, 13.0, 14.0, 2.0], [-0.03076832, 0.0, 0.0, 0.0], [-0.89349997, 15.0, 16.0, 4.0], [0.0476520956, 0.0, 0.0, 0.0], [0.0216500927, 0.0, 0.0, 0.0], [-0.00815263949, 0.0, 0.0, 0.0], [-0.0248271152, 0.0, 0.0, 0.0], [0.0294112712, 0.0, 0.0, 0.0], [0.446500003, 17.0, 18.0, 2.0], [-0.0246962458, 0.0, 0.0, 0.0], [-0.0152899008, 0.0, 0.0, 0.0], [0.0373488702, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 17, 18, 16, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 15, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1057(xs):
    #Predicts Class 1
    function_dict = np.array([[0.642500043, 1.0, 2.0, 2.0], [-0.969500005, 3.0, 4.0, 4.0], [-0.912500024, 5.0, 6.0, 4.0], [-0.219500005, 7.0, 8.0, 0.0], [0.455500007, 9.0, 10.0, 2.0], [0.0335333757, 0.0, 0.0, 0.0], [-0.0125685213, 0.0, 0.0, 0.0], [0.0417592376, 0.0, 0.0, 0.0], [-0.0159293003, 0.0, 0.0, 0.0], [0.399500012, 11.0, 12.0, 2.0], [-0.654500008, 13.0, 14.0, 1.0], [-0.0177727994, 0.0, 0.0, 0.0], [0.0336538069, 0.0, 0.0, 0.0], [-0.932500005, 15.0, 16.0, 4.0], [0.00617695879, 0.0, 0.0, 0.0], [-0.0673965812, 0.0, 0.0, 0.0], [-0.00153720973, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 11, 12, 15, 16, 14, 5, 6])
    branch_indices = np.array([0, 1, 3, 4, 9, 10, 13, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1058(xs):
    #Predicts Class 2
    function_dict = np.array([[0.476500005, 1.0, 2.0, 2.0], [-0.972499967, 3.0, 4.0, 4.0], [-0.62349999, 5.0, 6.0, 1.0], [0.00779003743, 0.0, 0.0, 0.0], [-0.0275146887, 0.0, 0.0, 0.0], [0.557500005, 7.0, 8.0, 2.0], [-0.158500001, 9.0, 10.0, 0.0], [0.0433706604, 0.0, 0.0, 0.0], [-0.00121469749, 0.0, 0.0, 0.0], [-0.257499993, 11.0, 12.0, 0.0], [0.0294317883, 0.0, 0.0, 0.0], [-0.980499983, 13.0, 14.0, 3.0], [-0.526499987, 15.0, 16.0, 1.0], [0.0157623459, 0.0, 0.0, 0.0], [-0.00210925308, 0.0, 0.0, 0.0], [0.00891454145, 0.0, 0.0, 0.0], [-0.0518274829, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 13, 14, 15, 16, 10])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1059(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.137499988, 1.0, 2.0, 0.0], [-0.140500009, 3.0, 4.0, 0.0], [-0.111500002, 5.0, 6.0, 0.0], [-0.185499996, 7.0, 8.0, 0.0], [0.0397103056, 0.0, 0.0, 0.0], [-0.118500002, 9.0, 10.0, 0.0], [-0.0987499952, 11.0, 12.0, 0.0], [-0.186500013, 13.0, 14.0, 0.0], [-0.146499991, 15.0, 16.0, 0.0], [-0.120499998, 17.0, 18.0, 0.0], [-0.0738304481, 0.0, 0.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.0922500044, 21.0, 22.0, 0.0], [-0.20449999, 23.0, 24.0, 0.0], [0.0710225552, 0.0, 0.0, 0.0], [-0.0879551619, 0.0, 0.0, 0.0], [-0.144499987, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.119499996, 29.0, 30.0, 0.0], [-0.103500001, 31.0, 32.0, 0.0], [0.0827937052, 0.0, 0.0, 0.0], [-0.113179915, 0.0, 0.0, 0.0], [-0.0909499973, 33.0, 34.0, 0.0], [0.0126720155, 0.0, 0.0, 0.0], [-0.0345222689, 0.0, 0.0, 0.0], [0.0467430651, 0.0, 0.0, 0.0], [-0.0369410776, 0.0, 0.0, 0.0], [-0.0287137572, 0.0, 0.0, 0.0], [0.0526386984, 0.0, 0.0, 0.0], [0.0621009506, 0.0, 0.0, 0.0], [0.0193203352, 0.0, 0.0, 0.0], [-0.0616942234, 0.0, 0.0, 0.0], [0.0991503522, 0.0, 0.0, 0.0], [0.116425604, 0.0, 0.0, 0.0], [-0.002081502, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 25, 26, 4, 27, 28, 29, 30, 10, 31, 32, 20, 21, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 17, 18, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1060(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.163500011, 3.0, 4.0, 0.0], [-0.1505, 5.0, 6.0, 0.0], [-0.395500004, 7.0, 8.0, 0.0], [-0.06568674, 0.0, 0.0, 0.0], [0.0606415607, 0.0, 0.0, 0.0], [-0.141499996, 9.0, 10.0, 0.0], [-0.424499989, 11.0, 12.0, 0.0], [-0.372500002, 13.0, 14.0, 0.0], [-0.142500013, 15.0, 16.0, 0.0], [-0.111500002, 17.0, 18.0, 0.0], [-0.0180590805, 0.0, 0.0, 0.0], [0.0623748042, 0.0, 0.0, 0.0], [-0.0668487996, 0.0, 0.0, 0.0], [-0.923500001, 19.0, 20.0, 2.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.0969977304, 0.0, 0.0, 0.0], [-0.118500002, 23.0, 24.0, 0.0], [-0.0987499952, 25.0, 26.0, 0.0], [-0.0112077519, 0.0, 0.0, 0.0], [0.0249359924, 0.0, 0.0, 0.0], [0.0120457569, 0.0, 0.0, 0.0], [-0.0255868267, 0.0, 0.0, 0.0], [0.00606807787, 0.0, 0.0, 0.0], [0.0760090575, 0.0, 0.0, 0.0], [-0.0397765264, 0.0, 0.0, 0.0], [0.0018377665, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 19, 20, 4, 5, 21, 22, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 8, 14, 2, 6, 9, 15, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1061(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [-0.644500017, 7.0, 8.0, 2.0], [-0.0601120666, 0.0, 0.0, 0.0], [0.0902340189, 0.0, 0.0, 0.0], [0.404500008, 9.0, 10.0, 0.0], [-0.923500001, 11.0, 12.0, 2.0], [-0.0427180938, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [0.405499995, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.0558910817, 0.0, 0.0, 0.0], [0.394500017, 19.0, 20.0, 0.0], [0.04894666, 0.0, 0.0, 0.0], [0.0637534857, 0.0, 0.0, 0.0], [0.418500006, 21.0, 22.0, 0.0], [-0.000108592052, 0.0, 0.0, 0.0], [-0.0589066222, 0.0, 0.0, 0.0], [-0.0276499391, 0.0, 0.0, 0.0], [-0.0691318214, 0.0, 0.0, 0.0], [-0.0663102493, 0.0, 0.0, 0.0], [0.00617239065, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 14, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1062(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.0796000063, 1.0, 2.0, 0.0], [-0.825500011, 3.0, 4.0, 1.0], [0.021687828, 0.0, 0.0, 0.0], [0.0226035584, 0.0, 0.0, 0.0], [0.412999988, 5.0, 6.0, 2.0], [-0.0532825813, 0.0, 0.0, 0.0], [-0.569499969, 7.0, 8.0, 1.0], [-0.997500002, 9.0, 10.0, 3.0], [-0.21450001, 11.0, 12.0, 0.0], [-0.0246619973, 0.0, 0.0, 0.0], [0.0227637794, 0.0, 0.0, 0.0], [-0.00209850981, 0.0, 0.0, 0.0], [-0.0348904133, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 5, 9, 10, 11, 12, 2])
    branch_indices = np.array([0, 1, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1063(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.226500005, 1.0, 2.0, 0.0], [-0.74150002, 3.0, 4.0, 1.0], [-0.742499948, 5.0, 6.0, 1.0], [-0.790500045, 7.0, 8.0, 1.0], [0.530499995, 9.0, 10.0, 2.0], [-0.791499972, 11.0, 12.0, 1.0], [0.553499997, 13.0, 14.0, 2.0], [-0.00166162918, 0.0, 0.0, 0.0], [0.0543546192, 0.0, 0.0, 0.0], [-0.0387547128, 0.0, 0.0, 0.0], [-0.624000013, 15.0, 16.0, 1.0], [0.00381718483, 0.0, 0.0, 0.0], [-0.0518849045, 0.0, 0.0, 0.0], [0.0264974181, 0.0, 0.0, 0.0], [-0.0159404837, 0.0, 0.0, 0.0], [-0.0168110318, 0.0, 0.0, 0.0], [-0.985499978, 17.0, 18.0, 3.0], [0.0450087935, 0.0, 0.0, 0.0], [-0.00593258347, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 15, 17, 18, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 4, 10, 16, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1064(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.977499962, 1.0, 2.0, 4.0], [-0.0204981621, 0.0, 0.0, 0.0], [-0.179500014, 3.0, 4.0, 0.0], [-0.207500011, 5.0, 6.0, 0.0], [-0.60800004, 7.0, 8.0, 1.0], [-0.958500028, 9.0, 10.0, 4.0], [0.0415225253, 0.0, 0.0, 0.0], [-0.02862362, 0.0, 0.0, 0.0], [0.00841569155, 0.0, 0.0, 0.0], [0.0291912314, 0.0, 0.0, 0.0], [0.635499954, 11.0, 12.0, 2.0], [-0.0473185703, 0.0, 0.0, 0.0], [0.0125916796, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 11, 12, 6, 7, 8])
    branch_indices = np.array([0, 2, 3, 5, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1065(xs):
    #Predicts Class 3
    function_dict = np.array([[0.421999991, 1.0, 2.0, 0.0], [0.409500003, 3.0, 4.0, 0.0], [0.429499984, 5.0, 6.0, 0.0], [0.401499987, 7.0, 8.0, 0.0], [0.419499993, 9.0, 10.0, 0.0], [0.110250138, 0.0, 0.0, 0.0], [0.433499992, 11.0, 12.0, 0.0], [0.2755, 13.0, 14.0, 0.0], [0.0445683189, 0.0, 0.0, 0.0], [-0.0798832178, 0.0, 0.0, 0.0], [-0.0159710329, 0.0, 0.0, 0.0], [-0.052359648, 0.0, 0.0, 0.0], [0.46450001, 15.0, 16.0, 0.0], [0.264499992, 17.0, 18.0, 0.0], [0.344999999, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.478500009, 23.0, 24.0, 0.0], [-0.00143414747, 0.0, 0.0, 0.0], [0.0957261175, 0.0, 0.0, 0.0], [-0.0989631787, 0.0, 0.0, 0.0], [0.00893954001, 0.0, 0.0, 0.0], [0.0451404005, 0.0, 0.0, 0.0], [-0.0127121955, 0.0, 0.0, 0.0], [-0.0736450553, 0.0, 0.0, 0.0], [0.00977494568, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1066(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.552000046, 1.0, 2.0, 2.0], [-0.297500014, 3.0, 4.0, 0.0], [-0.435000002, 5.0, 6.0, 2.0], [-0.99849999, 7.0, 8.0, 1.0], [-0.294, 9.0, 10.0, 0.0], [-0.0427964777, 0.0, 0.0, 0.0], [-0.0105760191, 0.0, 0.0, 0.0], [-0.401000023, 11.0, 12.0, 0.0], [0.100634098, 0.0, 0.0, 0.0], [-0.063356638, 0.0, 0.0, 0.0], [-0.210500002, 13.0, 14.0, 0.0], [-0.0674338937, 0.0, 0.0, 0.0], [0.0579161234, 0.0, 0.0, 0.0], [-0.273499995, 15.0, 16.0, 0.0], [-0.190499991, 17.0, 18.0, 0.0], [-0.0133546526, 0.0, 0.0, 0.0], [0.113119327, 0.0, 0.0, 0.0], [-0.0384516902, 0.0, 0.0, 0.0], [0.000745162426, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 15, 16, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 10, 13, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1067(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.539999962, 7.0, 8.0, 0.0], [-0.0393226966, 0.0, 0.0, 0.0], [0.0496512577, 0.0, 0.0, 0.0], [-0.00293446565, 0.0, 0.0, 0.0], [0.521499991, 9.0, 10.0, 0.0], [0.547500014, 11.0, 12.0, 0.0], [0.489499986, 13.0, 14.0, 0.0], [0.528499961, 15.0, 16.0, 0.0], [0.0411386192, 0.0, 0.0, 0.0], [-0.00507813273, 0.0, 0.0, 0.0], [-0.00133763871, 0.0, 0.0, 0.0], [0.0436017215, 0.0, 0.0, 0.0], [-0.0497260727, 0.0, 0.0, 0.0], [0.0035758845, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1068(xs):
    #Predicts Class 0
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [0.669499993, 3.0, 4.0, 2.0], [0.0189773142, 0.0, 0.0, 0.0], [-0.151499987, 5.0, 6.0, 0.0], [-0.0370642208, 0.0, 0.0, 0.0], [-0.199499995, 7.0, 8.0, 0.0], [-0.113499999, 9.0, 10.0, 0.0], [-0.938500047, 11.0, 12.0, 4.0], [-0.0345105268, 0.0, 0.0, 0.0], [0.0384346694, 0.0, 0.0, 0.0], [-0.00387347932, 0.0, 0.0, 0.0], [-0.0104084276, 0.0, 0.0, 0.0], [0.0214349665, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1069(xs):
    #Predicts Class 1
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [0.426499993, 3.0, 4.0, 2.0], [-0.884500027, 5.0, 6.0, 4.0], [-0.219500005, 7.0, 8.0, 0.0], [-0.0279466398, 0.0, 0.0, 0.0], [-0.331499994, 9.0, 10.0, 0.0], [-0.0195118394, 0.0, 0.0, 0.0], [0.0284382422, 0.0, 0.0, 0.0], [-0.0154012954, 0.0, 0.0, 0.0], [-0.0169528108, 0.0, 0.0, 0.0], [-0.291500002, 11.0, 12.0, 0.0], [0.0633386075, 0.0, 0.0, 0.0], [-0.957499981, 13.0, 14.0, 4.0], [0.030538734, 0.0, 0.0, 0.0], [-0.0220836718, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 11, 13, 14, 6])
    branch_indices = np.array([0, 1, 3, 2, 5, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1070(xs):
    #Predicts Class 2
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [0.386500001, 3.0, 4.0, 2.0], [0.772500038, 5.0, 6.0, 2.0], [-0.0192381088, 0.0, 0.0, 0.0], [-0.903499961, 7.0, 8.0, 4.0], [-0.0329382047, 0.0, 0.0, 0.0], [0.00902589597, 0.0, 0.0, 0.0], [-0.210500002, 9.0, 10.0, 0.0], [-0.548500001, 11.0, 12.0, 1.0], [-0.521000028, 13.0, 14.0, 1.0], [-0.674499989, 15.0, 16.0, 1.0], [-0.0320217162, 0.0, 0.0, 0.0], [0.0163323563, 0.0, 0.0, 0.0], [-0.0340799727, 0.0, 0.0, 0.0], [0.0353986621, 0.0, 0.0, 0.0], [0.0490181707, 0.0, 0.0, 0.0], [0.0060259779, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 16, 11, 12, 5, 6])
    branch_indices = np.array([0, 1, 4, 7, 9, 10, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1071(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.37349999, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [0.00805000402, 0.0, 0.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [0.0784490183, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 4.0], [-0.0513741076, 0.0, 0.0, 0.0], [-0.0160184558, 0.0, 0.0, 0.0], [-0.721500039, 11.0, 12.0, 2.0], [0.00939999986, 13.0, 14.0, 0.0], [-0.205500007, 15.0, 16.0, 0.0], [0.00781499967, 17.0, 18.0, 0.0], [-0.00693027629, 0.0, 0.0, 0.0], [-0.0646775737, 0.0, 0.0, 0.0], [-0.0523982495, 0.0, 0.0, 0.0], [0.000574609498, 0.0, 0.0, 0.0], [-0.0115058115, 0.0, 0.0, 0.0], [0.0828174353, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 15, 16, 17, 18, 13, 14])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 11, 12, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1072(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.082949996, 3.0, 4.0, 0.0], [-0.67050004, 5.0, 6.0, 2.0], [0.0757500008, 7.0, 8.0, 0.0], [0.0892499983, 9.0, 10.0, 0.0], [-0.298999995, 11.0, 12.0, 0.0], [-0.552000046, 13.0, 14.0, 2.0], [0.0476500019, 15.0, 16.0, 0.0], [0.0998352394, 0.0, 0.0, 0.0], [0.0883999988, 17.0, 18.0, 0.0], [0.0917500034, 19.0, 20.0, 0.0], [0.0349185392, 0.0, 0.0, 0.0], [-0.0414500013, 21.0, 22.0, 0.0], [0.0449500717, 0.0, 0.0, 0.0], [-0.029882146, 0.0, 0.0, 0.0], [0.03785, 23.0, 24.0, 0.0], [0.0551500022, 25.0, 26.0, 0.0], [0.0867500007, 27.0, 28.0, 0.0], [-0.126088783, 0.0, 0.0, 0.0], [0.106859267, 0.0, 0.0, 0.0], [0.1105, 29.0, 30.0, 0.0], [-0.101044327, 0.0, 0.0, 0.0], [0.00219203555, 0.0, 0.0, 0.0], [0.000553040183, 0.0, 0.0, 0.0], [0.101794794, 0.0, 0.0, 0.0], [-0.0900467932, 0.0, 0.0, 0.0], [-0.00809508841, 0.0, 0.0, 0.0], [-0.0751130879, 0.0, 0.0, 0.0], [0.0425286666, 0.0, 0.0, 0.0], [-0.0758569464, 0.0, 0.0, 0.0], [0.0124179656, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 27, 28, 18, 19, 29, 30, 11, 21, 22, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 17, 10, 20, 2, 5, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1073(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.164499998, 3.0, 4.0, 0.0], [0.0347165577, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 4.0], [-0.155499995, 7.0, 8.0, 0.0], [-0.168500006, 9.0, 10.0, 0.0], [0.0706456974, 0.0, 0.0, 0.0], [-0.0786209852, 0.0, 0.0, 0.0], [-0.153499991, 11.0, 12.0, 0.0], [-0.296499997, 13.0, 14.0, 0.0], [-0.0308894459, 0.0, 0.0, 0.0], [0.0466835126, 0.0, 0.0, 0.0], [-0.0748500004, 15.0, 16.0, 0.0], [-0.0108538698, 0.0, 0.0, 0.0], [0.0555323809, 0.0, 0.0, 0.0], [-0.0438017435, 0.0, 0.0, 0.0], [0.00101083494, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 11, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1074(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.722499967, 1.0, 2.0, 1.0], [-0.113499999, 3.0, 4.0, 0.0], [-0.250499994, 5.0, 6.0, 0.0], [-0.938500047, 7.0, 8.0, 4.0], [-0.0195454247, 0.0, 0.0, 0.0], [-0.0308161713, 0.0, 0.0, 0.0], [-0.872500002, 9.0, 10.0, 4.0], [-0.228500009, 11.0, 12.0, 0.0], [0.0396218449, 0.0, 0.0, 0.0], [-0.148499995, 13.0, 14.0, 0.0], [0.0281572808, 0.0, 0.0, 0.0], [-0.0263899527, 0.0, 0.0, 0.0], [-0.970499992, 15.0, 16.0, 4.0], [-0.0350400805, 0.0, 0.0, 0.0], [0.0109878248, 0.0, 0.0, 0.0], [-0.000739763374, 0.0, 0.0, 0.0], [0.0331375524, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 15, 16, 8, 4, 5, 13, 14, 10])
    branch_indices = np.array([0, 1, 3, 7, 12, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1075(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.341499984, 1.0, 2.0, 0.0], [0.0252140127, 0.0, 0.0, 0.0], [-0.941499949, 3.0, 4.0, 4.0], [-0.980499983, 5.0, 6.0, 3.0], [-0.906499982, 7.0, 8.0, 4.0], [-0.969500005, 9.0, 10.0, 4.0], [0.0114720333, 0.0, 0.0, 0.0], [-0.923500001, 11.0, 12.0, 4.0], [-0.0219396427, 0.0, 0.0, 0.0], [-0.975499988, 13.0, 14.0, 4.0], [-0.218499988, 15.0, 16.0, 0.0], [0.00257207453, 0.0, 0.0, 0.0], [0.0531951487, 0.0, 0.0, 0.0], [-0.017530065, 0.0, 0.0, 0.0], [0.0291126668, 0.0, 0.0, 0.0], [-0.0477793477, 0.0, 0.0, 0.0], [-0.00563071342, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 11, 12, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1076(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.161500007, 3.0, 4.0, 0.0], [-0.019035073, 0.0, 0.0, 0.0], [-0.933500051, 5.0, 6.0, 4.0], [-0.918500006, 7.0, 8.0, 4.0], [-0.968500018, 9.0, 10.0, 4.0], [-0.257499993, 11.0, 12.0, 0.0], [-0.00782698579, 0.0, 0.0, 0.0], [0.0466653742, 0.0, 0.0, 0.0], [-0.0229862258, 0.0, 0.0, 0.0], [-0.630499959, 13.0, 14.0, 1.0], [0.0189454164, 0.0, 0.0, 0.0], [-0.989500046, 15.0, 16.0, 3.0], [0.0471216887, 0.0, 0.0, 0.0], [-0.00356614566, 0.0, 0.0, 0.0], [-0.0489096977, 0.0, 0.0, 0.0], [-0.00655965181, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 11, 15, 16, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1077(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.161500007, 3.0, 4.0, 0.0], [-0.1105, 5.0, 6.0, 0.0], [-0.747500002, 7.0, 8.0, 2.0], [-0.142500013, 9.0, 10.0, 0.0], [-0.1175, 11.0, 12.0, 0.0], [-0.0968500003, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.0453760773, 0.0, 0.0, 0.0], [-0.0602788031, 0.0, 0.0, 0.0], [-0.0131173842, 0.0, 0.0, 0.0], [-0.129500002, 17.0, 18.0, 0.0], [0.0836264789, 0.0, 0.0, 0.0], [-0.100500003, 19.0, 20.0, 0.0], [-0.0914499983, 21.0, 22.0, 0.0], [-0.192499995, 23.0, 24.0, 0.0], [0.0608407259, 0.0, 0.0, 0.0], [-0.130499989, 25.0, 26.0, 0.0], [-0.120499998, 27.0, 28.0, 0.0], [-0.104499996, 29.0, 30.0, 0.0], [-0.1109199, 0.0, 0.0, 0.0], [0.116663076, 0.0, 0.0, 0.0], [-0.0907500014, 31.0, 32.0, 0.0], [0.00466448162, 0.0, 0.0, 0.0], [-0.0333360434, 0.0, 0.0, 0.0], [0.0113898795, 0.0, 0.0, 0.0], [0.0596076399, 0.0, 0.0, 0.0], [-0.0396995395, 0.0, 0.0, 0.0], [0.000637171092, 0.0, 0.0, 0.0], [-0.0665992424, 0.0, 0.0, 0.0], [0.00991318282, 0.0, 0.0, 0.0], [-0.115297407, 0.0, 0.0, 0.0], [0.00252998294, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 10, 25, 26, 27, 28, 12, 29, 30, 20, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 11, 17, 18, 6, 13, 19, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1078(xs):
    #Predicts Class 4
    function_dict = np.array([[0.157999992, 1.0, 2.0, 0.0], [0.0941499993, 3.0, 4.0, 0.0], [0.193500012, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.1105, 9.0, 10.0, 0.0], [-0.0865468532, 0.0, 0.0, 0.0], [0.194499999, 11.0, 12.0, 0.0], [0.0885500014, 13.0, 14.0, 0.0], [-0.0670208186, 0.0, 0.0, 0.0], [0.0206547491, 0.0, 0.0, 0.0], [0.0795103014, 0.0, 0.0, 0.0], [0.0422943942, 0.0, 0.0, 0.0], [0.202500001, 15.0, 16.0, 0.0], [0.0854000002, 17.0, 18.0, 0.0], [0.0854682624, 0.0, 0.0, 0.0], [-0.0404774807, 0.0, 0.0, 0.0], [0.00505739311, 0.0, 0.0, 0.0], [0.000102266866, 0.0, 0.0, 0.0], [-0.053096965, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 10, 5, 11, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1079(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.556499958, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.541499972, 7.0, 8.0, 0.0], [0.557999969, 9.0, 10.0, 0.0], [0.0391084701, 0.0, 0.0, 0.0], [-9.07220601e-05, 0.0, 0.0, 0.0], [-0.851999998, 11.0, 12.0, 2.0], [0.0354344174, 0.0, 0.0, 0.0], [-0.0412821211, 0.0, 0.0, 0.0], [-1.22396032e-05, 0.0, 0.0, 0.0], [0.538499951, 13.0, 14.0, 0.0], [-0.997500002, 15.0, 16.0, 1.0], [0.00498987408, 0.0, 0.0, 0.0], [-0.0428798124, 0.0, 0.0, 0.0], [-0.0696181133, 0.0, 0.0, 0.0], [0.00395764597, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1080(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.794499993, 1.0, 2.0, 1.0], [-0.835500002, 3.0, 4.0, 1.0], [-0.102499999, 5.0, 6.0, 0.0], [-0.00720599201, 0.0, 0.0, 0.0], [0.0268432051, 0.0, 0.0, 0.0], [-0.569499969, 7.0, 8.0, 1.0], [-0.0327987, 0.0, 0.0, 0.0], [-0.67050004, 9.0, 10.0, 1.0], [-0.969500005, 11.0, 12.0, 3.0], [-0.722499967, 13.0, 14.0, 1.0], [0.0376076214, 0.0, 0.0, 0.0], [-0.00607072841, 0.0, 0.0, 0.0], [-0.0228009485, 0.0, 0.0, 0.0], [0.00860818848, 0.0, 0.0, 0.0], [-0.0274945199, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 9, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1081(xs):
    #Predicts Class 1
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [-0.995499969, 3.0, 4.0, 3.0], [-0.667500019, 5.0, 6.0, 1.0], [-0.794499993, 7.0, 8.0, 1.0], [0.387499988, 9.0, 10.0, 2.0], [-0.946500003, 11.0, 12.0, 4.0], [-0.948500037, 13.0, 14.0, 4.0], [-0.0129738888, 0.0, 0.0, 0.0], [0.0277288966, 0.0, 0.0, 0.0], [0.00631738966, 0.0, 0.0, 0.0], [-0.0382836536, 0.0, 0.0, 0.0], [0.0403077342, 0.0, 0.0, 0.0], [-0.00244562468, 0.0, 0.0, 0.0], [-0.0248685498, 0.0, 0.0, 0.0], [-0.912500024, 15.0, 16.0, 4.0], [0.0346560143, 0.0, 0.0, 0.0], [-0.0156691317, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 12, 13, 15, 16])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1082(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.691499949, 1.0, 2.0, 1.0], [-0.961500049, 3.0, 4.0, 4.0], [-0.266499996, 5.0, 6.0, 0.0], [0.00697673112, 0.0, 0.0, 0.0], [-0.0321751051, 0.0, 0.0, 0.0], [-0.0111388713, 0.0, 0.0, 0.0], [-0.952499986, 7.0, 8.0, 4.0], [-0.00899709947, 0.0, 0.0, 0.0], [-0.149500012, 9.0, 10.0, 0.0], [-0.526499987, 11.0, 12.0, 1.0], [-0.00509142131, 0.0, 0.0, 0.0], [0.05652247, 0.0, 0.0, 0.0], [-0.00125651667, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 11, 12, 10])
    branch_indices = np.array([0, 1, 2, 6, 8, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1083(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.0325785615, 0.0, 0.0, 0.0], [0.0505159087, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.0245843995, 0.0, 0.0, 0.0], [0.0201484114, 0.0, 0.0, 0.0], [-0.721500039, 11.0, 12.0, 2.0], [-0.0446150042, 0.0, 0.0, 0.0], [-0.770500004, 13.0, 14.0, 2.0], [-0.120999999, 15.0, 16.0, 0.0], [7.88425823e-05, 0.0, 0.0, 0.0], [-0.0485249273, 0.0, 0.0, 0.0], [0.0879457295, 0.0, 0.0, 0.0], [-0.00589642581, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 13, 14, 15, 16, 10])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1084(xs):
    #Predicts Class 4
    function_dict = np.array([[0.111500002, 1.0, 2.0, 0.0], [0.0912000015, 3.0, 4.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [0.0888999999, 7.0, 8.0, 0.0], [0.0923999995, 9.0, 10.0, 0.0], [-0.0872341171, 0.0, 0.0, 0.0], [0.196500003, 11.0, 12.0, 0.0], [0.0850500017, 13.0, 14.0, 0.0], [-0.0660739541, 0.0, 0.0, 0.0], [0.0887255818, 0.0, 0.0, 0.0], [0.0221571792, 0.0, 0.0, 0.0], [0.195499986, 15.0, 16.0, 0.0], [-0.0340930596, 0.0, 0.0, 0.0], [0.0760499984, 17.0, 18.0, 0.0], [0.0883999988, 19.0, 20.0, 0.0], [0.0112607516, 0.0, 0.0, 0.0], [0.0412410982, 0.0, 0.0, 0.0], [9.09580631e-05, 0.0, 0.0, 0.0], [-0.0812571943, 0.0, 0.0, 0.0], [0.0677102581, 0.0, 0.0, 0.0], [-0.00586371357, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 15, 16, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1085(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.033293739, 0.0, 0.0, 0.0], [-0.995499969, 3.0, 4.0, 1.0], [-0.654500008, 5.0, 6.0, 2.0], [-0.0638744384, 0.0, 0.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [0.0459875949, 0.0, 0.0, 0.0], [0.588, 9.0, 10.0, 0.0], [0.229000002, 11.0, 12.0, 0.0], [0.00110660819, 0.0, 0.0, 0.0], [0.0371413343, 0.0, 0.0, 0.0], [0.0132230688, 0.0, 0.0, 0.0], [-0.0545839816, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 6, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1086(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.0796000063, 1.0, 2.0, 0.0], [-0.140500009, 3.0, 4.0, 0.0], [0.0189334545, 0.0, 0.0, 0.0], [-0.179500014, 5.0, 6.0, 0.0], [-0.0274717044, 0.0, 0.0, 0.0], [-0.864500046, 7.0, 8.0, 4.0], [0.034320578, 0.0, 0.0, 0.0], [-0.656000018, 9.0, 10.0, 1.0], [-0.977499962, 11.0, 12.0, 3.0], [0.0144262062, 0.0, 0.0, 0.0], [-0.0269287154, 0.0, 0.0, 0.0], [-0.0390586816, 0.0, 0.0, 0.0], [-0.00422625942, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1087(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [0.516499996, 3.0, 4.0, 2.0], [-0.651499987, 5.0, 6.0, 1.0], [-0.0276067387, 0.0, 0.0, 0.0], [0.0134762982, 0.0, 0.0, 0.0], [-0.960500002, 7.0, 8.0, 3.0], [-0.294499993, 9.0, 10.0, 0.0], [-0.950500011, 11.0, 12.0, 4.0], [-0.0181976706, 0.0, 0.0, 0.0], [0.022203669, 0.0, 0.0, 0.0], [-0.03726843, 0.0, 0.0, 0.0], [-0.219500005, 13.0, 14.0, 0.0], [0.0449304581, 0.0, 0.0, 0.0], [0.0291672777, 0.0, 0.0, 0.0], [-0.0172744822, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 12, 8, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1088(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.401499987, 1.0, 2.0, 1.0], [0.69749999, 3.0, 4.0, 2.0], [0.0190968513, 0.0, 0.0, 0.0], [-0.186500013, 5.0, 6.0, 0.0], [-0.217500001, 7.0, 8.0, 0.0], [-0.747500002, 9.0, 10.0, 1.0], [-0.715499997, 11.0, 12.0, 1.0], [0.0242059454, 0.0, 0.0, 0.0], [-0.00663710432, 0.0, 0.0, 0.0], [0.0213077515, 0.0, 0.0, 0.0], [-0.990499973, 13.0, 14.0, 3.0], [-0.017568307, 0.0, 0.0, 0.0], [0.0360243693, 0.0, 0.0, 0.0], [-0.012813244, 0.0, 0.0, 0.0], [-0.0567992814, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1089(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.557999969, 3.0, 4.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [0.421999991, 7.0, 8.0, 0.0], [-0.0531344116, 0.0, 0.0, 0.0], [0.0651888549, 0.0, 0.0, 0.0], [-0.0122164758, 0.0, 0.0, 0.0], [0.418500006, 9.0, 10.0, 0.0], [0.429499984, 11.0, 12.0, 0.0], [0.407999992, 13.0, 14.0, 0.0], [0.419499993, 15.0, 16.0, 0.0], [0.0861570984, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.0014159868, 0.0, 0.0, 0.0], [0.0832460895, 0.0, 0.0, 0.0], [-0.0773030967, 0.0, 0.0, 0.0], [-0.0123661868, 0.0, 0.0, 0.0], [-0.00659184065, 0.0, 0.0, 0.0], [0.0860217214, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1090(xs):
    #Predicts Class 4
    function_dict = np.array([[0.192499995, 1.0, 2.0, 0.0], [0.152999997, 3.0, 4.0, 0.0], [0.195499986, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.100736976, 0.0, 0.0, 0.0], [-0.0534230955, 0.0, 0.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0892499983, 11.0, 12.0, 0.0], [-0.0646949708, 0.0, 0.0, 0.0], [0.030256182, 0.0, 0.0, 0.0], [-0.0253753606, 0.0, 0.0, 0.0], [0.0854000002, 13.0, 14.0, 0.0], [0.0917500034, 15.0, 16.0, 0.0], [0.000471362873, 0.0, 0.0, 0.0], [-0.0468018763, 0.0, 0.0, 0.0], [0.0889501795, 0.0, 0.0, 0.0], [0.00473744236, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1091(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.348500013, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [-0.406000018, 15.0, 16.0, 0.0], [0.0449204817, 0.0, 0.0, 0.0], [-0.0660973415, 0.0, 0.0, 0.0], [-0.000484418881, 0.0, 0.0, 0.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.0481271371, 0.0, 0.0, 0.0], [0.437000006, 19.0, 20.0, 0.0], [0.0512876138, 0.0, 0.0, 0.0], [-0.0390746929, 0.0, 0.0, 0.0], [-0.380499989, 21.0, 22.0, 0.0], [0.0611802153, 0.0, 0.0, 0.0], [-0.360500008, 23.0, 24.0, 0.0], [-0.012790381, 0.0, 0.0, 0.0], [0.0374878272, 0.0, 0.0, 0.0], [0.0536958128, 0.0, 0.0, 0.0], [-0.00205353415, 0.0, 0.0, 0.0], [-0.0476115495, 0.0, 0.0, 0.0], [0.016682487, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 21, 22, 8, 9, 10, 17, 23, 24, 12, 19, 20, 14])
    branch_indices = np.array([0, 1, 3, 7, 16, 4, 2, 5, 11, 18, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1092(xs):
    #Predicts Class 0
    function_dict = np.array([[0.63349998, 1.0, 2.0, 2.0], [-0.151499987, 3.0, 4.0, 0.0], [-0.783500016, 5.0, 6.0, 4.0], [-0.263500005, 7.0, 8.0, 0.0], [-0.988499999, 9.0, 10.0, 3.0], [-0.916499972, 11.0, 12.0, 4.0], [-0.0166746322, 0.0, 0.0, 0.0], [0.016187368, 0.0, 0.0, 0.0], [-0.75999999, 13.0, 14.0, 1.0], [-0.0112437177, 0.0, 0.0, 0.0], [0.0432355478, 0.0, 0.0, 0.0], [-0.00354065886, 0.0, 0.0, 0.0], [0.042443715, 0.0, 0.0, 0.0], [-0.798500001, 15.0, 16.0, 1.0], [0.5255, 17.0, 18.0, 2.0], [-0.0187661014, 0.0, 0.0, 0.0], [0.0305731911, 0.0, 0.0, 0.0], [-0.00409493828, 0.0, 0.0, 0.0], [-0.0706722811, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 17, 18, 9, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 8, 13, 14, 4, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1093(xs):
    #Predicts Class 1
    function_dict = np.array([[0.603500009, 1.0, 2.0, 2.0], [-0.169499993, 3.0, 4.0, 0.0], [-0.615499973, 5.0, 6.0, 1.0], [-0.218499988, 7.0, 8.0, 0.0], [-0.0180026721, 0.0, 0.0, 0.0], [-0.03232871, 0.0, 0.0, 0.0], [0.0105355484, 0.0, 0.0, 0.0], [0.554499984, 9.0, 10.0, 2.0], [-0.717000008, 11.0, 12.0, 1.0], [-0.786499977, 13.0, 14.0, 1.0], [0.0289734993, 0.0, 0.0, 0.0], [0.0111171855, 0.0, 0.0, 0.0], [0.0446244814, 0.0, 0.0, 0.0], [0.0166869052, 0.0, 0.0, 0.0], [-0.0301914103, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1094(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.566499949, 3.0, 4.0, 1.0], [-0.266499996, 5.0, 6.0, 0.0], [-0.230500013, 7.0, 8.0, 0.0], [-0.0227037687, 0.0, 0.0, 0.0], [-0.0087515926, 0.0, 0.0, 0.0], [0.0289298594, 0.0, 0.0, 0.0], [-0.0274575837, 0.0, 0.0, 0.0], [0.476500005, 9.0, 10.0, 2.0], [-0.0101302341, 0.0, 0.0, 0.0], [-0.903499961, 11.0, 12.0, 4.0], [0.0341466293, 0.0, 0.0, 0.0], [-0.000337087607, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 9, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1095(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.972000003, 1.0, 2.0, 2.0], [0.538499951, 3.0, 4.0, 0.0], [0.0255500004, 5.0, 6.0, 0.0], [0.513000011, 7.0, 8.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [-0.00517999986, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [0.465499997, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.561499953, 19.0, 20.0, 0.0], [-0.00563282054, 0.0, 0.0, 0.0], [-0.0269000009, 21.0, 22.0, 0.0], [0.128570348, 0.0, 0.0, 0.0], [-0.129206747, 0.0, 0.0, 0.0], [-0.822000027, 23.0, 24.0, 2.0], [-0.999500036, 25.0, 26.0, 4.0], [0.0628495291, 0.0, 0.0, 0.0], [-0.0974089727, 0.0, 0.0, 0.0], [0.025484737, 0.0, 0.0, 0.0], [0.549999952, 27.0, 28.0, 0.0], [0.0709512457, 0.0, 0.0, 0.0], [-0.0382499993, 29.0, 30.0, 0.0], [-0.0894271582, 0.0, 0.0, 0.0], [0.0598625802, 0.0, 0.0, 0.0], [-0.689499974, 31.0, 32.0, 2.0], [0.00196875189, 0.0, 0.0, 0.0], [-0.0308161993, 0.0, 0.0, 0.0], [0.0594855621, 0.0, 0.0, 0.0], [-0.0320798866, 0.0, 0.0, 0.0], [-0.0196344629, 0.0, 0.0, 0.0], [0.126176506, 0.0, 0.0, 0.0], [-0.117664218, 0.0, 0.0, 0.0], [0.0162560791, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 18, 27, 28, 20, 10, 29, 30, 22, 12, 13, 23, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 9, 19, 2, 5, 11, 21, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1096(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0740500018, 1.0, 2.0, 0.0], [0.0506500006, 3.0, 4.0, 0.0], [0.0760499984, 5.0, 6.0, 0.0], [0.0447499976, 7.0, 8.0, 0.0], [-0.0835162327, 0.0, 0.0, 0.0], [0.0817548335, 0.0, 0.0, 0.0], [0.0825999975, 9.0, 10.0, 0.0], [0.0368999988, 11.0, 12.0, 0.0], [0.0938534811, 0.0, 0.0, 0.0], [-0.105513677, 0.0, 0.0, 0.0], [0.0854000002, 13.0, 14.0, 0.0], [0.028549999, 15.0, 16.0, 0.0], [-0.109878227, 0.0, 0.0, 0.0], [0.106923021, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.0024615787, 0.0, 0.0, 0.0], [0.101196289, 0.0, 0.0, 0.0], [-0.0136917783, 0.0, 0.0, 0.0], [0.0675936043, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1097(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.972000003, 1.0, 2.0, 2.0], [0.538499951, 3.0, 4.0, 0.0], [-0.080400005, 5.0, 6.0, 0.0], [0.513000011, 7.0, 8.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [-0.337500006, 11.0, 12.0, 0.0], [-0.0742499977, 13.0, 14.0, 0.0], [0.465499997, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.561499953, 19.0, 20.0, 0.0], [0.0124050686, 0.0, 0.0, 0.0], [0.0107120303, 0.0, 0.0, 0.0], [-0.0929187015, 0.0, 0.0, 0.0], [0.104826219, 0.0, 0.0, 0.0], [0.359499991, 21.0, 22.0, 0.0], [0.424000025, 23.0, 24.0, 0.0], [-0.0609697551, 0.0, 0.0, 0.0], [0.0989232361, 0.0, 0.0, 0.0], [-0.0247470532, 0.0, 0.0, 0.0], [0.549999952, 25.0, 26.0, 0.0], [-0.0684903935, 0.0, 0.0, 0.0], [-0.0473525971, 0.0, 0.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.00434527546, 0.0, 0.0, 0.0], [0.0264835767, 0.0, 0.0, 0.0], [-0.0576930046, 0.0, 0.0, 0.0], [0.0333279334, 0.0, 0.0, 0.0], [0.00147652649, 0.0, 0.0, 0.0], [0.0971961394, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 17, 18, 25, 26, 20, 10, 11, 12, 13, 21, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 9, 19, 2, 5, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1098(xs):
    #Predicts Class 0
    function_dict = np.array([[0.484499991, 1.0, 2.0, 2.0], [-0.813500047, 3.0, 4.0, 1.0], [-0.234499991, 5.0, 6.0, 0.0], [0.0163870025, 0.0, 0.0, 0.0], [-0.993499994, 7.0, 8.0, 3.0], [-0.929499984, 9.0, 10.0, 4.0], [-0.141499996, 11.0, 12.0, 0.0], [0.00362299732, 0.0, 0.0, 0.0], [-0.0404734388, 0.0, 0.0, 0.0], [0.0184663311, 0.0, 0.0, 0.0], [0.653499961, 13.0, 14.0, 2.0], [-0.976500034, 15.0, 16.0, 3.0], [-0.0111306859, 0.0, 0.0, 0.0], [-0.0409152396, 0.0, 0.0, 0.0], [-0.00306845782, 0.0, 0.0, 0.0], [0.591500044, 17.0, 18.0, 2.0], [0.00546763884, 0.0, 0.0, 0.0], [0.0563145801, 0.0, 0.0, 0.0], [0.00768771162, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 13, 14, 17, 18, 16, 12])
    branch_indices = np.array([0, 1, 4, 2, 5, 10, 6, 11, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1099(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.739500046, 1.0, 2.0, 1.0], [-0.810500026, 3.0, 4.0, 1.0], [-0.958500028, 5.0, 6.0, 3.0], [-0.211499989, 7.0, 8.0, 0.0], [-0.226500005, 9.0, 10.0, 0.0], [0.530499995, 11.0, 12.0, 2.0], [0.0219926946, 0.0, 0.0, 0.0], [-0.0193113983, 0.0, 0.0, 0.0], [0.00800698716, 0.0, 0.0, 0.0], [0.0396825708, 0.0, 0.0, 0.0], [-0.00439204089, 0.0, 0.0, 0.0], [-0.0463392846, 0.0, 0.0, 0.0], [-0.235500008, 13.0, 14.0, 0.0], [0.635499954, 15.0, 16.0, 2.0], [-0.0196989849, 0.0, 0.0, 0.0], [0.0461838543, 0.0, 0.0, 0.0], [-0.0136424461, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 15, 16, 14, 6])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 12, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1100(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.605499983, 1.0, 2.0, 1.0], [0.483500004, 3.0, 4.0, 2.0], [-0.960500002, 5.0, 6.0, 3.0], [0.436500013, 7.0, 8.0, 2.0], [-0.994500041, 9.0, 10.0, 3.0], [0.7245, 11.0, 12.0, 2.0], [-0.0149154505, 0.0, 0.0, 0.0], [-0.0161162019, 0.0, 0.0, 0.0], [0.0313279554, 0.0, 0.0, 0.0], [-0.0346800536, 0.0, 0.0, 0.0], [-0.00375134707, 0.0, 0.0, 0.0], [-0.953500032, 13.0, 14.0, 4.0], [0.0386033505, 0.0, 0.0, 0.0], [0.0317780785, 0.0, 0.0, 0.0], [-0.0216475055, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 13, 14, 12, 6])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1101(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.529999971, 3.0, 4.0, 2.0], [-0.0356932655, 0.0, 0.0, 0.0], [-0.644500017, 5.0, 6.0, 2.0], [0.0430039205, 0.0, 0.0, 0.0], [0.415000021, 7.0, 8.0, 0.0], [-0.0519187227, 0.0, 0.0, 0.0], [0.406499982, 9.0, 10.0, 0.0], [0.537500024, 11.0, 12.0, 0.0], [-0.00028046337, 0.0, 0.0, 0.0], [-0.084186323, 0.0, 0.0, 0.0], [0.024451727, 0.0, 0.0, 0.0], [-0.0171480589, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1102(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.654500008, 1.0, 2.0, 2.0], [-0.680500031, 3.0, 4.0, 2.0], [-0.125499994, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [0.0442006625, 0.0, 0.0, 0.0], [0.0115295146, 0.0, 0.0, 0.0], [-0.529999971, 9.0, 10.0, 2.0], [-0.923500001, 11.0, 12.0, 2.0], [-0.254500002, 13.0, 14.0, 0.0], [-0.0643749759, 0.0, 0.0, 0.0], [-0.0111521631, 0.0, 0.0, 0.0], [0.0941499993, 15.0, 16.0, 0.0], [-0.0760999992, 17.0, 18.0, 0.0], [0.0334049277, 0.0, 0.0, 0.0], [-0.157499999, 19.0, 20.0, 0.0], [-0.002305815, 0.0, 0.0, 0.0], [0.0254357848, 0.0, 0.0, 0.0], [0.113368779, 0.0, 0.0, 0.0], [-0.00859525427, 0.0, 0.0, 0.0], [-0.0907015055, 0.0, 0.0, 0.0], [-0.0109103909, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 19, 20, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1103(xs):
    #Predicts Class 5
    function_dict = np.array([[0.539999962, 1.0, 2.0, 0.0], [0.506000042, 3.0, 4.0, 0.0], [0.547500014, 5.0, 6.0, 0.0], [0.489499986, 7.0, 8.0, 0.0], [0.522500038, 9.0, 10.0, 0.0], [0.063899897, 0.0, 0.0, 0.0], [0.5625, 11.0, 12.0, 0.0], [0.465499997, 13.0, 14.0, 0.0], [0.0766178891, 0.0, 0.0, 0.0], [-0.0730872303, 0.0, 0.0, 0.0], [0.527500033, 15.0, 16.0, 0.0], [-0.038776774, 0.0, 0.0, 0.0], [0.620499969, 17.0, 18.0, 0.0], [0.455500007, 19.0, 20.0, 0.0], [-0.0550341494, 0.0, 0.0, 0.0], [-0.00429629767, 0.0, 0.0, 0.0], [-0.048070956, 0.0, 0.0, 0.0], [0.0503370464, 0.0, 0.0, 0.0], [-0.0148769338, 0.0, 0.0, 0.0], [-0.000454348396, 0.0, 0.0, 0.0], [0.0292921104, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 15, 16, 5, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 2, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1104(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.836500049, 1.0, 2.0, 4.0], [-0.213499993, 3.0, 4.0, 0.0], [-0.203999996, 5.0, 6.0, 0.0], [-0.759500027, 7.0, 8.0, 1.0], [-0.173500001, 9.0, 10.0, 0.0], [0.0327931233, 0.0, 0.0, 0.0], [-0.015012864, 0.0, 0.0, 0.0], [0.44599998, 11.0, 12.0, 2.0], [-0.25849998, 13.0, 14.0, 0.0], [0.476500005, 15.0, 16.0, 2.0], [-0.131500006, 17.0, 18.0, 0.0], [-0.0199571364, 0.0, 0.0, 0.0], [0.0243366305, 0.0, 0.0, 0.0], [0.00261327624, 0.0, 0.0, 0.0], [-0.0552255139, 0.0, 0.0, 0.0], [0.00522783538, 0.0, 0.0, 0.0], [0.0420844778, 0.0, 0.0, 0.0], [-0.0342288353, 0.0, 0.0, 0.0], [-0.0628999993, 19.0, 20.0, 0.0], [0.0264405236, 0.0, 0.0, 0.0], [-0.0137031339, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 19, 20, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 4, 9, 10, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1105(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [0.441500008, 3.0, 4.0, 2.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.823500037, 7.0, 8.0, 1.0], [-0.958500028, 9.0, 10.0, 4.0], [0.0121493991, 0.0, 0.0, 0.0], [-0.230500013, 11.0, 12.0, 0.0], [0.0184953455, 0.0, 0.0, 0.0], [-0.0231135935, 0.0, 0.0, 0.0], [-0.2245, 13.0, 14.0, 0.0], [0.0343357883, 0.0, 0.0, 0.0], [-0.917500019, 15.0, 16.0, 4.0], [0.0113400305, 0.0, 0.0, 0.0], [-0.0203103218, 0.0, 0.0, 0.0], [0.0260171276, 0.0, 0.0, 0.0], [-0.0489115119, 0.0, 0.0, 0.0], [-0.0031236941, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 13, 14, 10, 5, 15, 16, 12])
    branch_indices = np.array([0, 1, 3, 4, 9, 2, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1106(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.183499992, 1.0, 2.0, 0.0], [-0.985499978, 3.0, 4.0, 3.0], [-0.988499999, 5.0, 6.0, 3.0], [-0.217500001, 7.0, 8.0, 0.0], [-0.874500036, 9.0, 10.0, 4.0], [0.00881112926, 0.0, 0.0, 0.0], [-0.0312224049, 0.0, 0.0, 0.0], [-0.238499999, 11.0, 12.0, 0.0], [-0.0341579244, 0.0, 0.0, 0.0], [0.0351314694, 0.0, 0.0, 0.0], [-0.0132506769, 0.0, 0.0, 0.0], [-0.0162862781, 0.0, 0.0, 0.0], [0.0386302322, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1107(xs):
    #Predicts Class 3
    function_dict = np.array([[0.521499991, 1.0, 2.0, 0.0], [0.466499984, 3.0, 4.0, 0.0], [0.537500024, 5.0, 6.0, 0.0], [0.463499993, 7.0, 8.0, 0.0], [0.503000021, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [0.543500006, 13.0, 14.0, 0.0], [0.455500007, 15.0, 16.0, 0.0], [0.0583248697, 0.0, 0.0, 0.0], [-0.0794226825, 0.0, 0.0, 0.0], [-0.010335654, 0.0, 0.0, 0.0], [0.0579378605, 0.0, 0.0, 0.0], [0.0157060977, 0.0, 0.0, 0.0], [-0.0472200997, 0.0, 0.0, 0.0], [0.565500021, 17.0, 18.0, 0.0], [0.445500016, 19.0, 20.0, 0.0], [-0.0495241284, 0.0, 0.0, 0.0], [0.556499958, 21.0, 22.0, 0.0], [0.620499969, 23.0, 24.0, 0.0], [-0.00138550496, 0.0, 0.0, 0.0], [0.0451167412, 0.0, 0.0, 0.0], [-0.00659795105, 0.0, 0.0, 0.0], [0.0376632251, 0.0, 0.0, 0.0], [-0.038945578, 0.0, 0.0, 0.0], [0.0233981367, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 16, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 6, 14, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1108(xs):
    #Predicts Class 4
    function_dict = np.array([[0.157999992, 1.0, 2.0, 0.0], [0.1105, 3.0, 4.0, 0.0], [0.193500012, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.076780729, 0.0, 0.0, 0.0], [-0.0780021995, 0.0, 0.0, 0.0], [0.194499999, 9.0, 10.0, 0.0], [0.0873000026, 11.0, 12.0, 0.0], [0.0941499993, 13.0, 14.0, 0.0], [0.0401838832, 0.0, 0.0, 0.0], [0.202500001, 15.0, 16.0, 0.0], [0.082949996, 17.0, 18.0, 0.0], [0.0749752522, 0.0, 0.0, 0.0], [-0.0664043054, 0.0, 0.0, 0.0], [0.0114424657, 0.0, 0.0, 0.0], [-0.0443827435, 0.0, 0.0, 0.0], [0.0176283307, 0.0, 0.0, 0.0], [0.000514478423, 0.0, 0.0, 0.0], [-0.0554257706, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1109(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.253000021, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [-0.0420762822, 0.0, 0.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [0.0403205976, 0.0, 0.0, 0.0], [0.0384611115, 0.0, 0.0, 0.0], [-0.770500004, 15.0, 16.0, 2.0], [0.0731963813, 0.0, 0.0, 0.0], [0.43599999, 17.0, 18.0, 0.0], [0.538499951, 19.0, 20.0, 0.0], [0.417999983, 21.0, 22.0, 0.0], [-0.056710463, 0.0, 0.0, 0.0], [0.0187909976, 0.0, 0.0, 0.0], [-0.0328685418, 0.0, 0.0, 0.0], [0.0348081961, 0.0, 0.0, 0.0], [0.00489994884, 0.0, 0.0, 0.0], [-0.0326810777, 0.0, 0.0, 0.0], [0.00673175976, 0.0, 0.0, 0.0], [-0.076761663, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 15, 16, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 10, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1110(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [-0.0152145959, 0.0, 0.0, 0.0], [-0.931499958, 3.0, 4.0, 3.0], [-0.972499967, 5.0, 6.0, 3.0], [-0.0167297963, 0.0, 0.0, 0.0], [-0.983500004, 7.0, 8.0, 3.0], [0.0316175148, 0.0, 0.0, 0.0], [0.63349998, 9.0, 10.0, 2.0], [-0.0257757194, 0.0, 0.0, 0.0], [-0.00423427718, 0.0, 0.0, 0.0], [0.0334563889, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 8, 6, 4])
    branch_indices = np.array([0, 2, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1111(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [0.638499975, 3.0, 4.0, 2.0], [-0.0134397503, 0.0, 0.0, 0.0], [0.539499998, 5.0, 6.0, 2.0], [0.0230450034, 0.0, 0.0, 0.0], [-0.688500047, 7.0, 8.0, 1.0], [-0.240500003, 9.0, 10.0, 0.0], [-0.941499949, 11.0, 12.0, 4.0], [0.0361537933, 0.0, 0.0, 0.0], [-0.03908718, 0.0, 0.0, 0.0], [0.00503934501, 0.0, 0.0, 0.0], [-0.0126238819, 0.0, 0.0, 0.0], [0.033821892, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1112(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.930500031, 1.0, 2.0, 4.0], [0.612499952, 3.0, 4.0, 2.0], [-0.642500043, 5.0, 6.0, 1.0], [0.546499968, 7.0, 8.0, 2.0], [-0.0367961451, 0.0, 0.0, 0.0], [-0.0127101364, 0.0, 0.0, 0.0], [-0.526499987, 9.0, 10.0, 1.0], [-0.218499988, 11.0, 12.0, 0.0], [0.0409674942, 0.0, 0.0, 0.0], [0.0387406349, 0.0, 0.0, 0.0], [-0.453500003, 13.0, 14.0, 1.0], [0.00224203779, 0.0, 0.0, 0.0], [-0.0310567096, 0.0, 0.0, 0.0], [-0.0299883038, 0.0, 0.0, 0.0], [0.0272917394, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1113(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.99150002, 1.0, 2.0, 1.0], [-0.997500002, 3.0, 4.0, 1.0], [0.0324479379, 0.0, 0.0, 0.0], [-0.795000017, 5.0, 6.0, 2.0], [-0.688000023, 7.0, 8.0, 2.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.00567999994, 11.0, 12.0, 0.0], [-0.0624978915, 0.0, 0.0, 0.0], [-0.000540519657, 0.0, 0.0, 0.0], [-0.282999992, 13.0, 14.0, 0.0], [-0.132499993, 15.0, 16.0, 0.0], [-0.0699499995, 17.0, 18.0, 0.0], [0.0635499954, 19.0, 20.0, 0.0], [0.0345261209, 0.0, 0.0, 0.0], [-0.000682789017, 0.0, 0.0, 0.0], [-0.122779138, 0.0, 0.0, 0.0], [0.000150040098, 0.0, 0.0, 0.0], [-0.00600790512, 0.0, 0.0, 0.0], [0.108649753, 0.0, 0.0, 0.0], [-0.0940219983, 0.0, 0.0, 0.0], [0.0685448945, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 17, 18, 19, 20, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1114(xs):
    #Predicts Class 4
    function_dict = np.array([[0.111500002, 1.0, 2.0, 0.0], [0.0941499993, 3.0, 4.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.0758630261, 0.0, 0.0, 0.0], [-0.0865969732, 0.0, 0.0, 0.0], [0.194499999, 9.0, 10.0, 0.0], [0.0850500017, 11.0, 12.0, 0.0], [-0.0488316752, 0.0, 0.0, 0.0], [0.0379281156, 0.0, 0.0, 0.0], [0.202500001, 13.0, 14.0, 0.0], [0.074149996, 15.0, 16.0, 0.0], [0.0883999988, 17.0, 18.0, 0.0], [-0.0333676748, 0.0, 0.0, 0.0], [0.0126921125, 0.0, 0.0, 0.0], [0.000278108957, 0.0, 0.0, 0.0], [-0.0585400611, 0.0, 0.0, 0.0], [0.0682733878, 0.0, 0.0, 0.0], [0.010530863, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1115(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.344999999, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.0738889575, 0.0, 0.0, 0.0], [0.0878008083, 0.0, 0.0, 0.0], [0.397499979, 9.0, 10.0, 0.0], [0.2095, 11.0, 12.0, 0.0], [0.0557370335, 0.0, 0.0, 0.0], [-0.0553430542, 0.0, 0.0, 0.0], [0.405499995, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.0543515421, 0.0, 0.0, 0.0], [0.404500008, 17.0, 18.0, 0.0], [0.418500006, 19.0, 20.0, 0.0], [0.00387641788, 0.0, 0.0, 0.0], [-0.0248998385, 0.0, 0.0, 0.0], [0.00456974609, 0.0, 0.0, 0.0], [0.0571942702, 0.0, 0.0, 0.0], [-0.0633127838, 0.0, 0.0, 0.0], [0.00787913054, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1116(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.921499968, 1.0, 2.0, 3.0], [-0.536499977, 3.0, 4.0, 1.0], [0.0180179738, 0.0, 0.0, 0.0], [-0.71449995, 5.0, 6.0, 1.0], [-0.0282422528, 0.0, 0.0, 0.0], [-0.983500004, 7.0, 8.0, 3.0], [-0.166500002, 9.0, 10.0, 0.0], [-0.99150002, 11.0, 12.0, 3.0], [-0.0317321233, 0.0, 0.0, 0.0], [-0.240500003, 13.0, 14.0, 0.0], [0.0470493957, 0.0, 0.0, 0.0], [-0.015960075, 0.0, 0.0, 0.0], [0.0345881619, 0.0, 0.0, 0.0], [0.0291057378, 0.0, 0.0, 0.0], [-0.0306703169, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1117(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.21450001, 3.0, 4.0, 0.0], [-0.315500021, 5.0, 6.0, 0.0], [0.555500031, 7.0, 8.0, 2.0], [-0.183499992, 9.0, 10.0, 0.0], [0.0116755497, 0.0, 0.0, 0.0], [-0.230500013, 11.0, 12.0, 0.0], [-0.74150002, 13.0, 14.0, 1.0], [0.0429598726, 0.0, 0.0, 0.0], [-0.0254547261, 0.0, 0.0, 0.0], [0.00875538588, 0.0, 0.0, 0.0], [-0.917500019, 15.0, 16.0, 4.0], [0.00541935535, 0.0, 0.0, 0.0], [0.0222679432, 0.0, 0.0, 0.0], [-0.0266271736, 0.0, 0.0, 0.0], [-0.0424049757, 0.0, 0.0, 0.0], [-0.00138970453, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 9, 10, 5, 15, 16, 12])
    branch_indices = np.array([0, 1, 3, 7, 4, 2, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1118(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.956499994, 1.0, 2.0, 4.0], [-0.994500041, 3.0, 4.0, 3.0], [-0.240500003, 5.0, 6.0, 0.0], [0.00692830654, 0.0, 0.0, 0.0], [-0.0275466423, 0.0, 0.0, 0.0], [-0.884500027, 7.0, 8.0, 4.0], [-0.183499992, 9.0, 10.0, 0.0], [-0.0345094465, 0.0, 0.0, 0.0], [0.0169635974, 0.0, 0.0, 0.0], [0.0398133323, 0.0, 0.0, 0.0], [0.586500049, 11.0, 12.0, 2.0], [0.0158165265, 0.0, 0.0, 0.0], [-0.0218169242, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 9, 11, 12])
    branch_indices = np.array([0, 1, 2, 5, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1119(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.37349999, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [0.00665341737, 0.0, 0.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [0.0491641387, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.0488152988, 0.0, 0.0, 0.0], [-0.0123702949, 0.0, 0.0, 0.0], [-0.795000017, 11.0, 12.0, 2.0], [-0.0447025672, 0.0, 0.0, 0.0], [-0.140500009, 13.0, 14.0, 0.0], [-0.120499998, 15.0, 16.0, 0.0], [-0.0165666845, 0.0, 0.0, 0.0], [0.000943240651, 0.0, 0.0, 0.0], [0.10670916, 0.0, 0.0, 0.0], [-0.00822754949, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 13, 14, 15, 16, 10])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1120(xs):
    #Predicts Class 4
    function_dict = np.array([[0.192499995, 1.0, 2.0, 0.0], [0.152999997, 3.0, 4.0, 0.0], [0.195499986, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.0948364064, 0.0, 0.0, 0.0], [-0.0563089922, 0.0, 0.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0912000015, 11.0, 12.0, 0.0], [-0.0705318302, 0.0, 0.0, 0.0], [0.039312344, 0.0, 0.0, 0.0], [-0.0255817492, 0.0, 0.0, 0.0], [0.0883999988, 13.0, 14.0, 0.0], [0.0815576911, 0.0, 0.0, 0.0], [4.87124998e-06, 0.0, 0.0, 0.0], [-0.0539258681, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1121(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.412999988, 1.0, 2.0, 0.0], [-0.439999998, 3.0, 4.0, 0.0], [-0.38349998, 5.0, 6.0, 0.0], [-0.012389998, 0.0, 0.0, 0.0], [0.0611097328, 0.0, 0.0, 0.0], [-0.0566778965, 0.0, 0.0, 0.0], [-0.29549998, 7.0, 8.0, 0.0], [0.048596926, 0.0, 0.0, 0.0], [-0.161500007, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.153499991, 13.0, 14.0, 0.0], [-0.0354712158, 0.0, 0.0, 0.0], [-0.000268697389, 0.0, 0.0, 0.0], [0.0346050598, 0.0, 0.0, 0.0], [-0.000257012754, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 2, 6, 8, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1122(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.140500009, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.988499999, 5.0, 6.0, 3.0], [-0.0209733099, 0.0, 0.0, 0.0], [-0.994500041, 7.0, 8.0, 3.0], [-0.0277967621, 0.0, 0.0, 0.0], [0.0122199925, 0.0, 0.0, 0.0], [-0.740499973, 9.0, 10.0, 1.0], [-0.98150003, 11.0, 12.0, 3.0], [0.00883228891, 0.0, 0.0, 0.0], [0.0400094539, 0.0, 0.0, 0.0], [-0.230500013, 13.0, 14.0, 0.0], [0.654500008, 15.0, 16.0, 2.0], [0.00828976277, 0.0, 0.0, 0.0], [-0.0386279672, 0.0, 0.0, 0.0], [0.0328146145, 0.0, 0.0, 0.0], [-0.014526112, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 9, 10, 13, 14, 15, 16, 5, 6])
    branch_indices = np.array([0, 1, 4, 7, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1123(xs):
    #Predicts Class 1
    function_dict = np.array([[0.701499999, 1.0, 2.0, 2.0], [0.603500009, 3.0, 4.0, 2.0], [0.0172462016, 0.0, 0.0, 0.0], [-0.169499993, 5.0, 6.0, 0.0], [-0.0264628213, 0.0, 0.0, 0.0], [-0.99849999, 7.0, 8.0, 3.0], [-0.0218700264, 0.0, 0.0, 0.0], [0.0353915505, 0.0, 0.0, 0.0], [0.461499989, 9.0, 10.0, 2.0], [-0.0185143519, 0.0, 0.0, 0.0], [0.0129622836, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 9, 10, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1124(xs):
    #Predicts Class 2
    function_dict = np.array([[0.476500005, 1.0, 2.0, 2.0], [-0.972499967, 3.0, 4.0, 4.0], [0.673500001, 5.0, 6.0, 2.0], [0.00700283097, 0.0, 0.0, 0.0], [-0.0300329197, 0.0, 0.0, 0.0], [-0.889500022, 7.0, 8.0, 4.0], [-0.864500046, 9.0, 10.0, 4.0], [-0.944499969, 11.0, 12.0, 4.0], [-0.0163803883, 0.0, 0.0, 0.0], [-0.0320571326, 0.0, 0.0, 0.0], [0.0167409368, 0.0, 0.0, 0.0], [-0.990499973, 13.0, 14.0, 3.0], [0.0490914024, 0.0, 0.0, 0.0], [-0.00624317396, 0.0, 0.0, 0.0], [0.00985865947, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 12, 8, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1125(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.210500002, 1.0, 2.0, 0.0], [-0.273499995, 3.0, 4.0, 0.0], [-0.20449999, 5.0, 6.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [-0.0860098153, 0.0, 0.0, 0.0], [-0.205500007, 9.0, 10.0, 0.0], [-0.644500017, 11.0, 12.0, 2.0], [-0.37349999, 13.0, 14.0, 0.0], [0.0305516087, 0.0, 0.0, 0.0], [0.00972120743, 0.0, 0.0, 0.0], [0.069493264, 0.0, 0.0, 0.0], [-0.795000017, 15.0, 16.0, 2.0], [-0.529999971, 17.0, 18.0, 2.0], [0.00460298546, 0.0, 0.0, 0.0], [-0.0370131508, 0.0, 0.0, 0.0], [-0.191500008, 19.0, 20.0, 0.0], [-0.0420500003, 21.0, 22.0, 0.0], [-0.0596916713, 0.0, 0.0, 0.0], [-0.00649613747, 0.0, 0.0, 0.0], [-0.0584040433, 0.0, 0.0, 0.0], [7.00491146e-05, 0.0, 0.0, 0.0], [0.086946331, 0.0, 0.0, 0.0], [-0.0118806819, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 9, 10, 19, 20, 21, 22, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 6, 11, 15, 16, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1126(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0477499999, 1.0, 2.0, 0.0], [0.0417999998, 3.0, 4.0, 0.0], [0.0560500026, 5.0, 6.0, 0.0], [0.0353999995, 7.0, 8.0, 0.0], [-0.1118019, 0.0, 0.0, 0.0], [0.0869020447, 0.0, 0.0, 0.0], [0.0740500018, 9.0, 10.0, 0.0], [0.02685, 11.0, 12.0, 0.0], [0.105131418, 0.0, 0.0, 0.0], [-0.0680252984, 0.0, 0.0, 0.0], [0.082949996, 13.0, 14.0, 0.0], [0.0240500011, 15.0, 16.0, 0.0], [-0.117013395, 0.0, 0.0, 0.0], [0.0757500008, 17.0, 18.0, 0.0], [0.0873000026, 19.0, 20.0, 0.0], [-0.00180618942, 0.0, 0.0, 0.0], [0.104413733, 0.0, 0.0, 0.0], [-0.00929964706, 0.0, 0.0, 0.0], [0.108844012, 0.0, 0.0, 0.0], [-0.052532535, 0.0, 0.0, 0.0], [0.006941183, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1127(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.0342473984, 0.0, 0.0, 0.0], [-0.995499969, 3.0, 4.0, 1.0], [-0.16049999, 5.0, 6.0, 0.0], [-0.0535954461, 0.0, 0.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.0375999995, 9.0, 10.0, 0.0], [-0.169499993, 11.0, 12.0, 0.0], [-0.0494258329, 0.0, 0.0, 0.0], [-0.0802000016, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [0.00219482929, 0.0, 0.0, 0.0], [0.0490534715, 0.0, 0.0, 0.0], [-0.0119954012, 0.0, 0.0, 0.0], [-0.0908339024, 0.0, 0.0, 0.0], [-0.000966998225, 0.0, 0.0, 0.0], [0.0284328926, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 8, 13, 14, 15, 16, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1128(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.244500011, 1.0, 2.0, 0.0], [-0.987499952, 3.0, 4.0, 3.0], [-0.184500009, 5.0, 6.0, 0.0], [-0.0280867293, 0.0, 0.0, 0.0], [0.00761092128, 0.0, 0.0, 0.0], [0.442499995, 7.0, 8.0, 2.0], [-0.593500018, 9.0, 10.0, 1.0], [0.0413134545, 0.0, 0.0, 0.0], [0.632500052, 11.0, 12.0, 2.0], [-0.799499989, 13.0, 14.0, 1.0], [0.0234258901, 0.0, 0.0, 0.0], [-0.940999985, 15.0, 16.0, 4.0], [0.0288019199, 0.0, 0.0, 0.0], [0.0147074237, 0.0, 0.0, 0.0], [-0.0373772904, 0.0, 0.0, 0.0], [0.01181095, 0.0, 0.0, 0.0], [-0.0334162004, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 15, 16, 12, 13, 14, 10])
    branch_indices = np.array([0, 1, 2, 5, 8, 11, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1129(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.966500044, 3.0, 4.0, 4.0], [-0.651499987, 5.0, 6.0, 1.0], [-0.0321942791, 0.0, 0.0, 0.0], [0.00694795139, 0.0, 0.0, 0.0], [-0.729499996, 7.0, 8.0, 1.0], [-0.294499993, 9.0, 10.0, 0.0], [-0.247500002, 11.0, 12.0, 0.0], [0.0362775177, 0.0, 0.0, 0.0], [0.0149419419, 0.0, 0.0, 0.0], [-0.033956036, 0.0, 0.0, 0.0], [-0.0247946605, 0.0, 0.0, 0.0], [-0.219500005, 13.0, 14.0, 0.0], [0.0334990621, 0.0, 0.0, 0.0], [-0.00389779429, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 13, 14, 8, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1130(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.605499983, 1.0, 2.0, 1.0], [-0.200500011, 3.0, 4.0, 0.0], [-0.872500002, 5.0, 6.0, 4.0], [-0.0242012572, 0.0, 0.0, 0.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.941499949, 9.0, 10.0, 4.0], [-0.766499996, 11.0, 12.0, 4.0], [0.0245516915, 0.0, 0.0, 0.0], [-0.0153830871, 0.0, 0.0, 0.0], [-0.00457720645, 0.0, 0.0, 0.0], [0.0390481502, 0.0, 0.0, 0.0], [-0.0270873215, 0.0, 0.0, 0.0], [0.014274274, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 4, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1131(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.0358867757, 0.0, 0.0, 0.0], [0.0499993302, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.016230965, 0.0, 0.0, 0.0], [0.0320996344, 0.0, 0.0, 0.0], [-0.654500008, 11.0, 12.0, 2.0], [-0.0343709737, 0.0, 0.0, 0.0], [-0.205500007, 13.0, 14.0, 0.0], [0.0427895449, 0.0, 0.0, 0.0], [-0.0415601432, 0.0, 0.0, 0.0], [0.000355006341, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 13, 14, 12, 10])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1132(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.162499994, 3.0, 4.0, 0.0], [-0.99849999, 5.0, 6.0, 1.0], [-0.185499996, 7.0, 8.0, 0.0], [-0.158500001, 9.0, 10.0, 0.0], [-0.0681285858, 0.0, 0.0, 0.0], [0.0049617528, 0.0, 0.0, 0.0], [-0.186500013, 11.0, 12.0, 0.0], [0.0457465127, 0.0, 0.0, 0.0], [-0.0992532074, 0.0, 0.0, 0.0], [-0.1505, 13.0, 14.0, 0.0], [-0.770500004, 15.0, 16.0, 2.0], [-0.0611746348, 0.0, 0.0, 0.0], [-0.154500008, 17.0, 18.0, 0.0], [-0.141499996, 19.0, 20.0, 0.0], [0.000489411992, 0.0, 0.0, 0.0], [0.0492218174, 0.0, 0.0, 0.0], [0.0098769851, 0.0, 0.0, 0.0], [0.0470418893, 0.0, 0.0, 0.0], [-0.0534526668, 0.0, 0.0, 0.0], [0.00220271782, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 9, 17, 18, 19, 20, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 10, 13, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1133(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.99849999, 3.0, 4.0, 1.0], [0.0341326557, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 4.0], [0.00891499966, 7.0, 8.0, 0.0], [0.46450001, 9.0, 10.0, 0.0], [-0.164499998, 11.0, 12.0, 0.0], [-0.298500001, 13.0, 14.0, 0.0], [-0.0202177372, 0.0, 0.0, 0.0], [0.446500003, 15.0, 16.0, 0.0], [0.564499974, 17.0, 18.0, 0.0], [0.0347548164, 0.0, 0.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.00833848771, 0.0, 0.0, 0.0], [0.0817187577, 0.0, 0.0, 0.0], [-0.00322021591, 0.0, 0.0, 0.0], [-0.0718757585, 0.0, 0.0, 0.0], [0.0309208259, 0.0, 0.0, 0.0], [-0.0398553498, 0.0, 0.0, 0.0], [-0.10350018, 0.0, 0.0, 0.0], [0.00833393913, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 11, 19, 20, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1134(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.642500043, 1.0, 2.0, 1.0], [-0.961500049, 3.0, 4.0, 4.0], [0.671499968, 5.0, 6.0, 2.0], [-0.180500001, 7.0, 8.0, 0.0], [0.626999974, 9.0, 10.0, 2.0], [-0.0301545411, 0.0, 0.0, 0.0], [0.00728281168, 0.0, 0.0, 0.0], [0.45450002, 11.0, 12.0, 2.0], [-0.0339175537, 0.0, 0.0, 0.0], [0.538499951, 13.0, 14.0, 2.0], [-0.00298850657, 0.0, 0.0, 0.0], [-0.022910947, 0.0, 0.0, 0.0], [0.0298266914, 0.0, 0.0, 0.0], [0.490500003, 15.0, 16.0, 2.0], [0.0498262309, 0.0, 0.0, 0.0], [0.0232198481, 0.0, 0.0, 0.0], [-0.0200136341, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 15, 16, 14, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 13, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1135(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.95449996, 3.0, 4.0, 3.0], [-0.0159295909, 0.0, 0.0, 0.0], [-0.776499987, 5.0, 6.0, 1.0], [0.025451012, 0.0, 0.0, 0.0], [-0.803499997, 7.0, 8.0, 1.0], [0.557500005, 9.0, 10.0, 2.0], [-0.965499997, 11.0, 12.0, 4.0], [0.0407393016, 0.0, 0.0, 0.0], [-0.994500041, 13.0, 14.0, 3.0], [-0.255999982, 15.0, 16.0, 0.0], [-0.0227817614, 0.0, 0.0, 0.0], [0.0176862478, 0.0, 0.0, 0.0], [0.00521779759, 0.0, 0.0, 0.0], [-0.0603913814, 0.0, 0.0, 0.0], [-0.00911463238, 0.0, 0.0, 0.0], [0.0262451395, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1136(xs):
    #Predicts Class 2
    function_dict = np.array([[0.60650003, 1.0, 2.0, 2.0], [-0.218499988, 3.0, 4.0, 0.0], [-0.215499997, 5.0, 6.0, 0.0], [-0.656499982, 7.0, 8.0, 1.0], [-0.163500011, 9.0, 10.0, 0.0], [-0.257499993, 11.0, 12.0, 0.0], [0.701499999, 13.0, 14.0, 2.0], [-0.0112106428, 0.0, 0.0, 0.0], [0.0325408764, 0.0, 0.0, 0.0], [-0.0425657034, 0.0, 0.0, 0.0], [0.00183303235, 0.0, 0.0, 0.0], [0.0246043354, 0.0, 0.0, 0.0], [-0.038965553, 0.0, 0.0, 0.0], [0.0364744253, 0.0, 0.0, 0.0], [0.00421555014, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1137(xs):
    #Predicts Class 3
    function_dict = np.array([[0.479499996, 1.0, 2.0, 0.0], [0.46450001, 3.0, 4.0, 0.0], [0.537500024, 5.0, 6.0, 0.0], [0.446500003, 7.0, 8.0, 0.0], [-0.0655002445, 0.0, 0.0, 0.0], [0.523499966, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.436500013, 13.0, 14.0, 0.0], [0.0534041822, 0.0, 0.0, 0.0], [0.513000011, 15.0, 16.0, 0.0], [0.0627889708, 0.0, 0.0, 0.0], [-0.0417249911, 0.0, 0.0, 0.0], [0.588, 17.0, 18.0, 0.0], [0.434499979, 19.0, 20.0, 0.0], [-0.0509399474, 0.0, 0.0, 0.0], [0.0412406772, 0.0, 0.0, 0.0], [-0.020222934, 0.0, 0.0, 0.0], [0.561499953, 21.0, 22.0, 0.0], [-0.026009731, 0.0, 0.0, 0.0], [-0.00132921978, 0.0, 0.0, 0.0], [0.0578458905, 0.0, 0.0, 0.0], [0.000279746397, 0.0, 0.0, 0.0], [0.0440632813, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 15, 16, 10, 11, 21, 22, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 6, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1138(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.456, 1.0, 2.0, 2.0], [-0.0907500014, 3.0, 4.0, 0.0], [-0.0425218008, 0.0, 0.0, 0.0], [-0.0914499983, 5.0, 6.0, 0.0], [-0.0579499975, 7.0, 8.0, 0.0], [-0.0971000046, 9.0, 10.0, 0.0], [0.088233754, 0.0, 0.0, 0.0], [-0.0668499991, 11.0, 12.0, 0.0], [-0.0493500009, 13.0, 14.0, 0.0], [-0.102499999, 15.0, 16.0, 0.0], [-0.0834313482, 0.0, 0.0, 0.0], [-0.0742499977, 17.0, 18.0, 0.0], [-0.101184726, 0.0, 0.0, 0.0], [0.116283923, 0.0, 0.0, 0.0], [-0.0467999987, 19.0, 20.0, 0.0], [-0.00129841862, 0.0, 0.0, 0.0], [0.0615852997, 0.0, 0.0, 0.0], [-0.0708170757, 0.0, 0.0, 0.0], [0.0565536954, 0.0, 0.0, 0.0], [-0.155868769, 0.0, 0.0, 0.0], [0.00168191979, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 17, 18, 12, 13, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 11, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1139(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.479499996, 3.0, 4.0, 0.0], [0.0331165083, 0.0, 0.0, 0.0], [0.46450001, 5.0, 6.0, 0.0], [0.537500024, 7.0, 8.0, 0.0], [0.446500003, 9.0, 10.0, 0.0], [0.0684519038, 0.0, 0.0, 0.0], [0.523499966, 11.0, 12.0, 0.0], [0.556499958, 13.0, 14.0, 0.0], [0.436500013, 15.0, 16.0, 0.0], [-0.0517718494, 0.0, 0.0, 0.0], [0.513000011, 17.0, 18.0, 0.0], [-0.0615049452, 0.0, 0.0, 0.0], [0.543500006, 19.0, 20.0, 0.0], [0.561499953, 21.0, 22.0, 0.0], [-0.000474828208, 0.0, 0.0, 0.0], [0.0525550358, 0.0, 0.0, 0.0], [-0.0395945795, 0.0, 0.0, 0.0], [0.0224442892, 0.0, 0.0, 0.0], [0.0438616313, 0.0, 0.0, 0.0], [0.00903228577, 0.0, 0.0, 0.0], [-0.00367999403, 0.0, 0.0, 0.0], [-0.0413575023, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 17, 18, 12, 19, 20, 21, 22, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 11, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1140(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.244500011, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 2.0], [-0.961500049, 5.0, 6.0, 4.0], [-0.0264482424, 0.0, 0.0, 0.0], [0.658499956, 7.0, 8.0, 2.0], [-0.975499988, 9.0, 10.0, 4.0], [-0.701499999, 11.0, 12.0, 1.0], [0.0294883195, 0.0, 0.0, 0.0], [-0.0227876585, 0.0, 0.0, 0.0], [0.0176833905, 0.0, 0.0, 0.0], [-0.026093632, 0.0, 0.0, 0.0], [0.485500008, 13.0, 14.0, 2.0], [-0.949499965, 15.0, 16.0, 3.0], [0.00625978317, 0.0, 0.0, 0.0], [0.0556452721, 0.0, 0.0, 0.0], [-0.166500002, 17.0, 18.0, 0.0], [0.026506504, 0.0, 0.0, 0.0], [-0.0514721274, 0.0, 0.0, 0.0], [0.00986346509, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 10, 13, 14, 17, 18, 16])
    branch_indices = np.array([0, 1, 4, 2, 5, 6, 11, 12, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1141(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.992499948, 1.0, 2.0, 3.0], [-0.930500031, 3.0, 4.0, 4.0], [-0.930500031, 5.0, 6.0, 4.0], [-0.195499986, 7.0, 8.0, 0.0], [-0.041296944, 0.0, 0.0, 0.0], [-0.961500049, 9.0, 10.0, 4.0], [-0.681499958, 11.0, 12.0, 1.0], [0.436500013, 13.0, 14.0, 2.0], [-0.024980735, 0.0, 0.0, 0.0], [0.0168214273, 0.0, 0.0, 0.0], [-0.247500002, 15.0, 16.0, 0.0], [0.0399625711, 0.0, 0.0, 0.0], [0.00615134789, 0.0, 0.0, 0.0], [0.0538005307, 0.0, 0.0, 0.0], [0.534500003, 17.0, 18.0, 2.0], [-0.00512997899, 0.0, 0.0, 0.0], [-0.0323243886, 0.0, 0.0, 0.0], [-2.60519282e-05, 0.0, 0.0, 0.0], [-0.00663502794, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 17, 18, 8, 4, 9, 15, 16, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 14, 2, 5, 10, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1142(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.266499996, 1.0, 2.0, 0.0], [-0.0177590363, 0.0, 0.0, 0.0], [-0.484499991, 3.0, 4.0, 1.0], [-0.985499978, 5.0, 6.0, 3.0], [0.0298538953, 0.0, 0.0, 0.0], [-0.955500007, 7.0, 8.0, 4.0], [-0.183499992, 9.0, 10.0, 0.0], [-0.0290300399, 0.0, 0.0, 0.0], [-0.903499961, 11.0, 12.0, 4.0], [0.022916114, 0.0, 0.0, 0.0], [-0.00630548643, 0.0, 0.0, 0.0], [0.0246593058, 0.0, 0.0, 0.0], [-0.0153232878, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 7, 11, 12, 9, 10, 4])
    branch_indices = np.array([0, 2, 3, 5, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1143(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 1.0], [-0.795000017, 3.0, 4.0, 2.0], [-0.0183500014, 5.0, 6.0, 0.0], [-0.885499954, 7.0, 8.0, 2.0], [-0.00118999998, 9.0, 10.0, 0.0], [-0.120499998, 11.0, 12.0, 0.0], [0.344000012, 13.0, 14.0, 0.0], [0.534000039, 15.0, 16.0, 0.0], [0.0683500022, 17.0, 18.0, 0.0], [-0.0699499995, 19.0, 20.0, 0.0], [-0.0364814401, 0.0, 0.0, 0.0], [0.00507545052, 0.0, 0.0, 0.0], [-0.0880952626, 0.0, 0.0, 0.0], [0.0552019104, 0.0, 0.0, 0.0], [-0.0458900221, 0.0, 0.0, 0.0], [0.522500038, 21.0, 22.0, 0.0], [0.549000025, 23.0, 24.0, 0.0], [-0.005045, 25.0, 26.0, 0.0], [-0.132292703, 0.0, 0.0, 0.0], [-0.00303955376, 0.0, 0.0, 0.0], [0.10133262, 0.0, 0.0, 0.0], [0.00146148878, 0.0, 0.0, 0.0], [-0.0715692416, 0.0, 0.0, 0.0], [0.0534098856, 0.0, 0.0, 0.0], [0.0031327263, 0.0, 0.0, 0.0], [-0.0186938029, 0.0, 0.0, 0.0], [0.0765049011, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 18, 19, 20, 10, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1144(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0079549998, 1.0, 2.0, 0.0], [0.00456999987, 3.0, 4.0, 0.0], [0.0104999999, 5.0, 6.0, 0.0], [0.00202000001, 7.0, 8.0, 0.0], [0.0943892375, 0.0, 0.0, 0.0], [-0.111363679, 0.0, 0.0, 0.0], [0.0203999989, 9.0, 10.0, 0.0], [0.000549999997, 11.0, 12.0, 0.0], [-0.103783369, 0.0, 0.0, 0.0], [0.100998484, 0.0, 0.0, 0.0], [0.0240500011, 13.0, 14.0, 0.0], [-0.000834999955, 15.0, 16.0, 0.0], [0.100672908, 0.0, 0.0, 0.0], [-0.113927402, 0.0, 0.0, 0.0], [0.02685, 17.0, 18.0, 0.0], [0.00119022955, 0.0, 0.0, 0.0], [-0.127302527, 0.0, 0.0, 0.0], [0.077928558, 0.0, 0.0, 0.0], [-0.00495737791, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1145(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.348500013, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [-0.0365237892, 0.0, 0.0, 0.0], [0.228500009, 9.0, 10.0, 0.0], [0.0408031605, 0.0, 0.0, 0.0], [0.431500018, 11.0, 12.0, 0.0], [0.0495665669, 0.0, 0.0, 0.0], [-0.639999986, 13.0, 14.0, 2.0], [-0.0592613369, 0.0, 0.0, 0.0], [0.42049998, 15.0, 16.0, 0.0], [0.4375, 17.0, 18.0, 0.0], [-0.99849999, 19.0, 20.0, 1.0], [-0.0320791528, 0.0, 0.0, 0.0], [-0.00408520736, 0.0, 0.0, 0.0], [0.0778854564, 0.0, 0.0, 0.0], [-0.0553372465, 0.0, 0.0, 0.0], [-0.00541428151, 0.0, 0.0, 0.0], [0.0627545714, 0.0, 0.0, 0.0], [0.013050504, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 19, 20, 14, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 5, 9, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1146(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.970499992, 3.0, 4.0, 4.0], [-0.892500043, 5.0, 6.0, 4.0], [-0.0326613225, 0.0, 0.0, 0.0], [0.00769423135, 0.0, 0.0, 0.0], [-0.919499993, 7.0, 8.0, 4.0], [-0.836500049, 9.0, 10.0, 4.0], [-0.968500018, 11.0, 12.0, 4.0], [0.041414991, 0.0, 0.0, 0.0], [-0.0322656557, 0.0, 0.0, 0.0], [-0.213499993, 13.0, 14.0, 0.0], [0.0256947242, 0.0, 0.0, 0.0], [-0.183499992, 15.0, 16.0, 0.0], [0.0275870711, 0.0, 0.0, 0.0], [-0.0103423186, 0.0, 0.0, 0.0], [-0.0231701415, 0.0, 0.0, 0.0], [0.0196971204, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 15, 16, 8, 9, 13, 14])
    branch_indices = np.array([0, 1, 2, 5, 7, 12, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1147(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.694499969, 3.0, 4.0, 1.0], [0.642500043, 5.0, 6.0, 2.0], [-0.0259595234, 0.0, 0.0, 0.0], [0.0113570113, 0.0, 0.0, 0.0], [0.570500016, 7.0, 8.0, 2.0], [0.0209273994, 0.0, 0.0, 0.0], [-0.221500009, 9.0, 10.0, 0.0], [-0.0351922028, 0.0, 0.0, 0.0], [-0.946500003, 11.0, 12.0, 4.0], [-0.189500004, 13.0, 14.0, 0.0], [0.0423332751, 0.0, 0.0, 0.0], [-0.00201478926, 0.0, 0.0, 0.0], [-0.0214858055, 0.0, 0.0, 0.0], [0.00997619983, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 13, 14, 8, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1148(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.911499977, 1.0, 2.0, 3.0], [-0.24849999, 3.0, 4.0, 0.0], [0.0200887285, 0.0, 0.0, 0.0], [-0.299499989, 5.0, 6.0, 0.0], [-0.516499996, 7.0, 8.0, 1.0], [0.00185822148, 0.0, 0.0, 0.0], [-0.0325037055, 0.0, 0.0, 0.0], [-0.71449995, 9.0, 10.0, 1.0], [0.0282022394, 0.0, 0.0, 0.0], [-0.965499997, 11.0, 12.0, 4.0], [-0.995499969, 13.0, 14.0, 3.0], [-0.0142687066, 0.0, 0.0, 0.0], [0.0364469625, 0.0, 0.0, 0.0], [0.00570023898, 0.0, 0.0, 0.0], [-0.0383008532, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 11, 12, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1149(xs):
    #Predicts Class 3
    function_dict = np.array([[0.276499987, 1.0, 2.0, 0.0], [0.272000015, 3.0, 4.0, 0.0], [0.392499983, 5.0, 6.0, 0.0], [0.260500014, 7.0, 8.0, 0.0], [-0.109318219, 0.0, 0.0, 0.0], [0.0881831124, 0.0, 0.0, 0.0], [0.401499987, 9.0, 10.0, 0.0], [0.201499999, 11.0, 12.0, 0.0], [0.0582696274, 0.0, 0.0, 0.0], [-0.0468369387, 0.0, 0.0, 0.0], [0.409500003, 13.0, 14.0, 0.0], [0.111500002, 15.0, 16.0, 0.0], [0.212500006, 17.0, 18.0, 0.0], [0.0446854606, 0.0, 0.0, 0.0], [0.419499993, 19.0, 20.0, 0.0], [-0.000615503755, 0.0, 0.0, 0.0], [0.0300897583, 0.0, 0.0, 0.0], [-0.0597179905, 0.0, 0.0, 0.0], [-0.00633815071, 0.0, 0.0, 0.0], [-0.0619215779, 0.0, 0.0, 0.0], [0.00700825779, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1150(xs):
    #Predicts Class 4
    function_dict = np.array([[0.157999992, 1.0, 2.0, 0.0], [0.1105, 3.0, 4.0, 0.0], [0.202500001, 5.0, 6.0, 0.0], [0.0923999995, 7.0, 8.0, 0.0], [0.0754551888, 0.0, 0.0, 0.0], [0.195499986, 9.0, 10.0, 0.0], [0.0137023507, 0.0, 0.0, 0.0], [0.0912000015, 11.0, 12.0, 0.0], [-0.0605352446, 0.0, 0.0, 0.0], [-0.0377688408, 0.0, 0.0, 0.0], [-0.00982794166, 0.0, 0.0, 0.0], [-0.552000046, 13.0, 14.0, 2.0], [0.0729552656, 0.0, 0.0, 0.0], [3.36631856e-05, 0.0, 0.0, 0.0], [-0.0496470481, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1151(xs):
    #Predicts Class 5
    function_dict = np.array([[0.539999962, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [0.556499958, 5.0, 6.0, 0.0], [0.489499986, 7.0, 8.0, 0.0], [0.528499961, 9.0, 10.0, 0.0], [0.0386652537, 0.0, 0.0, 0.0], [0.5625, 11.0, 12.0, 0.0], [0.465499997, 13.0, 14.0, 0.0], [0.0573344082, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.00285164872, 0.0, 0.0, 0.0], [-0.0335169621, 0.0, 0.0, 0.0], [0.620499969, 17.0, 18.0, 0.0], [0.432500005, 19.0, 20.0, 0.0], [-0.0677965432, 0.0, 0.0, 0.0], [-0.0691379905, 0.0, 0.0, 0.0], [-0.0198147204, 0.0, 0.0, 0.0], [0.0293938965, 0.0, 0.0, 0.0], [-0.000134625079, 0.0, 0.0, 0.0], [-0.00164814957, 0.0, 0.0, 0.0], [0.0250362903, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 15, 16, 10, 5, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 2, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1152(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.841500044, 1.0, 2.0, 1.0], [0.0199695006, 0.0, 0.0, 0.0], [-0.971500039, 3.0, 4.0, 4.0], [-0.0316017754, 0.0, 0.0, 0.0], [-0.646499991, 5.0, 6.0, 1.0], [-0.80250001, 7.0, 8.0, 1.0], [-0.234499991, 9.0, 10.0, 0.0], [-0.0130287344, 0.0, 0.0, 0.0], [-0.992499948, 11.0, 12.0, 3.0], [-0.0340748578, 0.0, 0.0, 0.0], [-0.564499974, 13.0, 14.0, 1.0], [0.035690818, 0.0, 0.0, 0.0], [0.00172123662, 0.0, 0.0, 0.0], [-0.0239300206, 0.0, 0.0, 0.0], [0.0313574523, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 11, 12, 9, 13, 14])
    branch_indices = np.array([0, 2, 4, 5, 8, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1153(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.953500032, 1.0, 2.0, 4.0], [0.441500008, 3.0, 4.0, 2.0], [-0.334500015, 5.0, 6.0, 0.0], [-0.793500006, 7.0, 8.0, 1.0], [-0.24149999, 9.0, 10.0, 0.0], [-0.0272336174, 0.0, 0.0, 0.0], [-0.959499955, 11.0, 12.0, 3.0], [-0.000106563202, 0.0, 0.0, 0.0], [-0.0382811166, 0.0, 0.0, 0.0], [-0.0290084649, 0.0, 0.0, 0.0], [-0.210500002, 13.0, 14.0, 0.0], [-0.2465, 15.0, 16.0, 0.0], [-0.0264547132, 0.0, 0.0, 0.0], [0.0510521568, 0.0, 0.0, 0.0], [-0.0101290988, 0.0, 0.0, 0.0], [0.0585278645, 0.0, 0.0, 0.0], [-0.205500007, 17.0, 18.0, 0.0], [-0.0276050437, 0.0, 0.0, 0.0], [0.0208067298, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 13, 14, 5, 15, 17, 18, 12])
    branch_indices = np.array([0, 1, 3, 4, 10, 2, 6, 11, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1154(xs):
    #Predicts Class 2
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [-0.74150002, 3.0, 4.0, 1.0], [0.540500045, 5.0, 6.0, 2.0], [-0.00471509015, 0.0, 0.0, 0.0], [0.0287170056, 0.0, 0.0, 0.0], [-0.0338506773, 0.0, 0.0, 0.0], [-0.940500021, 7.0, 8.0, 3.0], [-0.948500037, 9.0, 10.0, 4.0], [0.0297935866, 0.0, 0.0, 0.0], [0.0202304907, 0.0, 0.0, 0.0], [-0.864500046, 11.0, 12.0, 4.0], [-0.0394189171, 0.0, 0.0, 0.0], [0.00984675251, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 11, 12, 8])
    branch_indices = np.array([0, 1, 2, 6, 7, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1155(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.851999998, 3.0, 4.0, 2.0], [-0.113499999, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [-0.0527499989, 9.0, 10.0, 0.0], [-0.208499998, 11.0, 12.0, 0.0], [-0.0433499999, 13.0, 14.0, 0.0], [-0.0392000005, 15.0, 16.0, 0.0], [-0.00919000059, 17.0, 18.0, 0.0], [0.0696952268, 0.0, 0.0, 0.0], [0.00679999962, 19.0, 20.0, 0.0], [0.0125896847, 0.0, 0.0, 0.0], [-0.0894608945, 0.0, 0.0, 0.0], [0.0631317198, 0.0, 0.0, 0.0], [0.101500005, 21.0, 22.0, 0.0], [-0.0428000018, 23.0, 24.0, 0.0], [-0.0307, 25.0, 26.0, 0.0], [-0.101057477, 0.0, 0.0, 0.0], [0.0334165804, 0.0, 0.0, 0.0], [-0.0448808335, 0.0, 0.0, 0.0], [0.0413387492, 0.0, 0.0, 0.0], [-0.0488418452, 0.0, 0.0, 0.0], [0.0142729906, 0.0, 0.0, 0.0], [0.00226959097, 0.0, 0.0, 0.0], [0.15876396, 0.0, 0.0, 0.0], [-0.14917095, 0.0, 0.0, 0.0], [0.000734947855, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 18, 9, 19, 20, 11, 12, 13, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 10, 2, 5, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1156(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0825999975, 1.0, 2.0, 0.0], [0.074149996, 3.0, 4.0, 0.0], [0.0854000002, 5.0, 6.0, 0.0], [0.0694999993, 7.0, 8.0, 0.0], [-0.0860388055, 0.0, 0.0, 0.0], [0.0986156017, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0506500006, 11.0, 12.0, 0.0], [0.100518979, 0.0, 0.0, 0.0], [0.0892499983, 13.0, 14.0, 0.0], [0.0554725863, 0.0, 0.0, 0.0], [0.0447499976, 15.0, 16.0, 0.0], [-0.0962863117, 0.0, 0.0, 0.0], [0.0883999988, 17.0, 18.0, 0.0], [0.0917500034, 19.0, 20.0, 0.0], [-0.00186604436, 0.0, 0.0, 0.0], [0.0821850672, 0.0, 0.0, 0.0], [-0.000146152277, 0.0, 0.0, 0.0], [-0.162948877, 0.0, 0.0, 0.0], [0.0894415602, 0.0, 0.0, 0.0], [0.00236918265, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 17, 18, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1157(xs):
    #Predicts Class 5
    function_dict = np.array([[0.203500003, 1.0, 2.0, 0.0], [0.202500001, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [-0.164499998, 7.0, 8.0, 0.0], [-0.0739905909, 0.0, 0.0, 0.0], [0.263000011, 9.0, 10.0, 0.0], [0.363499999, 11.0, 12.0, 0.0], [-0.169499993, 13.0, 14.0, 0.0], [-0.155499995, 15.0, 16.0, 0.0], [0.228500009, 17.0, 18.0, 0.0], [0.104874268, 0.0, 0.0, 0.0], [-0.0450806133, 0.0, 0.0, 0.0], [0.415000021, 19.0, 20.0, 0.0], [-0.382499993, 21.0, 22.0, 0.0], [-0.1655, 23.0, 24.0, 0.0], [-0.0787272081, 0.0, 0.0, 0.0], [-0.153499991, 25.0, 26.0, 0.0], [0.0574974939, 0.0, 0.0, 0.0], [-0.0406840481, 0.0, 0.0, 0.0], [0.406499982, 27.0, 28.0, 0.0], [0.424000025, 29.0, 30.0, 0.0], [0.0158382561, 0.0, 0.0, 0.0], [-0.049381379, 0.0, 0.0, 0.0], [0.016465798, 0.0, 0.0, 0.0], [0.0460577384, 0.0, 0.0, 0.0], [0.0327727348, 0.0, 0.0, 0.0], [-0.00697484799, 0.0, 0.0, 0.0], [0.00486329477, 0.0, 0.0, 0.0], [0.0838746354, 0.0, 0.0, 0.0], [-0.0613777414, 0.0, 0.0, 0.0], [0.0050484119, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 4, 17, 18, 10, 11, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 9, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1158(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [-0.180500001, 3.0, 4.0, 0.0], [-0.871500015, 5.0, 6.0, 4.0], [0.0278623123, 0.0, 0.0, 0.0], [-0.00851248205, 0.0, 0.0, 0.0], [0.654500008, 7.0, 8.0, 2.0], [0.685500026, 9.0, 10.0, 2.0], [-0.918500006, 11.0, 12.0, 4.0], [0.0182597227, 0.0, 0.0, 0.0], [0.0366022848, 0.0, 0.0, 0.0], [-0.0123162009, 0.0, 0.0, 0.0], [0.504500031, 13.0, 14.0, 2.0], [-0.0485485159, 0.0, 0.0, 0.0], [-0.0276383702, 0.0, 0.0, 0.0], [0.0171652827, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 12, 8, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1159(xs):
    #Predicts Class 1
    function_dict = np.array([[0.657500029, 1.0, 2.0, 2.0], [-0.810500026, 3.0, 4.0, 1.0], [-0.0180025138, 0.0, 0.0, 0.0], [-0.213499993, 5.0, 6.0, 0.0], [0.596500039, 7.0, 8.0, 2.0], [-0.0344076753, 0.0, 0.0, 0.0], [0.00554937636, 0.0, 0.0, 0.0], [-0.973500013, 9.0, 10.0, 4.0], [0.0361081138, 0.0, 0.0, 0.0], [0.0323154554, 0.0, 0.0, 0.0], [-0.949499965, 11.0, 12.0, 4.0], [-0.0329333022, 0.0, 0.0, 0.0], [0.0167396516, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 9, 11, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1160(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.161500007, 3.0, 4.0, 0.0], [-0.0166293625, 0.0, 0.0, 0.0], [-0.4745, 5.0, 6.0, 1.0], [-0.642500043, 7.0, 8.0, 1.0], [0.593999982, 9.0, 10.0, 2.0], [-0.0253347307, 0.0, 0.0, 0.0], [-0.00719178142, 0.0, 0.0, 0.0], [0.0415001102, 0.0, 0.0, 0.0], [-0.218499988, 11.0, 12.0, 0.0], [0.67050004, 13.0, 14.0, 2.0], [0.018772155, 0.0, 0.0, 0.0], [-0.0473236851, 0.0, 0.0, 0.0], [0.0446189865, 0.0, 0.0, 0.0], [0.00639756443, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1161(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 1.0], [-0.282999992, 3.0, 4.0, 0.0], [0.0689999983, 5.0, 6.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [-0.210500002, 9.0, 10.0, 0.0], [-0.104499996, 11.0, 12.0, 0.0], [-0.73150003, 13.0, 14.0, 2.0], [-0.37349999, 15.0, 16.0, 0.0], [0.0395585746, 0.0, 0.0, 0.0], [-0.0735412985, 0.0, 0.0, 0.0], [-0.2095, 17.0, 18.0, 0.0], [-0.0423564203, 0.0, 0.0, 0.0], [0.0705648586, 0.0, 0.0, 0.0], [-0.0739581436, 0.0, 0.0, 0.0], [-0.00277616084, 0.0, 0.0, 0.0], [0.0219873153, 0.0, 0.0, 0.0], [-0.0285697058, 0.0, 0.0, 0.0], [0.060539335, 0.0, 0.0, 0.0], [-0.795000017, 19.0, 20.0, 2.0], [-0.00118719728, 0.0, 0.0, 0.0], [0.0402099974, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 9, 17, 19, 20, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 4, 10, 18, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1162(xs):
    #Predicts Class 4
    function_dict = np.array([[0.196500003, 1.0, 2.0, 0.0], [0.190499991, 3.0, 4.0, 0.0], [-0.0338104479, 0.0, 0.0, 0.0], [0.111500002, 5.0, 6.0, 0.0], [0.194499999, 7.0, 8.0, 0.0], [0.0941499993, 9.0, 10.0, 0.0], [-0.0794951469, 0.0, 0.0, 0.0], [0.0529470742, 0.0, 0.0, 0.0], [0.0118169803, 0.0, 0.0, 0.0], [0.0894500017, 11.0, 12.0, 0.0], [0.0710088685, 0.0, 0.0, 0.0], [0.00141850871, 0.0, 0.0, 0.0], [-0.0712296218, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1163(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.406000018, 3.0, 4.0, 0.0], [0.212500006, 5.0, 6.0, 0.0], [-0.0391784012, 0.0, 0.0, 0.0], [-0.380499989, 7.0, 8.0, 0.0], [-0.193500012, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [0.0473766215, 0.0, 0.0, 0.0], [-0.162, 13.0, 14.0, 0.0], [-0.885499954, 15.0, 16.0, 2.0], [-0.0435080118, 0.0, 0.0, 0.0], [0.073236987, 0.0, 0.0, 0.0], [0.43599999, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.0802000016, 21.0, 22.0, 0.0], [-0.00167566421, 0.0, 0.0, 0.0], [0.0398107134, 0.0, 0.0, 0.0], [-0.0360397659, 0.0, 0.0, 0.0], [0.0195356235, 0.0, 0.0, 0.0], [-0.0349016525, 0.0, 0.0, 0.0], [0.00898505095, 0.0, 0.0, 0.0], [0.0219006892, 0.0, 0.0, 0.0], [-0.00439294474, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 19, 20, 21, 22, 15, 16, 10, 11, 17, 18])
    branch_indices = np.array([0, 1, 4, 8, 13, 14, 2, 5, 9, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1164(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.988499999, 3.0, 4.0, 3.0], [-0.95449996, 5.0, 6.0, 3.0], [-0.0306479614, 0.0, 0.0, 0.0], [0.0116950292, 0.0, 0.0, 0.0], [0.713500023, 7.0, 8.0, 2.0], [-0.91050005, 9.0, 10.0, 3.0], [-0.881500006, 11.0, 12.0, 4.0], [0.0312396213, 0.0, 0.0, 0.0], [-0.0191196557, 0.0, 0.0, 0.0], [0.00120934658, 0.0, 0.0, 0.0], [-0.28549999, 13.0, 14.0, 0.0], [-0.0350690782, 0.0, 0.0, 0.0], [-0.0173188057, 0.0, 0.0, 0.0], [0.0250067934, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 12, 8, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1165(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.228500009, 3.0, 4.0, 0.0], [0.602499962, 5.0, 6.0, 2.0], [-0.966500044, 7.0, 8.0, 4.0], [0.48299998, 9.0, 10.0, 2.0], [0.536499977, 11.0, 12.0, 2.0], [-0.0247698184, 0.0, 0.0, 0.0], [-0.00193615374, 0.0, 0.0, 0.0], [0.0350566395, 0.0, 0.0, 0.0], [0.387000024, 13.0, 14.0, 2.0], [0.0153528377, 0.0, 0.0, 0.0], [-0.0141369989, 0.0, 0.0, 0.0], [0.0271238778, 0.0, 0.0, 0.0], [0.00661727507, 0.0, 0.0, 0.0], [-0.0430936664, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 13, 14, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 4, 9, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1166(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [-0.778499961, 3.0, 4.0, 4.0], [0.0180761907, 0.0, 0.0, 0.0], [-0.186500013, 5.0, 6.0, 0.0], [-0.0276200976, 0.0, 0.0, 0.0], [-0.978500009, 7.0, 8.0, 3.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.994500041, 11.0, 12.0, 3.0], [-0.0380957127, 0.0, 0.0, 0.0], [-0.0171496551, 0.0, 0.0, 0.0], [0.0366650932, 0.0, 0.0, 0.0], [-0.0116284359, 0.0, 0.0, 0.0], [0.0309558827, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1167(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.0326440707, 0.0, 0.0, 0.0], [0.0536180064, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.0181264281, 0.0, 0.0, 0.0], [0.0311821923, 0.0, 0.0, 0.0], [-0.190499991, 11.0, 12.0, 0.0], [-0.0465381071, 0.0, 0.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.145500004, 15.0, 16.0, 0.0], [0.00225047697, 0.0, 0.0, 0.0], [0.0645237267, 0.0, 0.0, 0.0], [-0.0549386218, 0.0, 0.0, 0.0], [0.000820551533, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 13, 14, 15, 16, 10])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1168(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0757500008, 1.0, 2.0, 0.0], [0.025150001, 3.0, 4.0, 0.0], [0.082949996, 5.0, 6.0, 0.0], [0.0234000012, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.0900985599, 0.0, 0.0, 0.0], [0.0867500007, 11.0, 12.0, 0.0], [0.0101999994, 13.0, 14.0, 0.0], [0.0944370702, 0.0, 0.0, 0.0], [0.0476500019, 15.0, 16.0, 0.0], [0.0490000024, 17.0, 18.0, 0.0], [-0.0707535669, 0.0, 0.0, 0.0], [0.0894500017, 19.0, 20.0, 0.0], [0.00768500008, 21.0, 22.0, 0.0], [0.0192999989, 23.0, 24.0, 0.0], [0.03785, 25.0, 26.0, 0.0], [0.0740500018, 27.0, 28.0, 0.0], [0.0198023971, 0.0, 0.0, 0.0], [0.0779259354, 0.0, 0.0, 0.0], [0.0873000026, 29.0, 30.0, 0.0], [0.0941499993, 31.0, 32.0, 0.0], [-0.000216852961, 0.0, 0.0, 0.0], [0.0935301632, 0.0, 0.0, 0.0], [-0.111883044, 0.0, 0.0, 0.0], [0.006528039, 0.0, 0.0, 0.0], [-0.103602834, 0.0, 0.0, 0.0], [0.101039231, 0.0, 0.0, 0.0], [-0.163285553, 0.0, 0.0, 0.0], [-0.0202486198, 0.0, 0.0, 0.0], [-0.00514059421, 0.0, 0.0, 0.0], [0.0760409534, 0.0, 0.0, 0.0], [-0.0525402613, 0.0, 0.0, 0.0], [0.00569546269, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 25, 26, 27, 28, 17, 18, 5, 11, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 15, 16, 10, 2, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1169(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.080400005, 5.0, 6.0, 0.0], [-0.169499993, 7.0, 8.0, 0.0], [-0.360500008, 9.0, 10.0, 0.0], [-0.154500008, 11.0, 12.0, 0.0], [-0.0742499977, 13.0, 14.0, 0.0], [-0.411000013, 15.0, 16.0, 0.0], [0.0494677983, 0.0, 0.0, 0.0], [-0.0383119173, 0.0, 0.0, 0.0], [-0.00025700152, 0.0, 0.0, 0.0], [-0.0543854311, 0.0, 0.0, 0.0], [-0.153499991, 17.0, 18.0, 0.0], [0.0600159019, 0.0, 0.0, 0.0], [-0.0126499999, 19.0, 20.0, 0.0], [0.0210574102, 0.0, 0.0, 0.0], [-0.0456852913, 0.0, 0.0, 0.0], [0.0175498929, 0.0, 0.0, 0.0], [-0.0472033359, 0.0, 0.0, 0.0], [-0.0630590469, 0.0, 0.0, 0.0], [-0.0123999994, 21.0, 22.0, 0.0], [0.0720643774, 0.0, 0.0, 0.0], [-0.000593677047, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 9, 10, 11, 17, 18, 13, 19, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 4, 2, 5, 12, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1170(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.915500045, 1.0, 2.0, 4.0], [-0.841500044, 3.0, 4.0, 1.0], [-0.847499967, 5.0, 6.0, 4.0], [0.021161899, 0.0, 0.0, 0.0], [-0.236499995, 7.0, 8.0, 0.0], [-0.987499952, 9.0, 10.0, 3.0], [-0.978999972, 11.0, 12.0, 3.0], [-0.946500003, 13.0, 14.0, 4.0], [0.456499994, 15.0, 16.0, 2.0], [0.03255542, 0.0, 0.0, 0.0], [0.00478265667, 0.0, 0.0, 0.0], [-0.0309283119, 0.0, 0.0, 0.0], [0.0149314469, 0.0, 0.0, 0.0], [-0.014853891, 0.0, 0.0, 0.0], [0.0230250359, 0.0, 0.0, 0.0], [-0.0411479548, 0.0, 0.0, 0.0], [0.554499984, 17.0, 18.0, 2.0], [0.0174785852, 0.0, 0.0, 0.0], [-0.0242365543, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 17, 18, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 8, 16, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1171(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.794499993, 3.0, 4.0, 1.0], [-0.0147994496, 0.0, 0.0, 0.0], [-0.994500041, 5.0, 6.0, 3.0], [-0.762500048, 7.0, 8.0, 1.0], [-0.0337798893, 0.0, 0.0, 0.0], [0.0149614858, 0.0, 0.0, 0.0], [0.0333979651, 0.0, 0.0, 0.0], [-0.734500051, 9.0, 10.0, 1.0], [-0.0240174346, 0.0, 0.0, 0.0], [-0.594500005, 11.0, 12.0, 1.0], [0.0220488962, 0.0, 0.0, 0.0], [-0.00630172947, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 7, 9, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 4, 8, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1172(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [-0.756500006, 3.0, 4.0, 1.0], [-0.138500005, 5.0, 6.0, 0.0], [0.0363692828, 0.0, 0.0, 0.0], [-0.864500046, 7.0, 8.0, 4.0], [-0.0267367177, 0.0, 0.0, 0.0], [0.00547067868, 0.0, 0.0, 0.0], [-0.919499993, 9.0, 10.0, 4.0], [0.0289456882, 0.0, 0.0, 0.0], [-0.960500002, 11.0, 12.0, 4.0], [-0.0394166037, 0.0, 0.0, 0.0], [-0.0238076802, 0.0, 0.0, 0.0], [0.0230918303, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 10, 8, 5, 6])
    branch_indices = np.array([0, 1, 4, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1173(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.996500015, 3.0, 4.0, 1.0], [0.0087799998, 5.0, 6.0, 0.0], [-0.0496499985, 7.0, 8.0, 0.0], [0.0403421707, 0.0, 0.0, 0.0], [-0.1215, 9.0, 10.0, 0.0], [-0.639999986, 11.0, 12.0, 2.0], [-0.057099998, 13.0, 14.0, 0.0], [-0.0460999981, 15.0, 16.0, 0.0], [-0.2095, 17.0, 18.0, 0.0], [-0.0627401918, 0.0, 0.0, 0.0], [0.0637165233, 0.0, 0.0, 0.0], [-0.0298994463, 0.0, 0.0, 0.0], [-0.0656000003, 19.0, 20.0, 0.0], [0.183397651, 0.0, 0.0, 0.0], [-0.113774672, 0.0, 0.0, 0.0], [-0.0392000005, 21.0, 22.0, 0.0], [-0.0169487838, 0.0, 0.0, 0.0], [0.0199699868, 0.0, 0.0, 0.0], [0.00418645237, 0.0, 0.0, 0.0], [-0.113911115, 0.0, 0.0, 0.0], [0.0512567423, 0.0, 0.0, 0.0], [-0.0018056914, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 21, 22, 4, 17, 18, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1174(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.885499954, 3.0, 4.0, 2.0], [-0.67050004, 5.0, 6.0, 2.0], [0.00151000009, 7.0, 8.0, 0.0], [0.00118999998, 9.0, 10.0, 0.0], [-0.254500002, 11.0, 12.0, 0.0], [-0.119499996, 13.0, 14.0, 0.0], [-0.000944999978, 15.0, 16.0, 0.0], [0.00325499987, 17.0, 18.0, 0.0], [-0.0701999962, 19.0, 20.0, 0.0], [0.083585225, 0.0, 0.0, 0.0], [0.0210190322, 0.0, 0.0, 0.0], [-0.0414500013, 21.0, 22.0, 0.0], [-0.223500013, 23.0, 24.0, 0.0], [-0.0274794046, 0.0, 0.0, 0.0], [-0.00200500013, 25.0, 26.0, 0.0], [0.147604555, 0.0, 0.0, 0.0], [-0.116279945, 0.0, 0.0, 0.0], [0.00588999968, 27.0, 28.0, 0.0], [0.0784678683, 0.0, 0.0, 0.0], [-0.0868203714, 0.0, 0.0, 0.0], [-0.0845019221, 0.0, 0.0, 0.0], [0.00641465932, 0.0, 0.0, 0.0], [-0.012178842, 0.0, 0.0, 0.0], [0.0635115877, 0.0, 0.0, 0.0], [0.00239853933, 0.0, 0.0, 0.0], [-0.0935050994, 0.0, 0.0, 0.0], [0.103989013, 0.0, 0.0, 0.0], [-0.0126892943, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 27, 28, 19, 20, 10, 11, 21, 22, 23, 24, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 18, 4, 9, 2, 5, 12, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1175(xs):
    #Predicts Class 5
    function_dict = np.array([[0.253499985, 1.0, 2.0, 0.0], [0.2095, 3.0, 4.0, 0.0], [0.260500014, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.0657673925, 0.0, 0.0, 0.0], [0.0662715957, 0.0, 0.0, 0.0], [0.2755, 9.0, 10.0, 0.0], [-0.420000017, 11.0, 12.0, 0.0], [-0.161500007, 13.0, 14.0, 0.0], [-0.0531147532, 0.0, 0.0, 0.0], [0.344999999, 15.0, 16.0, 0.0], [-0.467500001, 17.0, 18.0, 0.0], [0.0534648523, 0.0, 0.0, 0.0], [-0.168500006, 19.0, 20.0, 0.0], [-0.0318999998, 21.0, 22.0, 0.0], [0.0863673612, 0.0, 0.0, 0.0], [0.397499979, 23.0, 24.0, 0.0], [0.00786005892, 0.0, 0.0, 0.0], [-0.0294384658, 0.0, 0.0, 0.0], [-0.00638307165, 0.0, 0.0, 0.0], [-0.043069452, 0.0, 0.0, 0.0], [0.0172409788, 0.0, 0.0, 0.0], [-0.0157055892, 0.0, 0.0, 0.0], [-0.0453040749, 0.0, 0.0, 0.0], [0.00395573815, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 19, 20, 21, 22, 4, 5, 9, 15, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1176(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.995499969, 1.0, 2.0, 3.0], [0.555999994, 3.0, 4.0, 2.0], [0.637500048, 5.0, 6.0, 2.0], [-0.957499981, 7.0, 8.0, 4.0], [0.0170212463, 0.0, 0.0, 0.0], [-0.698500037, 9.0, 10.0, 1.0], [0.726500034, 11.0, 12.0, 2.0], [-0.0394883566, 0.0, 0.0, 0.0], [0.00346220122, 0.0, 0.0, 0.0], [-0.766499996, 13.0, 14.0, 1.0], [0.0466679186, 0.0, 0.0, 0.0], [-0.0351821966, 0.0, 0.0, 0.0], [0.0114458743, 0.0, 0.0, 0.0], [-0.95449996, 15.0, 16.0, 4.0], [-0.0279513951, 0.0, 0.0, 0.0], [0.0443465933, 0.0, 0.0, 0.0], [-0.00461541442, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 15, 16, 14, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 13, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1177(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.341499984, 1.0, 2.0, 0.0], [0.014915105, 0.0, 0.0, 0.0], [-0.906499982, 3.0, 4.0, 4.0], [-0.936499953, 5.0, 6.0, 4.0], [-0.0207386464, 0.0, 0.0, 0.0], [0.436500013, 7.0, 8.0, 2.0], [0.0256085005, 0.0, 0.0, 0.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.75849998, 11.0, 12.0, 1.0], [0.0376763679, 0.0, 0.0, 0.0], [-0.0203322731, 0.0, 0.0, 0.0], [-0.0443144776, 0.0, 0.0, 0.0], [0.00342717557, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 6, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1178(xs):
    #Predicts Class 2
    function_dict = np.array([[0.476500005, 1.0, 2.0, 2.0], [-0.972499967, 3.0, 4.0, 4.0], [-0.679499984, 5.0, 6.0, 1.0], [0.00728099234, 0.0, 0.0, 0.0], [-0.0320956111, 0.0, 0.0, 0.0], [0.030620914, 0.0, 0.0, 0.0], [0.66050005, 7.0, 8.0, 2.0], [0.598500013, 9.0, 10.0, 2.0], [0.715499997, 11.0, 12.0, 2.0], [0.00354470126, 0.0, 0.0, 0.0], [-0.0379510596, 0.0, 0.0, 0.0], [0.0371278636, 0.0, 0.0, 0.0], [-0.00376903173, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 2, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1179(xs):
    #Predicts Class 3
    function_dict = np.array([[0.421999991, 1.0, 2.0, 0.0], [0.418500006, 3.0, 4.0, 0.0], [0.432500005, 5.0, 6.0, 0.0], [0.407999992, 7.0, 8.0, 0.0], [0.419499993, 9.0, 10.0, 0.0], [0.429499984, 11.0, 12.0, 0.0], [0.434499979, 13.0, 14.0, 0.0], [0.404500008, 15.0, 16.0, 0.0], [0.0801914781, 0.0, 0.0, 0.0], [-0.06573008, 0.0, 0.0, 0.0], [-0.0140028829, 0.0, 0.0, 0.0], [0.0780281052, 0.0, 0.0, 0.0], [0.0228706468, 0.0, 0.0, 0.0], [-0.078744337, 0.0, 0.0, 0.0], [0.436500013, 17.0, 18.0, 0.0], [0.276499987, 19.0, 20.0, 0.0], [-0.0469226316, 0.0, 0.0, 0.0], [0.0483514443, 0.0, 0.0, 0.0], [0.463499993, 21.0, 22.0, 0.0], [-0.00205675187, 0.0, 0.0, 0.0], [0.0371925384, 0.0, 0.0, 0.0], [-0.0261420775, 0.0, 0.0, 0.0], [0.0103877131, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 16, 8, 9, 10, 11, 12, 13, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 6, 14, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1180(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0850500017, 1.0, 2.0, 0.0], [0.0760499984, 3.0, 4.0, 0.0], [0.0894500017, 5.0, 6.0, 0.0], [0.0477499999, 7.0, 8.0, 0.0], [-0.0836110041, 0.0, 0.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [0.152999997, 11.0, 12.0, 0.0], [0.0417999998, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [0.0648700669, 0.0, 0.0, 0.0], [0.0191717297, 0.0, 0.0, 0.0], [0.0945499986, 17.0, 18.0, 0.0], [0.196500003, 19.0, 20.0, 0.0], [0.028549999, 21.0, 22.0, 0.0], [-0.102914043, 0.0, 0.0, 0.0], [0.0814618394, 0.0, 0.0, 0.0], [-0.037211787, 0.0, 0.0, 0.0], [0.0116948606, 0.0, 0.0, 0.0], [-0.0706417933, 0.0, 0.0, 0.0], [0.194499999, 23.0, 24.0, 0.0], [-0.0258906856, 0.0, 0.0, 0.0], [-0.00173767435, 0.0, 0.0, 0.0], [0.0761341155, 0.0, 0.0, 0.0], [0.0385084115, 0.0, 0.0, 0.0], [0.00996134337, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 4, 9, 10, 17, 18, 23, 24, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 6, 11, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1181(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0267674401, 0.0, 0.0, 0.0], [0.557999969, 5.0, 6.0, 0.0], [-0.0594750494, 0.0, 0.0, 0.0], [0.506000042, 7.0, 8.0, 0.0], [0.045741003, 0.0, 0.0, 0.0], [0.466499984, 9.0, 10.0, 0.0], [0.528499961, 11.0, 12.0, 0.0], [-0.00182301609, 0.0, 0.0, 0.0], [0.049005013, 0.0, 0.0, 0.0], [-0.0444327481, 0.0, 0.0, 0.0], [0.00768224243, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1182(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.0796000063, 1.0, 2.0, 0.0], [-0.569499969, 3.0, 4.0, 1.0], [0.0183459185, 0.0, 0.0, 0.0], [0.636500001, 5.0, 6.0, 2.0], [-0.0223402455, 0.0, 0.0, 0.0], [-0.825500011, 7.0, 8.0, 1.0], [0.0340387039, 0.0, 0.0, 0.0], [0.0217408538, 0.0, 0.0, 0.0], [-0.929499984, 9.0, 10.0, 4.0], [-0.0300498866, 0.0, 0.0, 0.0], [0.0121934563, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 9, 10, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1183(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.800500035, 1.0, 2.0, 1.0], [-0.965499997, 3.0, 4.0, 4.0], [-0.99849999, 5.0, 6.0, 3.0], [-0.00897937361, 0.0, 0.0, 0.0], [0.0258941557, 0.0, 0.0, 0.0], [-0.0270998031, 0.0, 0.0, 0.0], [-0.965499997, 7.0, 8.0, 4.0], [0.0277115963, 0.0, 0.0, 0.0], [0.455500007, 9.0, 10.0, 2.0], [0.0190361068, 0.0, 0.0, 0.0], [-0.657500029, 11.0, 12.0, 1.0], [-0.0450804047, 0.0, 0.0, 0.0], [0.00634918921, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 9, 11, 12])
    branch_indices = np.array([0, 1, 2, 6, 8, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1184(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.718500018, 1.0, 2.0, 1.0], [0.436500013, 3.0, 4.0, 2.0], [-0.99849999, 5.0, 6.0, 3.0], [-0.0287658311, 0.0, 0.0, 0.0], [0.00358979986, 0.0, 0.0, 0.0], [0.0335314125, 0.0, 0.0, 0.0], [-0.20449999, 7.0, 8.0, 0.0], [-0.506999969, 9.0, 10.0, 1.0], [-0.567999959, 11.0, 12.0, 1.0], [-0.0534821451, 0.0, 0.0, 0.0], [-0.977499962, 13.0, 14.0, 3.0], [0.0423154794, 0.0, 0.0, 0.0], [-0.015179175, 0.0, 0.0, 0.0], [-0.00753003405, 0.0, 0.0, 0.0], [0.0280592181, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 13, 14, 11, 12])
    branch_indices = np.array([0, 1, 2, 6, 7, 10, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1185(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.136500001, 1.0, 2.0, 0.0], [-0.141499996, 3.0, 4.0, 0.0], [-0.131500006, 5.0, 6.0, 0.0], [-0.142500013, 7.0, 8.0, 0.0], [-0.0337241292, 0.0, 0.0, 0.0], [-0.13350001, 9.0, 10.0, 0.0], [-0.127499998, 11.0, 12.0, 0.0], [-0.185499996, 13.0, 14.0, 0.0], [0.0769380331, 0.0, 0.0, 0.0], [-0.134499997, 15.0, 16.0, 0.0], [0.0438407548, 0.0, 0.0, 0.0], [-0.0683858693, 0.0, 0.0, 0.0], [-0.125499994, 17.0, 18.0, 0.0], [-0.186500013, 19.0, 20.0, 0.0], [-0.0508376546, 0.0, 0.0, 0.0], [0.0265939999, 0.0, 0.0, 0.0], [-0.00437010871, 0.0, 0.0, 0.0], [0.0501880385, 0.0, 0.0, 0.0], [-0.111500002, 21.0, 22.0, 0.0], [-0.00564995036, 0.0, 0.0, 0.0], [0.06004503, 0.0, 0.0, 0.0], [-0.0232056566, 0.0, 0.0, 0.0], [0.00169349322, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 15, 16, 10, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1186(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0042849998, 1.0, 2.0, 0.0], [0.00185999996, 3.0, 4.0, 0.0], [0.00974999927, 5.0, 6.0, 0.0], [-0.000834999955, 7.0, 8.0, 0.0], [0.139967263, 0.0, 0.0, 0.0], [0.00768500008, 9.0, 10.0, 0.0], [0.0203999989, 11.0, 12.0, 0.0], [-0.00163000007, 13.0, 14.0, 0.0], [-0.112904117, 0.0, 0.0, 0.0], [-0.097663112, 0.0, 0.0, 0.0], [-0.0244593751, 0.0, 0.0, 0.0], [0.0865205005, 0.0, 0.0, 0.0], [0.0240500011, 15.0, 16.0, 0.0], [-0.00478500035, 17.0, 18.0, 0.0], [0.127412871, 0.0, 0.0, 0.0], [-0.100219637, 0.0, 0.0, 0.0], [0.0293500014, 19.0, 20.0, 0.0], [0.00191877328, 0.0, 0.0, 0.0], [-0.0784993917, 0.0, 0.0, 0.0], [0.0536854155, 0.0, 0.0, 0.0], [-0.00573188113, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1187(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.394999981, 3.0, 4.0, 0.0], [0.208000004, 5.0, 6.0, 0.0], [-0.0316324532, 0.0, 0.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [-0.1655, 13.0, 14.0, 0.0], [-0.0331500024, 15.0, 16.0, 0.0], [0.0298249405, 0.0, 0.0, 0.0], [0.00518500013, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.43599999, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [0.0381685272, 0.0, 0.0, 0.0], [-0.149500012, 25.0, 26.0, 0.0], [-0.0123999994, 27.0, 28.0, 0.0], [-0.0400138348, 0.0, 0.0, 0.0], [-0.00211481703, 0.0, 0.0, 0.0], [0.068028599, 0.0, 0.0, 0.0], [0.018862037, 0.0, 0.0, 0.0], [-0.0162644684, 0.0, 0.0, 0.0], [0.0213360004, 0.0, 0.0, 0.0], [-0.00799787138, 0.0, 0.0, 0.0], [0.0428556502, 0.0, 0.0, 0.0], [-0.0136696864, 0.0, 0.0, 0.0], [-0.0721118376, 0.0, 0.0, 0.0], [0.0503845289, 0.0, 0.0, 0.0], [-0.00347284204, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 23, 24, 14, 25, 26, 27, 28, 9, 17, 18, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 4, 7, 13, 8, 15, 16, 2, 5, 10, 6, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def logit_class_0(xs):
    try:
        import multiprocessing
        pool = multiprocessing.Pool()
    except:
        pool = -1
    sum_of_leaf_values = np.zeros(xs.shape[0])
    if pool != -1:
        sum_of_leaf_values = np.sum(list(pool.starmap(apply,[(eval('booster_' + str(booster_index)), xs) for booster_index in range(0,1188,6)])), axis=0)
    else:
        for booster_index in range(0,1188,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_1(xs):
    try:
        import multiprocessing
        pool = multiprocessing.Pool()
    except:
        pool = -1
    sum_of_leaf_values = np.zeros(xs.shape[0])
    if pool != -1:
        sum_of_leaf_values = np.sum(list(pool.starmap(apply,[(eval('booster_' + str(booster_index)), xs) for booster_index in range(1,1188,6)])), axis=0)
    else:
        for booster_index in range(1,1188,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_2(xs):
    try:
        import multiprocessing
        pool = multiprocessing.Pool()
    except:
        pool = -1
    sum_of_leaf_values = np.zeros(xs.shape[0])
    if pool != -1:
        sum_of_leaf_values = np.sum(list(pool.starmap(apply,[(eval('booster_' + str(booster_index)), xs) for booster_index in range(2,1188,6)])), axis=0)
    else:
        for booster_index in range(2,1188,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_3(xs):
    try:
        import multiprocessing
        pool = multiprocessing.Pool()
    except:
        pool = -1
    sum_of_leaf_values = np.zeros(xs.shape[0])
    if pool != -1:
        sum_of_leaf_values = np.sum(list(pool.starmap(apply,[(eval('booster_' + str(booster_index)), xs) for booster_index in range(3,1188,6)])), axis=0)
    else:
        for booster_index in range(3,1188,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_4(xs):
    try:
        import multiprocessing
        pool = multiprocessing.Pool()
    except:
        pool = -1
    sum_of_leaf_values = np.zeros(xs.shape[0])
    if pool != -1:
        sum_of_leaf_values = np.sum(list(pool.starmap(apply,[(eval('booster_' + str(booster_index)), xs) for booster_index in range(4,1188,6)])), axis=0)
    else:
        for booster_index in range(4,1188,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_5(xs):
    try:
        import multiprocessing
        pool = multiprocessing.Pool()
    except:
        pool = -1
    sum_of_leaf_values = np.zeros(xs.shape[0])
    if pool != -1:
        sum_of_leaf_values = np.sum(list(pool.starmap(apply,[(eval('booster_' + str(booster_index)), xs) for booster_index in range(5,1188,6)])), axis=0)
    else:
        for booster_index in range(5,1188,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def classify(rows, return_probabilities=False):
    logits = []
    logits.append(logit_class_0)
    logits.append(logit_class_1)
    logits.append(logit_class_2)
    logits.append(logit_class_3)
    logits.append(logit_class_4)
    logits.append(logit_class_5)
    o = np.array([logits[class_index](rows) for class_index in range(6)]).T
    if not return_probabilities:
        return np.argmax(o,axis=1)
    else:
        exps = np.exp(o)
        Z = np.sum(exps, axis=1).reshape(-1, 1)
        return exps/Z





def Validate(cleanarr):
    #validation 
    outputs = classify(cleanarr[:, :-1]) 
    #metrics 
    count, correct_count = 0, 0 
    numeachclass = {} 
    for k, o in enumerate(outputs): 
        if int(o) == int(float(cleanarr[k, -1])): 
            correct_count += 1 
        if int(float(cleanarr[k, -1])) in numeachclass.keys(): 
            numeachclass[int(float(cleanarr[k, -1]))] += 1 
        else: 
            numeachclass[int(float(cleanarr[k, -1]))] = 1 
        count += 1 
    return count, correct_count, numeachclass, outputs


def Predict(arr,headerless,csvfile, get_key, classmapping):
    with open(csvfile, 'r') as csvinput:
        #readers and writers
        reader = csv.reader(csvinput)

        #print original header
        if (not headerless):
            print(','.join(next(reader, None) + ["Prediction"]))
        
        outputs = classify(arr)
        for i, row in enumerate(reader):
            #use the transformed array as input to predictor
            pred = str(get_key(int(outputs[i]), classmapping))
            #use original untransformed line to write out
            row.append(pred)
            print(','.join(['"' + field + '"' if ',' in field else field for field in row]))



# Main method
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on '+TRAINFILE)
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-cleanfile', action='store_true', help='Use this flag to save prediction time if the csvfile you are passing has already been preprocessed. Implies headerless.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    parser.add_argument('-json', action="store_true", default=False, help="report measurements as json")
    parser.add_argument('-trim', action="store_true", help="If true, the prediction will not output ignored columns.")
    args = parser.parse_args()
    faulthandler.enable()
    if args.validate:
        args.trim = True
    #clean if not already clean
    if not args.cleanfile:
        tempdir = tempfile.gettempdir()
        cleanfile = tempfile.NamedTemporaryFile().name
        preprocessedfile = tempfile.NamedTemporaryFile().name
        output = preprocess(args.csvfile,preprocessedfile,args.headerless,(not args.validate), trim=args.trim)
        get_key, classmapping = clean(preprocessedfile if output!=-1 else args.csvfile, cleanfile, -1, args.headerless, (not args.validate), trim=args.trim)
    else:
        cleanfile=args.csvfile
        preprocessedfile=args.csvfile
        get_key = lambda x, y: x
        classmapping = {}
        output=None


    #load file
    cleanarr = np.loadtxt(cleanfile, delimiter=',', dtype='float64')
    if not args.trim and ignorecolumns != []:
        cleanarr = cleanarr[:, important_idxs]


    #Predict
    if not args.validate:
        Predict(cleanarr, args.headerless, preprocessedfile if output!=-1 else args.csvfile, get_key, classmapping)


    #Validate
    else:
        classifier_type = 'RF'
        count, correct_count, numeachclass, preds = Validate(cleanarr)
        #Correct Labels
        true_labels = cleanarr[:, -1]

        #Report Metrics
        model_cap=13
        if args.json:
            import json
        if n_classes == 2:
            #Base metrics
            FN = float(num_FN) * 100.0 / float(count)
            FP = float(num_FP) * 100.0 / float(count)
            TN = float(num_TN) * 100.0 / float(count)
            TP = float(num_TP) * 100.0 / float(count)
            num_correct = correct_count

            #Calculated Metrics
            if int(num_TP + num_FN) != 0:
                TPR = num_TP / (num_TP + num_FN) # Sensitivity, Recall
            if int(num_TN + num_FP) != 0:
                TNR = num_TN / (num_TN + num_FP) # Specificity
            if int(num_TP + num_FP) != 0:
                PPV = num_TP / (num_TP + num_FP) # Recall
            if int(num_FN + num_TP) != 0:
                FNR = num_FN / (num_FN + num_TP) # Miss rate
            if int(2 * num_TP + num_FP + num_FN) != 0:
                FONE = 2 * num_TP / (2 * num_TP + num_FP + num_FN) # F1 Score
            if int(num_TP + num_FN + num_FP) != 0:
                TS = num_TP / (num_TP + num_FN + num_FP) # Critical Success Index
            #Best Guess Accuracy
            randguess = int(float(10000.0 * max(num_class_1, num_class_0)) / count) / 100.0
            #Model Accuracy
            classbalance = [float(num_class_0)/count, float(num_class_1)/count]
            H = float(-1.0 * sum([classbalance[i] * math.log(classbalance[i]) / math.log(2) for i in range(len(classbalance))]))

            modelacc = int(float(num_correct * 10000) / count) / 100.0
            #Report
            json_dict = {'instance_count':                        count ,
                         'classifier_type':                        classifier_type,
                         'classes':                            2 ,
                         'false_negative_instances':    num_FN ,
                         'false_positive_instances':    num_FP ,
                         'true_positive_instances':    num_TP ,
                         'true_negative_instances':    num_TN,
                         'false_negatives':                        FN ,
                         'false_positives':                        FP ,
                         'true_negatives':                        TN ,
                         'true_positives':                        TP ,
                         'number_correct':                        num_correct ,
                         'accuracy': {
                             'best_guess': randguess,
                             'improvement': modelacc-randguess,
                             'model_accuracy': modelacc,
                         },
                         'model_capacity':                        model_cap ,
                         'generalization_ratio':                int(float(num_correct * 100) / model_cap) * H/ 100.0,
                         'model_efficiency':                    int(100 * (modelacc - randguess) / model_cap) / 100.0,
                        'shannon_entropy_of_labels':           H,
                        'classbalance':                        classbalance}
            if classifier_type == 'NN':
                json_dict['capacity_utilized_by_nn'] = cap_utilized # noqa
            if args.json:
                pass
            else:
                if classifier_type == 'NN':
                    print("Classifier Type:                    Neural Network")
                elif classifier_type == 'RF':
                    print("Classifier Type:                    Random Forest")
                else:
                    print("Classifier Type:                    Decision Tree")
                print("System Type:                        Binary classifier")
                print("Best-guess accuracy:                {:.2f}%".format(randguess))
                print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
                print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
                print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
                if classifier_type == 'NN':
                    print("Model Capacity Utilized:            {:.0f} bits".format(cap_utilized)) # noqa
                print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0 * H) + " bits/bit")
                print("Model efficiency:                   {:.2f}%/parameter".format(int(100 * (modelacc - randguess) / model_cap) / 100.0))
                print("System behavior")
                print("True Negatives:                     {:.2f}%".format(TN) + " (" + str(int(num_TN)) + "/" + str(count) + ")")
                print("True Positives:                     {:.2f}%".format(TP) + " (" + str(int(num_TP)) + "/" + str(count) + ")")
                print("False Negatives:                    {:.2f}%".format(FN) + " (" + str(int(num_FN)) + "/" + str(count) + ")")
                print("False Positives:                    {:.2f}%".format(FP) + " (" + str(int(num_FP)) + "/" + str(count) + ")")
                if int(num_TP + num_FN) != 0:
                    print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
                if int(num_TN + num_FP) != 0:
                    print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
                if int(num_TP + num_FP) != 0:
                    print("Precision:                          {:.2f}".format(PPV))
                if int(2 * num_TP + num_FP + num_FN) != 0:
                    print("F-1 Measure:                        {:.2f}".format(FONE))
                if int(num_TP + num_FN) != 0:
                    print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
                if int(num_TP + num_FN + num_FP) != 0:
                    print("Critical Success Index:             {:.2f}".format(TS))
        #Multiclass
        else:
            num_correct = correct_count
            modelacc = int(float(num_correct * 10000) / count) / 100.0
            randguess = round(max(numeachclass.values()) / sum(numeachclass.values()) * 100, 2)
            classbalance = [float(numofcertainclass) / count for numofcertainclass in numeachclass.values()]
            H = float(-1.0 * sum([classbalance[i] * math.log(classbalance[i]) / math.log(2) for i in range(len(classbalance))]))

            if args.json:
                json_dict = {'instance_count':                        count,
                            'classifier_type':                        classifier_type,
                            'classes':                            n_classes,
                             'number_correct': num_correct,
                             'accuracy': {
                                 'best_guess': randguess,
                                 'improvement': modelacc - randguess,
                                 'model_accuracy': modelacc,
                             },
                             'model_capacity': model_cap,
                            'generalization_ratio':                int(float(num_correct * 100) / model_cap) / 100.0 * H,
                            'model_efficiency':                    int(100 * (modelacc - randguess) / model_cap) / 100.0,
                        'shannon_entropy_of_labels':           H,
                        'classbalance':                        classbalance}
                if classifier_type == 'NN':
                    json_dict['capacity_utilized_by_nn'] = cap_utilized # noqa
            else:
                if classifier_type == 'NN':
                    print("Classifier Type:                    Neural Network")
                elif classifier_type == 'RF':
                    print("Classifier Type:                    Random Forest")
                else:
                    print("Classifier Type:                    Decision Tree")
                print("System Type:                        " + str(n_classes) + "-way classifier")
                print("Best-guess accuracy:                {:.2f}%".format(randguess))
                print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
                print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
                print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
                if classifier_type == 'NN':
                    print("Model Capacity Utilized:            {:.0f} bits".format(cap_utilized)) # noqa              
                print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0 * H) + " bits/bit")
                print("Model efficiency:                   {:.2f}%/parameter".format(int(100 * (modelacc - randguess) / model_cap) / 100.0))

        try:
            import numpy as np # For numpy see: http://numpy.org
            from numpy import array
        except:
            print("Note: If you install numpy (https://www.numpy.org) and scipy (https://www.scipy.org) this predictor generates a confusion matrix")

        def confusion_matrix(y_true, y_pred, json, labels=None, sample_weight=None, normalize=None):
            stats = {}
            if labels is None:
                labels = np.array(list(set(list(y_true.astype('int')))))
            else:
                labels = np.asarray(labels)
                if np.all([l not in y_true for l in labels]):
                    raise ValueError("At least one label specified must be in y_true")
            n_labels = labels.size

            for class_i in range(n_labels):
                stats[class_i] = {'TP':{},'FP':{},'FN':{},'TN':{}}
                class_i_indices = np.argwhere(y_true==class_i) #indices with bus(call class_i=bus in this example)
                not_class_i_indices = np.argwhere(y_true!=class_i) #indices with not bus
                stats[int(class_i)]['TP'] = int(np.sum(y_pred[class_i_indices] == class_i)) #indices where bus, and we predict == bus
                stats[int(class_i)]['FN'] = int(np.sum(y_pred[class_i_indices] != class_i)) #indices where bus, and we predict != bus
                stats[int(class_i)]['TN'] = int(np.sum(y_pred[not_class_i_indices] != class_i)) #indices with not bus, where we predict != bus
                stats[int(class_i)]['FP'] = int(np.sum(y_pred[not_class_i_indices] == class_i)) #indices where not bus, we predict as bus
            #check for numpy/scipy is imported
            try:
                from scipy.sparse import coo_matrix #required for multiclass metrics
            except:
                if not json:
                    print("Note: If you install scipy (https://www.scipy.org) this predictor generates a confusion matrix")
                    sys.exit()
                else:
                    return np.array([]), stats
                

            # Compute confusion matrix to evaluate the accuracy of a classification.
            # By definition a confusion matrix :math:C is such that :math:C_{i, j}
            # is equal to the number of observations known to be in group :math:i and
            # predicted to be in group :math:j.
            # Thus in binary classification, the count of true negatives is
            # :math:C_{0,0}, false negatives is :math:C_{1,0}, true positives is
            # :math:C_{1,1} and false positives is :math:C_{0,1}.
            # Read more in the :ref:User Guide <confusion_matrix>.
            # Parameters
            # ----------
            # y_true : array-like of shape (n_samples,)
            # Ground truth (correct) target values.
            # y_pred : array-like of shape (n_samples,)
            # Estimated targets as returned by a classifier.
            # labels : array-like of shape (n_classes), default=None
            # List of labels to index the matrix. This may be used to reorder
            # or select a subset of labels.
            # If None is given, those that appear at least once
            # in y_true or y_pred are used in sorted order.
            # sample_weight : array-like of shape (n_samples,), default=None
            # Sample weights.
            # normalize : {'true', 'pred', 'all'}, default=None
            # Normalizes confusion matrix over the true (rows), predicted (columns)
            # conditions or all the population. If None, confusion matrix will not be
            # normalized.
            # Returns
            # -------
            # C : ndarray of shape (n_classes, n_classes)
            # Confusion matrix.
            # References
            # ----------



            if sample_weight is None:
                sample_weight = np.ones(y_true.shape[0], dtype=np.int64)
            else:
                sample_weight = np.asarray(sample_weight)
            if y_true.shape[0]!=y_pred.shape[0]:
                raise ValueError("y_true and y_pred must be of the same length")

            if normalize not in ['true', 'pred', 'all', None]:
                raise ValueError("normalize must be one of {'true', 'pred', 'all', None}")


            label_to_ind = {y: x for x, y in enumerate(labels)}
            # convert yt, yp into index
            y_pred = np.array([label_to_ind.get(x, n_labels + 1) for x in y_pred])
            y_true = np.array([label_to_ind.get(x, n_labels + 1) for x in y_true])
            # intersect y_pred, y_true with labels, eliminate items not in labels
            ind = np.logical_and(y_pred < n_labels, y_true < n_labels)
            y_pred = y_pred[ind]
            y_true = y_true[ind]

            # also eliminate weights of eliminated items
            sample_weight = sample_weight[ind]
            # Choose the accumulator dtype to always have high precision
            if sample_weight.dtype.kind in {'i', 'u', 'b'}:
                dtype = np.int64
            else:
                dtype = np.float64
            cm = coo_matrix((sample_weight, (y_true, y_pred)), shape=(n_labels, n_labels), dtype=dtype,).toarray()


            with np.errstate(all='ignore'):
                if normalize == 'true':
                    cm = cm / cm.sum(axis=1, keepdims=True)
                elif normalize == 'pred':
                    cm = cm / cm.sum(axis=0, keepdims=True)
                elif normalize == 'all':
                    cm = cm / cm.sum()
                cm = np.nan_to_num(cm)
            return cm, stats
        mtrx, stats = confusion_matrix(np.array(true_labels).reshape(-1), np.array(preds).reshape(-1), args.json)
        if args.json:
            json_dict['confusion_matrix'] = mtrx.tolist()
            json_dict['multiclass_stats'] = stats
            print(json.dumps(json_dict))
        else:
            mtrx = mtrx / np.sum(mtrx) * 100.0
            print("Confusion Matrix:")
            print(' ' + np.array2string(mtrx, formatter={'float': (lambda x: '{:.2f}%'.format(round(float(x), 2)))})[1:-1])

    #Clean Up
    if not args.cleanfile:
        os.remove(cleanfile)
        if output!=-1:
            os.remove(preprocessedfile)
