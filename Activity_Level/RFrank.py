#!/usr/bin/env python3
#
# This code has been produced by a free evaluation version of Daimensions(tm).
# Portions of this code copyright (c) 2019, 2020 by Brainome, Inc. All Rights Reserved.
# Brainome grants an exclusive (subject to our continuing rights to use and modify models),
# worldwide, non-sublicensable, and non-transferable limited license to use and modify this
# predictor produced through the input of your data:
# (i) for users accessing the service through a free evaluation account, solely for your
# own non-commercial purposes, including for the purpose of evaluating this service, and
# (ii) for users accessing the service through a paid, commercial use account, for your
# own internal  and commercial purposes.
# Please contact support@brainome.ai with any questions.
# Use of predictions results at your own risk.
#
# Output of Brainome Daimensions(tm) 0.991 Table Compiler v0.99.
# Invocation: btc train.csv -headerless -f RF -rank -o RFrank.py -riskoverfit --yes
# Total compiler execution time: 0:02:51.34. Finished on: Mar-05-2021 01:30:46.
# This source code requires Python 3.
#
"""
Classifier Type:                    Random Forest
System Type:                         6-way classifier
Best-guess accuracy:                 18.88%
Overall Model accuracy:              98.65% (5080/5149 correct)
Overall Improvement over best guess: 79.77% (of possible 81.12%)
Model capacity (MEC):                13 bits
Generalization ratio:                1006.57 bits/bit
Model efficiency:                    6.13%/parameter
Confusion Matrix:
 [16.72% 0.00% 0.00% 0.00% 0.00% 0.00%]
 [0.00% 14.99% 0.00% 0.00% 0.00% 0.00%]
 [0.00% 0.00% 13.65% 0.00% 0.00% 0.00%]
 [0.00% 0.00% 0.00% 16.47% 0.68% 0.10%]
 [0.00% 0.00% 0.00% 0.14% 18.37% 0.00%]
 [0.00% 0.00% 0.00% 0.31% 0.12% 18.45%]
Generalization index:                324.83
Percent of Data Memorized:           0.31%
Note: Unable to split dataset. The predictor was trained and evaluated on the same data.
{"to_select_idxs":[53, 366, 310, 388, 422], "to_ignore_idxs":[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560], "overfit_risk":5.049880184815336e-05, "risk_progression":[23.232109931177696, 36.25393358851401, 32.73778906638591, 30.337558779129253, 30.775206954599152], "test_accuracy_progression":[[53, 0.6948922120800155], [366, 0.87706350747718], [310, 0.9077490774907749], [388, 0.8863857059623228], [422, 0.8912410176733346]]}

"""

# Imports -- Python3 standard library
import sys
import math
import os
import argparse
import tempfile
import csv
import binascii
import faulthandler


# Magic constants follow
# I/O buffer for clean. Reduce this constant for low memory devices. 
IOBUF = 100000000

# Ugly workaround for large classifiers
sys.setrecursionlimit(1000000)

# Training file given to compiler
TRAINFILE = "train.csv"

try:
    import numpy as np # For numpy see: http://numpy.org
    from numpy import array
except:
    print("This predictor requires the Numpy library. For installation instructions please refer to: http://numpy.org")

#Number of attributes
num_attr = 5
n_classes = 6
transform_true = False

# Preprocessor for CSV files

ignorelabels=[]
ignorecolumns=["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560",]
target=""
important_idxs=[53,310,366,388,422]

def preprocess(inputcsvfile, outputcsvfile, headerless=False, testfile=False, target='', ignorecolumns=[], ignorelabels=[], trim=False):
    #This function streams in a csv and outputs a csv with the correct columns and target column on the right hand side. 
    #Precursor to clean

    il=[]

    ignorelabels=[]
    ignorecolumns=["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560",]
    target=""
    important_idxs=[53,310,366,388,422]
    if ignorelabels == [] and ignorecolumns == [] and target == "":
        return -1
    if not trim:
        ignorecolumns = []
    if (testfile):
        target = ''
        hc = -1 
    with open(outputcsvfile, "w+", encoding='utf-8') as outputfile:
        with open(inputcsvfile, "r", encoding='utf-8') as csvfile:      # hardcoded utf-8 encoding per #717
            reader = csv.reader(csvfile)
            if (headerless == False):
                header=next(reader, None)
                try:
                    if not testfile:
                        if (target != ''): 
                            hc = header.index(target)
                        else:
                            hc = len(header) - 1
                            target=header[hc]
                except:
                    raise NameError("Target '" + target + "' not found! Header must be same as in file passed to btc.")
                for i in range(0, len(ignorecolumns)):
                    try:
                        col = header.index(ignorecolumns[i])
                        if not testfile:
                            if (col == hc):
                                raise ValueError("Attribute '" + ignorecolumns[i] + "' is the target. Header must be same as in file passed to btc.")
                        il = il + [col]
                    except ValueError:
                        raise
                    except:
                        raise NameError("Attribute '" + ignorecolumns[i] + "' not found in header. Header must be same as in file passed to btc.")
                first = True
                for i in range(0, len(header)):

                    if (i == hc):
                        continue
                    if (i in il):
                        continue
                    if first:
                        first = False
                    else:
                        print(",", end='', file=outputfile)
                    print(header[i], end='', file=outputfile)
                if not testfile:
                    print("," + header[hc], file=outputfile)
                else:
                    print("", file=outputfile)

                for row in csv.DictReader(open(inputcsvfile, encoding='utf-8')):
                    if target and (row[target] in ignorelabels):
                        continue
                    first = True
                    for name in header:
                        if (name in ignorecolumns):
                            continue
                        if (name == target):
                            continue
                        if first:
                            first = False
                        else:
                            print(",", end='', file=outputfile)
                        if (',' in row[name]):
                            print('"' + row[name].replace('"', '') + '"', end='', file=outputfile)
                        else:
                            print(row[name].replace('"', ''), end='', file=outputfile)
                    if not testfile:
                        print("," + row[target], file=outputfile)
                    else:
                        if len(important_idxs) == 1:
                            print(",", file=outputfile)
                        else:
                            print("", file=outputfile)

            else:
                try:
                    if (target != ""): 
                        hc = int(target)
                    else:
                        hc = -1
                except:
                    raise NameError("No header found but attribute name given as target. Header must be same as in file passed to btc.")
                for i in range(0, len(ignorecolumns)):
                    try:
                        col = int(ignorecolumns[i])
                        if (col == hc):
                            raise ValueError("Attribute " + str(col) + " is the target. Cannot ignore. Header must be same as in file passed to btc.")
                        il = il + [col]
                    except ValueError:
                        raise
                    except:
                        raise ValueError("No header found but attribute name given in ignore column list. Header must be same as in file passed to btc.")
                for row in reader:
                    first = True
                    if (hc == -1) and (not testfile):
                        hc = len(row) - 1
                    if (row[hc] in ignorelabels):
                        continue
                    for i in range(0, len(row)):
                        if (i in il):
                            continue
                        if (i == hc):
                            continue
                        if first:
                            first = False
                        else:
                            print(",", end='', file=outputfile)
                        if (',' in row[i]):
                            print('"' + row[i].replace('"', '') + '"', end='', file=outputfile)
                        else:
                            print(row[i].replace('"', ''), end = '', file=outputfile)
                    if not testfile:
                        print("," + row[hc], file=outputfile)
                    else:
                        if len(important_idxs) == 1:
                            print(",", file=outputfile)
                        else:
                            print("", file=outputfile)


def clean(filename, outfile, rounding=-1, headerless=False, testfile=False, trim=False):
    #This function takes a preprocessed csv and cleans it to real numbers for prediction or validation


    clean.classlist = []
    clean.testfile = testfile
    clean.mapping = {}
    

    def convert(cell):
        value = str(cell)
        try:
            result = int(value)
            return result
        except:
            try:
                result=float(value)
                if math.isnan(result):
                    #if nan parse to string
                    raise ValueError('')
                if (rounding != -1):
                    result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
                return result
            except:
                result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
                return result

    #Function to return key for any value 
    def get_key(val, clean_classmapping):
        if clean_classmapping == {}:
            return val
        for key, value in clean_classmapping.items(): 
            if val == value:
                return key
        if val not in list(clean_classmapping.values):
            raise ValueError("Label key does not exist")


    #Function to convert the class label
    def convertclassid(cell):
        if (clean.testfile):
            return convert(cell)
        value = str(cell)
        if (value == ''):
            raise ValueError("All cells in the target column must contain a class label.")

        if (not clean.mapping == {}):
            result = -1
            try:
                result = clean.mapping[cell]
            except:
                raise ValueError("Class label '" + value + "' encountered in input not defined in user-provided mapping.")
            if (not result == int(result)):
                raise ValueError("Class labels must be mapped to integer.")
            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
            return result
        try:
            result = float(cell)
            if (rounding != -1):
                result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
            else:
                result = int(int(result * 100) / 100)  # round classes to two digits

            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
        except:
            result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
            if (result in clean.classlist):
                result = clean.classlist.index(result)
            else:
                clean.classlist = clean.classlist + [result]
                result = clean.classlist.index(result)
            if (not result == int(result)):
                raise ValueError("Class labels must be mappable to integer.")
        finally:
            if (result < 0):
                raise ValueError("Integer class labels must be positive and contiguous.")

        return result


    #Main Cleaning Code
    rowcount = 0
    with open(filename, encoding='utf-8') as csv_file:
        reader = csv.reader(csv_file)
        f = open(outfile, "w+", encoding='utf-8')
        if (headerless == False):
            next(reader, None)
        outbuf = []
        for row in reader:
            if (row == []):  # Skip empty rows
                continue
            rowcount = rowcount + 1
            if not transform_true:
                rowlen = num_attr if trim else num_attr + len(ignorecolumns)
            else:
                rowlen = num_attr_before_transform if trim else num_attr_before_transform + len(ignorecolumns)      # noqa
            if (not testfile):
                rowlen = rowlen + 1    
            if ((len(row) - (1 if ((testfile and len(important_idxs) == 1)) else 0))  != rowlen) and not (row == ['','']):
                raise ValueError("Column count must match trained predictor. Row " + str(rowcount) + " differs. Expected Row length: " + str(rowlen) + ", Actual Row Length: " + str(len(row)))
            i = 0
            for elem in row:
                if(i + 1 < len(row)):
                    outbuf.append(str(convert(elem)))
                    outbuf.append(',')
                else:
                    classid = str(convertclassid(elem))
                    outbuf.append(classid)
                i = i + 1
            if (len(outbuf) < IOBUF):
                outbuf.append(os.linesep)
            else:
                print(''.join(outbuf), file=f)
                outbuf = []
        print(''.join(outbuf), end="", file=f)
        f.close()

        if (testfile == False and not len(clean.classlist) >= 2):
            raise ValueError("Number of classes must be at least 2.")

        return get_key, clean.mapping


# Helper (save an import)
def argmax(l):
    f = lambda i: l[i]
    return max(range(len(l)), key=f)
# Classifier
def apply(f, x):
    return f(x)

def booster_0(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.985499978, 1.0, 2.0, 4.0], [0.546000004, 3.0, 4.0, 2.0], [-0.694499969, 5.0, 6.0, 1.0], [-0.99150002, 7.0, 8.0, 4.0], [-0.22299999, 9.0, 10.0, 0.0], [-0.961500049, 11.0, 12.0, 4.0], [-0.536499977, 13.0, 14.0, 1.0], [-0.503495634, 0.0, 0.0, 0.0], [-0.863000035, 15.0, 16.0, 1.0], [-0.315750003, 0.0, 0.0, 0.0], [1.80428565, 0.0, 0.0, 0.0], [-0.813500047, 17.0, 18.0, 1.0], [-0.365999997, 19.0, 20.0, 0.0], [-0.906499982, 21.0, 22.0, 4.0], [-0.825999975, 23.0, 24.0, 4.0], [-0.112750001, 25.0, 26.0, 2.0], [-0.942499995, 27.0, 28.0, 3.0], [-0.266000003, 29.0, 30.0, 0.0], [-0.228500009, 31.0, 32.0, 0.0], [-0.38499999, 33.0, 34.0, 0.0], [0.314999998, 35.0, 36.0, 2.0], [-0.155000001, 37.0, 38.0, 0.0], [0.710999966, 39.0, 40.0, 2.0], [0.0715499967, 41.0, 42.0, 0.0], [-0.432999998, 43.0, 44.0, 1.0], [-0.293720931, 0.0, 0.0, 0.0], [2.06204057, 0.0, 0.0, 0.0], [-0.487812608, 0.0, 0.0, 0.0], [0.763674378, 0.0, 0.0, 0.0], [0.415670842, 0.0, 0.0, 0.0], [1.96257985, 0.0, 0.0, 0.0], [-0.277147323, 0.0, 0.0, 0.0], [0.795153677, 0.0, 0.0, 0.0], [-0.416912615, 0.0, 0.0, 0.0], [0.132947356, 0.0, 0.0, 0.0], [0.604816854, 0.0, 0.0, 0.0], [1.98546398, 0.0, 0.0, 0.0], [-0.187952593, 0.0, 0.0, 0.0], [0.801904738, 0.0, 0.0, 0.0], [1.46285474, 0.0, 0.0, 0.0], [0.5550403, 0.0, 0.0, 0.0], [-0.477730513, 0.0, 0.0, 0.0], [-1.73724608e-08, 0.0, 0.0, 0.0], [0.563352466, 0.0, 0.0, 0.0], [-0.400875717, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 25, 26, 27, 28, 9, 10, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44])
    branch_indices = np.array([0, 1, 3, 8, 15, 16, 4, 2, 5, 11, 17, 18, 12, 19, 20, 6, 13, 21, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.862499952, 1.0, 2.0, 1.0], [-0.905499995, 3.0, 4.0, 1.0], [-0.961500049, 5.0, 6.0, 4.0], [-0.504559457, 0.0, 0.0, 0.0], [0.131799996, 7.0, 8.0, 2.0], [-0.210500002, 9.0, 10.0, 0.0], [-0.291999996, 11.0, 12.0, 0.0], [1.26299989, 0.0, 0.0, 0.0], [-0.909500003, 13.0, 14.0, 4.0], [-0.400999993, 15.0, 16.0, 1.0], [-0.129999995, 17.0, 18.0, 0.0], [-0.365999997, 19.0, 20.0, 0.0], [0.314500004, 21.0, 22.0, 2.0], [-0.96449995, 23.0, 24.0, 4.0], [0.132947356, 0.0, 0.0, 0.0], [-0.2755, 25.0, 26.0, 0.0], [-0.261500001, 27.0, 28.0, 0.0], [0.379000008, 29.0, 30.0, 2.0], [0.0234350003, 31.0, 32.0, 0.0], [-0.404500008, 33.0, 34.0, 1.0], [-0.334500015, 35.0, 36.0, 0.0], [-0.960500002, 37.0, 38.0, 3.0], [0.132499993, 39.0, 40.0, 0.0], [-0.192565039, 0.0, 0.0, 0.0], [-0.455508202, 0.0, 0.0, 0.0], [2.40647292, 0.0, 0.0, 0.0], [1.75860763, 0.0, 0.0, 0.0], [0.531789482, 0.0, 0.0, 0.0], [-0.380630136, 0.0, 0.0, 0.0], [2.09820962, 0.0, 0.0, 0.0], [0.552705169, 0.0, 0.0, 0.0], [-0.418211907, 0.0, 0.0, 0.0], [1.09826076, 0.0, 0.0, 0.0], [2.35179281, 0.0, 0.0, 0.0], [0.132947356, 0.0, 0.0, 0.0], [0.241722465, 0.0, 0.0, 0.0], [1.07588875, 0.0, 0.0, 0.0], [1.90990222, 0.0, 0.0, 0.0], [0.242219165, 0.0, 0.0, 0.0], [-0.263633877, 0.0, 0.0, 0.0], [1.85735297, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 23, 24, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 4, 8, 13, 2, 5, 9, 15, 16, 10, 17, 18, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_2(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.533499956, 1.0, 2.0, 1.0], [-0.707499981, 3.0, 4.0, 1.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.770500004, 7.0, 8.0, 1.0], [-0.200500011, 9.0, 10.0, 0.0], [-0.884500027, 11.0, 12.0, 4.0], [-0.432999998, 13.0, 14.0, 1.0], [-0.841500044, 15.0, 16.0, 1.0], [-0.100749999, 17.0, 18.0, 0.0], [-0.5995, 19.0, 20.0, 1.0], [-0.00659999996, 21.0, 22.0, 0.0], [-0.276000023, 23.0, 24.0, 1.0], [-0.3495, 25.0, 26.0, 0.0], [-0.961500049, 27.0, 28.0, 4.0], [2.44276667, 0.0, 0.0, 0.0], [-0.504597664, 0.0, 0.0, 0.0], [-0.83949995, 29.0, 30.0, 1.0], [-0.219500005, 31.0, 32.0, 0.0], [0.00705000013, 33.0, 34.0, 0.0], [-0.243499994, 35.0, 36.0, 0.0], [0.636000037, 37.0, 38.0, 2.0], [-0.101500005, 39.0, 40.0, 0.0], [-0.451071411, 0.0, 0.0, 0.0], [0.803499997, 41.0, 42.0, 2.0], [1.41158819, 0.0, 0.0, 0.0], [0.132947356, 0.0, 0.0, 0.0], [1.9681102, 0.0, 0.0, 0.0], [-0.17899999, 43.0, 44.0, 0.0], [-0.157000005, 45.0, 46.0, 0.0], [-0.0304337498, 0.0, 0.0, 0.0], [-0.44695437, 0.0, 0.0, 0.0], [-0.426467538, 0.0, 0.0, 0.0], [-0.144225135, 0.0, 0.0, 0.0], [0.887513518, 0.0, 0.0, 0.0], [-0.407419354, 0.0, 0.0, 0.0], [-0.451804847, 0.0, 0.0, 0.0], [-0.210073039, 0.0, 0.0, 0.0], [-0.242433429, 0.0, 0.0, 0.0], [0.869606555, 0.0, 0.0, 0.0], [0.466944307, 0.0, 0.0, 0.0], [2.07066941, 0.0, 0.0, 0.0], [-0.219379663, 0.0, 0.0, 0.0], [0.930631578, 0.0, 0.0, 0.0], [-0.416912615, 0.0, 0.0, 0.0], [0.411209285, 0.0, 0.0, 0.0], [1.37444115, 0.0, 0.0, 0.0], [2.18023562, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 22, 41, 42, 24, 25, 26, 43, 44, 45, 46, 14])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 17, 18, 4, 9, 19, 20, 10, 21, 2, 5, 11, 23, 12, 6, 13, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_3(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0582500026, 1.0, 2.0, 0.0], [-0.997500002, 3.0, 4.0, 4.0], [0.455500007, 5.0, 6.0, 0.0], [-0.140500009, 7.0, 8.0, 0.0], [-0.502979934, 0.0, 0.0, 0.0], [-0.346500009, 9.0, 10.0, 2.0], [0.565500021, 11.0, 12.0, 0.0], [-0.524500012, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [0.397499979, 17.0, 18.0, 0.0], [-0.49626717, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.623000026, 21.0, 22.0, 0.0], [-0.760500014, 23.0, 24.0, 0.0], [-0.981999993, 25.0, 26.0, 1.0], [-0.0767499954, 27.0, 28.0, 0.0], [-0.607499957, 29.0, 30.0, 2.0], [-0.999500036, 31.0, 32.0, 1.0], [0.445500016, 33.0, 34.0, 0.0], [0.527999997, 35.0, 36.0, 0.0], [0.523499966, 37.0, 38.0, 0.0], [0.620499969, 39.0, 40.0, 0.0], [-0.502288163, 0.0, 0.0, 0.0], [-0.407419354, 0.0, 0.0, 0.0], [1.69553423, 0.0, 0.0, 0.0], [-0.376116753, 0.0, 0.0, 0.0], [0.930631578, 0.0, 0.0, 0.0], [0.0567640178, 0.0, 0.0, 0.0], [0.584837377, 0.0, 0.0, 0.0], [1.88379645, 0.0, 0.0, 0.0], [0.132947356, 0.0, 0.0, 0.0], [1.98936045, 0.0, 0.0, 0.0], [1.22277689, 0.0, 0.0, 0.0], [0.453731835, 0.0, 0.0, 0.0], [1.83709073, 0.0, 0.0, 0.0], [1.33143842, 0.0, 0.0, 0.0], [0.566669166, 0.0, 0.0, 0.0], [-0.422436863, 0.0, 0.0, 0.0], [0.244451582, 0.0, 0.0, 0.0], [-0.350634575, 0.0, 0.0, 0.0], [0.947249889, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 29, 30, 4, 31, 32, 33, 34, 10, 35, 36, 37, 38, 39, 40, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 9, 17, 18, 6, 11, 19, 20, 12, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_4(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [-0.0601500012, 3.0, 4.0, 0.0], [-0.980499983, 5.0, 6.0, 1.0], [-0.397000015, 7.0, 8.0, 0.0], [0.0945499986, 9.0, 10.0, 0.0], [0.1875, 11.0, 12.0, 0.0], [-0.503173769, 0.0, 0.0, 0.0], [-0.726000011, 13.0, 14.0, 2.0], [-0.140500009, 15.0, 16.0, 0.0], [-0.00550500024, 17.0, 18.0, 0.0], [0.203500003, 19.0, 20.0, 0.0], [0.132947356, 0.0, 0.0, 0.0], [-0.265894741, 0.0, 0.0, 0.0], [-0.424499989, 21.0, 22.0, 0.0], [1.44342852, 0.0, 0.0, 0.0], [-0.337500006, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [-0.0239499994, 27.0, 28.0, 0.0], [0.01315, 29.0, 30.0, 0.0], [-0.555500031, 31.0, 32.0, 2.0], [-0.50355798, 0.0, 0.0, 0.0], [-0.271030039, 0.0, 0.0, 0.0], [0.561333299, 0.0, 0.0, 0.0], [1.36015368, 0.0, 0.0, 0.0], [2.33489609, 0.0, 0.0, 0.0], [1.84318733, 0.0, 0.0, 0.0], [0.346705854, 0.0, 0.0, 0.0], [0.333450258, 0.0, 0.0, 0.0], [-0.261310369, 0.0, 0.0, 0.0], [0.861672878, 0.0, 0.0, 0.0], [0.259538114, 0.0, 0.0, 0.0], [-0.379630059, 0.0, 0.0, 0.0], [0.631499946, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 20, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 9, 17, 18, 10, 19, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_5(xs):
    #Predicts Class 5
    function_dict = np.array([[0.380500019, 1.0, 2.0, 0.0], [-0.552999973, 3.0, 4.0, 0.0], [0.565500021, 5.0, 6.0, 0.0], [1.93741739, 0.0, 0.0, 0.0], [0.201499999, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [2.482548, 0.0, 0.0, 0.0], [-0.397500008, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [0.564499974, 15.0, 16.0, 0.0], [2.19122863, 0.0, 0.0, 0.0], [-0.997500002, 17.0, 18.0, 1.0], [-0.143999994, 19.0, 20.0, 2.0], [0.276499987, 21.0, 22.0, 0.0], [-0.992499948, 23.0, 24.0, 1.0], [0.527999997, 25.0, 26.0, 0.0], [-0.333622634, 0.0, 0.0, 0.0], [1.13357592, 0.0, 0.0, 0.0], [-0.487121284, 0.0, 0.0, 0.0], [-0.446405172, 0.0, 0.0, 0.0], [-0.504392982, 0.0, 0.0, 0.0], [-0.0274565406, 0.0, 0.0, 0.0], [-0.48597464, 0.0, 0.0, 0.0], [1.60098577, 0.0, 0.0, 0.0], [0.449835569, 0.0, 0.0, 0.0], [0.760516047, 0.0, 0.0, 0.0], [1.59536827, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 16, 10, 6])
    branch_indices = np.array([0, 1, 4, 7, 11, 12, 8, 13, 14, 2, 5, 9, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_6(xs):
    #Predicts Class 0
    function_dict = np.array([[0.0376999974, 1.0, 2.0, 2.0], [-0.446977168, 0.0, 0.0, 0.0], [-0.766499996, 3.0, 4.0, 1.0], [0.353500009, 5.0, 6.0, 2.0], [0.485500008, 7.0, 8.0, 2.0], [-0.845499992, 9.0, 10.0, 1.0], [-0.966500044, 11.0, 12.0, 4.0], [-0.945500016, 13.0, 14.0, 3.0], [-0.461499989, 15.0, 16.0, 1.0], [-0.270500004, 17.0, 18.0, 0.0], [-0.9375, 19.0, 20.0, 4.0], [-0.970499992, 21.0, 22.0, 4.0], [-0.808500051, 23.0, 24.0, 1.0], [-0.0726500005, 25.0, 26.0, 0.0], [-0.220499992, 27.0, 28.0, 0.0], [-0.178499997, 29.0, 30.0, 0.0], [-0.825999975, 31.0, 32.0, 4.0], [-0.284039259, 0.0, 0.0, 0.0], [0.584190249, 0.0, 0.0, 0.0], [-0.262512684, 0.0, 0.0, 0.0], [0.425113082, 0.0, 0.0, 0.0], [0.518041193, 0.0, 0.0, 0.0], [1.19791913, 0.0, 0.0, 0.0], [0.523213804, 0.0, 0.0, 0.0], [0.339932531, 0.0, 0.0, 0.0], [-0.522042394, 0.0, 0.0, 0.0], [-0.0651654601, 0.0, 0.0, 0.0], [-0.246434733, 0.0, 0.0, 0.0], [0.368984997, 0.0, 0.0, 0.0], [0.15188925, 0.0, 0.0, 0.0], [0.495223492, 0.0, 0.0, 0.0], [-0.41521284, 0.0, 0.0, 0.0], [-0.045583237, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_7(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.44831413, 0.0, 0.0, 0.0], [-0.175500005, 3.0, 4.0, 0.0], [0.601500034, 5.0, 6.0, 2.0], [0.0609500036, 7.0, 8.0, 0.0], [-0.778499961, 9.0, 10.0, 1.0], [-0.215499997, 11.0, 12.0, 0.0], [-0.96449995, 13.0, 14.0, 4.0], [-0.60799998, 15.0, 16.0, 1.0], [0.414499998, 17.0, 18.0, 2.0], [-0.958500028, 19.0, 20.0, 4.0], [-0.947000027, 21.0, 22.0, 4.0], [-0.572000027, 23.0, 24.0, 1.0], [-0.107500002, 25.0, 26.0, 0.0], [-0.818500042, 27.0, 28.0, 1.0], [-0.801499963, 29.0, 30.0, 1.0], [-0.318280429, 0.0, 0.0, 0.0], [0.425935417, 0.0, 0.0, 0.0], [-0.145018205, 0.0, 0.0, 0.0], [0.482008308, 0.0, 0.0, 0.0], [0.978163064, 0.0, 0.0, 0.0], [0.507502317, 0.0, 0.0, 0.0], [0.053227935, 0.0, 0.0, 0.0], [-0.487988263, 0.0, 0.0, 0.0], [-0.216408506, 0.0, 0.0, 0.0], [0.527794302, 0.0, 0.0, 0.0], [-0.380651891, 0.0, 0.0, 0.0], [-0.247616738, 0.0, 0.0, 0.0], [-0.458963633, 0.0, 0.0, 0.0], [0.195089772, 0.0, 0.0, 0.0], [0.878298521, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_8(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.841500044, 3.0, 4.0, 1.0], [-0.581499994, 5.0, 6.0, 1.0], [-0.445818096, 0.0, 0.0, 0.0], [-0.961500049, 7.0, 8.0, 4.0], [-0.200500011, 9.0, 10.0, 0.0], [-0.967499971, 11.0, 12.0, 4.0], [-0.230500013, 13.0, 14.0, 0.0], [-0.109499998, 15.0, 16.0, 0.0], [-0.756500006, 17.0, 18.0, 1.0], [0.309000015, 19.0, 20.0, 2.0], [-0.357499987, 21.0, 22.0, 1.0], [-0.351499975, 23.0, 24.0, 1.0], [-0.400741994, 0.0, 0.0, 0.0], [-0.179500014, 25.0, 26.0, 0.0], [-0.436272502, 0.0, 0.0, 0.0], [-0.937999964, 27.0, 28.0, 4.0], [-0.980499983, 29.0, 30.0, 3.0], [-0.972499967, 31.0, 32.0, 3.0], [0.836558759, 0.0, 0.0, 0.0], [-0.182500005, 33.0, 34.0, 0.0], [-0.99849999, 35.0, 36.0, 3.0], [0.446199745, 0.0, 0.0, 0.0], [0.0190150011, 37.0, 38.0, 0.0], [-0.38349998, 39.0, 40.0, 0.0], [0.29641518, 0.0, 0.0, 0.0], [-0.182521656, 0.0, 0.0, 0.0], [-0.332526803, 0.0, 0.0, 0.0], [0.17957598, 0.0, 0.0, 0.0], [-0.0645157397, 0.0, 0.0, 0.0], [0.975322485, 0.0, 0.0, 0.0], [-0.124626055, 0.0, 0.0, 0.0], [-0.463031113, 0.0, 0.0, 0.0], [0.57604605, 0.0, 0.0, 0.0], [0.0286114272, 0.0, 0.0, 0.0], [0.229824424, 0.0, 0.0, 0.0], [-0.41363281, 0.0, 0.0, 0.0], [0.376470029, 0.0, 0.0, 0.0], [-0.62470746, 0.0, 0.0, 0.0], [0.0490395427, 0.0, 0.0, 0.0], [0.538536131, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 25, 26, 15, 27, 28, 29, 30, 31, 32, 19, 33, 34, 35, 36, 22, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 4, 7, 14, 8, 16, 2, 5, 9, 17, 18, 10, 20, 6, 11, 21, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_9(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.996500015, 1.0, 2.0, 4.0], [0.623000026, 3.0, 4.0, 0.0], [-0.994500041, 5.0, 6.0, 4.0], [-0.146499991, 7.0, 8.0, 0.0], [-0.429534465, 0.0, 0.0, 0.0], [-0.266000003, 9.0, 10.0, 0.0], [-0.452072054, 0.0, 0.0, 0.0], [-0.185499996, 11.0, 12.0, 0.0], [0.0945499986, 13.0, 14.0, 0.0], [0.178409442, 0.0, 0.0, 0.0], [-0.385500014, 15.0, 16.0, 2.0], [-0.212500006, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [-0.0965999961, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [-0.454691023, 0.0, 0.0, 0.0], [-0.962499976, 25.0, 26.0, 1.0], [-0.0764435753, 0.0, 0.0, 0.0], [0.52145505, 0.0, 0.0, 0.0], [-0.421898663, 0.0, 0.0, 0.0], [0.10237626, 0.0, 0.0, 0.0], [0.544003367, 0.0, 0.0, 0.0], [0.165240869, 0.0, 0.0, 0.0], [0.462774038, 0.0, 0.0, 0.0], [0.123959206, 0.0, 0.0, 0.0], [0.103125602, 0.0, 0.0, 0.0], [-0.266385049, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 9, 15, 25, 26, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 5, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_10(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.980499983, 1.0, 2.0, 1.0], [0.111500002, 3.0, 4.0, 0.0], [-0.45450002, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [0.203500003, 9.0, 10.0, 0.0], [-0.698000014, 11.0, 12.0, 1.0], [-0.451705426, 0.0, 0.0, 0.0], [-0.493000001, 13.0, 14.0, 0.0], [-0.747500002, 15.0, 16.0, 2.0], [0.141499996, 17.0, 18.0, 0.0], [-0.441048741, 0.0, 0.0, 0.0], [0.185610324, 0.0, 0.0, 0.0], [-0.311435431, 0.0, 0.0, 0.0], [-0.318009198, 0.0, 0.0, 0.0], [0.0560500026, 19.0, 20.0, 0.0], [-0.4375, 21.0, 22.0, 0.0], [-0.51699996, 23.0, 24.0, 2.0], [-0.425716043, 0.0, 0.0, 0.0], [0.162499994, 25.0, 26.0, 0.0], [0.437837839, 0.0, 0.0, 0.0], [0.161042303, 0.0, 0.0, 0.0], [0.267508119, 0.0, 0.0, 0.0], [-0.302779377, 0.0, 0.0, 0.0], [0.204556078, 0.0, 0.0, 0.0], [0.647295117, 0.0, 0.0, 0.0], [0.544778645, 0.0, 0.0, 0.0], [-0.0333586074, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 19, 20, 21, 22, 23, 24, 17, 25, 26, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 15, 16, 4, 9, 18, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_11(xs):
    #Predicts Class 5
    function_dict = np.array([[0.198500007, 1.0, 2.0, 0.0], [-0.382499993, 3.0, 4.0, 0.0], [0.623000026, 5.0, 6.0, 0.0], [-0.706500053, 7.0, 8.0, 2.0], [-0.143999994, 9.0, 10.0, 2.0], [-0.997500002, 11.0, 12.0, 4.0], [0.5254215, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.523000002, 15.0, 16.0, 2.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.452006996, 0.0, 0.0, 0.0], [0.620499969, 19.0, 20.0, 0.0], [0.367500007, 21.0, 22.0, 0.0], [-0.760500014, 23.0, 24.0, 0.0], [-0.4375, 25.0, 26.0, 0.0], [-0.997500002, 27.0, 28.0, 4.0], [-0.407843143, 0.0, 0.0, 0.0], [-0.344500005, 29.0, 30.0, 0.0], [-0.639999986, 31.0, 32.0, 2.0], [0.429499984, 33.0, 34.0, 0.0], [-0.538464785, 0.0, 0.0, 0.0], [1.21137094, 0.0, 0.0, 0.0], [0.507737875, 0.0, 0.0, 0.0], [0.479414433, 0.0, 0.0, 0.0], [-0.0997113362, 0.0, 0.0, 0.0], [0.501834512, 0.0, 0.0, 0.0], [0.888343096, 0.0, 0.0, 0.0], [-0.2342567, 0.0, 0.0, 0.0], [0.382192492, 0.0, 0.0, 0.0], [0.460433573, 0.0, 0.0, 0.0], [-0.378468156, 0.0, 0.0, 0.0], [0.627495527, 0.0, 0.0, 0.0], [-0.114562117, 0.0, 0.0, 0.0], [0.129054666, 0.0, 0.0, 0.0], [0.360701025, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 16, 29, 30, 31, 32, 10, 33, 34, 20, 21, 22, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 9, 17, 18, 2, 5, 11, 19, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_12(xs):
    #Predicts Class 0
    function_dict = np.array([[0.125499994, 1.0, 2.0, 2.0], [0.0376999974, 3.0, 4.0, 2.0], [-0.642500043, 5.0, 6.0, 1.0], [-0.433048964, 0.0, 0.0, 0.0], [0.0761999935, 7.0, 8.0, 2.0], [0.466499984, 9.0, 10.0, 2.0], [-0.870499969, 11.0, 12.0, 4.0], [0.14580968, 0.0, 0.0, 0.0], [-0.324865699, 0.0, 0.0, 0.0], [-0.782500029, 13.0, 14.0, 1.0], [-0.960500002, 15.0, 16.0, 4.0], [-0.148499995, 17.0, 18.0, 0.0], [-0.306500018, 19.0, 20.0, 1.0], [-0.2685, 21.0, 22.0, 0.0], [-0.0726500005, 23.0, 24.0, 0.0], [-0.18599999, 25.0, 26.0, 0.0], [-0.943500042, 27.0, 28.0, 4.0], [0.654500008, 29.0, 30.0, 2.0], [-0.1215, 31.0, 32.0, 0.0], [-0.268999994, 33.0, 34.0, 0.0], [-0.371532559, 0.0, 0.0, 0.0], [-0.306227654, 0.0, 0.0, 0.0], [0.301932424, 0.0, 0.0, 0.0], [-0.300906122, 0.0, 0.0, 0.0], [0.226952285, 0.0, 0.0, 0.0], [0.771762729, 0.0, 0.0, 0.0], [0.139479756, 0.0, 0.0, 0.0], [0.0207931269, 0.0, 0.0, 0.0], [0.294577926, 0.0, 0.0, 0.0], [-0.47372362, 0.0, 0.0, 0.0], [-0.0936949924, 0.0, 0.0, 0.0], [0.454279333, 0.0, 0.0, 0.0], [-0.216340527, 0.0, 0.0, 0.0], [-0.221300319, 0.0, 0.0, 0.0], [0.389532119, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 20])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 13, 14, 10, 15, 16, 6, 11, 17, 18, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_13(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.434565336, 0.0, 0.0, 0.0], [0.503499985, 3.0, 4.0, 2.0], [-0.821500003, 5.0, 6.0, 1.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.988499999, 9.0, 10.0, 4.0], [-0.167500004, 11.0, 12.0, 0.0], [-0.750999987, 13.0, 14.0, 1.0], [-0.946500003, 15.0, 16.0, 4.0], [-0.898000002, 17.0, 18.0, 1.0], [-0.972500026, 19.0, 20.0, 3.0], [-0.958500028, 21.0, 22.0, 4.0], [0.0419500023, 23.0, 24.0, 0.0], [-0.957499981, 25.0, 26.0, 4.0], [-0.27700001, 27.0, 28.0, 1.0], [0.0523499995, 29.0, 30.0, 0.0], [-0.186500013, 31.0, 32.0, 0.0], [-0.0731947124, 0.0, 0.0, 0.0], [0.474842429, 0.0, 0.0, 0.0], [-0.0450040288, 0.0, 0.0, 0.0], [-0.419069529, 0.0, 0.0, 0.0], [0.327706426, 0.0, 0.0, 0.0], [0.652546406, 0.0, 0.0, 0.0], [-0.270339251, 0.0, 0.0, 0.0], [0.442074686, 0.0, 0.0, 0.0], [-0.682313323, 0.0, 0.0, 0.0], [0.0204769224, 0.0, 0.0, 0.0], [0.272185922, 0.0, 0.0, 0.0], [-0.320153624, 0.0, 0.0, 0.0], [-0.0642756969, 0.0, 0.0, 0.0], [0.597641408, 0.0, 0.0, 0.0], [-0.185496151, 0.0, 0.0, 0.0], [-0.412171066, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_14(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.841500044, 3.0, 4.0, 1.0], [-0.351499975, 5.0, 6.0, 1.0], [-0.432365626, 0.0, 0.0, 0.0], [-0.980499983, 7.0, 8.0, 4.0], [-0.319499999, 9.0, 10.0, 0.0], [-0.38349998, 11.0, 12.0, 0.0], [-0.219500005, 13.0, 14.0, 0.0], [-0.961500049, 15.0, 16.0, 4.0], [0.773499966, 17.0, 18.0, 2.0], [0.0152149992, 19.0, 20.0, 0.0], [0.0342243053, 0.0, 0.0, 0.0], [0.448038816, 0.0, 0.0, 0.0], [-0.339917839, 0.0, 0.0, 0.0], [0.432500005, 21.0, 22.0, 2.0], [0.4375, 23.0, 24.0, 2.0], [-0.109499998, 25.0, 26.0, 0.0], [-0.476999998, 27.0, 28.0, 1.0], [-0.96449995, 29.0, 30.0, 3.0], [-0.103500001, 31.0, 32.0, 0.0], [-0.492027909, 0.0, 0.0, 0.0], [0.810812652, 0.0, 0.0, 0.0], [-0.322602034, 0.0, 0.0, 0.0], [-0.406471074, 0.0, 0.0, 0.0], [0.1611709, 0.0, 0.0, 0.0], [-0.41345033, 0.0, 0.0, 0.0], [-0.111364372, 0.0, 0.0, 0.0], [-0.386167914, 0.0, 0.0, 0.0], [-0.0972818211, 0.0, 0.0, 0.0], [0.577946723, 0.0, 0.0, 0.0], [-0.304404587, 0.0, 0.0, 0.0], [0.104210965, 0.0, 0.0, 0.0], [0.4459714, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 20, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 14, 8, 15, 16, 2, 5, 9, 17, 18, 10, 19, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_15(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.995499969, 1.0, 2.0, 4.0], [0.623000026, 3.0, 4.0, 0.0], [-0.996500015, 5.0, 6.0, 1.0], [0.0507000014, 7.0, 8.0, 0.0], [-0.409425288, 0.0, 0.0, 0.0], [-0.13238889, 0.0, 0.0, 0.0], [-0.43654561, 0.0, 0.0, 0.0], [0.0447499976, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [-0.999500036, 13.0, 14.0, 1.0], [-1.04150999, 0.0, 0.0, 0.0], [0.615499973, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [0.0918765813, 0.0, 0.0, 0.0], [0.287409633, 0.0, 0.0, 0.0], [0.239864513, 0.0, 0.0, 0.0], [0.912962496, 0.0, 0.0, 0.0], [-0.0898947194, 0.0, 0.0, 0.0], [0.198977187, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_16(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.196500003, 3.0, 4.0, 0.0], [-0.436475992, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [0.203500003, 7.0, 8.0, 0.0], [0.190499991, 9.0, 10.0, 0.0], [-0.380999982, 11.0, 12.0, 2.0], [0.200500011, 13.0, 14.0, 0.0], [-0.425363064, 0.0, 0.0, 0.0], [0.0945499986, 15.0, 16.0, 0.0], [0.910473168, 0.0, 0.0, 0.0], [-0.747500002, 17.0, 18.0, 2.0], [0.504261613, 0.0, 0.0, 0.0], [-0.282729745, 0.0, 0.0, 0.0], [0.157637611, 0.0, 0.0, 0.0], [0.250842273, 0.0, 0.0, 0.0], [-0.21114701, 0.0, 0.0, 0.0], [-0.158785075, 0.0, 0.0, 0.0], [0.0960135981, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 17, 18, 12, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 11, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_17(xs):
    #Predicts Class 5
    function_dict = np.array([[0.198500007, 1.0, 2.0, 0.0], [-0.382499993, 3.0, 4.0, 0.0], [0.623000026, 5.0, 6.0, 0.0], [-0.523000002, 7.0, 8.0, 2.0], [-0.143999994, 9.0, 10.0, 2.0], [-0.555999994, 11.0, 12.0, 2.0], [0.457282573, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.364786237, 0.0, 0.0, 0.0], [-0.99849999, 15.0, 16.0, 1.0], [-0.436638802, 0.0, 0.0, 0.0], [-0.747500002, 17.0, 18.0, 2.0], [0.587197661, 0.0, 0.0, 0.0], [-0.406000018, 19.0, 20.0, 0.0], [-0.99849999, 21.0, 22.0, 1.0], [-0.344500005, 23.0, 24.0, 0.0], [0.00891499966, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 1.0], [0.534999967, 29.0, 30.0, 0.0], [-0.148748398, 0.0, 0.0, 0.0], [0.41437149, 0.0, 0.0, 0.0], [0.5761922, 0.0, 0.0, 0.0], [0.125302255, 0.0, 0.0, 0.0], [0.30646807, 0.0, 0.0, 0.0], [-0.316877097, 0.0, 0.0, 0.0], [0.270554036, 0.0, 0.0, 0.0], [-0.251360476, 0.0, 0.0, 0.0], [0.131793275, 0.0, 0.0, 0.0], [0.351900667, 0.0, 0.0, 0.0], [-0.52815634, 0.0, 0.0, 0.0], [0.353266686, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 23, 24, 25, 26, 10, 27, 28, 29, 30, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 15, 16, 2, 5, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_18(xs):
    #Predicts Class 0
    function_dict = np.array([[0.211499989, 1.0, 2.0, 2.0], [0.0376999974, 3.0, 4.0, 2.0], [-0.281499982, 5.0, 6.0, 0.0], [-0.425326675, 0.0, 0.0, 0.0], [-0.918500006, 7.0, 8.0, 1.0], [0.573500037, 9.0, 10.0, 2.0], [-0.263500005, 11.0, 12.0, 0.0], [0.399550647, 0.0, 0.0, 0.0], [-0.890500009, 13.0, 14.0, 1.0], [-0.851500034, 15.0, 16.0, 1.0], [-0.593500018, 17.0, 18.0, 1.0], [0.595499992, 19.0, 20.0, 2.0], [-0.75999999, 21.0, 22.0, 1.0], [-0.0514818914, 0.0, 0.0, 0.0], [0.139499992, 23.0, 24.0, 2.0], [-0.99849999, 25.0, 26.0, 3.0], [-0.943500042, 27.0, 28.0, 3.0], [-0.888999999, 29.0, 30.0, 4.0], [-0.409738541, 0.0, 0.0, 0.0], [-0.763999999, 31.0, 32.0, 1.0], [-0.726000011, 33.0, 34.0, 1.0], [0.1435, 35.0, 36.0, 0.0], [0.576499999, 37.0, 38.0, 2.0], [-0.0936513022, 0.0, 0.0, 0.0], [-0.48864305, 0.0, 0.0, 0.0], [-0.00102972134, 0.0, 0.0, 0.0], [0.44172883, 0.0, 0.0, 0.0], [-0.512794316, 0.0, 0.0, 0.0], [0.131427601, 0.0, 0.0, 0.0], [0.351729214, 0.0, 0.0, 0.0], [-0.00876664836, 0.0, 0.0, 0.0], [0.270949095, 0.0, 0.0, 0.0], [1.13909376, 0.0, 0.0, 0.0], [0.361662626, 0.0, 0.0, 0.0], [-0.432231426, 0.0, 0.0, 0.0], [0.235780582, 0.0, 0.0, 0.0], [-0.472607702, 0.0, 0.0, 0.0], [-0.091567792, 0.0, 0.0, 0.0], [0.135982946, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 13, 23, 24, 25, 26, 27, 28, 29, 30, 18, 31, 32, 33, 34, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 4, 8, 14, 2, 5, 9, 15, 16, 10, 17, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_19(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.905499995, 1.0, 2.0, 1.0], [-0.425210595, 0.0, 0.0, 0.0], [-0.2755, 3.0, 4.0, 0.0], [0.518999994, 5.0, 6.0, 2.0], [0.705500007, 7.0, 8.0, 2.0], [-0.868000031, 9.0, 10.0, 1.0], [-0.789999962, 11.0, 12.0, 1.0], [-0.260500014, 13.0, 14.0, 0.0], [-0.931499958, 15.0, 16.0, 4.0], [-0.271930903, 0.0, 0.0, 0.0], [-0.493000001, 17.0, 18.0, 1.0], [0.570500016, 19.0, 20.0, 2.0], [0.755500019, 21.0, 22.0, 2.0], [0.65200001, 23.0, 24.0, 2.0], [-0.940500021, 25.0, 26.0, 3.0], [-0.232500002, 27.0, 28.0, 0.0], [-0.434136122, 0.0, 0.0, 0.0], [0.48208791, 0.0, 0.0, 0.0], [-0.0600568913, 0.0, 0.0, 0.0], [0.340009153, 0.0, 0.0, 0.0], [-0.331191868, 0.0, 0.0, 0.0], [0.248525903, 0.0, 0.0, 0.0], [-0.173470527, 0.0, 0.0, 0.0], [-0.431894809, 0.0, 0.0, 0.0], [0.786855161, 0.0, 0.0, 0.0], [0.142233923, 0.0, 0.0, 0.0], [-0.18253538, 0.0, 0.0, 0.0], [0.517740607, 0.0, 0.0, 0.0], [-0.310239524, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 16])
    branch_indices = np.array([0, 2, 3, 5, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_20(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [-0.841500044, 3.0, 4.0, 1.0], [-0.305000007, 5.0, 6.0, 1.0], [-0.424691767, 0.0, 0.0, 0.0], [-0.83949995, 7.0, 8.0, 1.0], [0.0280999988, 9.0, 10.0, 0.0], [-0.295000017, 11.0, 12.0, 0.0], [0.526766419, 0.0, 0.0, 0.0], [-0.961500049, 13.0, 14.0, 4.0], [-0.101500005, 15.0, 16.0, 0.0], [-0.47751686, 0.0, 0.0, 0.0], [-0.303499997, 17.0, 18.0, 0.0], [0.429695725, 0.0, 0.0, 0.0], [0.329999983, 19.0, 20.0, 2.0], [-0.379067302, 0.0, 0.0, 0.0], [-0.968500018, 21.0, 22.0, 4.0], [-0.661499977, 23.0, 24.0, 1.0], [-0.932500005, 25.0, 26.0, 4.0], [-0.362835377, 0.0, 0.0, 0.0], [-0.349846095, 0.0, 0.0, 0.0], [0.0664453357, 0.0, 0.0, 0.0], [-0.177045748, 0.0, 0.0, 0.0], [0.101511791, 0.0, 0.0, 0.0], [0.0501741171, 0.0, 0.0, 0.0], [0.504233301, 0.0, 0.0, 0.0], [0.0158194769, 0.0, 0.0, 0.0], [0.438427269, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 19, 20, 14, 21, 22, 23, 24, 10, 25, 26, 18, 12])
    branch_indices = np.array([0, 1, 4, 8, 13, 2, 5, 9, 15, 16, 6, 11, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_21(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [0.623000026, 3.0, 4.0, 0.0], [-0.429305911, 0.0, 0.0, 0.0], [-0.297500014, 5.0, 6.0, 0.0], [-0.384406179, 0.0, 0.0, 0.0], [-0.524500012, 7.0, 8.0, 0.0], [-0.273499995, 9.0, 10.0, 0.0], [-0.760500014, 11.0, 12.0, 0.0], [-0.978500009, 13.0, 14.0, 1.0], [-0.284500003, 15.0, 16.0, 0.0], [-0.0579499975, 17.0, 18.0, 0.0], [-0.257430404, 0.0, 0.0, 0.0], [0.530365169, 0.0, 0.0, 0.0], [-0.383735776, 0.0, 0.0, 0.0], [0.433967739, 0.0, 0.0, 0.0], [0.367962211, 0.0, 0.0, 0.0], [1.611256, 0.0, 0.0, 0.0], [0.210985884, 0.0, 0.0, 0.0], [0.0771190077, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_22(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.427256465, 0.0, 0.0, 0.0], [-0.00550500024, 5.0, 6.0, 0.0], [-0.413154781, 0.0, 0.0, 0.0], [-0.146499991, 7.0, 8.0, 0.0], [-0.0052199997, 9.0, 10.0, 0.0], [-0.524500012, 11.0, 12.0, 0.0], [-0.67050004, 13.0, 14.0, 2.0], [0.79985857, 0.0, 0.0, 0.0], [0.111500002, 15.0, 16.0, 0.0], [-0.387276828, 0.0, 0.0, 0.0], [0.182498842, 0.0, 0.0, 0.0], [-0.0304635987, 0.0, 0.0, 0.0], [0.2443811, 0.0, 0.0, 0.0], [0.215483263, 0.0, 0.0, 0.0], [-0.0413413048, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_23(xs):
    #Predicts Class 5
    function_dict = np.array([[0.172499999, 1.0, 2.0, 0.0], [-0.143999994, 3.0, 4.0, 2.0], [0.623000026, 5.0, 6.0, 0.0], [-0.149500012, 7.0, 8.0, 0.0], [-0.427236259, 0.0, 0.0, 0.0], [0.212500006, 9.0, 10.0, 0.0], [0.428548962, 0.0, 0.0, 0.0], [-0.169499993, 11.0, 12.0, 0.0], [-0.997500002, 13.0, 14.0, 1.0], [0.201499999, 15.0, 16.0, 0.0], [0.256500006, 17.0, 18.0, 0.0], [-0.337500006, 19.0, 20.0, 0.0], [0.74444598, 0.0, 0.0, 0.0], [-0.0123999994, 21.0, 22.0, 0.0], [-0.0883000046, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [-0.988999963, 27.0, 28.0, 1.0], [0.228500009, 29.0, 30.0, 0.0], [0.276499987, 31.0, 32.0, 0.0], [0.180631608, 0.0, 0.0, 0.0], [-0.279045641, 0.0, 0.0, 0.0], [-0.230964124, 0.0, 0.0, 0.0], [-0.416646063, 0.0, 0.0, 0.0], [-0.236558378, 0.0, 0.0, 0.0], [0.358343601, 0.0, 0.0, 0.0], [-0.321041316, 0.0, 0.0, 0.0], [0.661265552, 0.0, 0.0, 0.0], [0.81678611, 0.0, 0.0, 0.0], [-0.13461107, 0.0, 0.0, 0.0], [0.202312618, 0.0, 0.0, 0.0], [-0.501935482, 0.0, 0.0, 0.0], [0.98347187, 0.0, 0.0, 0.0], [0.11624065, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 2, 5, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_24(xs):
    #Predicts Class 0
    function_dict = np.array([[0.181500003, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 3.0], [-0.972499967, 5.0, 6.0, 3.0], [-0.4236781, 0.0, 0.0, 0.0], [0.125499994, 7.0, 8.0, 2.0], [0.657500029, 9.0, 10.0, 2.0], [-0.320500016, 11.0, 12.0, 0.0], [-0.312513381, 0.0, 0.0, 0.0], [-0.831499994, 13.0, 14.0, 1.0], [-0.681499958, 15.0, 16.0, 1.0], [-0.449000001, 17.0, 18.0, 1.0], [-0.81099999, 19.0, 20.0, 1.0], [0.637500048, 21.0, 22.0, 2.0], [0.176824272, 0.0, 0.0, 0.0], [-0.127356336, 0.0, 0.0, 0.0], [0.497500002, 23.0, 24.0, 2.0], [-0.156000003, 25.0, 26.0, 0.0], [-0.102499999, 27.0, 28.0, 0.0], [-0.369359583, 0.0, 0.0, 0.0], [0.477450252, 0.0, 0.0, 0.0], [0.537500024, 29.0, 30.0, 2.0], [-0.972499967, 31.0, 32.0, 4.0], [-0.216499999, 33.0, 34.0, 0.0], [-0.0424557664, 0.0, 0.0, 0.0], [0.14498581, 0.0, 0.0, 0.0], [-0.396413803, 0.0, 0.0, 0.0], [-0.0114879012, 0.0, 0.0, 0.0], [0.272249371, 0.0, 0.0, 0.0], [-0.30761826, 0.0, 0.0, 0.0], [-0.0823456571, 0.0, 0.0, 0.0], [-0.504820228, 0.0, 0.0, 0.0], [-0.111813858, 0.0, 0.0, 0.0], [0.316239119, 0.0, 0.0, 0.0], [0.363852501, 0.0, 0.0, 0.0], [-0.121012717, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 13, 14, 23, 24, 25, 26, 27, 28, 18, 19, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 4, 8, 2, 5, 9, 15, 16, 10, 17, 6, 11, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_25(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.423194647, 0.0, 0.0, 0.0], [-0.834499955, 3.0, 4.0, 4.0], [0.127499998, 5.0, 6.0, 0.0], [-0.333000004, 7.0, 8.0, 0.0], [-0.132499993, 9.0, 10.0, 0.0], [0.519689739, 0.0, 0.0, 0.0], [0.49200964, 0.0, 0.0, 0.0], [-0.703500032, 11.0, 12.0, 1.0], [-0.979499996, 13.0, 14.0, 4.0], [0.0445500016, 15.0, 16.0, 0.0], [0.625999987, 17.0, 18.0, 2.0], [-0.459394693, 0.0, 0.0, 0.0], [0.26244992, 0.0, 0.0, 0.0], [0.0696589872, 0.0, 0.0, 0.0], [-0.28719759, 0.0, 0.0, 0.0], [0.091257669, 0.0, 0.0, 0.0], [-0.304703474, 0.0, 0.0, 0.0], [0.370503843, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 7, 17, 18, 12])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_26(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.841500044, 1.0, 2.0, 1.0], [-0.418271452, 0.0, 0.0, 0.0], [-0.278500021, 3.0, 4.0, 1.0], [0.805500031, 5.0, 6.0, 2.0], [-0.295000017, 7.0, 8.0, 0.0], [-0.24849999, 9.0, 10.0, 0.0], [-0.916499972, 11.0, 12.0, 4.0], [-0.303499997, 13.0, 14.0, 0.0], [0.406413645, 0.0, 0.0, 0.0], [-0.680999994, 15.0, 16.0, 1.0], [-0.671999991, 17.0, 18.0, 4.0], [-0.49000001, 19.0, 20.0, 1.0], [-0.333499998, 21.0, 22.0, 0.0], [0.39457351, 0.0, 0.0, 0.0], [-0.255348712, 0.0, 0.0, 0.0], [-0.345222324, 0.0, 0.0, 0.0], [-0.0417636037, 0.0, 0.0, 0.0], [0.0793000162, 0.0, 0.0, 0.0], [-0.489745051, 0.0, 0.0, 0.0], [-0.287483633, 0.0, 0.0, 0.0], [-0.0581232607, 0.0, 0.0, 0.0], [-0.0577718504, 0.0, 0.0, 0.0], [0.438030034, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 19, 20, 21, 22, 13, 14, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_27(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [0.623000026, 3.0, 4.0, 0.0], [-0.422119766, 0.0, 0.0, 0.0], [-0.99150002, 5.0, 6.0, 1.0], [-0.344013155, 0.0, 0.0, 0.0], [-0.517500043, 7.0, 8.0, 0.0], [0.359000027, 9.0, 10.0, 0.0], [-0.576499999, 11.0, 12.0, 0.0], [-0.297500014, 13.0, 14.0, 0.0], [-0.449999988, 15.0, 16.0, 0.0], [-0.348628044, 0.0, 0.0, 0.0], [-0.00716494722, 0.0, 0.0, 0.0], [0.468637973, 0.0, 0.0, 0.0], [-0.327128351, 0.0, 0.0, 0.0], [0.0640717894, 0.0, 0.0, 0.0], [-0.312747717, 0.0, 0.0, 0.0], [0.485615104, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_28(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.419769675, 0.0, 0.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [-0.399809748, 0.0, 0.0, 0.0], [0.0507000014, 7.0, 8.0, 0.0], [0.0888999999, 9.0, 10.0, 0.0], [0.0353999995, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [1.09545457, 0.0, 0.0, 0.0], [-0.994499981, 15.0, 16.0, 1.0], [0.0554713868, 0.0, 0.0, 0.0], [0.610812843, 0.0, 0.0, 0.0], [-0.331158161, 0.0, 0.0, 0.0], [0.191875115, 0.0, 0.0, 0.0], [0.125417724, 0.0, 0.0, 0.0], [-0.301630467, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_29(xs):
    #Predicts Class 5
    function_dict = np.array([[0.166000009, 1.0, 2.0, 2.0], [0.623000026, 3.0, 4.0, 0.0], [-0.420169085, 0.0, 0.0, 0.0], [-0.918500006, 5.0, 6.0, 1.0], [0.408499926, 0.0, 0.0, 0.0], [0.363499999, 7.0, 8.0, 0.0], [0.530040264, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.445500016, 11.0, 12.0, 0.0], [-0.124168932, 0.0, 0.0, 0.0], [0.0837654695, 0.0, 0.0, 0.0], [0.205983385, 0.0, 0.0, 0.0], [0.0352721475, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_30(xs):
    #Predicts Class 0
    function_dict = np.array([[0.125499994, 1.0, 2.0, 2.0], [0.0376999974, 3.0, 4.0, 2.0], [0.127499998, 5.0, 6.0, 0.0], [-0.411308825, 0.0, 0.0, 0.0], [-0.0970580131, 0.0, 0.0, 0.0], [-0.0727999955, 7.0, 8.0, 0.0], [-0.410720974, 0.0, 0.0, 0.0], [-0.828500032, 9.0, 10.0, 1.0], [0.307999998, 11.0, 12.0, 2.0], [-0.192499995, 13.0, 14.0, 0.0], [0.414499998, 15.0, 16.0, 2.0], [-0.983500004, 17.0, 18.0, 4.0], [-0.690999985, 19.0, 20.0, 1.0], [0.29674685, 0.0, 0.0, 0.0], [-0.0119821215, 0.0, 0.0, 0.0], [-0.248889029, 0.0, 0.0, 0.0], [0.0377462059, 0.0, 0.0, 0.0], [-0.322778344, 0.0, 0.0, 0.0], [-0.0447961539, 0.0, 0.0, 0.0], [0.438814074, 0.0, 0.0, 0.0], [0.0738543421, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 9, 10, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_31(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.414754331, 0.0, 0.0, 0.0], [-0.736500025, 3.0, 4.0, 4.0], [0.127499998, 5.0, 6.0, 0.0], [-0.383638442, 0.0, 0.0, 0.0], [-0.107500002, 7.0, 8.0, 0.0], [0.432524562, 0.0, 0.0, 0.0], [-0.113499999, 9.0, 10.0, 0.0], [0.0445500016, 11.0, 12.0, 0.0], [0.0486802161, 0.0, 0.0, 0.0], [0.572592378, 0.0, 0.0, 0.0], [-0.412411243, 0.0, 0.0, 0.0], [0.0351659209, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 6, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_32(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.841500044, 1.0, 2.0, 1.0], [-0.411574662, 0.0, 0.0, 0.0], [-0.278500021, 3.0, 4.0, 1.0], [0.0280999988, 5.0, 6.0, 0.0], [-0.913499951, 7.0, 8.0, 4.0], [0.292500019, 9.0, 10.0, 2.0], [-0.454314351, 0.0, 0.0, 0.0], [0.439299673, 0.0, 0.0, 0.0], [-0.894500017, 11.0, 12.0, 4.0], [-0.219500005, 13.0, 14.0, 0.0], [-0.0727999955, 15.0, 16.0, 0.0], [-0.120834388, 0.0, 0.0, 0.0], [0.361626208, 0.0, 0.0, 0.0], [-0.254842341, 0.0, 0.0, 0.0], [0.49483788, 0.0, 0.0, 0.0], [0.0432046279, 0.0, 0.0, 0.0], [-0.235726401, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 7, 11, 12])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_33(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.994500041, 1.0, 2.0, 4.0], [-0.0579499975, 3.0, 4.0, 0.0], [-0.413522035, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 4.0], [-0.0538500026, 7.0, 8.0, 0.0], [-0.147, 9.0, 10.0, 0.0], [-0.726000011, 11.0, 12.0, 2.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.0293500014, 15.0, 16.0, 0.0], [-0.185499996, 17.0, 18.0, 0.0], [-0.809000015, 19.0, 20.0, 2.0], [-0.923500001, 21.0, 22.0, 2.0], [-0.532999992, 23.0, 24.0, 2.0], [-0.0168859828, 0.0, 0.0, 0.0], [-0.970884144, 0.0, 0.0, 0.0], [-0.0435499996, 25.0, 26.0, 0.0], [-0.0156999994, 27.0, 28.0, 0.0], [-0.0173181724, 0.0, 0.0, 0.0], [-0.392214417, 0.0, 0.0, 0.0], [0.0947138146, 0.0, 0.0, 0.0], [0.791336477, 0.0, 0.0, 0.0], [0.816116393, 0.0, 0.0, 0.0], [0.326049656, 0.0, 0.0, 0.0], [-0.257031202, 0.0, 0.0, 0.0], [0.296076953, 0.0, 0.0, 0.0], [0.15626663, 0.0, 0.0, 0.0], [-0.447620809, 0.0, 0.0, 0.0], [0.262050748, 0.0, 0.0, 0.0], [0.0322846845, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 13, 14, 25, 26, 27, 28, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_34(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.412050426, 0.0, 0.0, 0.0], [-0.0579499975, 5.0, 6.0, 0.0], [-0.38205871, 0.0, 0.0, 0.0], [-0.076700002, 7.0, 8.0, 0.0], [-0.0538500026, 9.0, 10.0, 0.0], [-0.0905500054, 11.0, 12.0, 0.0], [-0.0743499994, 13.0, 14.0, 0.0], [-0.0554499999, 15.0, 16.0, 0.0], [-0.0496499985, 17.0, 18.0, 0.0], [0.00636212947, 0.0, 0.0, 0.0], [0.269886017, 0.0, 0.0, 0.0], [-1.29566407, 0.0, 0.0, 0.0], [-0.141353488, 0.0, 0.0, 0.0], [0.194216043, 0.0, 0.0, 0.0], [1.18376255, 0.0, 0.0, 0.0], [-0.211757109, 0.0, 0.0, 0.0], [0.0838888884, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_35(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.143999994, 1.0, 2.0, 2.0], [0.623000026, 3.0, 4.0, 0.0], [-0.895500004, 5.0, 6.0, 1.0], [-0.915499985, 7.0, 8.0, 1.0], [0.383368641, 0.0, 0.0, 0.0], [-0.0986802056, 0.0, 0.0, 0.0], [-0.412279397, 0.0, 0.0, 0.0], [-0.760500014, 9.0, 10.0, 0.0], [0.515913188, 0.0, 0.0, 0.0], [0.376509219, 0.0, 0.0, 0.0], [-0.453500003, 11.0, 12.0, 0.0], [-0.288906634, 0.0, 0.0, 0.0], [0.0236876812, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 11, 12, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_36(xs):
    #Predicts Class 0
    function_dict = np.array([[0.0376999974, 1.0, 2.0, 2.0], [-0.402947694, 0.0, 0.0, 0.0], [-0.972499967, 3.0, 4.0, 3.0], [-0.334500015, 5.0, 6.0, 0.0], [-0.229499996, 7.0, 8.0, 0.0], [-0.946500003, 9.0, 10.0, 4.0], [-0.315500021, 11.0, 12.0, 0.0], [-0.827499986, 13.0, 14.0, 4.0], [-0.203500003, 15.0, 16.0, 0.0], [0.598500013, 17.0, 18.0, 2.0], [-0.365999997, 19.0, 20.0, 0.0], [-0.94749999, 21.0, 22.0, 4.0], [-0.615499973, 23.0, 24.0, 1.0], [-0.631500006, 25.0, 26.0, 1.0], [-0.524500012, 27.0, 28.0, 1.0], [-0.95599997, 29.0, 30.0, 3.0], [-0.810000002, 31.0, 32.0, 4.0], [-0.144833952, 0.0, 0.0, 0.0], [-0.572462499, 0.0, 0.0, 0.0], [-0.293974847, 0.0, 0.0, 0.0], [0.531890333, 0.0, 0.0, 0.0], [0.0707347319, 0.0, 0.0, 0.0], [-0.598165989, 0.0, 0.0, 0.0], [0.0342069343, 0.0, 0.0, 0.0], [-0.133084998, 0.0, 0.0, 0.0], [-0.00213558343, 0.0, 0.0, 0.0], [-0.512591839, 0.0, 0.0, 0.0], [-0.0785877109, 0.0, 0.0, 0.0], [0.624323845, 0.0, 0.0, 0.0], [0.137432858, 0.0, 0.0, 0.0], [0.575637758, 0.0, 0.0, 0.0], [0.162412524, 0.0, 0.0, 0.0], [-0.223437786, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_37(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.897500038, 1.0, 2.0, 1.0], [-0.399406582, 0.0, 0.0, 0.0], [-0.2755, 3.0, 4.0, 0.0], [-0.334500015, 5.0, 6.0, 0.0], [-0.273499995, 7.0, 8.0, 0.0], [-0.93900001, 9.0, 10.0, 3.0], [-0.86650002, 11.0, 12.0, 4.0], [-0.700500011, 13.0, 14.0, 1.0], [0.636500001, 15.0, 16.0, 2.0], [-0.374500006, 17.0, 18.0, 0.0], [-0.909000039, 19.0, 20.0, 4.0], [-0.950500011, 21.0, 22.0, 4.0], [-0.781499982, 23.0, 24.0, 4.0], [-0.766165912, 0.0, 0.0, 0.0], [-0.115508273, 0.0, 0.0, 0.0], [-0.887500048, 25.0, 26.0, 4.0], [-0.521499991, 27.0, 28.0, 1.0], [0.277499437, 0.0, 0.0, 0.0], [-0.30052197, 0.0, 0.0, 0.0], [0.0547310449, 0.0, 0.0, 0.0], [0.617504954, 0.0, 0.0, 0.0], [0.00353190582, 0.0, 0.0, 0.0], [0.399131626, 0.0, 0.0, 0.0], [-0.439299971, 0.0, 0.0, 0.0], [0.195975646, 0.0, 0.0, 0.0], [0.017225923, 0.0, 0.0, 0.0], [0.319860786, 0.0, 0.0, 0.0], [-0.343119591, 0.0, 0.0, 0.0], [0.0621245168, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 13, 14, 25, 26, 27, 28])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_38(xs):
    #Predicts Class 2
    function_dict = np.array([[0.149500012, 1.0, 2.0, 2.0], [-0.406625599, 0.0, 0.0, 0.0], [0.178499997, 3.0, 4.0, 2.0], [0.624212027, 0.0, 0.0, 0.0], [0.868999958, 5.0, 6.0, 2.0], [0.84800005, 7.0, 8.0, 2.0], [-0.917999983, 9.0, 10.0, 4.0], [0.801499963, 11.0, 12.0, 2.0], [-0.601472437, 0.0, 0.0, 0.0], [-0.0850098208, 0.0, 0.0, 0.0], [0.466501355, 0.0, 0.0, 0.0], [0.0132510876, 0.0, 0.0, 0.0], [0.35487029, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 11, 12, 8, 9, 10])
    branch_indices = np.array([0, 2, 4, 5, 7, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_39(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.371500015, 1.0, 2.0, 2.0], [-0.401499987, 3.0, 4.0, 2.0], [-0.370499998, 5.0, 6.0, 0.0], [-0.996500015, 7.0, 8.0, 4.0], [0.56164521, 0.0, 0.0, 0.0], [-0.0173637737, 0.0, 0.0, 0.0], [-0.408626556, 0.0, 0.0, 0.0], [-0.851999998, 9.0, 10.0, 2.0], [-0.340263397, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.236999989, 13.0, 14.0, 0.0], [0.0324105695, 0.0, 0.0, 0.0], [-0.107785881, 0.0, 0.0, 0.0], [0.0367543548, 0.0, 0.0, 0.0], [0.357080609, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_40(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.402932823, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [-0.360445589, 0.0, 0.0, 0.0], [-0.770500004, 7.0, 8.0, 2.0], [-0.371500015, 9.0, 10.0, 2.0], [-0.795000017, 11.0, 12.0, 2.0], [-0.0566500016, 13.0, 14.0, 0.0], [-0.410000026, 15.0, 16.0, 0.0], [-0.206, 17.0, 18.0, 0.0], [0.0473383367, 0.0, 0.0, 0.0], [-0.401278764, 0.0, 0.0, 0.0], [0.0514368787, 0.0, 0.0, 0.0], [0.539062798, 0.0, 0.0, 0.0], [0.221962512, 0.0, 0.0, 0.0], [-0.162071228, 0.0, 0.0, 0.0], [0.0819211528, 0.0, 0.0, 0.0], [0.400859088, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_41(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.143999994, 1.0, 2.0, 2.0], [0.623000026, 3.0, 4.0, 0.0], [-0.394705772, 0.0, 0.0, 0.0], [-0.337500006, 5.0, 6.0, 0.0], [0.349959195, 0.0, 0.0, 0.0], [-0.364499986, 7.0, 8.0, 0.0], [-0.923500001, 9.0, 10.0, 2.0], [-0.380499989, 11.0, 12.0, 0.0], [0.895384848, 0.0, 0.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.997500002, 15.0, 16.0, 1.0], [0.0969103575, 0.0, 0.0, 0.0], [-0.310325116, 0.0, 0.0, 0.0], [0.0116478428, 0.0, 0.0, 0.0], [0.326686978, 0.0, 0.0, 0.0], [-0.317838907, 0.0, 0.0, 0.0], [0.1673446, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_42(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [0.439999998, 3.0, 4.0, 2.0], [-0.977499962, 5.0, 6.0, 4.0], [-0.844500005, 7.0, 8.0, 1.0], [0.460500002, 9.0, 10.0, 2.0], [0.425999999, 11.0, 12.0, 2.0], [-0.54550004, 13.0, 14.0, 4.0], [0.105899997, 15.0, 16.0, 2.0], [0.178499997, 17.0, 18.0, 2.0], [0.551394701, 0.0, 0.0, 0.0], [0.606000006, 19.0, 20.0, 2.0], [-0.805999994, 21.0, 22.0, 1.0], [-0.718500018, 23.0, 24.0, 1.0], [-0.199499995, 25.0, 26.0, 0.0], [0.447668225, 0.0, 0.0, 0.0], [-0.386497408, 0.0, 0.0, 0.0], [-0.867499948, 27.0, 28.0, 1.0], [-0.146633253, 0.0, 0.0, 0.0], [-0.463024527, 0.0, 0.0, 0.0], [-0.983500004, 29.0, 30.0, 4.0], [-0.190499991, 31.0, 32.0, 0.0], [0.0948595926, 0.0, 0.0, 0.0], [-0.23434867, 0.0, 0.0, 0.0], [0.518009603, 0.0, 0.0, 0.0], [-0.653499961, 33.0, 34.0, 1.0], [-0.818500042, 35.0, 36.0, 1.0], [-0.166500002, 37.0, 38.0, 0.0], [0.325028986, 0.0, 0.0, 0.0], [-0.112565264, 0.0, 0.0, 0.0], [-0.0219077952, 0.0, 0.0, 0.0], [-0.501154184, 0.0, 0.0, 0.0], [-0.057079576, 0.0, 0.0, 0.0], [0.327020317, 0.0, 0.0, 0.0], [-0.0162676945, 0.0, 0.0, 0.0], [0.301980704, 0.0, 0.0, 0.0], [0.276120931, 0.0, 0.0, 0.0], [0.0226089321, 0.0, 0.0, 0.0], [-0.246792227, 0.0, 0.0, 0.0], [0.0471561588, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 27, 28, 17, 18, 9, 29, 30, 31, 32, 21, 22, 23, 33, 34, 35, 36, 37, 38, 14])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 4, 10, 19, 20, 2, 5, 11, 12, 24, 6, 13, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_43(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.905499995, 1.0, 2.0, 1.0], [-0.394785196, 0.0, 0.0, 0.0], [-0.946500003, 3.0, 4.0, 4.0], [-0.949499965, 5.0, 6.0, 4.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.183499992, 9.0, 10.0, 0.0], [-0.845499992, 11.0, 12.0, 1.0], [-0.189500004, 13.0, 14.0, 0.0], [0.114999995, 15.0, 16.0, 0.0], [-0.716500044, 17.0, 18.0, 1.0], [0.572000027, 19.0, 20.0, 2.0], [-0.281512141, 0.0, 0.0, 0.0], [-0.700500011, 21.0, 22.0, 1.0], [-0.700500011, 23.0, 24.0, 1.0], [0.619954348, 0.0, 0.0, 0.0], [0.426499993, 25.0, 26.0, 2.0], [0.257869482, 0.0, 0.0, 0.0], [-0.196533099, 0.0, 0.0, 0.0], [0.147937343, 0.0, 0.0, 0.0], [0.376652002, 0.0, 0.0, 0.0], [-0.199513987, 0.0, 0.0, 0.0], [0.830542982, 0.0, 0.0, 0.0], [0.212672174, 0.0, 0.0, 0.0], [0.0787604898, 0.0, 0.0, 0.0], [-0.0799480155, 0.0, 0.0, 0.0], [-0.203016967, 0.0, 0.0, 0.0], [-0.426253051, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 11, 21, 22, 23, 24, 14, 25, 26, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 12, 4, 7, 13, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_44(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.986500025, 1.0, 2.0, 4.0], [-0.789499998, 3.0, 4.0, 1.0], [-0.984500051, 5.0, 6.0, 4.0], [-0.397624493, 0.0, 0.0, 0.0], [-0.1184, 7.0, 8.0, 0.0], [0.333999991, 9.0, 10.0, 2.0], [-0.278500021, 11.0, 12.0, 1.0], [-0.315162063, 0.0, 0.0, 0.0], [0.196146682, 0.0, 0.0, 0.0], [0.879862189, 0.0, 0.0, 0.0], [-0.199843496, 0.0, 0.0, 0.0], [-0.470499992, 13.0, 14.0, 1.0], [-0.996500015, 15.0, 16.0, 3.0], [-0.484499991, 17.0, 18.0, 1.0], [-0.461499989, 19.0, 20.0, 1.0], [0.0220206976, 0.0, 0.0, 0.0], [-0.164499998, 21.0, 22.0, 1.0], [0.0167044885, 0.0, 0.0, 0.0], [0.616174459, 0.0, 0.0, 0.0], [-0.540179014, 0.0, 0.0, 0.0], [-0.040932253, 0.0, 0.0, 0.0], [0.437554866, 0.0, 0.0, 0.0], [0.210923731, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 10, 17, 18, 19, 20, 15, 21, 22])
    branch_indices = np.array([0, 1, 4, 2, 5, 6, 11, 13, 14, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_45(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.0439999998, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 3.0], [-0.99849999, 9.0, 10.0, 1.0], [-0.374500006, 11.0, 12.0, 0.0], [0.119000003, 13.0, 14.0, 0.0], [0.429499984, 15.0, 16.0, 0.0], [0.108999997, 17.0, 18.0, 0.0], [0.147325069, 0.0, 0.0, 0.0], [0.542178512, 0.0, 0.0, 0.0], [-0.0258295666, 0.0, 0.0, 0.0], [-0.403695792, 0.0, 0.0, 0.0], [-0.993999958, 19.0, 20.0, 1.0], [-0.339804441, 0.0, 0.0, 0.0], [0.282499999, 21.0, 22.0, 0.0], [0.445500016, 23.0, 24.0, 0.0], [-0.519999981, 25.0, 26.0, 2.0], [-0.99849999, 27.0, 28.0, 1.0], [0.277742386, 0.0, 0.0, 0.0], [-0.077486746, 0.0, 0.0, 0.0], [0.011683776, 0.0, 0.0, 0.0], [0.227648035, 0.0, 0.0, 0.0], [-0.295797616, 0.0, 0.0, 0.0], [0.0293199848, 0.0, 0.0, 0.0], [0.252656132, 0.0, 0.0, 0.0], [-0.476380765, 0.0, 0.0, 0.0], [-0.782180011, 0.0, 0.0, 0.0], [-0.103946939, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 27, 28, 9, 10, 11, 12, 19, 20, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 2, 5, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_46(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.391504854, 0.0, 0.0, 0.0], [0.0867500007, 5.0, 6.0, 0.0], [-0.334591061, 0.0, 0.0, 0.0], [0.0507000014, 7.0, 8.0, 0.0], [0.0945499986, 9.0, 10.0, 0.0], [0.0447499976, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [0.0883999988, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 3.0], [0.00926758721, 0.0, 0.0, 0.0], [0.458783567, 0.0, 0.0, 0.0], [-0.229657456, 0.0, 0.0, 0.0], [0.108319044, 0.0, 0.0, 0.0], [0.607561707, 0.0, 0.0, 0.0], [0.252591044, 0.0, 0.0, 0.0], [-0.0914298743, 0.0, 0.0, 0.0], [0.439700931, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_47(xs):
    #Predicts Class 5
    function_dict = np.array([[0.166000009, 1.0, 2.0, 2.0], [0.172499999, 3.0, 4.0, 0.0], [-0.3914361, 0.0, 0.0, 0.0], [-0.0123999994, 5.0, 6.0, 0.0], [0.212500006, 7.0, 8.0, 0.0], [-0.0807500035, 9.0, 10.0, 0.0], [-0.662999988, 11.0, 12.0, 2.0], [-0.997500002, 13.0, 14.0, 1.0], [0.429499984, 15.0, 16.0, 0.0], [-0.149500012, 17.0, 18.0, 0.0], [-0.0742499977, 19.0, 20.0, 0.0], [-0.412938118, 0.0, 0.0, 0.0], [-0.996500015, 21.0, 22.0, 1.0], [0.201499999, 23.0, 24.0, 0.0], [-0.0236270688, 0.0, 0.0, 0.0], [0.428499997, 25.0, 26.0, 0.0], [0.445500016, 27.0, 28.0, 0.0], [0.059455581, 0.0, 0.0, 0.0], [-0.385036081, 0.0, 0.0, 0.0], [1.09625518, 0.0, 0.0, 0.0], [-0.0471615195, 0.0, 0.0, 0.0], [-0.25728339, 0.0, 0.0, 0.0], [0.259469569, 0.0, 0.0, 0.0], [0.148774162, 0.0, 0.0, 0.0], [0.625846982, 0.0, 0.0, 0.0], [-0.0169144813, 0.0, 0.0, 0.0], [-0.697618306, 0.0, 0.0, 0.0], [0.326683104, 0.0, 0.0, 0.0], [0.0289283022, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 21, 22, 23, 24, 14, 25, 26, 27, 28, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7, 13, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_48(xs):
    #Predicts Class 0
    function_dict = np.array([[0.219500005, 1.0, 2.0, 2.0], [0.125499994, 3.0, 4.0, 2.0], [-0.365500003, 5.0, 6.0, 0.0], [-0.370242804, 0.0, 0.0, 0.0], [-0.141499996, 7.0, 8.0, 0.0], [-0.330688447, 0.0, 0.0, 0.0], [-0.346000016, 9.0, 10.0, 0.0], [-0.267827094, 0.0, 0.0, 0.0], [0.0216311328, 0.0, 0.0, 0.0], [-0.868000031, 11.0, 12.0, 4.0], [-0.841500044, 13.0, 14.0, 4.0], [0.527259469, 0.0, 0.0, 0.0], [-0.245057672, 0.0, 0.0, 0.0], [-0.578999996, 15.0, 16.0, 1.0], [0.685000002, 17.0, 18.0, 2.0], [0.0223195348, 0.0, 0.0, 0.0], [-0.247224525, 0.0, 0.0, 0.0], [0.273491591, 0.0, 0.0, 0.0], [-0.0491130576, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 11, 12, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_49(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.384295434, 0.0, 0.0, 0.0], [-0.736500025, 3.0, 4.0, 4.0], [-0.74150002, 5.0, 6.0, 4.0], [-0.375150949, 0.0, 0.0, 0.0], [-0.973500013, 7.0, 8.0, 4.0], [0.517306924, 0.0, 0.0, 0.0], [-0.228500009, 9.0, 10.0, 0.0], [0.554499984, 11.0, 12.0, 2.0], [0.316382736, 0.0, 0.0, 0.0], [0.0056646103, 0.0, 0.0, 0.0], [-0.0531810485, 0.0, 0.0, 0.0], [0.048269324, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 6, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_50(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.841500044, 1.0, 2.0, 1.0], [-0.381811261, 0.0, 0.0, 0.0], [0.0280999988, 3.0, 4.0, 0.0], [-0.101500005, 5.0, 6.0, 0.0], [-0.353529662, 0.0, 0.0, 0.0], [-0.872500002, 7.0, 8.0, 4.0], [-0.661499977, 9.0, 10.0, 1.0], [-0.593500018, 11.0, 12.0, 1.0], [0.540499985, 13.0, 14.0, 2.0], [-0.0728999972, 15.0, 16.0, 0.0], [0.435578406, 0.0, 0.0, 0.0], [-0.0319839381, 0.0, 0.0, 0.0], [0.13744022, 0.0, 0.0, 0.0], [-0.484831035, 0.0, 0.0, 0.0], [-0.0318532735, 0.0, 0.0, 0.0], [0.317200422, 0.0, 0.0, 0.0], [-0.209998593, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 13, 14, 15, 16, 10, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_51(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [-0.0905500054, 3.0, 4.0, 0.0], [-0.381825924, 0.0, 0.0, 0.0], [-0.107000001, 5.0, 6.0, 0.0], [-0.0802000016, 7.0, 8.0, 0.0], [-0.115500003, 9.0, 10.0, 0.0], [-0.0987499952, 11.0, 12.0, 0.0], [-0.0898000002, 13.0, 14.0, 0.0], [-0.0748500004, 15.0, 16.0, 0.0], [-0.1175, 17.0, 18.0, 0.0], [-0.111500002, 19.0, 20.0, 0.0], [0.653832853, 0.0, 0.0, 0.0], [-0.0922999978, 21.0, 22.0, 0.0], [-0.0720466524, 0.0, 0.0, 0.0], [-0.418482244, 0.0, 0.0, 0.0], [-0.076700002, 23.0, 24.0, 0.0], [-0.0728500038, 25.0, 26.0, 0.0], [0.0238794424, 0.0, 0.0, 0.0], [0.380111873, 0.0, 0.0, 0.0], [-0.380747467, 0.0, 0.0, 0.0], [0.017102221, 0.0, 0.0, 0.0], [-0.209073707, 0.0, 0.0, 0.0], [0.544190526, 0.0, 0.0, 0.0], [-0.0403163992, 0.0, 0.0, 0.0], [0.517970741, 0.0, 0.0, 0.0], [-0.389864534, 0.0, 0.0, 0.0], [0.00780694792, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 21, 22, 13, 14, 23, 24, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_52(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.376595467, 0.0, 0.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [-0.304011881, 0.0, 0.0, 0.0], [0.111500002, 7.0, 8.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0824999958, 11.0, 12.0, 0.0], [0.141499996, 13.0, 14.0, 0.0], [0.195499986, 15.0, 16.0, 0.0], [-0.0187039934, 0.0, 0.0, 0.0], [0.00402206695, 0.0, 0.0, 0.0], [0.16296567, 0.0, 0.0, 0.0], [-0.375015348, 0.0, 0.0, 0.0], [0.0263329484, 0.0, 0.0, 0.0], [0.482569665, 0.0, 0.0, 0.0], [0.143127382, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_53(xs):
    #Predicts Class 5
    function_dict = np.array([[0.166000009, 1.0, 2.0, 2.0], [0.172499999, 3.0, 4.0, 0.0], [-0.376352936, 0.0, 0.0, 0.0], [0.00540999975, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 4.0], [-0.433499992, 9.0, 10.0, 2.0], [-0.999500036, 11.0, 12.0, 3.0], [-0.747500002, 13.0, 14.0, 2.0], [0.36038807, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.320313871, 0.0, 0.0, 0.0], [-0.384434968, 0.0, 0.0, 0.0], [0.0125016663, 0.0, 0.0, 0.0], [0.282499999, 17.0, 18.0, 0.0], [-0.639999986, 19.0, 20.0, 2.0], [-0.0354683958, 0.0, 0.0, 0.0], [0.104110442, 0.0, 0.0, 0.0], [0.161623299, 0.0, 0.0, 0.0], [0.0120204762, 0.0, 0.0, 0.0], [-0.441909969, 0.0, 0.0, 0.0], [0.185662106, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 11, 12, 17, 18, 19, 20, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4, 7, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_54(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.575999975, 3.0, 4.0, 2.0], [-0.526499987, 5.0, 6.0, 1.0], [-0.935500026, 7.0, 8.0, 4.0], [-0.659999967, 9.0, 10.0, 1.0], [-0.560500026, 11.0, 12.0, 1.0], [-0.916499972, 13.0, 14.0, 4.0], [-0.949499965, 15.0, 16.0, 4.0], [-0.744500041, 17.0, 18.0, 1.0], [0.444179535, 0.0, 0.0, 0.0], [-0.263378561, 0.0, 0.0, 0.0], [-0.862499952, 19.0, 20.0, 4.0], [-0.950500011, 21.0, 22.0, 4.0], [-0.379281789, 0.0, 0.0, 0.0], [-0.268999994, 23.0, 24.0, 0.0], [0.443499982, 25.0, 26.0, 2.0], [-0.700581968, 0.0, 0.0, 0.0], [0.362725496, 0.0, 0.0, 0.0], [-0.236833483, 0.0, 0.0, 0.0], [0.576499999, 27.0, 28.0, 2.0], [-0.784500003, 29.0, 30.0, 1.0], [0.680500031, 31.0, 32.0, 2.0], [-0.730000019, 33.0, 34.0, 4.0], [-0.469500005, 35.0, 36.0, 1.0], [-0.688500047, 37.0, 38.0, 4.0], [-0.314854503, 0.0, 0.0, 0.0], [0.124520734, 0.0, 0.0, 0.0], [-0.020522058, 0.0, 0.0, 0.0], [0.1501389, 0.0, 0.0, 0.0], [-0.828408062, 0.0, 0.0, 0.0], [-0.0439898409, 0.0, 0.0, 0.0], [-0.256999582, 0.0, 0.0, 0.0], [0.428606421, 0.0, 0.0, 0.0], [-0.482495815, 0.0, 0.0, 0.0], [0.103262141, 0.0, 0.0, 0.0], [-0.0157957524, 0.0, 0.0, 0.0], [-0.325636506, 0.0, 0.0, 0.0], [0.57035321, 0.0, 0.0, 0.0], [0.0229834002, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 18, 9, 10, 27, 28, 29, 30, 31, 32, 33, 34, 13, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 2, 5, 11, 19, 20, 12, 21, 22, 6, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_55(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.897500038, 1.0, 2.0, 1.0], [-0.354956299, 0.0, 0.0, 0.0], [0.737499952, 3.0, 4.0, 2.0], [-0.887500048, 5.0, 6.0, 4.0], [-0.916499972, 7.0, 8.0, 4.0], [-0.913499951, 9.0, 10.0, 4.0], [-0.688500047, 11.0, 12.0, 1.0], [-0.243000001, 13.0, 14.0, 0.0], [-0.333499998, 15.0, 16.0, 0.0], [-0.654500008, 17.0, 18.0, 1.0], [0.544499993, 19.0, 20.0, 2.0], [-0.949500024, 21.0, 22.0, 3.0], [-0.868499994, 23.0, 24.0, 4.0], [-0.310000002, 25.0, 26.0, 0.0], [-0.267530888, 0.0, 0.0, 0.0], [-0.96449995, 27.0, 28.0, 3.0], [-0.448893398, 0.0, 0.0, 0.0], [-0.00622406183, 0.0, 0.0, 0.0], [0.131562546, 0.0, 0.0, 0.0], [-0.435293645, 0.0, 0.0, 0.0], [0.0298923589, 0.0, 0.0, 0.0], [0.526520848, 0.0, 0.0, 0.0], [-0.26754117, 0.0, 0.0, 0.0], [0.247570708, 0.0, 0.0, 0.0], [-0.283377916, 0.0, 0.0, 0.0], [0.159757823, 0.0, 0.0, 0.0], [0.636340618, 0.0, 0.0, 0.0], [-0.238158166, 0.0, 0.0, 0.0], [0.32996738, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 14, 27, 28, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_56(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.841500044, 1.0, 2.0, 1.0], [-0.364696234, 0.0, 0.0, 0.0], [-0.526499987, 3.0, 4.0, 1.0], [-0.911499977, 5.0, 6.0, 3.0], [-0.999500036, 7.0, 8.0, 3.0], [-0.600499988, 9.0, 10.0, 1.0], [-0.840000033, 11.0, 12.0, 3.0], [0.563499987, 13.0, 14.0, 2.0], [-0.509500027, 15.0, 16.0, 1.0], [-0.62349999, 17.0, 18.0, 1.0], [-0.937999964, 19.0, 20.0, 4.0], [0.380999982, 21.0, 22.0, 2.0], [0.478500009, 23.0, 24.0, 2.0], [0.847469091, 0.0, 0.0, 0.0], [0.275085896, 0.0, 0.0, 0.0], [-0.279500008, 25.0, 26.0, 0.0], [-0.49150002, 27.0, 28.0, 1.0], [-0.00420114258, 0.0, 0.0, 0.0], [-0.357551813, 0.0, 0.0, 0.0], [-0.143150866, 0.0, 0.0, 0.0], [0.289534956, 0.0, 0.0, 0.0], [-0.255828083, 0.0, 0.0, 0.0], [0.694157064, 0.0, 0.0, 0.0], [0.247689679, 0.0, 0.0, 0.0], [-0.229833454, 0.0, 0.0, 0.0], [0.194906443, 0.0, 0.0, 0.0], [-0.649494708, 0.0, 0.0, 0.0], [0.290066838, 0.0, 0.0, 0.0], [-0.113678001, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 23, 24, 13, 14, 25, 26, 27, 28])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_57(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.994500041, 1.0, 2.0, 4.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.362161458, 0.0, 0.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.995999992, 7.0, 8.0, 1.0], [-0.249500006, 9.0, 10.0, 0.0], [-0.208499998, 11.0, 12.0, 0.0], [0.279483557, 0.0, 0.0, 0.0], [0.0695903823, 0.0, 0.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [-0.398883075, 0.0, 0.0, 0.0], [1.43150818, 0.0, 0.0, 0.0], [-0.770500004, 15.0, 16.0, 2.0], [0.141011849, 0.0, 0.0, 0.0], [-0.235756159, 0.0, 0.0, 0.0], [0.0153230224, 0.0, 0.0, 0.0], [-0.072442323, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 15, 16, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_58(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.174499989, 1.0, 2.0, 2.0], [0.194499999, 3.0, 4.0, 0.0], [-0.344202757, 0.0, 0.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [0.195499986, 7.0, 8.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [0.88857919, 0.0, 0.0, 0.0], [-0.322288215, 0.0, 0.0, 0.0], [0.203500003, 11.0, 12.0, 0.0], [0.140500009, 13.0, 14.0, 0.0], [-0.327787697, 0.0, 0.0, 0.0], [0.199499995, 15.0, 16.0, 0.0], [-0.275703996, 0.0, 0.0, 0.0], [0.00692578778, 0.0, 0.0, 0.0], [0.465934485, 0.0, 0.0, 0.0], [-0.0228546038, 0.0, 0.0, 0.0], [0.124694958, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 15, 16, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_59(xs):
    #Predicts Class 5
    function_dict = np.array([[0.166000009, 1.0, 2.0, 2.0], [-0.760500014, 3.0, 4.0, 0.0], [-0.356302679, 0.0, 0.0, 0.0], [0.308863163, 0.0, 0.0, 0.0], [-0.453500003, 5.0, 6.0, 0.0], [-0.906000018, 7.0, 8.0, 2.0], [-0.337500006, 9.0, 10.0, 0.0], [-0.537500024, 11.0, 12.0, 0.0], [0.103188083, 0.0, 0.0, 0.0], [-0.407499999, 13.0, 14.0, 0.0], [-0.194499999, 15.0, 16.0, 0.0], [-0.0218709148, 0.0, 0.0, 0.0], [-0.528594971, 0.0, 0.0, 0.0], [-0.0433699563, 0.0, 0.0, 0.0], [0.266241133, 0.0, 0.0, 0.0], [-0.297710896, 0.0, 0.0, 0.0], [0.0141598089, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 8, 13, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 4, 5, 7, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_60(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [0.439999998, 3.0, 4.0, 2.0], [-0.977499962, 5.0, 6.0, 4.0], [-0.844500005, 7.0, 8.0, 1.0], [0.460500002, 9.0, 10.0, 2.0], [0.414000005, 11.0, 12.0, 2.0], [0.311500013, 13.0, 14.0, 2.0], [0.0376999974, 15.0, 16.0, 2.0], [0.178499997, 17.0, 18.0, 2.0], [0.379619539, 0.0, 0.0, 0.0], [0.606000006, 19.0, 20.0, 2.0], [-0.0643327981, 0.0, 0.0, 0.0], [-0.978500009, 21.0, 22.0, 4.0], [-0.782500029, 23.0, 24.0, 1.0], [-0.863499999, 25.0, 26.0, 1.0], [-0.340895206, 0.0, 0.0, 0.0], [-0.193000004, 27.0, 28.0, 0.0], [-0.0912304521, 0.0, 0.0, 0.0], [-0.420939028, 0.0, 0.0, 0.0], [-0.794499993, 29.0, 30.0, 1.0], [0.173679143, 0.0, 0.0, 0.0], [0.428019136, 0.0, 0.0, 0.0], [0.573500037, 31.0, 32.0, 2.0], [0.256500006, 33.0, 34.0, 2.0], [-0.94749999, 35.0, 36.0, 4.0], [-0.193499997, 37.0, 38.0, 0.0], [-0.828500032, 39.0, 40.0, 1.0], [-0.129172564, 0.0, 0.0, 0.0], [0.235518947, 0.0, 0.0, 0.0], [0.0516807735, 0.0, 0.0, 0.0], [-0.34291628, 0.0, 0.0, 0.0], [-0.136738688, 0.0, 0.0, 0.0], [0.363452911, 0.0, 0.0, 0.0], [-0.110396378, 0.0, 0.0, 0.0], [0.527305841, 0.0, 0.0, 0.0], [-0.0359891653, 0.0, 0.0, 0.0], [-0.281277567, 0.0, 0.0, 0.0], [0.240687445, 0.0, 0.0, 0.0], [-0.897812605, 0.0, 0.0, 0.0], [0.222681448, 0.0, 0.0, 0.0], [-0.00844619051, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 27, 28, 17, 18, 9, 29, 30, 20, 11, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 4, 10, 19, 2, 5, 12, 22, 6, 13, 23, 24, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_61(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0553500019, 1.0, 2.0, 2.0], [-0.348503172, 0.0, 0.0, 0.0], [-0.315500021, 3.0, 4.0, 0.0], [-0.400000006, 5.0, 6.0, 1.0], [0.539499998, 7.0, 8.0, 2.0], [-0.828000009, 9.0, 10.0, 1.0], [-0.332499981, 11.0, 12.0, 0.0], [0.536499977, 13.0, 14.0, 2.0], [0.551499963, 15.0, 16.0, 2.0], [-0.323000014, 17.0, 18.0, 0.0], [-0.346000016, 19.0, 20.0, 0.0], [-0.945500016, 21.0, 22.0, 3.0], [0.016060492, 0.0, 0.0, 0.0], [-0.684499979, 23.0, 24.0, 1.0], [0.556195021, 0.0, 0.0, 0.0], [-0.968500018, 25.0, 26.0, 4.0], [-0.210500002, 27.0, 28.0, 0.0], [-0.417324156, 0.0, 0.0, 0.0], [0.116240665, 0.0, 0.0, 0.0], [0.0169136971, 0.0, 0.0, 0.0], [0.336034119, 0.0, 0.0, 0.0], [-0.430288494, 0.0, 0.0, 0.0], [-0.103113852, 0.0, 0.0, 0.0], [-0.0357882082, 0.0, 0.0, 0.0], [0.156638145, 0.0, 0.0, 0.0], [-0.170871705, 0.0, 0.0, 0.0], [-0.629992187, 0.0, 0.0, 0.0], [0.034364868, 0.0, 0.0, 0.0], [-0.161891267, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 21, 22, 12, 23, 24, 14, 25, 26, 27, 28])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 4, 7, 13, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_62(xs):
    #Predicts Class 2
    function_dict = np.array([[0.149500012, 1.0, 2.0, 2.0], [-0.349144399, 0.0, 0.0, 0.0], [-0.159500003, 3.0, 4.0, 1.0], [0.178499997, 5.0, 6.0, 2.0], [0.332169622, 0.0, 0.0, 0.0], [0.389857382, 0.0, 0.0, 0.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.186500013, 9.0, 10.0, 0.0], [-0.955500007, 11.0, 12.0, 4.0], [0.00672340021, 0.0, 0.0, 0.0], [0.485165924, 0.0, 0.0, 0.0], [-0.219358653, 0.0, 0.0, 0.0], [0.0158207119, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 9, 10, 11, 12, 4])
    branch_indices = np.array([0, 2, 3, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_63(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.113450006, 1.0, 2.0, 2.0], [-0.992499948, 3.0, 4.0, 1.0], [-0.341952145, 0.0, 0.0, 0.0], [-0.994500041, 5.0, 6.0, 1.0], [0.359000027, 7.0, 8.0, 0.0], [0.615499973, 9.0, 10.0, 0.0], [-0.346295208, 0.0, 0.0, 0.0], [-0.409999996, 11.0, 12.0, 0.0], [-0.317053735, 0.0, 0.0, 0.0], [0.588, 13.0, 14.0, 0.0], [0.623000026, 15.0, 16.0, 0.0], [-0.130420536, 0.0, 0.0, 0.0], [-0.457500011, 17.0, 18.0, 2.0], [0.00489559257, 0.0, 0.0, 0.0], [-0.318203598, 0.0, 0.0, 0.0], [0.306870282, 0.0, 0.0, 0.0], [-0.21176371, 0.0, 0.0, 0.0], [0.396862417, 0.0, 0.0, 0.0], [0.0013296752, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 11, 17, 18, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 7, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_64(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.334806085, 0.0, 0.0, 0.0], [-0.210500002, 5.0, 6.0, 0.0], [-0.410000026, 7.0, 8.0, 0.0], [-0.273499995, 9.0, 10.0, 0.0], [-0.208499998, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [-0.335500002, 15.0, 16.0, 0.0], [-0.297500014, 17.0, 18.0, 0.0], [0.390987933, 0.0, 0.0, 0.0], [-0.63395375, 0.0, 0.0, 0.0], [-0.706500053, 19.0, 20.0, 2.0], [-0.344251662, 0.0, 0.0, 0.0], [-0.463500023, 21.0, 22.0, 0.0], [-0.997500002, 23.0, 24.0, 1.0], [-0.923500001, 25.0, 26.0, 2.0], [0.148258075, 0.0, 0.0, 0.0], [-0.214159548, 0.0, 0.0, 0.0], [0.00657228241, 0.0, 0.0, 0.0], [0.326889634, 0.0, 0.0, 0.0], [0.0376156531, 0.0, 0.0, 0.0], [0.607879639, 0.0, 0.0, 0.0], [-0.656315148, 0.0, 0.0, 0.0], [-0.105534725, 0.0, 0.0, 0.0], [-0.317177981, 0.0, 0.0, 0.0], [0.0354720727, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 11, 19, 20, 13, 21, 22, 23, 24, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 12, 4, 7, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_65(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.435000002, 1.0, 2.0, 2.0], [-0.546499968, 3.0, 4.0, 2.0], [0.100500003, 5.0, 6.0, 0.0], [-0.654500008, 7.0, 8.0, 2.0], [-0.523000002, 9.0, 10.0, 2.0], [-0.366359472, 0.0, 0.0, 0.0], [0.146042198, 0.0, 0.0, 0.0], [0.253499985, 11.0, 12.0, 0.0], [-0.334500015, 13.0, 14.0, 0.0], [0.361045599, 0.0, 0.0, 0.0], [-0.48300001, 15.0, 16.0, 2.0], [0.228500009, 17.0, 18.0, 0.0], [0.264499992, 19.0, 20.0, 0.0], [-0.407499999, 21.0, 22.0, 0.0], [-0.996500015, 23.0, 24.0, 1.0], [-0.219240516, 0.0, 0.0, 0.0], [0.262382269, 0.0, 0.0, 0.0], [0.00518229464, 0.0, 0.0, 0.0], [-0.572227657, 0.0, 0.0, 0.0], [0.759518981, 0.0, 0.0, 0.0], [0.00464643585, 0.0, 0.0, 0.0], [-0.325837195, 0.0, 0.0, 0.0], [0.324058205, 0.0, 0.0, 0.0], [-0.385314256, 0.0, 0.0, 0.0], [0.0547930971, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 9, 15, 16, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 4, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_66(xs):
    #Predicts Class 0
    function_dict = np.array([[0.414499998, 1.0, 2.0, 2.0], [0.398499995, 3.0, 4.0, 2.0], [0.417500019, 5.0, 6.0, 2.0], [-0.970499992, 7.0, 8.0, 4.0], [-0.914499998, 9.0, 10.0, 4.0], [-0.222000003, 11.0, 12.0, 0.0], [-0.102499999, 13.0, 14.0, 0.0], [-0.816499949, 15.0, 16.0, 1.0], [-0.950999975, 17.0, 18.0, 3.0], [-0.73150003, 19.0, 20.0, 1.0], [0.0949638709, 0.0, 0.0, 0.0], [0.205550134, 0.0, 0.0, 0.0], [0.683092773, 0.0, 0.0, 0.0], [-0.80250001, 21.0, 22.0, 1.0], [-0.75150001, 23.0, 24.0, 1.0], [-0.99849999, 25.0, 26.0, 3.0], [-0.363858402, 0.0, 0.0, 0.0], [-0.978500009, 27.0, 28.0, 3.0], [-0.2245, 29.0, 30.0, 0.0], [-0.788500011, 31.0, 32.0, 1.0], [-0.073293753, 0.0, 0.0, 0.0], [-0.208999991, 33.0, 34.0, 0.0], [-0.179500014, 35.0, 36.0, 0.0], [-0.976000011, 37.0, 38.0, 4.0], [-0.719500005, 39.0, 40.0, 1.0], [-0.321251303, 0.0, 0.0, 0.0], [0.0694733709, 0.0, 0.0, 0.0], [0.147307113, 0.0, 0.0, 0.0], [-0.512250304, 0.0, 0.0, 0.0], [0.0215547048, 0.0, 0.0, 0.0], [0.481150717, 0.0, 0.0, 0.0], [-0.179696769, 0.0, 0.0, 0.0], [-0.711511433, 0.0, 0.0, 0.0], [0.0330687501, 0.0, 0.0, 0.0], [-0.35479185, 0.0, 0.0, 0.0], [0.000405060418, 0.0, 0.0, 0.0], [0.157301247, 0.0, 0.0, 0.0], [-0.091702655, 0.0, 0.0, 0.0], [0.391409039, 0.0, 0.0, 0.0], [-0.77080524, 0.0, 0.0, 0.0], [-0.0690083653, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 27, 28, 29, 30, 31, 32, 20, 10, 11, 12, 33, 34, 35, 36, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 18, 4, 9, 19, 2, 5, 6, 13, 21, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_67(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.895500004, 1.0, 2.0, 1.0], [-0.304736614, 0.0, 0.0, 0.0], [-0.913499951, 3.0, 4.0, 4.0], [-0.189500004, 5.0, 6.0, 0.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.961500049, 9.0, 10.0, 4.0], [0.572000027, 11.0, 12.0, 2.0], [-0.908499956, 13.0, 14.0, 4.0], [-0.357380122, 0.0, 0.0, 0.0], [-0.973500013, 15.0, 16.0, 4.0], [-0.699499965, 17.0, 18.0, 1.0], [0.483500004, 19.0, 20.0, 2.0], [0.108199999, 21.0, 22.0, 0.0], [-0.921499968, 23.0, 24.0, 3.0], [0.634000003, 25.0, 26.0, 2.0], [0.0217413642, 0.0, 0.0, 0.0], [-0.247056216, 0.0, 0.0, 0.0], [0.169598579, 0.0, 0.0, 0.0], [-0.0230118725, 0.0, 0.0, 0.0], [0.0399989597, 0.0, 0.0, 0.0], [0.448675543, 0.0, 0.0, 0.0], [-0.255407482, 0.0, 0.0, 0.0], [0.257946223, 0.0, 0.0, 0.0], [-0.397895783, 0.0, 0.0, 0.0], [0.0578014627, 0.0, 0.0, 0.0], [0.123222731, 0.0, 0.0, 0.0], [-0.126886413, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_68(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.823500037, 1.0, 2.0, 1.0], [0.422999978, 3.0, 4.0, 2.0], [0.578500032, 5.0, 6.0, 2.0], [-0.315244555, 0.0, 0.0, 0.0], [-0.052025903, 0.0, 0.0, 0.0], [-0.218499988, 7.0, 8.0, 0.0], [-0.996500015, 9.0, 10.0, 3.0], [-0.95449996, 11.0, 12.0, 3.0], [-0.87650001, 13.0, 14.0, 4.0], [0.62349999, 15.0, 16.0, 2.0], [-0.912500024, 17.0, 18.0, 4.0], [-0.656499982, 19.0, 20.0, 1.0], [-0.779500008, 21.0, 22.0, 3.0], [-0.168500006, 23.0, 24.0, 0.0], [-0.178499997, 25.0, 26.0, 0.0], [-0.223500013, 27.0, 28.0, 0.0], [0.637500048, 29.0, 30.0, 2.0], [-0.713500023, 31.0, 32.0, 1.0], [-0.555999994, 33.0, 34.0, 1.0], [0.147973701, 0.0, 0.0, 0.0], [0.853013396, 0.0, 0.0, 0.0], [-0.347298592, 0.0, 0.0, 0.0], [0.433987588, 0.0, 0.0, 0.0], [-0.136208341, 0.0, 0.0, 0.0], [0.188325986, 0.0, 0.0, 0.0], [0.0702030063, 0.0, 0.0, 0.0], [-0.391781718, 0.0, 0.0, 0.0], [0.214005694, 0.0, 0.0, 0.0], [-0.39162153, 0.0, 0.0, 0.0], [0.834497929, 0.0, 0.0, 0.0], [0.119006217, 0.0, 0.0, 0.0], [0.31956777, 0.0, 0.0, 0.0], [-0.236569494, 0.0, 0.0, 0.0], [-0.135795385, 0.0, 0.0, 0.0], [0.0802820772, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 8, 13, 14, 6, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_69(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.939999998, 1.0, 2.0, 1.0], [-0.613499999, 3.0, 4.0, 2.0], [-0.323822349, 0.0, 0.0, 0.0], [-0.297500014, 5.0, 6.0, 0.0], [-0.208499998, 7.0, 8.0, 0.0], [-0.524500012, 9.0, 10.0, 0.0], [-0.282999992, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 4.0], [-0.0641499981, 15.0, 16.0, 0.0], [-0.552999973, 17.0, 18.0, 0.0], [-0.994500041, 19.0, 20.0, 1.0], [-0.294, 21.0, 22.0, 0.0], [-0.274500012, 23.0, 24.0, 0.0], [0.0865691975, 0.0, 0.0, 0.0], [-0.493000001, 25.0, 26.0, 2.0], [-0.99849999, 27.0, 28.0, 4.0], [-0.546499968, 29.0, 30.0, 2.0], [-0.0665432066, 0.0, 0.0, 0.0], [0.290326506, 0.0, 0.0, 0.0], [-0.375662655, 0.0, 0.0, 0.0], [0.0926811397, 0.0, 0.0, 0.0], [0.566197872, 0.0, 0.0, 0.0], [0.173689708, 0.0, 0.0, 0.0], [-0.387430638, 0.0, 0.0, 0.0], [0.00363448239, 0.0, 0.0, 0.0], [0.0973062441, 0.0, 0.0, 0.0], [0.644318104, 0.0, 0.0, 0.0], [-0.0390347093, 0.0, 0.0, 0.0], [-0.399092376, 0.0, 0.0, 0.0], [0.34191379, 0.0, 0.0, 0.0], [-0.0549896806, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 13, 25, 26, 27, 28, 29, 30, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_70(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.994500041, 3.0, 4.0, 1.0], [-0.416999996, 5.0, 6.0, 0.0], [-0.581499994, 7.0, 8.0, 2.0], [0.367650419, 0.0, 0.0, 0.0], [0.151275992, 0.0, 0.0, 0.0], [-0.176499993, 9.0, 10.0, 0.0], [-0.463500023, 11.0, 12.0, 0.0], [-0.254500002, 13.0, 14.0, 0.0], [-0.222499996, 15.0, 16.0, 0.0], [-0.155499995, 17.0, 18.0, 0.0], [-0.297906905, 0.0, 0.0, 0.0], [-0.297500014, 19.0, 20.0, 0.0], [-0.430541188, 0.0, 0.0, 0.0], [-0.51699996, 21.0, 22.0, 2.0], [-0.153357506, 0.0, 0.0, 0.0], [-0.56588906, 0.0, 0.0, 0.0], [0.218048722, 0.0, 0.0, 0.0], [-0.246429056, 0.0, 0.0, 0.0], [0.123235881, 0.0, 0.0, 0.0], [0.00397393294, 0.0, 0.0, 0.0], [-0.291136056, 0.0, 0.0, 0.0], [0.113019541, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 19, 20, 13, 21, 22, 4, 5, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 12, 8, 14, 2, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_71(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.435000002, 1.0, 2.0, 2.0], [0.541499972, 3.0, 4.0, 0.0], [0.0364999995, 5.0, 6.0, 0.0], [0.523499966, 7.0, 8.0, 0.0], [0.547500014, 9.0, 10.0, 0.0], [-0.334602952, 0.0, 0.0, 0.0], [0.0452095456, 0.0, 0.0, 0.0], [0.513000011, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [0.404402256, 0.0, 0.0, 0.0], [0.550999999, 15.0, 16.0, 0.0], [0.506000042, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.534999967, 21.0, 22.0, 0.0], [-1.28063357, 0.0, 0.0, 0.0], [-0.439633816, 0.0, 0.0, 0.0], [0.561499953, 23.0, 24.0, 0.0], [0.00570698967, 0.0, 0.0, 0.0], [-0.423403054, 0.0, 0.0, 0.0], [0.751075566, 0.0, 0.0, 0.0], [-0.335220426, 0.0, 0.0, 0.0], [0.115984373, 0.0, 0.0, 0.0], [-0.195459545, 0.0, 0.0, 0.0], [0.262311488, 0.0, 0.0, 0.0], [-0.0601460151, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 14, 9, 15, 23, 24, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 4, 10, 16, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_72(xs):
    #Predicts Class 0
    function_dict = np.array([[0.120499998, 1.0, 2.0, 0.0], [-0.0726500005, 3.0, 4.0, 0.0], [-0.346279979, 0.0, 0.0, 0.0], [-0.111500002, 5.0, 6.0, 0.0], [-0.966500044, 7.0, 8.0, 4.0], [-0.945500016, 9.0, 10.0, 4.0], [-0.824499965, 11.0, 12.0, 1.0], [-0.0310500003, 13.0, 14.0, 0.0], [0.474999994, 15.0, 16.0, 2.0], [-0.221500009, 17.0, 18.0, 0.0], [-0.206499994, 19.0, 20.0, 0.0], [0.250986218, 0.0, 0.0, 0.0], [-0.730499983, 21.0, 22.0, 1.0], [-0.983500004, 23.0, 24.0, 4.0], [-0.31057027, 0.0, 0.0, 0.0], [0.325999975, 25.0, 26.0, 2.0], [-0.925500035, 27.0, 28.0, 4.0], [-0.148571923, 0.0, 0.0, 0.0], [0.0366329961, 0.0, 0.0, 0.0], [0.096188046, 0.0, 0.0, 0.0], [-0.0426373035, 0.0, 0.0, 0.0], [-0.583346248, 0.0, 0.0, 0.0], [-0.0946594104, 0.0, 0.0, 0.0], [-0.0844993815, 0.0, 0.0, 0.0], [0.261659741, 0.0, 0.0, 0.0], [0.0830648169, 0.0, 0.0, 0.0], [0.441608727, 0.0, 0.0, 0.0], [-0.13023901, 0.0, 0.0, 0.0], [0.300257713, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 21, 22, 23, 24, 14, 25, 26, 27, 28, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7, 13, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_73(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.374500006, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.654500008, 5.0, 6.0, 1.0], [-0.14183861, 0.0, 0.0, 0.0], [0.352384418, 0.0, 0.0, 0.0], [-0.951499999, 7.0, 8.0, 3.0], [-0.16049999, 9.0, 10.0, 0.0], [-0.95449996, 11.0, 12.0, 3.0], [-0.229499996, 13.0, 14.0, 0.0], [-0.86650002, 15.0, 16.0, 4.0], [-0.506999969, 17.0, 18.0, 1.0], [-0.281499982, 19.0, 20.0, 0.0], [0.63226068, 0.0, 0.0, 0.0], [-0.260999978, 21.0, 22.0, 0.0], [-0.944499969, 23.0, 24.0, 3.0], [-0.359000027, 25.0, 26.0, 0.0], [-0.319999993, 27.0, 28.0, 0.0], [0.0476000011, 29.0, 30.0, 0.0], [-0.421999991, 31.0, 32.0, 1.0], [0.110766456, 0.0, 0.0, 0.0], [-0.0533243455, 0.0, 0.0, 0.0], [-0.259616435, 0.0, 0.0, 0.0], [0.287773043, 0.0, 0.0, 0.0], [0.0724250227, 0.0, 0.0, 0.0], [-0.431793958, 0.0, 0.0, 0.0], [-0.517154276, 0.0, 0.0, 0.0], [0.137289822, 0.0, 0.0, 0.0], [0.201694712, 0.0, 0.0, 0.0], [-0.400650173, 0.0, 0.0, 0.0], [-0.40583536, 0.0, 0.0, 0.0], [-0.0461971797, 0.0, 0.0, 0.0], [0.127852097, 0.0, 0.0, 0.0], [-0.23695755, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 19, 20, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 8, 13, 14, 6, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_74(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.24849999, 1.0, 2.0, 0.0], [0.652500033, 3.0, 4.0, 2.0], [-0.361499995, 5.0, 6.0, 1.0], [-0.558500051, 7.0, 8.0, 1.0], [0.735499978, 9.0, 10.0, 2.0], [-0.0731000006, 11.0, 12.0, 0.0], [0.353777915, 0.0, 0.0, 0.0], [-0.891499996, 13.0, 14.0, 4.0], [-0.953500032, 15.0, 16.0, 4.0], [-0.940999985, 17.0, 18.0, 3.0], [-0.335500002, 19.0, 20.0, 0.0], [-0.101500005, 21.0, 22.0, 0.0], [-0.678499997, 23.0, 24.0, 1.0], [-0.972499967, 25.0, 26.0, 4.0], [0.409338802, 0.0, 0.0, 0.0], [-0.967499971, 27.0, 28.0, 4.0], [0.523999989, 29.0, 30.0, 2.0], [-0.993999958, 31.0, 32.0, 3.0], [-0.272500008, 33.0, 34.0, 0.0], [-0.975499988, 35.0, 36.0, 3.0], [-0.916499972, 37.0, 38.0, 4.0], [-0.686499953, 39.0, 40.0, 1.0], [-0.99849999, 41.0, 42.0, 3.0], [-0.0603, 43.0, 44.0, 0.0], [0.0152149992, 45.0, 46.0, 0.0], [-0.0596086197, 0.0, 0.0, 0.0], [-0.394334525, 0.0, 0.0, 0.0], [-0.021027511, 0.0, 0.0, 0.0], [0.868587613, 0.0, 0.0, 0.0], [0.452611506, 0.0, 0.0, 0.0], [-0.0689107627, 0.0, 0.0, 0.0], [-0.174890384, 0.0, 0.0, 0.0], [-0.589398146, 0.0, 0.0, 0.0], [-0.33468765, 0.0, 0.0, 0.0], [0.287003875, 0.0, 0.0, 0.0], [-0.0751084089, 0.0, 0.0, 0.0], [-0.358004034, 0.0, 0.0, 0.0], [-0.33341071, 0.0, 0.0, 0.0], [0.293117195, 0.0, 0.0, 0.0], [0.101471625, 0.0, 0.0, 0.0], [-0.0244147461, 0.0, 0.0, 0.0], [-0.0682957768, 0.0, 0.0, 0.0], [0.351336241, 0.0, 0.0, 0.0], [-0.458449632, 0.0, 0.0, 0.0], [-0.0997622982, 0.0, 0.0, 0.0], [0.299602807, 0.0, 0.0, 0.0], [-0.310388297, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 9, 17, 18, 10, 19, 20, 2, 5, 11, 21, 22, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_75(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.371500015, 1.0, 2.0, 2.0], [-0.401499987, 3.0, 4.0, 2.0], [-0.288732648, 0.0, 0.0, 0.0], [-0.146499991, 5.0, 6.0, 0.0], [0.299585551, 0.0, 0.0, 0.0], [-0.185499996, 7.0, 8.0, 0.0], [-0.134499997, 9.0, 10.0, 0.0], [-0.193500012, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.136500001, 15.0, 16.0, 0.0], [0.01315, 17.0, 18.0, 0.0], [-0.0233770553, 0.0, 0.0, 0.0], [0.344972581, 0.0, 0.0, 0.0], [-0.376631707, 0.0, 0.0, 0.0], [-0.163379192, 0.0, 0.0, 0.0], [0.070660226, 0.0, 0.0, 0.0], [0.746277869, 0.0, 0.0, 0.0], [-0.0328749493, 0.0, 0.0, 0.0], [0.0223111454, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_76(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.96449995, 1.0, 2.0, 1.0], [0.01315, 3.0, 4.0, 0.0], [-0.287150323, 0.0, 0.0, 0.0], [0.000549999997, 5.0, 6.0, 0.0], [0.0234000012, 7.0, 8.0, 0.0], [-0.000780000002, 9.0, 10.0, 0.0], [0.00588999968, 11.0, 12.0, 0.0], [-0.425205439, 0.0, 0.0, 0.0], [0.02685, 13.0, 14.0, 0.0], [-0.00163000007, 15.0, 16.0, 0.0], [-0.000469999999, 17.0, 18.0, 0.0], [0.00325499987, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.999500036, 23.0, 24.0, 4.0], [0.0353999995, 25.0, 26.0, 0.0], [-0.00839844812, 0.0, 0.0, 0.0], [0.45435366, 0.0, 0.0, 0.0], [-0.43649593, 0.0, 0.0, 0.0], [-0.040297363, 0.0, 0.0, 0.0], [0.238724127, 0.0, 0.0, 0.0], [0.631346226, 0.0, 0.0, 0.0], [-0.219037354, 0.0, 0.0, 0.0], [0.314739823, 0.0, 0.0, 0.0], [0.616851509, 0.0, 0.0, 0.0], [0.0402409211, 0.0, 0.0, 0.0], [-0.274720997, 0.0, 0.0, 0.0], [0.0178736057, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 20, 21, 22, 7, 23, 24, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_77(xs):
    #Predicts Class 5
    function_dict = np.array([[0.166000009, 1.0, 2.0, 2.0], [0.436500013, 3.0, 4.0, 0.0], [-0.276595503, 0.0, 0.0, 0.0], [0.434499979, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [-0.149500012, 9.0, 10.0, 0.0], [-0.930263162, 0.0, 0.0, 0.0], [0.485028327, 0.0, 0.0, 0.0], [0.455500007, 11.0, 12.0, 0.0], [-0.169499993, 13.0, 14.0, 0.0], [-0.0807500035, 15.0, 16.0, 0.0], [0.446500003, 17.0, 18.0, 0.0], [0.521499991, 19.0, 20.0, 0.0], [-0.0266662687, 0.0, 0.0, 0.0], [0.410512269, 0.0, 0.0, 0.0], [-0.360726684, 0.0, 0.0, 0.0], [-0.00362714985, 0.0, 0.0, 0.0], [0.0524822958, 0.0, 0.0, 0.0], [-0.429208964, 0.0, 0.0, 0.0], [0.168268725, 0.0, 0.0, 0.0], [-0.0217102598, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 7, 17, 18, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_78(xs):
    #Predicts Class 0
    function_dict = np.array([[0.414499998, 1.0, 2.0, 2.0], [-0.790500045, 3.0, 4.0, 1.0], [0.417500019, 5.0, 6.0, 2.0], [-0.968999982, 7.0, 8.0, 4.0], [-0.932999969, 9.0, 10.0, 4.0], [0.412530988, 0.0, 0.0, 0.0], [-0.752499998, 11.0, 12.0, 1.0], [-0.973500013, 13.0, 14.0, 4.0], [-0.272500008, 15.0, 16.0, 0.0], [-0.941499949, 17.0, 18.0, 3.0], [-0.2095, 19.0, 20.0, 0.0], [-0.975499988, 21.0, 22.0, 3.0], [-0.932500005, 23.0, 24.0, 3.0], [-0.98150003, 25.0, 26.0, 4.0], [-0.181999996, 27.0, 28.0, 0.0], [-0.164542913, 0.0, 0.0, 0.0], [0.343999982, 29.0, 30.0, 2.0], [-0.0655499995, 31.0, 32.0, 0.0], [-0.963999987, 33.0, 34.0, 4.0], [-0.993000031, 35.0, 36.0, 3.0], [-0.990999997, 37.0, 38.0, 3.0], [-0.948500037, 39.0, 40.0, 4.0], [-0.237500012, 41.0, 42.0, 0.0], [0.485500008, 43.0, 44.0, 2.0], [-0.710000038, 45.0, 46.0, 1.0], [-0.216898829, 0.0, 0.0, 0.0], [0.131902337, 0.0, 0.0, 0.0], [-0.0193525199, 0.0, 0.0, 0.0], [-0.72554183, 0.0, 0.0, 0.0], [0.0501892082, 0.0, 0.0, 0.0], [0.384197116, 0.0, 0.0, 0.0], [-0.534923553, 0.0, 0.0, 0.0], [-0.1136242, 0.0, 0.0, 0.0], [-0.183443174, 0.0, 0.0, 0.0], [0.225062624, 0.0, 0.0, 0.0], [0.523866892, 0.0, 0.0, 0.0], [-0.0514398664, 0.0, 0.0, 0.0], [-0.403277516, 0.0, 0.0, 0.0], [-0.0409319699, 0.0, 0.0, 0.0], [-0.071979247, 0.0, 0.0, 0.0], [0.147217348, 0.0, 0.0, 0.0], [-0.0600490719, 0.0, 0.0, 0.0], [0.408637106, 0.0, 0.0, 0.0], [-0.181955576, 0.0, 0.0, 0.0], [0.025927769, 0.0, 0.0, 0.0], [-0.513561428, 0.0, 0.0, 0.0], [-0.0695744157, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 15, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 5, 39, 40, 41, 42, 43, 44, 45, 46])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 9, 17, 18, 10, 19, 20, 2, 6, 11, 21, 22, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_79(xs):
    #Predicts Class 1
    function_dict = np.array([[0.455500007, 1.0, 2.0, 2.0], [-0.971500039, 3.0, 4.0, 4.0], [-0.850499988, 5.0, 6.0, 1.0], [0.412999988, 7.0, 8.0, 2.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.36657092, 0.0, 0.0, 0.0], [0.457499981, 11.0, 12.0, 2.0], [0.33950001, 13.0, 14.0, 2.0], [-0.733999968, 15.0, 16.0, 1.0], [0.3935, 17.0, 18.0, 2.0], [-0.978500009, 19.0, 20.0, 3.0], [-0.34658727, 0.0, 0.0, 0.0], [-0.80250001, 21.0, 22.0, 1.0], [-0.219500005, 23.0, 24.0, 0.0], [-0.965499997, 25.0, 26.0, 3.0], [0.443499982, 27.0, 28.0, 2.0], [0.26790604, 0.0, 0.0, 0.0], [-0.997500002, 29.0, 30.0, 3.0], [-0.950500011, 31.0, 32.0, 4.0], [-0.196500003, 33.0, 34.0, 0.0], [-0.960500002, 35.0, 36.0, 3.0], [-0.968500018, 37.0, 38.0, 3.0], [-0.794499993, 39.0, 40.0, 1.0], [0.106912032, 0.0, 0.0, 0.0], [-0.19844532, 0.0, 0.0, 0.0], [0.282995194, 0.0, 0.0, 0.0], [-0.0900202021, 0.0, 0.0, 0.0], [-0.475896358, 0.0, 0.0, 0.0], [-0.0314562693, 0.0, 0.0, 0.0], [-0.266197532, 0.0, 0.0, 0.0], [0.2482187, 0.0, 0.0, 0.0], [0.690346956, 0.0, 0.0, 0.0], [0.224079579, 0.0, 0.0, 0.0], [-0.274868041, 0.0, 0.0, 0.0], [0.123542674, 0.0, 0.0, 0.0], [0.557076156, 0.0, 0.0, 0.0], [-0.0277305394, 0.0, 0.0, 0.0], [0.207692474, 0.0, 0.0, 0.0], [-0.282336801, 0.0, 0.0, 0.0], [-0.412573606, 0.0, 0.0, 0.0], [-0.022639852, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 16, 29, 30, 31, 32, 33, 34, 35, 36, 5, 11, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 9, 17, 18, 10, 19, 20, 2, 6, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_80(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.961500049, 3.0, 4.0, 4.0], [-0.75849998, 5.0, 6.0, 1.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.109499998, 9.0, 10.0, 0.0], [-0.759500027, 11.0, 12.0, 1.0], [-0.968500018, 13.0, 14.0, 4.0], [-0.230500013, 15.0, 16.0, 0.0], [-0.0578499995, 17.0, 18.0, 0.0], [-0.374999255, 0.0, 0.0, 0.0], [0.0169965513, 0.0, 0.0, 0.0], [-0.970499992, 19.0, 20.0, 3.0], [0.739985347, 0.0, 0.0, 0.0], [-0.972499967, 21.0, 22.0, 4.0], [-0.750999987, 23.0, 24.0, 1.0], [-0.295751899, 0.0, 0.0, 0.0], [-0.966500044, 25.0, 26.0, 4.0], [-0.337572545, 0.0, 0.0, 0.0], [-0.032850001, 27.0, 28.0, 0.0], [-0.309326679, 0.0, 0.0, 0.0], [0.486451626, 0.0, 0.0, 0.0], [0.555500031, 29.0, 30.0, 2.0], [-0.176499993, 31.0, 32.0, 0.0], [-0.374461025, 0.0, 0.0, 0.0], [-0.889500022, 33.0, 34.0, 4.0], [0.0601983927, 0.0, 0.0, 0.0], [0.662758231, 0.0, 0.0, 0.0], [0.0713354796, 0.0, 0.0, 0.0], [-0.228916869, 0.0, 0.0, 0.0], [-0.111747764, 0.0, 0.0, 0.0], [0.226986393, 0.0, 0.0, 0.0], [-0.492046624, 0.0, 0.0, 0.0], [-0.0242535453, 0.0, 0.0, 0.0], [0.0899732113, 0.0, 0.0, 0.0], [-0.018240476, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 25, 26, 17, 27, 28, 9, 10, 19, 20, 12, 29, 30, 31, 32, 23, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 18, 4, 2, 5, 11, 6, 13, 21, 22, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_81(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.371500015, 1.0, 2.0, 2.0], [-0.721500039, 3.0, 4.0, 2.0], [-0.244402155, 0.0, 0.0, 0.0], [-0.770500004, 5.0, 6.0, 2.0], [0.00720999995, 7.0, 8.0, 0.0], [-0.795000017, 9.0, 10.0, 2.0], [-0.057, 11.0, 12.0, 0.0], [-0.00657499954, 13.0, 14.0, 0.0], [0.0921500027, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 3.0], [0.0296999998, 19.0, 20.0, 0.0], [0.238635093, 0.0, 0.0, 0.0], [0.080249995, 21.0, 22.0, 0.0], [-0.0749000013, 23.0, 24.0, 0.0], [-0.524257123, 0.0, 0.0, 0.0], [0.481200606, 0.0, 0.0, 0.0], [-0.626000047, 25.0, 26.0, 2.0], [0.00361618516, 0.0, 0.0, 0.0], [-0.252762526, 0.0, 0.0, 0.0], [0.562654793, 0.0, 0.0, 0.0], [-0.14106755, 0.0, 0.0, 0.0], [-0.514158249, 0.0, 0.0, 0.0], [-0.0841187313, 0.0, 0.0, 0.0], [-0.0945283696, 0.0, 0.0, 0.0], [0.242202878, 0.0, 0.0, 0.0], [0.30062288, 0.0, 0.0, 0.0], [-0.171681836, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 21, 22, 23, 24, 14, 15, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7, 13, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_82(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.680500031, 3.0, 4.0, 2.0], [-0.999500036, 5.0, 6.0, 1.0], [-0.721500039, 7.0, 8.0, 2.0], [0.005045, 9.0, 10.0, 0.0], [0.218756333, 0.0, 0.0, 0.0], [-0.0813999996, 11.0, 12.0, 0.0], [-0.747500002, 13.0, 14.0, 2.0], [-0.198500007, 15.0, 16.0, 0.0], [-0.0370500013, 17.0, 18.0, 0.0], [0.0815500021, 19.0, 20.0, 0.0], [-0.20449999, 21.0, 22.0, 0.0], [-0.424499989, 23.0, 24.0, 2.0], [-0.795000017, 25.0, 26.0, 2.0], [-0.0566500016, 27.0, 28.0, 0.0], [0.261693776, 0.0, 0.0, 0.0], [-0.633197129, 0.0, 0.0, 0.0], [-0.112000003, 29.0, 30.0, 0.0], [-0.57949996, 31.0, 32.0, 2.0], [-0.482662141, 0.0, 0.0, 0.0], [0.0668586195, 0.0, 0.0, 0.0], [-0.549499989, 33.0, 34.0, 2.0], [-0.994500041, 35.0, 36.0, 4.0], [0.0331000015, 37.0, 38.0, 0.0], [0.043470487, 0.0, 0.0, 0.0], [0.00313765788, 0.0, 0.0, 0.0], [-0.174718156, 0.0, 0.0, 0.0], [-0.107890896, 0.0, 0.0, 0.0], [0.694498479, 0.0, 0.0, 0.0], [0.220225066, 0.0, 0.0, 0.0], [-0.111484572, 0.0, 0.0, 0.0], [0.70257622, 0.0, 0.0, 0.0], [0.0633453429, 0.0, 0.0, 0.0], [0.0496530831, 0.0, 0.0, 0.0], [-0.27037853, 0.0, 0.0, 0.0], [0.357027113, 0.0, 0.0, 0.0], [-0.0232381169, 0.0, 0.0, 0.0], [-0.445635617, 0.0, 0.0, 0.0], [0.0146423206, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 15, 16, 29, 30, 31, 32, 19, 20, 5, 33, 34, 35, 36, 37, 38, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 9, 17, 18, 10, 2, 6, 11, 21, 22, 12, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_83(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.382499993, 1.0, 2.0, 0.0], [-0.394500017, 3.0, 4.0, 0.0], [-0.169499993, 5.0, 6.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [0.515984178, 0.0, 0.0, 0.0], [-0.706500053, 9.0, 10.0, 2.0], [-0.16049999, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [-0.367109895, 0.0, 0.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.601000011, 17.0, 18.0, 2.0], [-0.166500002, 19.0, 20.0, 0.0], [-0.155499995, 21.0, 22.0, 0.0], [-0.453500003, 23.0, 24.0, 0.0], [-0.46450001, 25.0, 26.0, 0.0], [-0.37640363, 0.0, 0.0, 0.0], [-0.294, 27.0, 28.0, 0.0], [0.39728269, 0.0, 0.0, 0.0], [-0.997500002, 29.0, 30.0, 4.0], [0.0574436337, 0.0, 0.0, 0.0], [0.414252341, 0.0, 0.0, 0.0], [-0.313710064, 0.0, 0.0, 0.0], [-0.153499991, 31.0, 32.0, 0.0], [-0.0568730198, 0.0, 0.0, 0.0], [0.265477359, 0.0, 0.0, 0.0], [0.120123163, 0.0, 0.0, 0.0], [-0.367850274, 0.0, 0.0, 0.0], [0.00234027626, 0.0, 0.0, 0.0], [-0.274512321, 0.0, 0.0, 0.0], [0.00109514245, 0.0, 0.0, 0.0], [-0.274517208, 0.0, 0.0, 0.0], [0.598635793, 0.0, 0.0, 0.0], [-0.00348477927, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 4, 15, 27, 28, 17, 29, 30, 19, 20, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 16, 10, 18, 6, 11, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_84(xs):
    #Predicts Class 0
    function_dict = np.array([[0.120499998, 1.0, 2.0, 0.0], [-0.615499973, 3.0, 4.0, 1.0], [-0.317715406, 0.0, 0.0, 0.0], [0.655499995, 5.0, 6.0, 2.0], [-0.597499967, 7.0, 8.0, 1.0], [-0.130499989, 9.0, 10.0, 0.0], [-0.847499967, 11.0, 12.0, 4.0], [0.590999961, 13.0, 14.0, 2.0], [-0.889500022, 15.0, 16.0, 4.0], [-0.89349997, 17.0, 18.0, 4.0], [0.523000002, 19.0, 20.0, 2.0], [-0.786000013, 21.0, 22.0, 1.0], [-0.273999989, 23.0, 24.0, 0.0], [-0.917000055, 25.0, 26.0, 4.0], [-0.879500031, 27.0, 28.0, 4.0], [-0.845000029, 29.0, 30.0, 3.0], [0.801499963, 31.0, 32.0, 2.0], [0.0130149545, 0.0, 0.0, 0.0], [-0.204653203, 0.0, 0.0, 0.0], [-0.0135113383, 0.0, 0.0, 0.0], [0.380760849, 0.0, 0.0, 0.0], [-0.223561972, 0.0, 0.0, 0.0], [0.33424896, 0.0, 0.0, 0.0], [0.147242114, 0.0, 0.0, 0.0], [-0.409601569, 0.0, 0.0, 0.0], [0.00960024633, 0.0, 0.0, 0.0], [0.21653536, 0.0, 0.0, 0.0], [-0.269693524, 0.0, 0.0, 0.0], [-0.745267212, 0.0, 0.0, 0.0], [-0.222247571, 0.0, 0.0, 0.0], [0.407945216, 0.0, 0.0, 0.0], [0.129919127, 0.0, 0.0, 0.0], [-0.206828505, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_85(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.375499994, 1.0, 2.0, 0.0], [-0.999500036, 3.0, 4.0, 3.0], [-0.820500016, 5.0, 6.0, 1.0], [-0.141805604, 0.0, 0.0, 0.0], [0.332629919, 0.0, 0.0, 0.0], [-0.988499999, 7.0, 8.0, 3.0], [-0.999500036, 9.0, 10.0, 3.0], [-0.161500007, 11.0, 12.0, 0.0], [-0.969500005, 13.0, 14.0, 3.0], [0.604499996, 15.0, 16.0, 2.0], [0.503499985, 17.0, 18.0, 2.0], [-0.99849999, 19.0, 20.0, 3.0], [-0.871999979, 21.0, 22.0, 1.0], [-0.978500009, 23.0, 24.0, 3.0], [-0.270652413, 0.0, 0.0, 0.0], [0.504000008, 25.0, 26.0, 2.0], [-0.285212308, 0.0, 0.0, 0.0], [-0.995499969, 27.0, 28.0, 3.0], [0.554499984, 29.0, 30.0, 2.0], [0.00781202596, 0.0, 0.0, 0.0], [-0.431281626, 0.0, 0.0, 0.0], [-0.296424806, 0.0, 0.0, 0.0], [0.165265262, 0.0, 0.0, 0.0], [0.0446047261, 0.0, 0.0, 0.0], [0.449873954, 0.0, 0.0, 0.0], [0.020045191, 0.0, 0.0, 0.0], [0.457420051, 0.0, 0.0, 0.0], [0.157460093, 0.0, 0.0, 0.0], [-0.0164436493, 0.0, 0.0, 0.0], [-0.177601337, 0.0, 0.0, 0.0], [0.0107933693, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 19, 20, 21, 22, 23, 24, 14, 25, 26, 16, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 8, 13, 6, 9, 15, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_86(xs):
    #Predicts Class 2
    function_dict = np.array([[0.868999958, 1.0, 2.0, 2.0], [0.84800005, 3.0, 4.0, 2.0], [-0.135499999, 5.0, 6.0, 0.0], [-0.986500025, 7.0, 8.0, 4.0], [-0.360002965, 0.0, 0.0, 0.0], [0.370644003, 0.0, 0.0, 0.0], [0.0727208704, 0.0, 0.0, 0.0], [-0.0577000007, 9.0, 10.0, 0.0], [0.801499963, 11.0, 12.0, 2.0], [-0.335550308, 0.0, 0.0, 0.0], [-0.0475528575, 0.0, 0.0, 0.0], [0.79550004, 13.0, 14.0, 2.0], [-0.85800004, 15.0, 16.0, 4.0], [0.00294199074, 0.0, 0.0, 0.0], [-0.437886059, 0.0, 0.0, 0.0], [-0.0305492934, 0.0, 0.0, 0.0], [0.377795756, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 13, 14, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_87(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.493000001, 3.0, 4.0, 2.0], [-0.0439999998, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.246999994, 9.0, 10.0, 0.0], [-0.275058657, 0.0, 0.0, 0.0], [-0.00396312587, 0.0, 0.0, 0.0], [-0.524500012, 11.0, 12.0, 0.0], [-0.294, 13.0, 14.0, 0.0], [0.362045199, 0.0, 0.0, 0.0], [0.116999999, 15.0, 16.0, 0.0], [-0.552999973, 17.0, 18.0, 0.0], [-0.996500015, 19.0, 20.0, 1.0], [0.37791279, 0.0, 0.0, 0.0], [-0.284500003, 21.0, 22.0, 0.0], [-0.122741342, 0.0, 0.0, 0.0], [0.283890992, 0.0, 0.0, 0.0], [-0.0614757091, 0.0, 0.0, 0.0], [0.241788685, 0.0, 0.0, 0.0], [-0.348005474, 0.0, 0.0, 0.0], [0.0414744467, 0.0, 0.0, 0.0], [-0.300912708, 0.0, 0.0, 0.0], [0.00243725721, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 21, 22, 9, 15, 16, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 4, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_88(xs):
    #Predicts Class 4
    function_dict = np.array([[0.194499999, 1.0, 2.0, 0.0], [0.190499991, 3.0, 4.0, 0.0], [0.202500001, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.452686995, 0.0, 0.0, 0.0], [-0.220429823, 0.0, 0.0, 0.0], [0.0469270833, 0.0, 0.0, 0.0], [0.0912000015, 9.0, 10.0, 0.0], [0.141499996, 11.0, 12.0, 0.0], [0.0894500017, 13.0, 14.0, 0.0], [0.0923999995, 15.0, 16.0, 0.0], [0.111500002, 17.0, 18.0, 0.0], [0.157999992, 19.0, 20.0, 0.0], [0.00710247038, 0.0, 0.0, 0.0], [-0.34704724, 0.0, 0.0, 0.0], [0.48847276, 0.0, 0.0, 0.0], [0.0730930269, 0.0, 0.0, 0.0], [-0.0944344625, 0.0, 0.0, 0.0], [-0.37477693, 0.0, 0.0, 0.0], [0.522439957, 0.0, 0.0, 0.0], [-0.287686229, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 17, 18, 19, 20, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_89(xs):
    #Predicts Class 5
    function_dict = np.array([[0.541499972, 1.0, 2.0, 0.0], [0.5255, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [-0.885499954, 7.0, 8.0, 2.0], [-0.999500036, 9.0, 10.0, 1.0], [0.543500006, 11.0, 12.0, 0.0], [0.612500012, 13.0, 14.0, 0.0], [0.513000011, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.534999967, 19.0, 20.0, 0.0], [-0.747126818, 0.0, 0.0, 0.0], [0.2955724, 0.0, 0.0, 0.0], [0.549999952, 21.0, 22.0, 0.0], [0.457559347, 0.0, 0.0, 0.0], [-0.0737301335, 0.0, 0.0, 0.0], [0.503000021, 23.0, 24.0, 0.0], [-0.972000003, 25.0, 26.0, 2.0], [-0.433743775, 0.0, 0.0, 0.0], [-0.337500006, 27.0, 28.0, 0.0], [0.101347297, 0.0, 0.0, 0.0], [0.539999962, 29.0, 30.0, 0.0], [-0.389480203, 0.0, 0.0, 0.0], [0.561499953, 31.0, 32.0, 0.0], [0.0229778364, 0.0, 0.0, 0.0], [-0.299986541, 0.0, 0.0, 0.0], [0.469820231, 0.0, 0.0, 0.0], [-0.227339238, 0.0, 0.0, 0.0], [0.183727384, 0.0, 0.0, 0.0], [-0.0873981416, 0.0, 0.0, 0.0], [-0.189824313, 0.0, 0.0, 0.0], [-0.000894038414, 0.0, 0.0, 0.0], [0.190038145, 0.0, 0.0, 0.0], [-0.0664684027, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 27, 28, 19, 29, 30, 10, 11, 21, 31, 32, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 9, 20, 2, 5, 12, 22, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_90(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.490500003, 3.0, 4.0, 1.0], [-0.466499984, 5.0, 6.0, 1.0], [0.259499997, 7.0, 8.0, 2.0], [0.322212547, 0.0, 0.0, 0.0], [-0.400258124, 0.0, 0.0, 0.0], [-0.461499989, 9.0, 10.0, 1.0], [-0.987499952, 11.0, 12.0, 3.0], [-0.759500027, 13.0, 14.0, 1.0], [-0.464999974, 15.0, 16.0, 1.0], [-0.978500009, 17.0, 18.0, 3.0], [-0.26863423, 0.0, 0.0, 0.0], [-0.0233238377, 0.0, 0.0, 0.0], [-0.761500001, 19.0, 20.0, 1.0], [-0.155499995, 21.0, 22.0, 0.0], [0.0543590151, 0.0, 0.0, 0.0], [0.297659695, 0.0, 0.0, 0.0], [-0.344806939, 0.0, 0.0, 0.0], [-0.946500003, 23.0, 24.0, 3.0], [0.0408551879, 0.0, 0.0, 0.0], [0.448747456, 0.0, 0.0, 0.0], [-0.0522773303, 0.0, 0.0, 0.0], [0.0716326535, 0.0, 0.0, 0.0], [0.32181707, 0.0, 0.0, 0.0], [-0.254402757, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 19, 20, 21, 22, 4, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 8, 13, 14, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_91(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 3.0], [-0.132499993, 3.0, 4.0, 0.0], [-0.99150002, 5.0, 6.0, 3.0], [0.435499996, 7.0, 8.0, 2.0], [0.0696500018, 9.0, 10.0, 0.0], [-0.726999998, 11.0, 12.0, 1.0], [-0.723500013, 13.0, 14.0, 1.0], [-0.995499969, 15.0, 16.0, 3.0], [-0.654500008, 17.0, 18.0, 1.0], [-0.360480666, 0.0, 0.0, 0.0], [-0.996500015, 19.0, 20.0, 3.0], [-0.967000008, 21.0, 22.0, 4.0], [-0.955000043, 23.0, 24.0, 4.0], [-0.183499992, 25.0, 26.0, 0.0], [-0.718500018, 27.0, 28.0, 1.0], [0.3935, 29.0, 30.0, 2.0], [-0.95599997, 31.0, 32.0, 4.0], [-0.887500048, 33.0, 34.0, 4.0], [-0.875, 35.0, 36.0, 4.0], [-0.105925269, 0.0, 0.0, 0.0], [0.220761329, 0.0, 0.0, 0.0], [-0.222499996, 37.0, 38.0, 0.0], [0.448500007, 39.0, 40.0, 2.0], [0.517839313, 0.0, 0.0, 0.0], [-0.287500024, 41.0, 42.0, 0.0], [-0.213499993, 43.0, 44.0, 0.0], [-0.961500049, 45.0, 46.0, 4.0], [0.619035959, 0.0, 0.0, 0.0], [-0.98150003, 47.0, 48.0, 3.0], [0.0250653718, 0.0, 0.0, 0.0], [0.351977885, 0.0, 0.0, 0.0], [0.158033937, 0.0, 0.0, 0.0], [-0.394446343, 0.0, 0.0, 0.0], [-0.17373471, 0.0, 0.0, 0.0], [0.14005518, 0.0, 0.0, 0.0], [0.0994413868, 0.0, 0.0, 0.0], [-0.333901078, 0.0, 0.0, 0.0], [0.244086593, 0.0, 0.0, 0.0], [-0.236407146, 0.0, 0.0, 0.0], [0.169247344, 0.0, 0.0, 0.0], [0.740628719, 0.0, 0.0, 0.0], [-0.0548507795, 0.0, 0.0, 0.0], [-0.450541884, 0.0, 0.0, 0.0], [-0.0328267626, 0.0, 0.0, 0.0], [-0.390598834, 0.0, 0.0, 0.0], [0.338704348, 0.0, 0.0, 0.0], [-0.0934375077, 0.0, 0.0, 0.0], [0.180847555, 0.0, 0.0, 0.0], [-0.0258051958, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 35, 36, 9, 19, 20, 37, 38, 39, 40, 23, 41, 42, 43, 44, 45, 46, 27, 47, 48])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 10, 2, 5, 11, 21, 22, 12, 24, 6, 13, 25, 26, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_92(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.813500047, 1.0, 2.0, 1.0], [-0.980499983, 3.0, 4.0, 4.0], [-0.54550004, 5.0, 6.0, 4.0], [-0.985499978, 7.0, 8.0, 4.0], [-0.336224258, 0.0, 0.0, 0.0], [-0.159500003, 9.0, 10.0, 1.0], [-0.282225192, 0.0, 0.0, 0.0], [-0.274926573, 0.0, 0.0, 0.0], [0.273505777, 0.0, 0.0, 0.0], [-0.33950001, 11.0, 12.0, 0.0], [0.284892529, 0.0, 0.0, 0.0], [-0.476999998, 13.0, 14.0, 1.0], [-0.336499989, 15.0, 16.0, 0.0], [-0.344050944, 0.0, 0.0, 0.0], [0.0102592381, 0.0, 0.0, 0.0], [0.420657545, 0.0, 0.0, 0.0], [0.0116835861, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 14, 15, 16, 10, 6])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_93(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [0.618499994, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 3.0], [0.615499973, 7.0, 8.0, 0.0], [0.620499969, 9.0, 10.0, 0.0], [-0.997500002, 11.0, 12.0, 1.0], [-0.272414833, 0.0, 0.0, 0.0], [0.588, 13.0, 14.0, 0.0], [0.409445047, 0.0, 0.0, 0.0], [-0.350774169, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.127783492, 0.0, 0.0, 0.0], [0.091282703, 0.0, 0.0, 0.0], [0.561499953, 17.0, 18.0, 0.0], [-0.305793196, 0.0, 0.0, 0.0], [0.621500015, 19.0, 20.0, 0.0], [-0.263279051, 0.0, 0.0, 0.0], [0.00137401361, 0.0, 0.0, 0.0], [0.160666063, 0.0, 0.0, 0.0], [0.351999283, 0.0, 0.0, 0.0], [-0.0225926079, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 19, 20, 16, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 15, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_94(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [0.203500003, 3.0, 4.0, 0.0], [-0.218613148, 0.0, 0.0, 0.0], [0.141499996, 5.0, 6.0, 0.0], [-0.249625817, 0.0, 0.0, 0.0], [0.111500002, 7.0, 8.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [0.107500002, 11.0, 12.0, 0.0], [-0.326773345, 0.0, 0.0, 0.0], [0.430904388, 0.0, 0.0, 0.0], [0.190499991, 13.0, 14.0, 0.0], [0.00327045121, 0.0, 0.0, 0.0], [0.290132493, 0.0, 0.0, 0.0], [-0.25399524, 0.0, 0.0, 0.0], [0.114187934, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_95(xs):
    #Predicts Class 5
    function_dict = np.array([[0.201499999, 1.0, 2.0, 0.0], [-0.0123999994, 3.0, 4.0, 0.0], [0.212500006, 5.0, 6.0, 0.0], [-0.0371000022, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.203500003, 11.0, 12.0, 0.0], [0.256500006, 13.0, 14.0, 0.0], [-0.0556499995, 15.0, 16.0, 0.0], [-0.0293500014, 17.0, 18.0, 0.0], [-0.367344975, 0.0, 0.0, 0.0], [0.172499999, 19.0, 20.0, 0.0], [0.202500001, 21.0, 22.0, 0.0], [0.386730313, 0.0, 0.0, 0.0], [0.228500009, 23.0, 24.0, 0.0], [0.264499992, 25.0, 26.0, 0.0], [-0.080400005, 27.0, 28.0, 0.0], [-0.311294705, 0.0, 0.0, 0.0], [0.573848486, 0.0, 0.0, 0.0], [0.0179645922, 0.0, 0.0, 0.0], [-0.662999988, 29.0, 30.0, 2.0], [0.290689111, 0.0, 0.0, 0.0], [0.129778281, 0.0, 0.0, 0.0], [0.034248516, 0.0, 0.0, 0.0], [-0.999500036, 31.0, 32.0, 1.0], [0.253499985, 33.0, 34.0, 0.0], [-0.999500036, 35.0, 36.0, 4.0], [0.363499999, 37.0, 38.0, 0.0], [-0.03952327, 0.0, 0.0, 0.0], [0.218960598, 0.0, 0.0, 0.0], [-0.298565805, 0.0, 0.0, 0.0], [0.107247137, 0.0, 0.0, 0.0], [-0.30847013, 0.0, 0.0, 0.0], [0.297658443, 0.0, 0.0, 0.0], [-0.470161885, 0.0, 0.0, 0.0], [-0.142151996, 0.0, 0.0, 0.0], [0.552028775, 0.0, 0.0, 0.0], [0.026910821, 0.0, 0.0, 0.0], [-0.151238024, 0.0, 0.0, 0.0], [0.0306513365, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 17, 18, 9, 29, 30, 20, 21, 22, 12, 31, 32, 33, 34, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 19, 2, 5, 11, 6, 13, 23, 24, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_96(xs):
    #Predicts Class 0
    function_dict = np.array([[0.120499998, 1.0, 2.0, 0.0], [0.0999500006, 3.0, 4.0, 0.0], [-0.274540126, 0.0, 0.0, 0.0], [-0.365500003, 5.0, 6.0, 0.0], [0.257333487, 0.0, 0.0, 0.0], [-0.267899364, 0.0, 0.0, 0.0], [-0.346499979, 7.0, 8.0, 0.0], [-0.868000031, 9.0, 10.0, 4.0], [-0.317499995, 11.0, 12.0, 0.0], [0.336910844, 0.0, 0.0, 0.0], [-0.149338931, 0.0, 0.0, 0.0], [-0.140669554, 0.0, 0.0, 0.0], [0.00333458022, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 10, 11, 12, 4, 2])
    branch_indices = np.array([0, 1, 3, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_97(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.885499954, 1.0, 2.0, 3.0], [-0.914499998, 3.0, 4.0, 3.0], [-0.75150001, 5.0, 6.0, 1.0], [-0.736000001, 7.0, 8.0, 4.0], [-0.361185789, 0.0, 0.0, 0.0], [-0.297005624, 0.0, 0.0, 0.0], [-0.901499987, 9.0, 10.0, 4.0], [-0.281499982, 11.0, 12.0, 0.0], [-0.337288916, 0.0, 0.0, 0.0], [-0.673500001, 13.0, 14.0, 3.0], [-0.337000012, 15.0, 16.0, 0.0], [-0.702499986, 17.0, 18.0, 1.0], [-0.273499995, 19.0, 20.0, 0.0], [0.624499977, 21.0, 22.0, 2.0], [-0.0880356655, 0.0, 0.0, 0.0], [0.329976231, 0.0, 0.0, 0.0], [-0.348029673, 0.0, 0.0, 0.0], [0.165752143, 0.0, 0.0, 0.0], [-0.0340282023, 0.0, 0.0, 0.0], [-0.25949192, 0.0, 0.0, 0.0], [-0.0056097284, 0.0, 0.0, 0.0], [0.503726721, 0.0, 0.0, 0.0], [0.155197844, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 21, 22, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 13, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_98(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.986500025, 1.0, 2.0, 4.0], [-0.0577000007, 3.0, 4.0, 0.0], [-0.855499983, 5.0, 6.0, 3.0], [-0.292524576, 0.0, 0.0, 0.0], [-0.0213816892, 0.0, 0.0, 0.0], [-0.911499977, 7.0, 8.0, 3.0], [-0.747500002, 9.0, 10.0, 3.0], [-0.56099999, 11.0, 12.0, 4.0], [-0.892500043, 13.0, 14.0, 3.0], [-0.713500023, 15.0, 16.0, 4.0], [-0.66900003, 17.0, 18.0, 3.0], [-0.962499976, 19.0, 20.0, 3.0], [-0.312256783, 0.0, 0.0, 0.0], [0.479690522, 0.0, 0.0, 0.0], [-0.88349998, 21.0, 22.0, 3.0], [-0.192499995, 23.0, 24.0, 0.0], [0.23134163, 0.0, 0.0, 0.0], [0.330469996, 0.0, 0.0, 0.0], [-0.509000003, 25.0, 26.0, 1.0], [0.029689936, 0.0, 0.0, 0.0], [-0.0778040364, 0.0, 0.0, 0.0], [-0.291897625, 0.0, 0.0, 0.0], [0.157312021, 0.0, 0.0, 0.0], [-0.119349018, 0.0, 0.0, 0.0], [-0.501284957, 0.0, 0.0, 0.0], [-0.245311841, 0.0, 0.0, 0.0], [0.143960267, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 19, 20, 12, 13, 21, 22, 23, 24, 16, 17, 25, 26])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 8, 14, 6, 9, 15, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_99(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.613499999, 3.0, 4.0, 2.0], [-0.999500036, 5.0, 6.0, 3.0], [-0.67050004, 7.0, 8.0, 2.0], [-0.206499994, 9.0, 10.0, 0.0], [-0.997500002, 11.0, 12.0, 1.0], [-0.244490758, 0.0, 0.0, 0.0], [-0.98150003, 13.0, 14.0, 1.0], [0.171250001, 15.0, 16.0, 0.0], [-0.260500014, 17.0, 18.0, 0.0], [-0.116000004, 19.0, 20.0, 0.0], [-0.112793729, 0.0, 0.0, 0.0], [0.0809084997, 0.0, 0.0, 0.0], [-0.99849999, 21.0, 22.0, 1.0], [0.271096885, 0.0, 0.0, 0.0], [-0.99849999, 23.0, 24.0, 4.0], [0.421999991, 25.0, 26.0, 0.0], [0.0278731436, 0.0, 0.0, 0.0], [0.445573121, 0.0, 0.0, 0.0], [-0.268201947, 0.0, 0.0, 0.0], [-0.546499968, 27.0, 28.0, 2.0], [0.00666546496, 0.0, 0.0, 0.0], [-0.103077658, 0.0, 0.0, 0.0], [-0.329929531, 0.0, 0.0, 0.0], [-0.00705562485, 0.0, 0.0, 0.0], [0.313827991, 0.0, 0.0, 0.0], [-0.0116307465, 0.0, 0.0, 0.0], [0.193110481, 0.0, 0.0, 0.0], [-0.0613226071, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 25, 26, 17, 18, 19, 27, 28, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 9, 10, 20, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_100(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.518000007, 1.0, 2.0, 0.0], [-0.244145721, 0.0, 0.0, 0.0], [-0.453500003, 3.0, 4.0, 0.0], [0.27506119, 0.0, 0.0, 0.0], [-0.412999988, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.407499999, 9.0, 10.0, 0.0], [-0.421000004, 11.0, 12.0, 0.0], [0.107552156, 0.0, 0.0, 0.0], [0.397595942, 0.0, 0.0, 0.0], [-0.378499985, 13.0, 14.0, 0.0], [-0.0982032642, 0.0, 0.0, 0.0], [-0.537109077, 0.0, 0.0, 0.0], [-0.259125352, 0.0, 0.0, 0.0], [0.00212683016, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 11, 12, 8, 9, 13, 14])
    branch_indices = np.array([0, 2, 4, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_101(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.984500051, 1.0, 2.0, 1.0], [-0.997500002, 3.0, 4.0, 1.0], [0.214499995, 5.0, 6.0, 0.0], [-0.851999998, 7.0, 8.0, 2.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.891000032, 11.0, 12.0, 1.0], [0.104597762, 0.0, 0.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [0.541999996, 15.0, 16.0, 0.0], [0.169499993, 17.0, 18.0, 0.0], [-0.626000047, 19.0, 20.0, 2.0], [-0.98150003, 21.0, 22.0, 1.0], [-0.072098501, 0.0, 0.0, 0.0], [-0.408500016, 23.0, 24.0, 0.0], [-0.0452999994, 25.0, 26.0, 0.0], [-0.335500002, 27.0, 28.0, 0.0], [0.332846522, 0.0, 0.0, 0.0], [-0.280367315, 0.0, 0.0, 0.0], [0.0348521397, 0.0, 0.0, 0.0], [-0.795000017, 29.0, 30.0, 2.0], [-0.0919000059, 31.0, 32.0, 0.0], [-0.075086683, 0.0, 0.0, 0.0], [-0.346909463, 0.0, 0.0, 0.0], [0.221355975, 0.0, 0.0, 0.0], [-0.00659810053, 0.0, 0.0, 0.0], [-0.196423188, 0.0, 0.0, 0.0], [0.429902703, 0.0, 0.0, 0.0], [0.0811136812, 0.0, 0.0, 0.0], [-0.353974402, 0.0, 0.0, 0.0], [0.0715274215, 0.0, 0.0, 0.0], [0.459573925, 0.0, 0.0, 0.0], [-0.139183164, 0.0, 0.0, 0.0], [0.104182281, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 16, 17, 18, 29, 30, 31, 32, 21, 22, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 9, 10, 19, 20, 2, 5, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_102(xs):
    #Predicts Class 0
    function_dict = np.array([[0.414499998, 1.0, 2.0, 2.0], [-0.782500029, 3.0, 4.0, 1.0], [0.430500001, 5.0, 6.0, 2.0], [-0.938500047, 7.0, 8.0, 4.0], [-0.921999991, 9.0, 10.0, 4.0], [-0.83950001, 11.0, 12.0, 1.0], [-0.24149999, 13.0, 14.0, 0.0], [-0.230500013, 15.0, 16.0, 0.0], [-0.948500037, 17.0, 18.0, 3.0], [-0.914499998, 19.0, 20.0, 3.0], [-0.2095, 21.0, 22.0, 0.0], [-0.191529736, 0.0, 0.0, 0.0], [-0.995499969, 23.0, 24.0, 3.0], [-0.25150001, 25.0, 26.0, 0.0], [-0.234499991, 27.0, 28.0, 0.0], [-0.825500011, 29.0, 30.0, 1.0], [0.343500018, 31.0, 32.0, 2.0], [0.334811836, 0.0, 0.0, 0.0], [0.0228252541, 0.0, 0.0, 0.0], [-0.0655499995, 33.0, 34.0, 0.0], [0.0382612161, 0.0, 0.0, 0.0], [0.221749917, 0.0, 0.0, 0.0], [-0.309586108, 0.0, 0.0, 0.0], [-0.0386901237, 0.0, 0.0, 0.0], [-0.924999952, 35.0, 36.0, 4.0], [0.446500003, 37.0, 38.0, 2.0], [-0.626999974, 39.0, 40.0, 1.0], [0.481000006, 41.0, 42.0, 2.0], [0.576499999, 43.0, 44.0, 2.0], [0.0432186387, 0.0, 0.0, 0.0], [-0.401333094, 0.0, 0.0, 0.0], [-0.112308092, 0.0, 0.0, 0.0], [0.219663948, 0.0, 0.0, 0.0], [-0.4179793, 0.0, 0.0, 0.0], [-0.0368473083, 0.0, 0.0, 0.0], [0.535194874, 0.0, 0.0, 0.0], [0.0131651666, 0.0, 0.0, 0.0], [-0.293063909, 0.0, 0.0, 0.0], [0.0313028283, 0.0, 0.0, 0.0], [0.485644966, 0.0, 0.0, 0.0], [0.00870667771, 0.0, 0.0, 0.0], [0.154443771, 0.0, 0.0, 0.0], [-0.358559519, 0.0, 0.0, 0.0], [-0.0473584831, 0.0, 0.0, 0.0], [0.0472169518, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 17, 18, 33, 34, 20, 21, 22, 11, 23, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 19, 10, 2, 5, 12, 24, 6, 13, 25, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_103(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.828500032, 1.0, 2.0, 1.0], [-0.92900002, 3.0, 4.0, 4.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.161500007, 7.0, 8.0, 0.0], [-0.290499985, 9.0, 10.0, 0.0], [-0.334500015, 11.0, 12.0, 0.0], [0.712499976, 13.0, 14.0, 2.0], [-0.999500036, 15.0, 16.0, 3.0], [-0.107500002, 17.0, 18.0, 0.0], [0.41285795, 0.0, 0.0, 0.0], [-0.0509764776, 0.0, 0.0, 0.0], [-0.963500023, 19.0, 20.0, 3.0], [-0.87349999, 21.0, 22.0, 4.0], [0.70449996, 23.0, 24.0, 2.0], [0.792500019, 25.0, 26.0, 2.0], [0.0539847128, 0.0, 0.0, 0.0], [0.294, 27.0, 28.0, 2.0], [-0.968999982, 29.0, 30.0, 4.0], [-0.246759906, 0.0, 0.0, 0.0], [-0.341499984, 31.0, 32.0, 0.0], [-0.648000002, 33.0, 34.0, 1.0], [-0.45449999, 35.0, 36.0, 1.0], [-0.581499994, 37.0, 38.0, 1.0], [0.636500001, 39.0, 40.0, 2.0], [-0.717499971, 41.0, 42.0, 1.0], [-0.422999978, 43.0, 44.0, 1.0], [-0.916499972, 45.0, 46.0, 4.0], [0.067838788, 0.0, 0.0, 0.0], [-0.372867405, 0.0, 0.0, 0.0], [0.296117663, 0.0, 0.0, 0.0], [-0.0477935001, 0.0, 0.0, 0.0], [0.013672174, 0.0, 0.0, 0.0], [-0.416622549, 0.0, 0.0, 0.0], [-0.136060745, 0.0, 0.0, 0.0], [0.315406948, 0.0, 0.0, 0.0], [0.430026472, 0.0, 0.0, 0.0], [0.0729994699, 0.0, 0.0, 0.0], [-0.34433651, 0.0, 0.0, 0.0], [0.129478216, 0.0, 0.0, 0.0], [0.0161939729, 0.0, 0.0, 0.0], [-0.144166008, 0.0, 0.0, 0.0], [0.491952598, 0.0, 0.0, 0.0], [0.125126407, 0.0, 0.0, 0.0], [-0.376083046, 0.0, 0.0, 0.0], [0.0330364555, 0.0, 0.0, 0.0], [0.315211624, 0.0, 0.0, 0.0], [-0.232242689, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 27, 28, 29, 30, 18, 9, 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 17, 4, 2, 5, 11, 19, 20, 12, 21, 22, 6, 13, 23, 24, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_104(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.813500047, 1.0, 2.0, 1.0], [-0.980499983, 3.0, 4.0, 4.0], [0.483500004, 5.0, 6.0, 2.0], [0.329999983, 7.0, 8.0, 2.0], [-0.30562973, 0.0, 0.0, 0.0], [0.477999985, 9.0, 10.0, 2.0], [0.513499975, 11.0, 12.0, 2.0], [-0.222864151, 0.0, 0.0, 0.0], [0.247178927, 0.0, 0.0, 0.0], [-0.934499979, 13.0, 14.0, 4.0], [0.718729496, 0.0, 0.0, 0.0], [-0.138999999, 15.0, 16.0, 0.0], [0.516499996, 17.0, 18.0, 2.0], [0.463499993, 19.0, 20.0, 2.0], [-0.144999996, 21.0, 22.0, 0.0], [-0.441284269, 0.0, 0.0, 0.0], [-0.931500018, 23.0, 24.0, 3.0], [-0.171999991, 25.0, 26.0, 0.0], [-0.712499976, 27.0, 28.0, 4.0], [0.134831846, 0.0, 0.0, 0.0], [-0.285666794, 0.0, 0.0, 0.0], [-0.341228306, 0.0, 0.0, 0.0], [0.117860407, 0.0, 0.0, 0.0], [0.214219466, 0.0, 0.0, 0.0], [-0.140765026, 0.0, 0.0, 0.0], [0.0842660889, 0.0, 0.0, 0.0], [0.461780697, 0.0, 0.0, 0.0], [-0.0106029063, 0.0, 0.0, 0.0], [0.183242947, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 19, 20, 21, 22, 10, 15, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 13, 14, 6, 11, 16, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_105(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.146499991, 1.0, 2.0, 0.0], [-0.999500036, 3.0, 4.0, 4.0], [-0.138500005, 5.0, 6.0, 0.0], [-0.995499969, 7.0, 8.0, 1.0], [-0.99849999, 9.0, 10.0, 1.0], [-0.140500009, 11.0, 12.0, 0.0], [-0.136500001, 13.0, 14.0, 0.0], [-0.282999992, 15.0, 16.0, 0.0], [0.316993803, 0.0, 0.0, 0.0], [-0.189999998, 17.0, 18.0, 0.0], [-0.99849999, 19.0, 20.0, 4.0], [-0.141499996, 21.0, 22.0, 0.0], [-0.139499992, 23.0, 24.0, 0.0], [-0.137499988, 25.0, 26.0, 0.0], [-0.134499997, 27.0, 28.0, 0.0], [-0.972000003, 29.0, 30.0, 2.0], [-0.185499996, 31.0, 32.0, 0.0], [-0.747500002, 33.0, 34.0, 2.0], [-0.972000003, 35.0, 36.0, 2.0], [-0.271134377, 0.0, 0.0, 0.0], [-0.997500002, 37.0, 38.0, 4.0], [-0.972000003, 39.0, 40.0, 2.0], [-0.25943771, 0.0, 0.0, 0.0], [0.533950865, 0.0, 0.0, 0.0], [0.0817417726, 0.0, 0.0, 0.0], [-0.0667499676, 0.0, 0.0, 0.0], [-0.371563047, 0.0, 0.0, 0.0], [-0.135500014, 41.0, 42.0, 0.0], [-0.127499998, 43.0, 44.0, 0.0], [0.182138503, 0.0, 0.0, 0.0], [-0.299532026, 0.0, 0.0, 0.0], [-0.161029428, 0.0, 0.0, 0.0], [-0.356425166, 0.0, 0.0, 0.0], [0.558121502, 0.0, 0.0, 0.0], [0.0576562323, 0.0, 0.0, 0.0], [0.0923018605, 0.0, 0.0, 0.0], [-0.225661427, 0.0, 0.0, 0.0], [0.153609976, 0.0, 0.0, 0.0], [-0.124696016, 0.0, 0.0, 0.0], [0.175382569, 0.0, 0.0, 0.0], [0.0111080147, 0.0, 0.0, 0.0], [0.123690464, 0.0, 0.0, 0.0], [0.523539007, 0.0, 0.0, 0.0], [-0.116339207, 0.0, 0.0, 0.0], [0.00427104766, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 8, 33, 34, 35, 36, 19, 37, 38, 39, 40, 22, 23, 24, 25, 26, 41, 42, 43, 44])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 17, 18, 10, 20, 2, 5, 11, 21, 12, 6, 13, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_106(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.192499995, 3.0, 4.0, 0.0], [-0.822000027, 5.0, 6.0, 2.0], [-0.999500036, 7.0, 8.0, 4.0], [-0.190499991, 9.0, 10.0, 0.0], [-0.300499976, 11.0, 12.0, 0.0], [-0.333499998, 13.0, 14.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [-0.770500004, 17.0, 18.0, 2.0], [-0.382045209, 0.0, 0.0, 0.0], [-0.186500013, 19.0, 20.0, 0.0], [-0.923500001, 21.0, 22.0, 2.0], [-0.184500009, 23.0, 24.0, 0.0], [-0.996500015, 25.0, 26.0, 1.0], [-0.260500014, 27.0, 28.0, 0.0], [-0.210500002, 29.0, 30.0, 0.0], [0.388673693, 0.0, 0.0, 0.0], [-0.259000003, 31.0, 32.0, 0.0], [0.0408555046, 0.0, 0.0, 0.0], [0.272066474, 0.0, 0.0, 0.0], [-0.999500036, 33.0, 34.0, 4.0], [-0.997500002, 35.0, 36.0, 1.0], [-0.183118314, 0.0, 0.0, 0.0], [-0.206499994, 37.0, 38.0, 0.0], [-0.148499995, 39.0, 40.0, 0.0], [-0.407000005, 41.0, 42.0, 0.0], [0.0590063967, 0.0, 0.0, 0.0], [0.302462965, 0.0, 0.0, 0.0], [-0.249500006, 43.0, 44.0, 0.0], [0.0961272195, 0.0, 0.0, 0.0], [-0.24095279, 0.0, 0.0, 0.0], [-0.497311205, 0.0, 0.0, 0.0], [-0.0925918296, 0.0, 0.0, 0.0], [-0.0126750376, 0.0, 0.0, 0.0], [0.0560428612, 0.0, 0.0, 0.0], [0.103353858, 0.0, 0.0, 0.0], [0.308600277, 0.0, 0.0, 0.0], [-0.225848958, 0.0, 0.0, 0.0], [-0.588446617, 0.0, 0.0, 0.0], [0.206137657, 0.0, 0.0, 0.0], [-0.28104651, 0.0, 0.0, 0.0], [-0.0412748009, 0.0, 0.0, 0.0], [-0.367784679, 0.0, 0.0, 0.0], [-0.340976268, 0.0, 0.0, 0.0], [0.0303923041, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 31, 32, 18, 9, 19, 33, 34, 35, 36, 22, 37, 38, 39, 40, 41, 42, 26, 27, 43, 44])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 10, 20, 2, 5, 11, 21, 12, 23, 24, 6, 13, 25, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_107(xs):
    #Predicts Class 5
    function_dict = np.array([[0.201499999, 1.0, 2.0, 0.0], [-0.0123999994, 3.0, 4.0, 0.0], [0.212500006, 5.0, 6.0, 0.0], [-0.0371000022, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.203500003, 11.0, 12.0, 0.0], [0.256500006, 13.0, 14.0, 0.0], [-0.0742499977, 15.0, 16.0, 0.0], [-0.0307, 17.0, 18.0, 0.0], [-0.343660623, 0.0, 0.0, 0.0], [0.172499999, 19.0, 20.0, 0.0], [0.202500001, 21.0, 22.0, 0.0], [0.353304327, 0.0, 0.0, 0.0], [0.228500009, 23.0, 24.0, 0.0], [0.282499999, 25.0, 26.0, 0.0], [-0.080400005, 27.0, 28.0, 0.0], [-0.770500004, 29.0, 30.0, 2.0], [0.466082275, 0.0, 0.0, 0.0], [-0.0231500007, 31.0, 32.0, 0.0], [-0.662999988, 33.0, 34.0, 2.0], [0.199666739, 0.0, 0.0, 0.0], [0.101982012, 0.0, 0.0, 0.0], [0.0306813382, 0.0, 0.0, 0.0], [-0.999500036, 35.0, 36.0, 1.0], [0.253499985, 37.0, 38.0, 0.0], [0.272000015, 39.0, 40.0, 0.0], [0.363499999, 41.0, 42.0, 0.0], [-0.0352532119, 0.0, 0.0, 0.0], [0.308453292, 0.0, 0.0, 0.0], [-0.314355761, 0.0, 0.0, 0.0], [-0.0370831192, 0.0, 0.0, 0.0], [-0.236697271, 0.0, 0.0, 0.0], [0.201267168, 0.0, 0.0, 0.0], [-0.28615129, 0.0, 0.0, 0.0], [0.0529027358, 0.0, 0.0, 0.0], [-0.273112178, 0.0, 0.0, 0.0], [0.216152996, 0.0, 0.0, 0.0], [-0.39581266, 0.0, 0.0, 0.0], [-0.0831395537, 0.0, 0.0, 0.0], [0.0924996883, 0.0, 0.0, 0.0], [0.53006959, 0.0, 0.0, 0.0], [-0.315007329, 0.0, 0.0, 0.0], [0.0231849272, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 31, 32, 9, 33, 34, 20, 21, 22, 12, 35, 36, 37, 38, 39, 40, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 10, 19, 2, 5, 11, 6, 13, 23, 24, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_108(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.777500033, 3.0, 4.0, 4.0], [-0.268999994, 5.0, 6.0, 0.0], [0.723500013, 7.0, 8.0, 2.0], [0.722000003, 9.0, 10.0, 2.0], [-0.37682727, 0.0, 0.0, 0.0], [-0.24849999, 11.0, 12.0, 0.0], [0.703500032, 13.0, 14.0, 2.0], [-0.243999988, 15.0, 16.0, 0.0], [-0.551999986, 17.0, 18.0, 1.0], [-0.709499955, 19.0, 20.0, 4.0], [-0.978999972, 21.0, 22.0, 3.0], [0.635499954, 23.0, 24.0, 2.0], [0.672500014, 25.0, 26.0, 2.0], [-0.725499988, 27.0, 28.0, 1.0], [-0.273000002, 29.0, 30.0, 0.0], [-0.172499999, 31.0, 32.0, 0.0], [-0.290499985, 33.0, 34.0, 0.0], [-0.707499981, 35.0, 36.0, 4.0], [-0.73150003, 37.0, 38.0, 4.0], [-0.604499996, 39.0, 40.0, 4.0], [-0.09011098, 0.0, 0.0, 0.0], [0.414842546, 0.0, 0.0, 0.0], [0.167399079, 0.0, 0.0, 0.0], [-0.461000025, 41.0, 42.0, 1.0], [-0.00930480193, 0.0, 0.0, 0.0], [0.181141853, 0.0, 0.0, 0.0], [0.159678176, 0.0, 0.0, 0.0], [-0.406031013, 0.0, 0.0, 0.0], [0.11260324, 0.0, 0.0, 0.0], [-0.279663354, 0.0, 0.0, 0.0], [0.447486848, 0.0, 0.0, 0.0], [-0.0241706688, 0.0, 0.0, 0.0], [0.0447693951, 0.0, 0.0, 0.0], [0.43512857, 0.0, 0.0, 0.0], [-0.188640013, 0.0, 0.0, 0.0], [0.343131214, 0.0, 0.0, 0.0], [-0.0232277252, 0.0, 0.0, 0.0], [0.345971972, 0.0, 0.0, 0.0], [-0.36764881, 0.0, 0.0, 0.0], [0.170788288, 0.0, 0.0, 0.0], [-0.0429292321, 0.0, 0.0, 0.0], [-0.322695971, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 5, 21, 22, 23, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 9, 17, 18, 10, 19, 20, 2, 6, 11, 12, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_109(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.874000013, 1.0, 2.0, 1.0], [0.345499992, 3.0, 4.0, 2.0], [0.0445500016, 5.0, 6.0, 0.0], [-0.284051299, 0.0, 0.0, 0.0], [0.0144755971, 0.0, 0.0, 0.0], [-0.107500002, 7.0, 8.0, 0.0], [-0.801499963, 9.0, 10.0, 1.0], [0.271499991, 11.0, 12.0, 2.0], [-0.348334163, 0.0, 0.0, 0.0], [-0.139988303, 0.0, 0.0, 0.0], [-0.936499953, 13.0, 14.0, 4.0], [-0.708500028, 15.0, 16.0, 1.0], [-0.141499996, 17.0, 18.0, 0.0], [0.1008, 19.0, 20.0, 0.0], [0.028639758, 0.0, 0.0, 0.0], [0.341460794, 0.0, 0.0, 0.0], [-0.136589766, 0.0, 0.0, 0.0], [-0.00753070554, 0.0, 0.0, 0.0], [0.167999536, 0.0, 0.0, 0.0], [0.384164184, 0.0, 0.0, 0.0], [-0.00200507371, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 17, 18, 8, 9, 19, 20, 14])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 6, 10, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_110(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.230500013, 3.0, 4.0, 0.0], [-0.75849998, 5.0, 6.0, 1.0], [-0.313970834, 0.0, 0.0, 0.0], [-0.218499988, 7.0, 8.0, 0.0], [-0.759500027, 9.0, 10.0, 1.0], [0.455500007, 11.0, 12.0, 2.0], [-0.996500015, 13.0, 14.0, 3.0], [-0.996500015, 15.0, 16.0, 3.0], [-0.960999966, 17.0, 18.0, 3.0], [0.430513412, 0.0, 0.0, 0.0], [0.412999988, 19.0, 20.0, 2.0], [0.463499993, 21.0, 22.0, 2.0], [0.382617116, 0.0, 0.0, 0.0], [-0.0494626313, 0.0, 0.0, 0.0], [-0.31768468, 0.0, 0.0, 0.0], [-0.994500041, 23.0, 24.0, 3.0], [-0.248424664, 0.0, 0.0, 0.0], [0.371212721, 0.0, 0.0, 0.0], [-0.227499992, 25.0, 26.0, 0.0], [-0.1505, 27.0, 28.0, 0.0], [-0.933499992, 29.0, 30.0, 4.0], [0.468500018, 31.0, 32.0, 2.0], [0.186600894, 0.0, 0.0, 0.0], [-0.145991489, 0.0, 0.0, 0.0], [0.477432787, 0.0, 0.0, 0.0], [-0.103160307, 0.0, 0.0, 0.0], [-0.388068914, 0.0, 0.0, 0.0], [-0.0395511948, 0.0, 0.0, 0.0], [0.606436491, 0.0, 0.0, 0.0], [-0.0798058286, 0.0, 0.0, 0.0], [-0.328168213, 0.0, 0.0, 0.0], [0.0112407235, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 23, 24, 17, 18, 10, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 4, 7, 8, 16, 2, 5, 9, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_111(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.212500006, 1.0, 2.0, 0.0], [-0.249500006, 3.0, 4.0, 0.0], [-0.20449999, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 1.0], [-0.376393914, 0.0, 0.0, 0.0], [0.26365611, 0.0, 0.0, 0.0], [-0.996500015, 9.0, 10.0, 1.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.98300004, 13.0, 14.0, 1.0], [-0.193500012, 15.0, 16.0, 0.0], [0.359000027, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.285000026, 21.0, 22.0, 0.0], [-0.29600805, 0.0, 0.0, 0.0], [-0.0351602919, 0.0, 0.0, 0.0], [-0.906000018, 23.0, 24.0, 2.0], [-0.190499991, 25.0, 26.0, 0.0], [-0.752500057, 27.0, 28.0, 2.0], [-0.273252398, 0.0, 0.0, 0.0], [0.0452225171, 0.0, 0.0, 0.0], [-0.281242013, 0.0, 0.0, 0.0], [-0.047624819, 0.0, 0.0, 0.0], [0.354451895, 0.0, 0.0, 0.0], [-0.340107828, 0.0, 0.0, 0.0], [0.131096512, 0.0, 0.0, 0.0], [0.240799844, 0.0, 0.0, 0.0], [-0.000217907364, 0.0, 0.0, 0.0], [0.366933942, 0.0, 0.0, 0.0], [0.0164528415, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 4, 5, 23, 24, 25, 26, 27, 28, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9, 15, 16, 10, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_112(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [-0.212500006, 3.0, 4.0, 0.0], [-0.211898535, 0.0, 0.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.20449999, 7.0, 8.0, 0.0], [-0.996500015, 9.0, 10.0, 1.0], [0.390257299, 0.0, 0.0, 0.0], [-0.208499998, 11.0, 12.0, 0.0], [-0.996500015, 13.0, 14.0, 1.0], [-0.999500036, 15.0, 16.0, 1.0], [0.303063601, 0.0, 0.0, 0.0], [-0.281594902, 0.0, 0.0, 0.0], [-0.0854893848, 0.0, 0.0, 0.0], [-0.193500012, 17.0, 18.0, 0.0], [-0.508000016, 19.0, 20.0, 2.0], [0.0143185193, 0.0, 0.0, 0.0], [-0.179955468, 0.0, 0.0, 0.0], [0.234228626, 0.0, 0.0, 0.0], [-0.0019337337, 0.0, 0.0, 0.0], [-0.367271781, 0.0, 0.0, 0.0], [0.0794806927, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 11, 12, 17, 18, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_113(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.601000011, 1.0, 2.0, 2.0], [-0.380499989, 3.0, 4.0, 0.0], [0.102500007, 5.0, 6.0, 0.0], [-0.394999981, 7.0, 8.0, 0.0], [-0.296499997, 9.0, 10.0, 0.0], [-0.213395327, 0.0, 0.0, 0.0], [0.122129731, 0.0, 0.0, 0.0], [-0.401000023, 11.0, 12.0, 0.0], [0.334617078, 0.0, 0.0, 0.0], [-0.838, 13.0, 14.0, 2.0], [-0.153499991, 15.0, 16.0, 0.0], [-0.407499999, 17.0, 18.0, 0.0], [-0.300316423, 0.0, 0.0, 0.0], [-0.323198885, 0.0, 0.0, 0.0], [0.0670787096, 0.0, 0.0, 0.0], [-0.155499995, 19.0, 20.0, 0.0], [-0.0748500004, 21.0, 22.0, 0.0], [0.0288581215, 0.0, 0.0, 0.0], [0.356660992, 0.0, 0.0, 0.0], [0.0404032767, 0.0, 0.0, 0.0], [0.340114385, 0.0, 0.0, 0.0], [-0.195652366, 0.0, 0.0, 0.0], [0.00763511192, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 13, 14, 19, 20, 21, 22, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 9, 10, 15, 16, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_114(xs):
    #Predicts Class 0
    function_dict = np.array([[0.112499997, 1.0, 2.0, 0.0], [-0.149500012, 3.0, 4.0, 0.0], [-0.265732974, 0.0, 0.0, 0.0], [-0.1875, 5.0, 6.0, 0.0], [-0.141499996, 7.0, 8.0, 0.0], [-0.193500012, 9.0, 10.0, 0.0], [-0.183499992, 11.0, 12.0, 0.0], [-0.976500034, 13.0, 14.0, 3.0], [-0.60800004, 15.0, 16.0, 1.0], [-0.199499995, 17.0, 18.0, 0.0], [-0.932000041, 19.0, 20.0, 4.0], [-0.577517807, 0.0, 0.0, 0.0], [-0.803499997, 21.0, 22.0, 4.0], [0.631000042, 23.0, 24.0, 2.0], [-0.924499989, 25.0, 26.0, 4.0], [-0.96449995, 27.0, 28.0, 4.0], [-0.950500011, 29.0, 30.0, 4.0], [0.00621948298, 0.0, 0.0, 0.0], [-0.199760601, 0.0, 0.0, 0.0], [0.452034622, 0.0, 0.0, 0.0], [-0.0203011334, 0.0, 0.0, 0.0], [-0.155071944, 0.0, 0.0, 0.0], [0.276507407, 0.0, 0.0, 0.0], [0.502806604, 0.0, 0.0, 0.0], [0.144507244, 0.0, 0.0, 0.0], [0.27767089, 0.0, 0.0, 0.0], [-0.0975996479, 0.0, 0.0, 0.0], [-0.175430894, 0.0, 0.0, 0.0], [0.178039268, 0.0, 0.0, 0.0], [0.168040633, 0.0, 0.0, 0.0], [-0.21426256, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_115(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.207500011, 1.0, 2.0, 0.0], [-0.208499998, 3.0, 4.0, 0.0], [0.431500018, 5.0, 6.0, 2.0], [-0.958500028, 7.0, 8.0, 4.0], [0.449510843, 0.0, 0.0, 0.0], [0.206999987, 9.0, 10.0, 2.0], [-0.999500036, 11.0, 12.0, 3.0], [-0.968500018, 13.0, 14.0, 4.0], [-0.956499994, 15.0, 16.0, 4.0], [-0.273095489, 0.0, 0.0, 0.0], [-0.944999993, 17.0, 18.0, 3.0], [0.522499979, 19.0, 20.0, 2.0], [-0.192499995, 21.0, 22.0, 0.0], [-0.75849998, 23.0, 24.0, 1.0], [0.555500031, 25.0, 26.0, 2.0], [-0.990999997, 27.0, 28.0, 3.0], [-0.62349999, 29.0, 30.0, 1.0], [-0.155499995, 31.0, 32.0, 0.0], [-0.190499991, 33.0, 34.0, 0.0], [-0.0602432899, 0.0, 0.0, 0.0], [0.35949716, 0.0, 0.0, 0.0], [-0.657000005, 35.0, 36.0, 1.0], [-0.969500005, 37.0, 38.0, 4.0], [-0.138453528, 0.0, 0.0, 0.0], [0.163580924, 0.0, 0.0, 0.0], [-0.401130617, 0.0, 0.0, 0.0], [0.116529077, 0.0, 0.0, 0.0], [0.586548984, 0.0, 0.0, 0.0], [0.187118351, 0.0, 0.0, 0.0], [-0.0169791188, 0.0, 0.0, 0.0], [0.105303027, 0.0, 0.0, 0.0], [0.314312279, 0.0, 0.0, 0.0], [-0.0224998035, 0.0, 0.0, 0.0], [-0.303138256, 0.0, 0.0, 0.0], [-0.0102760782, 0.0, 0.0, 0.0], [-0.458788276, 0.0, 0.0, 0.0], [-0.0143166212, 0.0, 0.0, 0.0], [0.237184912, 0.0, 0.0, 0.0], [-0.14854534, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 29, 30, 4, 9, 31, 32, 33, 34, 19, 20, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 10, 17, 18, 6, 11, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_116(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.968500018, 1.0, 2.0, 4.0], [-0.972499967, 3.0, 4.0, 4.0], [-0.961500049, 5.0, 6.0, 4.0], [-0.208499998, 7.0, 8.0, 0.0], [-0.175500005, 9.0, 10.0, 0.0], [0.35799998, 11.0, 12.0, 2.0], [-0.203500003, 13.0, 14.0, 0.0], [0.555500031, 15.0, 16.0, 2.0], [0.484499991, 17.0, 18.0, 2.0], [-0.442015111, 0.0, 0.0, 0.0], [-0.0411742665, 0.0, 0.0, 0.0], [-0.278224736, 0.0, 0.0, 0.0], [-0.651499987, 19.0, 20.0, 1.0], [-0.21450001, 21.0, 22.0, 0.0], [-0.178499997, 23.0, 24.0, 0.0], [-0.973500013, 25.0, 26.0, 4.0], [-0.541499972, 27.0, 28.0, 1.0], [-0.193500012, 29.0, 30.0, 0.0], [-0.397275716, 0.0, 0.0, 0.0], [-0.990499973, 31.0, 32.0, 3.0], [-0.284999996, 33.0, 34.0, 0.0], [0.607499957, 35.0, 36.0, 2.0], [-0.483500004, 37.0, 38.0, 1.0], [0.529500008, 39.0, 40.0, 2.0], [-0.652500033, 41.0, 42.0, 1.0], [-0.200002119, 0.0, 0.0, 0.0], [0.276224226, 0.0, 0.0, 0.0], [0.633933306, 0.0, 0.0, 0.0], [-0.0519616827, 0.0, 0.0, 0.0], [-0.212945238, 0.0, 0.0, 0.0], [0.226246789, 0.0, 0.0, 0.0], [0.495778412, 0.0, 0.0, 0.0], [0.0961194634, 0.0, 0.0, 0.0], [0.350387782, 0.0, 0.0, 0.0], [-0.215623051, 0.0, 0.0, 0.0], [0.0834235102, 0.0, 0.0, 0.0], [-0.102101766, 0.0, 0.0, 0.0], [-0.455901563, 0.0, 0.0, 0.0], [0.315233946, 0.0, 0.0, 0.0], [-0.300812989, 0.0, 0.0, 0.0], [0.397087604, 0.0, 0.0, 0.0], [-0.12703374, 0.0, 0.0, 0.0], [0.0512039922, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 18, 9, 10, 11, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 2, 5, 12, 19, 20, 6, 13, 21, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_117(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.146499991, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.0965999961, 5.0, 6.0, 0.0], [-0.205500007, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.0974999964, 11.0, 12.0, 0.0], [-0.0922500044, 13.0, 14.0, 0.0], [-0.273499995, 15.0, 16.0, 0.0], [-0.19749999, 17.0, 18.0, 0.0], [-0.333404809, 0.0, 0.0, 0.0], [-0.0485610366, 0.0, 0.0, 0.0], [-0.0987499952, 19.0, 20.0, 0.0], [0.63263917, 0.0, 0.0, 0.0], [-0.343817979, 0.0, 0.0, 0.0], [-0.0913500041, 21.0, 22.0, 0.0], [-0.276499987, 23.0, 24.0, 0.0], [-0.613000035, 25.0, 26.0, 2.0], [0.210256115, 0.0, 0.0, 0.0], [-0.191500008, 27.0, 28.0, 0.0], [-0.1065, 29.0, 30.0, 0.0], [-0.324110627, 0.0, 0.0, 0.0], [0.506918132, 0.0, 0.0, 0.0], [-0.0801500008, 31.0, 32.0, 0.0], [-0.0283298399, 0.0, 0.0, 0.0], [0.353799373, 0.0, 0.0, 0.0], [-0.199869484, 0.0, 0.0, 0.0], [0.0813376084, 0.0, 0.0, 0.0], [-0.0678700283, 0.0, 0.0, 0.0], [0.206304818, 0.0, 0.0, 0.0], [0.00474014506, 0.0, 0.0, 0.0], [0.293898106, 0.0, 0.0, 0.0], [-0.180322304, 0.0, 0.0, 0.0], [0.000622686639, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 27, 28, 9, 10, 29, 30, 20, 12, 13, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 2, 5, 11, 19, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_118(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.518000007, 1.0, 2.0, 0.0], [-0.24173902, 0.0, 0.0, 0.0], [0.203500003, 3.0, 4.0, 0.0], [0.0240500011, 5.0, 6.0, 0.0], [-0.215387002, 0.0, 0.0, 0.0], [0.0131000001, 7.0, 8.0, 0.0], [0.0293500014, 9.0, 10.0, 0.0], [0.000549999997, 11.0, 12.0, 0.0], [0.0234000012, 13.0, 14.0, 0.0], [-0.923500001, 15.0, 16.0, 2.0], [0.0353999995, 17.0, 18.0, 0.0], [-0.00555840041, 0.0, 0.0, 0.0], [0.129061878, 0.0, 0.0, 0.0], [-0.329628527, 0.0, 0.0, 0.0], [0.00174679863, 0.0, 0.0, 0.0], [0.151429325, 0.0, 0.0, 0.0], [0.6025123, 0.0, 0.0, 0.0], [-0.405963838, 0.0, 0.0, 0.0], [0.0338474736, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 13, 14, 15, 16, 17, 18, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_119(xs):
    #Predicts Class 5
    function_dict = np.array([[0.623000026, 1.0, 2.0, 0.0], [0.620499969, 3.0, 4.0, 0.0], [0.217621475, 0.0, 0.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [-0.21815446, 0.0, 0.0, 0.0], [0.615499973, 7.0, 8.0, 0.0], [0.301803142, 0.0, 0.0, 0.0], [0.588, 9.0, 10.0, 0.0], [-0.285306603, 0.0, 0.0, 0.0], [-0.0031454463, 0.0, 0.0, 0.0], [0.269540101, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 8, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_120(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.213499993, 1.0, 2.0, 0.0], [-0.216499999, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.946500003, 7.0, 8.0, 4.0], [-0.95599997, 9.0, 10.0, 4.0], [0.352497518, 0.0, 0.0, 0.0], [-0.867499948, 11.0, 12.0, 3.0], [-0.958500028, 13.0, 14.0, 4.0], [-0.999500036, 15.0, 16.0, 3.0], [-0.00794592779, 0.0, 0.0, 0.0], [-0.607234359, 0.0, 0.0, 0.0], [-0.538499951, 17.0, 18.0, 1.0], [0.656499982, 19.0, 20.0, 2.0], [-0.723500013, 21.0, 22.0, 1.0], [-0.699000001, 23.0, 24.0, 1.0], [0.522500038, 25.0, 26.0, 2.0], [-0.988499999, 27.0, 28.0, 3.0], [-0.911499977, 29.0, 30.0, 3.0], [-0.669999957, 31.0, 32.0, 4.0], [-0.924499989, 33.0, 34.0, 4.0], [-0.755500019, 35.0, 36.0, 3.0], [0.0843491554, 0.0, 0.0, 0.0], [-0.235435739, 0.0, 0.0, 0.0], [-0.402266949, 0.0, 0.0, 0.0], [0.0101654278, 0.0, 0.0, 0.0], [-0.283373624, 0.0, 0.0, 0.0], [-0.0896253884, 0.0, 0.0, 0.0], [0.147001207, 0.0, 0.0, 0.0], [-0.0100105926, 0.0, 0.0, 0.0], [0.0459710695, 0.0, 0.0, 0.0], [-0.256954044, 0.0, 0.0, 0.0], [-0.304987431, 0.0, 0.0, 0.0], [0.130885735, 0.0, 0.0, 0.0], [0.0797539353, 0.0, 0.0, 0.0], [0.496420979, 0.0, 0.0, 0.0], [0.126802787, 0.0, 0.0, 0.0], [-0.301719576, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 27, 28, 9, 10, 5, 29, 30, 31, 32, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 2, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_121(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.377499998, 1.0, 2.0, 1.0], [-0.4745, 3.0, 4.0, 1.0], [-0.988499999, 5.0, 6.0, 3.0], [-0.484499991, 7.0, 8.0, 1.0], [-0.983500004, 9.0, 10.0, 3.0], [0.708500028, 11.0, 12.0, 2.0], [-0.164499998, 13.0, 14.0, 1.0], [0.657500029, 15.0, 16.0, 2.0], [-0.43217954, 0.0, 0.0, 0.0], [0.595000029, 17.0, 18.0, 2.0], [-0.957499981, 19.0, 20.0, 3.0], [-0.144246265, 0.0, 0.0, 0.0], [0.240065932, 0.0, 0.0, 0.0], [-0.282798856, 0.0, 0.0, 0.0], [-0.0153377131, 0.0, 0.0, 0.0], [-0.210500002, 21.0, 22.0, 0.0], [-0.988499999, 23.0, 24.0, 3.0], [-0.430000007, 25.0, 26.0, 1.0], [0.695500016, 27.0, 28.0, 2.0], [-0.309500009, 29.0, 30.0, 0.0], [-0.313000023, 31.0, 32.0, 0.0], [0.0534335524, 0.0, 0.0, 0.0], [-0.0383111015, 0.0, 0.0, 0.0], [-0.281754404, 0.0, 0.0, 0.0], [0.060094256, 0.0, 0.0, 0.0], [0.0145899858, 0.0, 0.0, 0.0], [-0.256286442, 0.0, 0.0, 0.0], [0.601315737, 0.0, 0.0, 0.0], [-0.0551532879, 0.0, 0.0, 0.0], [-0.0335963853, 0.0, 0.0, 0.0], [-0.403561741, 0.0, 0.0, 0.0], [0.310326099, 0.0, 0.0, 0.0], [-0.00838884898, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 25, 26, 27, 28, 29, 30, 31, 32, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 17, 18, 10, 19, 20, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_122(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.179500014, 3.0, 4.0, 0.0], [-0.278500021, 5.0, 6.0, 1.0], [-0.798500001, 7.0, 8.0, 1.0], [-0.284068078, 0.0, 0.0, 0.0], [-0.871500015, 9.0, 10.0, 3.0], [0.65200001, 11.0, 12.0, 2.0], [0.45450002, 13.0, 14.0, 2.0], [0.479000002, 15.0, 16.0, 2.0], [-0.930500031, 17.0, 18.0, 3.0], [-0.689499974, 19.0, 20.0, 4.0], [0.357755989, 0.0, 0.0, 0.0], [-0.944499969, 21.0, 22.0, 3.0], [0.423500001, 23.0, 24.0, 2.0], [-0.251907587, 0.0, 0.0, 0.0], [-0.327898234, 0.0, 0.0, 0.0], [0.0438586548, 0.0, 0.0, 0.0], [-0.612499952, 25.0, 26.0, 1.0], [-0.202500001, 27.0, 28.0, 0.0], [-0.765499949, 29.0, 30.0, 3.0], [0.248436242, 0.0, 0.0, 0.0], [0.0170768872, 0.0, 0.0, 0.0], [-0.057457041, 0.0, 0.0, 0.0], [-0.096989274, 0.0, 0.0, 0.0], [0.389681101, 0.0, 0.0, 0.0], [-0.0418247767, 0.0, 0.0, 0.0], [0.0366779603, 0.0, 0.0, 0.0], [-0.0663871169, 0.0, 0.0, 0.0], [0.296225786, 0.0, 0.0, 0.0], [-0.295090914, 0.0, 0.0, 0.0], [0.0174332336, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 4, 25, 26, 27, 28, 29, 30, 20, 11, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 9, 17, 18, 10, 19, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_123(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0307, 1.0, 2.0, 0.0], [-0.0469499975, 3.0, 4.0, 0.0], [-0.0250499994, 5.0, 6.0, 0.0], [-0.0728500038, 7.0, 8.0, 0.0], [-0.718999982, 9.0, 10.0, 2.0], [-0.999500036, 11.0, 12.0, 1.0], [-0.0244999994, 13.0, 14.0, 0.0], [-0.0743499994, 15.0, 16.0, 0.0], [-0.0720499977, 17.0, 18.0, 0.0], [-0.0382499993, 19.0, 20.0, 0.0], [0.26494354, 0.0, 0.0, 0.0], [-0.0294000003, 21.0, 22.0, 0.0], [-0.420209736, 0.0, 0.0, 0.0], [-0.993935168, 0.0, 0.0, 0.0], [-0.0156999994, 23.0, 24.0, 0.0], [-0.0762000009, 25.0, 26.0, 0.0], [-0.414381951, 0.0, 0.0, 0.0], [0.742164195, 0.0, 0.0, 0.0], [-0.0698499978, 27.0, 28.0, 0.0], [-0.0392000005, 29.0, 30.0, 0.0], [-0.0331000015, 31.0, 32.0, 0.0], [0.18382147, 0.0, 0.0, 0.0], [0.45419091, 0.0, 0.0, 0.0], [0.40315637, 0.0, 0.0, 0.0], [-0.0143499998, 33.0, 34.0, 0.0], [-0.00609538844, 0.0, 0.0, 0.0], [0.371269286, 0.0, 0.0, 0.0], [-0.342369795, 0.0, 0.0, 0.0], [0.0807392523, 0.0, 0.0, 0.0], [-0.266436398, 0.0, 0.0, 0.0], [-0.842001736, 0.0, 0.0, 0.0], [0.347919405, 0.0, 0.0, 0.0], [-0.691184103, 0.0, 0.0, 0.0], [-0.584053814, 0.0, 0.0, 0.0], [0.00411118614, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 27, 28, 29, 30, 31, 32, 10, 21, 22, 12, 13, 23, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 18, 4, 9, 19, 20, 2, 5, 11, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_124(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0945499986, 1.0, 2.0, 0.0], [0.0867500007, 3.0, 4.0, 0.0], [0.109499998, 5.0, 6.0, 0.0], [0.0854000002, 7.0, 8.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [0.112499997, 13.0, 14.0, 0.0], [0.0847499967, 15.0, 16.0, 0.0], [-0.382461071, 0.0, 0.0, 0.0], [0.0873000026, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [-0.336740941, 0.0, 0.0, 0.0], [-0.0648395494, 0.0, 0.0, 0.0], [0.343399853, 0.0, 0.0, 0.0], [0.141499996, 21.0, 22.0, 0.0], [0.0776499957, 23.0, 24.0, 0.0], [0.449288368, 0.0, 0.0, 0.0], [0.102671407, 0.0, 0.0, 0.0], [0.443042547, 0.0, 0.0, 0.0], [0.0892499983, 25.0, 26.0, 0.0], [0.439011663, 0.0, 0.0, 0.0], [-0.291721165, 0.0, 0.0, 0.0], [0.194499999, 27.0, 28.0, 0.0], [0.00239023753, 0.0, 0.0, 0.0], [-0.257277757, 0.0, 0.0, 0.0], [-0.249164283, 0.0, 0.0, 0.0], [0.0743534565, 0.0, 0.0, 0.0], [0.161268294, 0.0, 0.0, 0.0], [-0.108060054, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 17, 18, 25, 26, 20, 11, 12, 13, 21, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 10, 19, 2, 5, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_125(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 1.0], [-0.997500002, 3.0, 4.0, 1.0], [-0.952000022, 5.0, 6.0, 1.0], [-0.851999998, 7.0, 8.0, 2.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.214292794, 0.0, 0.0, 0.0], [-0.0262849145, 0.0, 0.0, 0.0], [-0.457500011, 11.0, 12.0, 0.0], [0.541999996, 13.0, 14.0, 0.0], [-0.995499969, 15.0, 16.0, 1.0], [0.00891499966, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.424499989, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [0.288007826, 0.0, 0.0, 0.0], [-0.135173693, 0.0, 0.0, 0.0], [-0.000359708676, 0.0, 0.0, 0.0], [-0.906000018, 25.0, 26.0, 2.0], [0.22299999, 27.0, 28.0, 0.0], [-0.239410937, 0.0, 0.0, 0.0], [-0.0430480652, 0.0, 0.0, 0.0], [0.379723817, 0.0, 0.0, 0.0], [0.00487732608, 0.0, 0.0, 0.0], [-0.399633437, 0.0, 0.0, 0.0], [-0.0678590611, 0.0, 0.0, 0.0], [0.448128432, 0.0, 0.0, 0.0], [0.115265965, 0.0, 0.0, 0.0], [-0.234226003, 0.0, 0.0, 0.0], [0.211304232, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 14, 15, 16, 25, 26, 27, 28, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 4, 9, 10, 17, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_126(xs):
    #Predicts Class 0
    function_dict = np.array([[0.112499997, 1.0, 2.0, 0.0], [-0.0726500005, 3.0, 4.0, 0.0], [-0.255310655, 0.0, 0.0, 0.0], [-0.0968500003, 5.0, 6.0, 0.0], [-0.690999985, 7.0, 8.0, 1.0], [0.466499984, 9.0, 10.0, 2.0], [0.481999993, 11.0, 12.0, 2.0], [-0.0310500003, 13.0, 14.0, 0.0], [-0.938499987, 15.0, 16.0, 4.0], [-0.950500011, 17.0, 18.0, 3.0], [-0.932500005, 19.0, 20.0, 4.0], [0.0646234378, 0.0, 0.0, 0.0], [0.587499976, 21.0, 22.0, 2.0], [-0.89349997, 23.0, 24.0, 3.0], [0.0965999961, 25.0, 26.0, 0.0], [-0.320348918, 0.0, 0.0, 0.0], [0.238692164, 0.0, 0.0, 0.0], [-0.0936440453, 0.0, 0.0, 0.0], [0.11477036, 0.0, 0.0, 0.0], [0.072887145, 0.0, 0.0, 0.0], [-0.0141503708, 0.0, 0.0, 0.0], [-0.397012949, 0.0, 0.0, 0.0], [-0.0306431018, 0.0, 0.0, 0.0], [0.32582128, 0.0, 0.0, 0.0], [0.0740862563, 0.0, 0.0, 0.0], [-0.231914267, 0.0, 0.0, 0.0], [0.226295084, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 21, 22, 23, 24, 25, 26, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7, 13, 14, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_127(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.375499994, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.367500007, 5.0, 6.0, 0.0], [-0.0184826031, 0.0, 0.0, 0.0], [0.275576055, 0.0, 0.0, 0.0], [-0.272291541, 0.0, 0.0, 0.0], [0.0463999994, 7.0, 8.0, 0.0], [-0.107500002, 9.0, 10.0, 0.0], [-0.801499963, 11.0, 12.0, 1.0], [0.797500014, 13.0, 14.0, 2.0], [-0.320809007, 0.0, 0.0, 0.0], [-0.129734218, 0.0, 0.0, 0.0], [-0.938499987, 15.0, 16.0, 4.0], [0.00289017893, 0.0, 0.0, 0.0], [-0.201390162, 0.0, 0.0, 0.0], [0.26503402, 0.0, 0.0, 0.0], [0.0260111485, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 13, 14, 10, 11, 15, 16])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_128(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0728500038, 1.0, 2.0, 0.0], [-0.0961499959, 3.0, 4.0, 0.0], [-0.678499997, 5.0, 6.0, 1.0], [0.804499984, 7.0, 8.0, 2.0], [0.587499976, 9.0, 10.0, 2.0], [-0.0603, 11.0, 12.0, 0.0], [0.0280999988, 13.0, 14.0, 0.0], [0.782500029, 15.0, 16.0, 2.0], [-0.467000008, 17.0, 18.0, 1.0], [0.361409873, 0.0, 0.0, 0.0], [0.0344418511, 0.0, 0.0, 0.0], [-0.346544176, 0.0, 0.0, 0.0], [-0.749500036, 19.0, 20.0, 1.0], [0.241408914, 0.0, 0.0, 0.0], [-0.218372822, 0.0, 0.0, 0.0], [0.772500038, 21.0, 22.0, 2.0], [-0.72299999, 23.0, 24.0, 4.0], [-0.986500025, 25.0, 26.0, 3.0], [0.314204395, 0.0, 0.0, 0.0], [-0.140637591, 0.0, 0.0, 0.0], [0.0242684316, 0.0, 0.0, 0.0], [-0.00581497094, 0.0, 0.0, 0.0], [0.197115421, 0.0, 0.0, 0.0], [-0.285278559, 0.0, 0.0, 0.0], [0.0197406802, 0.0, 0.0, 0.0], [0.214869291, 0.0, 0.0, 0.0], [-0.150504366, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 18, 9, 10, 11, 19, 20, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 2, 5, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_129(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.613499999, 3.0, 4.0, 2.0], [0.141499996, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.601000011, 9.0, 10.0, 2.0], [-0.0164499991, 11.0, 12.0, 0.0], [-0.333629578, 0.0, 0.0, 0.0], [-0.524500012, 13.0, 14.0, 0.0], [-0.296499997, 15.0, 16.0, 0.0], [0.250138044, 0.0, 0.0, 0.0], [-0.997500002, 17.0, 18.0, 1.0], [-0.99849999, 19.0, 20.0, 4.0], [-0.54549998, 21.0, 22.0, 2.0], [0.0706222504, 0.0, 0.0, 0.0], [-0.266667128, 0.0, 0.0, 0.0], [0.432030082, 0.0, 0.0, 0.0], [-0.284500003, 23.0, 24.0, 0.0], [-0.237500012, 25.0, 26.0, 0.0], [-0.433499992, 27.0, 28.0, 2.0], [-0.260200977, 0.0, 0.0, 0.0], [-0.0542133898, 0.0, 0.0, 0.0], [0.340225935, 0.0, 0.0, 0.0], [-0.0827888697, 0.0, 0.0, 0.0], [-0.289972097, 0.0, 0.0, 0.0], [0.00145458675, 0.0, 0.0, 0.0], [0.103772119, 0.0, 0.0, 0.0], [-0.131525725, 0.0, 0.0, 0.0], [0.00831310544, 0.0, 0.0, 0.0], [0.210170254, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 23, 24, 9, 25, 26, 27, 28, 19, 20, 21, 22, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 16, 4, 10, 17, 18, 2, 5, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_130(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [0.202500001, 3.0, 4.0, 0.0], [-0.19038488, 0.0, 0.0, 0.0], [0.196500003, 5.0, 6.0, 0.0], [0.198992163, 0.0, 0.0, 0.0], [0.195499986, 7.0, 8.0, 0.0], [-0.252894938, 0.0, 0.0, 0.0], [0.194499999, 9.0, 10.0, 0.0], [0.174181744, 0.0, 0.0, 0.0], [0.00330265542, 0.0, 0.0, 0.0], [-0.25864163, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 8, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_131(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.435000002, 1.0, 2.0, 2.0], [-0.997500002, 3.0, 4.0, 4.0], [-0.171649382, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 3.0], [-0.0998999998, 7.0, 8.0, 0.0], [-0.99849999, 9.0, 10.0, 1.0], [0.157499999, 11.0, 12.0, 0.0], [0.035399992, 0.0, 0.0, 0.0], [0.209064513, 0.0, 0.0, 0.0], [-0.822000027, 13.0, 14.0, 2.0], [-0.409000009, 15.0, 16.0, 0.0], [-0.135673046, 0.0, 0.0, 0.0], [0.321918994, 0.0, 0.0, 0.0], [-0.00196166243, 0.0, 0.0, 0.0], [-0.192974314, 0.0, 0.0, 0.0], [-0.0982498974, 0.0, 0.0, 0.0], [0.078226462, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_132(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.891499996, 1.0, 2.0, 4.0], [-0.578999996, 3.0, 4.0, 1.0], [-0.182500005, 5.0, 6.0, 0.0], [-0.174499989, 7.0, 8.0, 0.0], [-0.845499992, 9.0, 10.0, 3.0], [0.653499961, 11.0, 12.0, 2.0], [0.667999983, 13.0, 14.0, 2.0], [-0.931499958, 15.0, 16.0, 3.0], [-0.631500006, 17.0, 18.0, 1.0], [0.767500043, 19.0, 20.0, 2.0], [0.187529743, 0.0, 0.0, 0.0], [-0.943500042, 21.0, 22.0, 3.0], [-0.754999995, 23.0, 24.0, 4.0], [-0.538499951, 25.0, 26.0, 1.0], [-0.142499998, 27.0, 28.0, 0.0], [-0.96449995, 29.0, 30.0, 3.0], [-0.921499968, 31.0, 32.0, 3.0], [-0.137499988, 33.0, 34.0, 0.0], [-0.114, 35.0, 36.0, 0.0], [-0.956499994, 37.0, 38.0, 4.0], [0.158567443, 0.0, 0.0, 0.0], [-0.736000001, 39.0, 40.0, 1.0], [0.621500015, 41.0, 42.0, 2.0], [-0.221500009, 43.0, 44.0, 0.0], [0.722000003, 45.0, 46.0, 2.0], [-0.0962000042, 47.0, 48.0, 0.0], [-0.813500047, 49.0, 50.0, 4.0], [0.782500029, 51.0, 52.0, 2.0], [-0.107500002, 53.0, 54.0, 0.0], [0.0218840186, 0.0, 0.0, 0.0], [0.232304573, 0.0, 0.0, 0.0], [-0.538092494, 0.0, 0.0, 0.0], [0.0493657067, 0.0, 0.0, 0.0], [-0.462505102, 0.0, 0.0, 0.0], [-0.0253340788, 0.0, 0.0, 0.0], [0.371061802, 0.0, 0.0, 0.0], [-0.049981121, 0.0, 0.0, 0.0], [-0.163836718, 0.0, 0.0, 0.0], [-0.423535049, 0.0, 0.0, 0.0], [-0.0136283245, 0.0, 0.0, 0.0], [-0.429635108, 0.0, 0.0, 0.0], [0.255773902, 0.0, 0.0, 0.0], [-0.122349054, 0.0, 0.0, 0.0], [0.246779054, 0.0, 0.0, 0.0], [-0.0490786806, 0.0, 0.0, 0.0], [0.0455442183, 0.0, 0.0, 0.0], [-0.254702538, 0.0, 0.0, 0.0], [0.436927944, 0.0, 0.0, 0.0], [0.00792757608, 0.0, 0.0, 0.0], [-0.217850178, 0.0, 0.0, 0.0], [0.291586608, 0.0, 0.0, 0.0], [0.294018149, 0.0, 0.0, 0.0], [-0.0253675357, 0.0, 0.0, 0.0], [-0.401415437, 0.0, 0.0, 0.0], [-0.073841095, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 20, 10, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 19, 2, 5, 11, 21, 22, 12, 23, 24, 6, 13, 25, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_133(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.851500034, 1.0, 2.0, 1.0], [-0.192499995, 3.0, 4.0, 0.0], [-0.906499982, 5.0, 6.0, 4.0], [-0.978999972, 7.0, 8.0, 4.0], [-0.973500013, 9.0, 10.0, 4.0], [-0.908499956, 11.0, 12.0, 4.0], [-0.902500033, 13.0, 14.0, 4.0], [-0.0528349094, 0.0, 0.0, 0.0], [-0.302565306, 0.0, 0.0, 0.0], [-0.243393645, 0.0, 0.0, 0.0], [-0.963999987, 15.0, 16.0, 4.0], [-0.2755, 17.0, 18.0, 0.0], [0.312146544, 0.0, 0.0, 0.0], [-0.350824326, 0.0, 0.0, 0.0], [-0.186500013, 19.0, 20.0, 0.0], [0.2151445, 0.0, 0.0, 0.0], [-0.0245697051, 0.0, 0.0, 0.0], [-0.493000001, 21.0, 22.0, 1.0], [-0.2685, 23.0, 24.0, 0.0], [-0.21450001, 25.0, 26.0, 0.0], [-0.302388132, 0.0, 0.0, 0.0], [0.138599664, 0.0, 0.0, 0.0], [-0.110665992, 0.0, 0.0, 0.0], [-0.277752817, 0.0, 0.0, 0.0], [0.0081381714, 0.0, 0.0, 0.0], [-0.0522607751, 0.0, 0.0, 0.0], [0.239908472, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 15, 16, 21, 22, 23, 24, 12, 13, 25, 26, 20])
    branch_indices = np.array([0, 1, 3, 4, 10, 2, 5, 11, 17, 18, 6, 14, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_134(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.159500003, 1.0, 2.0, 1.0], [-0.889500022, 3.0, 4.0, 4.0], [0.246430784, 0.0, 0.0, 0.0], [-0.242500007, 5.0, 6.0, 0.0], [-0.682999969, 7.0, 8.0, 1.0], [0.65200001, 9.0, 10.0, 2.0], [-0.956499994, 11.0, 12.0, 4.0], [-0.778499961, 13.0, 14.0, 4.0], [-0.990499973, 15.0, 16.0, 3.0], [-0.493000001, 17.0, 18.0, 1.0], [-0.929499984, 19.0, 20.0, 4.0], [-0.681499958, 21.0, 22.0, 1.0], [-0.995499969, 23.0, 24.0, 3.0], [-0.384994805, 0.0, 0.0, 0.0], [-0.0588185228, 0.0, 0.0, 0.0], [-0.592499971, 25.0, 26.0, 1.0], [-0.555999994, 27.0, 28.0, 1.0], [-0.108827777, 0.0, 0.0, 0.0], [0.285916269, 0.0, 0.0, 0.0], [-0.499616861, 0.0, 0.0, 0.0], [-0.138527513, 0.0, 0.0, 0.0], [0.0669228062, 0.0, 0.0, 0.0], [-0.198090151, 0.0, 0.0, 0.0], [0.000308524031, 0.0, 0.0, 0.0], [0.201099798, 0.0, 0.0, 0.0], [0.363993287, 0.0, 0.0, 0.0], [-0.0281236209, 0.0, 0.0, 0.0], [-0.269954652, 0.0, 0.0, 0.0], [0.0129829859, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 13, 14, 25, 26, 27, 28, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_135(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.371500015, 1.0, 2.0, 2.0], [-0.98150003, 3.0, 4.0, 1.0], [-0.153953716, 0.0, 0.0, 0.0], [-0.297500014, 5.0, 6.0, 0.0], [0.127733737, 0.0, 0.0, 0.0], [-0.390500009, 7.0, 8.0, 0.0], [-0.296499997, 9.0, 10.0, 0.0], [-0.552999973, 11.0, 12.0, 0.0], [-0.247461826, 0.0, 0.0, 0.0], [0.305871785, 0.0, 0.0, 0.0], [-0.284500003, 13.0, 14.0, 0.0], [-0.0795733407, 0.0, 0.0, 0.0], [0.0610839128, 0.0, 0.0, 0.0], [-0.273394376, 0.0, 0.0, 0.0], [0.0018034291, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_136(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.463, 1.0, 2.0, 0.0], [-0.155478284, 0.0, 0.0, 0.0], [-0.423500001, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [-0.412999988, 7.0, 8.0, 0.0], [-0.0204960518, 0.0, 0.0, 0.0], [0.268039972, 0.0, 0.0, 0.0], [-0.306484967, 0.0, 0.0, 0.0], [-0.407499999, 9.0, 10.0, 0.0], [0.317084074, 0.0, 0.0, 0.0], [-0.401000023, 11.0, 12.0, 0.0], [-0.29380253, 0.0, 0.0, 0.0], [0.00137327414, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 7, 9, 11, 12])
    branch_indices = np.array([0, 2, 3, 4, 8, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_137(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.189348653, 0.0, 0.0, 0.0], [-0.992499948, 3.0, 4.0, 1.0], [0.415000021, 5.0, 6.0, 0.0], [0.319000006, 7.0, 8.0, 0.0], [0.409500003, 9.0, 10.0, 0.0], [0.429499984, 11.0, 12.0, 0.0], [-0.891000032, 13.0, 14.0, 1.0], [0.113609768, 0.0, 0.0, 0.0], [0.282499999, 15.0, 16.0, 0.0], [0.622356474, 0.0, 0.0, 0.0], [0.427999973, 17.0, 18.0, 0.0], [0.433499992, 19.0, 20.0, 0.0], [-0.923500001, 21.0, 22.0, 2.0], [-0.0207993742, 0.0, 0.0, 0.0], [0.0232408457, 0.0, 0.0, 0.0], [-0.103717886, 0.0, 0.0, 0.0], [-0.148050964, 0.0, 0.0, 0.0], [-0.535713434, 0.0, 0.0, 0.0], [0.222073555, 0.0, 0.0, 0.0], [-0.00839577802, 0.0, 0.0, 0.0], [-0.0993943661, 0.0, 0.0, 0.0], [-0.319751292, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 10, 17, 18, 19, 20, 21, 22, 14, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 11, 12, 4, 7, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_138(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.759500027, 1.0, 2.0, 1.0], [-0.344500005, 3.0, 4.0, 0.0], [-0.739500046, 5.0, 6.0, 1.0], [-0.259968609, 0.0, 0.0, 0.0], [0.571500003, 7.0, 8.0, 2.0], [-0.931499958, 9.0, 10.0, 4.0], [-0.979499996, 11.0, 12.0, 4.0], [-0.763499975, 13.0, 14.0, 1.0], [0.696500003, 15.0, 16.0, 2.0], [-0.211999997, 17.0, 18.0, 0.0], [0.439999998, 19.0, 20.0, 2.0], [-0.198500007, 21.0, 22.0, 0.0], [-0.734500051, 23.0, 24.0, 1.0], [-0.766499996, 25.0, 26.0, 1.0], [0.442499995, 27.0, 28.0, 2.0], [-0.938499987, 29.0, 30.0, 3.0], [-0.208748683, 0.0, 0.0, 0.0], [-0.467858404, 0.0, 0.0, 0.0], [-0.948500037, 31.0, 32.0, 4.0], [-0.252036422, 0.0, 0.0, 0.0], [-0.995999992, 33.0, 34.0, 3.0], [-0.342705518, 0.0, 0.0, 0.0], [-0.00931002852, 0.0, 0.0, 0.0], [-0.217000008, 35.0, 36.0, 0.0], [-0.999500036, 37.0, 38.0, 3.0], [0.0356032401, 0.0, 0.0, 0.0], [-0.368805796, 0.0, 0.0, 0.0], [0.0481539145, 0.0, 0.0, 0.0], [0.343820393, 0.0, 0.0, 0.0], [0.363857299, 0.0, 0.0, 0.0], [-0.131476194, 0.0, 0.0, 0.0], [0.142767578, 0.0, 0.0, 0.0], [-0.381613791, 0.0, 0.0, 0.0], [0.029455239, 0.0, 0.0, 0.0], [0.380289823, 0.0, 0.0, 0.0], [0.415430099, 0.0, 0.0, 0.0], [-0.0769109204, 0.0, 0.0, 0.0], [-0.292092741, 0.0, 0.0, 0.0], [0.0106293373, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 25, 26, 27, 28, 29, 30, 16, 17, 31, 32, 19, 33, 34, 21, 22, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 8, 15, 2, 5, 9, 18, 10, 20, 6, 11, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_139(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.819499969, 1.0, 2.0, 1.0], [0.516000032, 3.0, 4.0, 2.0], [-0.374500006, 5.0, 6.0, 0.0], [-0.113499999, 7.0, 8.0, 0.0], [0.57249999, 9.0, 10.0, 2.0], [0.555000007, 11.0, 12.0, 2.0], [0.635499954, 13.0, 14.0, 2.0], [-0.965499997, 15.0, 16.0, 4.0], [0.110817254, 0.0, 0.0, 0.0], [-0.994500041, 17.0, 18.0, 3.0], [-0.174259543, 0.0, 0.0, 0.0], [0.0533623248, 0.0, 0.0, 0.0], [0.260521591, 0.0, 0.0, 0.0], [0.628499985, 19.0, 20.0, 2.0], [0.642500043, 21.0, 22.0, 2.0], [-0.25849998, 23.0, 24.0, 0.0], [-0.923500001, 25.0, 26.0, 4.0], [-0.0580054224, 0.0, 0.0, 0.0], [-0.290499985, 27.0, 28.0, 0.0], [-0.334500015, 29.0, 30.0, 0.0], [-0.889500022, 31.0, 32.0, 4.0], [-0.431351036, 0.0, 0.0, 0.0], [-0.242500007, 33.0, 34.0, 0.0], [0.128598213, 0.0, 0.0, 0.0], [-0.169319764, 0.0, 0.0, 0.0], [-0.399524719, 0.0, 0.0, 0.0], [0.0172957592, 0.0, 0.0, 0.0], [0.368571937, 0.0, 0.0, 0.0], [0.0980406329, 0.0, 0.0, 0.0], [-0.205222607, 0.0, 0.0, 0.0], [0.0195468292, 0.0, 0.0, 0.0], [-0.0220565647, 0.0, 0.0, 0.0], [0.424160123, 0.0, 0.0, 0.0], [0.0666145533, 0.0, 0.0, 0.0], [-0.218271971, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 17, 27, 28, 10, 11, 12, 29, 30, 31, 32, 21, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 18, 2, 5, 6, 13, 19, 20, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_140(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.982499957, 3.0, 4.0, 3.0], [0.414499998, 5.0, 6.0, 2.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.297754139, 0.0, 0.0, 0.0], [-0.757500052, 9.0, 10.0, 1.0], [0.436500013, 11.0, 12.0, 2.0], [-0.798500001, 13.0, 14.0, 1.0], [-0.213734031, 0.0, 0.0, 0.0], [-0.988499999, 15.0, 16.0, 3.0], [-0.74150002, 17.0, 18.0, 1.0], [-0.242835626, 0.0, 0.0, 0.0], [-0.149500012, 19.0, 20.0, 0.0], [0.444000006, 21.0, 22.0, 2.0], [-0.965999961, 23.0, 24.0, 4.0], [0.0265237466, 0.0, 0.0, 0.0], [0.375191182, 0.0, 0.0, 0.0], [-0.242923513, 0.0, 0.0, 0.0], [-0.226000011, 25.0, 26.0, 0.0], [-0.174499989, 27.0, 28.0, 0.0], [-0.138500005, 29.0, 30.0, 0.0], [0.288831055, 0.0, 0.0, 0.0], [-0.0588269979, 0.0, 0.0, 0.0], [-0.268268883, 0.0, 0.0, 0.0], [0.0544680543, 0.0, 0.0, 0.0], [0.299325407, 0.0, 0.0, 0.0], [-0.0307910703, 0.0, 0.0, 0.0], [0.00379473367, 0.0, 0.0, 0.0], [0.216107756, 0.0, 0.0, 0.0], [-0.221500948, 0.0, 0.0, 0.0], [-0.0153193725, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 4, 15, 16, 17, 25, 26, 11, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 10, 18, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_141(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.00163000007, 1.0, 2.0, 0.0], [-0.00413500005, 3.0, 4.0, 0.0], [-0.00132499996, 5.0, 6.0, 0.0], [-0.00550500024, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.516136825, 0.0, 0.0, 0.0], [-0.000469999999, 11.0, 12.0, 0.0], [-0.00885999948, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.00209000008, 17.0, 18.0, 0.0], [0.0543911606, 0.0, 0.0, 0.0], [-0.000714999973, 19.0, 20.0, 0.0], [0.00588999968, 21.0, 22.0, 0.0], [-0.0101749999, 23.0, 24.0, 0.0], [0.397736132, 0.0, 0.0, 0.0], [-0.349009752, 0.0, 0.0, 0.0], [0.0142668458, 0.0, 0.0, 0.0], [0.504501164, 0.0, 0.0, 0.0], [0.0458654352, 0.0, 0.0, 0.0], [0.0304577071, 0.0, 0.0, 0.0], [0.364098638, 0.0, 0.0, 0.0], [0.00325499987, 25.0, 26.0, 0.0], [0.00758500025, 27.0, 28.0, 0.0], [0.00804247055, 0.0, 0.0, 0.0], [-0.970195353, 0.0, 0.0, 0.0], [-0.00182517688, 0.0, 0.0, 0.0], [-0.409245968, 0.0, 0.0, 0.0], [0.28704676, 0.0, 0.0, 0.0], [-0.00485060969, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 17, 18, 10, 5, 19, 20, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 9, 2, 6, 11, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_142(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [0.0240500011, 3.0, 4.0, 0.0], [-0.173619688, 0.0, 0.0, 0.0], [0.01315, 5.0, 6.0, 0.0], [0.0418500006, 7.0, 8.0, 0.0], [0.00325499987, 9.0, 10.0, 0.0], [0.0192999989, 11.0, 12.0, 0.0], [0.0353999995, 13.0, 14.0, 0.0], [0.0447499976, 15.0, 16.0, 0.0], [0.00151000009, 17.0, 18.0, 0.0], [-0.822000027, 19.0, 20.0, 2.0], [-0.35902217, 0.0, 0.0, 0.0], [0.0223500002, 21.0, 22.0, 0.0], [0.0293500014, 23.0, 24.0, 0.0], [0.656174481, 0.0, 0.0, 0.0], [-0.49628678, 0.0, 0.0, 0.0], [0.0507000014, 25.0, 26.0, 0.0], [0.000890265044, 0.0, 0.0, 0.0], [-0.259463519, 0.0, 0.0, 0.0], [0.218504816, 0.0, 0.0, 0.0], [-0.248187631, 0.0, 0.0, 0.0], [0.144775346, 0.0, 0.0, 0.0], [-0.163158625, 0.0, 0.0, 0.0], [0.226276726, 0.0, 0.0, 0.0], [-0.354722559, 0.0, 0.0, 0.0], [0.338167667, 0.0, 0.0, 0.0], [-0.0252875872, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 21, 22, 23, 24, 14, 15, 25, 26, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 7, 13, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_143(xs):
    #Predicts Class 5
    function_dict = np.array([[0.436500013, 1.0, 2.0, 0.0], [0.433499992, 3.0, 4.0, 0.0], [0.445500016, 5.0, 6.0, 0.0], [0.432500005, 7.0, 8.0, 0.0], [-0.512082279, 0.0, 0.0, 0.0], [0.408077627, 0.0, 0.0, 0.0], [0.455500007, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [0.343469232, 0.0, 0.0, 0.0], [0.446500003, 13.0, 14.0, 0.0], [0.503000021, 15.0, 16.0, 0.0], [0.424000025, 17.0, 18.0, 0.0], [-0.226186991, 0.0, 0.0, 0.0], [0.0341047235, 0.0, 0.0, 0.0], [-0.372615963, 0.0, 0.0, 0.0], [0.466499984, 19.0, 20.0, 0.0], [0.537500024, 21.0, 22.0, 0.0], [-0.00643265853, 0.0, 0.0, 0.0], [0.370841324, 0.0, 0.0, 0.0], [-0.0378531851, 0.0, 0.0, 0.0], [0.363724947, 0.0, 0.0, 0.0], [-0.131562665, 0.0, 0.0, 0.0], [0.0353676379, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_144(xs):
    #Predicts Class 0
    function_dict = np.array([[0.259499997, 1.0, 2.0, 2.0], [-0.87349999, 3.0, 4.0, 1.0], [0.276499987, 5.0, 6.0, 2.0], [-0.0597956032, 0.0, 0.0, 0.0], [-0.225338593, 0.0, 0.0, 0.0], [0.218083054, 0.0, 0.0, 0.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.217500001, 9.0, 10.0, 0.0], [-0.211499989, 11.0, 12.0, 0.0], [-0.946500003, 13.0, 14.0, 4.0], [-0.57099998, 15.0, 16.0, 1.0], [-0.950999975, 17.0, 18.0, 4.0], [0.449499995, 19.0, 20.0, 2.0], [-0.083471179, 0.0, 0.0, 0.0], [0.0261657424, 0.0, 0.0, 0.0], [-0.312900901, 0.0, 0.0, 0.0], [0.0952893868, 0.0, 0.0, 0.0], [0.0598412156, 0.0, 0.0, 0.0], [0.368442893, 0.0, 0.0, 0.0], [0.0924350321, 0.0, 0.0, 0.0], [3.14276585e-05, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 10, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_145(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.4745, 1.0, 2.0, 1.0], [-0.484499991, 3.0, 4.0, 1.0], [-0.86650002, 5.0, 6.0, 4.0], [-0.49150002, 7.0, 8.0, 1.0], [-0.250764608, 0.0, 0.0, 0.0], [-0.410000026, 9.0, 10.0, 1.0], [-0.23663038, 0.0, 0.0, 0.0], [-0.506500006, 11.0, 12.0, 1.0], [0.268258512, 0.0, 0.0, 0.0], [0.731000006, 13.0, 14.0, 2.0], [-0.280000001, 15.0, 16.0, 0.0], [-0.51849997, 17.0, 18.0, 1.0], [-0.245794535, 0.0, 0.0, 0.0], [0.644500017, 19.0, 20.0, 2.0], [-0.129410669, 0.0, 0.0, 0.0], [-0.332499981, 21.0, 22.0, 0.0], [-0.180500001, 23.0, 24.0, 0.0], [-0.00794290379, 0.0, 0.0, 0.0], [0.293971539, 0.0, 0.0, 0.0], [0.0966656804, 0.0, 0.0, 0.0], [0.464229733, 0.0, 0.0, 0.0], [-0.191300377, 0.0, 0.0, 0.0], [0.287080348, 0.0, 0.0, 0.0], [-0.329122394, 0.0, 0.0, 0.0], [0.0446872264, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 19, 20, 14, 21, 22, 23, 24, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5, 9, 13, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_146(xs):
    #Predicts Class 2
    function_dict = np.array([[0.0250499994, 1.0, 2.0, 0.0], [-0.799499989, 3.0, 4.0, 1.0], [-0.225084528, 0.0, 0.0, 0.0], [0.443499982, 5.0, 6.0, 2.0], [0.483500004, 7.0, 8.0, 2.0], [0.4375, 9.0, 10.0, 2.0], [-0.31159997, 0.0, 0.0, 0.0], [0.477999985, 11.0, 12.0, 2.0], [0.513499975, 13.0, 14.0, 2.0], [-0.82249999, 15.0, 16.0, 1.0], [0.298223674, 0.0, 0.0, 0.0], [-0.193500012, 17.0, 18.0, 0.0], [0.423762709, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 3.0], [0.557500005, 21.0, 22.0, 2.0], [0.0412986018, 0.0, 0.0, 0.0], [-0.243627787, 0.0, 0.0, 0.0], [-0.0612067394, 0.0, 0.0, 0.0], [0.119275734, 0.0, 0.0, 0.0], [0.0907904804, 0.0, 0.0, 0.0], [-0.3177917, 0.0, 0.0, 0.0], [0.0957343578, 0.0, 0.0, 0.0], [-0.0142323058, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 6, 17, 18, 12, 19, 20, 21, 22, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 11, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_147(xs):
    #Predicts Class 3
    function_dict = np.array([[0.561499953, 1.0, 2.0, 0.0], [0.557999969, 3.0, 4.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [0.556499958, 7.0, 8.0, 0.0], [-0.363806605, 0.0, 0.0, 0.0], [0.406131923, 0.0, 0.0, 0.0], [0.564499974, 9.0, 10.0, 0.0], [0.549000025, 11.0, 12.0, 0.0], [0.555517256, 0.0, 0.0, 0.0], [-0.333920121, 0.0, 0.0, 0.0], [0.565500021, 13.0, 14.0, 0.0], [0.546499968, 15.0, 16.0, 0.0], [-0.32592696, 0.0, 0.0, 0.0], [0.334552437, 0.0, 0.0, 0.0], [0.585000038, 17.0, 18.0, 0.0], [-0.000829596189, 0.0, 0.0, 0.0], [0.27653569, 0.0, 0.0, 0.0], [-0.310609221, 0.0, 0.0, 0.0], [0.0658545047, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_148(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0382499993, 1.0, 2.0, 0.0], [-0.0403999984, 3.0, 4.0, 0.0], [-0.0310500003, 5.0, 6.0, 0.0], [-0.0429500006, 7.0, 8.0, 0.0], [0.510657668, 0.0, 0.0, 0.0], [-0.410582453, 0.0, 0.0, 0.0], [-0.0302999988, 9.0, 10.0, 0.0], [-0.0466499999, 11.0, 12.0, 0.0], [-0.0423500016, 13.0, 14.0, 0.0], [0.304002494, 0.0, 0.0, 0.0], [-0.0297999997, 15.0, 16.0, 0.0], [-0.0473999977, 17.0, 18.0, 0.0], [-0.863000035, 19.0, 20.0, 2.0], [-0.327347606, 0.0, 0.0, 0.0], [-0.0364579074, 0.0, 0.0, 0.0], [-0.32122305, 0.0, 0.0, 0.0], [-0.0289000012, 21.0, 22.0, 0.0], [-0.00158964633, 0.0, 0.0, 0.0], [-0.295961738, 0.0, 0.0, 0.0], [0.471963495, 0.0, 0.0, 0.0], [-0.259757876, 0.0, 0.0, 0.0], [0.36993587, 0.0, 0.0, 0.0], [-0.0121711437, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_149(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.654500008, 1.0, 2.0, 2.0], [-0.99849999, 3.0, 4.0, 4.0], [-0.546499968, 5.0, 6.0, 2.0], [0.561499953, 7.0, 8.0, 0.0], [0.186408952, 0.0, 0.0, 0.0], [-0.996500015, 9.0, 10.0, 1.0], [0.102500007, 11.0, 12.0, 0.0], [0.557999969, 13.0, 14.0, 0.0], [0.5625, 15.0, 16.0, 0.0], [-0.637500048, 17.0, 18.0, 2.0], [-0.0145361898, 0.0, 0.0, 0.0], [-0.495999992, 19.0, 20.0, 2.0], [0.16779761, 0.0, 0.0, 0.0], [0.556499958, 21.0, 22.0, 0.0], [0.36456722, 0.0, 0.0, 0.0], [-0.404496044, 0.0, 0.0, 0.0], [0.564499974, 23.0, 24.0, 0.0], [-0.307953417, 0.0, 0.0, 0.0], [-0.055577483, 0.0, 0.0, 0.0], [0.0452655852, 0.0, 0.0, 0.0], [-0.164289504, 0.0, 0.0, 0.0], [0.00992663298, 0.0, 0.0, 0.0], [-0.553602934, 0.0, 0.0, 0.0], [0.334809631, 0.0, 0.0, 0.0], [-0.0543315932, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 23, 24, 4, 17, 18, 10, 19, 20, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_150(xs):
    #Predicts Class 0
    function_dict = np.array([[0.412499994, 1.0, 2.0, 2.0], [-0.270500004, 3.0, 4.0, 0.0], [-0.752499998, 5.0, 6.0, 1.0], [-0.273446023, 0.0, 0.0, 0.0], [-0.184500009, 7.0, 8.0, 0.0], [-0.996500015, 9.0, 10.0, 3.0], [-0.344500005, 11.0, 12.0, 0.0], [-0.922500014, 13.0, 14.0, 4.0], [-0.0961499959, 15.0, 16.0, 0.0], [-0.9745, 17.0, 18.0, 4.0], [-0.907500029, 19.0, 20.0, 4.0], [-0.361500025, 21.0, 22.0, 0.0], [-0.336499989, 23.0, 24.0, 0.0], [-0.801499963, 25.0, 26.0, 1.0], [0.255046129, 0.0, 0.0, 0.0], [-0.86500001, 27.0, 28.0, 1.0], [-0.0580499992, 29.0, 30.0, 0.0], [0.275971651, 0.0, 0.0, 0.0], [0.510499954, 31.0, 32.0, 2.0], [-0.930500031, 33.0, 34.0, 4.0], [-0.283999979, 35.0, 36.0, 0.0], [-0.0230165385, 0.0, 0.0, 0.0], [0.297166616, 0.0, 0.0, 0.0], [-0.690500021, 37.0, 38.0, 1.0], [-0.952499986, 39.0, 40.0, 4.0], [0.118781477, 0.0, 0.0, 0.0], [-0.134729251, 0.0, 0.0, 0.0], [0.0182794854, 0.0, 0.0, 0.0], [-0.300215006, 0.0, 0.0, 0.0], [0.1867643, 0.0, 0.0, 0.0], [-0.121258974, 0.0, 0.0, 0.0], [-0.186650231, 0.0, 0.0, 0.0], [0.0618419312, 0.0, 0.0, 0.0], [0.13122502, 0.0, 0.0, 0.0], [-0.191871449, 0.0, 0.0, 0.0], [0.0660572127, 0.0, 0.0, 0.0], [0.359578192, 0.0, 0.0, 0.0], [0.0556715727, 0.0, 0.0, 0.0], [-0.413570791, 0.0, 0.0, 0.0], [0.0598048382, 0.0, 0.0, 0.0], [-0.0375413001, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 25, 26, 14, 27, 28, 29, 30, 17, 31, 32, 33, 34, 35, 36, 21, 22, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 4, 7, 13, 8, 15, 16, 2, 5, 9, 18, 10, 19, 20, 6, 11, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_151(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.375499994, 1.0, 2.0, 0.0], [0.553499997, 3.0, 4.0, 2.0], [-0.885499954, 5.0, 6.0, 3.0], [0.0421574451, 0.0, 0.0, 0.0], [0.231109113, 0.0, 0.0, 0.0], [0.602499962, 7.0, 8.0, 2.0], [-0.879500031, 9.0, 10.0, 3.0], [0.591500044, 11.0, 12.0, 2.0], [0.612499952, 13.0, 14.0, 2.0], [0.427120686, 0.0, 0.0, 0.0], [-0.949000001, 15.0, 16.0, 4.0], [-0.291500002, 17.0, 18.0, 0.0], [-0.929499984, 19.0, 20.0, 4.0], [-0.372300565, 0.0, 0.0, 0.0], [-0.960500002, 21.0, 22.0, 4.0], [-0.676499963, 23.0, 24.0, 1.0], [-0.335999995, 25.0, 26.0, 0.0], [0.105082825, 0.0, 0.0, 0.0], [-0.0220975913, 0.0, 0.0, 0.0], [0.0663425028, 0.0, 0.0, 0.0], [0.368765146, 0.0, 0.0, 0.0], [-0.190351084, 0.0, 0.0, 0.0], [0.0141021721, 0.0, 0.0, 0.0], [0.0396252871, 0.0, 0.0, 0.0], [0.252427965, 0.0, 0.0, 0.0], [0.149972111, 0.0, 0.0, 0.0], [-0.278055727, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 17, 18, 19, 20, 13, 21, 22, 9, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 8, 14, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_152(xs):
    #Predicts Class 2
    function_dict = np.array([[0.60650003, 1.0, 2.0, 2.0], [0.5995, 3.0, 4.0, 2.0], [0.612499952, 5.0, 6.0, 2.0], [-0.296499997, 7.0, 8.0, 0.0], [-0.222499996, 9.0, 10.0, 0.0], [0.372430563, 0.0, 0.0, 0.0], [0.62349999, 11.0, 12.0, 2.0], [-0.493000001, 13.0, 14.0, 1.0], [-0.287499994, 15.0, 16.0, 0.0], [0.105685636, 0.0, 0.0, 0.0], [-0.46559602, 0.0, 0.0, 0.0], [-0.328542739, 0.0, 0.0, 0.0], [-0.996500015, 17.0, 18.0, 3.0], [-0.301306099, 0.0, 0.0, 0.0], [-0.466499984, 19.0, 20.0, 1.0], [0.353941768, 0.0, 0.0, 0.0], [0.594500005, 21.0, 22.0, 2.0], [-0.963500023, 23.0, 24.0, 4.0], [-0.983500004, 25.0, 26.0, 3.0], [0.220329896, 0.0, 0.0, 0.0], [-0.199167207, 0.0, 0.0, 0.0], [-0.00968831405, 0.0, 0.0, 0.0], [0.212131888, 0.0, 0.0, 0.0], [0.468841314, 0.0, 0.0, 0.0], [0.0624526404, 0.0, 0.0, 0.0], [-0.151178628, 0.0, 0.0, 0.0], [0.0741941258, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 19, 20, 15, 21, 22, 9, 10, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 16, 4, 2, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_153(xs):
    #Predicts Class 3
    function_dict = np.array([[0.0689999983, 1.0, 2.0, 0.0], [0.0560500026, 3.0, 4.0, 0.0], [0.0776499957, 5.0, 6.0, 0.0], [0.0477499999, 7.0, 8.0, 0.0], [-0.851999998, 9.0, 10.0, 2.0], [0.0757500008, 11.0, 12.0, 0.0], [0.0821999982, 13.0, 14.0, 0.0], [0.0422499999, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [0.381865263, 0.0, 0.0, 0.0], [0.117594063, 0.0, 0.0, 0.0], [0.074149996, 19.0, 20.0, 0.0], [-0.557475269, 0.0, 0.0, 0.0], [0.347066164, 0.0, 0.0, 0.0], [0.0894500017, 21.0, 22.0, 0.0], [0.0353999995, 23.0, 24.0, 0.0], [0.0447499976, 25.0, 26.0, 0.0], [-0.419142187, 0.0, 0.0, 0.0], [0.141472578, 0.0, 0.0, 0.0], [-0.374476582, 0.0, 0.0, 0.0], [0.251886815, 0.0, 0.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [0.147, 29.0, 30.0, 0.0], [0.00862360001, 0.0, 0.0, 0.0], [-0.412001371, 0.0, 0.0, 0.0], [0.404173821, 0.0, 0.0, 0.0], [-0.0619021133, 0.0, 0.0, 0.0], [-0.111870021, 0.0, 0.0, 0.0], [-0.3860659, 0.0, 0.0, 0.0], [0.126689285, 0.0, 0.0, 0.0], [-0.0176361129, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 18, 9, 10, 19, 20, 12, 13, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 2, 5, 11, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_154(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0694999993, 1.0, 2.0, 0.0], [0.0560500026, 3.0, 4.0, 0.0], [0.0776499957, 5.0, 6.0, 0.0], [0.0477499999, 7.0, 8.0, 0.0], [-0.851999998, 9.0, 10.0, 2.0], [0.0757500008, 11.0, 12.0, 0.0], [0.0825999975, 13.0, 14.0, 0.0], [0.0417999998, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [-0.378891587, 0.0, 0.0, 0.0], [-0.111086614, 0.0, 0.0, 0.0], [0.074149996, 19.0, 20.0, 0.0], [0.568295002, 0.0, 0.0, 0.0], [-0.345561862, 0.0, 0.0, 0.0], [0.0894500017, 21.0, 22.0, 0.0], [0.0353999995, 23.0, 24.0, 0.0], [0.0447499976, 25.0, 26.0, 0.0], [0.423102707, 0.0, 0.0, 0.0], [-0.13572529, 0.0, 0.0, 0.0], [0.385355651, 0.0, 0.0, 0.0], [-0.245214626, 0.0, 0.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [0.0912000015, 29.0, 30.0, 0.0], [-0.00568636926, 0.0, 0.0, 0.0], [0.413226932, 0.0, 0.0, 0.0], [-0.401824832, 0.0, 0.0, 0.0], [0.0656316876, 0.0, 0.0, 0.0], [0.12025398, 0.0, 0.0, 0.0], [0.389853895, 0.0, 0.0, 0.0], [-0.304309338, 0.0, 0.0, 0.0], [0.00202649203, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 18, 9, 10, 19, 20, 12, 13, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 2, 5, 11, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_155(xs):
    #Predicts Class 5
    function_dict = np.array([[0.201499999, 1.0, 2.0, 0.0], [-0.0123999994, 3.0, 4.0, 0.0], [0.218499988, 5.0, 6.0, 0.0], [-0.0371000022, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.999500036, 11.0, 12.0, 1.0], [-0.923500001, 13.0, 14.0, 2.0], [-0.0742499977, 15.0, 16.0, 0.0], [-0.0318999998, 17.0, 18.0, 0.0], [-0.319737613, 0.0, 0.0, 0.0], [0.172499999, 19.0, 20.0, 0.0], [0.0595952608, 0.0, 0.0, 0.0], [0.274339467, 0.0, 0.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [0.541999996, 23.0, 24.0, 0.0], [-0.080400005, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [0.414143384, 0.0, 0.0, 0.0], [-0.0226499997, 29.0, 30.0, 0.0], [-0.996500015, 31.0, 32.0, 1.0], [0.0995573103, 0.0, 0.0, 0.0], [0.5255, 33.0, 34.0, 0.0], [0.531000018, 35.0, 36.0, 0.0], [-0.639999986, 37.0, 38.0, 2.0], [0.565500021, 39.0, 40.0, 0.0], [-0.0289835297, 0.0, 0.0, 0.0], [0.252813309, 0.0, 0.0, 0.0], [-0.27176106, 0.0, 0.0, 0.0], [-0.0635533035, 0.0, 0.0, 0.0], [-0.239460543, 0.0, 0.0, 0.0], [0.200676709, 0.0, 0.0, 0.0], [-0.230490282, 0.0, 0.0, 0.0], [0.0445687771, 0.0, 0.0, 0.0], [0.0441085212, 0.0, 0.0, 0.0], [-0.0602335036, 0.0, 0.0, 0.0], [0.0141463522, 0.0, 0.0, 0.0], [0.362034321, 0.0, 0.0, 0.0], [-0.292097509, 0.0, 0.0, 0.0], [0.0869291946, 0.0, 0.0, 0.0], [0.309021324, 0.0, 0.0, 0.0], [-0.113824546, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 17, 29, 30, 9, 31, 32, 20, 11, 12, 33, 34, 35, 36, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 10, 19, 2, 5, 6, 13, 21, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_156(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.945500016, 1.0, 2.0, 4.0], [-0.950500011, 3.0, 4.0, 4.0], [-0.931499958, 5.0, 6.0, 4.0], [-0.973500013, 7.0, 8.0, 3.0], [-0.756500006, 9.0, 10.0, 1.0], [-0.997500002, 11.0, 12.0, 3.0], [-0.976500034, 13.0, 14.0, 3.0], [0.679499984, 15.0, 16.0, 2.0], [-0.960500002, 17.0, 18.0, 4.0], [-0.982499957, 19.0, 20.0, 3.0], [-0.95449996, 21.0, 22.0, 3.0], [-0.265500009, 23.0, 24.0, 0.0], [-0.727499962, 25.0, 26.0, 1.0], [-0.979499996, 27.0, 28.0, 3.0], [-0.871500015, 29.0, 30.0, 4.0], [-0.178499997, 31.0, 32.0, 0.0], [0.25866273, 0.0, 0.0, 0.0], [-0.658499956, 33.0, 34.0, 1.0], [-0.25150001, 35.0, 36.0, 0.0], [-0.265500009, 37.0, 38.0, 0.0], [-0.207676888, 0.0, 0.0, 0.0], [-0.304828107, 0.0, 0.0, 0.0], [-0.0741015002, 0.0, 0.0, 0.0], [0.126787856, 0.0, 0.0, 0.0], [0.546499968, 39.0, 40.0, 2.0], [-0.752499998, 41.0, 42.0, 1.0], [-0.61650002, 43.0, 44.0, 1.0], [-0.862499952, 45.0, 46.0, 4.0], [0.673500001, 47.0, 48.0, 2.0], [0.527499974, 49.0, 50.0, 2.0], [0.654500008, 51.0, 52.0, 2.0], [-0.00374839921, 0.0, 0.0, 0.0], [-0.192939177, 0.0, 0.0, 0.0], [0.10034176, 0.0, 0.0, 0.0], [-0.186440557, 0.0, 0.0, 0.0], [-0.0121964263, 0.0, 0.0, 0.0], [0.38178131, 0.0, 0.0, 0.0], [-0.0295374077, 0.0, 0.0, 0.0], [0.253855288, 0.0, 0.0, 0.0], [-0.382359236, 0.0, 0.0, 0.0], [-0.0354944207, 0.0, 0.0, 0.0], [0.162681013, 0.0, 0.0, 0.0], [-0.342166483, 0.0, 0.0, 0.0], [0.397296846, 0.0, 0.0, 0.0], [-0.0105052078, 0.0, 0.0, 0.0], [0.102888077, 0.0, 0.0, 0.0], [-0.0883823857, 0.0, 0.0, 0.0], [0.37257126, 0.0, 0.0, 0.0], [0.0931148008, 0.0, 0.0, 0.0], [0.0252611171, 0.0, 0.0, 0.0], [-0.294813991, 0.0, 0.0, 0.0], [0.179924935, 0.0, 0.0, 0.0], [-0.0827024505, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([31, 32, 16, 33, 34, 35, 36, 37, 38, 20, 21, 22, 23, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 18, 4, 9, 19, 10, 2, 5, 11, 24, 12, 25, 26, 6, 13, 27, 28, 14, 29, 30])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_157(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.94749999, 1.0, 2.0, 4.0], [-0.950500011, 3.0, 4.0, 4.0], [-0.17750001, 5.0, 6.0, 0.0], [-0.141499996, 7.0, 8.0, 0.0], [-0.982499957, 9.0, 10.0, 3.0], [-0.19749999, 11.0, 12.0, 0.0], [0.0417999998, 13.0, 14.0, 0.0], [-0.82249999, 15.0, 16.0, 1.0], [-0.107500002, 17.0, 18.0, 0.0], [-0.994500041, 19.0, 20.0, 3.0], [0.360554725, 0.0, 0.0, 0.0], [-0.488499999, 21.0, 22.0, 1.0], [-0.739499986, 23.0, 24.0, 1.0], [-0.342160732, 0.0, 0.0, 0.0], [0.0644630492, 0.0, 0.0, 0.0], [0.4005, 25.0, 26.0, 2.0], [-0.815500021, 27.0, 28.0, 1.0], [-0.96449995, 29.0, 30.0, 4.0], [0.0463999994, 31.0, 32.0, 0.0], [-0.997500002, 33.0, 34.0, 3.0], [-0.398186594, 0.0, 0.0, 0.0], [-0.716499984, 35.0, 36.0, 1.0], [-0.928499997, 37.0, 38.0, 4.0], [-0.805000007, 39.0, 40.0, 1.0], [-0.186500013, 41.0, 42.0, 0.0], [-0.00316851959, 0.0, 0.0, 0.0], [-0.323330402, 0.0, 0.0, 0.0], [0.447999716, 0.0, 0.0, 0.0], [-0.00897145271, 0.0, 0.0, 0.0], [0.349913269, 0.0, 0.0, 0.0], [0.0227364711, 0.0, 0.0, 0.0], [-0.257199079, 0.0, 0.0, 0.0], [0.00721526938, 0.0, 0.0, 0.0], [0.0342534482, 0.0, 0.0, 0.0], [0.274225682, 0.0, 0.0, 0.0], [0.0228445809, 0.0, 0.0, 0.0], [-0.11693687, 0.0, 0.0, 0.0], [0.417480975, 0.0, 0.0, 0.0], [-0.0293117892, 0.0, 0.0, 0.0], [0.324629188, 0.0, 0.0, 0.0], [-0.329795599, 0.0, 0.0, 0.0], [0.357929289, 0.0, 0.0, 0.0], [0.04476602, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 20, 10, 35, 36, 37, 38, 39, 40, 41, 42, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 19, 2, 5, 11, 21, 22, 12, 23, 24, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_158(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.101500005, 3.0, 4.0, 0.0], [-0.979499996, 5.0, 6.0, 4.0], [-0.986500025, 7.0, 8.0, 4.0], [-0.657000005, 9.0, 10.0, 1.0], [0.0783889964, 0.0, 0.0, 0.0], [-0.661499977, 11.0, 12.0, 1.0], [-0.222138748, 0.0, 0.0, 0.0], [-0.982499957, 13.0, 14.0, 4.0], [-0.894500017, 15.0, 16.0, 4.0], [0.311484188, 0.0, 0.0, 0.0], [-0.250809699, 0.0, 0.0, 0.0], [0.000867290131, 0.0, 0.0, 0.0], [-0.706499994, 17.0, 18.0, 1.0], [0.342500001, 19.0, 20.0, 2.0], [0.185299203, 0.0, 0.0, 0.0], [-0.108212546, 0.0, 0.0, 0.0], [0.3243815, 0.0, 0.0, 0.0], [-0.142718211, 0.0, 0.0, 0.0], [-0.214785025, 0.0, 0.0, 0.0], [-0.00438367203, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 17, 18, 19, 20, 15, 16, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 8, 13, 14, 4, 9, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_159(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [0.618499994, 3.0, 4.0, 0.0], [0.141499996, 5.0, 6.0, 0.0], [0.585000038, 7.0, 8.0, 0.0], [0.620499969, 9.0, 10.0, 0.0], [-0.519999981, 11.0, 12.0, 2.0], [-0.851999998, 13.0, 14.0, 2.0], [0.565500021, 15.0, 16.0, 0.0], [0.616999984, 17.0, 18.0, 0.0], [-0.276755422, 0.0, 0.0, 0.0], [0.621500015, 19.0, 20.0, 0.0], [-0.0703999996, 21.0, 22.0, 0.0], [-0.467500001, 23.0, 24.0, 2.0], [-0.309431911, 0.0, 0.0, 0.0], [-0.0517331846, 0.0, 0.0, 0.0], [0.564499974, 25.0, 26.0, 0.0], [-0.2889871, 0.0, 0.0, 0.0], [0.182576329, 0.0, 0.0, 0.0], [0.0476219282, 0.0, 0.0, 0.0], [0.0962631702, 0.0, 0.0, 0.0], [-0.0696161166, 0.0, 0.0, 0.0], [-0.134339526, 0.0, 0.0, 0.0], [0.00753000006, 27.0, 28.0, 0.0], [-0.255676895, 0.0, 0.0, 0.0], [-0.0842101425, 0.0, 0.0, 0.0], [0.00502748694, 0.0, 0.0, 0.0], [0.279225826, 0.0, 0.0, 0.0], [0.0517096743, 0.0, 0.0, 0.0], [0.314146012, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 18, 9, 19, 20, 21, 27, 28, 23, 24, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 2, 5, 11, 22, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_160(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.923500001, 1.0, 2.0, 2.0], [-0.057099998, 3.0, 4.0, 0.0], [-0.851999998, 5.0, 6.0, 2.0], [-0.0721499994, 7.0, 8.0, 0.0], [-0.0496499985, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.770500004, 13.0, 14.0, 2.0], [-0.0732000023, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.431199372, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.0258499999, 21.0, 22.0, 0.0], [-0.885499954, 23.0, 24.0, 2.0], [0.0291999988, 25.0, 26.0, 0.0], [-0.721500039, 27.0, 28.0, 2.0], [-0.999500036, 29.0, 30.0, 4.0], [-0.416656375, 0.0, 0.0, 0.0], [0.469652742, 0.0, 0.0, 0.0], [0.108947866, 0.0, 0.0, 0.0], [-0.0460999981, 31.0, 32.0, 0.0], [0.0145500004, 33.0, 34.0, 0.0], [-0.0540499985, 35.0, 36.0, 0.0], [0.491921127, 0.0, 0.0, 0.0], [-0.0406999998, 37.0, 38.0, 0.0], [0.011705, 39.0, 40.0, 0.0], [0.00679999962, 41.0, 42.0, 0.0], [-0.999500036, 43.0, 44.0, 4.0], [-0.0554499999, 45.0, 46.0, 0.0], [-0.680500031, 47.0, 48.0, 2.0], [0.0136827361, 0.0, 0.0, 0.0], [-0.171171874, 0.0, 0.0, 0.0], [0.315943331, 0.0, 0.0, 0.0], [-0.0481247306, 0.0, 0.0, 0.0], [0.448817164, 0.0, 0.0, 0.0], [-0.11710614, 0.0, 0.0, 0.0], [0.149729893, 0.0, 0.0, 0.0], [-0.25963366, 0.0, 0.0, 0.0], [0.0773983598, 0.0, 0.0, 0.0], [-0.316591978, 0.0, 0.0, 0.0], [0.263363808, 0.0, 0.0, 0.0], [0.0579322167, 0.0, 0.0, 0.0], [-0.0915867612, 0.0, 0.0, 0.0], [-0.395410061, 0.0, 0.0, 0.0], [0.2828224, 0.0, 0.0, 0.0], [-0.0566239916, 0.0, 0.0, 0.0], [-0.03010308, 0.0, 0.0, 0.0], [0.254311174, 0.0, 0.0, 0.0], [-0.182809606, 0.0, 0.0, 0.0], [0.0365517959, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 17, 18, 9, 31, 32, 33, 34, 35, 36, 22, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 19, 20, 2, 5, 11, 21, 12, 23, 24, 6, 13, 25, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_161(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.565500021, 7.0, 8.0, 0.0], [0.616999984, 9.0, 10.0, 0.0], [0.277467728, 0.0, 0.0, 0.0], [0.621500015, 11.0, 12.0, 0.0], [0.564499974, 13.0, 14.0, 0.0], [0.290981829, 0.0, 0.0, 0.0], [-0.175117835, 0.0, 0.0, 0.0], [-0.0463771783, 0.0, 0.0, 0.0], [-0.0954020619, 0.0, 0.0, 0.0], [0.0888333619, 0.0, 0.0, 0.0], [0.539999962, 15.0, 16.0, 0.0], [-0.276824713, 0.0, 0.0, 0.0], [-0.0131706474, 0.0, 0.0, 0.0], [0.0858152583, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 14, 8, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_162(xs):
    #Predicts Class 0
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [0.711500049, 3.0, 4.0, 2.0], [-0.257499993, 5.0, 6.0, 0.0], [-0.727499962, 7.0, 8.0, 4.0], [-0.360212058, 0.0, 0.0, 0.0], [-0.593500018, 9.0, 10.0, 1.0], [-0.593500018, 11.0, 12.0, 1.0], [-0.560500026, 13.0, 14.0, 1.0], [0.66050005, 15.0, 16.0, 2.0], [0.107030451, 0.0, 0.0, 0.0], [-0.330110461, 0.0, 0.0, 0.0], [-0.149500012, 17.0, 18.0, 0.0], [0.801499963, 19.0, 20.0, 2.0], [-0.155499995, 21.0, 22.0, 0.0], [-0.539499998, 23.0, 24.0, 1.0], [0.321381897, 0.0, 0.0, 0.0], [0.00207832991, 0.0, 0.0, 0.0], [-0.906499982, 25.0, 26.0, 4.0], [-0.282265753, 0.0, 0.0, 0.0], [-0.984499991, 27.0, 28.0, 3.0], [-0.712499976, 29.0, 30.0, 4.0], [-0.0166037418, 0.0, 0.0, 0.0], [0.0611459203, 0.0, 0.0, 0.0], [-0.313124031, 0.0, 0.0, 0.0], [-0.0458381586, 0.0, 0.0, 0.0], [-0.190491736, 0.0, 0.0, 0.0], [0.210928783, 0.0, 0.0, 0.0], [0.399635047, 0.0, 0.0, 0.0], [0.104886502, 0.0, 0.0, 0.0], [0.0857444704, 0.0, 0.0, 0.0], [-0.18527475, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 4, 9, 10, 25, 26, 18, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 6, 11, 17, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_163(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.207500011, 1.0, 2.0, 0.0], [-0.2095, 3.0, 4.0, 0.0], [0.576499999, 5.0, 6.0, 2.0], [-0.210500002, 7.0, 8.0, 0.0], [-0.208499998, 9.0, 10.0, 0.0], [-0.887500048, 11.0, 12.0, 4.0], [0.5995, 13.0, 14.0, 2.0], [-0.977499962, 15.0, 16.0, 3.0], [-0.29243356, 0.0, 0.0, 0.0], [0.107695907, 0.0, 0.0, 0.0], [0.357371241, 0.0, 0.0, 0.0], [-0.191500008, 17.0, 18.0, 0.0], [-0.190499991, 19.0, 20.0, 0.0], [-0.391248822, 0.0, 0.0, 0.0], [0.605499983, 21.0, 22.0, 2.0], [-0.98150003, 23.0, 24.0, 3.0], [-0.455500007, 25.0, 26.0, 1.0], [0.458499998, 27.0, 28.0, 2.0], [0.457499981, 29.0, 30.0, 2.0], [0.343038023, 0.0, 0.0, 0.0], [-0.0384327434, 0.0, 0.0, 0.0], [0.238596812, 0.0, 0.0, 0.0], [-0.967499971, 31.0, 32.0, 4.0], [0.00428525265, 0.0, 0.0, 0.0], [-0.170593187, 0.0, 0.0, 0.0], [0.122131199, 0.0, 0.0, 0.0], [-0.11299628, 0.0, 0.0, 0.0], [0.115959428, 0.0, 0.0, 0.0], [-0.321401685, 0.0, 0.0, 0.0], [-0.0829530954, 0.0, 0.0, 0.0], [0.14730911, 0.0, 0.0, 0.0], [0.163818419, 0.0, 0.0, 0.0], [-0.251906246, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 9, 10, 27, 28, 29, 30, 19, 20, 13, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 17, 18, 12, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_164(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.603999972, 1.0, 2.0, 4.0], [-0.149500012, 3.0, 4.0, 0.0], [-0.978500009, 5.0, 6.0, 3.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.988499999, 9.0, 10.0, 3.0], [-0.275950044, 0.0, 0.0, 0.0], [0.0377246998, 0.0, 0.0, 0.0], [-0.192499995, 11.0, 12.0, 0.0], [-0.63499999, 13.0, 14.0, 1.0], [0.522499979, 15.0, 16.0, 2.0], [-0.976500034, 17.0, 18.0, 3.0], [-0.196500003, 19.0, 20.0, 0.0], [-0.337658852, 0.0, 0.0, 0.0], [0.451000005, 21.0, 22.0, 2.0], [-0.938500047, 23.0, 24.0, 4.0], [-0.702499986, 25.0, 26.0, 1.0], [0.682500005, 27.0, 28.0, 2.0], [-0.306846201, 0.0, 0.0, 0.0], [-0.913499951, 29.0, 30.0, 4.0], [-0.0127970492, 0.0, 0.0, 0.0], [0.178959742, 0.0, 0.0, 0.0], [-0.0362075754, 0.0, 0.0, 0.0], [0.359002084, 0.0, 0.0, 0.0], [-0.185187504, 0.0, 0.0, 0.0], [0.157319486, 0.0, 0.0, 0.0], [-0.03699404, 0.0, 0.0, 0.0], [0.401707113, 0.0, 0.0, 0.0], [-0.184996843, 0.0, 0.0, 0.0], [0.270139903, 0.0, 0.0, 0.0], [-0.195954308, 0.0, 0.0, 0.0], [0.0498115756, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 21, 22, 23, 24, 25, 26, 27, 28, 17, 29, 30, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 4, 9, 15, 16, 10, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_165(xs):
    #Predicts Class 3
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [-0.140500009, 7.0, 8.0, 0.0], [0.217044279, 0.0, 0.0, 0.0], [0.615499973, 9.0, 10.0, 0.0], [-0.343567729, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [-0.139499992, 13.0, 14.0, 0.0], [-0.260926723, 0.0, 0.0, 0.0], [0.618499994, 15.0, 16.0, 0.0], [-0.282999992, 17.0, 18.0, 0.0], [-0.254500002, 19.0, 20.0, 0.0], [0.289132655, 0.0, 0.0, 0.0], [-0.136500001, 21.0, 22.0, 0.0], [0.356033981, 0.0, 0.0, 0.0], [0.0145945596, 0.0, 0.0, 0.0], [0.119817987, 0.0, 0.0, 0.0], [-0.123533681, 0.0, 0.0, 0.0], [-0.127316162, 0.0, 0.0, 0.0], [0.218251258, 0.0, 0.0, 0.0], [-0.163078502, 0.0, 0.0, 0.0], [0.00458770618, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 21, 22, 4, 9, 15, 16, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 5, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_166(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0867500007, 1.0, 2.0, 0.0], [0.0854000002, 3.0, 4.0, 0.0], [0.0923999995, 5.0, 6.0, 0.0], [0.0825999975, 7.0, 8.0, 0.0], [-0.341581762, 0.0, 0.0, 0.0], [0.0912000015, 9.0, 10.0, 0.0], [0.0941499993, 11.0, 12.0, 0.0], [0.0760499984, 13.0, 14.0, 0.0], [0.0847499967, 15.0, 16.0, 0.0], [0.0894500017, 17.0, 18.0, 0.0], [0.36739862, 0.0, 0.0, 0.0], [-0.332132369, 0.0, 0.0, 0.0], [0.0960000008, 19.0, 20.0, 0.0], [0.0740500018, 21.0, 22.0, 0.0], [0.0775500014, 23.0, 24.0, 0.0], [0.0651210919, 0.0, 0.0, 0.0], [0.243523791, 0.0, 0.0, 0.0], [0.0883999988, 25.0, 26.0, 0.0], [-0.243228167, 0.0, 0.0, 0.0], [0.432035208, 0.0, 0.0, 0.0], [0.1105, 27.0, 28.0, 0.0], [-0.00400583306, 0.0, 0.0, 0.0], [0.294753194, 0.0, 0.0, 0.0], [-0.294540197, 0.0, 0.0, 0.0], [-0.0876421258, 0.0, 0.0, 0.0], [0.234187439, 0.0, 0.0, 0.0], [0.048721794, 0.0, 0.0, 0.0], [-0.20070076, 0.0, 0.0, 0.0], [0.0461264886, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 4, 25, 26, 18, 10, 11, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 9, 17, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_167(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [0.557999969, 7.0, 8.0, 0.0], [-0.210316882, 0.0, 0.0, 0.0], [0.615499973, 9.0, 10.0, 0.0], [0.344828457, 0.0, 0.0, 0.0], [0.556499958, 11.0, 12.0, 0.0], [0.561499953, 13.0, 14.0, 0.0], [0.262533695, 0.0, 0.0, 0.0], [0.618499994, 15.0, 16.0, 0.0], [0.549000025, 17.0, 18.0, 0.0], [-0.217519447, 0.0, 0.0, 0.0], [0.263873339, 0.0, 0.0, 0.0], [-0.0366438366, 0.0, 0.0, 0.0], [-0.354800344, 0.0, 0.0, 0.0], [0.621500015, 19.0, 20.0, 0.0], [-0.00394415576, 0.0, 0.0, 0.0], [0.266176641, 0.0, 0.0, 0.0], [-0.012093938, 0.0, 0.0, 0.0], [0.00985856261, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 9, 15, 19, 20, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 5, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_168(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.449499995, 1.0, 2.0, 1.0], [0.463499993, 3.0, 4.0, 2.0], [-0.357500017, 5.0, 6.0, 1.0], [-0.824499965, 7.0, 8.0, 1.0], [-0.74849999, 9.0, 10.0, 1.0], [0.635499954, 11.0, 12.0, 2.0], [0.144313172, 0.0, 0.0, 0.0], [-0.963500023, 13.0, 14.0, 4.0], [-0.274999976, 15.0, 16.0, 0.0], [-0.317499995, 17.0, 18.0, 0.0], [-0.344500005, 19.0, 20.0, 0.0], [0.040686097, 0.0, 0.0, 0.0], [-0.807000041, 21.0, 22.0, 4.0], [-0.82949996, 23.0, 24.0, 1.0], [-0.858500004, 25.0, 26.0, 1.0], [-0.325700045, 0.0, 0.0, 0.0], [-0.260999978, 27.0, 28.0, 0.0], [-0.803499997, 29.0, 30.0, 1.0], [-0.971500039, 31.0, 32.0, 4.0], [-0.361500025, 33.0, 34.0, 0.0], [-0.309499979, 35.0, 36.0, 0.0], [-0.0815522, 0.0, 0.0, 0.0], [-0.352165937, 0.0, 0.0, 0.0], [-0.074474141, 0.0, 0.0, 0.0], [0.16265893, 0.0, 0.0, 0.0], [0.0777131543, 0.0, 0.0, 0.0], [0.288525462, 0.0, 0.0, 0.0], [0.168982252, 0.0, 0.0, 0.0], [-0.0751406476, 0.0, 0.0, 0.0], [0.0446574539, 0.0, 0.0, 0.0], [-0.261592984, 0.0, 0.0, 0.0], [-0.0653366521, 0.0, 0.0, 0.0], [0.175299704, 0.0, 0.0, 0.0], [-0.00428327918, 0.0, 0.0, 0.0], [0.290328711, 0.0, 0.0, 0.0], [-0.153305039, 0.0, 0.0, 0.0], [0.00919986609, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 11, 21, 22, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 9, 17, 18, 10, 19, 20, 2, 5, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_169(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.824499965, 1.0, 2.0, 1.0], [0.516000032, 3.0, 4.0, 2.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [0.538499951, 9.0, 10.0, 2.0], [-0.334500015, 11.0, 12.0, 0.0], [0.636500001, 13.0, 14.0, 2.0], [-0.973500013, 15.0, 16.0, 4.0], [-0.192499995, 17.0, 18.0, 0.0], [0.272446871, 0.0, 0.0, 0.0], [-0.104899719, 0.0, 0.0, 0.0], [-0.341499984, 19.0, 20.0, 0.0], [-0.87349999, 21.0, 22.0, 4.0], [-0.240500003, 23.0, 24.0, 0.0], [-0.451499999, 25.0, 26.0, 1.0], [-0.226500005, 27.0, 28.0, 0.0], [0.108315647, 0.0, 0.0, 0.0], [-0.341645122, 0.0, 0.0, 0.0], [-0.0989538506, 0.0, 0.0, 0.0], [-0.916499972, 29.0, 30.0, 4.0], [0.715499997, 31.0, 32.0, 2.0], [-0.45449999, 33.0, 34.0, 1.0], [-0.0579596013, 0.0, 0.0, 0.0], [-0.95449996, 35.0, 36.0, 3.0], [-0.228500009, 37.0, 38.0, 0.0], [-0.801499963, 39.0, 40.0, 4.0], [-0.983500004, 41.0, 42.0, 3.0], [0.0221013259, 0.0, 0.0, 0.0], [-0.219281763, 0.0, 0.0, 0.0], [0.184854075, 0.0, 0.0, 0.0], [-0.0693539828, 0.0, 0.0, 0.0], [-0.312791914, 0.0, 0.0, 0.0], [0.148999974, 0.0, 0.0, 0.0], [0.352573603, 0.0, 0.0, 0.0], [0.0486803874, 0.0, 0.0, 0.0], [-0.109701306, 0.0, 0.0, 0.0], [0.211907223, 0.0, 0.0, 0.0], [0.154212654, 0.0, 0.0, 0.0], [0.00607278757, 0.0, 0.0, 0.0], [-0.203538135, 0.0, 0.0, 0.0], [0.148487017, 0.0, 0.0, 0.0], [0.324651659, 0.0, 0.0, 0.0], [-0.131927833, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 17, 18, 9, 10, 29, 30, 31, 32, 33, 34, 22, 35, 36, 37, 38, 39, 40, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 2, 5, 11, 19, 20, 12, 21, 6, 13, 23, 24, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_170(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.635499954, 1.0, 2.0, 1.0], [0.557500005, 3.0, 4.0, 2.0], [-0.630499959, 5.0, 6.0, 1.0], [-0.74150002, 7.0, 8.0, 1.0], [-0.941499949, 9.0, 10.0, 4.0], [-0.228, 11.0, 12.0, 0.0], [-0.612499952, 13.0, 14.0, 1.0], [0.459500015, 15.0, 16.0, 2.0], [-0.243499994, 17.0, 18.0, 0.0], [0.598500013, 19.0, 20.0, 2.0], [-0.892500043, 21.0, 22.0, 4.0], [0.471294403, 0.0, 0.0, 0.0], [0.0292000156, 0.0, 0.0, 0.0], [-0.894500017, 23.0, 24.0, 4.0], [-0.966500044, 25.0, 26.0, 3.0], [-0.99849999, 27.0, 28.0, 3.0], [-0.791499972, 29.0, 30.0, 1.0], [-0.284772336, 0.0, 0.0, 0.0], [-0.897500038, 31.0, 32.0, 4.0], [-0.197500005, 33.0, 34.0, 0.0], [-0.96449995, 35.0, 36.0, 4.0], [-0.438222617, 0.0, 0.0, 0.0], [-0.162, 37.0, 38.0, 0.0], [-0.322178185, 0.0, 0.0, 0.0], [0.0341066979, 0.0, 0.0, 0.0], [-0.976500034, 39.0, 40.0, 3.0], [-0.540500045, 41.0, 42.0, 1.0], [-0.226700172, 0.0, 0.0, 0.0], [0.0929858983, 0.0, 0.0, 0.0], [-0.0677414089, 0.0, 0.0, 0.0], [-0.315848768, 0.0, 0.0, 0.0], [0.174547642, 0.0, 0.0, 0.0], [-0.241320357, 0.0, 0.0, 0.0], [-0.308901906, 0.0, 0.0, 0.0], [0.019266393, 0.0, 0.0, 0.0], [-0.0435437486, 0.0, 0.0, 0.0], [0.315781653, 0.0, 0.0, 0.0], [0.0897698924, 0.0, 0.0, 0.0], [-0.251031727, 0.0, 0.0, 0.0], [0.0348040052, 0.0, 0.0, 0.0], [0.241089419, 0.0, 0.0, 0.0], [-0.199640334, 0.0, 0.0, 0.0], [-0.00994941033, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 31, 32, 33, 34, 35, 36, 21, 37, 38, 11, 12, 23, 24, 39, 40, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 9, 19, 20, 10, 22, 2, 5, 6, 13, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_171(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.972000003, 1.0, 2.0, 2.0], [-0.132499993, 3.0, 4.0, 0.0], [0.541999996, 5.0, 6.0, 0.0], [-0.136500001, 7.0, 8.0, 0.0], [-0.127499998, 9.0, 10.0, 0.0], [-0.132499993, 11.0, 12.0, 0.0], [0.612500012, 13.0, 14.0, 0.0], [-0.137499988, 15.0, 16.0, 0.0], [0.28269425, 0.0, 0.0, 0.0], [-0.43750006, 0.0, 0.0, 0.0], [-0.125499994, 17.0, 18.0, 0.0], [-0.191500008, 19.0, 20.0, 0.0], [-0.129500002, 21.0, 22.0, 0.0], [-0.339314759, 0.0, 0.0, 0.0], [-0.0316716656, 0.0, 0.0, 0.0], [-0.142500013, 23.0, 24.0, 0.0], [-0.294461221, 0.0, 0.0, 0.0], [0.459254831, 0.0, 0.0, 0.0], [-0.120499998, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.706500053, 29.0, 30.0, 2.0], [0.739318311, 0.0, 0.0, 0.0], [0.101500005, 31.0, 32.0, 0.0], [-0.0112202717, 0.0, 0.0, 0.0], [0.177404732, 0.0, 0.0, 0.0], [-0.365810126, 0.0, 0.0, 0.0], [0.0105151003, 0.0, 0.0, 0.0], [-0.284403175, 0.0, 0.0, 0.0], [0.0883199722, 0.0, 0.0, 0.0], [-0.414292336, 0.0, 0.0, 0.0], [0.0569304228, 0.0, 0.0, 0.0], [-0.0476416945, 0.0, 0.0, 0.0], [0.0792908147, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 17, 25, 26, 27, 28, 29, 30, 21, 31, 32, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 10, 18, 2, 5, 11, 19, 20, 12, 22, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_172(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 1.0], [-0.210500002, 3.0, 4.0, 0.0], [-0.152052879, 0.0, 0.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.2095, 7.0, 8.0, 0.0], [-0.996500015, 9.0, 10.0, 1.0], [0.300800681, 0.0, 0.0, 0.0], [-0.270171493, 0.0, 0.0, 0.0], [-0.132499993, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [0.223710656, 0.0, 0.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.127499998, 17.0, 18.0, 0.0], [0.0264126118, 0.0, 0.0, 0.0], [-0.127668187, 0.0, 0.0, 0.0], [-0.072094366, 0.0, 0.0, 0.0], [0.119772494, 0.0, 0.0, 0.0], [0.174792826, 0.0, 0.0, 0.0], [-0.00288021588, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 15, 16, 17, 18, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_173(xs):
    #Predicts Class 5
    function_dict = np.array([[0.466499984, 1.0, 2.0, 0.0], [0.446500003, 3.0, 4.0, 0.0], [0.503000021, 5.0, 6.0, 0.0], [0.436500013, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.770500004, 11.0, 12.0, 2.0], [0.513000011, 13.0, 14.0, 0.0], [0.434499979, 15.0, 16.0, 0.0], [0.445500016, 17.0, 18.0, 0.0], [0.458500028, 19.0, 20.0, 0.0], [0.225007638, 0.0, 0.0, 0.0], [0.407106519, 0.0, 0.0, 0.0], [-0.119395502, 0.0, 0.0, 0.0], [0.506000042, 21.0, 22.0, 0.0], [0.521499991, 23.0, 24.0, 0.0], [0.432500005, 25.0, 26.0, 0.0], [-0.421286672, 0.0, 0.0, 0.0], [0.351225704, 0.0, 0.0, 0.0], [0.0124719515, 0.0, 0.0, 0.0], [-0.331756979, 0.0, 0.0, 0.0], [-0.151078284, 0.0, 0.0, 0.0], [-0.0208442081, 0.0, 0.0, 0.0], [-0.308101296, 0.0, 0.0, 0.0], [0.441114098, 0.0, 0.0, 0.0], [0.537500024, 27.0, 28.0, 0.0], [-0.00299489056, 0.0, 0.0, 0.0], [0.163220018, 0.0, 0.0, 0.0], [-0.19397524, 0.0, 0.0, 0.0], [0.0471807197, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 18, 19, 20, 10, 11, 12, 21, 22, 23, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 9, 2, 5, 6, 13, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_174(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.972499967, 1.0, 2.0, 3.0], [-0.700500011, 3.0, 4.0, 1.0], [-0.930500031, 5.0, 6.0, 4.0], [0.628499985, 7.0, 8.0, 2.0], [0.537500024, 9.0, 10.0, 2.0], [-0.631500006, 11.0, 12.0, 1.0], [-0.706499994, 13.0, 14.0, 1.0], [-0.922500014, 15.0, 16.0, 4.0], [0.634500027, 17.0, 18.0, 2.0], [-0.252499998, 19.0, 20.0, 0.0], [-0.232999995, 21.0, 22.0, 0.0], [0.47299999, 23.0, 24.0, 2.0], [-0.180500001, 25.0, 26.0, 0.0], [-0.727499962, 27.0, 28.0, 1.0], [-0.645500004, 29.0, 30.0, 1.0], [-0.993499994, 31.0, 32.0, 3.0], [-0.805500031, 33.0, 34.0, 1.0], [-0.36959517, 0.0, 0.0, 0.0], [-0.171499997, 35.0, 36.0, 0.0], [0.154574707, 0.0, 0.0, 0.0], [-0.891000032, 37.0, 38.0, 4.0], [0.636500001, 39.0, 40.0, 2.0], [-0.489000022, 41.0, 42.0, 1.0], [0.444999993, 43.0, 44.0, 2.0], [-0.911499977, 45.0, 46.0, 3.0], [-0.265974402, 0.0, 0.0, 0.0], [0.110588834, 0.0, 0.0, 0.0], [-0.212500006, 47.0, 48.0, 0.0], [-0.345362961, 0.0, 0.0, 0.0], [-0.187000006, 49.0, 50.0, 0.0], [-0.616999984, 51.0, 52.0, 1.0], [0.0723930895, 0.0, 0.0, 0.0], [-0.0985052437, 0.0, 0.0, 0.0], [-0.0991287902, 0.0, 0.0, 0.0], [0.263543397, 0.0, 0.0, 0.0], [0.0724114627, 0.0, 0.0, 0.0], [-0.270965666, 0.0, 0.0, 0.0], [-0.450850129, 0.0, 0.0, 0.0], [0.00842004176, 0.0, 0.0, 0.0], [-0.349004418, 0.0, 0.0, 0.0], [-0.00384276174, 0.0, 0.0, 0.0], [0.108330689, 0.0, 0.0, 0.0], [-0.205471292, 0.0, 0.0, 0.0], [0.0799176022, 0.0, 0.0, 0.0], [-0.280574352, 0.0, 0.0, 0.0], [0.32241264, 0.0, 0.0, 0.0], [0.012209923, 0.0, 0.0, 0.0], [-0.211982071, 0.0, 0.0, 0.0], [0.147456348, 0.0, 0.0, 0.0], [0.342496485, 0.0, 0.0, 0.0], [0.0425969213, 0.0, 0.0, 0.0], [-0.291348845, 0.0, 0.0, 0.0], [0.0735417455, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([31, 32, 33, 34, 17, 35, 36, 19, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 25, 26, 47, 48, 28, 49, 50, 51, 52])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 9, 20, 10, 21, 22, 2, 5, 11, 23, 24, 12, 6, 13, 27, 14, 29, 30])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_175(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.75849998, 1.0, 2.0, 1.0], [-0.965499997, 3.0, 4.0, 4.0], [-0.74150002, 5.0, 6.0, 1.0], [-0.161500007, 7.0, 8.0, 0.0], [-0.946500003, 9.0, 10.0, 4.0], [-0.21450001, 11.0, 12.0, 0.0], [-0.734500051, 13.0, 14.0, 1.0], [-0.228500009, 15.0, 16.0, 0.0], [-0.109499998, 17.0, 18.0, 0.0], [-0.968500018, 19.0, 20.0, 3.0], [-0.847000003, 21.0, 22.0, 4.0], [-0.931499958, 23.0, 24.0, 4.0], [-0.0529502369, 0.0, 0.0, 0.0], [-0.221000001, 25.0, 26.0, 0.0], [-0.175500005, 27.0, 28.0, 0.0], [0.435499996, 29.0, 30.0, 2.0], [0.28549999, 31.0, 32.0, 2.0], [-0.862499952, 33.0, 34.0, 1.0], [-0.151692823, 0.0, 0.0, 0.0], [-0.107500002, 35.0, 36.0, 0.0], [-0.17044726, 0.0, 0.0, 0.0], [-0.846500039, 37.0, 38.0, 1.0], [0.235452101, 0.0, 0.0, 0.0], [0.371738076, 0.0, 0.0, 0.0], [0.00599802425, 0.0, 0.0, 0.0], [-0.374949366, 0.0, 0.0, 0.0], [-0.950999975, 39.0, 40.0, 4.0], [-0.965499997, 41.0, 42.0, 4.0], [0.0797500014, 43.0, 44.0, 0.0], [0.166053325, 0.0, 0.0, 0.0], [-0.0762620792, 0.0, 0.0, 0.0], [0.154093251, 0.0, 0.0, 0.0], [-0.356391639, 0.0, 0.0, 0.0], [-0.026987331, 0.0, 0.0, 0.0], [0.341898292, 0.0, 0.0, 0.0], [0.241872489, 0.0, 0.0, 0.0], [-0.121255897, 0.0, 0.0, 0.0], [0.160423815, 0.0, 0.0, 0.0], [-0.125046045, 0.0, 0.0, 0.0], [-0.19714956, 0.0, 0.0, 0.0], [0.307322949, 0.0, 0.0, 0.0], [0.156476066, 0.0, 0.0, 0.0], [0.0100943726, 0.0, 0.0, 0.0], [-0.264196485, 0.0, 0.0, 0.0], [0.201385275, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 18, 35, 36, 20, 37, 38, 22, 23, 24, 12, 25, 39, 40, 41, 42, 43, 44])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 19, 10, 21, 2, 5, 11, 6, 13, 26, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_176(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.436999977, 3.0, 4.0, 1.0], [-0.266499996, 5.0, 6.0, 0.0], [-0.232499987, 7.0, 8.0, 0.0], [0.661499977, 9.0, 10.0, 2.0], [-0.318499982, 11.0, 12.0, 0.0], [-0.824499965, 13.0, 14.0, 4.0], [-0.558500051, 15.0, 16.0, 1.0], [-0.551499963, 17.0, 18.0, 1.0], [0.0624488406, 0.0, 0.0, 0.0], [0.695500016, 19.0, 20.0, 2.0], [-0.978999972, 21.0, 22.0, 3.0], [-0.284999996, 23.0, 24.0, 1.0], [0.273678988, 0.0, 0.0, 0.0], [0.076357469, 0.0, 0.0, 0.0], [-0.99849999, 25.0, 26.0, 3.0], [-0.315500021, 27.0, 28.0, 0.0], [-0.603500009, 29.0, 30.0, 1.0], [-0.141499996, 31.0, 32.0, 0.0], [-0.332741112, 0.0, 0.0, 0.0], [-0.0652369782, 0.0, 0.0, 0.0], [0.216699243, 0.0, 0.0, 0.0], [0.0418949276, 0.0, 0.0, 0.0], [-0.364295065, 0.0, 0.0, 0.0], [-0.0648763999, 0.0, 0.0, 0.0], [0.160353497, 0.0, 0.0, 0.0], [-0.129240528, 0.0, 0.0, 0.0], [-0.10278061, 0.0, 0.0, 0.0], [0.19430168, 0.0, 0.0, 0.0], [-0.0263193138, 0.0, 0.0, 0.0], [0.0987108946, 0.0, 0.0, 0.0], [-0.189010173, 0.0, 0.0, 0.0], [0.109116778, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 31, 32, 9, 19, 20, 21, 22, 23, 24, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 10, 2, 5, 11, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_177(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.613499999, 3.0, 4.0, 2.0], [0.141499996, 5.0, 6.0, 0.0], [-0.680500031, 7.0, 8.0, 2.0], [-0.601000011, 9.0, 10.0, 2.0], [-0.519999981, 11.0, 12.0, 2.0], [-0.202049226, 0.0, 0.0, 0.0], [-0.297500014, 13.0, 14.0, 0.0], [0.117249995, 15.0, 16.0, 0.0], [0.232078522, 0.0, 0.0, 0.0], [-0.57249999, 17.0, 18.0, 2.0], [-0.0703999996, 19.0, 20.0, 0.0], [-0.178662255, 0.0, 0.0, 0.0], [-0.524500012, 21.0, 22.0, 0.0], [-0.282999992, 23.0, 24.0, 0.0], [-0.99849999, 25.0, 26.0, 4.0], [0.128760561, 0.0, 0.0, 0.0], [-0.129142985, 0.0, 0.0, 0.0], [-0.105499998, 27.0, 28.0, 0.0], [-0.0788790956, 0.0, 0.0, 0.0], [0.00753000006, 29.0, 30.0, 0.0], [0.064471826, 0.0, 0.0, 0.0], [-0.220124438, 0.0, 0.0, 0.0], [0.153641045, 0.0, 0.0, 0.0], [-0.000772723171, 0.0, 0.0, 0.0], [-0.248737007, 0.0, 0.0, 0.0], [0.0656668022, 0.0, 0.0, 0.0], [-0.0149884969, 0.0, 0.0, 0.0], [0.0983488485, 0.0, 0.0, 0.0], [0.0476608239, 0.0, 0.0, 0.0], [0.265601516, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 16, 9, 17, 27, 28, 19, 29, 30, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 10, 18, 2, 5, 11, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_178(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.196500003, 3.0, 4.0, 0.0], [0.153892338, 0.0, 0.0, 0.0], [0.152999997, 5.0, 6.0, 0.0], [-0.222184032, 0.0, 0.0, 0.0], [0.111500002, 7.0, 8.0, 0.0], [0.194499999, 9.0, 10.0, 0.0], [0.107500002, 11.0, 12.0, 0.0], [-0.246357739, 0.0, 0.0, 0.0], [0.193500012, 13.0, 14.0, 0.0], [-0.046453014, 0.0, 0.0, 0.0], [-0.000186958612, 0.0, 0.0, 0.0], [0.308981657, 0.0, 0.0, 0.0], [0.0739182308, 0.0, 0.0, 0.0], [0.234500587, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 14, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_179(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 1.0], [-0.997500002, 3.0, 4.0, 1.0], [-0.952000022, 5.0, 6.0, 1.0], [-0.706500053, 7.0, 8.0, 2.0], [-0.795000017, 9.0, 10.0, 2.0], [-0.187311709, 0.0, 0.0, 0.0], [0.00236426783, 0.0, 0.0, 0.0], [-0.393000007, 11.0, 12.0, 0.0], [-0.637500048, 13.0, 14.0, 2.0], [-0.294, 15.0, 16.0, 0.0], [-0.626000047, 17.0, 18.0, 2.0], [-0.457500011, 19.0, 20.0, 0.0], [-0.169499993, 21.0, 22.0, 0.0], [-0.25999999, 23.0, 24.0, 0.0], [0.00193000003, 25.0, 26.0, 0.0], [0.129511431, 0.0, 0.0, 0.0], [0.355500013, 27.0, 28.0, 0.0], [0.294099808, 0.0, 0.0, 0.0], [-0.51699996, 29.0, 30.0, 2.0], [-0.0710998476, 0.0, 0.0, 0.0], [0.146080256, 0.0, 0.0, 0.0], [-0.231195509, 0.0, 0.0, 0.0], [0.0140450466, 0.0, 0.0, 0.0], [0.0109037636, 0.0, 0.0, 0.0], [-0.287648976, 0.0, 0.0, 0.0], [-0.118843146, 0.0, 0.0, 0.0], [0.107270233, 0.0, 0.0, 0.0], [-0.205078617, 0.0, 0.0, 0.0], [0.0238196384, 0.0, 0.0, 0.0], [0.000235520347, 0.0, 0.0, 0.0], [0.0322067551, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 15, 27, 28, 17, 29, 30, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 4, 9, 16, 10, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_180(xs):
    #Predicts Class 0
    function_dict = np.array([[0.120499998, 1.0, 2.0, 0.0], [-0.984500051, 3.0, 4.0, 4.0], [-0.234686181, 0.0, 0.0, 0.0], [-0.191500008, 5.0, 6.0, 0.0], [-0.0727999955, 7.0, 8.0, 0.0], [-0.248014644, 0.0, 0.0, 0.0], [0.0013968579, 0.0, 0.0, 0.0], [-0.111500002, 9.0, 10.0, 0.0], [-0.966500044, 11.0, 12.0, 4.0], [-0.166500002, 13.0, 14.0, 0.0], [-0.990499973, 15.0, 16.0, 3.0], [-0.0675975382, 0.0, 0.0, 0.0], [-0.950500011, 17.0, 18.0, 4.0], [-0.00619270233, 0.0, 0.0, 0.0], [0.0723973736, 0.0, 0.0, 0.0], [-0.227763847, 0.0, 0.0, 0.0], [0.00771857938, 0.0, 0.0, 0.0], [0.232830077, 0.0, 0.0, 0.0], [0.07673949, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 13, 14, 15, 16, 11, 17, 18, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 9, 10, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_181(xs):
    #Predicts Class 1
    function_dict = np.array([[0.134499997, 1.0, 2.0, 0.0], [-0.874000013, 3.0, 4.0, 1.0], [0.214833766, 0.0, 0.0, 0.0], [-0.170045882, 0.0, 0.0, 0.0], [-0.973500013, 5.0, 6.0, 4.0], [-0.219500005, 7.0, 8.0, 0.0], [-0.169499993, 9.0, 10.0, 0.0], [-0.824499965, 11.0, 12.0, 1.0], [-0.531499982, 13.0, 14.0, 1.0], [-0.963500023, 15.0, 16.0, 4.0], [-0.970499992, 17.0, 18.0, 4.0], [0.0230633691, 0.0, 0.0, 0.0], [0.233102188, 0.0, 0.0, 0.0], [-0.0691006705, 0.0, 0.0, 0.0], [0.253111124, 0.0, 0.0, 0.0], [-0.080117017, 0.0, 0.0, 0.0], [0.0207617804, 0.0, 0.0, 0.0], [0.214773983, 0.0, 0.0, 0.0], [-0.220800057, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 13, 14, 15, 16, 17, 18, 2])
    branch_indices = np.array([0, 1, 4, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_182(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.816499949, 1.0, 2.0, 4.0], [-0.82099998, 3.0, 4.0, 4.0], [-0.439999998, 5.0, 6.0, 1.0], [-0.592499971, 7.0, 8.0, 1.0], [0.297096282, 0.0, 0.0, 0.0], [-0.103499994, 9.0, 10.0, 0.0], [0.654500008, 11.0, 12.0, 2.0], [-0.630499959, 13.0, 14.0, 1.0], [-0.537500024, 15.0, 16.0, 1.0], [-0.592499971, 17.0, 18.0, 1.0], [0.16873388, 0.0, 0.0, 0.0], [-0.0690695196, 0.0, 0.0, 0.0], [0.282367855, 0.0, 0.0, 0.0], [-0.635499954, 19.0, 20.0, 1.0], [0.711499989, 21.0, 22.0, 2.0], [-0.199000001, 23.0, 24.0, 0.0], [-0.506500006, 25.0, 26.0, 1.0], [-0.606999993, 27.0, 28.0, 1.0], [-0.537999988, 29.0, 30.0, 1.0], [-0.0223212838, 0.0, 0.0, 0.0], [0.311280251, 0.0, 0.0, 0.0], [-0.264773518, 0.0, 0.0, 0.0], [0.141395226, 0.0, 0.0, 0.0], [0.289960563, 0.0, 0.0, 0.0], [0.0299157314, 0.0, 0.0, 0.0], [-0.157005131, 0.0, 0.0, 0.0], [0.0309798513, 0.0, 0.0, 0.0], [-0.104039036, 0.0, 0.0, 0.0], [0.139451355, 0.0, 0.0, 0.0], [-0.267417073, 0.0, 0.0, 0.0], [-0.0719737858, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 4, 27, 28, 29, 30, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 9, 17, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_183(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.1065, 1.0, 2.0, 0.0], [-0.115500003, 3.0, 4.0, 0.0], [-0.102499999, 5.0, 6.0, 0.0], [-0.1175, 7.0, 8.0, 0.0], [-0.111500002, 9.0, 10.0, 0.0], [-0.104499996, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.124499999, 15.0, 16.0, 0.0], [0.223233446, 0.0, 0.0, 0.0], [-0.338330299, 0.0, 0.0, 0.0], [-0.0136371097, 0.0, 0.0, 0.0], [0.0457211286, 0.0, 0.0, 0.0], [0.353803813, 0.0, 0.0, 0.0], [-0.0156999994, 17.0, 18.0, 0.0], [-0.851999998, 19.0, 20.0, 2.0], [-0.127499998, 21.0, 22.0, 0.0], [-0.122500002, 23.0, 24.0, 0.0], [-0.0285999998, 25.0, 26.0, 0.0], [-0.0150499996, 27.0, 28.0, 0.0], [-0.00919000059, 29.0, 30.0, 0.0], [-0.0578999966, 31.0, 32.0, 0.0], [-0.0168958139, 0.0, 0.0, 0.0], [0.255095452, 0.0, 0.0, 0.0], [-0.264170617, 0.0, 0.0, 0.0], [-0.0887437612, 0.0, 0.0, 0.0], [0.00710438378, 0.0, 0.0, 0.0], [0.385946274, 0.0, 0.0, 0.0], [-0.536766291, 0.0, 0.0, 0.0], [0.0041218726, 0.0, 0.0, 0.0], [-0.205637202, 0.0, 0.0, 0.0], [-0.0112625156, 0.0, 0.0, 0.0], [0.242173582, 0.0, 0.0, 0.0], [-0.00952010509, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 11, 12, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 13, 17, 18, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_184(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.463, 1.0, 2.0, 0.0], [-0.139653772, 0.0, 0.0, 0.0], [-0.399500012, 3.0, 4.0, 0.0], [-0.99849999, 5.0, 6.0, 1.0], [-0.378499985, 7.0, 8.0, 0.0], [-0.408500016, 9.0, 10.0, 0.0], [0.270594895, 0.0, 0.0, 0.0], [-0.276693076, 0.0, 0.0, 0.0], [-0.297500014, 11.0, 12.0, 0.0], [-0.421499997, 13.0, 14.0, 0.0], [-0.406499982, 15.0, 16.0, 0.0], [-0.838, 17.0, 18.0, 2.0], [-0.292500019, 19.0, 20.0, 0.0], [0.0616012663, 0.0, 0.0, 0.0], [-0.337151319, 0.0, 0.0, 0.0], [0.274537772, 0.0, 0.0, 0.0], [0.0934032872, 0.0, 0.0, 0.0], [0.300557762, 0.0, 0.0, 0.0], [-0.0544397049, 0.0, 0.0, 0.0], [-0.24355416, 0.0, 0.0, 0.0], [0.00177490467, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 7, 17, 18, 19, 20])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_185(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.155402854, 0.0, 0.0, 0.0], [-0.99150002, 3.0, 4.0, 1.0], [-0.399500012, 5.0, 6.0, 0.0], [0.213999987, 7.0, 8.0, 0.0], [-0.412999988, 9.0, 10.0, 0.0], [-0.380499989, 11.0, 12.0, 0.0], [-0.941499949, 13.0, 14.0, 1.0], [0.0832201838, 0.0, 0.0, 0.0], [-0.421499997, 15.0, 16.0, 0.0], [-0.407499999, 17.0, 18.0, 0.0], [0.215691984, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 1.0], [-0.282761991, 0.0, 0.0, 0.0], [-0.0643887371, 0.0, 0.0, 0.0], [-0.0768040642, 0.0, 0.0, 0.0], [0.242440358, 0.0, 0.0, 0.0], [-0.278191209, 0.0, 0.0, 0.0], [-0.0639831051, 0.0, 0.0, 0.0], [-0.00841393042, 0.0, 0.0, 0.0], [0.0844205543, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 11, 19, 20, 13, 14, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 12, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_186(xs):
    #Predicts Class 0
    function_dict = np.array([[0.485500008, 1.0, 2.0, 2.0], [0.478500009, 3.0, 4.0, 2.0], [-0.63349998, 5.0, 6.0, 1.0], [0.473500013, 7.0, 8.0, 2.0], [-0.318243384, 0.0, 0.0, 0.0], [-0.667500019, 9.0, 10.0, 1.0], [-0.889500022, 11.0, 12.0, 4.0], [-0.950500011, 13.0, 14.0, 3.0], [0.24359639, 0.0, 0.0, 0.0], [-0.983500004, 15.0, 16.0, 3.0], [-0.972499967, 17.0, 18.0, 3.0], [-0.166000009, 19.0, 20.0, 0.0], [-0.597499967, 21.0, 22.0, 1.0], [-0.737499952, 23.0, 24.0, 1.0], [-0.960500002, 25.0, 26.0, 4.0], [-0.700500011, 27.0, 28.0, 1.0], [-0.706499994, 29.0, 30.0, 1.0], [-0.203500003, 31.0, 32.0, 0.0], [0.385603398, 0.0, 0.0, 0.0], [-0.624500036, 33.0, 34.0, 1.0], [-0.938500047, 35.0, 36.0, 4.0], [-0.856999993, 37.0, 38.0, 4.0], [-0.557999969, 39.0, 40.0, 1.0], [-0.0347275212, 0.0, 0.0, 0.0], [-0.234877765, 0.0, 0.0, 0.0], [-0.068225868, 0.0, 0.0, 0.0], [0.132333443, 0.0, 0.0, 0.0], [0.0984045267, 0.0, 0.0, 0.0], [-0.108659334, 0.0, 0.0, 0.0], [-0.112052277, 0.0, 0.0, 0.0], [0.154417843, 0.0, 0.0, 0.0], [-0.148140952, 0.0, 0.0, 0.0], [0.200633332, 0.0, 0.0, 0.0], [0.0303011276, 0.0, 0.0, 0.0], [-0.305722177, 0.0, 0.0, 0.0], [0.184976757, 0.0, 0.0, 0.0], [-0.160899654, 0.0, 0.0, 0.0], [0.0745805502, 0.0, 0.0, 0.0], [-0.285025209, 0.0, 0.0, 0.0], [0.235448986, 0.0, 0.0, 0.0], [0.00682315975, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 4, 27, 28, 29, 30, 31, 32, 18, 33, 34, 35, 36, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 16, 10, 17, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_187(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.837499976, 1.0, 2.0, 1.0], [-0.941499949, 3.0, 4.0, 4.0], [0.384499997, 5.0, 6.0, 2.0], [-0.96449995, 7.0, 8.0, 4.0], [-0.997500002, 9.0, 10.0, 3.0], [-0.237000003, 11.0, 12.0, 0.0], [0.389499992, 13.0, 14.0, 2.0], [-0.971500039, 15.0, 16.0, 4.0], [-0.242891774, 0.0, 0.0, 0.0], [0.0966416374, 0.0, 0.0, 0.0], [0.0082108276, 0.0, 0.0, 0.0], [-0.946500003, 17.0, 18.0, 4.0], [-0.982499957, 19.0, 20.0, 4.0], [-0.193643078, 0.0, 0.0, 0.0], [-0.207500011, 21.0, 22.0, 0.0], [-0.230500013, 23.0, 24.0, 0.0], [0.0975166336, 0.0, 0.0, 0.0], [0.0999969691, 0.0, 0.0, 0.0], [-0.265203625, 0.0, 0.0, 0.0], [-0.988499999, 25.0, 26.0, 3.0], [0.354499996, 27.0, 28.0, 2.0], [-0.2095, 29.0, 30.0, 0.0], [-0.999500036, 31.0, 32.0, 3.0], [0.0111659821, 0.0, 0.0, 0.0], [-0.177643701, 0.0, 0.0, 0.0], [0.0723714754, 0.0, 0.0, 0.0], [-0.219992951, 0.0, 0.0, 0.0], [0.292775601, 0.0, 0.0, 0.0], [-5.95403289e-05, 0.0, 0.0, 0.0], [0.0120699182, 0.0, 0.0, 0.0], [0.287865102, 0.0, 0.0, 0.0], [0.19297941, 0.0, 0.0, 0.0], [-0.0668194741, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 10, 17, 18, 25, 26, 27, 28, 13, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 11, 12, 19, 20, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_188(xs):
    #Predicts Class 2
    function_dict = np.array([[0.868999958, 1.0, 2.0, 2.0], [-0.799499989, 3.0, 4.0, 1.0], [0.181072429, 0.0, 0.0, 0.0], [0.443499982, 5.0, 6.0, 2.0], [-0.756500006, 7.0, 8.0, 1.0], [0.423500001, 9.0, 10.0, 2.0], [-0.270834535, 0.0, 0.0, 0.0], [-0.762500048, 11.0, 12.0, 1.0], [-0.968500018, 13.0, 14.0, 4.0], [-0.156586528, 0.0, 0.0, 0.0], [0.226280794, 0.0, 0.0, 0.0], [-0.226500005, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 4.0], [0.64349997, 19.0, 20.0, 2.0], [0.553499997, 21.0, 22.0, 2.0], [-0.224905863, 0.0, 0.0, 0.0], [0.0783039704, 0.0, 0.0, 0.0], [0.318090886, 0.0, 0.0, 0.0], [0.0680784732, 0.0, 0.0, 0.0], [-0.13611123, 0.0, 0.0, 0.0], [0.0799366981, 0.0, 0.0, 0.0], [0.0743921995, 0.0, 0.0, 0.0], [-0.0203139931, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 6, 15, 16, 17, 18, 19, 20, 21, 22, 2])
    branch_indices = np.array([0, 1, 3, 5, 4, 7, 11, 12, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_189(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.283500016, 3.0, 4.0, 0.0], [-0.267499983, 5.0, 6.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [-0.304802328, 0.0, 0.0, 0.0], [0.350852311, 0.0, 0.0, 0.0], [-0.212500006, 9.0, 10.0, 0.0], [-0.296499997, 11.0, 12.0, 0.0], [0.185868815, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.190499991, 15.0, 16.0, 0.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.254840046, 0.0, 0.0, 0.0], [-0.28820461, 0.0, 0.0, 0.0], [-0.747500002, 19.0, 20.0, 2.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.146499991, 23.0, 24.0, 0.0], [0.0707667544, 0.0, 0.0, 0.0], [-0.091732271, 0.0, 0.0, 0.0], [0.11693839, 0.0, 0.0, 0.0], [-0.14355965, 0.0, 0.0, 0.0], [0.0120768137, 0.0, 0.0, 0.0], [0.253940135, 0.0, 0.0, 0.0], [-0.165153593, 0.0, 0.0, 0.0], [0.00253313384, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 19, 20, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 14, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_190(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.418500006, 5.0, 6.0, 0.0], [-0.256343424, 0.0, 0.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [0.249198914, 0.0, 0.0, 0.0], [-0.212500006, 9.0, 10.0, 0.0], [0.255898982, 0.0, 0.0, 0.0], [-0.162358105, 0.0, 0.0, 0.0], [-0.249500006, 11.0, 12.0, 0.0], [-0.16049999, 13.0, 14.0, 0.0], [-0.795000017, 15.0, 16.0, 2.0], [0.281048715, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.155499995, 19.0, 20.0, 0.0], [-0.0231544785, 0.0, 0.0, 0.0], [0.104186319, 0.0, 0.0, 0.0], [0.00949802622, 0.0, 0.0, 0.0], [-0.283069521, 0.0, 0.0, 0.0], [0.292559177, 0.0, 0.0, 0.0], [-0.000826428703, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 15, 16, 12, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 11, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_191(xs):
    #Predicts Class 5
    function_dict = np.array([[0.201499999, 1.0, 2.0, 0.0], [-0.149500012, 3.0, 4.0, 0.0], [0.212500006, 5.0, 6.0, 0.0], [-0.169499993, 7.0, 8.0, 0.0], [-0.080400005, 9.0, 10.0, 0.0], [0.203500003, 11.0, 12.0, 0.0], [0.256500006, 13.0, 14.0, 0.0], [-0.424499989, 15.0, 16.0, 0.0], [-0.164499998, 17.0, 18.0, 0.0], [-0.312223077, 0.0, 0.0, 0.0], [-0.0742499977, 19.0, 20.0, 0.0], [0.202500001, 21.0, 22.0, 0.0], [0.299589366, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [0.259499997, 25.0, 26.0, 0.0], [-0.439999998, 27.0, 28.0, 0.0], [-0.29549998, 29.0, 30.0, 0.0], [-0.166500002, 31.0, 32.0, 0.0], [-0.161500007, 33.0, 34.0, 0.0], [-0.972000003, 35.0, 36.0, 2.0], [-0.0123999994, 37.0, 38.0, 0.0], [0.05510699, 0.0, 0.0, 0.0], [0.00914204121, 0.0, 0.0, 0.0], [-0.311696023, 0.0, 0.0, 0.0], [0.228500009, 39.0, 40.0, 0.0], [0.432170838, 0.0, 0.0, 0.0], [0.263000011, 41.0, 42.0, 0.0], [-0.00542067038, 0.0, 0.0, 0.0], [0.195671901, 0.0, 0.0, 0.0], [-0.0386454612, 0.0, 0.0, 0.0], [-0.187574103, 0.0, 0.0, 0.0], [0.0626039803, 0.0, 0.0, 0.0], [0.290735543, 0.0, 0.0, 0.0], [-0.255685955, 0.0, 0.0, 0.0], [0.105296008, 0.0, 0.0, 0.0], [-0.265661836, 0.0, 0.0, 0.0], [0.399729997, 0.0, 0.0, 0.0], [-0.0243849941, 0.0, 0.0, 0.0], [-0.164169595, 0.0, 0.0, 0.0], [0.222779512, 0.0, 0.0, 0.0], [-0.210904464, 0.0, 0.0, 0.0], [-0.198235095, 0.0, 0.0, 0.0], [0.0121599231, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 31, 32, 33, 34, 9, 35, 36, 37, 38, 21, 22, 12, 23, 39, 40, 25, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 10, 19, 20, 2, 5, 11, 6, 13, 24, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_192(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.984500051, 1.0, 2.0, 4.0], [-0.1655, 3.0, 4.0, 0.0], [-0.199499995, 5.0, 6.0, 0.0], [-0.206228137, 0.0, 0.0, 0.0], [-0.0376053564, 0.0, 0.0, 0.0], [-0.281499982, 7.0, 8.0, 0.0], [-0.194499999, 9.0, 10.0, 0.0], [0.523000002, 11.0, 12.0, 2.0], [-0.997500002, 13.0, 14.0, 3.0], [-0.728500009, 15.0, 16.0, 1.0], [-0.99849999, 17.0, 18.0, 3.0], [-0.323500007, 19.0, 20.0, 0.0], [-0.606999993, 21.0, 22.0, 1.0], [0.466499984, 23.0, 24.0, 2.0], [0.555500031, 25.0, 26.0, 2.0], [0.0316656306, 0.0, 0.0, 0.0], [-0.319800824, 0.0, 0.0, 0.0], [0.495999992, 27.0, 28.0, 2.0], [-0.189500004, 29.0, 30.0, 0.0], [0.0729850903, 0.0, 0.0, 0.0], [-0.301347882, 0.0, 0.0, 0.0], [0.0733833238, 0.0, 0.0, 0.0], [-0.222133622, 0.0, 0.0, 0.0], [-0.0661064163, 0.0, 0.0, 0.0], [0.203601822, 0.0, 0.0, 0.0], [0.0790704116, 0.0, 0.0, 0.0], [-0.0710500106, 0.0, 0.0, 0.0], [-0.0299141053, 0.0, 0.0, 0.0], [0.248230472, 0.0, 0.0, 0.0], [0.107389413, 0.0, 0.0, 0.0], [-0.0574130006, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 19, 20, 21, 22, 23, 24, 25, 26, 15, 16, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 8, 13, 14, 6, 9, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_193(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.851500034, 1.0, 2.0, 1.0], [0.335500002, 3.0, 4.0, 2.0], [0.635499954, 5.0, 6.0, 2.0], [-0.163244575, 0.0, 0.0, 0.0], [-0.870499969, 7.0, 8.0, 1.0], [0.628499985, 9.0, 10.0, 2.0], [-0.270500004, 11.0, 12.0, 0.0], [0.0846817121, 0.0, 0.0, 0.0], [-0.110913843, 0.0, 0.0, 0.0], [-0.875499964, 13.0, 14.0, 4.0], [0.260878772, 0.0, 0.0, 0.0], [0.642500043, 15.0, 16.0, 2.0], [-0.521499991, 17.0, 18.0, 1.0], [-0.887500048, 19.0, 20.0, 4.0], [0.517500043, 21.0, 22.0, 2.0], [-0.267151266, 0.0, 0.0, 0.0], [-0.277500004, 23.0, 24.0, 0.0], [0.719500005, 25.0, 26.0, 2.0], [-0.960500002, 27.0, 28.0, 4.0], [0.00338487444, 0.0, 0.0, 0.0], [0.322998106, 0.0, 0.0, 0.0], [0.0531947613, 0.0, 0.0, 0.0], [-0.221227244, 0.0, 0.0, 0.0], [0.0282163043, 0.0, 0.0, 0.0], [0.307457238, 0.0, 0.0, 0.0], [-0.297302216, 0.0, 0.0, 0.0], [-0.0305144824, 0.0, 0.0, 0.0], [0.191545472, 0.0, 0.0, 0.0], [-0.119078495, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 19, 20, 21, 22, 10, 15, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 13, 14, 6, 11, 16, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_194(xs):
    #Predicts Class 2
    function_dict = np.array([[0.529500008, 1.0, 2.0, 2.0], [0.483500004, 3.0, 4.0, 2.0], [0.557500005, 5.0, 6.0, 2.0], [0.478500009, 7.0, 8.0, 2.0], [-0.955500007, 9.0, 10.0, 4.0], [-0.986500025, 11.0, 12.0, 3.0], [0.565500021, 13.0, 14.0, 2.0], [-0.218499988, 15.0, 16.0, 0.0], [0.300852478, 0.0, 0.0, 0.0], [-0.340617508, 0.0, 0.0, 0.0], [-0.926499963, 17.0, 18.0, 4.0], [-0.997500002, 19.0, 20.0, 3.0], [0.335799038, 0.0, 0.0, 0.0], [-0.283745795, 0.0, 0.0, 0.0], [0.578500032, 21.0, 22.0, 2.0], [-0.770500004, 23.0, 24.0, 1.0], [-0.193500012, 25.0, 26.0, 0.0], [-0.941499949, 27.0, 28.0, 4.0], [-0.139499992, 29.0, 30.0, 0.0], [0.250687361, 0.0, 0.0, 0.0], [-0.958999991, 31.0, 32.0, 4.0], [-0.994500041, 33.0, 34.0, 3.0], [-0.992499948, 35.0, 36.0, 3.0], [-0.123794653, 0.0, 0.0, 0.0], [0.145007879, 0.0, 0.0, 0.0], [-0.204193428, 0.0, 0.0, 0.0], [0.00563416677, 0.0, 0.0, 0.0], [0.00917056855, 0.0, 0.0, 0.0], [0.269588649, 0.0, 0.0, 0.0], [-0.221294552, 0.0, 0.0, 0.0], [0.0378750637, 0.0, 0.0, 0.0], [0.00074724661, 0.0, 0.0, 0.0], [-0.267055839, 0.0, 0.0, 0.0], [-0.0460981727, 0.0, 0.0, 0.0], [0.243300498, 0.0, 0.0, 0.0], [0.0530453064, 0.0, 0.0, 0.0], [-0.0329960957, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 9, 27, 28, 29, 30, 19, 31, 32, 12, 13, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 17, 18, 2, 5, 11, 20, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_195(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.747500002, 3.0, 4.0, 2.0], [-0.99849999, 5.0, 6.0, 1.0], [-0.851999998, 7.0, 8.0, 2.0], [-0.73150003, 9.0, 10.0, 2.0], [0.077700004, 11.0, 12.0, 0.0], [-0.996500015, 13.0, 14.0, 1.0], [-0.996500015, 15.0, 16.0, 1.0], [0.0242500007, 17.0, 18.0, 0.0], [-0.0557999983, 19.0, 20.0, 0.0], [-0.0667499974, 21.0, 22.0, 0.0], [-0.00417000009, 23.0, 24.0, 0.0], [-0.282333344, 0.0, 0.0, 0.0], [0.0759000033, 25.0, 26.0, 0.0], [-0.0824023783, 0.0, 0.0, 0.0], [-0.885499954, 27.0, 28.0, 2.0], [-0.0414550006, 29.0, 30.0, 0.0], [-0.037150003, 31.0, 32.0, 0.0], [-0.822000027, 33.0, 34.0, 2.0], [0.0241176598, 0.0, 0.0, 0.0], [-0.313588887, 0.0, 0.0, 0.0], [-0.999500036, 35.0, 36.0, 4.0], [-0.0428500026, 37.0, 38.0, 0.0], [-0.0777189732, 0.0, 0.0, 0.0], [0.0637494475, 0.0, 0.0, 0.0], [0.12686345, 0.0, 0.0, 0.0], [0.0106102154, 0.0, 0.0, 0.0], [-0.00105113734, 0.0, 0.0, 0.0], [-0.116550982, 0.0, 0.0, 0.0], [0.0272179954, 0.0, 0.0, 0.0], [0.205829903, 0.0, 0.0, 0.0], [0.0223687142, 0.0, 0.0, 0.0], [0.251742184, 0.0, 0.0, 0.0], [0.247084066, 0.0, 0.0, 0.0], [-0.207558587, 0.0, 0.0, 0.0], [0.15607129, 0.0, 0.0, 0.0], [-0.154061973, 0.0, 0.0, 0.0], [0.284133315, 0.0, 0.0, 0.0], [-0.00378686888, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 31, 32, 33, 34, 19, 20, 35, 36, 37, 38, 23, 24, 12, 25, 26, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 10, 21, 22, 2, 5, 11, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_196(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0811500028, 1.0, 2.0, 0.0], [-0.0904500037, 3.0, 4.0, 0.0], [-0.0793000013, 5.0, 6.0, 0.0], [-0.0910999998, 7.0, 8.0, 0.0], [0.313260794, 0.0, 0.0, 0.0], [-0.713685572, 0.0, 0.0, 0.0], [-0.0771999955, 9.0, 10.0, 0.0], [-0.0914499983, 11.0, 12.0, 0.0], [-0.357003659, 0.0, 0.0, 0.0], [0.36932832, 0.0, 0.0, 0.0], [-0.0742499977, 13.0, 14.0, 0.0], [-0.0938000008, 15.0, 16.0, 0.0], [0.385921478, 0.0, 0.0, 0.0], [-0.430993259, 0.0, 0.0, 0.0], [-0.0728500038, 17.0, 18.0, 0.0], [0.0120784454, 0.0, 0.0, 0.0], [-0.467088073, 0.0, 0.0, 0.0], [0.338404059, 0.0, 0.0, 0.0], [-0.00705229444, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_197(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.0126499999, 1.0, 2.0, 0.0], [-0.0318999998, 3.0, 4.0, 0.0], [0.00540999975, 5.0, 6.0, 0.0], [-0.0371000022, 7.0, 8.0, 0.0], [-0.286321163, 0.0, 0.0, 0.0], [0.329477489, 0.0, 0.0, 0.0], [0.172499999, 9.0, 10.0, 0.0], [-0.0796000063, 11.0, 12.0, 0.0], [0.293319315, 0.0, 0.0, 0.0], [-0.207962394, 0.0, 0.0, 0.0], [0.280499995, 13.0, 14.0, 0.0], [-0.0944499969, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [0.272000015, 19.0, 20.0, 0.0], [0.36500001, 21.0, 22.0, 0.0], [-0.0129397567, 0.0, 0.0, 0.0], [0.319869608, 0.0, 0.0, 0.0], [-0.337814033, 0.0, 0.0, 0.0], [0.188440248, 0.0, 0.0, 0.0], [0.0192411691, 0.0, 0.0, 0.0], [0.397610962, 0.0, 0.0, 0.0], [-0.225393862, 0.0, 0.0, 0.0], [0.0136238309, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_198(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.939499974, 1.0, 2.0, 4.0], [0.555500031, 3.0, 4.0, 2.0], [-0.931499958, 5.0, 6.0, 4.0], [0.511500001, 7.0, 8.0, 2.0], [-0.166000009, 9.0, 10.0, 0.0], [-0.992499948, 11.0, 12.0, 3.0], [-0.526499987, 13.0, 14.0, 1.0], [-0.225499988, 15.0, 16.0, 0.0], [-0.141000003, 17.0, 18.0, 0.0], [-0.995499969, 19.0, 20.0, 3.0], [0.5995, 21.0, 22.0, 2.0], [-0.753000021, 23.0, 24.0, 1.0], [0.459999979, 25.0, 26.0, 2.0], [-0.993499994, 27.0, 28.0, 3.0], [-0.257499993, 29.0, 30.0, 0.0], [-0.825500011, 31.0, 32.0, 1.0], [-0.710000038, 33.0, 34.0, 1.0], [-0.99849999, 35.0, 36.0, 3.0], [-0.154033482, 0.0, 0.0, 0.0], [-0.652999997, 37.0, 38.0, 1.0], [0.680500031, 39.0, 40.0, 2.0], [-0.115519628, 0.0, 0.0, 0.0], [-0.961500049, 41.0, 42.0, 4.0], [0.135161787, 0.0, 0.0, 0.0], [-0.695500016, 43.0, 44.0, 1.0], [2.21126465e-05, 0.0, 0.0, 0.0], [0.301700413, 0.0, 0.0, 0.0], [-0.881500006, 45.0, 46.0, 4.0], [-0.914499998, 47.0, 48.0, 4.0], [0.657000005, 49.0, 50.0, 2.0], [-0.2095, 51.0, 52.0, 0.0], [0.13675727, 0.0, 0.0, 0.0], [-0.208412349, 0.0, 0.0, 0.0], [0.0742016956, 0.0, 0.0, 0.0], [-0.184535369, 0.0, 0.0, 0.0], [-0.0611254424, 0.0, 0.0, 0.0], [0.266402513, 0.0, 0.0, 0.0], [0.12609072, 0.0, 0.0, 0.0], [-0.258371323, 0.0, 0.0, 0.0], [-0.261991113, 0.0, 0.0, 0.0], [0.106816515, 0.0, 0.0, 0.0], [0.0476976819, 0.0, 0.0, 0.0], [0.2477303, 0.0, 0.0, 0.0], [-0.186912373, 0.0, 0.0, 0.0], [-0.000196730834, 0.0, 0.0, 0.0], [0.154477075, 0.0, 0.0, 0.0], [-0.0655689687, 0.0, 0.0, 0.0], [-0.177861959, 0.0, 0.0, 0.0], [-0.00589101808, 0.0, 0.0, 0.0], [0.124339268, 0.0, 0.0, 0.0], [-0.289696246, 0.0, 0.0, 0.0], [0.256937385, 0.0, 0.0, 0.0], [-0.0432398617, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([31, 32, 33, 34, 35, 36, 18, 37, 38, 39, 40, 21, 41, 42, 23, 43, 44, 25, 26, 45, 46, 47, 48, 49, 50, 51, 52])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 19, 20, 10, 22, 2, 5, 11, 24, 12, 6, 13, 27, 28, 14, 29, 30])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_199(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.809499979, 1.0, 2.0, 1.0], [-0.17750001, 3.0, 4.0, 0.0], [-0.374500006, 5.0, 6.0, 0.0], [-0.815500021, 7.0, 8.0, 1.0], [-0.997500002, 9.0, 10.0, 3.0], [0.169988617, 0.0, 0.0, 0.0], [-0.80250001, 11.0, 12.0, 1.0], [-0.818500042, 13.0, 14.0, 1.0], [-0.245619431, 0.0, 0.0, 0.0], [-0.123664051, 0.0, 0.0, 0.0], [-0.139499992, 15.0, 16.0, 0.0], [-0.988499999, 17.0, 18.0, 3.0], [-0.797500014, 19.0, 20.0, 1.0], [0.516000032, 21.0, 22.0, 2.0], [0.0896727294, 0.0, 0.0, 0.0], [0.22340326, 0.0, 0.0, 0.0], [0.00591412559, 0.0, 0.0, 0.0], [-0.958999991, 23.0, 24.0, 4.0], [-0.172167018, 0.0, 0.0, 0.0], [-0.988499999, 25.0, 26.0, 3.0], [-0.791499972, 27.0, 28.0, 1.0], [-0.193810418, 0.0, 0.0, 0.0], [0.065200828, 0.0, 0.0, 0.0], [0.0208306443, 0.0, 0.0, 0.0], [0.321957856, 0.0, 0.0, 0.0], [-0.355031222, 0.0, 0.0, 0.0], [0.107250184, 0.0, 0.0, 0.0], [0.202932447, 0.0, 0.0, 0.0], [0.000855338061, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 9, 15, 16, 5, 23, 24, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 2, 6, 11, 17, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_200(xs):
    #Predicts Class 2
    function_dict = np.array([[0.868999958, 1.0, 2.0, 2.0], [-0.933500051, 3.0, 4.0, 4.0], [0.163452074, 0.0, 0.0, 0.0], [-0.156500012, 5.0, 6.0, 0.0], [-0.682500005, 7.0, 8.0, 1.0], [0.546499968, 9.0, 10.0, 2.0], [-0.996500015, 11.0, 12.0, 3.0], [-0.109499998, 13.0, 14.0, 0.0], [-0.526499987, 15.0, 16.0, 1.0], [-0.681499958, 17.0, 18.0, 1.0], [-0.243499994, 19.0, 20.0, 0.0], [-0.709499955, 21.0, 22.0, 1.0], [-0.100899994, 23.0, 24.0, 0.0], [-0.196500003, 25.0, 26.0, 0.0], [0.10971278, 0.0, 0.0, 0.0], [-0.778499961, 27.0, 28.0, 4.0], [-0.257499993, 29.0, 30.0, 0.0], [0.0516012721, 0.0, 0.0, 0.0], [-0.170548409, 0.0, 0.0, 0.0], [-0.0600477792, 0.0, 0.0, 0.0], [0.14326252, 0.0, 0.0, 0.0], [-0.05018932, 0.0, 0.0, 0.0], [0.138691887, 0.0, 0.0, 0.0], [-0.279995531, 0.0, 0.0, 0.0], [-0.0640109107, 0.0, 0.0, 0.0], [-0.325079232, 0.0, 0.0, 0.0], [-0.112942144, 0.0, 0.0, 0.0], [0.0976569206, 0.0, 0.0, 0.0], [-0.101887882, 0.0, 0.0, 0.0], [0.0499455743, 0.0, 0.0, 0.0], [-0.131514698, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 14, 27, 28, 29, 30, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_201(xs):
    #Predicts Class 3
    function_dict = np.array([[0.415000021, 1.0, 2.0, 0.0], [0.409500003, 3.0, 4.0, 0.0], [0.424000025, 5.0, 6.0, 0.0], [0.282499999, 7.0, 8.0, 0.0], [-0.445417792, 0.0, 0.0, 0.0], [0.223424837, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.272000015, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.999500036, 17.0, 18.0, 1.0], [0.264499992, 19.0, 20.0, 0.0], [0.276499987, 21.0, 22.0, 0.0], [0.392499983, 23.0, 24.0, 0.0], [-0.249903709, 0.0, 0.0, 0.0], [0.431500018, 25.0, 26.0, 0.0], [0.588, 27.0, 28.0, 0.0], [0.391904414, 0.0, 0.0, 0.0], [-0.0779094473, 0.0, 0.0, 0.0], [-0.00354120135, 0.0, 0.0, 0.0], [0.295918375, 0.0, 0.0, 0.0], [-0.373170972, 0.0, 0.0, 0.0], [-0.00970370136, 0.0, 0.0, 0.0], [0.271824777, 0.0, 0.0, 0.0], [-0.00532957446, 0.0, 0.0, 0.0], [-0.297419071, 0.0, 0.0, 0.0], [-0.0182729457, 0.0, 0.0, 0.0], [0.215206951, 0.0, 0.0, 0.0], [-0.248829812, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 14, 4, 5, 25, 26, 27, 28, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 2, 6, 9, 15, 16, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_202(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.1105, 3.0, 4.0, 0.0], [0.1105, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [0.0577500015, 11.0, 12.0, 0.0], [-0.242937818, 0.0, 0.0, 0.0], [0.0892499983, 13.0, 14.0, 0.0], [-0.304753244, 0.0, 0.0, 0.0], [0.331814408, 0.0, 0.0, 0.0], [0.190499991, 15.0, 16.0, 0.0], [-0.680500031, 17.0, 18.0, 2.0], [0.226975128, 0.0, 0.0, 0.0], [0.0883999988, 19.0, 20.0, 0.0], [0.0923999995, 21.0, 22.0, 0.0], [-0.218215361, 0.0, 0.0, 0.0], [0.194499999, 23.0, 24.0, 0.0], [-0.254500002, 25.0, 26.0, 0.0], [0.00490000006, 27.0, 28.0, 0.0], [0.0050685727, 0.0, 0.0, 0.0], [-0.259579897, 0.0, 0.0, 0.0], [0.242453113, 0.0, 0.0, 0.0], [-0.0196773596, 0.0, 0.0, 0.0], [0.14889577, 0.0, 0.0, 0.0], [-0.0192576125, 0.0, 0.0, 0.0], [0.0432021208, 0.0, 0.0, 0.0], [-0.174612075, 0.0, 0.0, 0.0], [0.0530989915, 0.0, 0.0, 0.0], [-0.18629466, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 15, 23, 24, 25, 26, 27, 28, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 16, 2, 5, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_203(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.523000002, 1.0, 2.0, 2.0], [0.415000021, 3.0, 4.0, 0.0], [-0.0276000015, 5.0, 6.0, 0.0], [0.409500003, 7.0, 8.0, 0.0], [0.424000025, 9.0, 10.0, 0.0], [-0.194873422, 0.0, 0.0, 0.0], [0.0383566059, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [0.446665704, 0.0, 0.0, 0.0], [-0.220632881, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.276499987, 15.0, 16.0, 0.0], [0.253000021, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [-0.999500036, 21.0, 22.0, 1.0], [0.0217462722, 0.0, 0.0, 0.0], [-0.178531095, 0.0, 0.0, 0.0], [-0.0129778553, 0.0, 0.0, 0.0], [0.224195287, 0.0, 0.0, 0.0], [0.0421995744, 0.0, 0.0, 0.0], [-0.115814529, 0.0, 0.0, 0.0], [-0.388167232, 0.0, 0.0, 0.0], [0.0872749165, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 9, 19, 20, 21, 22, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 10, 13, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_204(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [0.414499998, 3.0, 4.0, 2.0], [-0.466499984, 5.0, 6.0, 1.0], [-0.968500018, 7.0, 8.0, 4.0], [0.442499995, 9.0, 10.0, 2.0], [-0.288411379, 0.0, 0.0, 0.0], [-0.449499995, 11.0, 12.0, 1.0], [-0.87349999, 13.0, 14.0, 1.0], [-0.782000005, 15.0, 16.0, 1.0], [-0.182500005, 17.0, 18.0, 0.0], [0.456499994, 19.0, 20.0, 2.0], [0.11389605, 0.0, 0.0, 0.0], [-0.357500017, 21.0, 22.0, 1.0], [-0.0280795917, 0.0, 0.0, 0.0], [0.276499987, 23.0, 24.0, 2.0], [-0.108500004, 25.0, 26.0, 0.0], [-0.763000011, 27.0, 28.0, 1.0], [-0.997500002, 29.0, 30.0, 3.0], [-0.0519094802, 0.0, 0.0, 0.0], [-0.183499992, 31.0, 32.0, 0.0], [-0.766499996, 33.0, 34.0, 1.0], [-0.235500008, 35.0, 36.0, 0.0], [0.0849681199, 0.0, 0.0, 0.0], [-0.062138129, 0.0, 0.0, 0.0], [-0.238043591, 0.0, 0.0, 0.0], [0.139656588, 0.0, 0.0, 0.0], [-0.0928035825, 0.0, 0.0, 0.0], [-0.214920357, 0.0, 0.0, 0.0], [0.0238374937, 0.0, 0.0, 0.0], [-0.0322078168, 0.0, 0.0, 0.0], [0.255723774, 0.0, 0.0, 0.0], [-0.28880325, 0.0, 0.0, 0.0], [0.104140885, 0.0, 0.0, 0.0], [0.0821391493, 0.0, 0.0, 0.0], [-0.00106463488, 0.0, 0.0, 0.0], [-0.256886005, 0.0, 0.0, 0.0], [-0.0370175615, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 23, 24, 25, 26, 27, 28, 29, 30, 18, 31, 32, 33, 34, 5, 11, 35, 36, 22])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 15, 16, 4, 9, 17, 10, 19, 20, 2, 6, 12, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_205(xs):
    #Predicts Class 1
    function_dict = np.array([[0.119499996, 1.0, 2.0, 0.0], [-0.9745, 3.0, 4.0, 3.0], [0.167982653, 0.0, 0.0, 0.0], [-0.334500015, 5.0, 6.0, 0.0], [-0.212500006, 7.0, 8.0, 0.0], [-0.932999969, 9.0, 10.0, 4.0], [-0.291500002, 11.0, 12.0, 0.0], [-0.922500014, 13.0, 14.0, 4.0], [-0.551499963, 15.0, 16.0, 1.0], [0.597000003, 17.0, 18.0, 2.0], [-0.3565, 19.0, 20.0, 0.0], [-0.825999975, 21.0, 22.0, 1.0], [-0.255500019, 23.0, 24.0, 0.0], [-0.236499995, 25.0, 26.0, 0.0], [0.634000003, 27.0, 28.0, 2.0], [-0.9745, 29.0, 30.0, 4.0], [0.0981397703, 0.0, 0.0, 0.0], [0.00504170218, 0.0, 0.0, 0.0], [0.207978964, 0.0, 0.0, 0.0], [-0.0598604456, 0.0, 0.0, 0.0], [-0.299602032, 0.0, 0.0, 0.0], [-0.0576963909, 0.0, 0.0, 0.0], [0.150458336, 0.0, 0.0, 0.0], [-0.0857307687, 0.0, 0.0, 0.0], [0.0278004538, 0.0, 0.0, 0.0], [-0.146326214, 0.0, 0.0, 0.0], [0.128841817, 0.0, 0.0, 0.0], [0.167017981, 0.0, 0.0, 0.0], [-0.0136570921, 0.0, 0.0, 0.0], [-0.00659756176, 0.0, 0.0, 0.0], [-0.303721339, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 13, 14, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_206(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.558500051, 1.0, 2.0, 1.0], [-0.24849999, 3.0, 4.0, 0.0], [0.673500001, 5.0, 6.0, 2.0], [-0.891499996, 7.0, 8.0, 4.0], [-0.891499996, 9.0, 10.0, 4.0], [-0.962499976, 11.0, 12.0, 3.0], [-0.214000002, 13.0, 14.0, 0.0], [-0.967499971, 15.0, 16.0, 4.0], [0.0381109491, 0.0, 0.0, 0.0], [-0.956499994, 17.0, 18.0, 4.0], [0.687000036, 19.0, 20.0, 2.0], [-0.2245, 21.0, 22.0, 0.0], [-0.864499986, 23.0, 24.0, 3.0], [0.735499978, 25.0, 26.0, 2.0], [0.723500013, 27.0, 28.0, 2.0], [-0.0395261571, 0.0, 0.0, 0.0], [-0.32519263, 0.0, 0.0, 0.0], [-0.240500003, 29.0, 30.0, 0.0], [-0.596500039, 31.0, 32.0, 1.0], [-0.818499982, 33.0, 34.0, 4.0], [-0.219000012, 35.0, 36.0, 0.0], [-0.997500002, 37.0, 38.0, 3.0], [-0.154500008, 39.0, 40.0, 0.0], [-0.266499996, 41.0, 42.0, 0.0], [0.636999965, 43.0, 44.0, 2.0], [-0.968500018, 45.0, 46.0, 3.0], [-0.796499968, 47.0, 48.0, 4.0], [0.258844525, 0.0, 0.0, 0.0], [-0.863000035, 49.0, 50.0, 4.0], [0.220075801, 0.0, 0.0, 0.0], [-0.0559134595, 0.0, 0.0, 0.0], [0.0239821654, 0.0, 0.0, 0.0], [0.321290106, 0.0, 0.0, 0.0], [-0.317177057, 0.0, 0.0, 0.0], [-0.0311401673, 0.0, 0.0, 0.0], [-0.160414562, 0.0, 0.0, 0.0], [0.127570406, 0.0, 0.0, 0.0], [0.0447215699, 0.0, 0.0, 0.0], [0.239524513, 0.0, 0.0, 0.0], [-0.113732703, 0.0, 0.0, 0.0], [0.134057492, 0.0, 0.0, 0.0], [-0.260423511, 0.0, 0.0, 0.0], [0.0132972775, 0.0, 0.0, 0.0], [-0.0251112971, 0.0, 0.0, 0.0], [0.256938368, 0.0, 0.0, 0.0], [-0.259496808, 0.0, 0.0, 0.0], [-0.0106592858, 0.0, 0.0, 0.0], [0.138137788, 0.0, 0.0, 0.0], [-0.0840017572, 0.0, 0.0, 0.0], [-0.105837181, 0.0, 0.0, 0.0], [0.111339852, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 27, 49, 50])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 17, 18, 10, 19, 20, 2, 5, 11, 21, 22, 12, 23, 24, 6, 13, 25, 26, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_207(xs):
    #Predicts Class 3
    function_dict = np.array([[0.547500014, 1.0, 2.0, 0.0], [0.539999962, 3.0, 4.0, 0.0], [0.550999999, 5.0, 6.0, 0.0], [0.534000039, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.352900803, 0.0, 0.0, 0.0], [0.585000038, 11.0, 12.0, 0.0], [0.513000011, 13.0, 14.0, 0.0], [0.261810362, 0.0, 0.0, 0.0], [0.543500006, 15.0, 16.0, 0.0], [0.166067362, 0.0, 0.0, 0.0], [0.565500021, 17.0, 18.0, 0.0], [0.616999984, 19.0, 20.0, 0.0], [0.506000042, 21.0, 22.0, 0.0], [0.521499991, 23.0, 24.0, 0.0], [-0.38973254, 0.0, 0.0, 0.0], [-0.00732194586, 0.0, 0.0, 0.0], [0.561499953, 25.0, 26.0, 0.0], [-0.258402616, 0.0, 0.0, 0.0], [0.198573679, 0.0, 0.0, 0.0], [0.620499969, 27.0, 28.0, 0.0], [-0.000756131136, 0.0, 0.0, 0.0], [0.25392586, 0.0, 0.0, 0.0], [-0.354542494, 0.0, 0.0, 0.0], [-0.0173185468, 0.0, 0.0, 0.0], [-0.0700526312, 0.0, 0.0, 0.0], [0.137363598, 0.0, 0.0, 0.0], [-0.106385581, 0.0, 0.0, 0.0], [0.0975719467, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 16, 10, 5, 25, 26, 18, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 2, 6, 11, 17, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_208(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.134709626, 0.0, 0.0, 0.0], [0.0941499993, 5.0, 6.0, 0.0], [0.152999997, 7.0, 8.0, 0.0], [0.0923999995, 9.0, 10.0, 0.0], [0.0965999961, 11.0, 12.0, 0.0], [-0.26509887, 0.0, 0.0, 0.0], [0.192499995, 13.0, 14.0, 0.0], [0.0873000026, 15.0, 16.0, 0.0], [-0.279315501, 0.0, 0.0, 0.0], [0.303484261, 0.0, 0.0, 0.0], [0.107500002, 17.0, 18.0, 0.0], [0.195292354, 0.0, 0.0, 0.0], [0.195499986, 19.0, 20.0, 0.0], [-0.00418545073, 0.0, 0.0, 0.0], [0.127366692, 0.0, 0.0, 0.0], [-0.150152981, 0.0, 0.0, 0.0], [0.241743743, 0.0, 0.0, 0.0], [-0.122996211, 0.0, 0.0, 0.0], [-0.0100554805, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 11, 17, 18, 7, 13, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 12, 4, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_209(xs):
    #Predicts Class 5
    function_dict = np.array([[0.547500014, 1.0, 2.0, 0.0], [0.539999962, 3.0, 4.0, 0.0], [0.550999999, 5.0, 6.0, 0.0], [0.534000039, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.35130313, 0.0, 0.0, 0.0], [0.585000038, 11.0, 12.0, 0.0], [0.513000011, 13.0, 14.0, 0.0], [-0.259493589, 0.0, 0.0, 0.0], [0.543500006, 15.0, 16.0, 0.0], [-0.164861843, 0.0, 0.0, 0.0], [0.565500021, 17.0, 18.0, 0.0], [0.616999984, 19.0, 20.0, 0.0], [0.506000042, 21.0, 22.0, 0.0], [0.521499991, 23.0, 24.0, 0.0], [0.390611887, 0.0, 0.0, 0.0], [0.00915693305, 0.0, 0.0, 0.0], [0.561499953, 25.0, 26.0, 0.0], [0.260490894, 0.0, 0.0, 0.0], [-0.19311662, 0.0, 0.0, 0.0], [0.620499969, 27.0, 28.0, 0.0], [0.0057749385, 0.0, 0.0, 0.0], [-0.251900494, 0.0, 0.0, 0.0], [0.354961067, 0.0, 0.0, 0.0], [0.0225706846, 0.0, 0.0, 0.0], [0.0716629401, 0.0, 0.0, 0.0], [-0.134540319, 0.0, 0.0, 0.0], [0.107683346, 0.0, 0.0, 0.0], [-0.081523858, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 16, 10, 5, 25, 26, 18, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 2, 6, 11, 17, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_210(xs):
    #Predicts Class 0
    function_dict = np.array([[0.259499997, 1.0, 2.0, 2.0], [-0.162032008, 0.0, 0.0, 0.0], [0.276499987, 3.0, 4.0, 2.0], [0.182696268, 0.0, 0.0, 0.0], [0.354499996, 5.0, 6.0, 2.0], [-0.99849999, 7.0, 8.0, 3.0], [-0.484499991, 9.0, 10.0, 1.0], [0.114390232, 0.0, 0.0, 0.0], [-0.793500006, 11.0, 12.0, 1.0], [-0.166500002, 13.0, 14.0, 0.0], [-0.466499984, 15.0, 16.0, 1.0], [-0.0590876266, 0.0, 0.0, 0.0], [-0.245864972, 0.0, 0.0, 0.0], [-0.00434478559, 0.0, 0.0, 0.0], [0.0489157513, 0.0, 0.0, 0.0], [-0.237560064, 0.0, 0.0, 0.0], [-0.0218023062, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 11, 12, 13, 14, 15, 16])
    branch_indices = np.array([0, 2, 4, 5, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_211(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.315500021, 1.0, 2.0, 0.0], [-0.323500007, 3.0, 4.0, 0.0], [0.712499976, 5.0, 6.0, 2.0], [-0.811499953, 7.0, 8.0, 1.0], [-0.946500003, 9.0, 10.0, 4.0], [0.70449996, 11.0, 12.0, 2.0], [-0.930999994, 13.0, 14.0, 4.0], [-0.189155117, 0.0, 0.0, 0.0], [-0.365500003, 15.0, 16.0, 1.0], [0.0260518212, 0.0, 0.0, 0.0], [0.214306891, 0.0, 0.0, 0.0], [0.657000005, 17.0, 18.0, 2.0], [0.21287781, 0.0, 0.0, 0.0], [0.102204226, 0.0, 0.0, 0.0], [-0.266038567, 0.0, 0.0, 0.0], [-0.606999993, 19.0, 20.0, 1.0], [-0.171672568, 0.0, 0.0, 0.0], [-0.752499998, 21.0, 22.0, 1.0], [-0.440999985, 23.0, 24.0, 1.0], [0.00562927267, 0.0, 0.0, 0.0], [0.154937267, 0.0, 0.0, 0.0], [-0.030641634, 0.0, 0.0, 0.0], [0.0331750438, 0.0, 0.0, 0.0], [-0.233698845, 0.0, 0.0, 0.0], [0.126950681, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 19, 20, 16, 9, 10, 21, 22, 23, 24, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 8, 15, 4, 2, 5, 11, 17, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_212(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.0728500038, 3.0, 4.0, 0.0], [0.138817742, 0.0, 0.0, 0.0], [-0.101500005, 5.0, 6.0, 0.0], [-0.966500044, 7.0, 8.0, 4.0], [-0.33950001, 9.0, 10.0, 0.0], [-0.657000005, 11.0, 12.0, 1.0], [0.0362430252, 0.0, 0.0, 0.0], [-0.211345226, 0.0, 0.0, 0.0], [-0.958500028, 13.0, 14.0, 4.0], [0.69749999, 15.0, 16.0, 2.0], [-0.00215973961, 0.0, 0.0, 0.0], [0.242536142, 0.0, 0.0, 0.0], [0.0198097788, 0.0, 0.0, 0.0], [-0.207769215, 0.0, 0.0, 0.0], [-0.0142727075, 0.0, 0.0, 0.0], [0.0512726754, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_213(xs):
    #Predicts Class 3
    function_dict = np.array([[0.201499999, 1.0, 2.0, 0.0], [0.0560500026, 3.0, 4.0, 0.0], [0.212500006, 5.0, 6.0, 0.0], [0.0477499999, 7.0, 8.0, 0.0], [0.0689999983, 9.0, 10.0, 0.0], [0.202500001, 11.0, 12.0, 0.0], [0.256500006, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [0.0515500009, 17.0, 18.0, 0.0], [0.265986323, 0.0, 0.0, 0.0], [-0.885499954, 19.0, 20.0, 2.0], [-0.0110132173, 0.0, 0.0, 0.0], [-0.30597049, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.264499992, 23.0, 24.0, 0.0], [0.0293500014, 25.0, 26.0, 0.0], [-0.972000003, 27.0, 28.0, 2.0], [-0.309062958, 0.0, 0.0, 0.0], [-0.00189465028, 0.0, 0.0, 0.0], [-0.99849999, 29.0, 30.0, 1.0], [0.0786999986, 31.0, 32.0, 0.0], [0.289921343, 0.0, 0.0, 0.0], [0.228500009, 33.0, 34.0, 0.0], [0.261500001, 35.0, 36.0, 0.0], [0.272000015, 37.0, 38.0, 0.0], [-0.0102703357, 0.0, 0.0, 0.0], [0.0924945995, 0.0, 0.0, 0.0], [0.23900044, 0.0, 0.0, 0.0], [0.00233079097, 0.0, 0.0, 0.0], [0.0551523603, 0.0, 0.0, 0.0], [-0.264260888, 0.0, 0.0, 0.0], [-0.412520945, 0.0, 0.0, 0.0], [0.0964179635, 0.0, 0.0, 0.0], [-0.171714053, 0.0, 0.0, 0.0], [0.190778613, 0.0, 0.0, 0.0], [-0.112559289, 0.0, 0.0, 0.0], [-0.326121718, 0.0, 0.0, 0.0], [0.248668954, 0.0, 0.0, 0.0], [-0.0092064254, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 17, 18, 9, 29, 30, 31, 32, 11, 12, 21, 33, 34, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 10, 19, 20, 2, 5, 6, 13, 22, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_214(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0560500026, 1.0, 2.0, 0.0], [0.0477499999, 3.0, 4.0, 0.0], [0.0694999993, 5.0, 6.0, 0.0], [0.0293500014, 7.0, 8.0, 0.0], [0.0506500006, 9.0, 10.0, 0.0], [-0.26303789, 0.0, 0.0, 0.0], [-0.885499954, 11.0, 12.0, 2.0], [0.02795, 13.0, 14.0, 0.0], [0.0353999995, 15.0, 16.0, 0.0], [0.310425282, 0.0, 0.0, 0.0], [0.00569952931, 0.0, 0.0, 0.0], [0.0824999958, 17.0, 18.0, 0.0], [0.0778999999, 19.0, 20.0, 0.0], [0.02685, 21.0, 22.0, 0.0], [0.381231219, 0.0, 0.0, 0.0], [-0.312676549, 0.0, 0.0, 0.0], [0.0368999988, 23.0, 24.0, 0.0], [0.0760499984, 25.0, 26.0, 0.0], [0.0854000002, 27.0, 28.0, 0.0], [0.411682099, 0.0, 0.0, 0.0], [-0.626000047, 29.0, 30.0, 2.0], [0.00360825052, 0.0, 0.0, 0.0], [-0.328232765, 0.0, 0.0, 0.0], [0.318869948, 0.0, 0.0, 0.0], [-0.103479907, 0.0, 0.0, 0.0], [-0.00621251157, 0.0, 0.0, 0.0], [-0.32650581, 0.0, 0.0, 0.0], [0.148550406, 0.0, 0.0, 0.0], [-0.0050580278, 0.0, 0.0, 0.0], [-0.133768573, 0.0, 0.0, 0.0], [0.0425893664, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 23, 24, 9, 10, 5, 25, 26, 27, 28, 19, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 4, 2, 6, 11, 17, 18, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_215(xs):
    #Predicts Class 5
    function_dict = np.array([[0.256500006, 1.0, 2.0, 0.0], [0.228500009, 3.0, 4.0, 0.0], [0.264499992, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [0.253499985, 9.0, 10.0, 0.0], [0.261500001, 11.0, 12.0, 0.0], [0.272000015, 13.0, 14.0, 0.0], [-0.149500012, 15.0, 16.0, 0.0], [-0.996500015, 17.0, 18.0, 1.0], [-0.315401316, 0.0, 0.0, 0.0], [-0.0368626192, 0.0, 0.0, 0.0], [0.259499997, 19.0, 20.0, 0.0], [0.327050954, 0.0, 0.0, 0.0], [-0.247282982, 0.0, 0.0, 0.0], [0.276499987, 21.0, 22.0, 0.0], [-0.38349998, 23.0, 24.0, 0.0], [-0.0748500004, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 1.0], [-0.157158405, 0.0, 0.0, 0.0], [0.308347642, 0.0, 0.0, 0.0], [-0.0933879167, 0.0, 0.0, 0.0], [0.248941094, 0.0, 0.0, 0.0], [0.341000021, 29.0, 30.0, 0.0], [-0.0376643054, 0.0, 0.0, 0.0], [0.0460338816, 0.0, 0.0, 0.0], [-0.226505622, 0.0, 0.0, 0.0], [0.0017713235, 0.0, 0.0, 0.0], [-0.00697981939, 0.0, 0.0, 0.0], [0.329784006, 0.0, 0.0, 0.0], [-0.164053008, 0.0, 0.0, 0.0], [0.0181504581, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 18, 9, 10, 19, 20, 12, 13, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 2, 5, 11, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_216(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.984500051, 1.0, 2.0, 4.0], [-0.147885814, 0.0, 0.0, 0.0], [-0.603999972, 3.0, 4.0, 4.0], [0.774999976, 5.0, 6.0, 2.0], [0.125986174, 0.0, 0.0, 0.0], [-0.698500037, 7.0, 8.0, 4.0], [-0.712499976, 9.0, 10.0, 4.0], [0.723500013, 11.0, 12.0, 2.0], [0.195089623, 0.0, 0.0, 0.0], [0.825999975, 13.0, 14.0, 2.0], [-0.268806577, 0.0, 0.0, 0.0], [-0.009901613, 0.0, 0.0, 0.0], [0.138150617, 0.0, 0.0, 0.0], [-0.0974058062, 0.0, 0.0, 0.0], [0.187712476, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 8, 13, 14, 10, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_217(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.276499987, 1.0, 2.0, 0.0], [0.444499999, 3.0, 4.0, 2.0], [-0.415000021, 5.0, 6.0, 1.0], [0.236073971, 0.0, 0.0, 0.0], [-0.4745, 7.0, 8.0, 1.0], [-0.271499991, 9.0, 10.0, 0.0], [-0.217500001, 11.0, 12.0, 0.0], [-0.494500011, 13.0, 14.0, 1.0], [-0.299499989, 15.0, 16.0, 0.0], [-0.167653978, 0.0, 0.0, 0.0], [-0.99849999, 17.0, 18.0, 3.0], [-0.256907254, 0.0, 0.0, 0.0], [-0.0289198533, 0.0, 0.0, 0.0], [-0.916999996, 19.0, 20.0, 4.0], [-0.266594708, 0.0, 0.0, 0.0], [-0.419499993, 21.0, 22.0, 1.0], [0.171966508, 0.0, 0.0, 0.0], [-0.961500049, 23.0, 24.0, 4.0], [-0.957499981, 25.0, 26.0, 4.0], [0.0792929977, 0.0, 0.0, 0.0], [-0.0861054361, 0.0, 0.0, 0.0], [0.145940498, 0.0, 0.0, 0.0], [-0.074400641, 0.0, 0.0, 0.0], [-0.143628135, 0.0, 0.0, 0.0], [0.0389050096, 0.0, 0.0, 0.0], [0.0633692071, 0.0, 0.0, 0.0], [-0.022132434, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 19, 20, 14, 21, 22, 16, 9, 23, 24, 25, 26, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 13, 8, 15, 2, 5, 10, 17, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_218(xs):
    #Predicts Class 2
    function_dict = np.array([[0.557500005, 1.0, 2.0, 2.0], [0.529500008, 3.0, 4.0, 2.0], [0.566499949, 5.0, 6.0, 2.0], [-0.218499988, 7.0, 8.0, 0.0], [-0.210500002, 9.0, 10.0, 0.0], [-0.58099997, 11.0, 12.0, 1.0], [0.577499986, 13.0, 14.0, 2.0], [-0.987499952, 15.0, 16.0, 3.0], [-0.180500001, 17.0, 18.0, 0.0], [-0.656999946, 19.0, 20.0, 1.0], [-0.192499995, 21.0, 22.0, 0.0], [-0.275524586, 0.0, 0.0, 0.0], [-0.0438845046, 0.0, 0.0, 0.0], [-0.983999968, 23.0, 24.0, 3.0], [0.60650003, 25.0, 26.0, 2.0], [-0.233500004, 27.0, 28.0, 0.0], [-0.247500002, 29.0, 30.0, 0.0], [-0.985499978, 31.0, 32.0, 3.0], [-0.0731000006, 33.0, 34.0, 0.0], [-0.259096444, 0.0, 0.0, 0.0], [-0.289499998, 35.0, 36.0, 0.0], [0.359591633, 0.0, 0.0, 0.0], [-0.0175881032, 0.0, 0.0, 0.0], [0.237332165, 0.0, 0.0, 0.0], [0.00478214677, 0.0, 0.0, 0.0], [-0.625499964, 37.0, 38.0, 1.0], [0.612499952, 39.0, 40.0, 2.0], [-0.0251442119, 0.0, 0.0, 0.0], [0.238479197, 0.0, 0.0, 0.0], [0.101672232, 0.0, 0.0, 0.0], [-0.236704573, 0.0, 0.0, 0.0], [-0.333887219, 0.0, 0.0, 0.0], [0.0481958576, 0.0, 0.0, 0.0], [0.0880102888, 0.0, 0.0, 0.0], [-0.0936976746, 0.0, 0.0, 0.0], [-0.0429769494, 0.0, 0.0, 0.0], [0.312441617, 0.0, 0.0, 0.0], [-0.239572942, 0.0, 0.0, 0.0], [0.00179181108, 0.0, 0.0, 0.0], [0.230066955, 0.0, 0.0, 0.0], [-0.00936604757, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 31, 32, 33, 34, 19, 35, 36, 21, 22, 11, 12, 23, 24, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 20, 10, 2, 5, 6, 13, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_219(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.654500008, 3.0, 4.0, 2.0], [-0.997500002, 5.0, 6.0, 1.0], [-0.747500002, 7.0, 8.0, 2.0], [-0.0857000053, 9.0, 10.0, 0.0], [-0.167253464, 0.0, 0.0, 0.0], [-0.00579320639, 0.0, 0.0, 0.0], [-0.795000017, 11.0, 12.0, 2.0], [-0.149500012, 13.0, 14.0, 0.0], [-0.12650001, 15.0, 16.0, 0.0], [-0.0225000009, 17.0, 18.0, 0.0], [-0.140500009, 19.0, 20.0, 0.0], [0.0242500007, 21.0, 22.0, 0.0], [-0.293674946, 0.0, 0.0, 0.0], [-0.120999999, 23.0, 24.0, 0.0], [-0.99849999, 25.0, 26.0, 1.0], [0.30747667, 0.0, 0.0, 0.0], [-0.0337999985, 27.0, 28.0, 0.0], [-0.644500017, 29.0, 30.0, 2.0], [-0.0355794765, 0.0, 0.0, 0.0], [0.00357930991, 0.0, 0.0, 0.0], [0.181193292, 0.0, 0.0, 0.0], [-0.148797765, 0.0, 0.0, 0.0], [0.261210084, 0.0, 0.0, 0.0], [-0.098889336, 0.0, 0.0, 0.0], [0.101319335, 0.0, 0.0, 0.0], [-0.0711027458, 0.0, 0.0, 0.0], [0.0108714718, 0.0, 0.0, 0.0], [-0.243077755, 0.0, 0.0, 0.0], [0.260925174, 0.0, 0.0, 0.0], [0.0120408041, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 23, 24, 25, 26, 16, 27, 28, 29, 30, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 4, 9, 15, 10, 17, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_220(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00163000007, 1.0, 2.0, 0.0], [-0.00413500005, 3.0, 4.0, 0.0], [-0.00132499996, 5.0, 6.0, 0.0], [-0.00550500024, 7.0, 8.0, 0.0], [-0.00322999991, 9.0, 10.0, 0.0], [0.421782911, 0.0, 0.0, 0.0], [0.000549999997, 11.0, 12.0, 0.0], [-0.00885999948, 13.0, 14.0, 0.0], [-0.0052199997, 15.0, 16.0, 0.0], [-0.399684548, 0.0, 0.0, 0.0], [-0.00200500013, 17.0, 18.0, 0.0], [-0.000834999955, 19.0, 20.0, 0.0], [0.00146499998, 21.0, 22.0, 0.0], [-0.0101749999, 23.0, 24.0, 0.0], [-0.346146166, 0.0, 0.0, 0.0], [0.425957084, 0.0, 0.0, 0.0], [-0.00478500035, 25.0, 26.0, 0.0], [0.0815680698, 0.0, 0.0, 0.0], [-0.321299523, 0.0, 0.0, 0.0], [0.0014844524, 0.0, 0.0, 0.0], [-0.000469999999, 27.0, 28.0, 0.0], [0.565982819, 0.0, 0.0, 0.0], [0.00325499987, 29.0, 30.0, 0.0], [-0.00942995772, 0.0, 0.0, 0.0], [0.473229617, 0.0, 0.0, 0.0], [-0.0918231457, 0.0, 0.0, 0.0], [0.110188529, 0.0, 0.0, 0.0], [-0.293702066, 0.0, 0.0, 0.0], [-0.0490557924, 0.0, 0.0, 0.0], [-0.185173899, 0.0, 0.0, 0.0], [0.0180164967, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 25, 26, 9, 17, 18, 5, 19, 27, 28, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 4, 10, 2, 6, 11, 20, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_221(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.401000023, 1.0, 2.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [-0.38349998, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [0.281573951, 0.0, 0.0, 0.0], [-0.393000007, 9.0, 10.0, 0.0], [-0.337500006, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [-0.418500006, 15.0, 16.0, 0.0], [-0.0257553346, 0.0, 0.0, 0.0], [-0.307092547, 0.0, 0.0, 0.0], [0.214341581, 0.0, 0.0, 0.0], [-0.169499993, 17.0, 18.0, 0.0], [-0.457500011, 19.0, 20.0, 0.0], [0.140014261, 0.0, 0.0, 0.0], [-0.170832574, 0.0, 0.0, 0.0], [-0.0079070041, 0.0, 0.0, 0.0], [-0.997500002, 21.0, 22.0, 1.0], [-0.16049999, 23.0, 24.0, 0.0], [-0.113892734, 0.0, 0.0, 0.0], [0.171055749, 0.0, 0.0, 0.0], [-0.286262512, 0.0, 0.0, 0.0], [0.0577420145, 0.0, 0.0, 0.0], [0.111681946, 0.0, 0.0, 0.0], [-0.00723544601, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 16, 4, 9, 10, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_222(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 1.0], [0.576499999, 3.0, 4.0, 2.0], [-0.597499967, 5.0, 6.0, 1.0], [-0.236499995, 7.0, 8.0, 0.0], [-0.862499952, 9.0, 10.0, 4.0], [-0.60650003, 11.0, 12.0, 1.0], [-0.560500026, 13.0, 14.0, 1.0], [-0.281499982, 15.0, 16.0, 0.0], [0.559499979, 17.0, 18.0, 2.0], [-0.706499994, 19.0, 20.0, 1.0], [0.625499964, 21.0, 22.0, 2.0], [-0.212500006, 23.0, 24.0, 0.0], [-0.282576203, 0.0, 0.0, 0.0], [-0.89349997, 25.0, 26.0, 4.0], [-0.916499972, 27.0, 28.0, 4.0], [-0.323500007, 29.0, 30.0, 0.0], [-0.996500015, 31.0, 32.0, 3.0], [-0.228500009, 33.0, 34.0, 0.0], [-0.283735871, 0.0, 0.0, 0.0], [-0.716500044, 35.0, 36.0, 1.0], [0.274323404, 0.0, 0.0, 0.0], [0.116762586, 0.0, 0.0, 0.0], [0.707000017, 37.0, 38.0, 2.0], [-0.933500051, 39.0, 40.0, 4.0], [-0.119499996, 41.0, 42.0, 0.0], [-0.95449996, 43.0, 44.0, 4.0], [0.729499996, 45.0, 46.0, 2.0], [-0.185470447, 0.0, 0.0, 0.0], [-0.526499987, 47.0, 48.0, 1.0], [0.0468229279, 0.0, 0.0, 0.0], [-0.170642659, 0.0, 0.0, 0.0], [-0.0264159888, 0.0, 0.0, 0.0], [0.231544256, 0.0, 0.0, 0.0], [-0.191986129, 0.0, 0.0, 0.0], [0.000120352677, 0.0, 0.0, 0.0], [0.0999294594, 0.0, 0.0, 0.0], [-0.160141557, 0.0, 0.0, 0.0], [-0.22832197, 0.0, 0.0, 0.0], [0.0626351535, 0.0, 0.0, 0.0], [-0.294279486, 0.0, 0.0, 0.0], [0.0131513281, 0.0, 0.0, 0.0], [0.189035401, 0.0, 0.0, 0.0], [-0.124067448, 0.0, 0.0, 0.0], [0.181365162, 0.0, 0.0, 0.0], [-0.183589965, 0.0, 0.0, 0.0], [0.285542578, 0.0, 0.0, 0.0], [-0.00417799363, 0.0, 0.0, 0.0], [-0.137041748, 0.0, 0.0, 0.0], [0.0386531763, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 18, 35, 36, 20, 21, 37, 38, 39, 40, 41, 42, 12, 43, 44, 45, 46, 27, 47, 48])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 4, 9, 19, 10, 22, 2, 5, 11, 23, 24, 6, 13, 25, 26, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_223(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.752499998, 1.0, 2.0, 1.0], [-0.905499995, 3.0, 4.0, 3.0], [-0.74150002, 5.0, 6.0, 1.0], [-0.228500009, 7.0, 8.0, 0.0], [-0.257725865, 0.0, 0.0, 0.0], [-0.212000012, 9.0, 10.0, 0.0], [-0.734500051, 11.0, 12.0, 1.0], [-0.234499991, 13.0, 14.0, 0.0], [-0.17750001, 15.0, 16.0, 0.0], [0.286375761, 0.0, 0.0, 0.0], [-0.0648101717, 0.0, 0.0, 0.0], [-0.221000001, 17.0, 18.0, 0.0], [-0.718500018, 19.0, 20.0, 1.0], [-0.946500003, 21.0, 22.0, 4.0], [-0.993999958, 23.0, 24.0, 3.0], [-0.965499997, 25.0, 26.0, 4.0], [-0.961500049, 27.0, 28.0, 4.0], [-0.966500044, 29.0, 30.0, 4.0], [-0.993000031, 31.0, 32.0, 3.0], [0.530499995, 33.0, 34.0, 2.0], [-0.716500044, 35.0, 36.0, 1.0], [0.0953090787, 0.0, 0.0, 0.0], [-0.0814981759, 0.0, 0.0, 0.0], [0.050172437, 0.0, 0.0, 0.0], [0.376131237, 0.0, 0.0, 0.0], [-0.226790458, 0.0, 0.0, 0.0], [-0.00867699366, 0.0, 0.0, 0.0], [0.158770964, 0.0, 0.0, 0.0], [-0.124883547, 0.0, 0.0, 0.0], [-0.054066129, 0.0, 0.0, 0.0], [-0.319810897, 0.0, 0.0, 0.0], [-0.0507492535, 0.0, 0.0, 0.0], [0.114021532, 0.0, 0.0, 0.0], [-0.070174627, 0.0, 0.0, 0.0], [0.260616511, 0.0, 0.0, 0.0], [-0.220571294, 0.0, 0.0, 0.0], [0.00464527123, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 27, 28, 4, 9, 10, 29, 30, 31, 32, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_224(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.514999986, 3.0, 4.0, 1.0], [-0.49150002, 5.0, 6.0, 1.0], [-0.999500036, 7.0, 8.0, 3.0], [-0.234202623, 0.0, 0.0, 0.0], [0.221311837, 0.0, 0.0, 0.0], [-0.484499991, 9.0, 10.0, 1.0], [-0.16049999, 11.0, 12.0, 0.0], [-0.928499997, 13.0, 14.0, 3.0], [-0.863000035, 15.0, 16.0, 4.0], [-0.4745, 17.0, 18.0, 1.0], [-0.248231351, 0.0, 0.0, 0.0], [0.0408367738, 0.0, 0.0, 0.0], [-0.965499997, 19.0, 20.0, 3.0], [-0.201499999, 21.0, 22.0, 0.0], [-0.240939632, 0.0, 0.0, 0.0], [-0.042841889, 0.0, 0.0, 0.0], [0.243249595, 0.0, 0.0, 0.0], [-0.995499969, 23.0, 24.0, 3.0], [0.0122569315, 0.0, 0.0, 0.0], [-0.134465933, 0.0, 0.0, 0.0], [-0.0785907805, 0.0, 0.0, 0.0], [0.155295223, 0.0, 0.0, 0.0], [0.149860471, 0.0, 0.0, 0.0], [-0.0324972682, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 19, 20, 21, 22, 4, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 8, 13, 14, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_225(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.654500008, 1.0, 2.0, 2.0], [-0.770500004, 3.0, 4.0, 2.0], [-0.51699996, 5.0, 6.0, 2.0], [-0.795000017, 7.0, 8.0, 2.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.12650001, 11.0, 12.0, 0.0], [-0.259499997, 13.0, 14.0, 0.0], [-0.996500015, 15.0, 16.0, 1.0], [0.0296999998, 17.0, 18.0, 0.0], [-0.0240349993, 19.0, 20.0, 0.0], [0.00753000006, 21.0, 22.0, 0.0], [-0.0351789147, 0.0, 0.0, 0.0], [-0.0337999985, 23.0, 24.0, 0.0], [0.139378309, 0.0, 0.0, 0.0], [-0.0164499991, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 3.0], [-0.0684500039, 29.0, 30.0, 0.0], [0.305714846, 0.0, 0.0, 0.0], [-0.0498658977, 0.0, 0.0, 0.0], [-0.0855499953, 31.0, 32.0, 0.0], [-0.177210525, 0.0, 0.0, 0.0], [-0.73150003, 33.0, 34.0, 2.0], [-0.73150003, 35.0, 36.0, 2.0], [0.190019026, 0.0, 0.0, 0.0], [-0.613499999, 37.0, 38.0, 2.0], [-0.178024381, 0.0, 0.0, 0.0], [0.0015144957, 0.0, 0.0, 0.0], [-0.00171709189, 0.0, 0.0, 0.0], [-0.130258381, 0.0, 0.0, 0.0], [-0.0399762355, 0.0, 0.0, 0.0], [0.21355921, 0.0, 0.0, 0.0], [-0.0117134349, 0.0, 0.0, 0.0], [0.320611686, 0.0, 0.0, 0.0], [-0.121373303, 0.0, 0.0, 0.0], [-0.299832672, 0.0, 0.0, 0.0], [-0.0213810131, 0.0, 0.0, 0.0], [0.166453287, 0.0, 0.0, 0.0], [-0.0608199649, 0.0, 0.0, 0.0], [0.200933337, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 18, 31, 32, 20, 33, 34, 35, 36, 11, 23, 37, 38, 13, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 19, 10, 21, 22, 2, 5, 12, 24, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_226(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.456, 1.0, 2.0, 2.0], [-0.51699996, 3.0, 4.0, 2.0], [-0.0527999997, 5.0, 6.0, 0.0], [-0.581499994, 7.0, 8.0, 2.0], [0.133614242, 0.0, 0.0, 0.0], [-0.148515746, 0.0, 0.0, 0.0], [0.0157151073, 0.0, 0.0, 0.0], [-0.601000011, 9.0, 10.0, 2.0], [-0.15031594, 0.0, 0.0, 0.0], [-0.613499999, 11.0, 12.0, 2.0], [0.197579876, 0.0, 0.0, 0.0], [0.00314831873, 0.0, 0.0, 0.0], [-0.181500629, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_227(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.265500009, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.198485851, 0.0, 0.0, 0.0], [0.345069706, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.98150003, 11.0, 12.0, 1.0], [0.210319802, 0.0, 0.0, 0.0], [0.5255, 13.0, 14.0, 0.0], [0.531499982, 15.0, 16.0, 0.0], [0.228500009, 17.0, 18.0, 0.0], [-0.165669605, 0.0, 0.0, 0.0], [0.513000011, 19.0, 20.0, 0.0], [0.588, 21.0, 22.0, 0.0], [0.428499997, 23.0, 24.0, 0.0], [0.57949996, 25.0, 26.0, 0.0], [-0.00331841968, 0.0, 0.0, 0.0], [-0.158775985, 0.0, 0.0, 0.0], [-0.00716766343, 0.0, 0.0, 0.0], [0.256299794, 0.0, 0.0, 0.0], [-0.117648147, 0.0, 0.0, 0.0], [0.076823242, 0.0, 0.0, 0.0], [0.111885123, 0.0, 0.0, 0.0], [-0.0934028551, 0.0, 0.0, 0.0], [0.307775348, 0.0, 0.0, 0.0], [0.0230809152, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 21, 22, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_228(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.449499995, 1.0, 2.0, 1.0], [-0.874500036, 3.0, 4.0, 3.0], [-0.357500017, 5.0, 6.0, 1.0], [-0.931499958, 7.0, 8.0, 3.0], [-0.938500047, 9.0, 10.0, 4.0], [0.641499996, 11.0, 12.0, 2.0], [0.0484686308, 0.0, 0.0, 0.0], [-0.949499965, 13.0, 14.0, 3.0], [-0.937999964, 15.0, 16.0, 4.0], [-0.067618221, 0.0, 0.0, 0.0], [-0.54400003, 17.0, 18.0, 1.0], [-0.0168256778, 0.0, 0.0, 0.0], [-0.208216071, 0.0, 0.0, 0.0], [-0.95449996, 19.0, 20.0, 3.0], [0.517499983, 21.0, 22.0, 2.0], [-0.961500049, 23.0, 24.0, 4.0], [0.594500005, 25.0, 26.0, 2.0], [-0.647500038, 27.0, 28.0, 1.0], [0.21779488, 0.0, 0.0, 0.0], [0.00503174588, 0.0, 0.0, 0.0], [-0.185233057, 0.0, 0.0, 0.0], [0.210994765, 0.0, 0.0, 0.0], [-0.0030939749, 0.0, 0.0, 0.0], [-0.0387746133, 0.0, 0.0, 0.0], [0.1992127, 0.0, 0.0, 0.0], [-0.0599980019, 0.0, 0.0, 0.0], [-0.297673404, 0.0, 0.0, 0.0], [0.145991221, 0.0, 0.0, 0.0], [-0.0878636688, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 9, 27, 28, 18, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 10, 17, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_229(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.828500032, 1.0, 2.0, 1.0], [-0.99849999, 3.0, 4.0, 3.0], [-0.374500006, 5.0, 6.0, 0.0], [-0.862499952, 7.0, 8.0, 1.0], [-0.963500023, 9.0, 10.0, 4.0], [0.148975626, 0.0, 0.0, 0.0], [-0.352499992, 11.0, 12.0, 0.0], [-0.0757619515, 0.0, 0.0, 0.0], [0.107779808, 0.0, 0.0, 0.0], [-0.162499994, 13.0, 14.0, 0.0], [0.516000032, 15.0, 16.0, 2.0], [-0.911499977, 17.0, 18.0, 4.0], [-0.315500021, 19.0, 20.0, 0.0], [-0.0701905712, 0.0, 0.0, 0.0], [0.0213307366, 0.0, 0.0, 0.0], [-0.240200579, 0.0, 0.0, 0.0], [-0.0288758222, 0.0, 0.0, 0.0], [-0.206328958, 0.0, 0.0, 0.0], [0.0692896917, 0.0, 0.0, 0.0], [-0.865499973, 21.0, 22.0, 4.0], [-0.9745, 23.0, 24.0, 3.0], [0.133803695, 0.0, 0.0, 0.0], [-0.1104123, 0.0, 0.0, 0.0], [0.0103373416, 0.0, 0.0, 0.0], [-0.0457054526, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 13, 14, 15, 16, 5, 17, 18, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 4, 9, 10, 2, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_230(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.371500015, 3.0, 4.0, 1.0], [0.119177513, 0.0, 0.0, 0.0], [-0.410000026, 5.0, 6.0, 1.0], [-0.960999966, 7.0, 8.0, 3.0], [-0.874500036, 9.0, 10.0, 3.0], [-0.281499982, 11.0, 12.0, 0.0], [-0.00933082495, 0.0, 0.0, 0.0], [-0.176988855, 0.0, 0.0, 0.0], [-0.911499977, 13.0, 14.0, 3.0], [-0.54400003, 15.0, 16.0, 1.0], [-0.0538742766, 0.0, 0.0, 0.0], [-0.182000011, 17.0, 18.0, 0.0], [-0.00491428701, 0.0, 0.0, 0.0], [0.162956968, 0.0, 0.0, 0.0], [-0.0139150498, 0.0, 0.0, 0.0], [-0.185641304, 0.0, 0.0, 0.0], [0.261647105, 0.0, 0.0, 0.0], [0.0214327332, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 17, 18, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_231(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.00163000007, 3.0, 4.0, 0.0], [-0.0996329263, 0.0, 0.0, 0.0], [-0.00413500005, 5.0, 6.0, 0.0], [-0.00132499996, 7.0, 8.0, 0.0], [-0.00496499985, 9.0, 10.0, 0.0], [-0.00209000008, 11.0, 12.0, 0.0], [-0.342626274, 0.0, 0.0, 0.0], [0.00588999968, 13.0, 14.0, 0.0], [-0.0307, 15.0, 16.0, 0.0], [-0.20748736, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.0313982181, 0.0, 0.0, 0.0], [0.000549999997, 19.0, 20.0, 0.0], [0.00758500025, 21.0, 22.0, 0.0], [-0.00545837451, 0.0, 0.0, 0.0], [0.0820331424, 0.0, 0.0, 0.0], [0.374038517, 0.0, 0.0, 0.0], [0.00740231108, 0.0, 0.0, 0.0], [0.1258443, 0.0, 0.0, 0.0], [-0.179458871, 0.0, 0.0, 0.0], [0.219936788, 0.0, 0.0, 0.0], [-0.00224986742, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 17, 18, 12, 7, 19, 20, 21, 22, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 11, 4, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_232(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.1505, 1.0, 2.0, 0.0], [-0.153499991, 3.0, 4.0, 0.0], [-0.144499987, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [0.385159642, 0.0, 0.0, 0.0], [-0.230600864, 0.0, 0.0, 0.0], [-0.142500013, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.885499954, 13.0, 14.0, 2.0], [0.144389033, 0.0, 0.0, 0.0], [-0.129500002, 15.0, 16.0, 0.0], [-0.162, 17.0, 18.0, 0.0], [-0.99849999, 19.0, 20.0, 1.0], [-0.196999997, 21.0, 22.0, 0.0], [-0.188499987, 23.0, 24.0, 0.0], [-0.130499989, 25.0, 26.0, 0.0], [-0.127499998, 27.0, 28.0, 0.0], [0.0191133078, 0.0, 0.0, 0.0], [-0.109619178, 0.0, 0.0, 0.0], [0.285365134, 0.0, 0.0, 0.0], [-0.0252803285, 0.0, 0.0, 0.0], [-0.0285443775, 0.0, 0.0, 0.0], [-0.41704455, 0.0, 0.0, 0.0], [-0.0494479463, 0.0, 0.0, 0.0], [0.250482887, 0.0, 0.0, 0.0], [-0.0175756756, 0.0, 0.0, 0.0], [-0.267363608, 0.0, 0.0, 0.0], [0.340789825, 0.0, 0.0, 0.0], [-0.00489149755, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 5, 9, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_233(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.0748500004, 1.0, 2.0, 0.0], [-0.0802500024, 3.0, 4.0, 0.0], [-0.0709999949, 5.0, 6.0, 0.0], [-0.1505, 7.0, 8.0, 0.0], [-0.275415152, 0.0, 0.0, 0.0], [0.322891891, 0.0, 0.0, 0.0], [-0.032850001, 9.0, 10.0, 0.0], [-0.153499991, 11.0, 12.0, 0.0], [0.164910436, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.0123999994, 15.0, 16.0, 0.0], [-0.155499995, 17.0, 18.0, 0.0], [-0.263504982, 0.0, 0.0, 0.0], [-0.259299099, 0.0, 0.0, 0.0], [-0.000810803613, 0.0, 0.0, 0.0], [0.266909778, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 4.0], [-0.0165838581, 0.0, 0.0, 0.0], [0.119736649, 0.0, 0.0, 0.0], [-0.003039893, 0.0, 0.0, 0.0], [0.207992837, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_234(xs):
    #Predicts Class 0
    function_dict = np.array([[0.50150001, 1.0, 2.0, 2.0], [-0.914999962, 3.0, 4.0, 4.0], [-0.538499951, 5.0, 6.0, 1.0], [-0.797500014, 7.0, 8.0, 1.0], [-0.805500031, 9.0, 10.0, 1.0], [-0.730499983, 11.0, 12.0, 4.0], [-0.879500031, 13.0, 14.0, 4.0], [0.443499982, 15.0, 16.0, 2.0], [-0.225499988, 17.0, 18.0, 0.0], [-0.199339122, 0.0, 0.0, 0.0], [-0.682500005, 19.0, 20.0, 1.0], [-0.908499956, 21.0, 22.0, 4.0], [0.769000053, 23.0, 24.0, 2.0], [0.711500049, 25.0, 26.0, 2.0], [-0.784500003, 27.0, 28.0, 4.0], [-0.107500002, 29.0, 30.0, 0.0], [-0.210500002, 31.0, 32.0, 0.0], [-0.237000003, 33.0, 34.0, 0.0], [-0.992499948, 35.0, 36.0, 3.0], [0.274022937, 0.0, 0.0, 0.0], [0.00298123597, 0.0, 0.0, 0.0], [-0.999500036, 37.0, 38.0, 3.0], [0.655499995, 39.0, 40.0, 2.0], [0.286356807, 0.0, 0.0, 0.0], [-0.0222258847, 0.0, 0.0, 0.0], [-0.256089419, 0.0, 0.0, 0.0], [-0.0394382849, 0.0, 0.0, 0.0], [0.733500004, 41.0, 42.0, 2.0], [-0.674000025, 43.0, 44.0, 4.0], [-0.0857571512, 0.0, 0.0, 0.0], [0.110948659, 0.0, 0.0, 0.0], [0.28234297, 0.0, 0.0, 0.0], [-0.0189016387, 0.0, 0.0, 0.0], [-0.067792654, 0.0, 0.0, 0.0], [-0.374850422, 0.0, 0.0, 0.0], [0.0694620311, 0.0, 0.0, 0.0], [-0.142090634, 0.0, 0.0, 0.0], [-0.158027798, 0.0, 0.0, 0.0], [0.0665085465, 0.0, 0.0, 0.0], [-0.100245155, 0.0, 0.0, 0.0], [0.069938086, 0.0, 0.0, 0.0], [0.233227357, 0.0, 0.0, 0.0], [-0.103301585, 0.0, 0.0, 0.0], [-0.167523444, 0.0, 0.0, 0.0], [-0.0179228391, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 35, 36, 9, 19, 20, 37, 38, 39, 40, 23, 24, 25, 26, 41, 42, 43, 44])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 10, 2, 5, 11, 21, 22, 12, 6, 13, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_235(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.874000013, 1.0, 2.0, 1.0], [-0.126738161, 0.0, 0.0, 0.0], [0.50150001, 3.0, 4.0, 2.0], [0.489499986, 5.0, 6.0, 2.0], [-0.722499967, 7.0, 8.0, 1.0], [-0.791499972, 9.0, 10.0, 1.0], [-0.997500002, 11.0, 12.0, 3.0], [-0.141499996, 13.0, 14.0, 0.0], [-0.715499997, 15.0, 16.0, 1.0], [-0.797500014, 17.0, 18.0, 1.0], [-0.913499951, 19.0, 20.0, 4.0], [-0.0198334735, 0.0, 0.0, 0.0], [0.228725702, 0.0, 0.0, 0.0], [-0.211499989, 21.0, 22.0, 0.0], [0.138321593, 0.0, 0.0, 0.0], [0.230823398, 0.0, 0.0, 0.0], [-0.895500004, 23.0, 24.0, 3.0], [0.0141643882, 0.0, 0.0, 0.0], [0.217053458, 0.0, 0.0, 0.0], [0.0102433069, 0.0, 0.0, 0.0], [-0.22040312, 0.0, 0.0, 0.0], [-0.0514457077, 0.0, 0.0, 0.0], [-0.299739897, 0.0, 0.0, 0.0], [-0.0163723398, 0.0, 0.0, 0.0], [0.133697301, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 11, 12, 21, 22, 14, 15, 23, 24])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 4, 7, 13, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_236(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.526499987, 3.0, 4.0, 1.0], [-0.242500007, 5.0, 6.0, 0.0], [-0.25849998, 7.0, 8.0, 0.0], [0.684499979, 9.0, 10.0, 2.0], [-0.257499993, 11.0, 12.0, 0.0], [-0.960500002, 13.0, 14.0, 4.0], [-0.990499973, 15.0, 16.0, 3.0], [-0.179500014, 17.0, 18.0, 0.0], [-0.209704399, 0.0, 0.0, 0.0], [0.0365996882, 0.0, 0.0, 0.0], [-0.436500013, 19.0, 20.0, 1.0], [0.717499971, 21.0, 22.0, 2.0], [-0.0959358886, 0.0, 0.0, 0.0], [-0.99849999, 23.0, 24.0, 3.0], [0.546000004, 25.0, 26.0, 2.0], [-0.217840999, 0.0, 0.0, 0.0], [-0.186500013, 27.0, 28.0, 0.0], [-0.174499989, 29.0, 30.0, 0.0], [-0.315500021, 31.0, 32.0, 0.0], [0.652500033, 33.0, 34.0, 2.0], [-0.0800615102, 0.0, 0.0, 0.0], [-0.246106401, 0.0, 0.0, 0.0], [-0.035992302, 0.0, 0.0, 0.0], [-0.738499999, 35.0, 36.0, 4.0], [-0.0660848171, 0.0, 0.0, 0.0], [0.117300138, 0.0, 0.0, 0.0], [0.00693014124, 0.0, 0.0, 0.0], [0.22605741, 0.0, 0.0, 0.0], [-0.270563841, 0.0, 0.0, 0.0], [-0.0145402914, 0.0, 0.0, 0.0], [0.00683607813, 0.0, 0.0, 0.0], [0.249033064, 0.0, 0.0, 0.0], [0.0774300843, 0.0, 0.0, 0.0], [-0.137777403, 0.0, 0.0, 0.0], [0.262854844, 0.0, 0.0, 0.0], [-0.0357653946, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 27, 28, 29, 30, 9, 10, 31, 32, 33, 34, 21, 22, 13, 23, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 18, 4, 2, 5, 11, 19, 20, 12, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_237(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.5625, 3.0, 4.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [0.561499953, 7.0, 8.0, 0.0], [-0.198441029, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.621500015, 11.0, 12.0, 0.0], [0.466499984, 13.0, 14.0, 0.0], [0.221601844, 0.0, 0.0, 0.0], [0.615499973, 15.0, 16.0, 0.0], [0.182752103, 0.0, 0.0, 0.0], [-0.00366146187, 0.0, 0.0, 0.0], [-0.0114608444, 0.0, 0.0, 0.0], [0.463499993, 17.0, 18.0, 0.0], [0.478500009, 19.0, 20.0, 0.0], [-0.222399637, 0.0, 0.0, 0.0], [0.236394376, 0.0, 0.0, 0.0], [-0.00137468835, 0.0, 0.0, 0.0], [0.199378282, 0.0, 0.0, 0.0], [-0.344770104, 0.0, 0.0, 0.0], [-0.00669697812, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 15, 16, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_238(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.273499995, 1.0, 2.0, 0.0], [-0.278500021, 3.0, 4.0, 0.0], [-0.210500002, 5.0, 6.0, 0.0], [-0.282499999, 7.0, 8.0, 0.0], [-0.303806186, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.2095, 11.0, 12.0, 0.0], [-0.996500015, 13.0, 14.0, 1.0], [0.222354546, 0.0, 0.0, 0.0], [0.283453792, 0.0, 0.0, 0.0], [-0.249500006, 15.0, 16.0, 0.0], [-0.230520651, 0.0, 0.0, 0.0], [-0.205500007, 17.0, 18.0, 0.0], [-0.394999981, 19.0, 20.0, 0.0], [0.119415842, 0.0, 0.0, 0.0], [-0.0762873888, 0.0, 0.0, 0.0], [0.160655946, 0.0, 0.0, 0.0], [0.174522012, 0.0, 0.0, 0.0], [-0.185499996, 21.0, 22.0, 0.0], [0.0161364134, 0.0, 0.0, 0.0], [-0.0946380794, 0.0, 0.0, 0.0], [-0.0830791369, 0.0, 0.0, 0.0], [0.00508165034, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 15, 16, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 10, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_239(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.401000023, 1.0, 2.0, 0.0], [-0.420000017, 3.0, 4.0, 0.0], [-0.394500017, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [-0.412999988, 9.0, 10.0, 0.0], [-0.255375236, 0.0, 0.0, 0.0], [-0.382499993, 11.0, 12.0, 0.0], [-0.0951208249, 0.0, 0.0, 0.0], [-0.46450001, 13.0, 14.0, 0.0], [0.213913575, 0.0, 0.0, 0.0], [0.0385220833, 0.0, 0.0, 0.0], [0.165158927, 0.0, 0.0, 0.0], [-0.080400005, 15.0, 16.0, 0.0], [0.201662987, 0.0, 0.0, 0.0], [-0.0655411556, 0.0, 0.0, 0.0], [-0.149500012, 17.0, 18.0, 0.0], [-0.0742499977, 19.0, 20.0, 0.0], [-0.0244391933, 0.0, 0.0, 0.0], [-0.281156987, 0.0, 0.0, 0.0], [0.161032945, 0.0, 0.0, 0.0], [0.00152277213, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 9, 10, 5, 11, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 8, 4, 2, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_240(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.918500006, 1.0, 2.0, 3.0], [-0.931499958, 3.0, 4.0, 3.0], [-0.911499977, 5.0, 6.0, 3.0], [-0.281499982, 7.0, 8.0, 0.0], [0.592499971, 9.0, 10.0, 2.0], [0.208466366, 0.0, 0.0, 0.0], [-0.73300004, 11.0, 12.0, 1.0], [0.646499991, 13.0, 14.0, 2.0], [-0.24149999, 15.0, 16.0, 0.0], [-0.066589348, 0.0, 0.0, 0.0], [-0.27612263, 0.0, 0.0, 0.0], [0.161727011, 0.0, 0.0, 0.0], [-0.227499992, 17.0, 18.0, 0.0], [-0.827499986, 19.0, 20.0, 1.0], [-0.995499969, 21.0, 22.0, 3.0], [-0.965499997, 23.0, 24.0, 4.0], [0.449499995, 25.0, 26.0, 2.0], [-0.167220995, 0.0, 0.0, 0.0], [-0.196500003, 27.0, 28.0, 0.0], [0.0285040904, 0.0, 0.0, 0.0], [-0.168673098, 0.0, 0.0, 0.0], [0.15276885, 0.0, 0.0, 0.0], [-0.0587070584, 0.0, 0.0, 0.0], [-0.11728359, 0.0, 0.0, 0.0], [0.136514992, 0.0, 0.0, 0.0], [0.0477937981, 0.0, 0.0, 0.0], [-0.0306562204, 0.0, 0.0, 0.0], [0.146628648, 0.0, 0.0, 0.0], [-0.0519751944, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 9, 10, 5, 11, 17, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 4, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_241(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.684499979, 1.0, 2.0, 1.0], [-0.877499998, 3.0, 4.0, 4.0], [0.468500018, 5.0, 6.0, 2.0], [-0.698500037, 7.0, 8.0, 1.0], [-0.305500001, 9.0, 10.0, 0.0], [-0.194499999, 11.0, 12.0, 0.0], [0.488499999, 13.0, 14.0, 2.0], [-0.281499982, 15.0, 16.0, 0.0], [-0.994500041, 17.0, 18.0, 3.0], [-0.0926028639, 0.0, 0.0, 0.0], [-0.739499986, 19.0, 20.0, 1.0], [0.240609631, 0.0, 0.0, 0.0], [0.0386091955, 0.0, 0.0, 0.0], [-0.246112049, 0.0, 0.0, 0.0], [-0.912500024, 21.0, 22.0, 4.0], [0.573500037, 23.0, 24.0, 2.0], [-0.270500004, 25.0, 26.0, 0.0], [-0.0300027896, 0.0, 0.0, 0.0], [-0.240859196, 0.0, 0.0, 0.0], [0.0205353238, 0.0, 0.0, 0.0], [0.238293499, 0.0, 0.0, 0.0], [0.539499998, 27.0, 28.0, 2.0], [-0.613499999, 29.0, 30.0, 1.0], [0.141367599, 0.0, 0.0, 0.0], [-0.0505673327, 0.0, 0.0, 0.0], [-0.188544124, 0.0, 0.0, 0.0], [-0.0205543302, 0.0, 0.0, 0.0], [0.169356629, 0.0, 0.0, 0.0], [0.0205625743, 0.0, 0.0, 0.0], [0.0183444079, 0.0, 0.0, 0.0], [-0.112417325, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 18, 9, 19, 20, 11, 12, 13, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 10, 2, 5, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_242(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.986500025, 3.0, 4.0, 4.0], [0.107751593, 0.0, 0.0, 0.0], [-0.125802025, 0.0, 0.0, 0.0], [-0.0688499957, 5.0, 6.0, 0.0], [-0.109499998, 7.0, 8.0, 0.0], [-0.957499981, 9.0, 10.0, 4.0], [-0.12650001, 11.0, 12.0, 0.0], [0.592000008, 13.0, 14.0, 2.0], [-0.00258900016, 0.0, 0.0, 0.0], [-0.15049313, 0.0, 0.0, 0.0], [0.00225610426, 0.0, 0.0, 0.0], [-0.156333968, 0.0, 0.0, 0.0], [0.203497827, 0.0, 0.0, 0.0], [-0.0109110987, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 13, 14, 9, 10, 2])
    branch_indices = np.array([0, 1, 4, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_243(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.136500001, 1.0, 2.0, 0.0], [-0.137499988, 3.0, 4.0, 0.0], [-0.129500002, 5.0, 6.0, 0.0], [-0.140500009, 7.0, 8.0, 0.0], [-0.268713444, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.127499998, 11.0, 12.0, 0.0], [-0.185499996, 13.0, 14.0, 0.0], [-0.138500005, 15.0, 16.0, 0.0], [-0.132499993, 17.0, 18.0, 0.0], [-0.131500006, 19.0, 20.0, 0.0], [-0.292608142, 0.0, 0.0, 0.0], [-0.125499994, 21.0, 22.0, 0.0], [-0.191500008, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [0.0976774469, 0.0, 0.0, 0.0], [-0.0132270185, 0.0, 0.0, 0.0], [-0.134499997, 27.0, 28.0, 0.0], [-0.329045534, 0.0, 0.0, 0.0], [-0.100132525, 0.0, 0.0, 0.0], [0.495960265, 0.0, 0.0, 0.0], [-0.12650001, 29.0, 30.0, 0.0], [-0.111500002, 31.0, 32.0, 0.0], [-0.0228671636, 0.0, 0.0, 0.0], [0.206258893, 0.0, 0.0, 0.0], [-0.191997483, 0.0, 0.0, 0.0], [0.107400931, 0.0, 0.0, 0.0], [0.175650179, 0.0, 0.0, 0.0], [0.0572423823, 0.0, 0.0, 0.0], [0.0226965118, 0.0, 0.0, 0.0], [0.231485412, 0.0, 0.0, 0.0], [-0.0961601064, 0.0, 0.0, 0.0], [0.00412280671, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 16, 4, 27, 28, 18, 19, 20, 11, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 9, 17, 10, 6, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_244(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.1505, 1.0, 2.0, 0.0], [-0.16049999, 3.0, 4.0, 0.0], [-0.144499987, 5.0, 6.0, 0.0], [-0.1655, 7.0, 8.0, 0.0], [-0.153499991, 9.0, 10.0, 0.0], [-0.131640196, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.185499996, 13.0, 14.0, 0.0], [-0.203025073, 0.0, 0.0, 0.0], [-0.155499995, 15.0, 16.0, 0.0], [0.316378057, 0.0, 0.0, 0.0], [0.0192999989, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.191500008, 21.0, 22.0, 0.0], [-0.169499993, 23.0, 24.0, 0.0], [0.273412794, 0.0, 0.0, 0.0], [-0.154500008, 25.0, 26.0, 0.0], [0.0042849998, 27.0, 28.0, 0.0], [0.025150001, 29.0, 30.0, 0.0], [0.0145500004, 31.0, 32.0, 0.0], [-0.13350001, 33.0, 34.0, 0.0], [0.0111711174, 0.0, 0.0, 0.0], [-0.191478297, 0.0, 0.0, 0.0], [0.265043616, 0.0, 0.0, 0.0], [0.0373696722, 0.0, 0.0, 0.0], [-0.180313364, 0.0, 0.0, 0.0], [0.0601519831, 0.0, 0.0, 0.0], [-0.00832816958, 0.0, 0.0, 0.0], [-0.20703721, 0.0, 0.0, 0.0], [0.236574113, 0.0, 0.0, 0.0], [0.00296542211, 0.0, 0.0, 0.0], [0.306412697, 0.0, 0.0, 0.0], [-0.0861485302, 0.0, 0.0, 0.0], [0.286909193, 0.0, 0.0, 0.0], [-0.0610611029, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 25, 26, 10, 5, 27, 28, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 16, 2, 6, 11, 17, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_245(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.822000027, 1.0, 2.0, 2.0], [-0.393000007, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [-0.421000004, 7.0, 8.0, 0.0], [-0.38349998, 9.0, 10.0, 0.0], [-0.25084421, 0.0, 0.0, 0.0], [-0.654500008, 11.0, 12.0, 2.0], [-0.438499987, 13.0, 14.0, 0.0], [-0.401000023, 15.0, 16.0, 0.0], [-0.304220289, 0.0, 0.0, 0.0], [-0.996500015, 17.0, 18.0, 1.0], [-0.0518999994, 19.0, 20.0, 0.0], [0.00518500013, 21.0, 22.0, 0.0], [-0.50999999, 23.0, 24.0, 0.0], [-0.0438038744, 0.0, 0.0, 0.0], [0.174058154, 0.0, 0.0, 0.0], [0.0544172451, 0.0, 0.0, 0.0], [-0.294, 25.0, 26.0, 0.0], [-0.181093097, 0.0, 0.0, 0.0], [0.144955054, 0.0, 0.0, 0.0], [-0.0291905142, 0.0, 0.0, 0.0], [-0.337500006, 27.0, 28.0, 0.0], [-0.996500015, 29.0, 30.0, 1.0], [-0.00814046431, 0.0, 0.0, 0.0], [0.122445524, 0.0, 0.0, 0.0], [0.189527363, 0.0, 0.0, 0.0], [0.00596017251, 0.0, 0.0, 0.0], [0.00301395659, 0.0, 0.0, 0.0], [-0.190941751, 0.0, 0.0, 0.0], [-0.0982504785, 0.0, 0.0, 0.0], [0.116321519, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 9, 25, 26, 18, 5, 19, 20, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 17, 2, 6, 11, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_246(xs):
    #Predicts Class 0
    function_dict = np.array([[0.354499996, 1.0, 2.0, 2.0], [-0.984500051, 3.0, 4.0, 3.0], [-0.782500029, 5.0, 6.0, 1.0], [-0.983500004, 7.0, 8.0, 4.0], [0.311500013, 9.0, 10.0, 2.0], [-0.966500044, 11.0, 12.0, 3.0], [-0.979499996, 13.0, 14.0, 4.0], [-0.163213879, 0.0, 0.0, 0.0], [-0.234499991, 15.0, 16.0, 0.0], [-0.004848185, 0.0, 0.0, 0.0], [-0.246701822, 0.0, 0.0, 0.0], [0.627499998, 17.0, 18.0, 2.0], [0.243975908, 0.0, 0.0, 0.0], [-0.184777781, 0.0, 0.0, 0.0], [-0.975499988, 19.0, 20.0, 4.0], [0.17564775, 0.0, 0.0, 0.0], [0.0295004416, 0.0, 0.0, 0.0], [-0.791499972, 21.0, 22.0, 1.0], [-0.185830131, 0.0, 0.0, 0.0], [0.546500027, 23.0, 24.0, 2.0], [-0.971500039, 25.0, 26.0, 4.0], [0.010339424, 0.0, 0.0, 0.0], [0.245039344, 0.0, 0.0, 0.0], [0.0313265175, 0.0, 0.0, 0.0], [0.213172063, 0.0, 0.0, 0.0], [-0.132771403, 0.0, 0.0, 0.0], [0.00220888969, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 9, 10, 21, 22, 18, 12, 13, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 8, 4, 2, 5, 11, 17, 6, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_247(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.809499979, 1.0, 2.0, 1.0], [-0.940500021, 3.0, 4.0, 4.0], [-0.80250001, 5.0, 6.0, 1.0], [-0.975499988, 7.0, 8.0, 4.0], [-0.837499976, 9.0, 10.0, 1.0], [-0.966500044, 11.0, 12.0, 4.0], [-0.797500014, 13.0, 14.0, 1.0], [-0.985499978, 15.0, 16.0, 4.0], [-0.294499993, 17.0, 18.0, 0.0], [-0.00703294203, 0.0, 0.0, 0.0], [-0.233311191, 0.0, 0.0, 0.0], [-0.101733834, 0.0, 0.0, 0.0], [-0.935000002, 19.0, 20.0, 4.0], [-0.988499999, 21.0, 22.0, 3.0], [0.473500013, 23.0, 24.0, 2.0], [0.0156558771, 0.0, 0.0, 0.0], [-0.155614153, 0.0, 0.0, 0.0], [-0.116277136, 0.0, 0.0, 0.0], [0.44749999, 25.0, 26.0, 2.0], [0.062074542, 0.0, 0.0, 0.0], [0.241034195, 0.0, 0.0, 0.0], [-0.276533425, 0.0, 0.0, 0.0], [0.0901959389, 0.0, 0.0, 0.0], [0.461499989, 27.0, 28.0, 2.0], [0.488499999, 29.0, 30.0, 2.0], [0.0225709025, 0.0, 0.0, 0.0], [0.202059641, 0.0, 0.0, 0.0], [0.00789549388, 0.0, 0.0, 0.0], [0.221483275, 0.0, 0.0, 0.0], [-0.200715393, 0.0, 0.0, 0.0], [0.00579352677, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 25, 26, 9, 10, 11, 19, 20, 21, 22, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 8, 18, 4, 2, 5, 12, 6, 13, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_248(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 1.0], [0.398499995, 3.0, 4.0, 2.0], [-0.75849998, 5.0, 6.0, 1.0], [-0.983500004, 7.0, 8.0, 4.0], [0.453999996, 9.0, 10.0, 2.0], [0.368499994, 11.0, 12.0, 2.0], [-0.743499994, 13.0, 14.0, 1.0], [-0.0269685425, 0.0, 0.0, 0.0], [-0.23702018, 0.0, 0.0, 0.0], [-0.962499976, 15.0, 16.0, 4.0], [-0.128545508, 0.0, 0.0, 0.0], [0.224635705, 0.0, 0.0, 0.0], [0.0486510918, 0.0, 0.0, 0.0], [-0.976500034, 17.0, 18.0, 3.0], [0.557500005, 19.0, 20.0, 2.0], [0.010900991, 0.0, 0.0, 0.0], [0.179920763, 0.0, 0.0, 0.0], [-0.2246968, 0.0, 0.0, 0.0], [0.10649842, 0.0, 0.0, 0.0], [-0.962499976, 21.0, 22.0, 3.0], [0.566499949, 23.0, 24.0, 2.0], [0.082422033, 0.0, 0.0, 0.0], [-0.0791000798, 0.0, 0.0, 0.0], [-0.205270246, 0.0, 0.0, 0.0], [-0.00416305009, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 15, 16, 10, 11, 12, 17, 18, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 4, 9, 2, 5, 6, 13, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_249(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0658500046, 1.0, 2.0, 0.0], [-0.0728500038, 3.0, 4.0, 0.0], [-0.0599500015, 5.0, 6.0, 0.0], [-0.0743499994, 7.0, 8.0, 0.0], [-0.0720499977, 9.0, 10.0, 0.0], [-0.33660695, 0.0, 0.0, 0.0], [-0.0579499975, 11.0, 12.0, 0.0], [-0.0762000009, 13.0, 14.0, 0.0], [-0.30843854, 0.0, 0.0, 0.0], [0.43108058, 0.0, 0.0, 0.0], [-0.0698499978, 15.0, 16.0, 0.0], [0.39560467, 0.0, 0.0, 0.0], [-0.0568500012, 17.0, 18.0, 0.0], [-0.0786499977, 19.0, 20.0, 0.0], [0.229034677, 0.0, 0.0, 0.0], [-0.260393679, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.345571786, 0.0, 0.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [0.00333595532, 0.0, 0.0, 0.0], [-0.281385958, 0.0, 0.0, 0.0], [-0.114621073, 0.0, 0.0, 0.0], [0.598106265, 0.0, 0.0, 0.0], [0.0097804293, 0.0, 0.0, 0.0], [-0.056691952, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 15, 21, 22, 5, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 16, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_250(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.552000046, 5.0, 6.0, 2.0], [-0.99849999, 7.0, 8.0, 1.0], [-0.399500012, 9.0, 10.0, 0.0], [0.00605195202, 0.0, 0.0, 0.0], [-0.157622322, 0.0, 0.0, 0.0], [-0.197550401, 0.0, 0.0, 0.0], [0.0700107291, 0.0, 0.0, 0.0], [-0.412999988, 11.0, 12.0, 0.0], [-0.380499989, 13.0, 14.0, 0.0], [0.0136023071, 0.0, 0.0, 0.0], [-0.407499999, 15.0, 16.0, 0.0], [-0.164688975, 0.0, 0.0, 0.0], [-0.297500014, 17.0, 18.0, 0.0], [0.22190991, 0.0, 0.0, 0.0], [0.0498049296, 0.0, 0.0, 0.0], [0.17314449, 0.0, 0.0, 0.0], [0.00273209345, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 11, 15, 16, 13, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 3, 4, 9, 12, 10, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_251(xs):
    #Predicts Class 5
    function_dict = np.array([[0.203500003, 1.0, 2.0, 0.0], [-0.0123999994, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [-0.032850001, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 3.0], [-0.923500001, 11.0, 12.0, 2.0], [0.527500033, 13.0, 14.0, 0.0], [-0.0742499977, 15.0, 16.0, 0.0], [0.181752592, 0.0, 0.0, 0.0], [0.198500007, 17.0, 18.0, 0.0], [0.0933386981, 0.0, 0.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.541999996, 21.0, 22.0, 0.0], [-0.747500002, 23.0, 24.0, 2.0], [0.588, 25.0, 26.0, 0.0], [-0.0751000047, 27.0, 28.0, 0.0], [-0.999500036, 29.0, 30.0, 1.0], [-0.256624907, 0.0, 0.0, 0.0], [0.202500001, 31.0, 32.0, 0.0], [0.61650002, 33.0, 34.0, 0.0], [0.531000018, 35.0, 36.0, 0.0], [-0.282244146, 0.0, 0.0, 0.0], [0.0451908968, 0.0, 0.0, 0.0], [0.437000006, 37.0, 38.0, 0.0], [-0.639999986, 39.0, 40.0, 2.0], [-0.373233587, 0.0, 0.0, 0.0], [0.259896964, 0.0, 0.0, 0.0], [-0.0207793172, 0.0, 0.0, 0.0], [0.235176906, 0.0, 0.0, 0.0], [-0.251015842, 0.0, 0.0, 0.0], [-0.0107204299, 0.0, 0.0, 0.0], [0.0438908935, 0.0, 0.0, 0.0], [-0.0711555779, 0.0, 0.0, 0.0], [-0.00017584351, 0.0, 0.0, 0.0], [-0.15742895, 0.0, 0.0, 0.0], [0.0547628216, 0.0, 0.0, 0.0], [0.308624893, 0.0, 0.0, 0.0], [0.0839059278, 0.0, 0.0, 0.0], [0.280396909, 0.0, 0.0, 0.0], [-0.202053115, 0.0, 0.0, 0.0], [0.103505105, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 8, 17, 31, 32, 10, 33, 34, 35, 36, 21, 22, 37, 38, 39, 40, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 18, 2, 5, 11, 19, 20, 12, 6, 13, 23, 24, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_252(xs):
    #Predicts Class 0
    function_dict = np.array([[0.412499994, 1.0, 2.0, 2.0], [-0.950500011, 3.0, 4.0, 3.0], [-0.767500043, 5.0, 6.0, 1.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.781000018, 9.0, 10.0, 1.0], [-0.784500003, 11.0, 12.0, 1.0], [-0.764500022, 13.0, 14.0, 1.0], [-0.980499983, 15.0, 16.0, 4.0], [-0.844500005, 17.0, 18.0, 1.0], [0.117245972, 0.0, 0.0, 0.0], [-0.0174945612, 0.0, 0.0, 0.0], [-0.98150003, 19.0, 20.0, 3.0], [-0.971500039, 21.0, 22.0, 3.0], [-0.165621072, 0.0, 0.0, 0.0], [-0.759500027, 23.0, 24.0, 1.0], [-0.124358244, 0.0, 0.0, 0.0], [0.362500012, 25.0, 26.0, 2.0], [0.0915863737, 0.0, 0.0, 0.0], [-0.239499986, 27.0, 28.0, 0.0], [-0.137999997, 29.0, 30.0, 0.0], [-0.817499995, 31.0, 32.0, 1.0], [-0.971500039, 33.0, 34.0, 4.0], [-0.0574086159, 0.0, 0.0, 0.0], [0.170342952, 0.0, 0.0, 0.0], [-0.756500006, 35.0, 36.0, 1.0], [0.1502285, 0.0, 0.0, 0.0], [0.00754041411, 0.0, 0.0, 0.0], [-0.0586619154, 0.0, 0.0, 0.0], [-0.207856476, 0.0, 0.0, 0.0], [-0.0454576463, 0.0, 0.0, 0.0], [0.167327911, 0.0, 0.0, 0.0], [-0.011540357, 0.0, 0.0, 0.0], [0.229448602, 0.0, 0.0, 0.0], [0.0295745973, 0.0, 0.0, 0.0], [0.299719393, 0.0, 0.0, 0.0], [-0.162591696, 0.0, 0.0, 0.0], [-0.0014296805, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 25, 26, 17, 27, 28, 9, 10, 29, 30, 31, 32, 33, 34, 22, 13, 23, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 18, 4, 2, 5, 11, 19, 20, 12, 21, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_253(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.365500003, 1.0, 2.0, 0.0], [-0.476999998, 3.0, 4.0, 1.0], [-0.334500015, 5.0, 6.0, 0.0], [0.18883644, 0.0, 0.0, 0.0], [-0.0407160223, 0.0, 0.0, 0.0], [-0.976000011, 7.0, 8.0, 3.0], [-0.843500018, 9.0, 10.0, 4.0], [-0.931499958, 11.0, 12.0, 4.0], [0.0656253397, 0.0, 0.0, 0.0], [-0.316500008, 13.0, 14.0, 0.0], [-0.298500001, 15.0, 16.0, 0.0], [0.0487503, 0.0, 0.0, 0.0], [-0.270628333, 0.0, 0.0, 0.0], [-0.929999948, 17.0, 18.0, 4.0], [-0.75849998, 19.0, 20.0, 1.0], [-0.0204064418, 0.0, 0.0, 0.0], [-0.185346425, 0.0, 0.0, 0.0], [0.0194818694, 0.0, 0.0, 0.0], [0.218901128, 0.0, 0.0, 0.0], [-0.0305884108, 0.0, 0.0, 0.0], [0.0219071135, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 8, 17, 18, 19, 20, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 7, 6, 9, 13, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_254(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.977499962, 1.0, 2.0, 4.0], [-0.219500005, 3.0, 4.0, 0.0], [-0.9745, 5.0, 6.0, 4.0], [-0.253960043, 0.0, 0.0, 0.0], [-0.770500004, 7.0, 8.0, 1.0], [-0.754999995, 9.0, 10.0, 1.0], [-0.700500011, 11.0, 12.0, 1.0], [-0.092684634, 0.0, 0.0, 0.0], [-0.703999996, 13.0, 14.0, 1.0], [0.182647496, 0.0, 0.0, 0.0], [0.0365221538, 0.0, 0.0, 0.0], [-0.713500023, 15.0, 16.0, 1.0], [0.55400002, 17.0, 18.0, 2.0], [-0.986500025, 19.0, 20.0, 3.0], [-0.0832766443, 0.0, 0.0, 0.0], [-0.717499971, 21.0, 22.0, 1.0], [-0.253529727, 0.0, 0.0, 0.0], [-0.967499971, 23.0, 24.0, 3.0], [0.693500042, 25.0, 26.0, 2.0], [0.0549505502, 0.0, 0.0, 0.0], [0.21459198, 0.0, 0.0, 0.0], [-0.046961233, 0.0, 0.0, 0.0], [0.239104956, 0.0, 0.0, 0.0], [0.131435782, 0.0, 0.0, 0.0], [-0.0569411814, 0.0, 0.0, 0.0], [-0.0430748463, 0.0, 0.0, 0.0], [0.0476592556, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 19, 20, 14, 9, 10, 21, 22, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 4, 8, 13, 2, 5, 6, 11, 15, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_255(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.146499991, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.141499996, 5.0, 6.0, 0.0], [-0.1875, 7.0, 8.0, 0.0], [-0.161500007, 9.0, 10.0, 0.0], [-0.1435, 11.0, 12.0, 0.0], [-0.135500014, 13.0, 14.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [0.145693943, 0.0, 0.0, 0.0], [-0.0850651339, 0.0, 0.0, 0.0], [-0.271140039, 0.0, 0.0, 0.0], [0.0110750375, 0.0, 0.0, 0.0], [0.179207742, 0.0, 0.0, 0.0], [-0.137499988, 17.0, 18.0, 0.0], [-0.134499997, 19.0, 20.0, 0.0], [-0.274500012, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [-0.139499992, 25.0, 26.0, 0.0], [-0.136500001, 27.0, 28.0, 0.0], [0.192634866, 0.0, 0.0, 0.0], [-0.0496499985, 29.0, 30.0, 0.0], [-0.0455250144, 0.0, 0.0, 0.0], [0.10002552, 0.0, 0.0, 0.0], [-0.148035824, 0.0, 0.0, 0.0], [0.135230213, 0.0, 0.0, 0.0], [-0.0167574137, 0.0, 0.0, 0.0], [0.00933017302, 0.0, 0.0, 0.0], [-0.238466874, 0.0, 0.0, 0.0], [-0.0372278914, 0.0, 0.0, 0.0], [0.0251051299, 0.0, 0.0, 0.0], [-0.00512726139, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 11, 12, 25, 26, 27, 28, 19, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 13, 17, 18, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_256(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.1105, 3.0, 4.0, 0.0], [0.101500005, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [0.0577500015, 11.0, 12.0, 0.0], [-0.195661366, 0.0, 0.0, 0.0], [0.0912000015, 13.0, 14.0, 0.0], [-0.275197715, 0.0, 0.0, 0.0], [0.265584528, 0.0, 0.0, 0.0], [0.193500012, 15.0, 16.0, 0.0], [-0.02575, 17.0, 18.0, 0.0], [0.206471384, 0.0, 0.0, 0.0], [0.0476500019, 19.0, 20.0, 0.0], [0.0923999995, 21.0, 22.0, 0.0], [-0.133688152, 0.0, 0.0, 0.0], [0.194499999, 23.0, 24.0, 0.0], [-0.0403999984, 25.0, 26.0, 0.0], [-0.662999988, 27.0, 28.0, 2.0], [0.00820675492, 0.0, 0.0, 0.0], [-0.0640478358, 0.0, 0.0, 0.0], [0.180074632, 0.0, 0.0, 0.0], [0.0226763152, 0.0, 0.0, 0.0], [0.179483294, 0.0, 0.0, 0.0], [-0.0133912982, 0.0, 0.0, 0.0], [-0.0652759969, 0.0, 0.0, 0.0], [0.363961369, 0.0, 0.0, 0.0], [-0.0364013501, 0.0, 0.0, 0.0], [-0.194752768, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 15, 23, 24, 25, 26, 27, 28, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 16, 2, 5, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_257(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.114488132, 0.0, 0.0, 0.0], [-0.992499948, 3.0, 4.0, 1.0], [-0.601000011, 5.0, 6.0, 2.0], [-0.99849999, 7.0, 8.0, 4.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.104587302, 0.0, 0.0, 0.0], [-0.167126402, 0.0, 0.0, 0.0], [0.0272838846, 0.0, 0.0, 0.0], [-0.822000027, 11.0, 12.0, 2.0], [-0.294, 13.0, 14.0, 0.0], [0.000452153879, 0.0, 0.0, 0.0], [-0.204154968, 0.0, 0.0, 0.0], [0.168568328, 0.0, 0.0, 0.0], [0.013984005, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 13, 14, 6, 7, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_258(xs):
    #Predicts Class 0
    function_dict = np.array([[0.485500008, 1.0, 2.0, 2.0], [0.478500009, 3.0, 4.0, 2.0], [-0.644500017, 5.0, 6.0, 1.0], [0.472499996, 7.0, 8.0, 2.0], [-0.212435693, 0.0, 0.0, 0.0], [-0.1875, 9.0, 10.0, 0.0], [-0.178499997, 11.0, 12.0, 0.0], [-0.995499969, 13.0, 14.0, 3.0], [0.144254863, 0.0, 0.0, 0.0], [-0.876999974, 15.0, 16.0, 4.0], [-0.926499963, 17.0, 18.0, 4.0], [-0.933500051, 19.0, 20.0, 4.0], [-0.109499998, 21.0, 22.0, 0.0], [-0.155499995, 23.0, 24.0, 0.0], [-0.962499976, 25.0, 26.0, 4.0], [-0.315500021, 27.0, 28.0, 0.0], [-0.979499996, 29.0, 30.0, 3.0], [-0.129999995, 31.0, 32.0, 0.0], [-0.155499995, 33.0, 34.0, 0.0], [-0.977499962, 35.0, 36.0, 3.0], [-0.20449999, 37.0, 38.0, 0.0], [-0.538499951, 39.0, 40.0, 1.0], [0.684499979, 41.0, 42.0, 2.0], [-0.121056296, 0.0, 0.0, 0.0], [0.0239227936, 0.0, 0.0, 0.0], [0.112018935, 0.0, 0.0, 0.0], [-0.0362570174, 0.0, 0.0, 0.0], [-0.0295807123, 0.0, 0.0, 0.0], [0.115567856, 0.0, 0.0, 0.0], [-0.157431662, 0.0, 0.0, 0.0], [0.0815060511, 0.0, 0.0, 0.0], [-0.250531465, 0.0, 0.0, 0.0], [0.028521454, 0.0, 0.0, 0.0], [-0.0028254108, 0.0, 0.0, 0.0], [0.188490987, 0.0, 0.0, 0.0], [-0.283894062, 0.0, 0.0, 0.0], [-0.0723531991, 0.0, 0.0, 0.0], [0.00816527475, 0.0, 0.0, 0.0], [-0.194228902, 0.0, 0.0, 0.0], [0.178221762, 0.0, 0.0, 0.0], [-0.0355435461, 0.0, 0.0, 0.0], [-0.168518037, 0.0, 0.0, 0.0], [0.0088499533, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 4, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 16, 10, 17, 18, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_259(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.874000013, 1.0, 2.0, 1.0], [-0.103793561, 0.0, 0.0, 0.0], [0.455500007, 3.0, 4.0, 2.0], [0.444499999, 5.0, 6.0, 2.0], [0.461499989, 7.0, 8.0, 2.0], [-0.274999976, 9.0, 10.0, 0.0], [-0.970000029, 11.0, 12.0, 4.0], [-0.995499969, 13.0, 14.0, 3.0], [-0.968500018, 15.0, 16.0, 4.0], [0.198574081, 0.0, 0.0, 0.0], [0.436500013, 17.0, 18.0, 2.0], [-0.0598484688, 0.0, 0.0, 0.0], [0.252590865, 0.0, 0.0, 0.0], [0.0554811507, 0.0, 0.0, 0.0], [-0.221159473, 0.0, 0.0, 0.0], [-0.210500002, 19.0, 20.0, 0.0], [0.554499984, 21.0, 22.0, 2.0], [0.0178257506, 0.0, 0.0, 0.0], [-0.140705556, 0.0, 0.0, 0.0], [0.208320007, 0.0, 0.0, 0.0], [-0.0928420052, 0.0, 0.0, 0.0], [-0.0662987977, 0.0, 0.0, 0.0], [0.0115117487, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 17, 18, 11, 12, 13, 14, 19, 20, 21, 22])
    branch_indices = np.array([0, 2, 3, 5, 10, 6, 4, 7, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_260(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.56099999, 1.0, 2.0, 4.0], [-0.712499976, 3.0, 4.0, 4.0], [-0.133559898, 0.0, 0.0, 0.0], [-0.730999947, 5.0, 6.0, 4.0], [0.722000003, 7.0, 8.0, 2.0], [-0.558500051, 9.0, 10.0, 1.0], [-0.163682356, 0.0, 0.0, 0.0], [-0.0697981566, 0.0, 0.0, 0.0], [0.227806225, 0.0, 0.0, 0.0], [-0.24849999, 11.0, 12.0, 0.0], [-0.546499968, 13.0, 14.0, 1.0], [-0.142321378, 0.0, 0.0, 0.0], [2.07561588e-05, 0.0, 0.0, 0.0], [0.178510278, 0.0, 0.0, 0.0], [0.00843024813, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_261(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.111500002, 1.0, 2.0, 0.0], [-0.115500003, 3.0, 4.0, 0.0], [-0.0965999961, 5.0, 6.0, 0.0], [-0.1175, 7.0, 8.0, 0.0], [-0.28689611, 0.0, 0.0, 0.0], [-0.0974999964, 9.0, 10.0, 0.0], [-0.0922500044, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [0.180141672, 0.0, 0.0, 0.0], [-0.0987499952, 15.0, 16.0, 0.0], [0.421785593, 0.0, 0.0, 0.0], [-0.316457063, 0.0, 0.0, 0.0], [-0.0913500041, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.374500006, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [-0.287518561, 0.0, 0.0, 0.0], [0.286902696, 0.0, 0.0, 0.0], [-0.0801500008, 25.0, 26.0, 0.0], [-0.0208513103, 0.0, 0.0, 0.0], [0.179066226, 0.0, 0.0, 0.0], [0.120439328, 0.0, 0.0, 0.0], [-0.104675293, 0.0, 0.0, 0.0], [0.15234527, 0.0, 0.0, 0.0], [-0.14731729, 0.0, 0.0, 0.0], [-0.127522439, 0.0, 0.0, 0.0], [0.00358835212, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 23, 24, 16, 10, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_262(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.162499994, 1.0, 2.0, 0.0], [-0.164499998, 3.0, 4.0, 0.0], [-0.158500001, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [0.247756675, 0.0, 0.0, 0.0], [-0.309490472, 0.0, 0.0, 0.0], [-0.1505, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.885499954, 13.0, 14.0, 2.0], [-0.153499991, 15.0, 16.0, 0.0], [-0.144499987, 17.0, 18.0, 0.0], [-0.168500006, 19.0, 20.0, 0.0], [-0.99849999, 21.0, 22.0, 1.0], [-0.196999997, 23.0, 24.0, 0.0], [-0.795000017, 25.0, 26.0, 2.0], [-0.154500008, 27.0, 28.0, 0.0], [0.267682105, 0.0, 0.0, 0.0], [-0.136309698, 0.0, 0.0, 0.0], [-0.999500036, 29.0, 30.0, 4.0], [-0.00886157993, 0.0, 0.0, 0.0], [0.157528371, 0.0, 0.0, 0.0], [0.220424905, 0.0, 0.0, 0.0], [0.0275512915, 0.0, 0.0, 0.0], [-0.0118055893, 0.0, 0.0, 0.0], [-0.36988005, 0.0, 0.0, 0.0], [0.117557622, 0.0, 0.0, 0.0], [-0.0239953268, 0.0, 0.0, 0.0], [0.00973395538, 0.0, 0.0, 0.0], [0.0344902202, 0.0, 0.0, 0.0], [-0.00791213475, 0.0, 0.0, 0.0], [0.0298323855, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 4, 5, 27, 28, 16, 17, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 6, 9, 15, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_263(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.0126499999, 1.0, 2.0, 0.0], [-0.0318999998, 3.0, 4.0, 0.0], [0.00540999975, 5.0, 6.0, 0.0], [-0.0371000022, 7.0, 8.0, 0.0], [-0.294703454, 0.0, 0.0, 0.0], [0.289477229, 0.0, 0.0, 0.0], [0.198500007, 9.0, 10.0, 0.0], [-0.0742499977, 11.0, 12.0, 0.0], [0.251605183, 0.0, 0.0, 0.0], [-0.134822652, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.0751000047, 15.0, 16.0, 0.0], [-0.167124227, 0.0, 0.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [0.428499997, 19.0, 20.0, 0.0], [-0.020972589, 0.0, 0.0, 0.0], [0.212545574, 0.0, 0.0, 0.0], [0.000223734169, 0.0, 0.0, 0.0], [-0.150260732, 0.0, 0.0, 0.0], [0.126490846, 0.0, 0.0, 0.0], [-0.0270958208, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_264(xs):
    #Predicts Class 0
    function_dict = np.array([[0.257499993, 1.0, 2.0, 2.0], [-0.127460703, 0.0, 0.0, 0.0], [-0.782500029, 3.0, 4.0, 1.0], [-0.960500002, 5.0, 6.0, 3.0], [-0.833500028, 7.0, 8.0, 4.0], [-0.983500004, 9.0, 10.0, 3.0], [0.215431005, 0.0, 0.0, 0.0], [-0.344500005, 11.0, 12.0, 0.0], [0.654500008, 13.0, 14.0, 2.0], [0.449499995, 15.0, 16.0, 2.0], [0.443499982, 17.0, 18.0, 2.0], [0.13756381, 0.0, 0.0, 0.0], [-0.309499979, 19.0, 20.0, 0.0], [-0.979499996, 21.0, 22.0, 3.0], [-0.142499998, 23.0, 24.0, 0.0], [0.131510764, 0.0, 0.0, 0.0], [-0.00940376334, 0.0, 0.0, 0.0], [-0.161881417, 0.0, 0.0, 0.0], [0.061603263, 0.0, 0.0, 0.0], [-0.149783835, 0.0, 0.0, 0.0], [-0.0255361833, 0.0, 0.0, 0.0], [-0.0342659838, 0.0, 0.0, 0.0], [0.203307688, 0.0, 0.0, 0.0], [0.0501455963, 0.0, 0.0, 0.0], [-0.198764846, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 6, 11, 19, 20, 21, 22, 23, 24])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 7, 12, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_265(xs):
    #Predicts Class 1
    function_dict = np.array([[0.570500016, 1.0, 2.0, 2.0], [0.554499984, 3.0, 4.0, 2.0], [-0.237500012, 5.0, 6.0, 0.0], [-0.887500048, 7.0, 8.0, 4.0], [-0.213, 9.0, 10.0, 0.0], [-0.277500004, 11.0, 12.0, 0.0], [-0.953500032, 13.0, 14.0, 4.0], [0.539499998, 15.0, 16.0, 2.0], [-0.860499978, 17.0, 18.0, 4.0], [-0.248500004, 19.0, 20.0, 0.0], [-0.111525752, 0.0, 0.0, 0.0], [0.642500043, 21.0, 22.0, 2.0], [0.636000037, 23.0, 24.0, 2.0], [-0.972499967, 25.0, 26.0, 4.0], [-0.2095, 27.0, 28.0, 0.0], [-0.913499951, 29.0, 30.0, 4.0], [-0.968999982, 31.0, 32.0, 4.0], [0.2036376, 0.0, 0.0, 0.0], [0.0195642039, 0.0, 0.0, 0.0], [-0.275000006, 33.0, 34.0, 0.0], [0.295723051, 0.0, 0.0, 0.0], [-0.994500041, 35.0, 36.0, 3.0], [-0.895500004, 37.0, 38.0, 4.0], [-0.979499996, 39.0, 40.0, 3.0], [0.661499977, 41.0, 42.0, 2.0], [-0.179726228, 0.0, 0.0, 0.0], [-0.207500011, 43.0, 44.0, 0.0], [-0.355804324, 0.0, 0.0, 0.0], [-0.926499963, 45.0, 46.0, 4.0], [0.0181568526, 0.0, 0.0, 0.0], [-0.196236208, 0.0, 0.0, 0.0], [0.0550306179, 0.0, 0.0, 0.0], [-0.191544637, 0.0, 0.0, 0.0], [0.122726358, 0.0, 0.0, 0.0], [-0.0716754496, 0.0, 0.0, 0.0], [0.0414588265, 0.0, 0.0, 0.0], [-0.172114506, 0.0, 0.0, 0.0], [0.122738667, 0.0, 0.0, 0.0], [-0.0809597671, 0.0, 0.0, 0.0], [0.0560124032, 0.0, 0.0, 0.0], [0.270230025, 0.0, 0.0, 0.0], [-0.193266839, 0.0, 0.0, 0.0], [0.108139887, 0.0, 0.0, 0.0], [0.231594428, 0.0, 0.0, 0.0], [-0.0676777661, 0.0, 0.0, 0.0], [0.0995500162, 0.0, 0.0, 0.0], [-0.0962760076, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 17, 18, 33, 34, 20, 10, 35, 36, 37, 38, 39, 40, 41, 42, 25, 43, 44, 27, 45, 46])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 19, 2, 5, 11, 21, 22, 12, 23, 24, 6, 13, 26, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_266(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.982499957, 3.0, 4.0, 3.0], [-0.75849998, 5.0, 6.0, 1.0], [-0.988499999, 7.0, 8.0, 3.0], [-0.207073823, 0.0, 0.0, 0.0], [0.191621661, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 3.0], [-0.180500001, 11.0, 12.0, 0.0], [0.151948199, 0.0, 0.0, 0.0], [-0.943500042, 13.0, 14.0, 4.0], [-0.956499994, 15.0, 16.0, 4.0], [-0.218499988, 17.0, 18.0, 0.0], [0.0620685853, 0.0, 0.0, 0.0], [0.550500035, 19.0, 20.0, 2.0], [-0.217500001, 21.0, 22.0, 0.0], [-0.997500002, 23.0, 24.0, 3.0], [-0.939499974, 25.0, 26.0, 4.0], [-0.0148184001, 0.0, 0.0, 0.0], [-0.220168978, 0.0, 0.0, 0.0], [-0.0130097643, 0.0, 0.0, 0.0], [0.274402976, 0.0, 0.0, 0.0], [0.0530496463, 0.0, 0.0, 0.0], [-0.133827671, 0.0, 0.0, 0.0], [-0.296887666, 0.0, 0.0, 0.0], [-0.0146921156, 0.0, 0.0, 0.0], [0.113658063, 0.0, 0.0, 0.0], [-0.0128207747, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 21, 22, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_267(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.73150003, 1.0, 2.0, 2.0], [-0.747500002, 3.0, 4.0, 2.0], [0.0087799998, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.138140336, 0.0, 0.0, 0.0], [-0.00657499954, 9.0, 10.0, 0.0], [-0.639999986, 11.0, 12.0, 2.0], [-0.524500012, 13.0, 14.0, 0.0], [-0.273499995, 15.0, 16.0, 0.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.268124729, 0.0, 0.0, 0.0], [0.262497842, 0.0, 0.0, 0.0], [-0.613000035, 19.0, 20.0, 2.0], [0.0571857281, 0.0, 0.0, 0.0], [-0.16368641, 0.0, 0.0, 0.0], [-0.277500004, 21.0, 22.0, 0.0], [-0.142500013, 23.0, 24.0, 0.0], [-0.0682999939, 25.0, 26.0, 0.0], [-0.639999986, 27.0, 28.0, 2.0], [-0.11967285, 0.0, 0.0, 0.0], [0.0737759098, 0.0, 0.0, 0.0], [0.040385887, 0.0, 0.0, 0.0], [0.227728665, 0.0, 0.0, 0.0], [-0.0557302088, 0.0, 0.0, 0.0], [0.00107781659, 0.0, 0.0, 0.0], [-0.00102391152, 0.0, 0.0, 0.0], [0.261861414, 0.0, 0.0, 0.0], [-0.171656817, 0.0, 0.0, 0.0], [0.000721659162, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 21, 22, 23, 24, 4, 25, 26, 27, 28, 10, 11, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 16, 2, 5, 9, 17, 18, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_268(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00163000007, 1.0, 2.0, 0.0], [-0.00413500005, 3.0, 4.0, 0.0], [-0.00132499996, 5.0, 6.0, 0.0], [-0.0101749999, 7.0, 8.0, 0.0], [-0.00322999991, 9.0, 10.0, 0.0], [0.295009732, 0.0, 0.0, 0.0], [0.000549999997, 11.0, 12.0, 0.0], [-0.0150499996, 13.0, 14.0, 0.0], [-0.00885999948, 15.0, 16.0, 0.0], [-0.334557235, 0.0, 0.0, 0.0], [-0.00221499987, 17.0, 18.0, 0.0], [-0.000834999955, 19.0, 20.0, 0.0], [0.00146499998, 21.0, 22.0, 0.0], [-0.0156999994, 23.0, 24.0, 0.0], [-0.368999451, 0.0, 0.0, 0.0], [0.357144177, 0.0, 0.0, 0.0], [-0.00550500024, 25.0, 26.0, 0.0], [0.0246032942, 0.0, 0.0, 0.0], [-0.106220923, 0.0, 0.0, 0.0], [0.0449586511, 0.0, 0.0, 0.0], [-0.169702411, 0.0, 0.0, 0.0], [0.394774228, 0.0, 0.0, 0.0], [0.00325499987, 27.0, 28.0, 0.0], [-0.00262262113, 0.0, 0.0, 0.0], [0.469311178, 0.0, 0.0, 0.0], [-0.297808617, 0.0, 0.0, 0.0], [0.127178013, 0.0, 0.0, 0.0], [-0.200317919, 0.0, 0.0, 0.0], [0.0146839721, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 25, 26, 9, 17, 18, 5, 19, 20, 21, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 4, 10, 2, 6, 11, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_269(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [0.557999969, 7.0, 8.0, 0.0], [-0.156272769, 0.0, 0.0, 0.0], [0.620499969, 9.0, 10.0, 0.0], [0.232742727, 0.0, 0.0, 0.0], [0.556499958, 11.0, 12.0, 0.0], [0.123738192, 0.0, 0.0, 0.0], [0.066844672, 0.0, 0.0, 0.0], [-0.0935691372, 0.0, 0.0, 0.0], [0.528499961, 13.0, 14.0, 0.0], [-0.203069568, 0.0, 0.0, 0.0], [-0.00567713287, 0.0, 0.0, 0.0], [0.0802744105, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_270(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.449499995, 1.0, 2.0, 1.0], [-0.0580499992, 3.0, 4.0, 0.0], [-0.797500014, 5.0, 6.0, 4.0], [-0.0796000063, 7.0, 8.0, 0.0], [-0.960000038, 9.0, 10.0, 4.0], [-0.00437218603, 0.0, 0.0, 0.0], [-0.14294906, 0.0, 0.0, 0.0], [0.657500029, 11.0, 12.0, 2.0], [0.137190118, 0.0, 0.0, 0.0], [-0.166890308, 0.0, 0.0, 0.0], [0.015258831, 0.0, 0.0, 0.0], [0.628499985, 13.0, 14.0, 2.0], [-0.615499973, 15.0, 16.0, 1.0], [0.00214739656, 0.0, 0.0, 0.0], [-0.0935572237, 0.0, 0.0, 0.0], [0.113108762, 0.0, 0.0, 0.0], [-0.0149489036, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_271(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.684499979, 1.0, 2.0, 1.0], [-0.982499957, 3.0, 4.0, 3.0], [-0.98150003, 5.0, 6.0, 3.0], [-0.736500025, 7.0, 8.0, 1.0], [-0.699499965, 9.0, 10.0, 1.0], [-0.870499969, 11.0, 12.0, 4.0], [-0.309499979, 13.0, 14.0, 0.0], [0.51849997, 15.0, 16.0, 2.0], [-0.912500024, 17.0, 18.0, 4.0], [-0.734500051, 19.0, 20.0, 1.0], [-0.132009059, 0.0, 0.0, 0.0], [-0.598500013, 21.0, 22.0, 1.0], [-0.186153457, 0.0, 0.0, 0.0], [-0.872500002, 23.0, 24.0, 4.0], [-0.912500024, 25.0, 26.0, 4.0], [-0.976500034, 27.0, 28.0, 4.0], [-0.1655, 29.0, 30.0, 0.0], [-0.966500044, 31.0, 32.0, 4.0], [0.638000011, 33.0, 34.0, 2.0], [-0.922500014, 35.0, 36.0, 4.0], [-0.270500004, 37.0, 38.0, 0.0], [0.558500051, 39.0, 40.0, 2.0], [-0.536499977, 41.0, 42.0, 1.0], [-0.912999988, 43.0, 44.0, 4.0], [0.195379838, 0.0, 0.0, 0.0], [-0.955500007, 45.0, 46.0, 4.0], [-0.22187908, 0.0, 0.0, 0.0], [-0.085859254, 0.0, 0.0, 0.0], [0.057625141, 0.0, 0.0, 0.0], [-0.163566276, 0.0, 0.0, 0.0], [0.0810997486, 0.0, 0.0, 0.0], [0.0120214941, 0.0, 0.0, 0.0], [-0.279420227, 0.0, 0.0, 0.0], [0.170527965, 0.0, 0.0, 0.0], [-0.0550139062, 0.0, 0.0, 0.0], [-0.070775032, 0.0, 0.0, 0.0], [0.152619839, 0.0, 0.0, 0.0], [0.0621279925, 0.0, 0.0, 0.0], [0.221253321, 0.0, 0.0, 0.0], [0.247051671, 0.0, 0.0, 0.0], [0.0343356654, 0.0, 0.0, 0.0], [-0.128801778, 0.0, 0.0, 0.0], [0.0825217366, 0.0, 0.0, 0.0], [0.113512315, 0.0, 0.0, 0.0], [-0.112929963, 0.0, 0.0, 0.0], [-0.114782162, 0.0, 0.0, 0.0], [0.0651560351, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 10, 39, 40, 41, 42, 12, 43, 44, 24, 45, 46, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 19, 20, 2, 5, 11, 21, 22, 6, 13, 23, 14, 25])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_272(xs):
    #Predicts Class 2
    function_dict = np.array([[0.60650003, 1.0, 2.0, 2.0], [0.5995, 3.0, 4.0, 2.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.296499997, 7.0, 8.0, 0.0], [-0.174376294, 0.0, 0.0, 0.0], [-0.566499949, 9.0, 10.0, 1.0], [-0.983500004, 11.0, 12.0, 3.0], [-0.314500004, 13.0, 14.0, 0.0], [-0.992499948, 15.0, 16.0, 3.0], [-0.680999994, 17.0, 18.0, 1.0], [-0.863999963, 19.0, 20.0, 4.0], [-0.86650002, 21.0, 22.0, 4.0], [-0.970499992, 23.0, 24.0, 3.0], [-0.0146217262, 0.0, 0.0, 0.0], [-0.240084425, 0.0, 0.0, 0.0], [-0.538499951, 25.0, 26.0, 1.0], [-0.989500046, 27.0, 28.0, 3.0], [0.00750237936, 0.0, 0.0, 0.0], [0.249658421, 0.0, 0.0, 0.0], [-0.0817319751, 0.0, 0.0, 0.0], [0.0490809716, 0.0, 0.0, 0.0], [-0.993499994, 29.0, 30.0, 3.0], [0.713500023, 31.0, 32.0, 2.0], [0.749500036, 33.0, 34.0, 2.0], [-0.540500045, 35.0, 36.0, 1.0], [-0.0637908727, 0.0, 0.0, 0.0], [0.118044078, 0.0, 0.0, 0.0], [0.184280187, 0.0, 0.0, 0.0], [0.0150240688, 0.0, 0.0, 0.0], [0.0129635632, 0.0, 0.0, 0.0], [-0.238634542, 0.0, 0.0, 0.0], [0.16562672, 0.0, 0.0, 0.0], [-0.093942076, 0.0, 0.0, 0.0], [0.209859446, 0.0, 0.0, 0.0], [-0.0889056176, 0.0, 0.0, 0.0], [-0.118913531, 0.0, 0.0, 0.0], [0.0632923394, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 25, 26, 27, 28, 4, 17, 18, 19, 20, 29, 30, 31, 32, 33, 34, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 16, 2, 5, 9, 10, 6, 11, 21, 22, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_273(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.654500008, 3.0, 4.0, 2.0], [-0.0802424252, 0.0, 0.0, 0.0], [-0.274500012, 5.0, 6.0, 0.0], [-0.0857000053, 7.0, 8.0, 0.0], [-0.282999992, 9.0, 10.0, 0.0], [-0.253499985, 11.0, 12.0, 0.0], [-0.260500014, 13.0, 14.0, 0.0], [-0.0225000009, 15.0, 16.0, 0.0], [-0.284500003, 17.0, 18.0, 0.0], [-0.265344143, 0.0, 0.0, 0.0], [0.19400911, 0.0, 0.0, 0.0], [-0.205500007, 19.0, 20.0, 0.0], [-0.0382833704, 0.0, 0.0, 0.0], [-0.203500003, 21.0, 22.0, 0.0], [-0.12895903, 0.0, 0.0, 0.0], [0.0423000008, 23.0, 24.0, 0.0], [-0.0511341356, 0.0, 0.0, 0.0], [0.123610705, 0.0, 0.0, 0.0], [-0.100123473, 0.0, 0.0, 0.0], [0.000785229087, 0.0, 0.0, 0.0], [0.21931994, 0.0, 0.0, 0.0], [0.0665742233, 0.0, 0.0, 0.0], [0.138172671, 0.0, 0.0, 0.0], [-0.015328099, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 11, 19, 20, 13, 21, 22, 15, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 12, 4, 7, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_274(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.429499984, 3.0, 4.0, 0.0], [-0.4375, 5.0, 6.0, 0.0], [-0.146692201, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [0.105099231, 0.0, 0.0, 0.0], [-0.333499998, 9.0, 10.0, 0.0], [-0.393000007, 11.0, 12.0, 0.0], [-0.342000008, 13.0, 14.0, 0.0], [-0.407499999, 15.0, 16.0, 0.0], [-0.260500014, 17.0, 18.0, 0.0], [-0.406000018, 19.0, 20.0, 0.0], [0.290293902, 0.0, 0.0, 0.0], [-0.131056547, 0.0, 0.0, 0.0], [-0.795000017, 21.0, 22.0, 2.0], [-0.0107422424, 0.0, 0.0, 0.0], [-0.242337495, 0.0, 0.0, 0.0], [-0.923500001, 23.0, 24.0, 2.0], [-0.249500006, 25.0, 26.0, 0.0], [0.0856401473, 0.0, 0.0, 0.0], [-0.101719134, 0.0, 0.0, 0.0], [0.00540487468, 0.0, 0.0, 0.0], [-0.0590111278, 0.0, 0.0, 0.0], [0.0116159841, 0.0, 0.0, 0.0], [0.22883375, 0.0, 0.0, 0.0], [-0.256259441, 0.0, 0.0, 0.0], [-0.0221577436, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 19, 20, 12, 13, 21, 22, 5, 15, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 4, 7, 11, 8, 14, 2, 6, 9, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_275(xs):
    #Predicts Class 5
    function_dict = np.array([[0.5625, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.585000038, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.222667322, 0.0, 0.0, 0.0], [0.18996653, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.546499968, 11.0, 12.0, 0.0], [0.0890134946, 0.0, 0.0, 0.0], [-0.109876208, 0.0, 0.0, 0.0], [0.621500015, 13.0, 14.0, 0.0], [0.537500024, 15.0, 16.0, 0.0], [-0.211104229, 0.0, 0.0, 0.0], [0.0215539429, 0.0, 0.0, 0.0], [0.0773372725, 0.0, 0.0, 0.0], [-0.00247302488, 0.0, 0.0, 0.0], [0.0857867748, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_276(xs):
    #Predicts Class 0
    function_dict = np.array([[0.271499991, 1.0, 2.0, 2.0], [-0.0983434245, 0.0, 0.0, 0.0], [-0.759500027, 3.0, 4.0, 1.0], [-0.280499995, 5.0, 6.0, 0.0], [-0.739500046, 7.0, 8.0, 1.0], [-0.827499986, 9.0, 10.0, 1.0], [-0.99849999, 11.0, 12.0, 3.0], [-0.931499958, 13.0, 14.0, 4.0], [-0.979499996, 15.0, 16.0, 4.0], [0.0526444055, 0.0, 0.0, 0.0], [-0.939999998, 17.0, 18.0, 4.0], [0.451499999, 19.0, 20.0, 2.0], [-0.24149999, 21.0, 22.0, 0.0], [-0.990499973, 23.0, 24.0, 3.0], [-0.907999992, 25.0, 26.0, 4.0], [-0.164271384, 0.0, 0.0, 0.0], [-0.722499967, 27.0, 28.0, 1.0], [-0.176505253, 0.0, 0.0, 0.0], [-0.000493109284, 0.0, 0.0, 0.0], [0.068659246, 0.0, 0.0, 0.0], [0.216430336, 0.0, 0.0, 0.0], [0.211488992, 0.0, 0.0, 0.0], [-0.0184432901, 0.0, 0.0, 0.0], [-0.210226551, 0.0, 0.0, 0.0], [-0.0446020588, 0.0, 0.0, 0.0], [0.0859322026, 0.0, 0.0, 0.0], [-0.0396803468, 0.0, 0.0, 0.0], [0.101793803, 0.0, 0.0, 0.0], [-0.00989109557, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 15, 27, 28])
    branch_indices = np.array([0, 2, 3, 5, 10, 6, 11, 12, 4, 7, 13, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_277(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.963500023, 3.0, 4.0, 4.0], [-0.965499997, 5.0, 6.0, 4.0], [-0.977499962, 7.0, 8.0, 4.0], [-0.928499997, 9.0, 10.0, 4.0], [-0.75849998, 11.0, 12.0, 1.0], [-0.932500005, 13.0, 14.0, 4.0], [0.238000005, 15.0, 16.0, 2.0], [-0.999500036, 17.0, 18.0, 3.0], [-0.807999969, 19.0, 20.0, 1.0], [-0.9005, 21.0, 22.0, 4.0], [-0.770500004, 23.0, 24.0, 1.0], [-0.971500039, 25.0, 26.0, 4.0], [-0.254000008, 27.0, 28.0, 0.0], [0.600499988, 29.0, 30.0, 2.0], [-0.125301629, 0.0, 0.0, 0.0], [0.0977257714, 0.0, 0.0, 0.0], [0.0162093751, 0.0, 0.0, 0.0], [-0.99849999, 31.0, 32.0, 3.0], [-0.117838293, 0.0, 0.0, 0.0], [0.52700001, 33.0, 34.0, 2.0], [-0.198384196, 0.0, 0.0, 0.0], [-0.87650001, 35.0, 36.0, 4.0], [-0.219500005, 37.0, 38.0, 0.0], [-0.225986108, 0.0, 0.0, 0.0], [-0.985499978, 39.0, 40.0, 3.0], [0.233774096, 0.0, 0.0, 0.0], [-0.963500023, 41.0, 42.0, 3.0], [-0.761500001, 43.0, 44.0, 1.0], [-0.772000015, 45.0, 46.0, 1.0], [-0.247500002, 47.0, 48.0, 0.0], [-0.268798769, 0.0, 0.0, 0.0], [-0.0998208746, 0.0, 0.0, 0.0], [0.220440269, 0.0, 0.0, 0.0], [0.052916009, 0.0, 0.0, 0.0], [0.0794935524, 0.0, 0.0, 0.0], [-0.0693819597, 0.0, 0.0, 0.0], [0.154465884, 0.0, 0.0, 0.0], [-0.0312273372, 0.0, 0.0, 0.0], [0.175799385, 0.0, 0.0, 0.0], [-0.0561808571, 0.0, 0.0, 0.0], [-0.0024283682, 0.0, 0.0, 0.0], [0.188904062, 0.0, 0.0, 0.0], [0.0374120772, 0.0, 0.0, 0.0], [-0.171245202, 0.0, 0.0, 0.0], [-0.0611520149, 0.0, 0.0, 0.0], [0.122237727, 0.0, 0.0, 0.0], [0.0535533912, 0.0, 0.0, 0.0], [-0.212663993, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 31, 32, 19, 33, 34, 21, 35, 36, 37, 38, 24, 39, 40, 26, 41, 42, 43, 44, 45, 46, 47, 48])
    branch_indices = np.array([0, 1, 3, 7, 8, 18, 4, 9, 20, 10, 22, 2, 5, 11, 23, 12, 25, 6, 13, 27, 28, 14, 29, 30])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_278(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.840000033, 3.0, 4.0, 3.0], [0.0987353772, 0.0, 0.0, 0.0], [-0.911499977, 5.0, 6.0, 3.0], [-0.765499949, 7.0, 8.0, 3.0], [-0.767500043, 9.0, 10.0, 4.0], [-0.5255, 11.0, 12.0, 1.0], [-0.157587871, 0.0, 0.0, 0.0], [-0.00155385793, 0.0, 0.0, 0.0], [-0.594500005, 13.0, 14.0, 1.0], [0.728999972, 15.0, 16.0, 2.0], [0.529500008, 17.0, 18.0, 2.0], [-0.0756752416, 0.0, 0.0, 0.0], [-0.020658154, 0.0, 0.0, 0.0], [0.0395994, 0.0, 0.0, 0.0], [-0.161732465, 0.0, 0.0, 0.0], [0.0235627349, 0.0, 0.0, 0.0], [0.0481824726, 0.0, 0.0, 0.0], [0.178078905, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 17, 18, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_279(xs):
    #Predicts Class 3
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [0.150860682, 0.0, 0.0, 0.0], [-0.227628082, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.556499958, 11.0, 12.0, 0.0], [-0.0954289138, 0.0, 0.0, 0.0], [0.0900201723, 0.0, 0.0, 0.0], [-0.033456631, 0.0, 0.0, 0.0], [-0.296499997, 13.0, 14.0, 0.0], [0.174678385, 0.0, 0.0, 0.0], [0.0541907176, 0.0, 0.0, 0.0], [-0.00106567377, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_280(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00209000008, 1.0, 2.0, 0.0], [-0.00413500005, 3.0, 4.0, 0.0], [0.0131000001, 5.0, 6.0, 0.0], [-0.0382499993, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.999500036, 11.0, 12.0, 4.0], [0.0234000012, 13.0, 14.0, 0.0], [-0.03895, 15.0, 16.0, 0.0], [-0.0250499994, 17.0, 18.0, 0.0], [-0.298160464, 0.0, 0.0, 0.0], [-0.0487758629, 0.0, 0.0, 0.0], [0.00950999931, 19.0, 20.0, 0.0], [-0.822000027, 21.0, 22.0, 2.0], [0.0203999989, 23.0, 24.0, 0.0], [0.025150001, 25.0, 26.0, 0.0], [-0.0455499999, 27.0, 28.0, 0.0], [0.455766737, 0.0, 0.0, 0.0], [-0.0293500014, 29.0, 30.0, 0.0], [-0.0244999994, 31.0, 32.0, 0.0], [0.00588999968, 33.0, 34.0, 0.0], [0.342588753, 0.0, 0.0, 0.0], [0.480634898, 0.0, 0.0, 0.0], [0.00526000001, 35.0, 36.0, 0.0], [0.0168000013, 37.0, 38.0, 0.0], [-0.335233152, 0.0, 0.0, 0.0], [0.20354192, 0.0, 0.0, 0.0], [0.0260500014, 39.0, 40.0, 0.0], [0.00303432206, 0.0, 0.0, 0.0], [-0.138387024, 0.0, 0.0, 0.0], [-0.0542445183, 0.0, 0.0, 0.0], [-0.286494553, 0.0, 0.0, 0.0], [0.537731826, 0.0, 0.0, 0.0], [-0.0491932146, 0.0, 0.0, 0.0], [0.0682364404, 0.0, 0.0, 0.0], [-0.294109702, 0.0, 0.0, 0.0], [0.0773814172, 0.0, 0.0, 0.0], [-0.194064021, 0.0, 0.0, 0.0], [-0.248646945, 0.0, 0.0, 0.0], [0.186092928, 0.0, 0.0, 0.0], [-0.29426688, 0.0, 0.0, 0.0], [0.012317556, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 29, 30, 31, 32, 9, 10, 33, 34, 20, 21, 35, 36, 37, 38, 24, 25, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 18, 4, 2, 5, 11, 19, 12, 22, 6, 13, 23, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_281(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [-0.144391224, 0.0, 0.0, 0.0], [0.229937449, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.556499958, 11.0, 12.0, 0.0], [0.0971865356, 0.0, 0.0, 0.0], [-0.0886876136, 0.0, 0.0, 0.0], [0.621500015, 13.0, 14.0, 0.0], [-0.885499954, 15.0, 16.0, 2.0], [-0.173287272, 0.0, 0.0, 0.0], [0.0162182841, 0.0, 0.0, 0.0], [0.0607188083, 0.0, 0.0, 0.0], [0.0068793036, 0.0, 0.0, 0.0], [-0.0420784093, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_282(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.603999972, 1.0, 2.0, 4.0], [-0.712499976, 3.0, 4.0, 4.0], [0.0991490334, 0.0, 0.0, 0.0], [0.723500013, 5.0, 6.0, 2.0], [0.722000003, 7.0, 8.0, 2.0], [0.702499986, 9.0, 10.0, 2.0], [-0.250499994, 11.0, 12.0, 0.0], [0.0703920722, 0.0, 0.0, 0.0], [-0.209773913, 0.0, 0.0, 0.0], [0.657500029, 13.0, 14.0, 2.0], [-0.983500004, 15.0, 16.0, 3.0], [-0.0750232339, 0.0, 0.0, 0.0], [-0.20449999, 17.0, 18.0, 0.0], [-0.00721425051, 0.0, 0.0, 0.0], [0.0727688819, 0.0, 0.0, 0.0], [0.00304278173, 0.0, 0.0, 0.0], [-0.20477052, 0.0, 0.0, 0.0], [0.201707199, 0.0, 0.0, 0.0], [0.0085035665, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 17, 18, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_283(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.684499979, 1.0, 2.0, 1.0], [0.696500003, 3.0, 4.0, 2.0], [-0.912500024, 5.0, 6.0, 4.0], [0.646000028, 7.0, 8.0, 2.0], [0.10440214, 0.0, 0.0, 0.0], [-0.915500045, 9.0, 10.0, 4.0], [-0.434000015, 11.0, 12.0, 1.0], [-0.887500048, 13.0, 14.0, 4.0], [-0.177400455, 0.0, 0.0, 0.0], [-0.388999999, 15.0, 16.0, 1.0], [0.199679419, 0.0, 0.0, 0.0], [-0.841500044, 17.0, 18.0, 4.0], [-0.986500025, 19.0, 20.0, 3.0], [-0.698500037, 21.0, 22.0, 1.0], [-0.855000019, 23.0, 24.0, 4.0], [0.476500005, 25.0, 26.0, 2.0], [0.582000017, 27.0, 28.0, 2.0], [-0.613499999, 29.0, 30.0, 1.0], [0.0496847257, 0.0, 0.0, 0.0], [0.146707505, 0.0, 0.0, 0.0], [-0.039852187, 0.0, 0.0, 0.0], [-0.012883882, 0.0, 0.0, 0.0], [-0.146040499, 0.0, 0.0, 0.0], [0.154566184, 0.0, 0.0, 0.0], [-0.000611493015, 0.0, 0.0, 0.0], [0.141178548, 0.0, 0.0, 0.0], [0.0298066828, 0.0, 0.0, 0.0], [-0.0224815384, 0.0, 0.0, 0.0], [-0.137109295, 0.0, 0.0, 0.0], [-0.0106472196, 0.0, 0.0, 0.0], [-0.203534514, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 4, 25, 26, 27, 28, 10, 29, 30, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 16, 6, 11, 17, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_284(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [0.782500029, 3.0, 4.0, 2.0], [-0.50999999, 5.0, 6.0, 1.0], [-0.266499996, 7.0, 8.0, 0.0], [-0.120876588, 0.0, 0.0, 0.0], [-0.0155371064, 0.0, 0.0, 0.0], [0.147870317, 0.0, 0.0, 0.0], [-0.997500002, 9.0, 10.0, 3.0], [-0.401499987, 11.0, 12.0, 1.0], [0.0956225991, 0.0, 0.0, 0.0], [0.652500033, 13.0, 14.0, 2.0], [0.69749999, 15.0, 16.0, 2.0], [0.162773132, 0.0, 0.0, 0.0], [-0.00946741924, 0.0, 0.0, 0.0], [-0.20613876, 0.0, 0.0, 0.0], [-0.0142738698, 0.0, 0.0, 0.0], [0.0662992224, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 15, 16, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 10, 8, 11, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_285(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.795000017, 3.0, 4.0, 2.0], [-0.73150003, 5.0, 6.0, 2.0], [-0.822000027, 7.0, 8.0, 2.0], [-0.0176550001, 9.0, 10.0, 0.0], [-0.057, 11.0, 12.0, 0.0], [0.0087799998, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 3.0], [-0.0223000012, 17.0, 18.0, 0.0], [0.230998784, 0.0, 0.0, 0.0], [-0.0108176973, 0.0, 0.0, 0.0], [0.0642205402, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [-0.00657499954, 21.0, 22.0, 0.0], [-0.639999986, 23.0, 24.0, 2.0], [-0.851999998, 25.0, 26.0, 2.0], [-0.134625629, 0.0, 0.0, 0.0], [-0.395235837, 0.0, 0.0, 0.0], [0.0258999988, 27.0, 28.0, 0.0], [-0.0168149993, 29.0, 30.0, 0.0], [-0.277732015, 0.0, 0.0, 0.0], [-0.99849999, 31.0, 32.0, 1.0], [-0.244449571, 0.0, 0.0, 0.0], [0.178239867, 0.0, 0.0, 0.0], [-0.613000035, 33.0, 34.0, 2.0], [0.00242034765, 0.0, 0.0, 0.0], [0.0773442835, 0.0, 0.0, 0.0], [0.295109004, 0.0, 0.0, 0.0], [-0.108315192, 0.0, 0.0, 0.0], [0.0126388418, 0.0, 0.0, 0.0], [-0.0842458904, 0.0, 0.0, 0.0], [0.0704146773, 0.0, 0.0, 0.0], [-0.0924989283, 0.0, 0.0, 0.0], [-0.115758166, 0.0, 0.0, 0.0], [0.0517846011, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 27, 28, 9, 10, 11, 29, 30, 20, 31, 32, 22, 23, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 18, 4, 2, 5, 12, 19, 6, 13, 21, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_286(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.795000017, 3.0, 4.0, 2.0], [-0.997500002, 5.0, 6.0, 1.0], [-0.822000027, 7.0, 8.0, 2.0], [-0.160395294, 0.0, 0.0, 0.0], [-0.0420500003, 9.0, 10.0, 0.0], [-0.222499996, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.03785, 15.0, 16.0, 0.0], [-0.0530500002, 17.0, 18.0, 0.0], [-0.629000008, 19.0, 20.0, 2.0], [0.0580612682, 0.0, 0.0, 0.0], [-0.0527999997, 21.0, 22.0, 0.0], [-0.412, 23.0, 24.0, 0.0], [-0.148499995, 25.0, 26.0, 0.0], [0.392018735, 0.0, 0.0, 0.0], [-0.132737696, 0.0, 0.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.254316539, 0.0, 0.0, 0.0], [-0.999500036, 29.0, 30.0, 1.0], [-0.0155318007, 0.0, 0.0, 0.0], [-0.177757278, 0.0, 0.0, 0.0], [-0.00458443072, 0.0, 0.0, 0.0], [-0.157142088, 0.0, 0.0, 0.0], [0.00102284516, 0.0, 0.0, 0.0], [0.0123536149, 0.0, 0.0, 0.0], [-0.215881422, 0.0, 0.0, 0.0], [-0.0992555544, 0.0, 0.0, 0.0], [0.109583586, 0.0, 0.0, 0.0], [-0.00903373864, 0.0, 0.0, 0.0], [0.268120229, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 16, 4, 27, 28, 18, 29, 30, 20, 11, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 9, 17, 10, 19, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_287(xs):
    #Predicts Class 5
    function_dict = np.array([[0.5625, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.585000038, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.216125876, 0.0, 0.0, 0.0], [0.565500021, 9.0, 10.0, 0.0], [0.613499999, 11.0, 12.0, 0.0], [0.543500006, 13.0, 14.0, 0.0], [0.107408158, 0.0, 0.0, 0.0], [0.0622605495, 0.0, 0.0, 0.0], [0.233479708, 0.0, 0.0, 0.0], [-0.137957141, 0.0, 0.0, 0.0], [0.620499969, 15.0, 16.0, 0.0], [0.537500024, 17.0, 18.0, 0.0], [-0.147057891, 0.0, 0.0, 0.0], [0.072458148, 0.0, 0.0, 0.0], [-0.0533887744, 0.0, 0.0, 0.0], [-0.00265141507, 0.0, 0.0, 0.0], [0.104553722, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_288(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.733999968, 3.0, 4.0, 1.0], [-0.813500047, 5.0, 6.0, 1.0], [-0.803499997, 7.0, 8.0, 1.0], [-0.166137815, 0.0, 0.0, 0.0], [-0.946500003, 9.0, 10.0, 4.0], [0.484499991, 11.0, 12.0, 2.0], [-0.080155395, 0.0, 0.0, 0.0], [0.154023543, 0.0, 0.0, 0.0], [-0.997500002, 13.0, 14.0, 3.0], [-0.837499976, 15.0, 16.0, 1.0], [0.477999985, 17.0, 18.0, 2.0], [-0.790500045, 19.0, 20.0, 1.0], [0.100917749, 0.0, 0.0, 0.0], [-0.208499998, 21.0, 22.0, 0.0], [0.0276584551, 0.0, 0.0, 0.0], [0.162598148, 0.0, 0.0, 0.0], [-0.973500013, 23.0, 24.0, 4.0], [-0.226406157, 0.0, 0.0, 0.0], [0.146183819, 0.0, 0.0, 0.0], [-0.946500003, 25.0, 26.0, 3.0], [0.0620089918, 0.0, 0.0, 0.0], [-0.0817854255, 0.0, 0.0, 0.0], [-0.136631072, 0.0, 0.0, 0.0], [0.010639064, 0.0, 0.0, 0.0], [0.0141108828, 0.0, 0.0, 0.0], [-0.0519929267, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 21, 22, 15, 16, 23, 24, 18, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 14, 10, 6, 11, 17, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_289(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.375499994, 1.0, 2.0, 0.0], [0.114040136, 0.0, 0.0, 0.0], [-0.332499981, 3.0, 4.0, 0.0], [-0.870000005, 5.0, 6.0, 4.0], [-0.315500021, 7.0, 8.0, 0.0], [-0.944000006, 9.0, 10.0, 4.0], [0.107884109, 0.0, 0.0, 0.0], [-0.941499949, 11.0, 12.0, 4.0], [0.657000005, 13.0, 14.0, 2.0], [-0.0068940944, 0.0, 0.0, 0.0], [-0.976000011, 15.0, 16.0, 3.0], [-0.0182749834, 0.0, 0.0, 0.0], [0.609499991, 17.0, 18.0, 2.0], [0.644500017, 19.0, 20.0, 2.0], [-0.931499958, 21.0, 22.0, 4.0], [-0.21162045, 0.0, 0.0, 0.0], [-0.0280887876, 0.0, 0.0, 0.0], [0.193262756, 0.0, 0.0, 0.0], [0.0326132625, 0.0, 0.0, 0.0], [-0.00385388709, 0.0, 0.0, 0.0], [0.133545041, 0.0, 0.0, 0.0], [0.0323148146, 0.0, 0.0, 0.0], [-0.145555109, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 15, 16, 6, 11, 17, 18, 19, 20, 21, 22])
    branch_indices = np.array([0, 2, 3, 5, 10, 4, 7, 12, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_290(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.300500005, 3.0, 4.0, 0.0], [0.123448811, 0.0, 0.0, 0.0], [-0.995499969, 5.0, 6.0, 3.0], [-0.287499994, 7.0, 8.0, 0.0], [0.059433464, 0.0, 0.0, 0.0], [-0.987499952, 9.0, 10.0, 3.0], [0.0943153873, 0.0, 0.0, 0.0], [-0.956499994, 11.0, 12.0, 4.0], [-0.0384128094, 0.0, 0.0, 0.0], [-0.142684549, 0.0, 0.0, 0.0], [0.48299998, 13.0, 14.0, 2.0], [-0.941499949, 15.0, 16.0, 4.0], [0.0497380123, 0.0, 0.0, 0.0], [-0.0968977511, 0.0, 0.0, 0.0], [0.0825655162, 0.0, 0.0, 0.0], [-0.00353040756, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 10, 7, 13, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 6, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_291(xs):
    #Predicts Class 3
    function_dict = np.array([[0.503000021, 1.0, 2.0, 0.0], [0.489499986, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.479499996, 7.0, 8.0, 0.0], [-0.369813442, 0.0, 0.0, 0.0], [0.513000011, 9.0, 10.0, 0.0], [0.531499982, 11.0, 12.0, 0.0], [0.466499984, 13.0, 14.0, 0.0], [0.228379011, 0.0, 0.0, 0.0], [0.506000042, 15.0, 16.0, 0.0], [0.5255, 17.0, 18.0, 0.0], [0.134702221, 0.0, 0.0, 0.0], [-0.207683831, 0.0, 0.0, 0.0], [0.446500003, 19.0, 20.0, 0.0], [-0.274355769, 0.0, 0.0, 0.0], [0.0395764001, 0.0, 0.0, 0.0], [0.247200727, 0.0, 0.0, 0.0], [-0.187946051, 0.0, 0.0, 0.0], [0.528499961, 21.0, 22.0, 0.0], [-0.00224430393, 0.0, 0.0, 0.0], [0.119379781, 0.0, 0.0, 0.0], [0.206686094, 0.0, 0.0, 0.0], [0.0320509151, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 15, 16, 17, 21, 22, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 10, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_292(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.885499954, 3.0, 4.0, 2.0], [-0.607499957, 5.0, 6.0, 2.0], [-0.412, 7.0, 8.0, 0.0], [-0.0759000033, 9.0, 10.0, 0.0], [-0.0414500013, 11.0, 12.0, 0.0], [-0.456, 13.0, 14.0, 2.0], [-0.118265763, 0.0, 0.0, 0.0], [-0.394999981, 15.0, 16.0, 0.0], [-0.197500005, 17.0, 18.0, 0.0], [-0.0565499999, 19.0, 20.0, 0.0], [-0.148499995, 21.0, 22.0, 0.0], [-0.0225000009, 23.0, 24.0, 0.0], [-0.327000022, 25.0, 26.0, 0.0], [-0.0861999989, 27.0, 28.0, 0.0], [0.155844986, 0.0, 0.0, 0.0], [-0.380499989, 29.0, 30.0, 0.0], [-0.212500006, 31.0, 32.0, 0.0], [0.265699893, 0.0, 0.0, 0.0], [-0.0701999962, 33.0, 34.0, 0.0], [-0.0472499989, 35.0, 36.0, 0.0], [-0.186500013, 37.0, 38.0, 0.0], [-0.120499998, 39.0, 40.0, 0.0], [0.282332301, 0.0, 0.0, 0.0], [-0.997500002, 41.0, 42.0, 1.0], [-0.0839954391, 0.0, 0.0, 0.0], [-0.0641499981, 43.0, 44.0, 0.0], [-0.111724354, 0.0, 0.0, 0.0], [-0.0101277018, 0.0, 0.0, 0.0], [-0.151022777, 0.0, 0.0, 0.0], [-0.000265452312, 0.0, 0.0, 0.0], [0.243129835, 0.0, 0.0, 0.0], [-0.129625097, 0.0, 0.0, 0.0], [0.0119798053, 0.0, 0.0, 0.0], [-0.376456082, 0.0, 0.0, 0.0], [0.437546194, 0.0, 0.0, 0.0], [0.00996787008, 0.0, 0.0, 0.0], [-0.0756717548, 0.0, 0.0, 0.0], [0.19997859, 0.0, 0.0, 0.0], [-0.340496838, 0.0, 0.0, 0.0], [-0.0687545016, 0.0, 0.0, 0.0], [-0.134876639, 0.0, 0.0, 0.0], [0.130885094, 0.0, 0.0, 0.0], [0.266813666, 0.0, 0.0, 0.0], [-0.0641610771, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 29, 30, 31, 32, 18, 33, 34, 35, 36, 37, 38, 39, 40, 23, 41, 42, 25, 43, 44, 27, 28])
    branch_indices = np.array([0, 1, 3, 8, 16, 4, 9, 17, 10, 19, 20, 2, 5, 11, 21, 22, 12, 24, 6, 13, 26, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_293(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.0992273688, 0.0, 0.0, 0.0], [-0.992499948, 3.0, 4.0, 1.0], [0.415000021, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 4.0], [0.409500003, 9.0, 10.0, 0.0], [0.436500013, 11.0, 12.0, 0.0], [-0.154240966, 0.0, 0.0, 0.0], [0.0434904955, 0.0, 0.0, 0.0], [0.405499995, 13.0, 14.0, 0.0], [0.297524542, 0.0, 0.0, 0.0], [0.433499992, 15.0, 16.0, 0.0], [0.445500016, 17.0, 18.0, 0.0], [0.00963835418, 0.0, 0.0, 0.0], [-0.117491275, 0.0, 0.0, 0.0], [-0.00406376738, 0.0, 0.0, 0.0], [-0.243251666, 0.0, 0.0, 0.0], [0.301710844, 0.0, 0.0, 0.0], [-0.0137429452, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 10, 15, 16, 17, 18, 7, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 11, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_294(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [-0.946500003, 3.0, 4.0, 4.0], [-0.199499995, 5.0, 6.0, 0.0], [-0.245499998, 7.0, 8.0, 0.0], [-0.729499996, 9.0, 10.0, 1.0], [0.428499997, 11.0, 12.0, 2.0], [-0.193500012, 13.0, 14.0, 0.0], [-0.2755, 15.0, 16.0, 0.0], [-0.781499982, 17.0, 18.0, 1.0], [0.442499995, 19.0, 20.0, 2.0], [-0.232499987, 21.0, 22.0, 0.0], [-0.967499971, 23.0, 24.0, 4.0], [0.473999977, 25.0, 26.0, 2.0], [0.529500008, 27.0, 28.0, 2.0], [-0.897500038, 29.0, 30.0, 4.0], [-0.810500026, 31.0, 32.0, 1.0], [0.450500011, 33.0, 34.0, 2.0], [-0.095919542, 0.0, 0.0, 0.0], [-0.300010413, 0.0, 0.0, 0.0], [-0.778499961, 35.0, 36.0, 1.0], [-0.770500004, 37.0, 38.0, 1.0], [-0.344500005, 39.0, 40.0, 0.0], [0.127102286, 0.0, 0.0, 0.0], [-0.0223214086, 0.0, 0.0, 0.0], [0.251299053, 0.0, 0.0, 0.0], [-0.970000029, 41.0, 42.0, 4.0], [-0.863499999, 43.0, 44.0, 4.0], [-0.0156486183, 0.0, 0.0, 0.0], [-0.208246633, 0.0, 0.0, 0.0], [0.680500031, 45.0, 46.0, 2.0], [0.65199995, 47.0, 48.0, 2.0], [-0.0381418467, 0.0, 0.0, 0.0], [-0.194412827, 0.0, 0.0, 0.0], [-0.10791368, 0.0, 0.0, 0.0], [0.199432299, 0.0, 0.0, 0.0], [0.065127641, 0.0, 0.0, 0.0], [-0.126570657, 0.0, 0.0, 0.0], [0.0107782865, 0.0, 0.0, 0.0], [0.26531294, 0.0, 0.0, 0.0], [0.0908369869, 0.0, 0.0, 0.0], [-0.0801003873, 0.0, 0.0, 0.0], [0.152313203, 0.0, 0.0, 0.0], [-0.248413205, 0.0, 0.0, 0.0], [0.0987599641, 0.0, 0.0, 0.0], [-0.0796213523, 0.0, 0.0, 0.0], [-0.0484652407, 0.0, 0.0, 0.0], [0.179014683, 0.0, 0.0, 0.0], [0.175463885, 0.0, 0.0, 0.0], [-0.053332638, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([31, 32, 33, 34, 17, 18, 35, 36, 37, 38, 39, 40, 22, 23, 24, 41, 42, 43, 44, 27, 28, 45, 46, 47, 48])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 19, 20, 10, 21, 2, 5, 11, 12, 25, 26, 6, 13, 14, 29, 30])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_295(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [-0.973500013, 3.0, 4.0, 4.0], [-0.952499986, 5.0, 6.0, 3.0], [-0.824499965, 7.0, 8.0, 1.0], [-0.958500028, 9.0, 10.0, 4.0], [-0.98150003, 11.0, 12.0, 4.0], [-0.961500049, 13.0, 14.0, 4.0], [0.0316477269, 0.0, 0.0, 0.0], [0.184134141, 0.0, 0.0, 0.0], [0.553499997, 15.0, 16.0, 2.0], [-0.956499994, 17.0, 18.0, 4.0], [-0.184500009, 19.0, 20.0, 0.0], [-0.222499996, 21.0, 22.0, 0.0], [0.0634066761, 0.0, 0.0, 0.0], [-0.216894448, 0.0, 0.0, 0.0], [0.516000032, 23.0, 24.0, 2.0], [0.608500004, 25.0, 26.0, 2.0], [0.243773177, 0.0, 0.0, 0.0], [0.351999998, 27.0, 28.0, 2.0], [-0.0435647592, 0.0, 0.0, 0.0], [-0.165055439, 0.0, 0.0, 0.0], [0.46450001, 29.0, 30.0, 2.0], [-0.992499948, 31.0, 32.0, 3.0], [-0.0367447361, 0.0, 0.0, 0.0], [-0.270069569, 0.0, 0.0, 0.0], [0.144016027, 0.0, 0.0, 0.0], [-0.0716081858, 0.0, 0.0, 0.0], [-0.123090193, 0.0, 0.0, 0.0], [0.0247015022, 0.0, 0.0, 0.0], [0.00205358514, 0.0, 0.0, 0.0], [-0.143184513, 0.0, 0.0, 0.0], [-0.00140969758, 0.0, 0.0, 0.0], [0.0835243613, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 23, 24, 25, 26, 17, 27, 28, 19, 20, 29, 30, 31, 32, 13, 14])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 16, 10, 18, 2, 5, 11, 12, 21, 22, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_296(xs):
    #Predicts Class 2
    function_dict = np.array([[0.436500013, 1.0, 2.0, 2.0], [0.414499998, 3.0, 4.0, 2.0], [-0.166500002, 5.0, 6.0, 0.0], [-0.779500008, 7.0, 8.0, 1.0], [-0.173380464, 0.0, 0.0, 0.0], [-0.207500011, 9.0, 10.0, 0.0], [0.590499997, 11.0, 12.0, 2.0], [-0.139983118, 0.0, 0.0, 0.0], [-0.227499992, 13.0, 14.0, 0.0], [-0.661000013, 15.0, 16.0, 1.0], [-0.966500044, 17.0, 18.0, 4.0], [-0.889999986, 19.0, 20.0, 4.0], [-0.606999993, 21.0, 22.0, 1.0], [0.124994762, 0.0, 0.0, 0.0], [-0.1655, 23.0, 24.0, 0.0], [0.481999993, 25.0, 26.0, 2.0], [-0.966500044, 27.0, 28.0, 4.0], [0.463499993, 29.0, 30.0, 2.0], [0.529500008, 31.0, 32.0, 2.0], [0.493499994, 33.0, 34.0, 2.0], [-0.105948754, 0.0, 0.0, 0.0], [-0.202892616, 0.0, 0.0, 0.0], [-0.881500006, 35.0, 36.0, 4.0], [-0.12134055, 0.0, 0.0, 0.0], [0.123125121, 0.0, 0.0, 0.0], [0.0500133596, 0.0, 0.0, 0.0], [-0.196903855, 0.0, 0.0, 0.0], [0.128164619, 0.0, 0.0, 0.0], [-0.00398110691, 0.0, 0.0, 0.0], [0.086064361, 0.0, 0.0, 0.0], [-0.249389842, 0.0, 0.0, 0.0], [-0.0376466699, 0.0, 0.0, 0.0], [0.185431674, 0.0, 0.0, 0.0], [-0.04124723, 0.0, 0.0, 0.0], [0.148364604, 0.0, 0.0, 0.0], [-0.13440989, 0.0, 0.0, 0.0], [0.067681551, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 20, 21, 35, 36])
    branch_indices = np.array([0, 1, 3, 8, 14, 2, 5, 9, 15, 16, 10, 17, 18, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_297(xs):
    #Predicts Class 3
    function_dict = np.array([[0.36500001, 1.0, 2.0, 0.0], [0.282499999, 3.0, 4.0, 0.0], [-0.99849999, 5.0, 6.0, 1.0], [0.2755, 7.0, 8.0, 0.0], [0.341000021, 9.0, 10.0, 0.0], [0.415000021, 11.0, 12.0, 0.0], [0.475499988, 13.0, 14.0, 0.0], [0.264499992, 15.0, 16.0, 0.0], [-0.173584744, 0.0, 0.0, 0.0], [0.265882909, 0.0, 0.0, 0.0], [0.0832207799, 0.0, 0.0, 0.0], [0.409500003, 17.0, 18.0, 0.0], [0.429499984, 19.0, 20.0, 0.0], [-0.269277573, 0.0, 0.0, 0.0], [-0.00200829585, 0.0, 0.0, 0.0], [0.256500006, 21.0, 22.0, 0.0], [0.272000015, 23.0, 24.0, 0.0], [0.405499995, 25.0, 26.0, 0.0], [-0.257130116, 0.0, 0.0, 0.0], [0.425999999, 27.0, 28.0, 0.0], [0.431500018, 29.0, 30.0, 0.0], [0.001484512, 0.0, 0.0, 0.0], [-0.125770569, 0.0, 0.0, 0.0], [0.182469025, 0.0, 0.0, 0.0], [-0.0190677419, 0.0, 0.0, 0.0], [-0.0501883775, 0.0, 0.0, 0.0], [0.0921997428, 0.0, 0.0, 0.0], [0.0368307978, 0.0, 0.0, 0.0], [0.307881206, 0.0, 0.0, 0.0], [-0.233342797, 0.0, 0.0, 0.0], [0.00364591763, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 25, 26, 18, 27, 28, 29, 30, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 17, 12, 19, 20, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_298(xs):
    #Predicts Class 4
    function_dict = np.array([[0.111500002, 1.0, 2.0, 0.0], [0.0941499993, 3.0, 4.0, 0.0], [0.152999997, 5.0, 6.0, 0.0], [0.0917500034, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.254295617, 0.0, 0.0, 0.0], [0.192499995, 11.0, 12.0, 0.0], [0.0873000026, 13.0, 14.0, 0.0], [-0.185460359, 0.0, 0.0, 0.0], [0.243258014, 0.0, 0.0, 0.0], [0.0254928973, 0.0, 0.0, 0.0], [0.163619161, 0.0, 0.0, 0.0], [0.195499986, 15.0, 16.0, 0.0], [0.082949996, 17.0, 18.0, 0.0], [0.0883999988, 19.0, 20.0, 0.0], [-0.10450422, 0.0, 0.0, 0.0], [0.196500003, 21.0, 22.0, 0.0], [0.00182863465, 0.0, 0.0, 0.0], [-0.12857011, 0.0, 0.0, 0.0], [0.294936836, 0.0, 0.0, 0.0], [0.0112937856, 0.0, 0.0, 0.0], [0.167068899, 0.0, 0.0, 0.0], [-0.0419732705, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_299(xs):
    #Predicts Class 5
    function_dict = np.array([[0.36500001, 1.0, 2.0, 0.0], [0.282499999, 3.0, 4.0, 0.0], [-0.99849999, 5.0, 6.0, 1.0], [0.263000011, 7.0, 8.0, 0.0], [0.344999999, 9.0, 10.0, 0.0], [0.415000021, 11.0, 12.0, 0.0], [0.475499988, 13.0, 14.0, 0.0], [0.259499997, 15.0, 16.0, 0.0], [0.265500009, 17.0, 18.0, 0.0], [0.309499979, 19.0, 20.0, 0.0], [-0.286297351, 0.0, 0.0, 0.0], [0.409500003, 21.0, 22.0, 0.0], [0.429499984, 23.0, 24.0, 0.0], [0.270542771, 0.0, 0.0, 0.0], [0.00608847523, 0.0, 0.0, 0.0], [0.253499985, 25.0, 26.0, 0.0], [-0.146180511, 0.0, 0.0, 0.0], [0.286861271, 0.0, 0.0, 0.0], [0.272000015, 27.0, 28.0, 0.0], [-0.263510168, 0.0, 0.0, 0.0], [0.117792025, 0.0, 0.0, 0.0], [0.405499995, 29.0, 30.0, 0.0], [0.258081496, 0.0, 0.0, 0.0], [0.421999991, 31.0, 32.0, 0.0], [0.431500018, 33.0, 34.0, 0.0], [-0.0152686555, 0.0, 0.0, 0.0], [0.151945174, 0.0, 0.0, 0.0], [-0.170579195, 0.0, 0.0, 0.0], [0.139049858, 0.0, 0.0, 0.0], [0.053939525, 0.0, 0.0, 0.0], [-0.0897362381, 0.0, 0.0, 0.0], [-0.0558715425, 0.0, 0.0, 0.0], [-0.186948001, 0.0, 0.0, 0.0], [0.237109482, 0.0, 0.0, 0.0], [0.00152486109, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 27, 28, 19, 20, 10, 29, 30, 22, 31, 32, 33, 34, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 18, 4, 9, 2, 5, 11, 21, 12, 23, 24, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_300(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [0.196500003, 3.0, 4.0, 2.0], [-0.833500028, 5.0, 6.0, 4.0], [-0.0801936015, 0.0, 0.0, 0.0], [-0.923500001, 7.0, 8.0, 4.0], [-0.578999996, 9.0, 10.0, 1.0], [-0.59799999, 11.0, 12.0, 1.0], [-0.2685, 13.0, 14.0, 0.0], [-0.807500005, 15.0, 16.0, 1.0], [-0.597499967, 17.0, 18.0, 1.0], [-0.916499972, 19.0, 20.0, 3.0], [-0.672500014, 21.0, 22.0, 1.0], [0.801999986, 23.0, 24.0, 2.0], [-0.323000014, 25.0, 26.0, 0.0], [0.455500007, 27.0, 28.0, 2.0], [0.0287175663, 0.0, 0.0, 0.0], [-0.0982995927, 0.0, 0.0, 0.0], [-0.615499973, 29.0, 30.0, 1.0], [0.126534984, 0.0, 0.0, 0.0], [-0.142500013, 31.0, 32.0, 0.0], [0.0548952222, 0.0, 0.0, 0.0], [0.0659273192, 0.0, 0.0, 0.0], [-0.143841386, 0.0, 0.0, 0.0], [-0.537999988, 33.0, 34.0, 1.0], [-0.0452239998, 0.0, 0.0, 0.0], [0.0889797732, 0.0, 0.0, 0.0], [-0.0675060973, 0.0, 0.0, 0.0], [0.0438096374, 0.0, 0.0, 0.0], [0.192059457, 0.0, 0.0, 0.0], [-0.00372788333, 0.0, 0.0, 0.0], [-0.121297896, 0.0, 0.0, 0.0], [-0.211081669, 0.0, 0.0, 0.0], [0.00848970469, 0.0, 0.0, 0.0], [0.206406295, 0.0, 0.0, 0.0], [0.0379329734, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 25, 26, 27, 28, 15, 16, 29, 30, 18, 31, 32, 20, 21, 22, 33, 34, 24])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 8, 2, 5, 9, 17, 10, 19, 6, 11, 12, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_301(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.809499979, 1.0, 2.0, 1.0], [0.422500014, 3.0, 4.0, 2.0], [0.0445500016, 5.0, 6.0, 0.0], [-0.872500002, 7.0, 8.0, 1.0], [0.487500012, 9.0, 10.0, 2.0], [-0.138500005, 11.0, 12.0, 0.0], [0.107413389, 0.0, 0.0, 0.0], [-0.0826355666, 0.0, 0.0, 0.0], [0.364499986, 13.0, 14.0, 2.0], [-0.162079394, 0.0, 0.0, 0.0], [-0.988499999, 15.0, 16.0, 3.0], [0.386500001, 17.0, 18.0, 2.0], [-0.165786684, 0.0, 0.0, 0.0], [0.0762632787, 0.0, 0.0, 0.0], [-0.034488596, 0.0, 0.0, 0.0], [-0.0844977424, 0.0, 0.0, 0.0], [0.049793236, 0.0, 0.0, 0.0], [-0.946500003, 19.0, 20.0, 4.0], [-0.202500001, 21.0, 22.0, 0.0], [0.138388291, 0.0, 0.0, 0.0], [-0.0174937379, 0.0, 0.0, 0.0], [0.0173815973, 0.0, 0.0, 0.0], [-0.0576563329, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 9, 15, 16, 19, 20, 21, 22, 12, 6])
    branch_indices = np.array([0, 1, 3, 8, 4, 10, 2, 5, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_302(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.892500043, 3.0, 4.0, 3.0], [0.0956087336, 0.0, 0.0, 0.0], [-0.911499977, 5.0, 6.0, 3.0], [-0.809499979, 7.0, 8.0, 4.0], [-0.664000034, 9.0, 10.0, 4.0], [0.174711332, 0.0, 0.0, 0.0], [-0.649999976, 11.0, 12.0, 1.0], [0.0491069257, 0.0, 0.0, 0.0], [-0.712499976, 13.0, 14.0, 4.0], [-0.136559173, 0.0, 0.0, 0.0], [-0.00324210105, 0.0, 0.0, 0.0], [-0.160459995, 0.0, 0.0, 0.0], [-0.0117963348, 0.0, 0.0, 0.0], [0.121037334, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 11, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_303(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.274500012, 3.0, 4.0, 0.0], [-0.0845600888, 0.0, 0.0, 0.0], [-0.282999992, 5.0, 6.0, 0.0], [-0.267499983, 7.0, 8.0, 0.0], [-0.284500003, 9.0, 10.0, 0.0], [-0.234053448, 0.0, 0.0, 0.0], [0.202073157, 0.0, 0.0, 0.0], [-0.212500006, 11.0, 12.0, 0.0], [-0.373000026, 13.0, 14.0, 0.0], [0.0859737992, 0.0, 0.0, 0.0], [-0.106127746, 0.0, 0.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [0.0374768414, 0.0, 0.0, 0.0], [-0.0873351991, 0.0, 0.0, 0.0], [0.164369807, 0.0, 0.0, 0.0], [-0.00141701521, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 11, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_304(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.194499999, 3.0, 4.0, 0.0], [0.101578258, 0.0, 0.0, 0.0], [0.193500012, 5.0, 6.0, 0.0], [-0.103362605, 0.0, 0.0, 0.0], [0.157999992, 7.0, 8.0, 0.0], [0.154297709, 0.0, 0.0, 0.0], [0.1105, 9.0, 10.0, 0.0], [0.187999994, 11.0, 12.0, 0.0], [-0.00128985278, 0.0, 0.0, 0.0], [0.148408398, 0.0, 0.0, 0.0], [-0.229460135, 0.0, 0.0, 0.0], [0.0116436668, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_305(xs):
    #Predicts Class 5
    function_dict = np.array([[0.392499983, 1.0, 2.0, 0.0], [0.344999999, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.309499979, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.401499987, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [0.278999984, 15.0, 16.0, 0.0], [0.135129184, 0.0, 0.0, 0.0], [-0.240868717, 0.0, 0.0, 0.0], [-0.0253957361, 0.0, 0.0, 0.0], [0.172292709, 0.0, 0.0, 0.0], [0.409500003, 17.0, 18.0, 0.0], [0.521499991, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.263000011, 23.0, 24.0, 0.0], [-0.168546125, 0.0, 0.0, 0.0], [-0.13551116, 0.0, 0.0, 0.0], [0.534000039, 25.0, 26.0, 0.0], [0.236986831, 0.0, 0.0, 0.0], [0.074169606, 0.0, 0.0, 0.0], [-0.0918184817, 0.0, 0.0, 0.0], [0.087770544, 0.0, 0.0, 0.0], [-0.010587181, 0.0, 0.0, 0.0], [0.114818685, 0.0, 0.0, 0.0], [0.0291689374, 0.0, 0.0, 0.0], [-0.041221071, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 10, 11, 17, 25, 26, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 12, 18, 6, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_306(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.2095, 3.0, 4.0, 0.0], [-0.977499962, 5.0, 6.0, 4.0], [-0.135007784, 0.0, 0.0, 0.0], [-0.995499969, 7.0, 8.0, 3.0], [0.111458547, 0.0, 0.0, 0.0], [-0.973500013, 9.0, 10.0, 4.0], [-0.0395627208, 0.0, 0.0, 0.0], [0.07182955, 0.0, 0.0, 0.0], [-0.997500002, 11.0, 12.0, 3.0], [-0.996500015, 13.0, 14.0, 3.0], [0.112355016, 0.0, 0.0, 0.0], [-0.185492903, 0.0, 0.0, 0.0], [0.555999994, 15.0, 16.0, 2.0], [-0.74849999, 17.0, 18.0, 1.0], [-0.0781426281, 0.0, 0.0, 0.0], [0.0350074135, 0.0, 0.0, 0.0], [0.064617686, 0.0, 0.0, 0.0], [6.73342875e-05, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 11, 12, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_307(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.879500031, 1.0, 2.0, 3.0], [-0.654500008, 3.0, 4.0, 1.0], [-0.286000013, 5.0, 6.0, 0.0], [-0.847499967, 7.0, 8.0, 4.0], [-0.868000031, 9.0, 10.0, 4.0], [-0.142997921, 0.0, 0.0, 0.0], [0.0402549393, 0.0, 0.0, 0.0], [0.571500003, 11.0, 12.0, 2.0], [0.104263745, 0.0, 0.0, 0.0], [-0.177000001, 13.0, 14.0, 0.0], [-0.126845032, 0.0, 0.0, 0.0], [0.554499984, 15.0, 16.0, 2.0], [-0.975499988, 17.0, 18.0, 3.0], [-0.993499994, 19.0, 20.0, 3.0], [-0.118697152, 0.0, 0.0, 0.0], [-0.0121564502, 0.0, 0.0, 0.0], [0.105264634, 0.0, 0.0, 0.0], [-0.173908234, 0.0, 0.0, 0.0], [0.0510132276, 0.0, 0.0, 0.0], [0.125950933, 0.0, 0.0, 0.0], [0.018743515, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 19, 20, 14, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 9, 13, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_308(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.101500005, 3.0, 4.0, 0.0], [-0.963500023, 5.0, 6.0, 4.0], [-0.183499992, 7.0, 8.0, 0.0], [0.140878737, 0.0, 0.0, 0.0], [0.00157427369, 0.0, 0.0, 0.0], [-0.111946128, 0.0, 0.0, 0.0], [-0.186500013, 9.0, 10.0, 0.0], [-0.715499997, 11.0, 12.0, 1.0], [-0.192499995, 13.0, 14.0, 0.0], [0.2142279, 0.0, 0.0, 0.0], [-0.778499961, 15.0, 16.0, 1.0], [-0.80400002, 17.0, 18.0, 4.0], [0.00530133164, 0.0, 0.0, 0.0], [-0.194856167, 0.0, 0.0, 0.0], [0.0325420834, 0.0, 0.0, 0.0], [-0.254971623, 0.0, 0.0, 0.0], [0.0463999435, 0.0, 0.0, 0.0], [-0.142618045, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_309(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.142500013, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.139499992, 5.0, 6.0, 0.0], [-0.191500008, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.0812001526, 0.0, 0.0, 0.0], [0.5625, 11.0, 12.0, 0.0], [-0.20449999, 13.0, 14.0, 0.0], [-0.1875, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.110196993, 0.0, 0.0, 0.0], [0.561499953, 19.0, 20.0, 0.0], [0.585000038, 21.0, 22.0, 0.0], [-0.210500002, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [0.0302035231, 0.0, 0.0, 0.0], [0.127740696, 0.0, 0.0, 0.0], [-0.322135597, 0.0, 0.0, 0.0], [0.000106083935, 0.0, 0.0, 0.0], [0.549000025, 27.0, 28.0, 0.0], [0.177138641, 0.0, 0.0, 0.0], [-0.164604992, 0.0, 0.0, 0.0], [0.618499994, 29.0, 30.0, 0.0], [-0.0208937638, 0.0, 0.0, 0.0], [0.10579966, 0.0, 0.0, 0.0], [-0.17534472, 0.0, 0.0, 0.0], [0.135506138, 0.0, 0.0, 0.0], [0.00349844201, 0.0, 0.0, 0.0], [-0.0978238359, 0.0, 0.0, 0.0], [0.0678900704, 0.0, 0.0, 0.0], [-0.0447305255, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 16, 17, 18, 10, 5, 27, 28, 20, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 9, 2, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_310(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.996500015, 1.0, 2.0, 4.0], [-0.601000011, 3.0, 4.0, 2.0], [-0.0907606035, 0.0, 0.0, 0.0], [-0.613499999, 5.0, 6.0, 2.0], [-0.552000046, 7.0, 8.0, 2.0], [-0.205500007, 9.0, 10.0, 0.0], [-0.142092079, 0.0, 0.0, 0.0], [0.146872386, 0.0, 0.0, 0.0], [-0.0950499997, 11.0, 12.0, 0.0], [-0.2095, 13.0, 14.0, 0.0], [-0.16049999, 15.0, 16.0, 0.0], [-0.0820234343, 0.0, 0.0, 0.0], [0.112972856, 0.0, 0.0, 0.0], [0.00263779471, 0.0, 0.0, 0.0], [0.294850796, 0.0, 0.0, 0.0], [-0.0583597831, 0.0, 0.0, 0.0], [0.00135461008, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 7, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_311(xs):
    #Predicts Class 5
    function_dict = np.array([[0.5625, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.585000038, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.175853431, 0.0, 0.0, 0.0], [0.170365989, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.0996746197, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [0.0587310232, 0.0, 0.0, 0.0], [0.537500024, 15.0, 16.0, 0.0], [-0.0864547789, 0.0, 0.0, 0.0], [-0.0281298757, 0.0, 0.0, 0.0], [-0.0824691132, 0.0, 0.0, 0.0], [-0.0056859795, 0.0, 0.0, 0.0], [0.0886885896, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 13, 14, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_312(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.244500011, 3.0, 4.0, 0.0], [0.433499992, 5.0, 6.0, 2.0], [-0.130363032, 0.0, 0.0, 0.0], [-0.184500009, 7.0, 8.0, 0.0], [0.184444994, 0.0, 0.0, 0.0], [-0.980499983, 9.0, 10.0, 4.0], [-0.972499967, 11.0, 12.0, 4.0], [-0.0961499959, 13.0, 14.0, 0.0], [0.103609934, 0.0, 0.0, 0.0], [0.462500006, 15.0, 16.0, 2.0], [-0.0579746515, 0.0, 0.0, 0.0], [-0.228500009, 17.0, 18.0, 0.0], [-0.861500025, 19.0, 20.0, 1.0], [0.0651775301, 0.0, 0.0, 0.0], [-0.190499991, 21.0, 22.0, 0.0], [-0.102499999, 23.0, 24.0, 0.0], [-0.0229591019, 0.0, 0.0, 0.0], [0.141065672, 0.0, 0.0, 0.0], [-0.020560449, 0.0, 0.0, 0.0], [-0.17033194, 0.0, 0.0, 0.0], [-0.131978497, 0.0, 0.0, 0.0], [0.0650494471, 0.0, 0.0, 0.0], [0.0112823956, 0.0, 0.0, 0.0], [-0.0717906505, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 17, 18, 19, 20, 14, 5, 9, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 4, 7, 12, 8, 13, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_313(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.192499995, 1.0, 2.0, 0.0], [-0.193500012, 3.0, 4.0, 0.0], [-0.983500004, 5.0, 6.0, 4.0], [-0.199499995, 7.0, 8.0, 0.0], [-0.19216074, 0.0, 0.0, 0.0], [-0.128078997, 0.0, 0.0, 0.0], [-0.969500005, 9.0, 10.0, 4.0], [-0.202500001, 11.0, 12.0, 0.0], [0.471000016, 13.0, 14.0, 2.0], [-0.130999997, 15.0, 16.0, 0.0], [-0.182500005, 17.0, 18.0, 0.0], [-0.218499988, 19.0, 20.0, 0.0], [-0.20323883, 0.0, 0.0, 0.0], [0.165707156, 0.0, 0.0, 0.0], [0.0246335194, 0.0, 0.0, 0.0], [0.19140327, 0.0, 0.0, 0.0], [0.0034623805, 0.0, 0.0, 0.0], [-0.739499986, 21.0, 22.0, 1.0], [-0.989500046, 23.0, 24.0, 3.0], [-0.00813786872, 0.0, 0.0, 0.0], [0.0493307486, 0.0, 0.0, 0.0], [0.0207516607, 0.0, 0.0, 0.0], [0.17941159, 0.0, 0.0, 0.0], [-0.129901931, 0.0, 0.0, 0.0], [0.0484611876, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 15, 16, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_314(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.490500003, 3.0, 4.0, 1.0], [-0.4745, 5.0, 6.0, 1.0], [-0.999500036, 7.0, 8.0, 3.0], [-0.17987673, 0.0, 0.0, 0.0], [0.215943113, 0.0, 0.0, 0.0], [-0.456499994, 9.0, 10.0, 1.0], [-0.17050001, 11.0, 12.0, 0.0], [-0.503499985, 13.0, 14.0, 1.0], [-0.129076391, 0.0, 0.0, 0.0], [-0.233500004, 15.0, 16.0, 0.0], [-0.184577972, 0.0, 0.0, 0.0], [0.000233730709, 0.0, 0.0, 0.0], [-0.526499987, 17.0, 18.0, 1.0], [0.149483949, 0.0, 0.0, 0.0], [-0.299499989, 19.0, 20.0, 0.0], [-0.959499955, 21.0, 22.0, 4.0], [0.00924338028, 0.0, 0.0, 0.0], [-0.093172431, 0.0, 0.0, 0.0], [0.0661320239, 0.0, 0.0, 0.0], [-0.0812602118, 0.0, 0.0, 0.0], [0.0130822323, 0.0, 0.0, 0.0], [0.168767557, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 17, 18, 14, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 8, 13, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_315(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0968500003, 1.0, 2.0, 0.0], [-0.0987499952, 3.0, 4.0, 0.0], [-0.0963499993, 5.0, 6.0, 0.0], [-0.104499996, 7.0, 8.0, 0.0], [-0.319913983, 0.0, 0.0, 0.0], [0.459657669, 0.0, 0.0, 0.0], [-0.0922500044, 9.0, 10.0, 0.0], [-0.1105, 11.0, 12.0, 0.0], [-0.102499999, 13.0, 14.0, 0.0], [-0.272481412, 0.0, 0.0, 0.0], [-0.0914499983, 15.0, 16.0, 0.0], [-0.113499999, 17.0, 18.0, 0.0], [-0.1065, 19.0, 20.0, 0.0], [0.205802143, 0.0, 0.0, 0.0], [-0.101500005, 21.0, 22.0, 0.0], [0.430072665, 0.0, 0.0, 0.0], [-0.0910999998, 23.0, 24.0, 0.0], [-0.00837885495, 0.0, 0.0, 0.0], [0.174274251, 0.0, 0.0, 0.0], [-0.283205003, 0.0, 0.0, 0.0], [-0.0164743997, 0.0, 0.0, 0.0], [-0.0740709081, 0.0, 0.0, 0.0], [0.0486600772, 0.0, 0.0, 0.0], [-0.312744886, 0.0, 0.0, 0.0], [0.00359431538, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 21, 22, 4, 5, 9, 15, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_316(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0945499986, 1.0, 2.0, 0.0], [0.0850500017, 3.0, 4.0, 0.0], [0.1105, 5.0, 6.0, 0.0], [0.082949996, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.20105873, 0.0, 0.0, 0.0], [0.127499998, 11.0, 12.0, 0.0], [0.0757500008, 13.0, 14.0, 0.0], [-0.29810068, 0.0, 0.0, 0.0], [0.0892499983, 15.0, 16.0, 0.0], [0.332342207, 0.0, 0.0, 0.0], [0.174938112, 0.0, 0.0, 0.0], [0.152999997, 17.0, 18.0, 0.0], [0.0476500019, 19.0, 20.0, 0.0], [0.210771218, 0.0, 0.0, 0.0], [0.0883999988, 21.0, 22.0, 0.0], [0.0917500034, 23.0, 24.0, 0.0], [-0.190826267, 0.0, 0.0, 0.0], [0.192499995, 25.0, 26.0, 0.0], [0.0033538267, 0.0, 0.0, 0.0], [-0.121425621, 0.0, 0.0, 0.0], [0.100018211, 0.0, 0.0, 0.0], [-0.251936525, 0.0, 0.0, 0.0], [0.153405041, 0.0, 0.0, 0.0], [0.0183993094, 0.0, 0.0, 0.0], [0.138459831, 0.0, 0.0, 0.0], [-0.0198740438, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 21, 22, 23, 24, 10, 5, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 15, 16, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_317(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [0.557999969, 7.0, 8.0, 0.0], [-0.137867376, 0.0, 0.0, 0.0], [0.620499969, 9.0, 10.0, 0.0], [0.22515896, 0.0, 0.0, 0.0], [0.556499958, 11.0, 12.0, 0.0], [0.0899742842, 0.0, 0.0, 0.0], [0.0682908073, 0.0, 0.0, 0.0], [-0.0930946022, 0.0, 0.0, 0.0], [0.541499972, 13.0, 14.0, 0.0], [-0.1399737, 0.0, 0.0, 0.0], [-0.00419049384, 0.0, 0.0, 0.0], [0.0888204277, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_318(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.813500047, 1.0, 2.0, 1.0], [-0.979499996, 3.0, 4.0, 4.0], [0.338, 5.0, 6.0, 2.0], [-0.0446122587, 0.0, 0.0, 0.0], [0.487500012, 7.0, 8.0, 2.0], [-0.113463096, 0.0, 0.0, 0.0], [-0.972499967, 9.0, 10.0, 3.0], [-0.859500051, 11.0, 12.0, 1.0], [0.538499951, 13.0, 14.0, 2.0], [-0.976500034, 15.0, 16.0, 3.0], [-0.2315, 17.0, 18.0, 0.0], [-0.0155758411, 0.0, 0.0, 0.0], [-0.824499965, 19.0, 20.0, 1.0], [-0.0657657087, 0.0, 0.0, 0.0], [0.0616652668, 0.0, 0.0, 0.0], [-0.98150003, 21.0, 22.0, 3.0], [0.569499969, 23.0, 24.0, 2.0], [-0.955500007, 25.0, 26.0, 3.0], [-0.20449999, 27.0, 28.0, 0.0], [0.204142809, 0.0, 0.0, 0.0], [0.00245870068, 0.0, 0.0, 0.0], [-0.0157758221, 0.0, 0.0, 0.0], [0.0836135969, 0.0, 0.0, 0.0], [-0.0311035663, 0.0, 0.0, 0.0], [-0.142616078, 0.0, 0.0, 0.0], [0.0750971362, 0.0, 0.0, 0.0], [-0.0784828588, 0.0, 0.0, 0.0], [0.155972898, 0.0, 0.0, 0.0], [0.00861599296, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 19, 20, 13, 14, 5, 21, 22, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 4, 7, 12, 8, 2, 6, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_319(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.8125, 1.0, 2.0, 1.0], [-0.208499998, 3.0, 4.0, 0.0], [0.338, 5.0, 6.0, 2.0], [-0.272500008, 7.0, 8.0, 0.0], [-0.965499997, 9.0, 10.0, 4.0], [-0.98150003, 11.0, 12.0, 4.0], [0.361499995, 13.0, 14.0, 2.0], [0.516000032, 15.0, 16.0, 2.0], [-0.149513885, 0.0, 0.0, 0.0], [-0.0650561675, 0.0, 0.0, 0.0], [0.0665434077, 0.0, 0.0, 0.0], [-0.0797319114, 0.0, 0.0, 0.0], [0.153282925, 0.0, 0.0, 0.0], [-0.126223385, 0.0, 0.0, 0.0], [0.386500001, 17.0, 18.0, 2.0], [-0.0633228198, 0.0, 0.0, 0.0], [0.0475217104, 0.0, 0.0, 0.0], [0.167465016, 0.0, 0.0, 0.0], [0.0609500036, 19.0, 20.0, 0.0], [-0.0052691428, 0.0, 0.0, 0.0], [0.115748659, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 9, 10, 11, 12, 13, 17, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 4, 2, 5, 6, 14, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_320(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.558500051, 1.0, 2.0, 1.0], [-0.24849999, 3.0, 4.0, 0.0], [0.673500001, 5.0, 6.0, 2.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.891499996, 9.0, 10.0, 4.0], [0.66050005, 11.0, 12.0, 2.0], [0.684499979, 13.0, 14.0, 2.0], [0.0143559491, 0.0, 0.0, 0.0], [-0.210583717, 0.0, 0.0, 0.0], [-0.596500039, 15.0, 16.0, 1.0], [-0.818499982, 17.0, 18.0, 4.0], [-0.953500032, 19.0, 20.0, 3.0], [0.182347208, 0.0, 0.0, 0.0], [-0.175148889, 0.0, 0.0, 0.0], [0.718500018, 21.0, 22.0, 2.0], [-0.628000021, 23.0, 24.0, 1.0], [-0.95599997, 25.0, 26.0, 4.0], [-0.615999997, 27.0, 28.0, 1.0], [-0.592999995, 29.0, 30.0, 1.0], [-0.997500002, 31.0, 32.0, 3.0], [-0.445500016, 33.0, 34.0, 1.0], [0.0982755199, 0.0, 0.0, 0.0], [0.735499978, 35.0, 36.0, 2.0], [0.0252074264, 0.0, 0.0, 0.0], [-0.191383153, 0.0, 0.0, 0.0], [-0.0386301279, 0.0, 0.0, 0.0], [0.2376149, 0.0, 0.0, 0.0], [-0.221626803, 0.0, 0.0, 0.0], [-0.0523116179, 0.0, 0.0, 0.0], [0.100431859, 0.0, 0.0, 0.0], [-0.127012968, 0.0, 0.0, 0.0], [-0.0509247556, 0.0, 0.0, 0.0], [0.111746885, 0.0, 0.0, 0.0], [-0.121676929, 0.0, 0.0, 0.0], [0.00690526282, 0.0, 0.0, 0.0], [-0.143215567, 0.0, 0.0, 0.0], [0.0462788604, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 12, 13, 21, 35, 36])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 16, 10, 17, 18, 2, 5, 11, 19, 20, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_321(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.273499995, 1.0, 2.0, 0.0], [-0.276499987, 3.0, 4.0, 0.0], [-0.254500002, 5.0, 6.0, 0.0], [-0.296499997, 7.0, 8.0, 0.0], [0.194652215, 0.0, 0.0, 0.0], [-0.194844872, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.297500014, 11.0, 12.0, 0.0], [-0.0508029908, 0.0, 0.0, 0.0], [-0.249500006, 13.0, 14.0, 0.0], [-0.432500005, 15.0, 16.0, 2.0], [-0.822000027, 17.0, 18.0, 2.0], [0.150716588, 0.0, 0.0, 0.0], [0.120793387, 0.0, 0.0, 0.0], [-0.210500002, 19.0, 20.0, 0.0], [-0.140533581, 0.0, 0.0, 0.0], [-0.013212502, 0.0, 0.0, 0.0], [-0.0657504946, 0.0, 0.0, 0.0], [0.0513016246, 0.0, 0.0, 0.0], [-0.141225278, 0.0, 0.0, 0.0], [0.00160263956, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 19, 20, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_322(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00463499967, 1.0, 2.0, 0.0], [-0.0052199997, 3.0, 4.0, 0.0], [-0.00390999997, 5.0, 6.0, 0.0], [-0.00550500024, 7.0, 8.0, 0.0], [-0.295924038, 0.0, 0.0, 0.0], [0.327581227, 0.0, 0.0, 0.0], [-0.00209000008, 9.0, 10.0, 0.0], [-0.00885999948, 11.0, 12.0, 0.0], [0.35028246, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.0101999994, 15.0, 16.0, 0.0], [-0.0101749999, 17.0, 18.0, 0.0], [-0.257963508, 0.0, 0.0, 0.0], [-0.243367285, 0.0, 0.0, 0.0], [-0.0224601459, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [0.0256000012, 21.0, 22.0, 0.0], [-0.00813364424, 0.0, 0.0, 0.0], [0.283508956, 0.0, 0.0, 0.0], [0.00395441661, 0.0, 0.0, 0.0], [0.275432169, 0.0, 0.0, 0.0], [-0.109171368, 0.0, 0.0, 0.0], [0.0178288091, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_323(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.509500027, 7.0, 8.0, 0.0], [0.522500038, 9.0, 10.0, 0.0], [0.107674755, 0.0, 0.0, 0.0], [-0.0277167987, 0.0, 0.0, 0.0], [0.503000021, 11.0, 12.0, 0.0], [0.18833749, 0.0, 0.0, 0.0], [-0.209327072, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.489499986, 15.0, 16.0, 0.0], [-0.123952702, 0.0, 0.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.190288201, 0.0, 0.0, 0.0], [-0.001332607, 0.0, 0.0, 0.0], [0.312279552, 0.0, 0.0, 0.0], [-0.0149921887, 0.0, 0.0, 0.0], [0.234514311, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 9, 17, 18, 14, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 10, 13, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_324(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.615499973, 1.0, 2.0, 1.0], [0.636500001, 3.0, 4.0, 2.0], [-0.597499967, 5.0, 6.0, 1.0], [0.628499985, 7.0, 8.0, 2.0], [-0.944999993, 9.0, 10.0, 4.0], [-0.205500007, 11.0, 12.0, 0.0], [-0.250499994, 13.0, 14.0, 0.0], [-0.973500013, 15.0, 16.0, 4.0], [-0.177459314, 0.0, 0.0, 0.0], [-0.713, 17.0, 18.0, 1.0], [-0.847499967, 19.0, 20.0, 4.0], [-0.233208597, 0.0, 0.0, 0.0], [0.0225373637, 0.0, 0.0, 0.0], [0.661000013, 21.0, 22.0, 2.0], [0.678499997, 23.0, 24.0, 2.0], [-0.767500043, 25.0, 26.0, 1.0], [-0.0948999971, 27.0, 28.0, 0.0], [-0.165005192, 0.0, 0.0, 0.0], [0.00625428185, 0.0, 0.0, 0.0], [-0.98300004, 29.0, 30.0, 3.0], [-0.024036238, 0.0, 0.0, 0.0], [0.00542848231, 0.0, 0.0, 0.0], [-0.128525674, 0.0, 0.0, 0.0], [-0.861000001, 31.0, 32.0, 4.0], [-0.712499976, 33.0, 34.0, 4.0], [0.00541147217, 0.0, 0.0, 0.0], [-0.162938744, 0.0, 0.0, 0.0], [0.0104915313, 0.0, 0.0, 0.0], [0.11889182, 0.0, 0.0, 0.0], [0.270795614, 0.0, 0.0, 0.0], [0.0569374524, 0.0, 0.0, 0.0], [-0.123073176, 0.0, 0.0, 0.0], [0.0831014216, 0.0, 0.0, 0.0], [0.138889164, 0.0, 0.0, 0.0], [-0.0782311261, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 17, 18, 29, 30, 20, 11, 12, 21, 22, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 10, 19, 2, 5, 6, 13, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_325(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.276499987, 1.0, 2.0, 0.0], [-0.879999995, 3.0, 4.0, 3.0], [-0.256500006, 5.0, 6.0, 0.0], [-0.323500007, 7.0, 8.0, 0.0], [-0.10682857, 0.0, 0.0, 0.0], [-0.938500047, 9.0, 10.0, 4.0], [-0.993499994, 11.0, 12.0, 3.0], [-0.365500003, 13.0, 14.0, 0.0], [-0.953500032, 15.0, 16.0, 4.0], [-0.270500004, 17.0, 18.0, 0.0], [-0.198215887, 0.0, 0.0, 0.0], [-0.995499969, 19.0, 20.0, 3.0], [-0.210500002, 21.0, 22.0, 0.0], [0.0853218436, 0.0, 0.0, 0.0], [-0.60650003, 23.0, 24.0, 1.0], [-0.0470075496, 0.0, 0.0, 0.0], [-0.895500004, 25.0, 26.0, 4.0], [-0.133806378, 0.0, 0.0, 0.0], [0.1010902, 0.0, 0.0, 0.0], [0.476500005, 27.0, 28.0, 2.0], [-0.96449995, 29.0, 30.0, 4.0], [-0.801499963, 31.0, 32.0, 1.0], [-0.977499962, 33.0, 34.0, 3.0], [-0.0923156813, 0.0, 0.0, 0.0], [0.0299444031, 0.0, 0.0, 0.0], [0.182719305, 0.0, 0.0, 0.0], [-0.0296931043, 0.0, 0.0, 0.0], [0.0500847846, 0.0, 0.0, 0.0], [-0.0586909205, 0.0, 0.0, 0.0], [0.0915038809, 0.0, 0.0, 0.0], [-0.20964694, 0.0, 0.0, 0.0], [-0.117583044, 0.0, 0.0, 0.0], [0.0902018324, 0.0, 0.0, 0.0], [0.0518210344, 0.0, 0.0, 0.0], [-0.121958695, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 23, 24, 15, 25, 26, 4, 17, 18, 10, 27, 28, 29, 30, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 16, 2, 5, 9, 6, 11, 19, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_326(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.179500014, 3.0, 4.0, 0.0], [-0.756500006, 5.0, 6.0, 1.0], [-0.798500001, 7.0, 8.0, 1.0], [-0.131338581, 0.0, 0.0, 0.0], [0.107372902, 0.0, 0.0, 0.0], [-0.743499994, 9.0, 10.0, 1.0], [0.0693310499, 0.0, 0.0, 0.0], [-0.0766032636, 0.0, 0.0, 0.0], [-0.105915643, 0.0, 0.0, 0.0], [-0.713500023, 11.0, 12.0, 1.0], [-0.995499969, 13.0, 14.0, 3.0], [-0.700500011, 15.0, 16.0, 1.0], [-0.0679644868, 0.0, 0.0, 0.0], [0.139006928, 0.0, 0.0, 0.0], [-0.165831968, 0.0, 0.0, 0.0], [0.00110343331, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_327(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0307, 1.0, 2.0, 0.0], [-0.0339000002, 3.0, 4.0, 0.0], [-0.0250499994, 5.0, 6.0, 0.0], [-0.0382499993, 7.0, 8.0, 0.0], [-0.42490229, 0.0, 0.0, 0.0], [-0.0293500014, 9.0, 10.0, 0.0], [-0.0238499995, 11.0, 12.0, 0.0], [-0.0394999981, 13.0, 14.0, 0.0], [0.273556113, 0.0, 0.0, 0.0], [0.0567440204, 0.0, 0.0, 0.0], [0.27972579, 0.0, 0.0, 0.0], [-0.40342623, 0.0, 0.0, 0.0], [-0.0156999994, 15.0, 16.0, 0.0], [-0.0413499996, 17.0, 18.0, 0.0], [-0.369477153, 0.0, 0.0, 0.0], [0.313990146, 0.0, 0.0, 0.0], [-0.0150499996, 19.0, 20.0, 0.0], [-0.00433085812, 0.0, 0.0, 0.0], [0.22055915, 0.0, 0.0, 0.0], [-0.28477627, 0.0, 0.0, 0.0], [0.000799269066, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_328(xs):
    #Predicts Class 4
    function_dict = np.array([[0.111500002, 1.0, 2.0, 0.0], [0.0941499993, 3.0, 4.0, 0.0], [0.152999997, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.143280715, 0.0, 0.0, 0.0], [-0.225407705, 0.0, 0.0, 0.0], [0.192499995, 9.0, 10.0, 0.0], [0.0873000026, 11.0, 12.0, 0.0], [0.0912000015, 13.0, 14.0, 0.0], [0.090044789, 0.0, 0.0, 0.0], [0.195499986, 15.0, 16.0, 0.0], [0.0854000002, 17.0, 18.0, 0.0], [0.147651881, 0.0, 0.0, 0.0], [-0.268091083, 0.0, 0.0, 0.0], [-0.0217268616, 0.0, 0.0, 0.0], [-0.0918531194, 0.0, 0.0, 0.0], [0.196500003, 19.0, 20.0, 0.0], [0.00226400839, 0.0, 0.0, 0.0], [-0.151060149, 0.0, 0.0, 0.0], [0.151306167, 0.0, 0.0, 0.0], [-0.0358007401, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_329(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.851999998, 3.0, 4.0, 2.0], [0.00518500013, 5.0, 6.0, 0.0], [-0.0123999994, 7.0, 8.0, 0.0], [-0.146151841, 0.0, 0.0, 0.0], [-0.193500012, 9.0, 10.0, 0.0], [0.527500033, 11.0, 12.0, 0.0], [-0.0331500024, 13.0, 14.0, 0.0], [0.201499999, 15.0, 16.0, 0.0], [-0.601000011, 17.0, 18.0, 2.0], [-0.997500002, 19.0, 20.0, 1.0], [-0.992499948, 21.0, 22.0, 1.0], [0.55250001, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [0.225876927, 0.0, 0.0, 0.0], [-0.243046701, 0.0, 0.0, 0.0], [0.260500014, 27.0, 28.0, 0.0], [-0.923500001, 29.0, 30.0, 2.0], [-0.0775972009, 0.0, 0.0, 0.0], [-0.271468282, 0.0, 0.0, 0.0], [-0.0125978515, 0.0, 0.0, 0.0], [-0.747500002, 31.0, 32.0, 2.0], [-0.0876757503, 0.0, 0.0, 0.0], [-0.191280946, 0.0, 0.0, 0.0], [0.0597265065, 0.0, 0.0, 0.0], [-0.00549140107, 0.0, 0.0, 0.0], [0.165717661, 0.0, 0.0, 0.0], [0.0623826906, 0.0, 0.0, 0.0], [-0.0196409244, 0.0, 0.0, 0.0], [-0.0265923552, 0.0, 0.0, 0.0], [0.169482872, 0.0, 0.0, 0.0], [0.137055486, 0.0, 0.0, 0.0], [-0.0378165729, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 14, 15, 27, 28, 4, 29, 30, 18, 19, 20, 31, 32, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 17, 10, 6, 11, 21, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_330(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 1.0], [-0.988499999, 3.0, 4.0, 3.0], [-0.178499997, 5.0, 6.0, 0.0], [-0.300500005, 7.0, 8.0, 0.0], [0.597499967, 9.0, 10.0, 2.0], [-0.933500051, 11.0, 12.0, 4.0], [-0.139499992, 13.0, 14.0, 0.0], [0.621500015, 15.0, 16.0, 2.0], [-0.189500004, 17.0, 18.0, 0.0], [-0.245499998, 19.0, 20.0, 0.0], [-0.746999979, 21.0, 22.0, 1.0], [-0.201936215, 0.0, 0.0, 0.0], [-0.989500046, 23.0, 24.0, 3.0], [-0.569499969, 25.0, 26.0, 1.0], [-0.914000034, 27.0, 28.0, 4.0], [-0.00893698167, 0.0, 0.0, 0.0], [-0.164909467, 0.0, 0.0, 0.0], [-0.697000027, 29.0, 30.0, 1.0], [-0.997500002, 31.0, 32.0, 3.0], [-0.958000004, 33.0, 34.0, 3.0], [-0.772000015, 35.0, 36.0, 1.0], [-0.0401217304, 0.0, 0.0, 0.0], [-0.850000024, 37.0, 38.0, 4.0], [-0.858500004, 39.0, 40.0, 4.0], [-0.978500009, 41.0, 42.0, 3.0], [0.175598145, 0.0, 0.0, 0.0], [-0.810500026, 43.0, 44.0, 4.0], [0.0456474051, 0.0, 0.0, 0.0], [-0.118500002, 45.0, 46.0, 0.0], [0.0573423132, 0.0, 0.0, 0.0], [-0.0521441512, 0.0, 0.0, 0.0], [0.041890908, 0.0, 0.0, 0.0], [-0.111269131, 0.0, 0.0, 0.0], [0.161153316, 0.0, 0.0, 0.0], [-0.038903527, 0.0, 0.0, 0.0], [0.0655771047, 0.0, 0.0, 0.0], [-0.0879026651, 0.0, 0.0, 0.0], [0.207433611, 0.0, 0.0, 0.0], [0.0257861, 0.0, 0.0, 0.0], [0.134561881, 0.0, 0.0, 0.0], [-0.0361185335, 0.0, 0.0, 0.0], [-0.166895419, 0.0, 0.0, 0.0], [-0.00648297416, 0.0, 0.0, 0.0], [-0.0542271808, 0.0, 0.0, 0.0], [0.0923636034, 0.0, 0.0, 0.0], [-0.14786391, 0.0, 0.0, 0.0], [-0.0336541682, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 29, 30, 31, 32, 33, 34, 35, 36, 21, 37, 38, 11, 39, 40, 41, 42, 25, 43, 44, 27, 45, 46])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 18, 4, 9, 19, 20, 10, 22, 2, 5, 12, 23, 24, 6, 13, 26, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_331(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.74849999, 1.0, 2.0, 1.0], [-0.228500009, 3.0, 4.0, 0.0], [-0.739500046, 5.0, 6.0, 1.0], [-0.946500003, 7.0, 8.0, 4.0], [-0.212500006, 9.0, 10.0, 0.0], [-0.226500005, 11.0, 12.0, 0.0], [-0.734500051, 13.0, 14.0, 1.0], [-0.804499984, 15.0, 16.0, 1.0], [-0.317499995, 17.0, 18.0, 0.0], [-0.791499972, 19.0, 20.0, 1.0], [0.449499995, 21.0, 22.0, 2.0], [0.164255261, 0.0, 0.0, 0.0], [0.0354059637, 0.0, 0.0, 0.0], [-0.111201487, 0.0, 0.0, 0.0], [-0.718500018, 23.0, 24.0, 1.0], [0.401000023, 25.0, 26.0, 2.0], [-0.261000007, 27.0, 28.0, 0.0], [0.101175718, 0.0, 0.0, 0.0], [0.442000002, 29.0, 30.0, 2.0], [-0.801499963, 31.0, 32.0, 1.0], [-0.2612831, 0.0, 0.0, 0.0], [-0.17750001, 33.0, 34.0, 0.0], [-0.961500049, 35.0, 36.0, 4.0], [-0.236999989, 37.0, 38.0, 0.0], [-0.70449996, 39.0, 40.0, 1.0], [0.0785942227, 0.0, 0.0, 0.0], [-0.103499055, 0.0, 0.0, 0.0], [0.0249863286, 0.0, 0.0, 0.0], [0.225717142, 0.0, 0.0, 0.0], [0.0139538767, 0.0, 0.0, 0.0], [-0.168981135, 0.0, 0.0, 0.0], [-0.117238976, 0.0, 0.0, 0.0], [0.0702812001, 0.0, 0.0, 0.0], [-0.128292814, 0.0, 0.0, 0.0], [0.0116818827, 0.0, 0.0, 0.0], [0.132606402, 0.0, 0.0, 0.0], [-0.0138577251, 0.0, 0.0, 0.0], [0.000892604119, 0.0, 0.0, 0.0], [0.154193103, 0.0, 0.0, 0.0], [-0.0965711102, 0.0, 0.0, 0.0], [0.0157481041, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 17, 29, 30, 31, 32, 20, 33, 34, 35, 36, 11, 12, 13, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 9, 19, 10, 21, 22, 2, 5, 6, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_332(xs):
    #Predicts Class 2
    function_dict = np.array([[0.801499963, 1.0, 2.0, 2.0], [-0.24849999, 3.0, 4.0, 0.0], [-0.534500003, 5.0, 6.0, 1.0], [0.530499995, 7.0, 8.0, 2.0], [-0.232499987, 9.0, 10.0, 0.0], [-0.0135869626, 0.0, 0.0, 0.0], [0.11836879, 0.0, 0.0, 0.0], [-0.573000014, 11.0, 12.0, 1.0], [-0.884500027, 13.0, 14.0, 4.0], [-0.662500024, 15.0, 16.0, 1.0], [-0.486499995, 17.0, 18.0, 1.0], [-0.0864693671, 0.0, 0.0, 0.0], [0.16531752, 0.0, 0.0, 0.0], [-0.953500032, 19.0, 20.0, 4.0], [-0.835999966, 21.0, 22.0, 4.0], [-0.0273322482, 0.0, 0.0, 0.0], [-0.626999974, 23.0, 24.0, 1.0], [-0.575500011, 25.0, 26.0, 1.0], [-0.985499978, 27.0, 28.0, 3.0], [0.0171735063, 0.0, 0.0, 0.0], [-0.19333525, 0.0, 0.0, 0.0], [0.127853259, 0.0, 0.0, 0.0], [-0.0598841272, 0.0, 0.0, 0.0], [0.212741464, 0.0, 0.0, 0.0], [0.0333819315, 0.0, 0.0, 0.0], [-0.0040599918, 0.0, 0.0, 0.0], [-0.0850015357, 0.0, 0.0, 0.0], [0.155442312, 0.0, 0.0, 0.0], [-0.0176212229, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 19, 20, 21, 22, 15, 23, 24, 25, 26, 27, 28, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 13, 14, 4, 9, 16, 10, 17, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_333(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.795000017, 3.0, 4.0, 2.0], [-0.654500008, 5.0, 6.0, 2.0], [-0.999500036, 7.0, 8.0, 3.0], [0.10282255, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.208499998, 11.0, 12.0, 0.0], [-0.20449999, 13.0, 14.0, 0.0], [-0.0897344276, 0.0, 0.0, 0.0], [-0.726000011, 15.0, 16.0, 2.0], [-0.99849999, 17.0, 18.0, 1.0], [0.0833414942, 0.0, 0.0, 0.0], [-0.644500017, 19.0, 20.0, 2.0], [-0.274500012, 21.0, 22.0, 0.0], [-0.193500012, 23.0, 24.0, 0.0], [-0.0485421456, 0.0, 0.0, 0.0], [0.134454742, 0.0, 0.0, 0.0], [-0.0339000002, 25.0, 26.0, 0.0], [-0.268266946, 0.0, 0.0, 0.0], [0.0895125866, 0.0, 0.0, 0.0], [-0.0580499992, 27.0, 28.0, 0.0], [-0.00981626939, 0.0, 0.0, 0.0], [0.102953054, 0.0, 0.0, 0.0], [-0.180587724, 0.0, 0.0, 0.0], [0.0018568181, 0.0, 0.0, 0.0], [-0.0987992138, 0.0, 0.0, 0.0], [0.0731152445, 0.0, 0.0, 0.0], [-0.133556202, 0.0, 0.0, 0.0], [0.00400189776, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 4, 15, 16, 25, 26, 18, 11, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 10, 17, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_334(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.0945499986, 3.0, 4.0, 0.0], [0.0831943974, 0.0, 0.0, 0.0], [0.0912000015, 5.0, 6.0, 0.0], [0.1105, 7.0, 8.0, 0.0], [0.0888999999, 9.0, 10.0, 0.0], [0.0923999995, 11.0, 12.0, 0.0], [-0.200048894, 0.0, 0.0, 0.0], [0.157999992, 13.0, 14.0, 0.0], [0.0825999975, 15.0, 16.0, 0.0], [-0.104298703, 0.0, 0.0, 0.0], [0.14647761, 0.0, 0.0, 0.0], [0.0260528792, 0.0, 0.0, 0.0], [0.12650001, 17.0, 18.0, 0.0], [0.190499991, 19.0, 20.0, 0.0], [-0.00175564853, 0.0, 0.0, 0.0], [0.0802079067, 0.0, 0.0, 0.0], [0.155476183, 0.0, 0.0, 0.0], [0.0515795425, 0.0, 0.0, 0.0], [-0.237042531, 0.0, 0.0, 0.0], [0.0105193499, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 11, 12, 7, 17, 18, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_335(xs):
    #Predicts Class 5
    function_dict = np.array([[0.392499983, 1.0, 2.0, 0.0], [0.273999989, 3.0, 4.0, 0.0], [0.428499997, 5.0, 6.0, 0.0], [0.263000011, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.42049998, 11.0, 12.0, 0.0], [0.432500005, 13.0, 14.0, 0.0], [0.228500009, 15.0, 16.0, 0.0], [0.160321921, 0.0, 0.0, 0.0], [0.276499987, 17.0, 18.0, 0.0], [0.344999999, 19.0, 20.0, 0.0], [0.415000021, 21.0, 22.0, 0.0], [0.213204354, 0.0, 0.0, 0.0], [-0.181565106, 0.0, 0.0, 0.0], [0.433499992, 23.0, 24.0, 0.0], [-0.98150003, 25.0, 26.0, 1.0], [-0.999500036, 27.0, 28.0, 4.0], [-0.0441288687, 0.0, 0.0, 0.0], [-0.307048261, 0.0, 0.0, 0.0], [0.14882578, 0.0, 0.0, 0.0], [-0.0451490022, 0.0, 0.0, 0.0], [0.406499982, 29.0, 30.0, 0.0], [-0.132144853, 0.0, 0.0, 0.0], [0.258460253, 0.0, 0.0, 0.0], [0.436500013, 31.0, 32.0, 0.0], [0.0110844346, 0.0, 0.0, 0.0], [-0.126285329, 0.0, 0.0, 0.0], [0.00693921652, 0.0, 0.0, 0.0], [-0.314282328, 0.0, 0.0, 0.0], [0.0492608994, 0.0, 0.0, 0.0], [0.18886593, 0.0, 0.0, 0.0], [-0.182385609, 0.0, 0.0, 0.0], [0.0145098763, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 17, 18, 19, 20, 29, 30, 22, 12, 13, 23, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 10, 2, 5, 11, 21, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_336(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.921499968, 1.0, 2.0, 3.0], [-0.931499958, 3.0, 4.0, 3.0], [-0.201499999, 5.0, 6.0, 0.0], [-0.281499982, 7.0, 8.0, 0.0], [-0.158149868, 0.0, 0.0, 0.0], [-0.623000026, 9.0, 10.0, 1.0], [-0.874500036, 11.0, 12.0, 3.0], [-0.916499972, 13.0, 14.0, 4.0], [-0.972499967, 15.0, 16.0, 3.0], [0.15623191, 0.0, 0.0, 0.0], [-0.0358308703, 0.0, 0.0, 0.0], [-0.113692127, 0.0, 0.0, 0.0], [0.0541512705, 0.0, 0.0, 0.0], [0.572000027, 17.0, 18.0, 2.0], [-0.865499973, 19.0, 20.0, 4.0], [-0.271499991, 21.0, 22.0, 0.0], [0.386500001, 23.0, 24.0, 2.0], [-0.158281311, 0.0, 0.0, 0.0], [-0.0179307014, 0.0, 0.0, 0.0], [0.0942819118, 0.0, 0.0, 0.0], [-0.0641985536, 0.0, 0.0, 0.0], [0.120948419, 0.0, 0.0, 0.0], [-0.012545432, 0.0, 0.0, 0.0], [-0.0689184368, 0.0, 0.0, 0.0], [0.0896741524, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_337(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.932500005, 1.0, 2.0, 4.0], [-0.946500003, 3.0, 4.0, 4.0], [-0.65200001, 5.0, 6.0, 1.0], [-0.948500037, 7.0, 8.0, 4.0], [0.43900001, 9.0, 10.0, 2.0], [-0.234499991, 11.0, 12.0, 0.0], [-0.247500002, 13.0, 14.0, 0.0], [-0.107500002, 15.0, 16.0, 0.0], [0.128613859, 0.0, 0.0, 0.0], [0.060287971, 0.0, 0.0, 0.0], [-0.63349998, 17.0, 18.0, 1.0], [0.537, 19.0, 20.0, 2.0], [-0.922500014, 21.0, 22.0, 4.0], [-0.966500044, 23.0, 24.0, 3.0], [-0.144474745, 0.0, 0.0, 0.0], [-0.178499997, 25.0, 26.0, 0.0], [0.412999988, 27.0, 28.0, 2.0], [-0.297500014, 29.0, 30.0, 0.0], [0.0273928475, 0.0, 0.0, 0.0], [-0.919499993, 31.0, 32.0, 4.0], [-0.272000015, 33.0, 34.0, 0.0], [0.2029645, 0.0, 0.0, 0.0], [-0.747500002, 35.0, 36.0, 1.0], [-0.301499993, 37.0, 38.0, 0.0], [0.0687987208, 0.0, 0.0, 0.0], [-0.00904311705, 0.0, 0.0, 0.0], [0.103298374, 0.0, 0.0, 0.0], [-0.150625348, 0.0, 0.0, 0.0], [-0.000933394884, 0.0, 0.0, 0.0], [-0.0551393256, 0.0, 0.0, 0.0], [-0.243609548, 0.0, 0.0, 0.0], [-0.0102199987, 0.0, 0.0, 0.0], [-0.181029141, 0.0, 0.0, 0.0], [0.0267869569, 0.0, 0.0, 0.0], [0.160006046, 0.0, 0.0, 0.0], [-0.0760333985, 0.0, 0.0, 0.0], [0.117516622, 0.0, 0.0, 0.0], [-0.144590273, 0.0, 0.0, 0.0], [0.0911843628, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 9, 29, 30, 18, 31, 32, 33, 34, 21, 35, 36, 37, 38, 24, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 17, 2, 5, 11, 19, 20, 12, 22, 6, 13, 23])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_338(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.939499974, 3.0, 4.0, 4.0], [-0.962499976, 5.0, 6.0, 3.0], [-0.965499997, 7.0, 8.0, 4.0], [0.550500035, 9.0, 10.0, 2.0], [-0.794499993, 11.0, 12.0, 4.0], [-0.794499993, 13.0, 14.0, 4.0], [-0.972499967, 15.0, 16.0, 4.0], [-0.154000014, 17.0, 18.0, 0.0], [0.513000011, 19.0, 20.0, 2.0], [-0.818499982, 21.0, 22.0, 4.0], [-0.931499958, 23.0, 24.0, 4.0], [-0.993499994, 25.0, 26.0, 3.0], [-0.872500002, 27.0, 28.0, 4.0], [0.0735111982, 0.0, 0.0, 0.0], [0.438499987, 29.0, 30.0, 2.0], [-0.139882758, 0.0, 0.0, 0.0], [0.569999993, 31.0, 32.0, 2.0], [-0.0992175192, 0.0, 0.0, 0.0], [-0.146499991, 33.0, 34.0, 0.0], [0.147235602, 0.0, 0.0, 0.0], [0.626999974, 35.0, 36.0, 2.0], [0.0151569471, 0.0, 0.0, 0.0], [-0.996500015, 37.0, 38.0, 3.0], [-0.984500051, 39.0, 40.0, 3.0], [0.0541678481, 0.0, 0.0, 0.0], [-0.521499991, 41.0, 42.0, 1.0], [-0.912500024, 43.0, 44.0, 4.0], [-0.176953375, 0.0, 0.0, 0.0], [0.0523417369, 0.0, 0.0, 0.0], [-0.0688781887, 0.0, 0.0, 0.0], [0.0212230999, 0.0, 0.0, 0.0], [0.213017985, 0.0, 0.0, 0.0], [-0.134015873, 0.0, 0.0, 0.0], [0.023016734, 0.0, 0.0, 0.0], [-0.25893563, 0.0, 0.0, 0.0], [-0.0580349192, 0.0, 0.0, 0.0], [0.090840593, 0.0, 0.0, 0.0], [-0.0427883044, 0.0, 0.0, 0.0], [0.0438530184, 0.0, 0.0, 0.0], [0.225938216, 0.0, 0.0, 0.0], [-0.0209212918, 0.0, 0.0, 0.0], [-0.104482725, 0.0, 0.0, 0.0], [-0.0675192177, 0.0, 0.0, 0.0], [0.147539288, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 31, 32, 18, 33, 34, 20, 35, 36, 22, 37, 38, 39, 40, 25, 41, 42, 43, 44, 28, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 9, 19, 10, 21, 2, 5, 11, 23, 24, 12, 26, 6, 13, 27])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_339(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.142500013, 1.0, 2.0, 0.0], [-0.190499991, 3.0, 4.0, 0.0], [-0.0496499985, 5.0, 6.0, 0.0], [-0.192499995, 7.0, 8.0, 0.0], [-0.186500013, 9.0, 10.0, 0.0], [-0.0569499992, 11.0, 12.0, 0.0], [-0.0460999981, 13.0, 14.0, 0.0], [-0.273499995, 15.0, 16.0, 0.0], [0.145219773, 0.0, 0.0, 0.0], [-0.262112379, 0.0, 0.0, 0.0], [-0.175500005, 17.0, 18.0, 0.0], [-0.0658500046, 19.0, 20.0, 0.0], [-0.923500001, 21.0, 22.0, 2.0], [-0.0477499999, 23.0, 24.0, 0.0], [-0.0435499996, 25.0, 26.0, 0.0], [-0.923500001, 27.0, 28.0, 2.0], [-0.999500036, 29.0, 30.0, 1.0], [0.124368116, 0.0, 0.0, 0.0], [-0.999500036, 31.0, 32.0, 1.0], [-0.0728500038, 33.0, 34.0, 0.0], [-0.923500001, 35.0, 36.0, 2.0], [0.394938529, 0.0, 0.0, 0.0], [-0.24412486, 0.0, 0.0, 0.0], [-0.0252796635, 0.0, 0.0, 0.0], [-0.298677415, 0.0, 0.0, 0.0], [-0.0455499999, 37.0, 38.0, 0.0], [-0.0425499976, 39.0, 40.0, 0.0], [0.0529578663, 0.0, 0.0, 0.0], [-0.0730690882, 0.0, 0.0, 0.0], [-0.0921091661, 0.0, 0.0, 0.0], [0.0555831529, 0.0, 0.0, 0.0], [-0.180763498, 0.0, 0.0, 0.0], [0.109235436, 0.0, 0.0, 0.0], [0.00352739007, 0.0, 0.0, 0.0], [0.17341733, 0.0, 0.0, 0.0], [-0.302691817, 0.0, 0.0, 0.0], [0.135422096, 0.0, 0.0, 0.0], [-0.019227162, 0.0, 0.0, 0.0], [0.302705526, 0.0, 0.0, 0.0], [-0.291739285, 0.0, 0.0, 0.0], [0.0020091366, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 8, 9, 17, 31, 32, 33, 34, 35, 36, 21, 22, 23, 24, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 18, 2, 5, 11, 19, 20, 12, 6, 13, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_340(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0476500019, 1.0, 2.0, 0.0], [0.0447499976, 3.0, 4.0, 0.0], [0.0740500018, 5.0, 6.0, 0.0], [0.0417999998, 7.0, 8.0, 0.0], [0.339576751, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.0760499984, 11.0, 12.0, 0.0], [0.028549999, 13.0, 14.0, 0.0], [-0.258771658, 0.0, 0.0, 0.0], [-0.330762774, 0.0, 0.0, 0.0], [-0.851999998, 15.0, 16.0, 2.0], [0.237500846, 0.0, 0.0, 0.0], [0.0825999975, 17.0, 18.0, 0.0], [0.02685, 19.0, 20.0, 0.0], [0.0300999992, 21.0, 22.0, 0.0], [0.241103247, 0.0, 0.0, 0.0], [-0.0193325039, 0.0, 0.0, 0.0], [-0.228299707, 0.0, 0.0, 0.0], [0.0854000002, 23.0, 24.0, 0.0], [0.00446725544, 0.0, 0.0, 0.0], [-0.347314864, 0.0, 0.0, 0.0], [0.350456655, 0.0, 0.0, 0.0], [-0.00185850984, 0.0, 0.0, 0.0], [0.178870499, 0.0, 0.0, 0.0], [-0.0185237769, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 15, 16, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 10, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_341(xs):
    #Predicts Class 5
    function_dict = np.array([[0.363499999, 1.0, 2.0, 0.0], [0.282499999, 3.0, 4.0, 0.0], [0.394500017, 5.0, 6.0, 0.0], [0.2755, 7.0, 8.0, 0.0], [0.341000021, 9.0, 10.0, 0.0], [0.160757646, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.260500014, 13.0, 14.0, 0.0], [0.136611938, 0.0, 0.0, 0.0], [-0.206602812, 0.0, 0.0, 0.0], [-0.0408814251, 0.0, 0.0, 0.0], [0.409500003, 15.0, 16.0, 0.0], [0.541999996, 17.0, 18.0, 0.0], [0.256500006, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [0.404500008, 23.0, 24.0, 0.0], [0.534000039, 25.0, 26.0, 0.0], [0.521499991, 27.0, 28.0, 0.0], [0.178961247, 0.0, 0.0, 0.0], [-0.0118452618, 0.0, 0.0, 0.0], [0.196613535, 0.0, 0.0, 0.0], [-0.160571769, 0.0, 0.0, 0.0], [-0.0163038485, 0.0, 0.0, 0.0], [-0.126274943, 0.0, 0.0, 0.0], [-0.0466673337, 0.0, 0.0, 0.0], [0.0285913628, 0.0, 0.0, 0.0], [-0.0468158871, 0.0, 0.0, 0.0], [0.100614496, 0.0, 0.0, 0.0], [-0.146422297, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 5, 23, 24, 25, 26, 27, 28, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 11, 15, 16, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_342(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.792500019, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 4.0], [-0.786499977, 5.0, 6.0, 1.0], [0.455500007, 7.0, 8.0, 2.0], [-0.0720070153, 0.0, 0.0, 0.0], [-0.115673624, 0.0, 0.0, 0.0], [-0.782500029, 9.0, 10.0, 1.0], [-0.952499986, 11.0, 12.0, 4.0], [-0.818500042, 13.0, 14.0, 1.0], [0.123399101, 0.0, 0.0, 0.0], [0.414499998, 15.0, 16.0, 2.0], [-0.222499996, 17.0, 18.0, 0.0], [0.115175672, 0.0, 0.0, 0.0], [0.0140790893, 0.0, 0.0, 0.0], [0.178496391, 0.0, 0.0, 0.0], [-0.977999985, 19.0, 20.0, 3.0], [0.428499997, 21.0, 22.0, 2.0], [-0.150273427, 0.0, 0.0, 0.0], [0.0222161673, 0.0, 0.0, 0.0], [-0.126166865, 0.0, 0.0, 0.0], [-0.00752981519, 0.0, 0.0, 0.0], [0.123273939, 0.0, 0.0, 0.0], [-0.00978449266, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_343(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.8125, 1.0, 2.0, 1.0], [-0.961500049, 3.0, 4.0, 4.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.862499952, 7.0, 8.0, 1.0], [-0.985499978, 9.0, 10.0, 3.0], [-0.332499981, 11.0, 12.0, 0.0], [0.636500001, 13.0, 14.0, 2.0], [-0.0689661279, 0.0, 0.0, 0.0], [-0.826499999, 15.0, 16.0, 1.0], [-0.133466288, 0.0, 0.0, 0.0], [0.0203487854, 0.0, 0.0, 0.0], [-0.872500002, 17.0, 18.0, 4.0], [0.152841017, 0.0, 0.0, 0.0], [0.5995, 19.0, 20.0, 2.0], [-0.417500019, 21.0, 22.0, 1.0], [0.0961821526, 0.0, 0.0, 0.0], [-0.0242672209, 0.0, 0.0, 0.0], [-0.946500003, 23.0, 24.0, 4.0], [0.102594152, 0.0, 0.0, 0.0], [-0.999500036, 25.0, 26.0, 3.0], [-0.657000005, 27.0, 28.0, 1.0], [-0.219999999, 29.0, 30.0, 0.0], [0.0571378432, 0.0, 0.0, 0.0], [0.066663608, 0.0, 0.0, 0.0], [-0.108443156, 0.0, 0.0, 0.0], [0.108502425, 0.0, 0.0, 0.0], [-0.0115661053, 0.0, 0.0, 0.0], [-0.00840107817, 0.0, 0.0, 0.0], [0.140108183, 0.0, 0.0, 0.0], [-0.132437631, 0.0, 0.0, 0.0], [0.0272194166, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 9, 10, 23, 24, 18, 12, 25, 26, 27, 28, 29, 30, 22])
    branch_indices = np.array([0, 1, 3, 8, 4, 2, 5, 11, 17, 6, 13, 19, 20, 14, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_344(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.558500051, 1.0, 2.0, 1.0], [-0.24849999, 3.0, 4.0, 0.0], [-0.997500002, 5.0, 6.0, 3.0], [-0.110902123, 0.0, 0.0, 0.0], [-0.891499996, 7.0, 8.0, 4.0], [-0.485000014, 9.0, 10.0, 1.0], [-0.4745, 11.0, 12.0, 1.0], [0.605499983, 13.0, 14.0, 2.0], [0.687000036, 15.0, 16.0, 2.0], [-0.143848613, 0.0, 0.0, 0.0], [0.0681321993, 0.0, 0.0, 0.0], [0.718500018, 17.0, 18.0, 2.0], [-0.456499994, 19.0, 20.0, 1.0], [0.577499986, 21.0, 22.0, 2.0], [-0.971500039, 23.0, 24.0, 3.0], [-0.818499982, 25.0, 26.0, 4.0], [-0.597000003, 27.0, 28.0, 1.0], [-0.979499996, 29.0, 30.0, 3.0], [-0.791499972, 31.0, 32.0, 4.0], [-0.121118262, 0.0, 0.0, 0.0], [-0.975499988, 33.0, 34.0, 3.0], [0.0122038061, 0.0, 0.0, 0.0], [-0.148382828, 0.0, 0.0, 0.0], [0.112171672, 0.0, 0.0, 0.0], [-0.0589032844, 0.0, 0.0, 0.0], [-0.20944126, 0.0, 0.0, 0.0], [-0.00803148188, 0.0, 0.0, 0.0], [0.093409799, 0.0, 0.0, 0.0], [-0.0563143604, 0.0, 0.0, 0.0], [0.199092403, 0.0, 0.0, 0.0], [0.0447922461, 0.0, 0.0, 0.0], [0.044725284, 0.0, 0.0, 0.0], [-0.0507813506, 0.0, 0.0, 0.0], [-0.0491641611, 0.0, 0.0, 0.0], [0.084196046, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 21, 22, 23, 24, 25, 26, 27, 28, 9, 10, 29, 30, 31, 32, 19, 33, 34])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 8, 15, 16, 2, 5, 6, 11, 17, 18, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_345(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [0.212500006, 3.0, 4.0, 0.0], [-0.072170794, 0.0, 0.0, 0.0], [0.202500001, 5.0, 6.0, 0.0], [0.253499985, 7.0, 8.0, 0.0], [0.111500002, 9.0, 10.0, 0.0], [-0.236540064, 0.0, 0.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [0.260500014, 13.0, 14.0, 0.0], [0.0941499993, 15.0, 16.0, 0.0], [0.150000006, 17.0, 18.0, 0.0], [0.219500005, 19.0, 20.0, 0.0], [0.253782034, 0.0, 0.0, 0.0], [0.25849998, 21.0, 22.0, 0.0], [0.272000015, 23.0, 24.0, 0.0], [0.000525550277, 0.0, 0.0, 0.0], [-0.131570011, 0.0, 0.0, 0.0], [0.217096969, 0.0, 0.0, 0.0], [-0.00303476327, 0.0, 0.0, 0.0], [0.0652091801, 0.0, 0.0, 0.0], [-0.0155054824, 0.0, 0.0, 0.0], [-0.0314228311, 0.0, 0.0, 0.0], [-0.126805916, 0.0, 0.0, 0.0], [0.150431708, 0.0, 0.0, 0.0], [0.00184073288, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 6, 19, 20, 12, 21, 22, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 7, 11, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_346(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00325499987, 1.0, 2.0, 0.0], [0.00202000001, 3.0, 4.0, 0.0], [0.0042849998, 5.0, 6.0, 0.0], [0.000549999997, 7.0, 8.0, 0.0], [-0.281665474, 0.0, 0.0, 0.0], [0.342265099, 0.0, 0.0, 0.0], [0.00768500008, 9.0, 10.0, 0.0], [-0.000834999955, 11.0, 12.0, 0.0], [0.00146499998, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [0.0101999994, 17.0, 18.0, 0.0], [-0.00163000007, 19.0, 20.0, 0.0], [-0.188401252, 0.0, 0.0, 0.0], [0.3153871, 0.0, 0.0, 0.0], [-0.014871045, 0.0, 0.0, 0.0], [0.00588999968, 21.0, 22.0, 0.0], [0.228150606, 0.0, 0.0, 0.0], [0.21708937, 0.0, 0.0, 0.0], [0.0192999989, 23.0, 24.0, 0.0], [-0.00542387739, 0.0, 0.0, 0.0], [0.163021803, 0.0, 0.0, 0.0], [-0.0417107604, 0.0, 0.0, 0.0], [-0.345310479, 0.0, 0.0, 0.0], [-0.122729279, 0.0, 0.0, 0.0], [0.0110333804, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 21, 22, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 15, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_347(xs):
    #Predicts Class 5
    function_dict = np.array([[0.528499961, 1.0, 2.0, 0.0], [0.5255, 3.0, 4.0, 0.0], [0.538499951, 5.0, 6.0, 0.0], [0.522500038, 7.0, 8.0, 0.0], [-0.166507617, 0.0, 0.0, 0.0], [0.165920466, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.521499991, 11.0, 12.0, 0.0], [0.124220163, 0.0, 0.0, 0.0], [0.588, 13.0, 14.0, 0.0], [0.133038804, 0.0, 0.0, 0.0], [0.489499986, 15.0, 16.0, 0.0], [-0.155728802, 0.0, 0.0, 0.0], [0.549999952, 17.0, 18.0, 0.0], [0.616999984, 19.0, 20.0, 0.0], [-0.00514644897, 0.0, 0.0, 0.0], [0.0953237414, 0.0, 0.0, 0.0], [-0.103451855, 0.0, 0.0, 0.0], [-0.0283299349, 0.0, 0.0, 0.0], [0.217587799, 0.0, 0.0, 0.0], [-0.0270758625, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 17, 18, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_348(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.253499985, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 3.0], [0.497500002, 5.0, 6.0, 2.0], [-0.145564094, 0.0, 0.0, 0.0], [-0.729499996, 7.0, 8.0, 1.0], [0.449499995, 9.0, 10.0, 2.0], [0.529500008, 11.0, 12.0, 2.0], [-0.776000023, 13.0, 14.0, 1.0], [-0.707499981, 15.0, 16.0, 1.0], [-0.761500001, 17.0, 18.0, 1.0], [-0.972499967, 19.0, 20.0, 3.0], [-0.700999975, 21.0, 22.0, 1.0], [0.534500003, 23.0, 24.0, 2.0], [-0.827499986, 25.0, 26.0, 1.0], [0.164806977, 0.0, 0.0, 0.0], [-0.174474552, 0.0, 0.0, 0.0], [-0.945500016, 27.0, 28.0, 4.0], [-0.113499999, 29.0, 30.0, 0.0], [-0.942499995, 31.0, 32.0, 3.0], [-0.164999992, 33.0, 34.0, 0.0], [0.116138205, 0.0, 0.0, 0.0], [0.196755603, 0.0, 0.0, 0.0], [-0.0348150134, 0.0, 0.0, 0.0], [-0.161850169, 0.0, 0.0, 0.0], [-0.984500051, 35.0, 36.0, 3.0], [0.0551444329, 0.0, 0.0, 0.0], [-0.0407220274, 0.0, 0.0, 0.0], [-0.102693029, 0.0, 0.0, 0.0], [0.0399505198, 0.0, 0.0, 0.0], [0.0833514705, 0.0, 0.0, 0.0], [-0.0400028117, 0.0, 0.0, 0.0], [-0.12936455, 0.0, 0.0, 0.0], [-0.00508433068, 0.0, 0.0, 0.0], [-0.155679286, 0.0, 0.0, 0.0], [0.0171736665, 0.0, 0.0, 0.0], [0.0507563949, 0.0, 0.0, 0.0], [-0.0320762359, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 25, 26, 14, 15, 27, 28, 29, 30, 31, 32, 33, 34, 20, 21, 22, 23, 35, 36])
    branch_indices = np.array([0, 1, 4, 7, 13, 8, 16, 2, 5, 9, 17, 18, 10, 19, 6, 11, 12, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_349(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.210500002, 1.0, 2.0, 0.0], [-0.973500013, 3.0, 4.0, 4.0], [0.50150001, 5.0, 6.0, 2.0], [-0.768999994, 7.0, 8.0, 1.0], [0.554499984, 9.0, 10.0, 2.0], [-0.965499997, 11.0, 12.0, 4.0], [-0.1875, 13.0, 14.0, 0.0], [-0.798500001, 15.0, 16.0, 1.0], [0.203424782, 0.0, 0.0, 0.0], [-0.963500023, 17.0, 18.0, 4.0], [-0.95449996, 19.0, 20.0, 4.0], [-0.195499986, 21.0, 22.0, 0.0], [-0.169, 23.0, 24.0, 0.0], [-0.942999959, 25.0, 26.0, 4.0], [0.557500005, 27.0, 28.0, 2.0], [0.054322008, 0.0, 0.0, 0.0], [-0.0972231776, 0.0, 0.0, 0.0], [-0.968500018, 29.0, 30.0, 4.0], [-0.742500007, 31.0, 32.0, 1.0], [0.657000005, 33.0, 34.0, 2.0], [-0.237500012, 35.0, 36.0, 0.0], [0.0590591021, 0.0, 0.0, 0.0], [-0.178499997, 37.0, 38.0, 0.0], [-0.996500015, 39.0, 40.0, 3.0], [-0.986500025, 41.0, 42.0, 3.0], [-0.214357659, 0.0, 0.0, 0.0], [-0.0207932629, 0.0, 0.0, 0.0], [0.0789173618, 0.0, 0.0, 0.0], [-0.0667011812, 0.0, 0.0, 0.0], [-0.00314727449, 0.0, 0.0, 0.0], [-0.174148038, 0.0, 0.0, 0.0], [0.0533703938, 0.0, 0.0, 0.0], [-0.054369241, 0.0, 0.0, 0.0], [0.149766549, 0.0, 0.0, 0.0], [-0.0560602322, 0.0, 0.0, 0.0], [0.0327097103, 0.0, 0.0, 0.0], [-0.111540981, 0.0, 0.0, 0.0], [-0.157965988, 0.0, 0.0, 0.0], [-0.00436579017, 0.0, 0.0, 0.0], [0.236329272, 0.0, 0.0, 0.0], [0.0173186939, 0.0, 0.0, 0.0], [-0.129685447, 0.0, 0.0, 0.0], [0.0587695576, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 29, 30, 31, 32, 33, 34, 35, 36, 21, 37, 38, 39, 40, 41, 42, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 17, 18, 10, 19, 20, 2, 5, 11, 22, 12, 23, 24, 6, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_350(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.278500021, 1.0, 2.0, 1.0], [-0.0728500038, 3.0, 4.0, 0.0], [0.099262923, 0.0, 0.0, 0.0], [-0.101500005, 5.0, 6.0, 0.0], [-0.957499981, 7.0, 8.0, 4.0], [-0.977499962, 9.0, 10.0, 4.0], [0.118416518, 0.0, 0.0, 0.0], [-0.0040534432, 0.0, 0.0, 0.0], [-0.117783517, 0.0, 0.0, 0.0], [-0.988499999, 11.0, 12.0, 3.0], [-0.972499967, 13.0, 14.0, 4.0], [-0.14720656, 0.0, 0.0, 0.0], [0.018599635, 0.0, 0.0, 0.0], [0.0816436857, 0.0, 0.0, 0.0], [-0.0110801803, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_351(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.145500004, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.141499996, 5.0, 6.0, 0.0], [-0.205500007, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.127120569, 0.0, 0.0, 0.0], [-0.135500014, 11.0, 12.0, 0.0], [-0.2095, 13.0, 14.0, 0.0], [-0.202500001, 15.0, 16.0, 0.0], [-0.240513831, 0.0, 0.0, 0.0], [-0.0260891281, 0.0, 0.0, 0.0], [-0.137499988, 17.0, 18.0, 0.0], [-0.134499997, 19.0, 20.0, 0.0], [-0.210500002, 21.0, 22.0, 0.0], [-0.161438897, 0.0, 0.0, 0.0], [0.155754834, 0.0, 0.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [-0.139499992, 25.0, 26.0, 0.0], [-0.0929443985, 0.0, 0.0, 0.0], [0.15004766, 0.0, 0.0, 0.0], [-0.111500002, 27.0, 28.0, 0.0], [-0.0262468494, 0.0, 0.0, 0.0], [0.136034518, 0.0, 0.0, 0.0], [-0.0350869969, 0.0, 0.0, 0.0], [0.148663193, 0.0, 0.0, 0.0], [-0.0261182841, 0.0, 0.0, 0.0], [0.0262184497, 0.0, 0.0, 0.0], [-0.0244601388, 0.0, 0.0, 0.0], [0.00297298981, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 23, 24, 9, 10, 5, 25, 26, 18, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 4, 2, 6, 11, 17, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_352(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [0.074149996, 7.0, 8.0, 0.0], [0.167205095, 0.0, 0.0, 0.0], [-0.29598254, 0.0, 0.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [0.0256000012, 11.0, 12.0, 0.0], [-0.231183648, 0.0, 0.0, 0.0], [0.0867500007, 13.0, 14.0, 0.0], [0.0892499983, 15.0, 16.0, 0.0], [0.0203999989, 17.0, 18.0, 0.0], [0.02685, 19.0, 20.0, 0.0], [-0.0103489151, 0.0, 0.0, 0.0], [0.147861212, 0.0, 0.0, 0.0], [-0.121819742, 0.0, 0.0, 0.0], [0.0917500034, 21.0, 22.0, 0.0], [0.00234576501, 0.0, 0.0, 0.0], [-0.148551196, 0.0, 0.0, 0.0], [0.390845478, 0.0, 0.0, 0.0], [-0.00467968546, 0.0, 0.0, 0.0], [0.139348462, 0.0, 0.0, 0.0], [-0.0215687249, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 13, 14, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_353(xs):
    #Predicts Class 5
    function_dict = np.array([[0.621500015, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0863331556, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [0.618499994, 7.0, 8.0, 0.0], [-0.996500015, 9.0, 10.0, 4.0], [0.127249628, 0.0, 0.0, 0.0], [-0.116547883, 0.0, 0.0, 0.0], [0.00970089901, 0.0, 0.0, 0.0], [-0.0802000016, 11.0, 12.0, 0.0], [0.0874968171, 0.0, 0.0, 0.0], [0.0200711545, 0.0, 0.0, 0.0], [-0.0109101906, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_354(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 1.0], [0.0412999988, 3.0, 4.0, 0.0], [-0.234499991, 5.0, 6.0, 0.0], [-0.0960000008, 7.0, 8.0, 0.0], [-0.0960050896, 0.0, 0.0, 0.0], [-0.827499986, 9.0, 10.0, 4.0], [-0.138500005, 11.0, 12.0, 0.0], [0.573500037, 13.0, 14.0, 2.0], [0.134635076, 0.0, 0.0, 0.0], [-0.615499973, 15.0, 16.0, 1.0], [-0.763000011, 17.0, 18.0, 4.0], [0.691499949, 19.0, 20.0, 2.0], [-0.914000034, 21.0, 22.0, 4.0], [-0.113499999, 23.0, 24.0, 0.0], [-0.990499973, 25.0, 26.0, 3.0], [-0.0363352112, 0.0, 0.0, 0.0], [-0.211909488, 0.0, 0.0, 0.0], [0.0964433476, 0.0, 0.0, 0.0], [-0.0939387977, 0.0, 0.0, 0.0], [-0.879999995, 27.0, 28.0, 4.0], [0.726500034, 29.0, 30.0, 2.0], [0.021328168, 0.0, 0.0, 0.0], [-0.100415342, 0.0, 0.0, 0.0], [-0.0027048036, 0.0, 0.0, 0.0], [-0.123206072, 0.0, 0.0, 0.0], [-0.0135859614, 0.0, 0.0, 0.0], [0.103249595, 0.0, 0.0, 0.0], [0.025510842, 0.0, 0.0, 0.0], [0.176505432, 0.0, 0.0, 0.0], [-0.138883144, 0.0, 0.0, 0.0], [0.0273786187, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 4, 15, 16, 17, 18, 27, 28, 29, 30, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 10, 6, 11, 19, 20, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_355(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.8125, 1.0, 2.0, 1.0], [-0.989500046, 3.0, 4.0, 3.0], [0.0695500001, 5.0, 6.0, 0.0], [0.453000009, 7.0, 8.0, 2.0], [-0.9745, 9.0, 10.0, 3.0], [-0.138500005, 11.0, 12.0, 0.0], [0.0927604064, 0.0, 0.0, 0.0], [0.395500004, 13.0, 14.0, 2.0], [-0.136884779, 0.0, 0.0, 0.0], [0.0528579131, 0.0, 0.0, 0.0], [-0.0521695055, 0.0, 0.0, 0.0], [0.334500015, 15.0, 16.0, 2.0], [-0.116823152, 0.0, 0.0, 0.0], [-0.065150477, 0.0, 0.0, 0.0], [0.0468853936, 0.0, 0.0, 0.0], [0.277500004, 17.0, 18.0, 2.0], [-0.210500002, 19.0, 20.0, 0.0], [-0.0124067906, 0.0, 0.0, 0.0], [0.135479838, 0.0, 0.0, 0.0], [0.0118568204, 0.0, 0.0, 0.0], [-0.0346416049, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 9, 10, 17, 18, 19, 20, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 2, 5, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_356(xs):
    #Predicts Class 2
    function_dict = np.array([[0.331499994, 1.0, 2.0, 2.0], [-0.161500007, 3.0, 4.0, 0.0], [0.483500004, 5.0, 6.0, 2.0], [-0.137213349, 0.0, 0.0, 0.0], [0.0300753284, 0.0, 0.0, 0.0], [-0.965499997, 7.0, 8.0, 4.0], [0.513499975, 9.0, 10.0, 2.0], [-0.193500012, 11.0, 12.0, 0.0], [0.442499995, 13.0, 14.0, 2.0], [-0.146507457, 0.0, 0.0, 0.0], [-0.712499976, 15.0, 16.0, 4.0], [-0.996500015, 17.0, 18.0, 3.0], [0.0778867155, 0.0, 0.0, 0.0], [0.411000013, 19.0, 20.0, 2.0], [-0.184, 21.0, 22.0, 0.0], [-0.767500043, 23.0, 24.0, 4.0], [-0.63499999, 25.0, 26.0, 4.0], [0.0191183407, 0.0, 0.0, 0.0], [-0.180120721, 0.0, 0.0, 0.0], [0.106666632, 0.0, 0.0, 0.0], [-0.19898425, 0.0, 0.0, 0.0], [0.227133766, 0.0, 0.0, 0.0], [0.0137935178, 0.0, 0.0, 0.0], [0.00767695438, 0.0, 0.0, 0.0], [-0.0794557035, 0.0, 0.0, 0.0], [0.120446369, 0.0, 0.0, 0.0], [9.86915547e-05, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 17, 18, 12, 19, 20, 21, 22, 9, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 8, 13, 14, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_357(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0469499975, 1.0, 2.0, 0.0], [-0.0470499992, 3.0, 4.0, 0.0], [-0.0455499999, 5.0, 6.0, 0.0], [-0.0496499985, 7.0, 8.0, 0.0], [0.289067686, 0.0, 0.0, 0.0], [-0.280206174, 0.0, 0.0, 0.0], [-0.0435499996, 9.0, 10.0, 0.0], [-0.0569499992, 11.0, 12.0, 0.0], [-0.154950589, 0.0, 0.0, 0.0], [0.262997419, 0.0, 0.0, 0.0], [-0.0425499976, 13.0, 14.0, 0.0], [-0.0581500009, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [-0.234201223, 0.0, 0.0, 0.0], [-0.040550001, 19.0, 20.0, 0.0], [0.00407116208, 0.0, 0.0, 0.0], [-0.226550564, 0.0, 0.0, 0.0], [0.349037111, 0.0, 0.0, 0.0], [-0.207391948, 0.0, 0.0, 0.0], [0.151624545, 0.0, 0.0, 0.0], [-0.00396480551, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_358(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.423500001, 1.0, 2.0, 0.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.401000023, 5.0, 6.0, 0.0], [0.118673407, 0.0, 0.0, 0.0], [-0.0585821047, 0.0, 0.0, 0.0], [-0.111537151, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.393000007, 9.0, 10.0, 0.0], [-0.337500006, 11.0, 12.0, 0.0], [0.0103275953, 0.0, 0.0, 0.0], [0.176090315, 0.0, 0.0, 0.0], [-0.142954141, 0.0, 0.0, 0.0], [-0.297500014, 13.0, 14.0, 0.0], [0.224228412, 0.0, 0.0, 0.0], [-0.00120504631, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 10, 11, 13, 14])
    branch_indices = np.array([0, 1, 2, 6, 7, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_359(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.164499998, 3.0, 4.0, 0.0], [-0.149500012, 5.0, 6.0, 0.0], [-0.1655, 7.0, 8.0, 0.0], [-0.247711733, 0.0, 0.0, 0.0], [-0.151499987, 9.0, 10.0, 0.0], [-0.080400005, 11.0, 12.0, 0.0], [-0.168500006, 13.0, 14.0, 0.0], [0.156413496, 0.0, 0.0, 0.0], [-0.154500008, 15.0, 16.0, 0.0], [0.18656452, 0.0, 0.0, 0.0], [-0.246187702, 0.0, 0.0, 0.0], [-0.0318999998, 17.0, 18.0, 0.0], [-0.175500005, 19.0, 20.0, 0.0], [-0.10486614, 0.0, 0.0, 0.0], [-0.155499995, 21.0, 22.0, 0.0], [-0.0271545593, 0.0, 0.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [-0.0126499999, 25.0, 26.0, 0.0], [-0.0217883009, 0.0, 0.0, 0.0], [0.188434765, 0.0, 0.0, 0.0], [0.0484068468, 0.0, 0.0, 0.0], [0.164615527, 0.0, 0.0, 0.0], [-0.0399900302, 0.0, 0.0, 0.0], [0.183756769, 0.0, 0.0, 0.0], [-0.274041414, 0.0, 0.0, 0.0], [0.00882415753, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 21, 22, 16, 10, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 15, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_360(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.759500027, 1.0, 2.0, 1.0], [0.256999999, 3.0, 4.0, 2.0], [-0.101500005, 5.0, 6.0, 0.0], [-0.0837271437, 0.0, 0.0, 0.0], [-0.280499995, 7.0, 8.0, 0.0], [-0.149500012, 9.0, 10.0, 0.0], [-0.915500045, 11.0, 12.0, 4.0], [-0.827499986, 13.0, 14.0, 1.0], [-0.99849999, 15.0, 16.0, 3.0], [-0.199499995, 17.0, 18.0, 0.0], [0.68599999, 19.0, 20.0, 2.0], [-0.14356187, 0.0, 0.0, 0.0], [0.0176121071, 0.0, 0.0, 0.0], [0.0414339192, 0.0, 0.0, 0.0], [-0.0943922997, 0.0, 0.0, 0.0], [0.124775596, 0.0, 0.0, 0.0], [-0.24149999, 21.0, 22.0, 0.0], [-0.965499997, 23.0, 24.0, 4.0], [0.666499972, 25.0, 26.0, 2.0], [0.519500017, 27.0, 28.0, 2.0], [-0.0451742373, 0.0, 0.0, 0.0], [0.131824464, 0.0, 0.0, 0.0], [0.0048678834, 0.0, 0.0, 0.0], [-0.106736533, 0.0, 0.0, 0.0], [0.0251411907, 0.0, 0.0, 0.0], [-0.180137962, 0.0, 0.0, 0.0], [0.0367492661, 0.0, 0.0, 0.0], [-0.0213791355, 0.0, 0.0, 0.0], [0.184338748, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 20, 11, 12])
    branch_indices = np.array([0, 1, 4, 7, 8, 16, 2, 5, 9, 17, 18, 10, 19, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_361(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.749500036, 1.0, 2.0, 1.0], [-0.763499975, 3.0, 4.0, 1.0], [-0.74150002, 5.0, 6.0, 1.0], [-0.107500002, 7.0, 8.0, 0.0], [-0.238999993, 9.0, 10.0, 0.0], [0.129625395, 0.0, 0.0, 0.0], [-0.734500051, 11.0, 12.0, 1.0], [-0.17750001, 13.0, 14.0, 0.0], [-0.0974205062, 0.0, 0.0, 0.0], [-0.011288139, 0.0, 0.0, 0.0], [-0.146357477, 0.0, 0.0, 0.0], [-0.221000001, 15.0, 16.0, 0.0], [-0.962499976, 17.0, 18.0, 4.0], [-0.966500044, 19.0, 20.0, 4.0], [-0.968500018, 21.0, 22.0, 4.0], [-0.165263981, 0.0, 0.0, 0.0], [0.0463503636, 0.0, 0.0, 0.0], [-0.210500002, 23.0, 24.0, 0.0], [-0.205500007, 25.0, 26.0, 0.0], [-0.0856129602, 0.0, 0.0, 0.0], [0.0202417411, 0.0, 0.0, 0.0], [0.146650791, 0.0, 0.0, 0.0], [0.00551110087, 0.0, 0.0, 0.0], [0.144867226, 0.0, 0.0, 0.0], [-0.0641178489, 0.0, 0.0, 0.0], [-0.022834735, 0.0, 0.0, 0.0], [0.0633974373, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 5, 15, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 11, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_362(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.956499994, 3.0, 4.0, 4.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.70449996, 7.0, 8.0, 1.0], [0.550500035, 9.0, 10.0, 2.0], [-0.986000001, 11.0, 12.0, 3.0], [-0.918500006, 13.0, 14.0, 3.0], [-0.718500018, 15.0, 16.0, 1.0], [-0.966500044, 17.0, 18.0, 4.0], [0.442499995, 19.0, 20.0, 2.0], [0.569499969, 21.0, 22.0, 2.0], [-0.105326295, 0.0, 0.0, 0.0], [-0.963500023, 23.0, 24.0, 3.0], [0.666499972, 25.0, 26.0, 2.0], [-0.010379727, 0.0, 0.0, 0.0], [-0.20449999, 27.0, 28.0, 0.0], [0.172366858, 0.0, 0.0, 0.0], [-0.995499969, 29.0, 30.0, 3.0], [-0.190065712, 0.0, 0.0, 0.0], [-0.941499949, 31.0, 32.0, 4.0], [-0.731000006, 33.0, 34.0, 1.0], [-0.175192192, 0.0, 0.0, 0.0], [-0.526499987, 35.0, 36.0, 1.0], [0.0985378101, 0.0, 0.0, 0.0], [-0.0647533014, 0.0, 0.0, 0.0], [0.165354699, 0.0, 0.0, 0.0], [-0.824499965, 37.0, 38.0, 4.0], [0.0514618084, 0.0, 0.0, 0.0], [-0.104229033, 0.0, 0.0, 0.0], [0.0827076286, 0.0, 0.0, 0.0], [-0.120476618, 0.0, 0.0, 0.0], [-0.0247231685, 0.0, 0.0, 0.0], [-0.101439252, 0.0, 0.0, 0.0], [-0.0242697634, 0.0, 0.0, 0.0], [0.149634376, 0.0, 0.0, 0.0], [0.0285781417, 0.0, 0.0, 0.0], [-0.075584814, 0.0, 0.0, 0.0], [0.0757820234, 0.0, 0.0, 0.0], [-0.0500071757, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 29, 30, 18, 31, 32, 33, 34, 21, 35, 36, 11, 23, 24, 25, 37, 38, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 9, 19, 20, 10, 22, 2, 5, 12, 6, 13, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_363(xs):
    #Predicts Class 3
    function_dict = np.array([[0.0560500026, 1.0, 2.0, 0.0], [0.0477499999, 3.0, 4.0, 0.0], [0.0740500018, 5.0, 6.0, 0.0], [0.0293500014, 7.0, 8.0, 0.0], [0.0515500009, 9.0, 10.0, 0.0], [-0.934000015, 11.0, 12.0, 2.0], [0.0760499984, 13.0, 14.0, 0.0], [0.0256000012, 15.0, 16.0, 0.0], [0.0353999995, 17.0, 18.0, 0.0], [-0.258430362, 0.0, 0.0, 0.0], [-0.000913129479, 0.0, 0.0, 0.0], [0.271020085, 0.0, 0.0, 0.0], [-0.0278874878, 0.0, 0.0, 0.0], [-0.173578188, 0.0, 0.0, 0.0], [0.0821999982, 19.0, 20.0, 0.0], [0.0203999989, 21.0, 22.0, 0.0], [0.02685, 23.0, 24.0, 0.0], [0.286059529, 0.0, 0.0, 0.0], [0.0373999998, 25.0, 26.0, 0.0], [0.21775721, 0.0, 0.0, 0.0], [0.0854000002, 27.0, 28.0, 0.0], [-0.00348906126, 0.0, 0.0, 0.0], [0.105274834, 0.0, 0.0, 0.0], [-0.297515631, 0.0, 0.0, 0.0], [-0.0041024657, 0.0, 0.0, 0.0], [-0.279286563, 0.0, 0.0, 0.0], [0.0673168153, 0.0, 0.0, 0.0], [-0.167671129, 0.0, 0.0, 0.0], [0.00668865489, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 17, 25, 26, 9, 10, 11, 12, 13, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 2, 5, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_364(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00325499987, 1.0, 2.0, 0.0], [0.00202000001, 3.0, 4.0, 0.0], [0.0042849998, 5.0, 6.0, 0.0], [0.000549999997, 7.0, 8.0, 0.0], [-0.214270279, 0.0, 0.0, 0.0], [0.292652279, 0.0, 0.0, 0.0], [0.00540999975, 9.0, 10.0, 0.0], [-0.00200500013, 11.0, 12.0, 0.0], [0.00146499998, 13.0, 14.0, 0.0], [-0.168430686, 0.0, 0.0, 0.0], [0.0079549998, 15.0, 16.0, 0.0], [-0.00322999991, 17.0, 18.0, 0.0], [-0.00163000007, 19.0, 20.0, 0.0], [0.270198911, 0.0, 0.0, 0.0], [-0.0116917817, 0.0, 0.0, 0.0], [0.00731999986, 21.0, 22.0, 0.0], [0.00974999927, 23.0, 24.0, 0.0], [-0.00360082835, 0.0, 0.0, 0.0], [0.190338328, 0.0, 0.0, 0.0], [-0.277877539, 0.0, 0.0, 0.0], [-0.0117982607, 0.0, 0.0, 0.0], [0.0551158115, 0.0, 0.0, 0.0], [0.159666076, 0.0, 0.0, 0.0], [-0.239367723, 0.0, 0.0, 0.0], [0.0103259813, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_365(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.445500016, 3.0, 4.0, 0.0], [0.547500014, 5.0, 6.0, 0.0], [0.436500013, 7.0, 8.0, 0.0], [0.455500007, 9.0, 10.0, 0.0], [0.541499972, 11.0, 12.0, 0.0], [0.588, 13.0, 14.0, 0.0], [0.434499979, 15.0, 16.0, 0.0], [0.263288915, 0.0, 0.0, 0.0], [0.446500003, 17.0, 18.0, 0.0], [0.463499993, 19.0, 20.0, 0.0], [0.0310201924, 0.0, 0.0, 0.0], [0.139737844, 0.0, 0.0, 0.0], [0.564499974, 21.0, 22.0, 0.0], [0.620499969, 23.0, 24.0, 0.0], [0.432500005, 25.0, 26.0, 0.0], [-0.164668769, 0.0, 0.0, 0.0], [-0.0136021972, 0.0, 0.0, 0.0], [-0.298740327, 0.0, 0.0, 0.0], [0.231166422, 0.0, 0.0, 0.0], [0.466499984, 27.0, 28.0, 0.0], [0.557999969, 29.0, 30.0, 0.0], [-0.107295223, 0.0, 0.0, 0.0], [0.0723872706, 0.0, 0.0, 0.0], [-0.0196071044, 0.0, 0.0, 0.0], [-0.00409837812, 0.0, 0.0, 0.0], [0.130169451, 0.0, 0.0, 0.0], [-0.125459507, 0.0, 0.0, 0.0], [-0.00430839416, 0.0, 0.0, 0.0], [-0.0612076931, 0.0, 0.0, 0.0], [0.0670657679, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 8, 17, 18, 19, 27, 28, 11, 12, 29, 30, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 10, 20, 2, 5, 6, 13, 21, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_366(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 1.0], [-0.999500036, 3.0, 4.0, 3.0], [-0.870499969, 5.0, 6.0, 4.0], [-0.210500002, 7.0, 8.0, 0.0], [-0.71449995, 9.0, 10.0, 1.0], [0.678499997, 11.0, 12.0, 2.0], [0.728500009, 13.0, 14.0, 2.0], [-0.0130070318, 0.0, 0.0, 0.0], [-0.102911443, 0.0, 0.0, 0.0], [-0.721500039, 15.0, 16.0, 1.0], [0.458499998, 17.0, 18.0, 2.0], [0.519500017, 19.0, 20.0, 2.0], [-0.175500005, 21.0, 22.0, 0.0], [0.715499997, 23.0, 24.0, 2.0], [-0.960500002, 25.0, 26.0, 3.0], [0.504500031, 27.0, 28.0, 2.0], [-0.1279338, 0.0, 0.0, 0.0], [-0.0507947654, 0.0, 0.0, 0.0], [-0.2755, 29.0, 30.0, 0.0], [-0.00217480236, 0.0, 0.0, 0.0], [-0.99150002, 31.0, 32.0, 3.0], [-0.0425360426, 0.0, 0.0, 0.0], [0.103507318, 0.0, 0.0, 0.0], [-0.985499978, 33.0, 34.0, 3.0], [0.117639154, 0.0, 0.0, 0.0], [-0.0971885547, 0.0, 0.0, 0.0], [0.0178553089, 0.0, 0.0, 0.0], [-0.00964659452, 0.0, 0.0, 0.0], [0.0497297235, 0.0, 0.0, 0.0], [-0.0106663378, 0.0, 0.0, 0.0], [0.0998885185, 0.0, 0.0, 0.0], [-0.021971263, 0.0, 0.0, 0.0], [-0.19798021, 0.0, 0.0, 0.0], [-0.0724188462, 0.0, 0.0, 0.0], [0.0612370409, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 27, 28, 16, 17, 29, 30, 19, 31, 32, 21, 22, 33, 34, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 10, 18, 2, 5, 11, 20, 12, 6, 13, 23, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_367(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.874000013, 1.0, 2.0, 1.0], [-0.0779701322, 0.0, 0.0, 0.0], [0.407499999, 3.0, 4.0, 2.0], [-0.79550004, 5.0, 6.0, 1.0], [-0.797500014, 7.0, 8.0, 1.0], [-0.818500042, 9.0, 10.0, 1.0], [0.277500004, 11.0, 12.0, 2.0], [-0.965499997, 13.0, 14.0, 4.0], [-0.210500002, 15.0, 16.0, 0.0], [0.0311472882, 0.0, 0.0, 0.0], [0.133238897, 0.0, 0.0, 0.0], [-0.0999410227, 0.0, 0.0, 0.0], [-0.208999991, 17.0, 18.0, 0.0], [-0.161995009, 0.0, 0.0, 0.0], [-0.996500015, 19.0, 20.0, 3.0], [-0.506999969, 21.0, 22.0, 1.0], [-0.191500008, 23.0, 24.0, 0.0], [-0.0198044013, 0.0, 0.0, 0.0], [0.0860590413, 0.0, 0.0, 0.0], [0.0612838082, 0.0, 0.0, 0.0], [-0.0517141894, 0.0, 0.0, 0.0], [0.0370967276, 0.0, 0.0, 0.0], [-0.0354024805, 0.0, 0.0, 0.0], [-0.0981678143, 0.0, 0.0, 0.0], [0.0461159907, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 17, 18, 13, 19, 20, 21, 22, 23, 24])
    branch_indices = np.array([0, 2, 3, 5, 6, 12, 4, 7, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_368(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.625499964, 3.0, 4.0, 1.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.635499954, 7.0, 8.0, 1.0], [-0.139754936, 0.0, 0.0, 0.0], [-0.235500008, 9.0, 10.0, 0.0], [-0.584499955, 11.0, 12.0, 1.0], [-0.934499979, 13.0, 14.0, 4.0], [0.105445288, 0.0, 0.0, 0.0], [-0.0338581055, 0.0, 0.0, 0.0], [0.62349999, 15.0, 16.0, 2.0], [-0.110912271, 0.0, 0.0, 0.0], [-0.96449995, 17.0, 18.0, 4.0], [-0.137499988, 19.0, 20.0, 0.0], [-0.200500011, 21.0, 22.0, 0.0], [0.00915997196, 0.0, 0.0, 0.0], [0.197804198, 0.0, 0.0, 0.0], [-0.0787464306, 0.0, 0.0, 0.0], [-0.989500046, 23.0, 24.0, 3.0], [0.0157475825, 0.0, 0.0, 0.0], [-0.0730340555, 0.0, 0.0, 0.0], [-0.184688091, 0.0, 0.0, 0.0], [-0.0232944284, 0.0, 0.0, 0.0], [-0.0367735699, 0.0, 0.0, 0.0], [0.0650304109, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 15, 16, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 10, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_369(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.5625, 3.0, 4.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [0.560500026, 7.0, 8.0, 0.0], [-0.105123438, 0.0, 0.0, 0.0], [0.615499973, 9.0, 10.0, 0.0], [0.621500015, 11.0, 12.0, 0.0], [0.549000025, 13.0, 14.0, 0.0], [0.0860070586, 0.0, 0.0, 0.0], [0.0230725259, 0.0, 0.0, 0.0], [0.121219531, 0.0, 0.0, 0.0], [-0.00163020007, 0.0, 0.0, 0.0], [-0.0487935208, 0.0, 0.0, 0.0], [0.543500006, 15.0, 16.0, 0.0], [-0.0741055459, 0.0, 0.0, 0.0], [-0.000563643174, 0.0, 0.0, 0.0], [0.0863637477, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 14, 8, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_370(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [0.074149996, 7.0, 8.0, 0.0], [0.143199593, 0.0, 0.0, 0.0], [-0.280783743, 0.0, 0.0, 0.0], [0.0894500017, 9.0, 10.0, 0.0], [0.00185999996, 11.0, 12.0, 0.0], [-0.22532846, 0.0, 0.0, 0.0], [0.0885500014, 13.0, 14.0, 0.0], [0.0941499993, 15.0, 16.0, 0.0], [0.00118499994, 17.0, 18.0, 0.0], [0.00280499994, 19.0, 20.0, 0.0], [0.0860000029, 21.0, 22.0, 0.0], [0.139573053, 0.0, 0.0, 0.0], [-0.146138519, 0.0, 0.0, 0.0], [0.111500002, 23.0, 24.0, 0.0], [-0.00243436592, 0.0, 0.0, 0.0], [-0.197164729, 0.0, 0.0, 0.0], [0.245337516, 0.0, 0.0, 0.0], [0.0228832085, 0.0, 0.0, 0.0], [0.0379314348, 0.0, 0.0, 0.0], [-0.0397247337, 0.0, 0.0, 0.0], [0.0990115628, 0.0, 0.0, 0.0], [-0.0167167373, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 21, 22, 14, 15, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 13, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_371(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.923500001, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 4.0], [-0.0746500045, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [0.263000011, 9.0, 10.0, 0.0], [-0.822000027, 11.0, 12.0, 2.0], [-0.99849999, 13.0, 14.0, 1.0], [-0.393000007, 15.0, 16.0, 0.0], [-0.301999986, 17.0, 18.0, 0.0], [-0.164499998, 19.0, 20.0, 0.0], [0.109661624, 0.0, 0.0, 0.0], [0.170086041, 0.0, 0.0, 0.0], [-0.360500008, 21.0, 22.0, 0.0], [0.541999996, 23.0, 24.0, 0.0], [0.419, 25.0, 26.0, 0.0], [-0.421000004, 27.0, 28.0, 0.0], [-0.169499993, 29.0, 30.0, 0.0], [-0.199819341, 0.0, 0.0, 0.0], [0.279500008, 31.0, 32.0, 0.0], [0.14221777, 0.0, 0.0, 0.0], [-0.299208254, 0.0, 0.0, 0.0], [-0.110712528, 0.0, 0.0, 0.0], [-0.252499998, 33.0, 34.0, 0.0], [-0.227047741, 0.0, 0.0, 0.0], [0.00471023843, 0.0, 0.0, 0.0], [-0.654500008, 35.0, 36.0, 2.0], [0.10088785, 0.0, 0.0, 0.0], [-0.040953733, 0.0, 0.0, 0.0], [0.135020077, 0.0, 0.0, 0.0], [-0.165536284, 0.0, 0.0, 0.0], [0.00753376214, 0.0, 0.0, 0.0], [0.269209504, 0.0, 0.0, 0.0], [0.0507746302, 0.0, 0.0, 0.0], [0.101244628, 0.0, 0.0, 0.0], [-0.0110621341, 0.0, 0.0, 0.0], [-0.103657208, 0.0, 0.0, 0.0], [0.0520549417, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 31, 32, 19, 20, 10, 11, 21, 33, 34, 23, 24, 35, 36, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 9, 2, 5, 12, 22, 6, 13, 14, 25])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_372(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.753000021, 3.0, 4.0, 1.0], [-0.792500019, 5.0, 6.0, 1.0], [-0.0112431021, 0.0, 0.0, 0.0], [-0.0807224587, 0.0, 0.0, 0.0], [-0.932500005, 7.0, 8.0, 4.0], [-0.776499987, 9.0, 10.0, 1.0], [-0.946500003, 11.0, 12.0, 4.0], [-0.0517637432, 0.0, 0.0, 0.0], [-0.937999964, 13.0, 14.0, 4.0], [-0.766499996, 15.0, 16.0, 1.0], [-0.228500009, 17.0, 18.0, 0.0], [0.150720149, 0.0, 0.0, 0.0], [-0.128875956, 0.0, 0.0, 0.0], [0.033961989, 0.0, 0.0, 0.0], [0.103438281, 0.0, 0.0, 0.0], [-0.736500025, 19.0, 20.0, 1.0], [-0.0548756905, 0.0, 0.0, 0.0], [0.0594244711, 0.0, 0.0, 0.0], [-0.0458333641, 0.0, 0.0, 0.0], [0.00746842381, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 17, 18, 12, 8, 13, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_373(xs):
    #Predicts Class 1
    function_dict = np.array([[0.67750001, 1.0, 2.0, 2.0], [0.657500029, 3.0, 4.0, 2.0], [-0.242500007, 5.0, 6.0, 0.0], [0.642500043, 7.0, 8.0, 2.0], [-0.107648931, 0.0, 0.0, 0.0], [0.740999997, 9.0, 10.0, 2.0], [-0.089053452, 0.0, 0.0, 0.0], [0.631500006, 11.0, 12.0, 2.0], [0.0839625448, 0.0, 0.0, 0.0], [-0.600999951, 13.0, 14.0, 1.0], [-0.0139405774, 0.0, 0.0, 0.0], [-0.887500048, 15.0, 16.0, 4.0], [-0.1309513, 0.0, 0.0, 0.0], [0.0352001302, 0.0, 0.0, 0.0], [0.183322683, 0.0, 0.0, 0.0], [-0.00369249587, 0.0, 0.0, 0.0], [0.0745991543, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 13, 14, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_374(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [0.673500001, 3.0, 4.0, 2.0], [0.0649744421, 0.0, 0.0, 0.0], [-0.426999986, 5.0, 6.0, 1.0], [-0.240999997, 7.0, 8.0, 0.0], [-0.4745, 9.0, 10.0, 1.0], [-0.266499996, 11.0, 12.0, 0.0], [0.730499983, 13.0, 14.0, 2.0], [-0.915500045, 15.0, 16.0, 4.0], [-0.506500006, 17.0, 18.0, 1.0], [-0.0963516608, 0.0, 0.0, 0.0], [0.00340912817, 0.0, 0.0, 0.0], [0.133293942, 0.0, 0.0, 0.0], [-0.199544594, 0.0, 0.0, 0.0], [-0.00619923091, 0.0, 0.0, 0.0], [0.105048969, 0.0, 0.0, 0.0], [-0.861500025, 19.0, 20.0, 4.0], [-0.00994758587, 0.0, 0.0, 0.0], [0.111913748, 0.0, 0.0, 0.0], [-0.138035685, 0.0, 0.0, 0.0], [0.0304398071, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 11, 12, 13, 14, 15, 19, 20, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4, 7, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_375(xs):
    #Predicts Class 3
    function_dict = np.array([[0.0476500019, 1.0, 2.0, 0.0], [0.0447499976, 3.0, 4.0, 0.0], [0.0551500022, 5.0, 6.0, 0.0], [0.0293500014, 7.0, 8.0, 0.0], [-0.29647544, 0.0, 0.0, 0.0], [0.165798217, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.02795, 11.0, 12.0, 0.0], [0.0353999995, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.992499948, 17.0, 18.0, 1.0], [0.02685, 19.0, 20.0, 0.0], [-0.215854585, 0.0, 0.0, 0.0], [0.257124007, 0.0, 0.0, 0.0], [0.0412999988, 21.0, 22.0, 0.0], [0.0740500018, 23.0, 24.0, 0.0], [0.0784000009, 25.0, 26.0, 0.0], [0.228500009, 27.0, 28.0, 0.0], [0.113773301, 0.0, 0.0, 0.0], [-0.00397542957, 0.0, 0.0, 0.0], [0.253028899, 0.0, 0.0, 0.0], [-0.0602749325, 0.0, 0.0, 0.0], [0.0656724945, 0.0, 0.0, 0.0], [0.244219795, 0.0, 0.0, 0.0], [0.0148930233, 0.0, 0.0, 0.0], [-0.209745556, 0.0, 0.0, 0.0], [0.0256371032, 0.0, 0.0, 0.0], [-0.190519109, 0.0, 0.0, 0.0], [-0.0167926494, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 21, 22, 4, 5, 23, 24, 25, 26, 27, 28, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 2, 6, 9, 15, 16, 10, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_376(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0476500019, 1.0, 2.0, 0.0], [0.0447499976, 3.0, 4.0, 0.0], [0.0551500022, 5.0, 6.0, 0.0], [0.0293500014, 7.0, 8.0, 0.0], [0.296835124, 0.0, 0.0, 0.0], [-0.16279085, 0.0, 0.0, 0.0], [0.058699999, 9.0, 10.0, 0.0], [0.02795, 11.0, 12.0, 0.0], [0.0353999995, 13.0, 14.0, 0.0], [0.139773846, 0.0, 0.0, 0.0], [0.0740500018, 15.0, 16.0, 0.0], [0.02685, 17.0, 18.0, 0.0], [0.216466665, 0.0, 0.0, 0.0], [-0.25263086, 0.0, 0.0, 0.0], [0.038350001, 19.0, 20.0, 0.0], [-0.145877615, 0.0, 0.0, 0.0], [0.0760499984, 21.0, 22.0, 0.0], [0.00282810791, 0.0, 0.0, 0.0], [-0.252231091, 0.0, 0.0, 0.0], [0.0601193719, 0.0, 0.0, 0.0], [-0.06487941, 0.0, 0.0, 0.0], [0.134153306, 0.0, 0.0, 0.0], [-0.0198856555, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 19, 20, 4, 5, 9, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_377(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.851999998, 3.0, 4.0, 2.0], [0.00518500013, 5.0, 6.0, 0.0], [0.615499973, 7.0, 8.0, 0.0], [-0.123814531, 0.0, 0.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.527500033, 11.0, 12.0, 0.0], [0.569999993, 13.0, 14.0, 0.0], [0.621500015, 15.0, 16.0, 0.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.995499969, 19.0, 20.0, 1.0], [-0.992499948, 21.0, 22.0, 1.0], [0.56400001, 23.0, 24.0, 0.0], [0.561499953, 25.0, 26.0, 0.0], [0.225659743, 0.0, 0.0, 0.0], [0.618499994, 27.0, 28.0, 0.0], [0.0477392301, 0.0, 0.0, 0.0], [0.156417951, 0.0, 0.0, 0.0], [-0.360500008, 29.0, 30.0, 0.0], [-0.0711999983, 31.0, 32.0, 0.0], [0.0205331184, 0.0, 0.0, 0.0], [0.228500009, 33.0, 34.0, 0.0], [-0.0876453593, 0.0, 0.0, 0.0], [-0.141188234, 0.0, 0.0, 0.0], [0.0492221974, 0.0, 0.0, 0.0], [0.000290174474, 0.0, 0.0, 0.0], [-0.138427615, 0.0, 0.0, 0.0], [-0.195138827, 0.0, 0.0, 0.0], [-0.0451494232, 0.0, 0.0, 0.0], [-0.0571099296, 0.0, 0.0, 0.0], [0.100584574, 0.0, 0.0, 0.0], [-0.245592564, 0.0, 0.0, 0.0], [-0.0414702483, 0.0, 0.0, 0.0], [0.208655909, 0.0, 0.0, 0.0], [0.0473803729, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 14, 27, 28, 16, 4, 17, 29, 30, 31, 32, 20, 33, 34, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 2, 5, 9, 18, 10, 19, 6, 11, 21, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_378(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.684499979, 1.0, 2.0, 1.0], [-0.983500004, 3.0, 4.0, 3.0], [-0.166500002, 5.0, 6.0, 0.0], [-0.739500046, 7.0, 8.0, 1.0], [-0.707499981, 9.0, 10.0, 1.0], [-0.962499976, 11.0, 12.0, 3.0], [0.543500006, 13.0, 14.0, 2.0], [-0.747500002, 15.0, 16.0, 1.0], [-0.700500011, 17.0, 18.0, 1.0], [-0.739500046, 19.0, 20.0, 1.0], [0.073604621, 0.0, 0.0, 0.0], [0.657500029, 21.0, 22.0, 2.0], [-0.631500006, 23.0, 24.0, 1.0], [-0.0883644298, 0.0, 0.0, 0.0], [-0.60800004, 25.0, 26.0, 1.0], [-0.995499969, 27.0, 28.0, 3.0], [-0.115376353, 0.0, 0.0, 0.0], [0.628499985, 29.0, 30.0, 2.0], [-0.0384879671, 0.0, 0.0, 0.0], [0.590499997, 31.0, 32.0, 2.0], [-0.926499963, 33.0, 34.0, 4.0], [-0.213499993, 35.0, 36.0, 0.0], [-0.221500009, 37.0, 38.0, 0.0], [0.143669948, 0.0, 0.0, 0.0], [-0.939499974, 39.0, 40.0, 3.0], [0.155850232, 0.0, 0.0, 0.0], [-0.1435, 41.0, 42.0, 0.0], [-0.0202054325, 0.0, 0.0, 0.0], [0.0673590973, 0.0, 0.0, 0.0], [0.16839464, 0.0, 0.0, 0.0], [-0.0307633374, 0.0, 0.0, 0.0], [0.0311856214, 0.0, 0.0, 0.0], [-0.0918372571, 0.0, 0.0, 0.0], [-0.00813098624, 0.0, 0.0, 0.0], [-0.145258009, 0.0, 0.0, 0.0], [-0.217493653, 0.0, 0.0, 0.0], [-0.0152379991, 0.0, 0.0, 0.0], [0.0376120768, 0.0, 0.0, 0.0], [-0.120630845, 0.0, 0.0, 0.0], [0.0312646292, 0.0, 0.0, 0.0], [-0.0740267336, 0.0, 0.0, 0.0], [0.0904411897, 0.0, 0.0, 0.0], [-0.0353511088, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 29, 30, 18, 31, 32, 33, 34, 10, 35, 36, 37, 38, 23, 39, 40, 13, 25, 41, 42])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 9, 19, 20, 2, 5, 11, 21, 22, 12, 24, 6, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_379(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.654500008, 3.0, 4.0, 1.0], [-0.961500049, 5.0, 6.0, 4.0], [-0.960500002, 7.0, 8.0, 4.0], [-0.256500006, 9.0, 10.0, 0.0], [-0.25150001, 11.0, 12.0, 0.0], [-0.267499983, 13.0, 14.0, 0.0], [0.436500013, 15.0, 16.0, 2.0], [0.526499987, 17.0, 18.0, 2.0], [-0.0263205767, 0.0, 0.0, 0.0], [0.0998906568, 0.0, 0.0, 0.0], [-0.278500021, 19.0, 20.0, 0.0], [0.461499989, 21.0, 22.0, 2.0], [-0.953500032, 23.0, 24.0, 4.0], [-0.567499995, 25.0, 26.0, 1.0], [0.279500008, 27.0, 28.0, 2.0], [-0.153536201, 0.0, 0.0, 0.0], [-0.761500001, 29.0, 30.0, 1.0], [-0.0848309547, 0.0, 0.0, 0.0], [0.0106203975, 0.0, 0.0, 0.0], [-0.105752259, 0.0, 0.0, 0.0], [0.422999978, 31.0, 32.0, 2.0], [0.590499997, 33.0, 34.0, 2.0], [-0.0509625338, 0.0, 0.0, 0.0], [-0.944499969, 35.0, 36.0, 4.0], [-0.932500005, 37.0, 38.0, 4.0], [-0.133458778, 0.0, 0.0, 0.0], [-0.0785604119, 0.0, 0.0, 0.0], [0.0631276295, 0.0, 0.0, 0.0], [-0.061317414, 0.0, 0.0, 0.0], [0.154056504, 0.0, 0.0, 0.0], [0.0490788706, 0.0, 0.0, 0.0], [-0.063509509, 0.0, 0.0, 0.0], [0.185176536, 0.0, 0.0, 0.0], [0.01584653, 0.0, 0.0, 0.0], [0.149247766, 0.0, 0.0, 0.0], [0.0113333734, 0.0, 0.0, 0.0], [-0.0607840195, 0.0, 0.0, 0.0], [0.0418358035, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 29, 30, 18, 9, 10, 19, 20, 31, 32, 33, 34, 23, 35, 36, 37, 38, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 4, 2, 5, 11, 12, 21, 22, 6, 13, 24, 14, 25])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_380(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.968500018, 1.0, 2.0, 4.0], [0.438499987, 3.0, 4.0, 2.0], [-0.0683000013, 5.0, 6.0, 0.0], [0.291500002, 7.0, 8.0, 2.0], [-0.9745, 9.0, 10.0, 4.0], [-0.102499999, 11.0, 12.0, 0.0], [-0.0912986025, 0.0, 0.0, 0.0], [-0.0330820382, 0.0, 0.0, 0.0], [0.0796782598, 0.0, 0.0, 0.0], [-0.977499962, 13.0, 14.0, 4.0], [-0.17419365, 0.0, 0.0, 0.0], [-0.963500023, 15.0, 16.0, 4.0], [0.124800526, 0.0, 0.0, 0.0], [-0.0636059865, 0.0, 0.0, 0.0], [0.0731666386, 0.0, 0.0, 0.0], [0.528999984, 17.0, 18.0, 2.0], [-0.700500011, 19.0, 20.0, 1.0], [-0.022554554, 0.0, 0.0, 0.0], [0.126382098, 0.0, 0.0, 0.0], [-0.0606284775, 0.0, 0.0, 0.0], [0.0108500719, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 13, 14, 10, 17, 18, 19, 20, 12, 6])
    branch_indices = np.array([0, 1, 3, 4, 9, 2, 5, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_381(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [-0.613499999, 3.0, 4.0, 2.0], [-0.0705069602, 0.0, 0.0, 0.0], [-0.205500007, 5.0, 6.0, 0.0], [-0.206499994, 7.0, 8.0, 0.0], [-0.273499995, 9.0, 10.0, 0.0], [-0.203500003, 11.0, 12.0, 0.0], [0.142525867, 0.0, 0.0, 0.0], [-0.0676499978, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.851999998, 17.0, 18.0, 2.0], [0.172826841, 0.0, 0.0, 0.0], [-0.146499991, 19.0, 20.0, 0.0], [-0.0764429197, 0.0, 0.0, 0.0], [0.0487570092, 0.0, 0.0, 0.0], [0.0427063592, 0.0, 0.0, 0.0], [-0.110125929, 0.0, 0.0, 0.0], [-0.149405196, 0.0, 0.0, 0.0], [-0.0129975742, 0.0, 0.0, 0.0], [-0.0362457819, 0.0, 0.0, 0.0], [0.00241861446, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 11, 19, 20, 7, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 12, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_382(xs):
    #Predicts Class 4
    function_dict = np.array([[0.1105, 1.0, 2.0, 0.0], [0.0945499986, 3.0, 4.0, 0.0], [0.157999992, 5.0, 6.0, 0.0], [0.0912000015, 7.0, 8.0, 0.0], [-0.206050798, 0.0, 0.0, 0.0], [0.143543437, 0.0, 0.0, 0.0], [0.193500012, 9.0, 10.0, 0.0], [0.082949996, 11.0, 12.0, 0.0], [0.0923999995, 13.0, 14.0, 0.0], [-0.119611971, 0.0, 0.0, 0.0], [0.194499999, 15.0, 16.0, 0.0], [0.0790500045, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [0.149932012, 0.0, 0.0, 0.0], [0.029926816, 0.0, 0.0, 0.0], [0.157400802, 0.0, 0.0, 0.0], [0.202500001, 21.0, 22.0, 0.0], [-0.00185346371, 0.0, 0.0, 0.0], [0.153460309, 0.0, 0.0, 0.0], [-0.102725402, 0.0, 0.0, 0.0], [0.160976842, 0.0, 0.0, 0.0], [-0.0691956431, 0.0, 0.0, 0.0], [0.069391869, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_383(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [-0.0123999994, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [-0.032850001, 7.0, 8.0, 0.0], [-0.726000011, 9.0, 10.0, 2.0], [0.181344897, 0.0, 0.0, 0.0], [0.363499999, 11.0, 12.0, 0.0], [-0.0802500024, 13.0, 14.0, 0.0], [0.177552223, 0.0, 0.0, 0.0], [0.198500007, 15.0, 16.0, 0.0], [0.0385417081, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.407999992, 19.0, 20.0, 0.0], [-0.1505, 21.0, 22.0, 0.0], [-0.923500001, 23.0, 24.0, 2.0], [-0.211765245, 0.0, 0.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [0.276499987, 27.0, 28.0, 0.0], [-0.000111985421, 0.0, 0.0, 0.0], [0.404500008, 29.0, 30.0, 0.0], [0.418500006, 31.0, 32.0, 0.0], [-0.00799589977, 0.0, 0.0, 0.0], [0.137797266, 0.0, 0.0, 0.0], [-0.223549381, 0.0, 0.0, 0.0], [0.117664672, 0.0, 0.0, 0.0], [-0.0213498659, 0.0, 0.0, 0.0], [-0.145577058, 0.0, 0.0, 0.0], [-0.0186305046, 0.0, 0.0, 0.0], [-0.23410742, 0.0, 0.0, 0.0], [0.0227843896, 0.0, 0.0, 0.0], [0.136360511, 0.0, 0.0, 0.0], [-0.112626225, 0.0, 0.0, 0.0], [0.00820886996, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 15, 25, 26, 10, 5, 27, 28, 18, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 9, 16, 2, 6, 11, 17, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_384(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.970499992, 3.0, 4.0, 4.0], [0.442499995, 5.0, 6.0, 2.0], [-0.860499978, 7.0, 8.0, 1.0], [-0.228500009, 9.0, 10.0, 0.0], [-0.995499969, 11.0, 12.0, 3.0], [0.446500003, 13.0, 14.0, 2.0], [-0.00111147878, 0.0, 0.0, 0.0], [-0.144914329, 0.0, 0.0, 0.0], [-0.0592154153, 0.0, 0.0, 0.0], [-0.113499999, 15.0, 16.0, 0.0], [0.0024320446, 0.0, 0.0, 0.0], [0.139145538, 0.0, 0.0, 0.0], [-0.108023442, 0.0, 0.0, 0.0], [-0.166500002, 17.0, 18.0, 0.0], [0.104157738, 0.0, 0.0, 0.0], [-0.048487857, 0.0, 0.0, 0.0], [-0.189500004, 19.0, 20.0, 0.0], [-0.141499996, 21.0, 22.0, 0.0], [0.00686430745, 0.0, 0.0, 0.0], [-0.0882928073, 0.0, 0.0, 0.0], [0.124248296, 0.0, 0.0, 0.0], [-0.00905113295, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 15, 16, 11, 12, 13, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 4, 10, 2, 5, 6, 14, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_385(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.345499992, 3.0, 4.0, 0.0], [-0.33950001, 5.0, 6.0, 0.0], [-0.0724173933, 0.0, 0.0, 0.0], [-0.2755, 7.0, 8.0, 0.0], [0.0468330272, 0.0, 0.0, 0.0], [-0.980499983, 9.0, 10.0, 3.0], [0.638499975, 11.0, 12.0, 2.0], [-0.6875, 13.0, 14.0, 1.0], [-0.254000008, 15.0, 16.0, 0.0], [-0.122745328, 0.0, 0.0, 0.0], [-0.561500013, 17.0, 18.0, 1.0], [0.149110228, 0.0, 0.0, 0.0], [-0.74150002, 19.0, 20.0, 1.0], [0.53550005, 21.0, 22.0, 2.0], [0.657999992, 23.0, 24.0, 2.0], [-0.0659650639, 0.0, 0.0, 0.0], [0.0787636489, 0.0, 0.0, 0.0], [-0.0693236068, 0.0, 0.0, 0.0], [0.0115462542, 0.0, 0.0, 0.0], [-0.0824067593, 0.0, 0.0, 0.0], [0.122752503, 0.0, 0.0, 0.0], [-0.00397073757, 0.0, 0.0, 0.0], [0.0973396748, 0.0, 0.0, 0.0], [-0.0305458773, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 17, 18, 12, 19, 20, 21, 22, 5, 23, 24, 16, 10])
    branch_indices = np.array([0, 1, 4, 7, 11, 8, 13, 14, 2, 6, 9, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_386(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.436999977, 3.0, 4.0, 1.0], [-0.266499996, 5.0, 6.0, 0.0], [-0.236499995, 7.0, 8.0, 0.0], [-0.0909484625, 0.0, 0.0, 0.0], [0.653499961, 9.0, 10.0, 2.0], [0.122621179, 0.0, 0.0, 0.0], [-0.551499963, 11.0, 12.0, 1.0], [-0.568500042, 13.0, 14.0, 1.0], [-0.00894825999, 0.0, 0.0, 0.0], [-0.0571847707, 0.0, 0.0, 0.0], [-0.99849999, 15.0, 16.0, 3.0], [-0.298500001, 17.0, 18.0, 0.0], [-0.632500052, 19.0, 20.0, 1.0], [-0.208499998, 21.0, 22.0, 0.0], [0.0931290239, 0.0, 0.0, 0.0], [-0.10079357, 0.0, 0.0, 0.0], [0.00118961593, 0.0, 0.0, 0.0], [0.128534213, 0.0, 0.0, 0.0], [-0.0133770956, 0.0, 0.0, 0.0], [0.072432436, 0.0, 0.0, 0.0], [-0.131329641, 0.0, 0.0, 0.0], [-0.0186621957, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 20, 21, 22, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_387(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.267499983, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [-0.0893382877, 0.0, 0.0, 0.0], [0.137973547, 0.0, 0.0, 0.0], [-0.212500006, 9.0, 10.0, 0.0], [-0.390500009, 11.0, 12.0, 0.0], [-0.0774803087, 0.0, 0.0, 0.0], [-0.253499985, 13.0, 14.0, 0.0], [-0.20449999, 15.0, 16.0, 0.0], [0.0972949937, 0.0, 0.0, 0.0], [0.0205806009, 0.0, 0.0, 0.0], [-0.0043298048, 0.0, 0.0, 0.0], [-0.0914952606, 0.0, 0.0, 0.0], [-0.2095, 17.0, 18.0, 0.0], [-0.193500012, 19.0, 20.0, 0.0], [0.119206682, 0.0, 0.0, 0.0], [0.0440479442, 0.0, 0.0, 0.0], [-0.0959100872, 0.0, 0.0, 0.0], [0.000401480269, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 13, 14, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_388(xs):
    #Predicts Class 4
    function_dict = np.array([[0.190499991, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.196500003, 5.0, 6.0, 0.0], [0.0941499993, 7.0, 8.0, 0.0], [0.152999997, 9.0, 10.0, 0.0], [0.195499986, 11.0, 12.0, 0.0], [-0.0369915515, 0.0, 0.0, 0.0], [0.0917500034, 13.0, 14.0, 0.0], [0.104308434, 0.0, 0.0, 0.0], [-0.177294195, 0.0, 0.0, 0.0], [0.0122021912, 0.0, 0.0, 0.0], [0.0389334783, 0.0, 0.0, 0.0], [0.147505417, 0.0, 0.0, 0.0], [0.0892499983, 15.0, 16.0, 0.0], [-0.140422389, 0.0, 0.0, 0.0], [-0.00123717135, 0.0, 0.0, 0.0], [0.140342906, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 14, 8, 9, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_389(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.0925903842, 0.0, 0.0, 0.0], [-0.995499969, 3.0, 4.0, 1.0], [-0.747500002, 5.0, 6.0, 2.0], [-0.194499999, 7.0, 8.0, 0.0], [-0.380499989, 9.0, 10.0, 0.0], [-0.620499969, 11.0, 12.0, 2.0], [-0.191606447, 0.0, 0.0, 0.0], [-0.795000017, 13.0, 14.0, 2.0], [-0.394999981, 15.0, 16.0, 0.0], [-0.169499993, 17.0, 18.0, 0.0], [0.23300001, 19.0, 20.0, 0.0], [0.0101978956, 0.0, 0.0, 0.0], [-0.0618777648, 0.0, 0.0, 0.0], [0.0842838958, 0.0, 0.0, 0.0], [-0.0147360135, 0.0, 0.0, 0.0], [0.19894518, 0.0, 0.0, 0.0], [-0.139576569, 0.0, 0.0, 0.0], [0.00513902353, 0.0, 0.0, 0.0], [-0.0091848895, 0.0, 0.0, 0.0], [-0.172396362, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 19, 20, 12, 7, 13, 14])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 11, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_390(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.753000021, 3.0, 4.0, 1.0], [-0.792500019, 5.0, 6.0, 1.0], [-0.0121733416, 0.0, 0.0, 0.0], [-0.0810070261, 0.0, 0.0, 0.0], [-0.932500005, 7.0, 8.0, 4.0], [0.414499998, 9.0, 10.0, 2.0], [0.455500007, 11.0, 12.0, 2.0], [-0.0368510932, 0.0, 0.0, 0.0], [-0.932999969, 13.0, 14.0, 4.0], [-0.95449996, 15.0, 16.0, 3.0], [0.398499995, 17.0, 18.0, 2.0], [0.555999994, 19.0, 20.0, 2.0], [-0.114027075, 0.0, 0.0, 0.0], [-0.0015549385, 0.0, 0.0, 0.0], [-0.24149999, 21.0, 22.0, 0.0], [-0.698500037, 23.0, 24.0, 1.0], [0.0697869062, 0.0, 0.0, 0.0], [-0.0430027284, 0.0, 0.0, 0.0], [0.146691173, 0.0, 0.0, 0.0], [0.0226479247, 0.0, 0.0, 0.0], [0.0531541593, 0.0, 0.0, 0.0], [-0.00515574822, 0.0, 0.0, 0.0], [-0.106814355, 0.0, 0.0, 0.0], [0.00957383588, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 17, 18, 19, 20, 8, 13, 14, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_391(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.950500011, 3.0, 4.0, 4.0], [-0.941499949, 5.0, 6.0, 4.0], [-0.107500002, 7.0, 8.0, 0.0], [-0.982499957, 9.0, 10.0, 3.0], [-0.108663991, 0.0, 0.0, 0.0], [-0.186500013, 11.0, 12.0, 0.0], [-0.17050001, 13.0, 14.0, 0.0], [-0.112287693, 0.0, 0.0, 0.0], [-0.0205154587, 0.0, 0.0, 0.0], [0.192344353, 0.0, 0.0, 0.0], [-0.256500006, 15.0, 16.0, 0.0], [-0.0941661149, 0.0, 0.0, 0.0], [-0.710500002, 17.0, 18.0, 1.0], [-0.9745, 19.0, 20.0, 4.0], [-0.294499993, 21.0, 22.0, 0.0], [-0.98150003, 23.0, 24.0, 3.0], [-0.0483631343, 0.0, 0.0, 0.0], [0.0538246222, 0.0, 0.0, 0.0], [-0.000189147817, 0.0, 0.0, 0.0], [0.131288096, 0.0, 0.0, 0.0], [0.00859607384, 0.0, 0.0, 0.0], [-0.119078845, 0.0, 0.0, 0.0], [0.0852389261, 0.0, 0.0, 0.0], [-0.0168716591, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 21, 22, 23, 24, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 11, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_392(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.351499975, 1.0, 2.0, 1.0], [0.667500019, 3.0, 4.0, 2.0], [0.056549564, 0.0, 0.0, 0.0], [0.635499954, 5.0, 6.0, 2.0], [0.69749999, 7.0, 8.0, 2.0], [-0.982499957, 9.0, 10.0, 3.0], [-0.976000011, 11.0, 12.0, 3.0], [-0.181499988, 13.0, 14.0, 0.0], [0.713500023, 15.0, 16.0, 2.0], [-0.99150002, 17.0, 18.0, 3.0], [-0.968500018, 19.0, 20.0, 3.0], [-0.0188593566, 0.0, 0.0, 0.0], [0.149817228, 0.0, 0.0, 0.0], [-0.205172285, 0.0, 0.0, 0.0], [0.0339075886, 0.0, 0.0, 0.0], [0.116706453, 0.0, 0.0, 0.0], [0.805500031, 21.0, 22.0, 2.0], [0.000591958757, 0.0, 0.0, 0.0], [0.0732617304, 0.0, 0.0, 0.0], [-0.132579863, 0.0, 0.0, 0.0], [-0.0115528991, 0.0, 0.0, 0.0], [-0.0574800819, 0.0, 0.0, 0.0], [0.0429970883, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 11, 12, 13, 14, 15, 21, 22, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 4, 7, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_393(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.613499999, 3.0, 4.0, 2.0], [0.108500004, 5.0, 6.0, 0.0], [-0.747500002, 7.0, 8.0, 2.0], [-0.601000011, 9.0, 10.0, 2.0], [-0.0628999993, 11.0, 12.0, 0.0], [-0.15020968, 0.0, 0.0, 0.0], [-0.851999998, 13.0, 14.0, 2.0], [0.23300001, 15.0, 16.0, 0.0], [0.128396317, 0.0, 0.0, 0.0], [-0.99849999, 17.0, 18.0, 4.0], [-0.103423193, 0.0, 0.0, 0.0], [0.121204108, 0.0, 0.0, 0.0], [-0.885499954, 19.0, 20.0, 2.0], [-0.0568999983, 21.0, 22.0, 0.0], [-0.0366999991, 23.0, 24.0, 0.0], [0.0823522359, 0.0, 0.0, 0.0], [-0.0712895468, 0.0, 0.0, 0.0], [0.0747318864, 0.0, 0.0, 0.0], [0.000952186063, 0.0, 0.0, 0.0], [-0.0642225593, 0.0, 0.0, 0.0], [0.143051073, 0.0, 0.0, 0.0], [-0.0172527283, 0.0, 0.0, 0.0], [-0.00879420713, 0.0, 0.0, 0.0], [-0.175781459, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 16, 9, 17, 18, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 10, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_394(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.395500004, 5.0, 6.0, 0.0], [-0.177711844, 0.0, 0.0, 0.0], [0.0524090305, 0.0, 0.0, 0.0], [-0.412999988, 7.0, 8.0, 0.0], [-0.378499985, 9.0, 10.0, 0.0], [0.0227752905, 0.0, 0.0, 0.0], [0.138215706, 0.0, 0.0, 0.0], [-0.129268795, 0.0, 0.0, 0.0], [-0.297500014, 11.0, 12.0, 0.0], [-0.838, 13.0, 14.0, 2.0], [-0.292500019, 15.0, 16.0, 0.0], [0.225252107, 0.0, 0.0, 0.0], [-0.0426958576, 0.0, 0.0, 0.0], [-0.151575848, 0.0, 0.0, 0.0], [0.000987085397, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_395(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.424499989, 1.0, 2.0, 0.0], [-0.439999998, 3.0, 4.0, 0.0], [-0.38349998, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [0.123983279, 0.0, 0.0, 0.0], [-0.393000007, 9.0, 10.0, 0.0], [-0.337500006, 11.0, 12.0, 0.0], [-0.0499361455, 0.0, 0.0, 0.0], [0.0445978492, 0.0, 0.0, 0.0], [-0.407499999, 13.0, 14.0, 0.0], [-0.227464303, 0.0, 0.0, 0.0], [0.122432522, 0.0, 0.0, 0.0], [-0.169499993, 15.0, 16.0, 0.0], [-0.102829568, 0.0, 0.0, 0.0], [0.102087215, 0.0, 0.0, 0.0], [-0.997500002, 17.0, 18.0, 1.0], [-0.16049999, 19.0, 20.0, 0.0], [-0.215937272, 0.0, 0.0, 0.0], [0.0466556773, 0.0, 0.0, 0.0], [0.0799314603, 0.0, 0.0, 0.0], [-0.00520240283, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 14, 10, 11, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_396(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.213499993, 1.0, 2.0, 0.0], [-0.938500047, 3.0, 4.0, 4.0], [-0.538499951, 5.0, 6.0, 1.0], [-0.805500031, 7.0, 8.0, 1.0], [-0.929499984, 9.0, 10.0, 4.0], [-0.647500038, 11.0, 12.0, 1.0], [0.723500013, 13.0, 14.0, 2.0], [0.404500008, 15.0, 16.0, 2.0], [-0.960500002, 17.0, 18.0, 3.0], [0.11762806, 0.0, 0.0, 0.0], [-0.828999996, 19.0, 20.0, 4.0], [-0.208499998, 21.0, 22.0, 0.0], [-0.976500034, 23.0, 24.0, 3.0], [-0.119588934, 0.0, 0.0, 0.0], [0.0103518395, 0.0, 0.0, 0.0], [-0.0796520784, 0.0, 0.0, 0.0], [0.0960292891, 0.0, 0.0, 0.0], [-0.242500007, 25.0, 26.0, 0.0], [0.0155246658, 0.0, 0.0, 0.0], [-0.982499957, 27.0, 28.0, 3.0], [-0.754000008, 29.0, 30.0, 4.0], [-0.958500028, 31.0, 32.0, 4.0], [-0.696500003, 33.0, 34.0, 1.0], [-0.114500001, 35.0, 36.0, 0.0], [0.629500031, 37.0, 38.0, 2.0], [-0.0278735869, 0.0, 0.0, 0.0], [-0.145236224, 0.0, 0.0, 0.0], [0.0247850101, 0.0, 0.0, 0.0], [-0.114204273, 0.0, 0.0, 0.0], [0.109272294, 0.0, 0.0, 0.0], [-0.0429879986, 0.0, 0.0, 0.0], [-0.0089132376, 0.0, 0.0, 0.0], [0.162673861, 0.0, 0.0, 0.0], [0.0200030562, 0.0, 0.0, 0.0], [-0.105684392, 0.0, 0.0, 0.0], [0.1765185, 0.0, 0.0, 0.0], [-0.00176596618, 0.0, 0.0, 0.0], [0.0215984993, 0.0, 0.0, 0.0], [-0.0623917878, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 25, 26, 18, 9, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 4, 10, 19, 20, 2, 5, 11, 21, 22, 12, 23, 24, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_397(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.202500001, 1.0, 2.0, 0.0], [-0.218499988, 3.0, 4.0, 0.0], [0.5995, 5.0, 6.0, 2.0], [-0.973500013, 7.0, 8.0, 4.0], [-0.985000014, 9.0, 10.0, 3.0], [0.557500005, 11.0, 12.0, 2.0], [0.0876752734, 0.0, 0.0, 0.0], [-0.768999994, 13.0, 14.0, 1.0], [-0.95449996, 15.0, 16.0, 3.0], [0.577999949, 17.0, 18.0, 2.0], [-0.0349648111, 0.0, 0.0, 0.0], [-0.668500006, 19.0, 20.0, 1.0], [-0.172248289, 0.0, 0.0, 0.0], [-0.228500009, 21.0, 22.0, 0.0], [0.122570813, 0.0, 0.0, 0.0], [-0.291500002, 23.0, 24.0, 0.0], [-0.755499959, 25.0, 26.0, 1.0], [0.441500008, 27.0, 28.0, 2.0], [0.014845293, 0.0, 0.0, 0.0], [0.442499995, 29.0, 30.0, 2.0], [0.069054015, 0.0, 0.0, 0.0], [0.0633523464, 0.0, 0.0, 0.0], [-0.0489435606, 0.0, 0.0, 0.0], [0.0204309952, 0.0, 0.0, 0.0], [-0.0490369424, 0.0, 0.0, 0.0], [-0.066559732, 0.0, 0.0, 0.0], [0.0871764272, 0.0, 0.0, 0.0], [0.0285831969, 0.0, 0.0, 0.0], [0.162520215, 0.0, 0.0, 0.0], [0.027397003, 0.0, 0.0, 0.0], [-0.0927310586, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 25, 26, 27, 28, 18, 10, 29, 30, 20, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 9, 17, 2, 5, 11, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_398(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.183499992, 1.0, 2.0, 0.0], [-0.864500046, 3.0, 4.0, 4.0], [-0.174499989, 5.0, 6.0, 0.0], [-0.983500004, 7.0, 8.0, 3.0], [-0.978999972, 9.0, 10.0, 3.0], [-0.114884734, 0.0, 0.0, 0.0], [-0.149500012, 11.0, 12.0, 0.0], [-0.217500001, 13.0, 14.0, 0.0], [-0.737499952, 15.0, 16.0, 1.0], [0.713500023, 17.0, 18.0, 2.0], [-0.784999967, 19.0, 20.0, 4.0], [-0.989500046, 21.0, 22.0, 3.0], [-0.988499999, 23.0, 24.0, 3.0], [-0.938500047, 25.0, 26.0, 4.0], [-0.199499995, 27.0, 28.0, 0.0], [0.133890763, 0.0, 0.0, 0.0], [-0.649500012, 29.0, 30.0, 1.0], [0.205650866, 0.0, 0.0, 0.0], [0.0296136588, 0.0, 0.0, 0.0], [-0.126613989, 0.0, 0.0, 0.0], [0.0622944497, 0.0, 0.0, 0.0], [0.00763789751, 0.0, 0.0, 0.0], [0.0958233699, 0.0, 0.0, 0.0], [0.536000013, 31.0, 32.0, 2.0], [-0.95599997, 33.0, 34.0, 3.0], [0.0681500956, 0.0, 0.0, 0.0], [-0.107764937, 0.0, 0.0, 0.0], [-0.168577522, 0.0, 0.0, 0.0], [0.0170020796, 0.0, 0.0, 0.0], [-0.117225297, 0.0, 0.0, 0.0], [0.0489195511, 0.0, 0.0, 0.0], [0.0730993003, 0.0, 0.0, 0.0], [-0.0444188565, 0.0, 0.0, 0.0], [-0.142992795, 0.0, 0.0, 0.0], [0.00938703027, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 15, 29, 30, 17, 18, 19, 20, 5, 21, 22, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 9, 10, 2, 6, 11, 12, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_399(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.284500003, 1.0, 2.0, 0.0], [-0.37349999, 3.0, 4.0, 0.0], [-0.283500016, 5.0, 6.0, 0.0], [-0.529500008, 7.0, 8.0, 0.0], [-0.0964782834, 0.0, 0.0, 0.0], [0.0930590481, 0.0, 0.0, 0.0], [-0.260500014, 9.0, 10.0, 0.0], [0.0296340678, 0.0, 0.0, 0.0], [-0.00903054234, 0.0, 0.0, 0.0], [-0.0977774113, 0.0, 0.0, 0.0], [-0.249500006, 11.0, 12.0, 0.0], [0.0895390809, 0.0, 0.0, 0.0], [-0.210500002, 13.0, 14.0, 0.0], [-0.150055692, 0.0, 0.0, 0.0], [0.000815753883, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_400(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.401000023, 3.0, 4.0, 0.0], [-0.02575, 5.0, 6.0, 0.0], [-0.421000004, 7.0, 8.0, 0.0], [-0.38349998, 9.0, 10.0, 0.0], [-0.0403999984, 11.0, 12.0, 0.0], [0.0490000024, 13.0, 14.0, 0.0], [0.0370682366, 0.0, 0.0, 0.0], [-0.145728961, 0.0, 0.0, 0.0], [0.186003074, 0.0, 0.0, 0.0], [0.1105, 15.0, 16.0, 0.0], [-0.119499996, 17.0, 18.0, 0.0], [0.250492483, 0.0, 0.0, 0.0], [-0.16583541, 0.0, 0.0, 0.0], [0.0892000049, 19.0, 20.0, 0.0], [0.0945499986, 21.0, 22.0, 0.0], [0.157999992, 23.0, 24.0, 0.0], [-0.1285, 25.0, 26.0, 0.0], [-0.174969465, 0.0, 0.0, 0.0], [0.109315045, 0.0, 0.0, 0.0], [-0.0809837729, 0.0, 0.0, 0.0], [0.00275165192, 0.0, 0.0, 0.0], [-0.250730455, 0.0, 0.0, 0.0], [0.165359989, 0.0, 0.0, 0.0], [0.00360945123, 0.0, 0.0, 0.0], [-0.0356727019, 0.0, 0.0, 0.0], [0.130900919, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 21, 22, 23, 24, 25, 26, 18, 12, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 4, 10, 15, 16, 2, 5, 11, 17, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_401(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.401000023, 1.0, 2.0, 0.0], [-0.420000017, 3.0, 4.0, 0.0], [-0.38349998, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [0.129693657, 0.0, 0.0, 0.0], [-0.393000007, 9.0, 10.0, 0.0], [-0.29549998, 11.0, 12.0, 0.0], [-0.0912965313, 0.0, 0.0, 0.0], [0.0690227523, 0.0, 0.0, 0.0], [-0.0338202827, 0.0, 0.0, 0.0], [-0.210368186, 0.0, 0.0, 0.0], [0.0876134858, 0.0, 0.0, 0.0], [-0.161500007, 13.0, 14.0, 0.0], [-0.168500006, 15.0, 16.0, 0.0], [-0.158500001, 17.0, 18.0, 0.0], [0.00957135111, 0.0, 0.0, 0.0], [-0.102504179, 0.0, 0.0, 0.0], [0.163605481, 0.0, 0.0, 0.0], [0.000224301446, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 10, 11, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 2, 5, 6, 12, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_402(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.921499968, 1.0, 2.0, 3.0], [-0.536499977, 3.0, 4.0, 1.0], [-0.201499999, 5.0, 6.0, 0.0], [-0.730499983, 7.0, 8.0, 4.0], [-0.827000022, 9.0, 10.0, 4.0], [-0.87349999, 11.0, 12.0, 3.0], [-0.867499948, 13.0, 14.0, 3.0], [-0.213499993, 15.0, 16.0, 0.0], [0.116492964, 0.0, 0.0, 0.0], [-0.144805342, 0.0, 0.0, 0.0], [-0.471000016, 17.0, 18.0, 1.0], [0.125557095, 0.0, 0.0, 0.0], [0.0132064344, 0.0, 0.0, 0.0], [-0.0820982978, 0.0, 0.0, 0.0], [0.0620012581, 0.0, 0.0, 0.0], [-0.729499996, 19.0, 20.0, 1.0], [-0.965499997, 21.0, 22.0, 3.0], [-0.0499839298, 0.0, 0.0, 0.0], [0.0394646563, 0.0, 0.0, 0.0], [-0.00370097719, 0.0, 0.0, 0.0], [-0.0728216991, 0.0, 0.0, 0.0], [-0.0054590716, 0.0, 0.0, 0.0], [0.11587707, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 17, 18, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_403(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.862499952, 3.0, 4.0, 1.0], [-0.877499998, 5.0, 6.0, 4.0], [-0.0702317283, 0.0, 0.0, 0.0], [-0.2755, 7.0, 8.0, 0.0], [-0.625, 9.0, 10.0, 1.0], [-0.717000008, 11.0, 12.0, 1.0], [-0.334500015, 13.0, 14.0, 0.0], [-0.484499991, 15.0, 16.0, 1.0], [-0.145603701, 0.0, 0.0, 0.0], [0.0288877897, 0.0, 0.0, 0.0], [0.0850797445, 0.0, 0.0, 0.0], [-0.330500007, 17.0, 18.0, 0.0], [-0.932999969, 19.0, 20.0, 4.0], [-0.953500032, 21.0, 22.0, 4.0], [-0.528499961, 23.0, 24.0, 1.0], [-0.960500002, 25.0, 26.0, 4.0], [0.0429273546, 0.0, 0.0, 0.0], [-0.108575284, 0.0, 0.0, 0.0], [0.0326611139, 0.0, 0.0, 0.0], [-0.0957375467, 0.0, 0.0, 0.0], [-0.0171795134, 0.0, 0.0, 0.0], [0.122901522, 0.0, 0.0, 0.0], [0.00561706955, 0.0, 0.0, 0.0], [0.108607203, 0.0, 0.0, 0.0], [0.0209834184, 0.0, 0.0, 0.0], [-0.118874609, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 19, 20, 21, 22, 23, 24, 25, 26, 9, 10, 11, 17, 18])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 8, 15, 16, 2, 5, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_404(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.691499949, 1.0, 2.0, 1.0], [0.634500027, 3.0, 4.0, 2.0], [-0.995499969, 5.0, 6.0, 3.0], [-0.918500006, 7.0, 8.0, 4.0], [-0.100946032, 0.0, 0.0, 0.0], [-0.997500002, 9.0, 10.0, 3.0], [-0.962499976, 11.0, 12.0, 4.0], [-0.9745, 13.0, 14.0, 4.0], [0.0895157605, 0.0, 0.0, 0.0], [-0.201499999, 15.0, 16.0, 0.0], [0.689999998, 17.0, 18.0, 2.0], [-0.972499967, 19.0, 20.0, 4.0], [-0.730999947, 21.0, 22.0, 4.0], [0.412999988, 23.0, 24.0, 2.0], [-0.228500009, 25.0, 26.0, 0.0], [-0.541499972, 27.0, 28.0, 1.0], [-0.0556633361, 0.0, 0.0, 0.0], [0.154646322, 0.0, 0.0, 0.0], [0.0136903413, 0.0, 0.0, 0.0], [0.0112549001, 0.0, 0.0, 0.0], [-0.134998471, 0.0, 0.0, 0.0], [-0.966500044, 29.0, 30.0, 3.0], [-0.967000008, 31.0, 32.0, 3.0], [-0.036247652, 0.0, 0.0, 0.0], [0.0930194929, 0.0, 0.0, 0.0], [0.0216261502, 0.0, 0.0, 0.0], [-0.116489381, 0.0, 0.0, 0.0], [0.097496897, 0.0, 0.0, 0.0], [-0.0300991591, 0.0, 0.0, 0.0], [0.066226244, 0.0, 0.0, 0.0], [-0.0244891103, 0.0, 0.0, 0.0], [-0.140221819, 0.0, 0.0, 0.0], [0.034763623, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 4, 27, 28, 16, 17, 18, 19, 20, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 10, 6, 11, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_405(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.999500036, 3.0, 4.0, 4.0], [-0.267499983, 5.0, 6.0, 0.0], [-0.296499997, 7.0, 8.0, 0.0], [0.048424311, 0.0, 0.0, 0.0], [0.127109841, 0.0, 0.0, 0.0], [-0.212500006, 9.0, 10.0, 0.0], [-0.297500014, 11.0, 12.0, 0.0], [-0.0907773897, 0.0, 0.0, 0.0], [-0.253499985, 13.0, 14.0, 0.0], [-0.2095, 15.0, 16.0, 0.0], [-0.0685072541, 0.0, 0.0, 0.0], [0.0801534057, 0.0, 0.0, 0.0], [-0.0210676547, 0.0, 0.0, 0.0], [-0.0918753743, 0.0, 0.0, 0.0], [0.0970133319, 0.0, 0.0, 0.0], [-0.205500007, 17.0, 18.0, 0.0], [-0.140500262, 0.0, 0.0, 0.0], [0.00107934885, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 13, 14, 15, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_406(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.399500012, 1.0, 2.0, 0.0], [-0.412999988, 3.0, 4.0, 0.0], [-0.378499985, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [0.143267021, 0.0, 0.0, 0.0], [-0.164331764, 0.0, 0.0, 0.0], [-0.297500014, 9.0, 10.0, 0.0], [-0.117165171, 0.0, 0.0, 0.0], [0.113230668, 0.0, 0.0, 0.0], [0.135369956, 0.0, 0.0, 0.0], [-0.292500019, 11.0, 12.0, 0.0], [-0.123163208, 0.0, 0.0, 0.0], [-0.274500012, 13.0, 14.0, 0.0], [0.0739824846, 0.0, 0.0, 0.0], [-0.00110908761, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_407(xs):
    #Predicts Class 5
    function_dict = np.array([[0.528499961, 1.0, 2.0, 0.0], [0.5255, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [-0.885499954, 7.0, 8.0, 2.0], [-0.127466843, 0.0, 0.0, 0.0], [0.536000013, 9.0, 10.0, 0.0], [0.144443393, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.337500006, 13.0, 14.0, 0.0], [0.159679905, 0.0, 0.0, 0.0], [0.539999962, 15.0, 16.0, 0.0], [0.513000011, 17.0, 18.0, 0.0], [0.263000011, 19.0, 20.0, 0.0], [-0.99849999, 21.0, 22.0, 4.0], [-0.997500002, 23.0, 24.0, 1.0], [-0.148398444, 0.0, 0.0, 0.0], [0.543500006, 25.0, 26.0, 0.0], [-0.00743010081, 0.0, 0.0, 0.0], [0.1161706, 0.0, 0.0, 0.0], [-0.015006992, 0.0, 0.0, 0.0], [0.19952552, 0.0, 0.0, 0.0], [0.0703731477, 0.0, 0.0, 0.0], [-0.0462419242, 0.0, 0.0, 0.0], [-0.171450064, 0.0, 0.0, 0.0], [0.00688389782, 0.0, 0.0, 0.0], [0.11080505, 0.0, 0.0, 0.0], [-0.01547263, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 9, 15, 25, 26, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 5, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_408(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.982499957, 1.0, 2.0, 4.0], [-0.0699777901, 0.0, 0.0, 0.0], [-0.205500007, 3.0, 4.0, 0.0], [-0.615499973, 5.0, 6.0, 1.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.213499993, 9.0, 10.0, 0.0], [-0.526000023, 11.0, 12.0, 1.0], [-0.967499971, 13.0, 14.0, 4.0], [-0.96449995, 15.0, 16.0, 4.0], [0.647500038, 17.0, 18.0, 2.0], [-0.963500023, 19.0, 20.0, 4.0], [-0.127739325, 0.0, 0.0, 0.0], [-0.257499993, 21.0, 22.0, 0.0], [0.141893566, 0.0, 0.0, 0.0], [-0.965499997, 23.0, 24.0, 3.0], [-0.131500006, 25.0, 26.0, 0.0], [0.669499993, 27.0, 28.0, 2.0], [0.00085758901, 0.0, 0.0, 0.0], [0.089093782, 0.0, 0.0, 0.0], [-0.0527924821, 0.0, 0.0, 0.0], [0.195009232, 0.0, 0.0, 0.0], [-0.10136012, 0.0, 0.0, 0.0], [0.108050518, 0.0, 0.0, 0.0], [-0.157518879, 0.0, 0.0, 0.0], [-0.0238229465, 0.0, 0.0, 0.0], [-0.120204218, 0.0, 0.0, 0.0], [-0.00716235396, 0.0, 0.0, 0.0], [0.0675045103, 0.0, 0.0, 0.0], [-0.0331675522, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 19, 20, 11, 21, 22, 13, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 12, 4, 7, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_409(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.334500015, 1.0, 2.0, 0.0], [-0.365500003, 3.0, 4.0, 0.0], [-0.315500021, 5.0, 6.0, 0.0], [0.0547931232, 0.0, 0.0, 0.0], [-0.978999972, 7.0, 8.0, 3.0], [-0.929999948, 9.0, 10.0, 4.0], [-0.9745, 11.0, 12.0, 3.0], [-0.129381061, 0.0, 0.0, 0.0], [-0.00531986775, 0.0, 0.0, 0.0], [-0.0010825214, 0.0, 0.0, 0.0], [0.116251729, 0.0, 0.0, 0.0], [-0.978500009, 13.0, 14.0, 3.0], [-0.972499967, 15.0, 16.0, 4.0], [-0.819499969, 17.0, 18.0, 1.0], [0.147166878, 0.0, 0.0, 0.0], [0.0777596086, 0.0, 0.0, 0.0], [-0.966500044, 19.0, 20.0, 3.0], [-0.0677224919, 0.0, 0.0, 0.0], [0.00556308404, 0.0, 0.0, 0.0], [-0.150684506, 0.0, 0.0, 0.0], [-0.0171822775, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 10, 17, 18, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 4, 2, 5, 6, 11, 13, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_410(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.210500002, 3.0, 4.0, 0.0], [-0.266499996, 5.0, 6.0, 0.0], [0.699999988, 7.0, 8.0, 2.0], [-0.179500014, 9.0, 10.0, 0.0], [-0.0208583325, 0.0, 0.0, 0.0], [0.125155181, 0.0, 0.0, 0.0], [-0.218499988, 11.0, 12.0, 0.0], [-0.873999953, 13.0, 14.0, 4.0], [0.529500008, 15.0, 16.0, 2.0], [-0.749000013, 17.0, 18.0, 1.0], [-0.940500021, 19.0, 20.0, 4.0], [-0.164540261, 0.0, 0.0, 0.0], [0.10638915, 0.0, 0.0, 0.0], [0.736999989, 21.0, 22.0, 2.0], [-0.74849999, 23.0, 24.0, 1.0], [0.666499972, 25.0, 26.0, 2.0], [-0.100173801, 0.0, 0.0, 0.0], [0.523000002, 27.0, 28.0, 2.0], [0.0138627216, 0.0, 0.0, 0.0], [-0.096203126, 0.0, 0.0, 0.0], [0.0322957188, 0.0, 0.0, 0.0], [-0.0757290423, 0.0, 0.0, 0.0], [0.0611428954, 0.0, 0.0, 0.0], [-0.114770673, 0.0, 0.0, 0.0], [0.145144984, 0.0, 0.0, 0.0], [-0.0281515568, 0.0, 0.0, 0.0], [0.0927596614, 0.0, 0.0, 0.0], [-0.0392928459, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 21, 22, 23, 24, 25, 26, 17, 27, 28, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 4, 9, 15, 16, 10, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_411(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.284500003, 1.0, 2.0, 0.0], [-0.37349999, 3.0, 4.0, 0.0], [-0.273499995, 5.0, 6.0, 0.0], [-0.446500003, 7.0, 8.0, 0.0], [-0.0953583121, 0.0, 0.0, 0.0], [0.111060075, 0.0, 0.0, 0.0], [-0.254500002, 9.0, 10.0, 0.0], [-0.00676945318, 0.0, 0.0, 0.0], [0.0303660259, 0.0, 0.0, 0.0], [-0.17323561, 0.0, 0.0, 0.0], [-0.51699996, 11.0, 12.0, 2.0], [-0.613499999, 13.0, 14.0, 2.0], [-0.435000002, 15.0, 16.0, 2.0], [-0.000134795162, 0.0, 0.0, 0.0], [0.0847504959, 0.0, 0.0, 0.0], [-0.111424774, 0.0, 0.0, 0.0], [-0.0266167745, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_412(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.992499948, 1.0, 2.0, 1.0], [-0.601000011, 3.0, 4.0, 2.0], [-0.0802276731, 0.0, 0.0, 0.0], [-0.629000008, 5.0, 6.0, 2.0], [-0.456, 7.0, 8.0, 2.0], [0.00456999987, 9.0, 10.0, 0.0], [-0.109909803, 0.0, 0.0, 0.0], [-0.99849999, 11.0, 12.0, 4.0], [-0.0192292109, 0.0, 0.0, 0.0], [0.00202000001, 13.0, 14.0, 0.0], [0.00588999968, 15.0, 16.0, 0.0], [0.189383492, 0.0, 0.0, 0.0], [0.0112576596, 0.0, 0.0, 0.0], [-0.000991028151, 0.0, 0.0, 0.0], [-0.143607244, 0.0, 0.0, 0.0], [0.242435887, 0.0, 0.0, 0.0], [0.00420228019, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 11, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_413(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.0818179995, 0.0, 0.0, 0.0], [-0.996500015, 3.0, 4.0, 1.0], [-0.747500002, 5.0, 6.0, 2.0], [-0.194499999, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.620499969, 11.0, 12.0, 2.0], [-0.198541835, 0.0, 0.0, 0.0], [-0.795000017, 13.0, 14.0, 2.0], [-0.0315500014, 15.0, 16.0, 0.0], [0.527500033, 17.0, 18.0, 0.0], [-0.126143113, 0.0, 0.0, 0.0], [0.0423492156, 0.0, 0.0, 0.0], [-0.0744222775, 0.0, 0.0, 0.0], [0.0917492509, 0.0, 0.0, 0.0], [0.026438633, 0.0, 0.0, 0.0], [-0.0131013822, 0.0, 0.0, 0.0], [0.0706163049, 0.0, 0.0, 0.0], [-0.0755013376, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 11, 12, 7, 13, 14])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_414(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.978500009, 3.0, 4.0, 4.0], [0.442499995, 5.0, 6.0, 2.0], [-0.105950654, 0.0, 0.0, 0.0], [-0.825500011, 7.0, 8.0, 1.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.578999996, 11.0, 12.0, 1.0], [0.0750977993, 0.0, 0.0, 0.0], [-0.950999975, 13.0, 14.0, 3.0], [0.0134649556, 0.0, 0.0, 0.0], [0.108070865, 0.0, 0.0, 0.0], [0.484499991, 15.0, 16.0, 2.0], [-0.825999975, 17.0, 18.0, 4.0], [-0.930999994, 19.0, 20.0, 4.0], [0.0288530942, 0.0, 0.0, 0.0], [-0.799499989, 21.0, 22.0, 1.0], [-0.101500005, 23.0, 24.0, 0.0], [-0.146499991, 25.0, 26.0, 0.0], [-0.784500003, 27.0, 28.0, 4.0], [-0.0920145586, 0.0, 0.0, 0.0], [0.00214135554, 0.0, 0.0, 0.0], [0.0419580266, 0.0, 0.0, 0.0], [-0.0888411626, 0.0, 0.0, 0.0], [0.0316389538, 0.0, 0.0, 0.0], [-0.0606077611, 0.0, 0.0, 0.0], [-0.146480918, 0.0, 0.0, 0.0], [0.0106439227, 0.0, 0.0, 0.0], [0.0813259557, 0.0, 0.0, 0.0], [-0.033609312, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 19, 20, 14, 9, 10, 21, 22, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 4, 8, 13, 2, 5, 6, 11, 15, 16, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_415(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.377499998, 1.0, 2.0, 1.0], [-0.913499951, 3.0, 4.0, 4.0], [-0.0594008565, 0.0, 0.0, 0.0], [0.638499975, 5.0, 6.0, 2.0], [-0.847499967, 7.0, 8.0, 4.0], [0.603500009, 9.0, 10.0, 2.0], [-0.250999987, 11.0, 12.0, 0.0], [0.631500006, 13.0, 14.0, 2.0], [0.0450115129, 0.0, 0.0, 0.0], [-0.932500005, 15.0, 16.0, 4.0], [-0.0974712595, 0.0, 0.0, 0.0], [0.142969415, 0.0, 0.0, 0.0], [-0.00214195508, 0.0, 0.0, 0.0], [0.536499977, 17.0, 18.0, 2.0], [-0.118673913, 0.0, 0.0, 0.0], [-0.00144708785, 0.0, 0.0, 0.0], [0.0702441558, 0.0, 0.0, 0.0], [-0.097919248, 0.0, 0.0, 0.0], [0.0730109215, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 10, 11, 12, 17, 18, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4, 7, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_416(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.581499994, 1.0, 2.0, 1.0], [0.483500004, 3.0, 4.0, 2.0], [-0.962499976, 5.0, 6.0, 3.0], [-0.736500025, 7.0, 8.0, 1.0], [-0.101500005, 9.0, 10.0, 0.0], [0.58950001, 11.0, 12.0, 2.0], [-0.191500008, 13.0, 14.0, 0.0], [0.398499995, 15.0, 16.0, 2.0], [-0.193500012, 17.0, 18.0, 0.0], [0.529500008, 19.0, 20.0, 2.0], [0.053596925, 0.0, 0.0, 0.0], [-0.288500011, 21.0, 22.0, 0.0], [0.730499983, 23.0, 24.0, 2.0], [-0.266499996, 25.0, 26.0, 0.0], [-0.097544454, 0.0, 0.0, 0.0], [-0.212500006, 27.0, 28.0, 0.0], [-0.206499994, 29.0, 30.0, 0.0], [-0.00904883072, 0.0, 0.0, 0.0], [0.134729445, 0.0, 0.0, 0.0], [-0.154267177, 0.0, 0.0, 0.0], [-0.183499992, 31.0, 32.0, 0.0], [-0.00700051291, 0.0, 0.0, 0.0], [0.14048253, 0.0, 0.0, 0.0], [0.67750001, 33.0, 34.0, 2.0], [0.0942165852, 0.0, 0.0, 0.0], [-0.0490528829, 0.0, 0.0, 0.0], [0.0932387188, 0.0, 0.0, 0.0], [0.00366847822, 0.0, 0.0, 0.0], [-0.108219899, 0.0, 0.0, 0.0], [-0.0488510653, 0.0, 0.0, 0.0], [0.0762741044, 0.0, 0.0, 0.0], [0.0134159233, 0.0, 0.0, 0.0], [-0.102984853, 0.0, 0.0, 0.0], [0.0307235327, 0.0, 0.0, 0.0], [-0.1247935, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 18, 19, 31, 32, 10, 21, 22, 33, 34, 24, 25, 26, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 20, 2, 5, 11, 12, 23, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_417(xs):
    #Predicts Class 3
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.506000042, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 4.0], [0.489499986, 7.0, 8.0, 0.0], [0.513000011, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.0890809, 0.0, 0.0, 0.0], [0.479499996, 13.0, 14.0, 0.0], [-0.126403123, 0.0, 0.0, 0.0], [0.177192479, 0.0, 0.0, 0.0], [0.531000018, 15.0, 16.0, 0.0], [0.539999962, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.46450001, 21.0, 22.0, 0.0], [0.169854581, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [0.109922759, 0.0, 0.0, 0.0], [-0.0388186127, 0.0, 0.0, 0.0], [-0.264462888, 0.0, 0.0, 0.0], [0.615499973, 25.0, 26.0, 0.0], [-0.0715834424, 0.0, 0.0, 0.0], [0.000900489278, 0.0, 0.0, 0.0], [-0.150472045, 0.0, 0.0, 0.0], [-0.034242671, 0.0, 0.0, 0.0], [0.0285669863, 0.0, 0.0, 0.0], [-0.0218208153, 0.0, 0.0, 0.0], [0.0922795013, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 9, 23, 24, 16, 17, 18, 25, 26, 20, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 15, 2, 5, 11, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_418(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.407499999, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.393000007, 5.0, 6.0, 0.0], [-0.0276477132, 0.0, 0.0, 0.0], [0.125098646, 0.0, 0.0, 0.0], [-0.0993257537, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [0.138280734, 0.0, 0.0, 0.0], [-0.343500018, 9.0, 10.0, 0.0], [-0.115141556, 0.0, 0.0, 0.0], [-0.0382499993, 11.0, 12.0, 0.0], [0.00817551743, 0.0, 0.0, 0.0], [-0.00779869361, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 9, 11, 12])
    branch_indices = np.array([0, 1, 2, 6, 8, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_419(xs):
    #Predicts Class 5
    function_dict = np.array([[0.392499983, 1.0, 2.0, 0.0], [0.344999999, 3.0, 4.0, 0.0], [0.401499987, 5.0, 6.0, 0.0], [0.2755, 7.0, 8.0, 0.0], [-0.177790925, 0.0, 0.0, 0.0], [0.125361383, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.264499992, 11.0, 12.0, 0.0], [0.280499995, 13.0, 14.0, 0.0], [0.409500003, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [0.256500006, 19.0, 20.0, 0.0], [0.272000015, 21.0, 22.0, 0.0], [0.153672352, 0.0, 0.0, 0.0], [0.0183710996, 0.0, 0.0, 0.0], [-0.0970773026, 0.0, 0.0, 0.0], [0.427999973, 23.0, 24.0, 0.0], [0.521499991, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 1.0], [-0.0177971032, 0.0, 0.0, 0.0], [0.0989965424, 0.0, 0.0, 0.0], [-0.184256688, 0.0, 0.0, 0.0], [-0.002839708, 0.0, 0.0, 0.0], [0.081423901, 0.0, 0.0, 0.0], [-0.000690562418, 0.0, 0.0, 0.0], [0.133651361, 0.0, 0.0, 0.0], [0.0376387127, 0.0, 0.0, 0.0], [-0.0778235942, 0.0, 0.0, 0.0], [0.0924017802, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 4, 5, 15, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_420(xs):
    #Predicts Class 0
    function_dict = np.array([[0.259499997, 1.0, 2.0, 2.0], [-0.06842044, 0.0, 0.0, 0.0], [-0.779500008, 3.0, 4.0, 1.0], [-0.961500049, 5.0, 6.0, 4.0], [0.451499999, 7.0, 8.0, 2.0], [-0.966500044, 9.0, 10.0, 4.0], [-0.317499995, 11.0, 12.0, 0.0], [-0.952499986, 13.0, 14.0, 4.0], [0.46450001, 15.0, 16.0, 2.0], [-0.180500001, 17.0, 18.0, 0.0], [-0.126821756, 0.0, 0.0, 0.0], [-0.0539261773, 0.0, 0.0, 0.0], [-0.923500001, 19.0, 20.0, 4.0], [0.0192156695, 0.0, 0.0, 0.0], [-0.970999956, 21.0, 22.0, 3.0], [0.0789092109, 0.0, 0.0, 0.0], [-0.102499999, 23.0, 24.0, 0.0], [0.143943816, 0.0, 0.0, 0.0], [-0.089692615, 0.0, 0.0, 0.0], [0.134667277, 0.0, 0.0, 0.0], [0.0053572529, 0.0, 0.0, 0.0], [-0.115795933, 0.0, 0.0, 0.0], [-0.0242532045, 0.0, 0.0, 0.0], [0.00254123611, 0.0, 0.0, 0.0], [-0.0657840148, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 10, 11, 19, 20, 13, 21, 22, 15, 23, 24])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 12, 4, 7, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_421(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.228500009, 3.0, 4.0, 0.0], [-0.880499959, 5.0, 6.0, 3.0], [-0.74150002, 7.0, 8.0, 1.0], [-0.734499991, 9.0, 10.0, 1.0], [-0.487500012, 11.0, 12.0, 1.0], [-0.100197904, 0.0, 0.0, 0.0], [-0.804499984, 13.0, 14.0, 1.0], [-0.716500044, 15.0, 16.0, 1.0], [-0.178499997, 17.0, 18.0, 0.0], [-0.210500002, 19.0, 20.0, 0.0], [-0.861500025, 21.0, 22.0, 4.0], [-0.300500005, 23.0, 24.0, 0.0], [-0.00953681022, 0.0, 0.0, 0.0], [0.153946221, 0.0, 0.0, 0.0], [-0.107574143, 0.0, 0.0, 0.0], [-0.659500003, 25.0, 26.0, 1.0], [0.407999992, 27.0, 28.0, 2.0], [-0.107500002, 29.0, 30.0, 0.0], [-0.221500009, 31.0, 32.0, 0.0], [-0.970499992, 33.0, 34.0, 4.0], [0.601500034, 35.0, 36.0, 2.0], [-0.716499984, 37.0, 38.0, 1.0], [-0.0373879112, 0.0, 0.0, 0.0], [0.125724792, 0.0, 0.0, 0.0], [0.1470678, 0.0, 0.0, 0.0], [-0.00408835988, 0.0, 0.0, 0.0], [0.0449557118, 0.0, 0.0, 0.0], [-0.164523482, 0.0, 0.0, 0.0], [0.135167167, 0.0, 0.0, 0.0], [-0.10240601, 0.0, 0.0, 0.0], [-0.0163476225, 0.0, 0.0, 0.0], [0.171806112, 0.0, 0.0, 0.0], [-0.0961489752, 0.0, 0.0, 0.0], [0.0710246712, 0.0, 0.0, 0.0], [-0.0120583884, 0.0, 0.0, 0.0], [-0.099703826, 0.0, 0.0, 0.0], [0.0925660357, 0.0, 0.0, 0.0], [-0.0168219395, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 23, 24, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 16, 4, 9, 17, 18, 10, 19, 20, 2, 5, 11, 21, 22, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_422(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.965499997, 1.0, 2.0, 4.0], [-0.242500007, 3.0, 4.0, 0.0], [-0.207500011, 5.0, 6.0, 0.0], [0.048428461, 0.0, 0.0, 0.0], [-0.972499967, 7.0, 8.0, 4.0], [0.521499991, 9.0, 10.0, 2.0], [-0.99849999, 11.0, 12.0, 3.0], [-0.770500004, 13.0, 14.0, 1.0], [-0.163442835, 0.0, 0.0, 0.0], [0.456499994, 15.0, 16.0, 2.0], [-0.929499984, 17.0, 18.0, 4.0], [-0.056219954, 0.0, 0.0, 0.0], [0.513000011, 19.0, 20.0, 2.0], [-0.0633058622, 0.0, 0.0, 0.0], [-0.2095, 21.0, 22.0, 0.0], [-0.00914248545, 0.0, 0.0, 0.0], [0.114726596, 0.0, 0.0, 0.0], [-0.242500007, 23.0, 24.0, 0.0], [-0.243499994, 25.0, 26.0, 0.0], [-0.153999999, 27.0, 28.0, 0.0], [-0.891499996, 29.0, 30.0, 4.0], [0.0836520866, 0.0, 0.0, 0.0], [-0.0276251119, 0.0, 0.0, 0.0], [-0.149893224, 0.0, 0.0, 0.0], [-0.0292134248, 0.0, 0.0, 0.0], [0.0323037133, 0.0, 0.0, 0.0], [-0.0588449165, 0.0, 0.0, 0.0], [0.0424591675, 0.0, 0.0, 0.0], [-0.0669296905, 0.0, 0.0, 0.0], [0.120867953, 0.0, 0.0, 0.0], [0.0121829733, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 21, 22, 8, 15, 16, 23, 24, 25, 26, 11, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 4, 7, 14, 2, 5, 9, 10, 17, 18, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_423(xs):
    #Predicts Class 3
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.541499972, 7.0, 8.0, 0.0], [0.114148863, 0.0, 0.0, 0.0], [-0.0999558568, 0.0, 0.0, 0.0], [0.0147200534, 0.0, 0.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [0.547500014, 11.0, 12.0, 0.0], [0.528499961, 13.0, 14.0, 0.0], [0.135760546, 0.0, 0.0, 0.0], [-0.115646966, 0.0, 0.0, 0.0], [0.557999969, 15.0, 16.0, 0.0], [0.00171061081, 0.0, 0.0, 0.0], [-0.142006308, 0.0, 0.0, 0.0], [0.0507864282, 0.0, 0.0, 0.0], [-0.0784467384, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_424(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0101749999, 1.0, 2.0, 0.0], [-0.0150499996, 3.0, 4.0, 0.0], [-0.00885999948, 5.0, 6.0, 0.0], [-0.0156999994, 7.0, 8.0, 0.0], [-0.322383821, 0.0, 0.0, 0.0], [0.217073753, 0.0, 0.0, 0.0], [-0.00550500024, 9.0, 10.0, 0.0], [-0.0244999994, 11.0, 12.0, 0.0], [0.26426509, 0.0, 0.0, 0.0], [-0.228180468, 0.0, 0.0, 0.0], [-0.0052199997, 13.0, 14.0, 0.0], [-0.0250499994, 15.0, 16.0, 0.0], [-0.261463791, 0.0, 0.0, 0.0], [0.29999125, 0.0, 0.0, 0.0], [-0.00463499967, 17.0, 18.0, 0.0], [-0.00396384532, 0.0, 0.0, 0.0], [0.351222515, 0.0, 0.0, 0.0], [-0.215219021, 0.0, 0.0, 0.0], [0.0120541938, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_425(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.541499972, 7.0, 8.0, 0.0], [-0.107914582, 0.0, 0.0, 0.0], [0.102338493, 0.0, 0.0, 0.0], [0.0042289882, 0.0, 0.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [0.547500014, 11.0, 12.0, 0.0], [0.528499961, 13.0, 14.0, 0.0], [-0.133280277, 0.0, 0.0, 0.0], [0.117464229, 0.0, 0.0, 0.0], [0.557999969, 15.0, 16.0, 0.0], [-0.00740885967, 0.0, 0.0, 0.0], [0.144116506, 0.0, 0.0, 0.0], [-0.0482425988, 0.0, 0.0, 0.0], [0.0804676786, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_426(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0541983992, 0.0, 0.0, 0.0], [-0.997500002, 3.0, 4.0, 3.0], [0.605000019, 5.0, 6.0, 2.0], [-0.996500015, 7.0, 8.0, 3.0], [0.466499984, 9.0, 10.0, 2.0], [-0.0523958281, 0.0, 0.0, 0.0], [0.54550004, 11.0, 12.0, 2.0], [0.407499999, 13.0, 14.0, 2.0], [0.404500008, 15.0, 16.0, 2.0], [0.542500019, 17.0, 18.0, 2.0], [-0.108335003, 0.0, 0.0, 0.0], [-0.0105359321, 0.0, 0.0, 0.0], [-0.816499949, 19.0, 20.0, 1.0], [-0.744500041, 21.0, 22.0, 1.0], [0.0908841342, 0.0, 0.0, 0.0], [-0.0872304291, 0.0, 0.0, 0.0], [0.0513021797, 0.0, 0.0, 0.0], [0.141177297, 0.0, 0.0, 0.0], [0.0417714752, 0.0, 0.0, 0.0], [-0.0893415213, 0.0, 0.0, 0.0], [0.0551147647, 0.0, 0.0, 0.0], [-0.00951951183, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 6, 11, 12, 19, 20, 21, 22])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 7, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_427(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.207500011, 1.0, 2.0, 0.0], [-0.218499988, 3.0, 4.0, 0.0], [0.0647500008, 5.0, 6.0, 0.0], [-0.973500013, 7.0, 8.0, 4.0], [-0.986500025, 9.0, 10.0, 3.0], [-0.138500005, 11.0, 12.0, 0.0], [0.0678761601, 0.0, 0.0, 0.0], [0.333999991, 13.0, 14.0, 2.0], [0.701499999, 15.0, 16.0, 2.0], [-0.956499994, 17.0, 18.0, 4.0], [0.0169975329, 0.0, 0.0, 0.0], [-0.805000007, 19.0, 20.0, 1.0], [-0.117356174, 0.0, 0.0, 0.0], [-0.021025911, 0.0, 0.0, 0.0], [0.104133233, 0.0, 0.0, 0.0], [0.657500029, 21.0, 22.0, 2.0], [0.740999997, 23.0, 24.0, 2.0], [0.116206333, 0.0, 0.0, 0.0], [0.0275194272, 0.0, 0.0, 0.0], [0.07948374, 0.0, 0.0, 0.0], [0.432999998, 25.0, 26.0, 2.0], [-0.00605090661, 0.0, 0.0, 0.0], [-0.0968800485, 0.0, 0.0, 0.0], [0.0922865346, 0.0, 0.0, 0.0], [-0.00386786344, 0.0, 0.0, 0.0], [0.0708883703, 0.0, 0.0, 0.0], [-0.0853172392, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 21, 22, 23, 24, 17, 18, 10, 19, 25, 26, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 16, 4, 9, 2, 5, 11, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_428(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.956499994, 3.0, 4.0, 4.0], [-0.992499948, 5.0, 6.0, 3.0], [0.482500017, 7.0, 8.0, 2.0], [0.550500035, 9.0, 10.0, 2.0], [0.0888099298, 0.0, 0.0, 0.0], [0.602999985, 11.0, 12.0, 2.0], [-0.965499997, 13.0, 14.0, 4.0], [-0.963500023, 15.0, 16.0, 4.0], [0.513000011, 17.0, 18.0, 2.0], [-0.634500027, 19.0, 20.0, 1.0], [-0.092626974, 0.0, 0.0, 0.0], [0.65200001, 21.0, 22.0, 2.0], [-0.180500001, 23.0, 24.0, 0.0], [0.0833740532, 0.0, 0.0, 0.0], [0.605000019, 25.0, 26.0, 2.0], [-0.202126712, 0.0, 0.0, 0.0], [0.411000013, 27.0, 28.0, 2.0], [0.137645707, 0.0, 0.0, 0.0], [-0.892500043, 29.0, 30.0, 4.0], [-0.566499949, 31.0, 32.0, 1.0], [0.134763777, 0.0, 0.0, 0.0], [-0.242500007, 33.0, 34.0, 0.0], [-0.0717158392, 0.0, 0.0, 0.0], [0.0720748976, 0.0, 0.0, 0.0], [-0.0787565634, 0.0, 0.0, 0.0], [0.0546960421, 0.0, 0.0, 0.0], [0.0385275073, 0.0, 0.0, 0.0], [-0.0486595444, 0.0, 0.0, 0.0], [-0.136623025, 0.0, 0.0, 0.0], [-0.0155254882, 0.0, 0.0, 0.0], [0.0675550476, 0.0, 0.0, 0.0], [-0.0346382521, 0.0, 0.0, 0.0], [-0.0726596713, 0.0, 0.0, 0.0], [0.0634909198, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 25, 26, 16, 27, 28, 18, 29, 30, 31, 32, 5, 11, 21, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 9, 17, 10, 19, 20, 2, 6, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_429(xs):
    #Predicts Class 3
    function_dict = np.array([[0.0560500026, 1.0, 2.0, 0.0], [0.0477499999, 3.0, 4.0, 0.0], [0.0689999983, 5.0, 6.0, 0.0], [0.0422499999, 7.0, 8.0, 0.0], [0.0515500009, 9.0, 10.0, 0.0], [0.210555807, 0.0, 0.0, 0.0], [0.074149996, 11.0, 12.0, 0.0], [0.028549999, 13.0, 14.0, 0.0], [0.143594265, 0.0, 0.0, 0.0], [-0.254505634, 0.0, 0.0, 0.0], [-0.00774774048, 0.0, 0.0, 0.0], [-0.124231145, 0.0, 0.0, 0.0], [0.0821999982, 15.0, 16.0, 0.0], [0.02685, 17.0, 18.0, 0.0], [0.0313500017, 19.0, 20.0, 0.0], [0.0760499984, 21.0, 22.0, 0.0], [0.0854000002, 23.0, 24.0, 0.0], [-0.00548952492, 0.0, 0.0, 0.0], [0.292405874, 0.0, 0.0, 0.0], [-0.22268483, 0.0, 0.0, 0.0], [-0.0303292293, 0.0, 0.0, 0.0], [0.0101846028, 0.0, 0.0, 0.0], [0.218650058, 0.0, 0.0, 0.0], [-0.164662063, 0.0, 0.0, 0.0], [0.00537304766, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_430(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0560500026, 1.0, 2.0, 0.0], [0.0477499999, 3.0, 4.0, 0.0], [0.0825999975, 5.0, 6.0, 0.0], [0.0417999998, 7.0, 8.0, 0.0], [0.0506500006, 9.0, 10.0, 0.0], [0.0760499984, 11.0, 12.0, 0.0], [0.0854000002, 13.0, 14.0, 0.0], [0.028549999, 15.0, 16.0, 0.0], [-0.142605975, 0.0, 0.0, 0.0], [0.255249798, 0.0, 0.0, 0.0], [0.0107507771, 0.0, 0.0, 0.0], [0.0694999993, 17.0, 18.0, 0.0], [-0.220428124, 0.0, 0.0, 0.0], [0.16690965, 0.0, 0.0, 0.0], [0.0873000026, 19.0, 20.0, 0.0], [0.02685, 21.0, 22.0, 0.0], [0.0308999997, 23.0, 24.0, 0.0], [-0.209197298, 0.0, 0.0, 0.0], [0.074149996, 25.0, 26.0, 0.0], [-0.109887138, 0.0, 0.0, 0.0], [0.0894500017, 27.0, 28.0, 0.0], [0.00325548393, 0.0, 0.0, 0.0], [-0.291861296, 0.0, 0.0, 0.0], [0.223574176, 0.0, 0.0, 0.0], [0.0360121876, 0.0, 0.0, 0.0], [0.124891579, 0.0, 0.0, 0.0], [-0.00921107084, 0.0, 0.0, 0.0], [0.0974694863, 0.0, 0.0, 0.0], [-0.0173673313, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 17, 25, 26, 12, 13, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 18, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_431(xs):
    #Predicts Class 5
    function_dict = np.array([[0.621500015, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0787176713, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [0.618499994, 7.0, 8.0, 0.0], [0.503000021, 9.0, 10.0, 0.0], [0.131036595, 0.0, 0.0, 0.0], [-0.101032279, 0.0, 0.0, 0.0], [0.0180898178, 0.0, 0.0, 0.0], [0.466499984, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.00422558468, 0.0, 0.0, 0.0], [0.141380951, 0.0, 0.0, 0.0], [-0.00819351431, 0.0, 0.0, 0.0], [-0.171472952, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_432(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.871500015, 1.0, 2.0, 4.0], [-0.656000018, 3.0, 4.0, 1.0], [0.685500026, 5.0, 6.0, 2.0], [-0.674499989, 7.0, 8.0, 1.0], [0.678499997, 9.0, 10.0, 2.0], [-0.17750001, 11.0, 12.0, 0.0], [-0.203999996, 13.0, 14.0, 0.0], [-0.281499982, 15.0, 16.0, 0.0], [0.105660371, 0.0, 0.0, 0.0], [-0.148499995, 17.0, 18.0, 0.0], [0.0509164669, 0.0, 0.0, 0.0], [-0.990499973, 19.0, 20.0, 3.0], [0.178237915, 0.0, 0.0, 0.0], [-0.257499993, 21.0, 22.0, 0.0], [-0.0924208835, 0.0, 0.0, 0.0], [0.573500037, 23.0, 24.0, 2.0], [-0.263500005, 25.0, 26.0, 0.0], [-0.134914353, 0.0, 0.0, 0.0], [-0.0274802446, 0.0, 0.0, 0.0], [-0.0822645724, 0.0, 0.0, 0.0], [-0.266499996, 27.0, 28.0, 0.0], [-0.0882855058, 0.0, 0.0, 0.0], [0.103673212, 0.0, 0.0, 0.0], [-0.118225478, 0.0, 0.0, 0.0], [0.046148628, 0.0, 0.0, 0.0], [0.115383029, 0.0, 0.0, 0.0], [-0.00805091765, 0.0, 0.0, 0.0], [0.12639682, 0.0, 0.0, 0.0], [-0.0362398662, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 17, 18, 10, 19, 27, 28, 12, 21, 22, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 2, 5, 11, 20, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_433(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.377499998, 1.0, 2.0, 1.0], [-0.752499998, 3.0, 4.0, 1.0], [-0.0565800145, 0.0, 0.0, 0.0], [-0.763499975, 5.0, 6.0, 1.0], [-0.175500005, 7.0, 8.0, 0.0], [-0.993499994, 9.0, 10.0, 3.0], [-0.0962063149, 0.0, 0.0, 0.0], [-0.965499997, 11.0, 12.0, 4.0], [-0.0750495493, 0.0, 0.0, 0.0], [-0.939499974, 13.0, 14.0, 4.0], [-0.930500031, 15.0, 16.0, 4.0], [-0.210500002, 17.0, 18.0, 0.0], [-0.952499986, 19.0, 20.0, 4.0], [0.0011586803, 0.0, 0.0, 0.0], [-0.0971452296, 0.0, 0.0, 0.0], [0.00210969569, 0.0, 0.0, 0.0], [0.105439395, 0.0, 0.0, 0.0], [0.141953439, 0.0, 0.0, 0.0], [-0.0299339276, 0.0, 0.0, 0.0], [-0.0547928885, 0.0, 0.0, 0.0], [0.0452835225, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 6, 17, 18, 19, 20, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 7, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_434(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.109499998, 3.0, 4.0, 0.0], [-0.0746315345, 0.0, 0.0, 0.0], [-0.718500018, 5.0, 6.0, 1.0], [0.075948298, 0.0, 0.0, 0.0], [-0.961500049, 7.0, 8.0, 4.0], [-0.99849999, 9.0, 10.0, 3.0], [-0.219500005, 11.0, 12.0, 0.0], [-0.972499967, 13.0, 14.0, 3.0], [-0.654500008, 15.0, 16.0, 1.0], [-0.956499994, 17.0, 18.0, 4.0], [-0.0456848964, 0.0, 0.0, 0.0], [0.0463560857, 0.0, 0.0, 0.0], [-0.150660768, 0.0, 0.0, 0.0], [0.0185314585, 0.0, 0.0, 0.0], [0.139738843, 0.0, 0.0, 0.0], [-0.00205443543, 0.0, 0.0, 0.0], [-0.0593954995, 0.0, 0.0, 0.0], [0.00856092107, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 15, 16, 17, 18, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_435(xs):
    #Predicts Class 3
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.446500003, 3.0, 4.0, 0.0], [0.543500006, 5.0, 6.0, 0.0], [0.436500013, 7.0, 8.0, 0.0], [0.455500007, 9.0, 10.0, 0.0], [-0.112771891, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [0.433499992, 13.0, 14.0, 0.0], [0.445500016, 15.0, 16.0, 0.0], [0.266815543, 0.0, 0.0, 0.0], [0.463499993, 17.0, 18.0, 0.0], [0.549000025, 19.0, 20.0, 0.0], [-0.100012973, 0.0, 0.0, 0.0], [0.429499984, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [-0.237525731, 0.0, 0.0, 0.0], [-0.001435471, 0.0, 0.0, 0.0], [-0.181690395, 0.0, 0.0, 0.0], [0.531000018, 25.0, 26.0, 0.0], [0.105036981, 0.0, 0.0, 0.0], [0.561499953, 27.0, 28.0, 0.0], [0.000463256059, 0.0, 0.0, 0.0], [-0.133963704, 0.0, 0.0, 0.0], [0.179034114, 0.0, 0.0, 0.0], [0.0120586026, 0.0, 0.0, 0.0], [0.0289391186, 0.0, 0.0, 0.0], [0.145715296, 0.0, 0.0, 0.0], [-0.0888868347, 0.0, 0.0, 0.0], [0.0470920727, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 9, 17, 25, 26, 5, 19, 27, 28, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 10, 18, 2, 6, 11, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_436(xs):
    #Predicts Class 4
    function_dict = np.array([[0.190499991, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.194499999, 5.0, 6.0, 0.0], [0.0941499993, 7.0, 8.0, 0.0], [0.152999997, 9.0, 10.0, 0.0], [0.10654819, 0.0, 0.0, 0.0], [0.202500001, 11.0, 12.0, 0.0], [0.0894500017, 13.0, 14.0, 0.0], [0.110460401, 0.0, 0.0, 0.0], [-0.176363721, 0.0, 0.0, 0.0], [0.000387670822, 0.0, 0.0, 0.0], [-0.0668325722, 0.0, 0.0, 0.0], [0.0661175922, 0.0, 0.0, 0.0], [0.0867500007, 15.0, 16.0, 0.0], [-0.100371026, 0.0, 0.0, 0.0], [-0.00340705877, 0.0, 0.0, 0.0], [0.0800033957, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 14, 8, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_437(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.531000018, 3.0, 4.0, 0.0], [0.543500006, 5.0, 6.0, 0.0], [0.446500003, 7.0, 8.0, 0.0], [-0.144006312, 0.0, 0.0, 0.0], [0.115107425, 0.0, 0.0, 0.0], [0.549000025, 9.0, 10.0, 0.0], [0.436500013, 11.0, 12.0, 0.0], [0.455500007, 13.0, 14.0, 0.0], [-0.0957922563, 0.0, 0.0, 0.0], [0.561499953, 15.0, 16.0, 0.0], [0.433499992, 17.0, 18.0, 0.0], [0.445500016, 19.0, 20.0, 0.0], [-0.265066087, 0.0, 0.0, 0.0], [0.463499993, 21.0, 22.0, 0.0], [0.109229416, 0.0, 0.0, 0.0], [0.565500021, 23.0, 24.0, 0.0], [0.00719360076, 0.0, 0.0, 0.0], [-0.120065488, 0.0, 0.0, 0.0], [0.238344058, 0.0, 0.0, 0.0], [0.00271627377, 0.0, 0.0, 0.0], [0.182909817, 0.0, 0.0, 0.0], [-0.0241514351, 0.0, 0.0, 0.0], [-0.111600563, 0.0, 0.0, 0.0], [0.0377252772, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 21, 22, 4, 5, 9, 15, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_438(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.957499981, 1.0, 2.0, 4.0], [-0.228500009, 3.0, 4.0, 0.0], [0.702499986, 5.0, 6.0, 2.0], [0.516000032, 7.0, 8.0, 2.0], [-0.174499989, 9.0, 10.0, 0.0], [0.672500014, 11.0, 12.0, 2.0], [-0.994500041, 13.0, 14.0, 3.0], [-0.135631442, 0.0, 0.0, 0.0], [0.0408052802, 0.0, 0.0, 0.0], [-0.744499981, 15.0, 16.0, 1.0], [-0.844500005, 17.0, 18.0, 1.0], [-0.809499979, 19.0, 20.0, 1.0], [0.122599833, 0.0, 0.0, 0.0], [0.0431677662, 0.0, 0.0, 0.0], [-0.513999999, 21.0, 22.0, 1.0], [0.435499996, 23.0, 24.0, 2.0], [-0.207500011, 25.0, 26.0, 0.0], [0.0453692414, 0.0, 0.0, 0.0], [-0.776499987, 27.0, 28.0, 1.0], [0.513000011, 29.0, 30.0, 2.0], [-0.796499968, 31.0, 32.0, 1.0], [0.744500041, 33.0, 34.0, 2.0], [0.0297401641, 0.0, 0.0, 0.0], [-0.00667204242, 0.0, 0.0, 0.0], [0.13247706, 0.0, 0.0, 0.0], [-0.132157609, 0.0, 0.0, 0.0], [0.0897993371, 0.0, 0.0, 0.0], [-0.150658563, 0.0, 0.0, 0.0], [-0.0194723494, 0.0, 0.0, 0.0], [0.0944420025, 0.0, 0.0, 0.0], [0.0149043193, 0.0, 0.0, 0.0], [-0.0861710533, 0.0, 0.0, 0.0], [0.0119176954, 0.0, 0.0, 0.0], [-0.131077588, 0.0, 0.0, 0.0], [-0.00406591687, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 23, 24, 25, 26, 17, 27, 28, 29, 30, 31, 32, 12, 13, 33, 34, 22])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 16, 10, 18, 2, 5, 11, 19, 20, 6, 14, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_439(xs):
    #Predicts Class 1
    function_dict = np.array([[0.0463999994, 1.0, 2.0, 0.0], [-0.138500005, 3.0, 4.0, 0.0], [0.0624099374, 0.0, 0.0, 0.0], [-0.189500004, 5.0, 6.0, 0.0], [-0.0814490765, 0.0, 0.0, 0.0], [-0.194499999, 7.0, 8.0, 0.0], [0.464999974, 9.0, 10.0, 2.0], [0.476500005, 11.0, 12.0, 2.0], [-0.0955519453, 0.0, 0.0, 0.0], [-0.0192351807, 0.0, 0.0, 0.0], [0.54550004, 13.0, 14.0, 2.0], [0.022268394, 0.0, 0.0, 0.0], [-0.0149857495, 0.0, 0.0, 0.0], [0.104278848, 0.0, 0.0, 0.0], [0.0192093458, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_440(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.102499999, 3.0, 4.0, 0.0], [-0.0570629723, 0.0, 0.0, 0.0], [0.461499989, 5.0, 6.0, 2.0], [0.0773157254, 0.0, 0.0, 0.0], [0.331499994, 7.0, 8.0, 2.0], [-0.558500051, 9.0, 10.0, 1.0], [-0.0431180149, 0.0, 0.0, 0.0], [-0.715000033, 11.0, 12.0, 1.0], [0.529500008, 13.0, 14.0, 2.0], [-0.191500008, 15.0, 16.0, 0.0], [0.0787657499, 0.0, 0.0, 0.0], [-0.0129544763, 0.0, 0.0, 0.0], [-0.111773789, 0.0, 0.0, 0.0], [-0.0167083126, 0.0, 0.0, 0.0], [0.0325351916, 0.0, 0.0, 0.0], [-0.0235117041, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 13, 14, 15, 16, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_441(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0905999988, 1.0, 2.0, 0.0], [-0.0910999998, 3.0, 4.0, 0.0], [-0.0801500008, 5.0, 6.0, 0.0], [-0.0914499983, 7.0, 8.0, 0.0], [0.270169377, 0.0, 0.0, 0.0], [-0.271699548, 0.0, 0.0, 0.0], [-0.0786499977, 9.0, 10.0, 0.0], [-0.0968500003, 11.0, 12.0, 0.0], [-0.271468997, 0.0, 0.0, 0.0], [0.300426394, 0.0, 0.0, 0.0], [-0.0762000009, 13.0, 14.0, 0.0], [-0.0987499952, 15.0, 16.0, 0.0], [-0.0965999961, 17.0, 18.0, 0.0], [-0.227758124, 0.0, 0.0, 0.0], [-0.0748500004, 19.0, 20.0, 0.0], [0.00445962977, 0.0, 0.0, 0.0], [-0.282689184, 0.0, 0.0, 0.0], [0.408079982, 0.0, 0.0, 0.0], [-0.0055585904, 0.0, 0.0, 0.0], [0.269343019, 0.0, 0.0, 0.0], [-0.00279181427, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_442(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0850500017, 5.0, 6.0, 0.0], [0.0560500026, 7.0, 8.0, 0.0], [0.15959157, 0.0, 0.0, 0.0], [-0.277340382, 0.0, 0.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [0.03785, 11.0, 12.0, 0.0], [-0.934000015, 13.0, 14.0, 2.0], [0.0867500007, 15.0, 16.0, 0.0], [0.0892499983, 17.0, 18.0, 0.0], [0.0293500014, 19.0, 20.0, 0.0], [0.0476500019, 21.0, 22.0, 0.0], [-0.148459226, 0.0, 0.0, 0.0], [0.00544307334, 0.0, 0.0, 0.0], [-0.0341553055, 0.0, 0.0, 0.0], [0.147234693, 0.0, 0.0, 0.0], [-0.16195263, 0.0, 0.0, 0.0], [0.0945499986, 23.0, 24.0, 0.0], [0.00184879906, 0.0, 0.0, 0.0], [-0.205542222, 0.0, 0.0, 0.0], [0.218057826, 0.0, 0.0, 0.0], [-0.0216532256, 0.0, 0.0, 0.0], [0.0986330137, 0.0, 0.0, 0.0], [-0.0162553731, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 4, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_443(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.523000002, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.0720953271, 0.0, 0.0, 0.0], [-0.421000004, 5.0, 6.0, 0.0], [0.430999994, 7.0, 8.0, 0.0], [-0.0837837532, 0.0, 0.0, 0.0], [-0.401000023, 9.0, 10.0, 0.0], [0.404500008, 11.0, 12.0, 0.0], [0.527500033, 13.0, 14.0, 0.0], [0.125117183, 0.0, 0.0, 0.0], [-0.169499993, 15.0, 16.0, 0.0], [0.253000021, 17.0, 18.0, 0.0], [-0.160672054, 0.0, 0.0, 0.0], [0.437000006, 19.0, 20.0, 0.0], [0.569499969, 21.0, 22.0, 0.0], [-0.108500749, 0.0, 0.0, 0.0], [0.000820806017, 0.0, 0.0, 0.0], [-0.00495474506, 0.0, 0.0, 0.0], [0.0987722799, 0.0, 0.0, 0.0], [0.029868219, 0.0, 0.0, 0.0], [0.164991438, 0.0, 0.0, 0.0], [-0.0691164657, 0.0, 0.0, 0.0], [0.00404784968, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 15, 16, 17, 18, 12, 19, 20, 21, 22, 2])
    branch_indices = np.array([0, 1, 3, 6, 10, 4, 7, 11, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_444(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.871500015, 1.0, 2.0, 4.0], [-0.881500006, 3.0, 4.0, 4.0], [0.734500051, 5.0, 6.0, 2.0], [-0.334500015, 7.0, 8.0, 0.0], [-0.106268108, 0.0, 0.0, 0.0], [-0.17750001, 9.0, 10.0, 0.0], [-0.203999996, 11.0, 12.0, 0.0], [0.0849146545, 0.0, 0.0, 0.0], [-0.2755, 13.0, 14.0, 0.0], [-0.216499999, 15.0, 16.0, 0.0], [0.146999121, 0.0, 0.0, 0.0], [0.0201860424, 0.0, 0.0, 0.0], [-0.0705591291, 0.0, 0.0, 0.0], [-0.827000022, 17.0, 18.0, 1.0], [0.559499979, 19.0, 20.0, 2.0], [-0.268999994, 21.0, 22.0, 0.0], [-0.0918481424, 0.0, 0.0, 0.0], [0.0384657271, 0.0, 0.0, 0.0], [-0.144657567, 0.0, 0.0, 0.0], [0.0198022556, 0.0, 0.0, 0.0], [-0.0324228257, 0.0, 0.0, 0.0], [-0.01413868, 0.0, 0.0, 0.0], [0.0874078721, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 17, 18, 19, 20, 4, 21, 22, 16, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 8, 13, 14, 2, 5, 9, 15, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_445(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.75849998, 1.0, 2.0, 1.0], [-0.770500004, 3.0, 4.0, 1.0], [-0.736500025, 5.0, 6.0, 1.0], [-0.778499961, 7.0, 8.0, 1.0], [-0.0803297311, 0.0, 0.0, 0.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.729499996, 11.0, 12.0, 1.0], [-0.786499977, 13.0, 14.0, 1.0], [0.0694160312, 0.0, 0.0, 0.0], [0.11738459, 0.0, 0.0, 0.0], [-0.000401186757, 0.0, 0.0, 0.0], [-0.0892126635, 0.0, 0.0, 0.0], [-0.263500005, 15.0, 16.0, 0.0], [-0.792500019, 17.0, 18.0, 1.0], [-0.0950604752, 0.0, 0.0, 0.0], [-0.328500003, 19.0, 20.0, 0.0], [0.488499999, 21.0, 22.0, 2.0], [-0.0152744725, 0.0, 0.0, 0.0], [0.0683295354, 0.0, 0.0, 0.0], [-0.0256982632, 0.0, 0.0, 0.0], [0.0787515417, 0.0, 0.0, 0.0], [-0.0706576183, 0.0, 0.0, 0.0], [0.00818751566, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_446(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.953500032, 3.0, 4.0, 4.0], [-0.257499993, 5.0, 6.0, 0.0], [0.0408104211, 0.0, 0.0, 0.0], [-0.884500027, 7.0, 8.0, 4.0], [0.0875323862, 0.0, 0.0, 0.0], [-0.24849999, 9.0, 10.0, 0.0], [-0.114767067, 0.0, 0.0, 0.0], [0.0361132994, 0.0, 0.0, 0.0], [-0.0981686562, 0.0, 0.0, 0.0], [-0.870499969, 11.0, 12.0, 4.0], [-0.956499994, 13.0, 14.0, 4.0], [0.75150001, 15.0, 16.0, 2.0], [-0.0130460234, 0.0, 0.0, 0.0], [0.0455807894, 0.0, 0.0, 0.0], [-0.0680894107, 0.0, 0.0, 0.0], [0.035399314, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 4, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_447(xs):
    #Predicts Class 3
    function_dict = np.array([[0.0476500019, 1.0, 2.0, 0.0], [0.03785, 3.0, 4.0, 0.0], [0.0551500022, 5.0, 6.0, 0.0], [0.0293500014, 7.0, 8.0, 0.0], [-0.155748039, 0.0, 0.0, 0.0], [0.130624786, 0.0, 0.0, 0.0], [0.058699999, 9.0, 10.0, 0.0], [0.0260500014, 11.0, 12.0, 0.0], [0.153247416, 0.0, 0.0, 0.0], [-0.119903371, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 3.0], [0.025150001, 15.0, 16.0, 0.0], [-0.17250523, 0.0, 0.0, 0.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.10295257, 0.0, 0.0, 0.0], [-0.00377794704, 0.0, 0.0, 0.0], [0.251131743, 0.0, 0.0, 0.0], [0.0163092352, 0.0, 0.0, 0.0], [-0.0880576745, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_448(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.395500004, 1.0, 2.0, 0.0], [-0.412999988, 3.0, 4.0, 0.0], [-0.378499985, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [0.12126483, 0.0, 0.0, 0.0], [-0.154533625, 0.0, 0.0, 0.0], [-0.297500014, 9.0, 10.0, 0.0], [-0.113352045, 0.0, 0.0, 0.0], [0.0988188013, 0.0, 0.0, 0.0], [0.105055586, 0.0, 0.0, 0.0], [-0.292500019, 11.0, 12.0, 0.0], [-0.0941956192, 0.0, 0.0, 0.0], [-0.996500015, 13.0, 14.0, 1.0], [0.000380774232, 0.0, 0.0, 0.0], [-0.0703020021, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_449(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.155499995, 5.0, 6.0, 0.0], [-0.169499993, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.251130849, 0.0, 0.0, 0.0], [-0.0318999998, 11.0, 12.0, 0.0], [-0.393000007, 13.0, 14.0, 0.0], [-0.1655, 15.0, 16.0, 0.0], [-0.232357696, 0.0, 0.0, 0.0], [-0.996500015, 17.0, 18.0, 1.0], [-0.0371000022, 19.0, 20.0, 0.0], [-0.0126499999, 21.0, 22.0, 0.0], [-0.406499982, 23.0, 24.0, 0.0], [-0.113604985, 0.0, 0.0, 0.0], [-0.166500002, 25.0, 26.0, 0.0], [0.206260681, 0.0, 0.0, 0.0], [-0.410000026, 27.0, 28.0, 0.0], [-0.0599945188, 0.0, 0.0, 0.0], [-0.149500012, 29.0, 30.0, 0.0], [0.208864838, 0.0, 0.0, 0.0], [-0.256202728, 0.0, 0.0, 0.0], [0.00540999975, 31.0, 32.0, 0.0], [-0.0195978917, 0.0, 0.0, 0.0], [0.1272012, 0.0, 0.0, 0.0], [0.109085187, 0.0, 0.0, 0.0], [0.0259906165, 0.0, 0.0, 0.0], [0.020568084, 0.0, 0.0, 0.0], [0.109716728, 0.0, 0.0, 0.0], [0.0810974836, 0.0, 0.0, 0.0], [-0.0451067947, 0.0, 0.0, 0.0], [0.258078516, 0.0, 0.0, 0.0], [-0.00627413718, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 25, 26, 16, 9, 27, 28, 18, 5, 29, 30, 20, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 10, 17, 2, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_450(xs):
    #Predicts Class 0
    function_dict = np.array([[0.576499999, 1.0, 2.0, 2.0], [0.559499979, 3.0, 4.0, 2.0], [-0.548500001, 5.0, 6.0, 1.0], [-0.281499982, 7.0, 8.0, 0.0], [-0.985499978, 9.0, 10.0, 3.0], [-0.997500002, 11.0, 12.0, 3.0], [-0.250499994, 13.0, 14.0, 0.0], [-0.825999975, 15.0, 16.0, 1.0], [0.497500002, 17.0, 18.0, 2.0], [-0.0237219613, 0.0, 0.0, 0.0], [-0.0969569907, 0.0, 0.0, 0.0], [0.648000002, 19.0, 20.0, 2.0], [0.644500017, 21.0, 22.0, 2.0], [-0.105710253, 0.0, 0.0, 0.0], [0.723500013, 23.0, 24.0, 2.0], [-0.0047488939, 0.0, 0.0, 0.0], [-0.105825886, 0.0, 0.0, 0.0], [0.442499995, 25.0, 26.0, 2.0], [-0.699499965, 27.0, 28.0, 1.0], [-0.0903524682, 0.0, 0.0, 0.0], [0.0431294516, 0.0, 0.0, 0.0], [-0.976500034, 29.0, 30.0, 3.0], [-0.908499956, 31.0, 32.0, 4.0], [-0.0694734976, 0.0, 0.0, 0.0], [0.0816566572, 0.0, 0.0, 0.0], [0.0155794844, 0.0, 0.0, 0.0], [-0.0513410941, 0.0, 0.0, 0.0], [0.114212342, 0.0, 0.0, 0.0], [-0.0309933368, 0.0, 0.0, 0.0], [0.129984602, 0.0, 0.0, 0.0], [0.00851155631, 0.0, 0.0, 0.0], [-0.0416550227, 0.0, 0.0, 0.0], [0.0603855848, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 25, 26, 27, 28, 9, 10, 19, 20, 29, 30, 31, 32, 13, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 18, 4, 2, 5, 11, 12, 21, 22, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_451(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.997500002, 3.0, 4.0, 3.0], [-0.314999998, 5.0, 6.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [-0.919499993, 9.0, 10.0, 4.0], [0.0228147935, 0.0, 0.0, 0.0], [-0.222499996, 11.0, 12.0, 0.0], [-0.977499962, 13.0, 14.0, 4.0], [-0.938500047, 15.0, 16.0, 4.0], [-0.96449995, 17.0, 18.0, 3.0], [0.0752619579, 0.0, 0.0, 0.0], [-0.0894150361, 0.0, 0.0, 0.0], [0.00377277029, 0.0, 0.0, 0.0], [0.00668581342, 0.0, 0.0, 0.0], [-0.0895182639, 0.0, 0.0, 0.0], [-0.25150001, 19.0, 20.0, 0.0], [-0.0410243571, 0.0, 0.0, 0.0], [-0.217500001, 21.0, 22.0, 0.0], [-0.24849999, 23.0, 24.0, 0.0], [0.0755930915, 0.0, 0.0, 0.0], [0.0199539736, 0.0, 0.0, 0.0], [-0.00803209376, 0.0, 0.0, 0.0], [0.0694290921, 0.0, 0.0, 0.0], [0.0255286004, 0.0, 0.0, 0.0], [-0.0908850282, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 19, 20, 16, 21, 22, 23, 24, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 4, 9, 17, 18, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_452(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.319499999, 3.0, 4.0, 0.0], [-0.266499996, 5.0, 6.0, 0.0], [-0.0738899559, 0.0, 0.0, 0.0], [-0.281499982, 7.0, 8.0, 0.0], [-0.00773847848, 0.0, 0.0, 0.0], [0.10742256, 0.0, 0.0, 0.0], [0.0862777829, 0.0, 0.0, 0.0], [0.763999999, 9.0, 10.0, 2.0], [0.69749999, 11.0, 12.0, 2.0], [-0.726500034, 13.0, 14.0, 4.0], [-0.0117595997, 0.0, 0.0, 0.0], [0.066557169, 0.0, 0.0, 0.0], [-0.0927305669, 0.0, 0.0, 0.0], [0.0211396329, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 11, 12, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 4, 8, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_453(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.284500003, 1.0, 2.0, 0.0], [-0.529500008, 3.0, 4.0, 0.0], [-0.273499995, 5.0, 6.0, 0.0], [0.018227037, 0.0, 0.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [0.0732066631, 0.0, 0.0, 0.0], [-0.254500002, 9.0, 10.0, 0.0], [-0.104287371, 0.0, 0.0, 0.0], [0.000966801483, 0.0, 0.0, 0.0], [-0.144479156, 0.0, 0.0, 0.0], [-0.249500006, 11.0, 12.0, 0.0], [0.0854564905, 0.0, 0.0, 0.0], [-0.205500007, 13.0, 14.0, 0.0], [-0.0645471364, 0.0, 0.0, 0.0], [0.000881002692, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 4, 2, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_454(xs):
    #Predicts Class 4
    function_dict = np.array([[0.190499991, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.196500003, 5.0, 6.0, 0.0], [0.0941499993, 7.0, 8.0, 0.0], [0.152999997, 9.0, 10.0, 0.0], [0.195499986, 11.0, 12.0, 0.0], [-0.0216631405, 0.0, 0.0, 0.0], [0.0894500017, 13.0, 14.0, 0.0], [0.101500005, 15.0, 16.0, 0.0], [-0.145736277, 0.0, 0.0, 0.0], [0.00682123611, 0.0, 0.0, 0.0], [0.017692538, 0.0, 0.0, 0.0], [0.137582317, 0.0, 0.0, 0.0], [0.0885500014, 17.0, 18.0, 0.0], [-0.0961626545, 0.0, 0.0, 0.0], [0.0929280743, 0.0, 0.0, 0.0], [0.0229074173, 0.0, 0.0, 0.0], [-0.00154785498, 0.0, 0.0, 0.0], [0.0815859437, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 15, 16, 9, 10, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_455(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.086781323, 0.0, 0.0, 0.0], [-0.99150002, 3.0, 4.0, 1.0], [-0.0807500035, 5.0, 6.0, 0.0], [-0.0857917294, 0.0, 0.0, 0.0], [-0.149500012, 7.0, 8.0, 0.0], [-0.0745999962, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.22274591, 0.0, 0.0, 0.0], [0.170972288, 0.0, 0.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [0.029178692, 0.0, 0.0, 0.0], [-0.0779347569, 0.0, 0.0, 0.0], [0.00989196356, 0.0, 0.0, 0.0], [-0.0828479901, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 8, 9, 13, 14, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_456(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.957499981, 1.0, 2.0, 4.0], [0.590499997, 3.0, 4.0, 2.0], [0.75150001, 5.0, 6.0, 2.0], [-0.699499965, 7.0, 8.0, 1.0], [0.0396283194, 0.0, 0.0, 0.0], [-0.982499957, 9.0, 10.0, 3.0], [-0.98150003, 11.0, 12.0, 3.0], [-0.737499952, 13.0, 14.0, 1.0], [-0.117553197, 0.0, 0.0, 0.0], [0.662500024, 15.0, 16.0, 2.0], [-0.709499955, 17.0, 18.0, 1.0], [-0.073078908, 0.0, 0.0, 0.0], [-0.00118897867, 0.0, 0.0, 0.0], [0.480000019, 19.0, 20.0, 2.0], [0.0580320284, 0.0, 0.0, 0.0], [-0.887500048, 21.0, 22.0, 4.0], [-0.995499969, 23.0, 24.0, 3.0], [-0.750999987, 25.0, 26.0, 1.0], [-0.645500004, 27.0, 28.0, 1.0], [-0.00318011851, 0.0, 0.0, 0.0], [-0.10546834, 0.0, 0.0, 0.0], [0.044302132, 0.0, 0.0, 0.0], [-0.0961815491, 0.0, 0.0, 0.0], [0.121340513, 0.0, 0.0, 0.0], [0.0312328357, 0.0, 0.0, 0.0], [0.00663205283, 0.0, 0.0, 0.0], [-0.110453665, 0.0, 0.0, 0.0], [0.0991202369, 0.0, 0.0, 0.0], [-0.0196377113, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 21, 22, 23, 24, 25, 26, 27, 28, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 15, 16, 10, 17, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_457(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.377499998, 1.0, 2.0, 1.0], [-0.767500043, 3.0, 4.0, 1.0], [-0.0506343693, 0.0, 0.0, 0.0], [-0.776499987, 5.0, 6.0, 1.0], [-0.175500005, 7.0, 8.0, 0.0], [0.557500005, 9.0, 10.0, 2.0], [-0.0965013951, 0.0, 0.0, 0.0], [-0.191500008, 11.0, 12.0, 0.0], [-0.0621148609, 0.0, 0.0, 0.0], [-0.938500047, 13.0, 14.0, 4.0], [-0.0784666985, 0.0, 0.0, 0.0], [-0.202500001, 15.0, 16.0, 0.0], [0.107521594, 0.0, 0.0, 0.0], [0.0335485674, 0.0, 0.0, 0.0], [-0.0437587872, 0.0, 0.0, 0.0], [0.0237266775, 0.0, 0.0, 0.0], [-0.0582058579, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 15, 16, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_458(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.351499975, 1.0, 2.0, 1.0], [-0.892500043, 3.0, 4.0, 3.0], [0.0572851859, 0.0, 0.0, 0.0], [0.805500031, 5.0, 6.0, 2.0], [-0.894999981, 7.0, 8.0, 4.0], [-0.727499962, 9.0, 10.0, 4.0], [0.0729561523, 0.0, 0.0, 0.0], [-0.105007462, 0.0, 0.0, 0.0], [0.0241903737, 0.0, 0.0, 0.0], [-0.862499952, 11.0, 12.0, 4.0], [-0.0879679322, 0.0, 0.0, 0.0], [-0.00323009025, 0.0, 0.0, 0.0], [0.0576994121, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_459(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.999500036, 3.0, 4.0, 4.0], [-0.20449999, 5.0, 6.0, 0.0], [-0.524500012, 7.0, 8.0, 0.0], [0.0416985936, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.193500012, 11.0, 12.0, 0.0], [0.0330256373, 0.0, 0.0, 0.0], [-0.296499997, 13.0, 14.0, 0.0], [-0.207000002, 15.0, 16.0, 0.0], [-0.67050004, 17.0, 18.0, 2.0], [-0.0817645565, 0.0, 0.0, 0.0], [-0.190499991, 19.0, 20.0, 0.0], [-0.0268217176, 0.0, 0.0, 0.0], [-0.0852079913, 0.0, 0.0, 0.0], [-0.235500008, 21.0, 22.0, 0.0], [0.153062433, 0.0, 0.0, 0.0], [-0.0433759987, 0.0, 0.0, 0.0], [0.0629279763, 0.0, 0.0, 0.0], [0.0992201343, 0.0, 0.0, 0.0], [-0.186500013, 23.0, 24.0, 0.0], [0.107384443, 0.0, 0.0, 0.0], [-0.0173140205, 0.0, 0.0, 0.0], [-0.223288223, 0.0, 0.0, 0.0], [0.000563318492, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 4, 21, 22, 16, 17, 18, 11, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 8, 2, 5, 9, 15, 10, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_460(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.1105, 3.0, 4.0, 0.0], [-0.188499987, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [-0.260500014, 11.0, 12.0, 0.0], [-0.1505, 13.0, 14.0, 0.0], [0.0912000015, 15.0, 16.0, 0.0], [-0.235451505, 0.0, 0.0, 0.0], [0.176721349, 0.0, 0.0, 0.0], [0.193500012, 17.0, 18.0, 0.0], [-0.333499998, 19.0, 20.0, 0.0], [-0.747500002, 21.0, 22.0, 2.0], [0.187429607, 0.0, 0.0, 0.0], [-0.120499998, 23.0, 24.0, 0.0], [0.0883999988, 25.0, 26.0, 0.0], [0.0923999995, 27.0, 28.0, 0.0], [-0.0914217532, 0.0, 0.0, 0.0], [0.194499999, 29.0, 30.0, 0.0], [-0.4375, 31.0, 32.0, 0.0], [0.117632896, 0.0, 0.0, 0.0], [-0.19873485, 0.0, 0.0, 0.0], [-0.0210315567, 0.0, 0.0, 0.0], [-0.191342801, 0.0, 0.0, 0.0], [-0.770500004, 33.0, 34.0, 2.0], [0.00459256116, 0.0, 0.0, 0.0], [-0.155072719, 0.0, 0.0, 0.0], [0.159675583, 0.0, 0.0, 0.0], [0.0096796779, 0.0, 0.0, 0.0], [0.0907668322, 0.0, 0.0, 0.0], [0.00352829788, 0.0, 0.0, 0.0], [0.0593826883, 0.0, 0.0, 0.0], [-0.16092217, 0.0, 0.0, 0.0], [-0.141311139, 0.0, 0.0, 0.0], [0.0465779044, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 9, 17, 29, 30, 31, 32, 20, 21, 22, 13, 23, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 10, 18, 2, 5, 11, 19, 12, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_461(xs):
    #Predicts Class 5
    function_dict = np.array([[0.392499983, 1.0, 2.0, 0.0], [0.344999999, 3.0, 4.0, 0.0], [0.415000021, 5.0, 6.0, 0.0], [0.2755, 7.0, 8.0, 0.0], [-0.154783532, 0.0, 0.0, 0.0], [0.404500008, 9.0, 10.0, 0.0], [0.42049998, 11.0, 12.0, 0.0], [0.264499992, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [0.397499979, 17.0, 18.0, 0.0], [0.405499995, 19.0, 20.0, 0.0], [-0.103437439, 0.0, 0.0, 0.0], [0.428499997, 21.0, 22.0, 0.0], [0.256500006, 23.0, 24.0, 0.0], [-0.0961525887, 0.0, 0.0, 0.0], [-0.00626001973, 0.0, 0.0, 0.0], [0.116776012, 0.0, 0.0, 0.0], [0.101142459, 0.0, 0.0, 0.0], [-0.0584194288, 0.0, 0.0, 0.0], [0.150059149, 0.0, 0.0, 0.0], [0.0346379131, 0.0, 0.0, 0.0], [0.137366995, 0.0, 0.0, 0.0], [0.432500005, 25.0, 26.0, 0.0], [-0.0101949368, 0.0, 0.0, 0.0], [0.0755447, 0.0, 0.0, 0.0], [-0.132653534, 0.0, 0.0, 0.0], [0.00882879365, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 4, 17, 18, 19, 20, 11, 21, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 9, 10, 6, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_462(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.916499972, 1.0, 2.0, 4.0], [0.658499956, 3.0, 4.0, 2.0], [-0.806499958, 5.0, 6.0, 4.0], [0.608500004, 7.0, 8.0, 2.0], [0.69749999, 9.0, 10.0, 2.0], [0.657500029, 11.0, 12.0, 2.0], [-0.773499966, 13.0, 14.0, 4.0], [-0.658499956, 15.0, 16.0, 1.0], [0.090492785, 0.0, 0.0, 0.0], [-0.105533876, 0.0, 0.0, 0.0], [-0.003772564, 0.0, 0.0, 0.0], [0.612499952, 17.0, 18.0, 2.0], [-0.612499952, 19.0, 20.0, 1.0], [-0.076269798, 0.0, 0.0, 0.0], [0.728999972, 21.0, 22.0, 2.0], [-0.971500039, 23.0, 24.0, 4.0], [-0.0837991908, 0.0, 0.0, 0.0], [-0.749499977, 25.0, 26.0, 1.0], [-0.0981115624, 0.0, 0.0, 0.0], [0.151900083, 0.0, 0.0, 0.0], [0.0171304941, 0.0, 0.0, 0.0], [0.0616399236, 0.0, 0.0, 0.0], [-0.0284570176, 0.0, 0.0, 0.0], [-0.0431510173, 0.0, 0.0, 0.0], [0.0104899965, 0.0, 0.0, 0.0], [0.0923923552, 0.0, 0.0, 0.0], [-0.00807394926, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 10, 25, 26, 18, 19, 20, 13, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 11, 17, 12, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_463(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 4.0], [-0.210500002, 3.0, 4.0, 0.0], [0.0445500016, 5.0, 6.0, 0.0], [0.0131726814, 0.0, 0.0, 0.0], [-0.0809299946, 0.0, 0.0, 0.0], [-0.993499994, 7.0, 8.0, 3.0], [0.0721232295, 0.0, 0.0, 0.0], [-0.2465, 9.0, 10.0, 0.0], [-0.245499998, 11.0, 12.0, 0.0], [-0.318499982, 13.0, 14.0, 0.0], [-0.2095, 15.0, 16.0, 0.0], [-0.291500002, 17.0, 18.0, 0.0], [-0.956499994, 19.0, 20.0, 3.0], [-0.04880495, 0.0, 0.0, 0.0], [0.0724033564, 0.0, 0.0, 0.0], [-0.0917960927, 0.0, 0.0, 0.0], [0.0042039589, 0.0, 0.0, 0.0], [0.0243080352, 0.0, 0.0, 0.0], [-0.0827587172, 0.0, 0.0, 0.0], [0.0737670884, 0.0, 0.0, 0.0], [-0.0571695268, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 9, 10, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_464(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.996500015, 1.0, 2.0, 3.0], [-0.973500013, 3.0, 4.0, 4.0], [-0.628499985, 5.0, 6.0, 1.0], [-0.054045327, 0.0, 0.0, 0.0], [-0.936499953, 7.0, 8.0, 4.0], [-0.651499987, 9.0, 10.0, 1.0], [-0.584499955, 11.0, 12.0, 1.0], [-0.223500013, 13.0, 14.0, 0.0], [-0.882500052, 15.0, 16.0, 4.0], [-0.220499992, 17.0, 18.0, 0.0], [0.138765052, 0.0, 0.0, 0.0], [-0.137701079, 0.0, 0.0, 0.0], [0.718500018, 19.0, 20.0, 2.0], [0.120668739, 0.0, 0.0, 0.0], [0.0180295985, 0.0, 0.0, 0.0], [-0.0743343979, 0.0, 0.0, 0.0], [0.0579980388, 0.0, 0.0, 0.0], [-0.132884845, 0.0, 0.0, 0.0], [-0.145500004, 21.0, 22.0, 0.0], [-0.941499949, 23.0, 24.0, 4.0], [0.7755, 25.0, 26.0, 2.0], [0.0590918362, 0.0, 0.0, 0.0], [-0.0570398495, 0.0, 0.0, 0.0], [-0.0336270556, 0.0, 0.0, 0.0], [0.0734585524, 0.0, 0.0, 0.0], [-0.082178399, 0.0, 0.0, 0.0], [0.0120001668, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 16, 17, 21, 22, 10, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 4, 7, 8, 2, 5, 9, 18, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_465(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.393000007, 1.0, 2.0, 0.0], [-0.0563117079, 0.0, 0.0, 0.0], [-0.273499995, 3.0, 4.0, 0.0], [-0.284500003, 5.0, 6.0, 0.0], [-0.212500006, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.283500016, 11.0, 12.0, 0.0], [-0.770500004, 13.0, 14.0, 2.0], [-0.20449999, 15.0, 16.0, 0.0], [-0.0345923193, 0.0, 0.0, 0.0], [0.0371476449, 0.0, 0.0, 0.0], [0.0819008872, 0.0, 0.0, 0.0], [0.0157911163, 0.0, 0.0, 0.0], [-0.14129965, 0.0, 0.0, 0.0], [-0.0238059815, 0.0, 0.0, 0.0], [-0.2095, 17.0, 18.0, 0.0], [-0.191500008, 19.0, 20.0, 0.0], [0.0921077505, 0.0, 0.0, 0.0], [0.0284986161, 0.0, 0.0, 0.0], [-0.0643822625, 0.0, 0.0, 0.0], [0.00165723288, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20])
    branch_indices = np.array([0, 2, 3, 5, 6, 4, 7, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_466(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00185999996, 1.0, 2.0, 0.0], [-0.000224999996, 3.0, 4.0, 0.0], [0.0042849998, 5.0, 6.0, 0.0], [-0.000944999978, 7.0, 8.0, 0.0], [0.00118499994, 9.0, 10.0, 0.0], [0.00325499987, 11.0, 12.0, 0.0], [0.00768500008, 13.0, 14.0, 0.0], [-0.00200500013, 15.0, 16.0, 0.0], [0.13811931, 0.0, 0.0, 0.0], [-0.0437055603, 0.0, 0.0, 0.0], [-0.157972291, 0.0, 0.0, 0.0], [0.0204807594, 0.0, 0.0, 0.0], [0.267056882, 0.0, 0.0, 0.0], [0.00655000005, 17.0, 18.0, 0.0], [0.0131000001, 19.0, 20.0, 0.0], [-0.00463499967, 21.0, 22.0, 0.0], [-0.148984462, 0.0, 0.0, 0.0], [0.00540999975, 23.0, 24.0, 0.0], [-0.216201663, 0.0, 0.0, 0.0], [-0.838, 25.0, 26.0, 2.0], [0.0192999989, 27.0, 28.0, 0.0], [-0.00652439892, 0.0, 0.0, 0.0], [0.112029828, 0.0, 0.0, 0.0], [-0.138361543, 0.0, 0.0, 0.0], [0.105252735, 0.0, 0.0, 0.0], [0.231811136, 0.0, 0.0, 0.0], [-0.138013259, 0.0, 0.0, 0.0], [-0.272949308, 0.0, 0.0, 0.0], [0.0119647384, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 8, 9, 10, 11, 12, 23, 24, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 6, 13, 17, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_467(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.552999973, 1.0, 2.0, 0.0], [0.0812690705, 0.0, 0.0, 0.0], [-0.99150002, 3.0, 4.0, 1.0], [-0.972000003, 5.0, 6.0, 2.0], [-0.0675134808, 0.0, 0.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.0808999985, 9.0, 10.0, 0.0], [-0.169499993, 11.0, 12.0, 0.0], [-0.155499995, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.0745999962, 17.0, 18.0, 0.0], [-0.0193629898, 0.0, 0.0, 0.0], [0.0968122259, 0.0, 0.0, 0.0], [-0.221088484, 0.0, 0.0, 0.0], [-0.00502261706, 0.0, 0.0, 0.0], [-0.26234591, 0.0, 0.0, 0.0], [0.0580387451, 0.0, 0.0, 0.0], [0.226617545, 0.0, 0.0, 0.0], [0.0180068202, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 13, 14, 15, 16, 17, 18, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_468(xs):
    #Predicts Class 0
    function_dict = np.array([[0.354499996, 1.0, 2.0, 2.0], [-0.825500011, 3.0, 4.0, 1.0], [-0.782500029, 5.0, 6.0, 1.0], [0.0266766641, 0.0, 0.0, 0.0], [-0.0833735988, 0.0, 0.0, 0.0], [-0.225499988, 7.0, 8.0, 0.0], [-0.925500035, 9.0, 10.0, 4.0], [-0.807500005, 11.0, 12.0, 1.0], [-0.811499953, 13.0, 14.0, 1.0], [0.679499984, 15.0, 16.0, 2.0], [0.685500026, 17.0, 18.0, 2.0], [0.0430789143, 0.0, 0.0, 0.0], [-0.0690589398, 0.0, 0.0, 0.0], [0.00130099966, 0.0, 0.0, 0.0], [0.449999988, 19.0, 20.0, 2.0], [-0.191500008, 21.0, 22.0, 0.0], [0.0669158027, 0.0, 0.0, 0.0], [-0.932500005, 23.0, 24.0, 3.0], [0.713500023, 25.0, 26.0, 2.0], [0.138234049, 0.0, 0.0, 0.0], [0.0324455164, 0.0, 0.0, 0.0], [-0.0176165663, 0.0, 0.0, 0.0], [-0.0917406157, 0.0, 0.0, 0.0], [0.066532582, 0.0, 0.0, 0.0], [-0.024828298, 0.0, 0.0, 0.0], [-0.110189363, 0.0, 0.0, 0.0], [0.00787755288, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 12, 13, 19, 20, 21, 22, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 14, 6, 9, 15, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_469(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.8125, 1.0, 2.0, 1.0], [-0.989500046, 3.0, 4.0, 3.0], [-0.194499999, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 3.0], [0.00818912964, 0.0, 0.0, 0.0], [0.476500005, 9.0, 10.0, 2.0], [0.0445500016, 11.0, 12.0, 0.0], [0.00120717601, 0.0, 0.0, 0.0], [-0.0848744139, 0.0, 0.0, 0.0], [-0.218499988, 13.0, 14.0, 0.0], [0.559499979, 15.0, 16.0, 2.0], [-0.63349998, 17.0, 18.0, 1.0], [0.0448507629, 0.0, 0.0, 0.0], [-0.225499988, 19.0, 20.0, 0.0], [0.110046297, 0.0, 0.0, 0.0], [-0.213499993, 21.0, 22.0, 0.0], [0.635499954, 23.0, 24.0, 2.0], [0.442499995, 25.0, 26.0, 2.0], [0.00933446456, 0.0, 0.0, 0.0], [0.0507105514, 0.0, 0.0, 0.0], [-0.0695770159, 0.0, 0.0, 0.0], [-0.0158207808, 0.0, 0.0, 0.0], [-0.138550922, 0.0, 0.0, 0.0], [0.0659058839, 0.0, 0.0, 0.0], [-0.0155216381, 0.0, 0.0, 0.0], [-0.00985146686, 0.0, 0.0, 0.0], [-0.0887697935, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 19, 20, 14, 21, 22, 23, 24, 25, 26, 18, 12])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 13, 10, 15, 16, 6, 11, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_470(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.712499976, 1.0, 2.0, 4.0], [-0.816499949, 3.0, 4.0, 4.0], [0.0432382487, 0.0, 0.0, 0.0], [-0.864500046, 5.0, 6.0, 4.0], [-0.484499991, 7.0, 8.0, 1.0], [-0.186500013, 9.0, 10.0, 0.0], [0.065810442, 0.0, 0.0, 0.0], [-0.0841268227, 0.0, 0.0, 0.0], [0.00810431968, 0.0, 0.0, 0.0], [-0.919499993, 11.0, 12.0, 4.0], [-0.969500005, 13.0, 14.0, 4.0], [0.00020961363, 0.0, 0.0, 0.0], [-0.0730283633, 0.0, 0.0, 0.0], [-0.0441944674, 0.0, 0.0, 0.0], [0.0492616035, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_471(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.885499954, 1.0, 2.0, 2.0], [-0.972000003, 3.0, 4.0, 2.0], [0.000950000016, 5.0, 6.0, 0.0], [-0.103500001, 7.0, 8.0, 0.0], [-0.102499999, 9.0, 10.0, 0.0], [-0.0698499978, 11.0, 12.0, 0.0], [0.00679999962, 13.0, 14.0, 0.0], [-0.115500003, 15.0, 16.0, 0.0], [-0.0965999961, 17.0, 18.0, 0.0], [-0.130499989, 19.0, 20.0, 0.0], [-0.0335500017, 21.0, 22.0, 0.0], [-0.201499999, 23.0, 24.0, 0.0], [-0.0578999966, 25.0, 26.0, 0.0], [-0.274898559, 0.0, 0.0, 0.0], [0.0234500002, 27.0, 28.0, 0.0], [-0.120499998, 29.0, 30.0, 0.0], [-0.107000001, 31.0, 32.0, 0.0], [-0.0999500006, 33.0, 34.0, 0.0], [-0.0927000046, 35.0, 36.0, 0.0], [-0.999500036, 37.0, 38.0, 4.0], [0.546697497, 0.0, 0.0, 0.0], [-0.999500036, 39.0, 40.0, 4.0], [-0.0260500014, 41.0, 42.0, 0.0], [-0.260500014, 43.0, 44.0, 0.0], [-0.132499993, 45.0, 46.0, 0.0], [0.307019204, 0.0, 0.0, 0.0], [-0.0470499992, 47.0, 48.0, 0.0], [0.149049804, 0.0, 0.0, 0.0], [-0.999500036, 49.0, 50.0, 1.0], [-0.0176099911, 0.0, 0.0, 0.0], [0.163020581, 0.0, 0.0, 0.0], [-0.334879786, 0.0, 0.0, 0.0], [-0.0328337364, 0.0, 0.0, 0.0], [0.0262960903, 0.0, 0.0, 0.0], [0.199778378, 0.0, 0.0, 0.0], [-0.276695102, 0.0, 0.0, 0.0], [0.00725181028, 0.0, 0.0, 0.0], [-0.227243006, 0.0, 0.0, 0.0], [0.118673258, 0.0, 0.0, 0.0], [-0.338320494, 0.0, 0.0, 0.0], [-0.0660020709, 0.0, 0.0, 0.0], [0.319601446, 0.0, 0.0, 0.0], [-0.00479269726, 0.0, 0.0, 0.0], [-0.0976000726, 0.0, 0.0, 0.0], [0.0860266909, 0.0, 0.0, 0.0], [-0.168672338, 0.0, 0.0, 0.0], [-0.0216635857, 0.0, 0.0, 0.0], [-0.260615408, 0.0, 0.0, 0.0], [0.114029989, 0.0, 0.0, 0.0], [-0.183719143, 0.0, 0.0, 0.0], [0.0271631945, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 20, 39, 40, 41, 42, 43, 44, 45, 46, 25, 47, 48, 13, 27, 49, 50])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 9, 19, 10, 21, 22, 2, 5, 11, 23, 24, 12, 26, 6, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_472(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0382499993, 1.0, 2.0, 0.0], [-0.03895, 3.0, 4.0, 0.0], [-0.0310500003, 5.0, 6.0, 0.0], [-0.0421000011, 7.0, 8.0, 0.0], [0.314384133, 0.0, 0.0, 0.0], [-0.284884155, 0.0, 0.0, 0.0], [-0.0293500014, 9.0, 10.0, 0.0], [-0.0466499999, 11.0, 12.0, 0.0], [-0.178909987, 0.0, 0.0, 0.0], [0.131892174, 0.0, 0.0, 0.0], [-0.0250499994, 13.0, 14.0, 0.0], [-0.0494500026, 15.0, 16.0, 0.0], [-0.0455499999, 17.0, 18.0, 0.0], [-0.228054568, 0.0, 0.0, 0.0], [-0.0244999994, 19.0, 20.0, 0.0], [0.00516865309, 0.0, 0.0, 0.0], [-0.215666056, 0.0, 0.0, 0.0], [0.190728322, 0.0, 0.0, 0.0], [0.0175436214, 0.0, 0.0, 0.0], [0.29394266, 0.0, 0.0, 0.0], [-0.00661484618, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_473(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.168500006, 3.0, 4.0, 0.0], [-0.157499999, 5.0, 6.0, 0.0], [-0.169499993, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.161221117, 0.0, 0.0, 0.0], [-0.99849999, 11.0, 12.0, 4.0], [-0.29549998, 13.0, 14.0, 0.0], [0.167044371, 0.0, 0.0, 0.0], [-0.1655, 15.0, 16.0, 0.0], [0.0948263407, 0.0, 0.0, 0.0], [0.363499999, 17.0, 18.0, 0.0], [0.100149855, 0.0, 0.0, 0.0], [-0.38349998, 19.0, 20.0, 0.0], [-0.100689836, 0.0, 0.0, 0.0], [-0.288055182, 0.0, 0.0, 0.0], [-0.065395236, 0.0, 0.0, 0.0], [0.276499987, 21.0, 22.0, 0.0], [0.394500017, 23.0, 24.0, 0.0], [-0.0123504438, 0.0, 0.0, 0.0], [0.100947402, 0.0, 0.0, 0.0], [-0.00343132531, 0.0, 0.0, 0.0], [-0.137238652, 0.0, 0.0, 0.0], [0.122471899, 0.0, 0.0, 0.0], [0.00209623878, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 15, 16, 10, 5, 21, 22, 23, 24, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 2, 6, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_474(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.990499973, 1.0, 2.0, 3.0], [-0.276499987, 3.0, 4.0, 0.0], [-0.983500004, 5.0, 6.0, 3.0], [-0.711500049, 7.0, 8.0, 1.0], [-0.237500012, 9.0, 10.0, 0.0], [-0.699499965, 11.0, 12.0, 1.0], [-0.98150003, 13.0, 14.0, 3.0], [-0.010850017, 0.0, 0.0, 0.0], [-0.0991699174, 0.0, 0.0, 0.0], [-0.2465, 15.0, 16.0, 0.0], [-0.220499992, 17.0, 18.0, 0.0], [-0.966500044, 19.0, 20.0, 4.0], [-0.0276549459, 0.0, 0.0, 0.0], [-0.0791270435, 0.0, 0.0, 0.0], [0.354499996, 21.0, 22.0, 2.0], [0.566499949, 23.0, 24.0, 2.0], [0.115159862, 0.0, 0.0, 0.0], [-0.0823598951, 0.0, 0.0, 0.0], [-0.141499996, 25.0, 26.0, 0.0], [0.0262708385, 0.0, 0.0, 0.0], [0.122013777, 0.0, 0.0, 0.0], [-0.0606121793, 0.0, 0.0, 0.0], [-0.772500038, 27.0, 28.0, 1.0], [0.0395627394, 0.0, 0.0, 0.0], [-0.0338459313, 0.0, 0.0, 0.0], [0.0189442262, 0.0, 0.0, 0.0], [-0.0457433984, 0.0, 0.0, 0.0], [0.0909693241, 0.0, 0.0, 0.0], [0.00889447052, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 23, 24, 16, 17, 25, 26, 19, 20, 12, 13, 21, 27, 28])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 10, 18, 2, 5, 11, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_475(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.915500045, 1.0, 2.0, 3.0], [-0.935500026, 3.0, 4.0, 3.0], [-0.642499983, 5.0, 6.0, 1.0], [-0.291500002, 7.0, 8.0, 0.0], [0.0673864409, 0.0, 0.0, 0.0], [-0.0736934096, 0.0, 0.0, 0.0], [0.0212205984, 0.0, 0.0, 0.0], [-0.334500015, 9.0, 10.0, 0.0], [-0.887500048, 11.0, 12.0, 4.0], [-0.936499953, 13.0, 14.0, 4.0], [0.631500006, 15.0, 16.0, 2.0], [-0.922500014, 17.0, 18.0, 4.0], [0.049668137, 0.0, 0.0, 0.0], [0.0130143603, 0.0, 0.0, 0.0], [-0.07813555, 0.0, 0.0, 0.0], [0.112053782, 0.0, 0.0, 0.0], [-0.00460841134, 0.0, 0.0, 0.0], [-0.00426932052, 0.0, 0.0, 0.0], [-0.123597182, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 17, 18, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 11, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_476(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [-0.186500013, 3.0, 4.0, 0.0], [-0.9375, 5.0, 6.0, 4.0], [-0.736500025, 7.0, 8.0, 4.0], [0.0857770592, 0.0, 0.0, 0.0], [-0.0811500028, 9.0, 10.0, 0.0], [-0.897500038, 11.0, 12.0, 4.0], [0.652500033, 13.0, 14.0, 2.0], [0.0655992031, 0.0, 0.0, 0.0], [-0.0986303166, 0.0, 0.0, 0.0], [0.0243615396, 0.0, 0.0, 0.0], [0.493000001, 15.0, 16.0, 2.0], [0.727499962, 17.0, 18.0, 2.0], [-0.423500001, 19.0, 20.0, 1.0], [0.699499965, 21.0, 22.0, 2.0], [-0.0125760445, 0.0, 0.0, 0.0], [0.104022369, 0.0, 0.0, 0.0], [-0.0826839954, 0.0, 0.0, 0.0], [0.041881144, 0.0, 0.0, 0.0], [-0.00934143737, 0.0, 0.0, 0.0], [0.115934096, 0.0, 0.0, 0.0], [-0.118961923, 0.0, 0.0, 0.0], [0.0117763923, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 10, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 6, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_477(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.795000017, 3.0, 4.0, 2.0], [-0.654500008, 5.0, 6.0, 2.0], [-0.273499995, 7.0, 8.0, 0.0], [0.0948617756, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.0896999985, 11.0, 12.0, 0.0], [-0.374500006, 13.0, 14.0, 0.0], [-0.210500002, 15.0, 16.0, 0.0], [-0.0693999976, 17.0, 18.0, 0.0], [-0.99849999, 19.0, 20.0, 1.0], [-0.99849999, 21.0, 22.0, 4.0], [-0.0183500014, 23.0, 24.0, 0.0], [-0.0203416646, 0.0, 0.0, 0.0], [-0.296499997, 25.0, 26.0, 0.0], [-0.129681543, 0.0, 0.0, 0.0], [-0.996500015, 27.0, 28.0, 1.0], [0.0127440179, 0.0, 0.0, 0.0], [0.0553793274, 0.0, 0.0, 0.0], [0.00753000006, 29.0, 30.0, 0.0], [-0.231789351, 0.0, 0.0, 0.0], [0.111531474, 0.0, 0.0, 0.0], [-0.0245303158, 0.0, 0.0, 0.0], [-0.110394441, 0.0, 0.0, 0.0], [-0.99849999, 31.0, 32.0, 1.0], [0.12140286, 0.0, 0.0, 0.0], [0.0255313609, 0.0, 0.0, 0.0], [-0.00115903933, 0.0, 0.0, 0.0], [0.111389048, 0.0, 0.0, 0.0], [-0.0853513479, 0.0, 0.0, 0.0], [0.0863968134, 0.0, 0.0, 0.0], [-0.0350338407, 0.0, 0.0, 0.0], [0.0715797693, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 25, 26, 15, 27, 28, 4, 17, 18, 29, 30, 20, 21, 22, 23, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 16, 2, 5, 9, 10, 19, 6, 11, 12, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_478(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.770500004, 3.0, 4.0, 2.0], [-0.0795713291, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [-0.0420500003, 7.0, 8.0, 0.0], [-0.412, 9.0, 10.0, 0.0], [-0.997500002, 11.0, 12.0, 1.0], [-0.0682999939, 13.0, 14.0, 0.0], [0.00526000001, 15.0, 16.0, 0.0], [-0.104269929, 0.0, 0.0, 0.0], [-0.394999981, 17.0, 18.0, 0.0], [-0.148499995, 19.0, 20.0, 0.0], [0.0747821555, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [-0.152128622, 0.0, 0.0, 0.0], [0.179716602, 0.0, 0.0, 0.0], [-0.680500031, 23.0, 24.0, 2.0], [0.121276565, 0.0, 0.0, 0.0], [0.00101287104, 0.0, 0.0, 0.0], [-0.0237946473, 0.0, 0.0, 0.0], [-0.255510926, 0.0, 0.0, 0.0], [0.148764148, 0.0, 0.0, 0.0], [0.00664443243, 0.0, 0.0, 0.0], [0.0728482828, 0.0, 0.0, 0.0], [-0.0911006778, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 17, 18, 19, 20, 12, 21, 22, 14, 15, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 11, 4, 7, 13, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_479(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.228500009, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [0.256500006, 9.0, 10.0, 0.0], [0.163760543, 0.0, 0.0, 0.0], [0.341000021, 11.0, 12.0, 0.0], [-0.0123999994, 13.0, 14.0, 0.0], [0.215499997, 15.0, 16.0, 0.0], [-0.163188875, 0.0, 0.0, 0.0], [-0.0317597017, 0.0, 0.0, 0.0], [0.276499987, 17.0, 18.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.032850001, 21.0, 22.0, 0.0], [0.198500007, 23.0, 24.0, 0.0], [0.169576108, 0.0, 0.0, 0.0], [0.00439123064, 0.0, 0.0, 0.0], [-0.00423863111, 0.0, 0.0, 0.0], [-0.121337868, 0.0, 0.0, 0.0], [0.534000039, 25.0, 26.0, 0.0], [0.429499984, 27.0, 28.0, 0.0], [-0.0162978526, 0.0, 0.0, 0.0], [0.160396203, 0.0, 0.0, 0.0], [-0.144794092, 0.0, 0.0, 0.0], [-0.0216627754, 0.0, 0.0, 0.0], [0.0142666101, 0.0, 0.0, 0.0], [-0.031321872, 0.0, 0.0, 0.0], [0.161080971, 0.0, 0.0, 0.0], [0.0278883465, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 9, 10, 5, 17, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 2, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_480(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.996500015, 1.0, 2.0, 3.0], [-0.975499988, 3.0, 4.0, 4.0], [-0.930500031, 5.0, 6.0, 4.0], [0.0445009992, 0.0, 0.0, 0.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.944499969, 9.0, 10.0, 4.0], [-0.901499987, 11.0, 12.0, 4.0], [0.629500031, 13.0, 14.0, 2.0], [-0.0990192518, 0.0, 0.0, 0.0], [-0.723500013, 15.0, 16.0, 1.0], [-0.733999968, 17.0, 18.0, 1.0], [0.469500005, 19.0, 20.0, 2.0], [-0.878499985, 21.0, 22.0, 4.0], [0.555999994, 23.0, 24.0, 2.0], [-0.0593219139, 0.0, 0.0, 0.0], [-0.9745, 25.0, 26.0, 4.0], [-0.645500004, 27.0, 28.0, 1.0], [-0.0108577441, 0.0, 0.0, 0.0], [0.154126495, 0.0, 0.0, 0.0], [0.00330886175, 0.0, 0.0, 0.0], [-0.237500012, 29.0, 30.0, 0.0], [0.0821043327, 0.0, 0.0, 0.0], [-0.730999947, 31.0, 32.0, 4.0], [-0.0351130627, 0.0, 0.0, 0.0], [0.105091929, 0.0, 0.0, 0.0], [-0.0493673533, 0.0, 0.0, 0.0], [0.0652575195, 0.0, 0.0, 0.0], [-0.106718987, 0.0, 0.0, 0.0], [0.0405764133, 0.0, 0.0, 0.0], [-0.117129177, 0.0, 0.0, 0.0], [-0.0274373442, 0.0, 0.0, 0.0], [-0.0223429352, 0.0, 0.0, 0.0], [0.059971109, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 23, 24, 14, 8, 25, 26, 27, 28, 17, 18, 19, 29, 30, 21, 31, 32])
    branch_indices = np.array([0, 1, 4, 7, 13, 2, 5, 9, 15, 16, 10, 6, 11, 20, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_481(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.5995, 1.0, 2.0, 1.0], [-0.630499959, 3.0, 4.0, 1.0], [-0.294499993, 5.0, 6.0, 0.0], [-0.932500005, 7.0, 8.0, 4.0], [0.0835045576, 0.0, 0.0, 0.0], [-0.919499993, 9.0, 10.0, 4.0], [-0.960500002, 11.0, 12.0, 4.0], [-0.946500003, 13.0, 14.0, 4.0], [-0.234499991, 15.0, 16.0, 0.0], [-0.0360502712, 0.0, 0.0, 0.0], [0.0536640435, 0.0, 0.0, 0.0], [0.0232005958, 0.0, 0.0, 0.0], [-0.989500046, 17.0, 18.0, 3.0], [-0.978500009, 19.0, 20.0, 3.0], [0.43900001, 21.0, 22.0, 2.0], [0.537, 23.0, 24.0, 2.0], [-0.922500014, 25.0, 26.0, 4.0], [-0.0315928087, 0.0, 0.0, 0.0], [-0.124505594, 0.0, 0.0, 0.0], [-0.017213013, 0.0, 0.0, 0.0], [0.0563701838, 0.0, 0.0, 0.0], [0.0370902009, 0.0, 0.0, 0.0], [-0.141310811, 0.0, 0.0, 0.0], [-0.084906742, 0.0, 0.0, 0.0], [0.0378224887, 0.0, 0.0, 0.0], [0.123795681, 0.0, 0.0, 0.0], [0.0176116135, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 4, 9, 10, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_482(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.977499962, 3.0, 4.0, 4.0], [-0.0532057956, 0.0, 0.0, 0.0], [-0.0550813191, 0.0, 0.0, 0.0], [-0.109499998, 5.0, 6.0, 0.0], [-0.183499992, 7.0, 8.0, 0.0], [0.0732002705, 0.0, 0.0, 0.0], [-0.203500003, 9.0, 10.0, 0.0], [0.676499963, 11.0, 12.0, 2.0], [0.00286015798, 0.0, 0.0, 0.0], [0.0722328722, 0.0, 0.0, 0.0], [-0.0562720932, 0.0, 0.0, 0.0], [0.00915802643, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 9, 10, 11, 12, 6, 2])
    branch_indices = np.array([0, 1, 4, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_483(xs):
    #Predicts Class 3
    function_dict = np.array([[0.539999962, 1.0, 2.0, 0.0], [0.534000039, 3.0, 4.0, 0.0], [0.556499958, 5.0, 6.0, 0.0], [0.527500033, 7.0, 8.0, 0.0], [0.149041235, 0.0, 0.0, 0.0], [0.541499972, 9.0, 10.0, 0.0], [0.5625, 11.0, 12.0, 0.0], [0.446500003, 13.0, 14.0, 0.0], [-0.127102539, 0.0, 0.0, 0.0], [-0.010205199, 0.0, 0.0, 0.0], [-0.0894663334, 0.0, 0.0, 0.0], [0.557999969, 15.0, 16.0, 0.0], [0.585000038, 17.0, 18.0, 0.0], [0.436500013, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.0898884162, 0.0, 0.0, 0.0], [0.023159219, 0.0, 0.0, 0.0], [-0.126632184, 0.0, 0.0, 0.0], [0.618499994, 23.0, 24.0, 0.0], [0.00066993176, 0.0, 0.0, 0.0], [-0.0991066694, 0.0, 0.0, 0.0], [0.0771966949, 0.0, 0.0, 0.0], [-0.115050502, 0.0, 0.0, 0.0], [0.0769259483, 0.0, 0.0, 0.0], [-0.0467328429, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 10, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_484(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.163500011, 3.0, 4.0, 0.0], [-0.155499995, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [-0.181632519, 0.0, 0.0, 0.0], [0.218592197, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.168500006, 11.0, 12.0, 0.0], [-0.997500002, 13.0, 14.0, 1.0], [0.00950999931, 15.0, 16.0, 0.0], [0.0107000005, 17.0, 18.0, 0.0], [-0.186500013, 19.0, 20.0, 0.0], [-0.1655, 21.0, 22.0, 0.0], [-0.747500002, 23.0, 24.0, 2.0], [0.0354387984, 0.0, 0.0, 0.0], [0.00588999968, 25.0, 26.0, 0.0], [0.025150001, 27.0, 28.0, 0.0], [-0.0551500022, 29.0, 30.0, 0.0], [0.0830999985, 31.0, 32.0, 0.0], [0.0220979284, 0.0, 0.0, 0.0], [-0.191911057, 0.0, 0.0, 0.0], [0.258415937, 0.0, 0.0, 0.0], [-0.00767583866, 0.0, 0.0, 0.0], [-0.14709872, 0.0, 0.0, 0.0], [0.0185995996, 0.0, 0.0, 0.0], [-0.00882266648, 0.0, 0.0, 0.0], [-0.225257143, 0.0, 0.0, 0.0], [0.180749357, 0.0, 0.0, 0.0], [-0.00428416766, 0.0, 0.0, 0.0], [-0.02844337, 0.0, 0.0, 0.0], [0.169057474, 0.0, 0.0, 0.0], [-0.154602423, 0.0, 0.0, 0.0], [0.0840782821, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 14, 4, 5, 25, 26, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 2, 6, 9, 15, 16, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_485(xs):
    #Predicts Class 5
    function_dict = np.array([[0.528499961, 1.0, 2.0, 0.0], [0.5255, 3.0, 4.0, 0.0], [0.536000013, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [-0.107797399, 0.0, 0.0, 0.0], [0.144171581, 0.0, 0.0, 0.0], [0.539999962, 9.0, 10.0, 0.0], [0.446500003, 11.0, 12.0, 0.0], [0.43599999, 13.0, 14.0, 0.0], [-0.104860559, 0.0, 0.0, 0.0], [0.556499958, 15.0, 16.0, 0.0], [0.424000025, 17.0, 18.0, 0.0], [0.46450001, 19.0, 20.0, 0.0], [0.428499997, 21.0, 22.0, 0.0], [0.156034753, 0.0, 0.0, 0.0], [0.541499972, 23.0, 24.0, 0.0], [0.5625, 25.0, 26.0, 0.0], [-0.0130191101, 0.0, 0.0, 0.0], [0.0949582458, 0.0, 0.0, 0.0], [-0.189736009, 0.0, 0.0, 0.0], [-0.00607402669, 0.0, 0.0, 0.0], [0.0270513017, 0.0, 0.0, 0.0], [-0.107462928, 0.0, 0.0, 0.0], [0.0125928037, 0.0, 0.0, 0.0], [0.0922087207, 0.0, 0.0, 0.0], [-0.0733337626, 0.0, 0.0, 0.0], [0.0416545756, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 14, 4, 5, 9, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_486(xs):
    #Predicts Class 0
    function_dict = np.array([[0.57249999, 1.0, 2.0, 2.0], [-0.950500011, 3.0, 4.0, 3.0], [-0.615499973, 5.0, 6.0, 1.0], [-0.0961499959, 7.0, 8.0, 0.0], [-0.911499977, 9.0, 10.0, 3.0], [-0.847000003, 11.0, 12.0, 4.0], [-0.996500015, 13.0, 14.0, 3.0], [-0.992499948, 15.0, 16.0, 3.0], [0.0459724665, 0.0, 0.0, 0.0], [0.0898519605, 0.0, 0.0, 0.0], [-0.0303360596, 0.0, 0.0, 0.0], [-0.993499994, 17.0, 18.0, 3.0], [-0.0185115412, 0.0, 0.0, 0.0], [-0.0864121541, 0.0, 0.0, 0.0], [-0.234499991, 19.0, 20.0, 0.0], [0.534500003, 21.0, 22.0, 2.0], [-0.743499994, 23.0, 24.0, 1.0], [-0.943500042, 25.0, 26.0, 4.0], [-0.963500023, 27.0, 28.0, 3.0], [-0.044588387, 0.0, 0.0, 0.0], [0.710500002, 29.0, 30.0, 2.0], [-0.0283868313, 0.0, 0.0, 0.0], [0.0521203876, 0.0, 0.0, 0.0], [-0.0166195296, 0.0, 0.0, 0.0], [-0.120699629, 0.0, 0.0, 0.0], [-0.0434066802, 0.0, 0.0, 0.0], [0.047937002, 0.0, 0.0, 0.0], [0.133311242, 0.0, 0.0, 0.0], [-0.00145218626, 0.0, 0.0, 0.0], [0.0862099081, 0.0, 0.0, 0.0], [0.0084343804, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 9, 10, 25, 26, 27, 28, 12, 13, 19, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 17, 18, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_487(xs):
    #Predicts Class 1
    function_dict = np.array([[0.570500016, 1.0, 2.0, 2.0], [0.554499984, 3.0, 4.0, 2.0], [0.591500044, 5.0, 6.0, 2.0], [0.539499998, 7.0, 8.0, 2.0], [0.0755497515, 0.0, 0.0, 0.0], [-0.0994958729, 0.0, 0.0, 0.0], [0.602499962, 9.0, 10.0, 2.0], [0.516499996, 11.0, 12.0, 2.0], [-0.0856027231, 0.0, 0.0, 0.0], [0.0740350261, 0.0, 0.0, 0.0], [-0.946500003, 13.0, 14.0, 4.0], [-0.270500004, 15.0, 16.0, 0.0], [-0.225499988, 17.0, 18.0, 0.0], [-0.961500049, 19.0, 20.0, 4.0], [0.676499963, 21.0, 22.0, 2.0], [-0.0601075105, 0.0, 0.0, 0.0], [0.009137474, 0.0, 0.0, 0.0], [0.00280707702, 0.0, 0.0, 0.0], [0.107559413, 0.0, 0.0, 0.0], [-0.0424495488, 0.0, 0.0, 0.0], [0.0840915963, 0.0, 0.0, 0.0], [-0.0897249281, 0.0, 0.0, 0.0], [0.00417170068, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_488(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [0.713500023, 3.0, 4.0, 2.0], [0.0426773392, 0.0, 0.0, 0.0], [0.685500026, 5.0, 6.0, 2.0], [-0.985499978, 7.0, 8.0, 3.0], [-0.889500022, 9.0, 10.0, 4.0], [0.0527987592, 0.0, 0.0, 0.0], [-0.0829176381, 0.0, 0.0, 0.0], [0.0187307671, 0.0, 0.0, 0.0], [-0.968500018, 11.0, 12.0, 4.0], [-0.551999986, 13.0, 14.0, 1.0], [-0.0251324009, 0.0, 0.0, 0.0], [0.0214602072, 0.0, 0.0, 0.0], [-0.100793861, 0.0, 0.0, 0.0], [0.0203136057, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_489(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0968500003, 1.0, 2.0, 0.0], [-0.0987499952, 3.0, 4.0, 0.0], [-0.0963499993, 5.0, 6.0, 0.0], [-0.111500002, 7.0, 8.0, 0.0], [-0.268765807, 0.0, 0.0, 0.0], [0.249949381, 0.0, 0.0, 0.0], [-0.0922500044, 9.0, 10.0, 0.0], [-0.115500003, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.215954512, 0.0, 0.0, 0.0], [-0.0905999988, 15.0, 16.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [-0.240991578, 0.0, 0.0, 0.0], [-0.103500001, 19.0, 20.0, 0.0], [0.229720265, 0.0, 0.0, 0.0], [0.155939192, 0.0, 0.0, 0.0], [-0.0801500008, 21.0, 22.0, 0.0], [0.00686411001, 0.0, 0.0, 0.0], [-0.0498931743, 0.0, 0.0, 0.0], [-0.0901521593, 0.0, 0.0, 0.0], [0.090556629, 0.0, 0.0, 0.0], [-0.226947725, 0.0, 0.0, 0.0], [0.00289492402, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 19, 20, 14, 4, 5, 9, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_490(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.378499985, 1.0, 2.0, 0.0], [-0.395500004, 3.0, 4.0, 0.0], [-0.297500014, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [-0.139538467, 0.0, 0.0, 0.0], [0.0955919772, 0.0, 0.0, 0.0], [-0.292500019, 9.0, 10.0, 0.0], [-0.0577907488, 0.0, 0.0, 0.0], [-0.407499999, 11.0, 12.0, 0.0], [-0.092660509, 0.0, 0.0, 0.0], [-0.274500012, 13.0, 14.0, 0.0], [0.097497113, 0.0, 0.0, 0.0], [-0.00951376837, 0.0, 0.0, 0.0], [0.0605849475, 0.0, 0.0, 0.0], [-0.253499985, 15.0, 16.0, 0.0], [-0.0936548784, 0.0, 0.0, 0.0], [0.00109149201, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 4, 5, 9, 13, 15, 16])
    branch_indices = np.array([0, 1, 3, 8, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_491(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.382499993, 1.0, 2.0, 0.0], [-0.399500012, 3.0, 4.0, 0.0], [-0.161500007, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [0.129948437, 0.0, 0.0, 0.0], [-0.164499998, 9.0, 10.0, 0.0], [-0.158500001, 11.0, 12.0, 0.0], [-0.457500011, 13.0, 14.0, 0.0], [0.0638259575, 0.0, 0.0, 0.0], [-0.166500002, 15.0, 16.0, 0.0], [-0.239860669, 0.0, 0.0, 0.0], [0.173793152, 0.0, 0.0, 0.0], [-0.0126499999, 17.0, 18.0, 0.0], [-0.0881091729, 0.0, 0.0, 0.0], [-0.411000013, 19.0, 20.0, 0.0], [-0.822000027, 21.0, 22.0, 2.0], [0.0581983365, 0.0, 0.0, 0.0], [-0.0318999998, 23.0, 24.0, 0.0], [0.00540999975, 25.0, 26.0, 0.0], [0.0691636056, 0.0, 0.0, 0.0], [-0.0644412041, 0.0, 0.0, 0.0], [-0.0956979543, 0.0, 0.0, 0.0], [0.0507238545, 0.0, 0.0, 0.0], [0.00533964392, 0.0, 0.0, 0.0], [-0.237755314, 0.0, 0.0, 0.0], [0.189330056, 0.0, 0.0, 0.0], [0.00131140649, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 19, 20, 8, 4, 21, 22, 16, 10, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 14, 2, 5, 9, 15, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_492(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.983500004, 1.0, 2.0, 4.0], [-0.0607674457, 0.0, 0.0, 0.0], [-0.0798000023, 3.0, 4.0, 0.0], [-0.109499998, 5.0, 6.0, 0.0], [0.0759000033, 7.0, 8.0, 0.0], [-0.965499997, 9.0, 10.0, 3.0], [-0.0490993783, 0.0, 0.0, 0.0], [0.0842140689, 0.0, 0.0, 0.0], [-0.00303676142, 0.0, 0.0, 0.0], [-0.730499983, 11.0, 12.0, 4.0], [-0.940500021, 13.0, 14.0, 3.0], [-0.0115224198, 0.0, 0.0, 0.0], [0.0732224286, 0.0, 0.0, 0.0], [0.0698735267, 0.0, 0.0, 0.0], [-0.0043520336, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 13, 14, 6, 7, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_493(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 4.0], [-0.986500025, 3.0, 4.0, 4.0], [0.0609500036, 5.0, 6.0, 0.0], [0.00583348097, 0.0, 0.0, 0.0], [-0.0780691877, 0.0, 0.0, 0.0], [-0.315500021, 7.0, 8.0, 0.0], [0.0588676371, 0.0, 0.0, 0.0], [-0.323500007, 9.0, 10.0, 0.0], [0.657000005, 11.0, 12.0, 2.0], [-0.361499995, 13.0, 14.0, 0.0], [0.0857838839, 0.0, 0.0, 0.0], [-0.778499961, 15.0, 16.0, 1.0], [-0.931499958, 17.0, 18.0, 4.0], [0.0441115946, 0.0, 0.0, 0.0], [-0.0341452323, 0.0, 0.0, 0.0], [-0.0269386638, 0.0, 0.0, 0.0], [0.0153907547, 0.0, 0.0, 0.0], [-0.0035128186, 0.0, 0.0, 0.0], [-0.0951325521, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 13, 14, 10, 15, 16, 17, 18, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 9, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_494(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.24849999, 1.0, 2.0, 0.0], [0.735499978, 3.0, 4.0, 2.0], [-0.440500021, 5.0, 6.0, 1.0], [-0.953500032, 7.0, 8.0, 4.0], [0.0543760993, 0.0, 0.0, 0.0], [-0.528499961, 9.0, 10.0, 1.0], [0.0621823333, 0.0, 0.0, 0.0], [0.027125001, 0.0, 0.0, 0.0], [-0.3125, 11.0, 12.0, 0.0], [-0.149500012, 13.0, 14.0, 0.0], [-0.980499983, 15.0, 16.0, 3.0], [-0.000191907122, 0.0, 0.0, 0.0], [-0.109596893, 0.0, 0.0, 0.0], [0.529500008, 17.0, 18.0, 2.0], [0.523000002, 19.0, 20.0, 2.0], [0.00914715324, 0.0, 0.0, 0.0], [-0.0813629776, 0.0, 0.0, 0.0], [-0.0239210334, 0.0, 0.0, 0.0], [0.0610056818, 0.0, 0.0, 0.0], [0.0372495055, 0.0, 0.0, 0.0], [-0.0685148612, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 4, 17, 18, 19, 20, 15, 16, 6])
    branch_indices = np.array([0, 1, 3, 8, 2, 5, 9, 13, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_495(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.706500053, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 3.0], [-0.995499969, 5.0, 6.0, 1.0], [-0.747500002, 7.0, 8.0, 2.0], [-0.0923523977, 0.0, 0.0, 0.0], [-0.120999999, 9.0, 10.0, 0.0], [-0.061774984, 0.0, 0.0, 0.0], [-0.190499991, 11.0, 12.0, 0.0], [-0.0542500019, 13.0, 14.0, 0.0], [-0.639999986, 15.0, 16.0, 2.0], [-0.0641499981, 17.0, 18.0, 0.0], [-0.205500007, 19.0, 20.0, 0.0], [-0.142500013, 21.0, 22.0, 0.0], [0.00355391204, 0.0, 0.0, 0.0], [-0.109688245, 0.0, 0.0, 0.0], [0.191270024, 0.0, 0.0, 0.0], [-0.00753113348, 0.0, 0.0, 0.0], [-0.116033003, 0.0, 0.0, 0.0], [-0.561499953, 23.0, 24.0, 2.0], [-0.0055170767, 0.0, 0.0, 0.0], [0.0915202945, 0.0, 0.0, 0.0], [-0.089248158, 0.0, 0.0, 0.0], [0.000345372333, 0.0, 0.0, 0.0], [0.0868737102, 0.0, 0.0, 0.0], [-0.0219948292, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 14, 4, 15, 16, 17, 23, 24, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 5, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_496(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.706500053, 1.0, 2.0, 2.0], [-0.747500002, 3.0, 4.0, 2.0], [0.00526000001, 5.0, 6.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [0.102476195, 0.0, 0.0, 0.0], [-0.120499998, 9.0, 10.0, 0.0], [-0.104583681, 0.0, 0.0, 0.0], [-0.421000004, 11.0, 12.0, 0.0], [-0.38349998, 13.0, 14.0, 0.0], [-0.639999986, 15.0, 16.0, 2.0], [-0.637500048, 17.0, 18.0, 2.0], [0.0245448817, 0.0, 0.0, 0.0], [-0.149273232, 0.0, 0.0, 0.0], [0.126338542, 0.0, 0.0, 0.0], [-0.282999992, 19.0, 20.0, 0.0], [-0.171551526, 0.0, 0.0, 0.0], [-0.546000004, 21.0, 22.0, 2.0], [0.222191662, 0.0, 0.0, 0.0], [-0.0870788246, 0.0, 0.0, 0.0], [-0.0721931756, 0.0, 0.0, 0.0], [0.00302365585, 0.0, 0.0, 0.0], [0.112440005, 0.0, 0.0, 0.0], [-0.0451452807, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 19, 20, 4, 15, 21, 22, 17, 18, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 14, 2, 5, 9, 16, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_497(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 4.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.1655, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.885499954, 9.0, 10.0, 2.0], [-0.99849999, 11.0, 12.0, 4.0], [-0.0748500004, 13.0, 14.0, 0.0], [0.49000001, 15.0, 16.0, 0.0], [-0.081249997, 17.0, 18.0, 0.0], [-0.202081069, 0.0, 0.0, 0.0], [0.0176754743, 0.0, 0.0, 0.0], [-0.885499954, 19.0, 20.0, 2.0], [-0.0562642068, 0.0, 0.0, 0.0], [-0.226498649, 0.0, 0.0, 0.0], [0.479499996, 21.0, 22.0, 0.0], [0.465499997, 23.0, 24.0, 0.0], [0.543500006, 25.0, 26.0, 0.0], [-0.104596741, 0.0, 0.0, 0.0], [0.279500008, 27.0, 28.0, 0.0], [0.100863792, 0.0, 0.0, 0.0], [0.0308324676, 0.0, 0.0, 0.0], [-0.885499954, 29.0, 30.0, 2.0], [-0.116625704, 0.0, 0.0, 0.0], [0.00504264887, 0.0, 0.0, 0.0], [-0.187372521, 0.0, 0.0, 0.0], [0.0701411441, 0.0, 0.0, 0.0], [-0.0170374345, 0.0, 0.0, 0.0], [0.238865331, 0.0, 0.0, 0.0], [0.0699743554, 0.0, 0.0, 0.0], [0.115075372, 0.0, 0.0, 0.0], [-0.0466755442, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 27, 28, 9, 10, 19, 20, 12, 13, 29, 30, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 2, 5, 11, 6, 14, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_498(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.968500018, 3.0, 4.0, 4.0], [-0.977499962, 5.0, 6.0, 4.0], [-0.842999995, 7.0, 8.0, 1.0], [-0.942499995, 9.0, 10.0, 4.0], [0.0751102269, 0.0, 0.0, 0.0], [-0.892500043, 11.0, 12.0, 4.0], [0.00135044847, 0.0, 0.0, 0.0], [-0.107412249, 0.0, 0.0, 0.0], [0.0516882949, 0.0, 0.0, 0.0], [-0.0377584472, 0.0, 0.0, 0.0], [-0.919499993, 13.0, 14.0, 4.0], [-0.871500015, 15.0, 16.0, 4.0], [-0.656499982, 17.0, 18.0, 1.0], [-0.978500009, 19.0, 20.0, 3.0], [-0.0856952593, 0.0, 0.0, 0.0], [-0.806499958, 21.0, 22.0, 4.0], [0.013541149, 0.0, 0.0, 0.0], [-0.0545777865, 0.0, 0.0, 0.0], [0.0968893021, 0.0, 0.0, 0.0], [-0.00298511912, 0.0, 0.0, 0.0], [0.0485470705, 0.0, 0.0, 0.0], [-0.0288977288, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 5, 17, 18, 19, 20, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 4, 2, 6, 11, 13, 14, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_499(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.975499988, 1.0, 2.0, 4.0], [-0.210500002, 3.0, 4.0, 0.0], [0.338, 5.0, 6.0, 2.0], [0.38499999, 7.0, 8.0, 2.0], [-0.0814801827, 0.0, 0.0, 0.0], [0.067142792, 0.0, 0.0, 0.0], [0.417500019, 9.0, 10.0, 2.0], [-0.0131629081, 0.0, 0.0, 0.0], [0.0496458635, 0.0, 0.0, 0.0], [-0.763000011, 11.0, 12.0, 1.0], [0.435499996, 13.0, 14.0, 2.0], [0.0229431204, 0.0, 0.0, 0.0], [-0.112956405, 0.0, 0.0, 0.0], [0.0639150143, 0.0, 0.0, 0.0], [0.444499999, 15.0, 16.0, 2.0], [-0.072027266, 0.0, 0.0, 0.0], [0.00748902326, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 11, 12, 13, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_500(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.712499976, 1.0, 2.0, 4.0], [0.673500001, 3.0, 4.0, 2.0], [0.049961634, 0.0, 0.0, 0.0], [-0.426999986, 5.0, 6.0, 1.0], [-0.174499989, 7.0, 8.0, 0.0], [-0.4745, 9.0, 10.0, 1.0], [0.0613426268, 0.0, 0.0, 0.0], [0.711500049, 11.0, 12.0, 2.0], [0.0334681869, 0.0, 0.0, 0.0], [-0.506500006, 13.0, 14.0, 1.0], [-0.0775522143, 0.0, 0.0, 0.0], [-0.10639777, 0.0, 0.0, 0.0], [-0.872500002, 15.0, 16.0, 4.0], [-0.00799389463, 0.0, 0.0, 0.0], [0.0877735168, 0.0, 0.0, 0.0], [0.0370541029, 0.0, 0.0, 0.0], [-0.0551905707, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 11, 15, 16, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 7, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_501(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0914499983, 3.0, 4.0, 0.0], [-0.0895500034, 5.0, 6.0, 0.0], [-0.0932999998, 7.0, 8.0, 0.0], [-0.190920398, 0.0, 0.0, 0.0], [0.260245949, 0.0, 0.0, 0.0], [-0.0801500008, 9.0, 10.0, 0.0], [-0.102499999, 11.0, 12.0, 0.0], [0.253989428, 0.0, 0.0, 0.0], [-0.217439607, 0.0, 0.0, 0.0], [-0.0786499977, 13.0, 14.0, 0.0], [-0.111500002, 15.0, 16.0, 0.0], [-0.0989499986, 17.0, 18.0, 0.0], [0.226589084, 0.0, 0.0, 0.0], [-0.0728500038, 19.0, 20.0, 0.0], [-0.0104461396, 0.0, 0.0, 0.0], [0.109618813, 0.0, 0.0, 0.0], [-0.127709821, 0.0, 0.0, 0.0], [0.0174178407, 0.0, 0.0, 0.0], [-0.0885242894, 0.0, 0.0, 0.0], [0.00377829396, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_502(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0914499983, 3.0, 4.0, 0.0], [-0.0896499977, 5.0, 6.0, 0.0], [-0.0936499983, 7.0, 8.0, 0.0], [0.193933025, 0.0, 0.0, 0.0], [-0.270884037, 0.0, 0.0, 0.0], [-0.0811500028, 9.0, 10.0, 0.0], [-0.0965999961, 11.0, 12.0, 0.0], [-0.247861147, 0.0, 0.0, 0.0], [0.226153791, 0.0, 0.0, 0.0], [-0.0793000013, 13.0, 14.0, 0.0], [-0.0998999998, 15.0, 16.0, 0.0], [0.199424013, 0.0, 0.0, 0.0], [-0.31014055, 0.0, 0.0, 0.0], [-0.0771999955, 17.0, 18.0, 0.0], [0.00807305053, 0.0, 0.0, 0.0], [-0.131380916, 0.0, 0.0, 0.0], [0.245030344, 0.0, 0.0, 0.0], [-0.00480666384, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_503(xs):
    #Predicts Class 5
    function_dict = np.array([[0.549000025, 1.0, 2.0, 0.0], [0.534000039, 3.0, 4.0, 0.0], [0.561499953, 5.0, 6.0, 0.0], [0.46450001, 7.0, 8.0, 0.0], [0.539999962, 9.0, 10.0, 0.0], [0.0946074575, 0.0, 0.0, 0.0], [0.565500021, 11.0, 12.0, 0.0], [0.445500016, 13.0, 14.0, 0.0], [0.479499996, 15.0, 16.0, 0.0], [-0.107593574, 0.0, 0.0, 0.0], [0.543500006, 17.0, 18.0, 0.0], [-0.0763728991, 0.0, 0.0, 0.0], [0.615499973, 19.0, 20.0, 0.0], [0.432500005, 21.0, 22.0, 0.0], [0.455500007, 23.0, 24.0, 0.0], [0.157353401, 0.0, 0.0, 0.0], [0.489499986, 25.0, 26.0, 0.0], [0.0713714287, 0.0, 0.0, 0.0], [-0.0802629963, 0.0, 0.0, 0.0], [0.0895607471, 0.0, 0.0, 0.0], [0.618499994, 27.0, 28.0, 0.0], [-0.00835555606, 0.0, 0.0, 0.0], [0.0685343593, 0.0, 0.0, 0.0], [-0.130499959, 0.0, 0.0, 0.0], [-0.00673593907, 0.0, 0.0, 0.0], [-0.156835869, 0.0, 0.0, 0.0], [0.0268468168, 0.0, 0.0, 0.0], [-0.0594359562, 0.0, 0.0, 0.0], [0.0432284698, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 9, 17, 18, 5, 11, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 10, 2, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_504(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.045016095, 0.0, 0.0, 0.0], [-0.975499988, 3.0, 4.0, 4.0], [0.0644530356, 0.0, 0.0, 0.0], [-0.0798000023, 5.0, 6.0, 0.0], [-0.113499999, 7.0, 8.0, 0.0], [0.0530437976, 0.0, 0.0, 0.0], [-0.996500015, 9.0, 10.0, 3.0], [0.523500025, 11.0, 12.0, 2.0], [-0.0306345951, 0.0, 0.0, 0.0], [0.0127786519, 0.0, 0.0, 0.0], [-0.0916803926, 0.0, 0.0, 0.0], [0.0184530374, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 9, 10, 11, 12, 6])
    branch_indices = np.array([0, 2, 4, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_505(xs):
    #Predicts Class 1
    function_dict = np.array([[0.277500004, 1.0, 2.0, 2.0], [-0.0493715107, 0.0, 0.0, 0.0], [-0.228500009, 3.0, 4.0, 0.0], [-0.74150002, 5.0, 6.0, 1.0], [-0.742499948, 7.0, 8.0, 1.0], [0.518999994, 9.0, 10.0, 2.0], [-0.729499996, 11.0, 12.0, 1.0], [-0.171999991, 13.0, 14.0, 0.0], [-0.651499987, 15.0, 16.0, 1.0], [-0.804499984, 17.0, 18.0, 1.0], [-0.0215551797, 0.0, 0.0, 0.0], [-0.120603144, 0.0, 0.0, 0.0], [-0.95449996, 19.0, 20.0, 3.0], [-0.949499965, 21.0, 22.0, 4.0], [-0.96449995, 23.0, 24.0, 4.0], [-0.206, 25.0, 26.0, 0.0], [-0.528499961, 27.0, 28.0, 1.0], [-0.00318467291, 0.0, 0.0, 0.0], [0.127269179, 0.0, 0.0, 0.0], [-0.00571087468, 0.0, 0.0, 0.0], [0.0774595812, 0.0, 0.0, 0.0], [-0.150746316, 0.0, 0.0, 0.0], [0.0135290837, 0.0, 0.0, 0.0], [0.112052478, 0.0, 0.0, 0.0], [-0.0505841523, 0.0, 0.0, 0.0], [0.0126554929, 0.0, 0.0, 0.0], [0.0964397565, 0.0, 0.0, 0.0], [-0.0813289508, 0.0, 0.0, 0.0], [0.0509197079, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 10, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 12, 4, 7, 13, 14, 8, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_506(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.895500004, 1.0, 2.0, 4.0], [0.578500032, 3.0, 4.0, 2.0], [-0.250499994, 5.0, 6.0, 0.0], [0.54550004, 7.0, 8.0, 2.0], [-0.983500004, 9.0, 10.0, 3.0], [-0.9745, 11.0, 12.0, 3.0], [-0.203999996, 13.0, 14.0, 0.0], [-0.674499989, 15.0, 16.0, 1.0], [0.0659231916, 0.0, 0.0, 0.0], [-0.993499994, 17.0, 18.0, 3.0], [0.65200001, 19.0, 20.0, 2.0], [0.0955060422, 0.0, 0.0, 0.0], [-0.000664047664, 0.0, 0.0, 0.0], [-0.0778434947, 0.0, 0.0, 0.0], [-0.173500001, 21.0, 22.0, 0.0], [-0.736500025, 23.0, 24.0, 1.0], [-0.2315, 25.0, 26.0, 0.0], [-0.593500018, 27.0, 28.0, 1.0], [-0.131369814, 0.0, 0.0, 0.0], [0.0581129342, 0.0, 0.0, 0.0], [-0.0354767889, 0.0, 0.0, 0.0], [0.0896602869, 0.0, 0.0, 0.0], [0.667999983, 29.0, 30.0, 2.0], [-0.0245626085, 0.0, 0.0, 0.0], [0.0740325078, 0.0, 0.0, 0.0], [0.00218753656, 0.0, 0.0, 0.0], [-0.113817886, 0.0, 0.0, 0.0], [-0.0572724193, 0.0, 0.0, 0.0], [0.0247513782, 0.0, 0.0, 0.0], [-0.0507777259, 0.0, 0.0, 0.0], [0.0439004302, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 27, 28, 18, 19, 20, 11, 12, 13, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 17, 10, 2, 5, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_507(xs):
    #Predicts Class 3
    function_dict = np.array([[0.00456999987, 1.0, 2.0, 0.0], [0.00202000001, 3.0, 4.0, 0.0], [0.00881000049, 5.0, 6.0, 0.0], [0.000549999997, 7.0, 8.0, 0.0], [0.00325499987, 9.0, 10.0, 0.0], [0.00758500025, 11.0, 12.0, 0.0], [0.0104999999, 13.0, 14.0, 0.0], [-0.000714999973, 15.0, 16.0, 0.0], [-0.170957804, 0.0, 0.0, 0.0], [0.238171399, 0.0, 0.0, 0.0], [0.0181261208, 0.0, 0.0, 0.0], [-0.0780851021, 0.0, 0.0, 0.0], [-0.226724848, 0.0, 0.0, 0.0], [0.173865348, 0.0, 0.0, 0.0], [0.0137499999, 17.0, 18.0, 0.0], [-0.00163000007, 19.0, 20.0, 0.0], [0.175406978, 0.0, 0.0, 0.0], [-0.230602905, 0.0, 0.0, 0.0], [0.0192999989, 21.0, 22.0, 0.0], [0.00674506929, 0.0, 0.0, 0.0], [-0.146463022, 0.0, 0.0, 0.0], [0.248158425, 0.0, 0.0, 0.0], [-0.00574988499, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 16, 8, 9, 10, 11, 12, 13, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 6, 14, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_508(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00209000008, 1.0, 2.0, 0.0], [-0.00413500005, 3.0, 4.0, 0.0], [-0.00132499996, 5.0, 6.0, 0.0], [-0.00496499985, 7.0, 8.0, 0.0], [-0.232068717, 0.0, 0.0, 0.0], [0.190894112, 0.0, 0.0, 0.0], [0.000549999997, 9.0, 10.0, 0.0], [-0.0150499996, 11.0, 12.0, 0.0], [0.179153919, 0.0, 0.0, 0.0], [-0.000834999955, 13.0, 14.0, 0.0], [0.00202000001, 15.0, 16.0, 0.0], [-0.0156999994, 17.0, 18.0, 0.0], [-0.0101749999, 19.0, 20.0, 0.0], [-0.00385356019, 0.0, 0.0, 0.0], [-0.17307429, 0.0, 0.0, 0.0], [0.174164578, 0.0, 0.0, 0.0], [0.00325499987, 21.0, 22.0, 0.0], [-0.00392598286, 0.0, 0.0, 0.0], [0.192754477, 0.0, 0.0, 0.0], [-0.286381572, 0.0, 0.0, 0.0], [0.0179460384, 0.0, 0.0, 0.0], [-0.234943807, 0.0, 0.0, 0.0], [0.0139976684, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 13, 14, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_509(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.393000007, 1.0, 2.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [-0.161500007, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [0.13675645, 0.0, 0.0, 0.0], [-0.168500006, 9.0, 10.0, 0.0], [-0.158500001, 11.0, 12.0, 0.0], [-0.552999973, 13.0, 14.0, 0.0], [-0.0810050145, 0.0, 0.0, 0.0], [-0.169499993, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.136073709, 0.0, 0.0, 0.0], [-0.0126499999, 19.0, 20.0, 0.0], [0.0602082983, 0.0, 0.0, 0.0], [0.00300004869, 0.0, 0.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [0.102965102, 0.0, 0.0, 0.0], [-0.1655, 23.0, 24.0, 0.0], [0.0539790615, 0.0, 0.0, 0.0], [-0.0318999998, 25.0, 26.0, 0.0], [-0.00496499985, 27.0, 28.0, 0.0], [-0.126292959, 0.0, 0.0, 0.0], [0.0209003408, 0.0, 0.0, 0.0], [-0.22307995, 0.0, 0.0, 0.0], [-0.0394184925, 0.0, 0.0, 0.0], [-0.000500055437, 0.0, 0.0, 0.0], [-0.215736628, 0.0, 0.0, 0.0], [0.180919468, 0.0, 0.0, 0.0], [-0.000298741477, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 21, 22, 16, 23, 24, 18, 11, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 9, 15, 10, 17, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_510(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.316500008, 1.0, 2.0, 0.0], [-0.334500015, 3.0, 4.0, 0.0], [-0.271499991, 5.0, 6.0, 0.0], [0.00836327672, 0.0, 0.0, 0.0], [-0.0734757632, 0.0, 0.0, 0.0], [-0.988499999, 7.0, 8.0, 3.0], [-0.782500029, 9.0, 10.0, 1.0], [-0.0121958917, 0.0, 0.0, 0.0], [0.0929000527, 0.0, 0.0, 0.0], [-0.952499986, 11.0, 12.0, 4.0], [0.484499991, 13.0, 14.0, 2.0], [-0.965499997, 15.0, 16.0, 4.0], [-0.800500035, 17.0, 18.0, 1.0], [-0.917500019, 19.0, 20.0, 4.0], [-0.946500003, 21.0, 22.0, 3.0], [0.042334076, 0.0, 0.0, 0.0], [-0.0904923901, 0.0, 0.0, 0.0], [0.0216758866, 0.0, 0.0, 0.0], [0.116036244, 0.0, 0.0, 0.0], [-0.0700649023, 0.0, 0.0, 0.0], [0.0228486285, 0.0, 0.0, 0.0], [0.0134039251, 0.0, 0.0, 0.0], [-0.0495343916, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11, 12, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_511(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.862499952, 1.0, 2.0, 1.0], [-0.0574280024, 0.0, 0.0, 0.0], [-0.315500021, 3.0, 4.0, 0.0], [-0.476999998, 5.0, 6.0, 1.0], [0.386500001, 7.0, 8.0, 2.0], [-0.916999996, 9.0, 10.0, 4.0], [-0.0204534382, 0.0, 0.0, 0.0], [-0.776499987, 11.0, 12.0, 1.0], [-0.973500013, 13.0, 14.0, 4.0], [0.0933667496, 0.0, 0.0, 0.0], [-8.42149384e-05, 0.0, 0.0, 0.0], [0.333999991, 15.0, 16.0, 2.0], [-0.0264759604, 0.0, 0.0, 0.0], [0.534000039, 17.0, 18.0, 2.0], [0.530499995, 19.0, 20.0, 2.0], [0.0300808027, 0.0, 0.0, 0.0], [0.102331899, 0.0, 0.0, 0.0], [0.0787997097, 0.0, 0.0, 0.0], [-0.0206071585, 0.0, 0.0, 0.0], [-0.0496085696, 0.0, 0.0, 0.0], [0.00574837532, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 6, 15, 16, 12, 17, 18, 19, 20])
    branch_indices = np.array([0, 2, 3, 5, 4, 7, 11, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_512(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.956499994, 3.0, 4.0, 4.0], [-0.283999979, 5.0, 6.0, 0.0], [0.482500017, 7.0, 8.0, 2.0], [-0.99849999, 9.0, 10.0, 3.0], [-0.975000024, 11.0, 12.0, 3.0], [-0.825999975, 13.0, 14.0, 4.0], [-0.965499997, 15.0, 16.0, 4.0], [-0.963500023, 17.0, 18.0, 4.0], [-0.0580517836, 0.0, 0.0, 0.0], [0.773499966, 19.0, 20.0, 2.0], [-0.0715109333, 0.0, 0.0, 0.0], [0.0453407876, 0.0, 0.0, 0.0], [0.0906586051, 0.0, 0.0, 0.0], [0.00428243214, 0.0, 0.0, 0.0], [-0.180500001, 21.0, 22.0, 0.0], [0.0581787862, 0.0, 0.0, 0.0], [-0.00718966778, 0.0, 0.0, 0.0], [-0.167043045, 0.0, 0.0, 0.0], [-0.652500033, 23.0, 24.0, 1.0], [-0.0647567213, 0.0, 0.0, 0.0], [-0.062760286, 0.0, 0.0, 0.0], [0.0640029311, 0.0, 0.0, 0.0], [-0.0150084561, 0.0, 0.0, 0.0], [0.0764129981, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 17, 18, 9, 23, 24, 20, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 19, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_513(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0307, 1.0, 2.0, 0.0], [-0.0339000002, 3.0, 4.0, 0.0], [-0.0297999997, 5.0, 6.0, 0.0], [-0.0382499993, 7.0, 8.0, 0.0], [-0.316427529, 0.0, 0.0, 0.0], [0.313276678, 0.0, 0.0, 0.0], [-0.0276999995, 9.0, 10.0, 0.0], [-0.0394999981, 11.0, 12.0, 0.0], [0.214823514, 0.0, 0.0, 0.0], [-0.186522663, 0.0, 0.0, 0.0], [-0.0152500002, 13.0, 14.0, 0.0], [-0.0460999981, 15.0, 16.0, 0.0], [-0.274245113, 0.0, 0.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.00963000022, 19.0, 20.0, 0.0], [-0.00619109953, 0.0, 0.0, 0.0], [0.103952616, 0.0, 0.0, 0.0], [0.215360269, 0.0, 0.0, 0.0], [-0.0675215349, 0.0, 0.0, 0.0], [-0.143965259, 0.0, 0.0, 0.0], [0.00517239654, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_514(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0460999981, 1.0, 2.0, 0.0], [-0.0477499999, 3.0, 4.0, 0.0], [-0.0435499996, 5.0, 6.0, 0.0], [-0.0494500026, 7.0, 8.0, 0.0], [0.214661822, 0.0, 0.0, 0.0], [-0.194257051, 0.0, 0.0, 0.0], [-0.0382499993, 9.0, 10.0, 0.0], [-0.0527999997, 11.0, 12.0, 0.0], [-0.271927923, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.0297999997, 15.0, 16.0, 0.0], [-0.0571999997, 17.0, 18.0, 0.0], [0.213469982, 0.0, 0.0, 0.0], [-0.0392000005, 19.0, 20.0, 0.0], [0.318916559, 0.0, 0.0, 0.0], [-0.0307, 21.0, 22.0, 0.0], [-0.0244999994, 23.0, 24.0, 0.0], [0.00566699822, 0.0, 0.0, 0.0], [-0.146505803, 0.0, 0.0, 0.0], [-0.235369265, 0.0, 0.0, 0.0], [0.275839627, 0.0, 0.0, 0.0], [-0.00950164907, 0.0, 0.0, 0.0], [-0.303244174, 0.0, 0.0, 0.0], [0.122060247, 0.0, 0.0, 0.0], [-0.00705923187, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 14, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_515(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 4.0], [-0.923500001, 3.0, 4.0, 2.0], [-0.923500001, 5.0, 6.0, 2.0], [0.537500024, 7.0, 8.0, 0.0], [-0.885499954, 9.0, 10.0, 2.0], [-0.164499998, 11.0, 12.0, 0.0], [-0.851999998, 13.0, 14.0, 2.0], [0.5255, 15.0, 16.0, 0.0], [0.543500006, 17.0, 18.0, 0.0], [-0.165050387, 0.0, 0.0, 0.0], [0.0081372764, 0.0, 0.0, 0.0], [0.0483276583, 0.0, 0.0, 0.0], [0.263000011, 19.0, 20.0, 0.0], [0.0860148594, 0.0, 0.0, 0.0], [-0.997500002, 21.0, 22.0, 1.0], [-0.999500036, 23.0, 24.0, 1.0], [-0.999500036, 25.0, 26.0, 1.0], [0.172591224, 0.0, 0.0, 0.0], [0.588, 27.0, 28.0, 0.0], [-0.232878968, 0.0, 0.0, 0.0], [0.00515905535, 0.0, 0.0, 0.0], [0.454999983, 29.0, 30.0, 0.0], [-0.626000047, 31.0, 32.0, 2.0], [-0.00427661603, 0.0, 0.0, 0.0], [0.0536268465, 0.0, 0.0, 0.0], [-0.00340148318, 0.0, 0.0, 0.0], [-0.128505096, 0.0, 0.0, 0.0], [-0.0368528217, 0.0, 0.0, 0.0], [0.0684927478, 0.0, 0.0, 0.0], [-0.0817537233, 0.0, 0.0, 0.0], [0.0310934335, 0.0, 0.0, 0.0], [0.0913548544, 0.0, 0.0, 0.0], [-0.0171233956, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 27, 28, 9, 10, 11, 19, 20, 13, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 2, 5, 12, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_516(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.692000031, 3.0, 4.0, 4.0], [-0.902500033, 5.0, 6.0, 4.0], [-0.862499952, 7.0, 8.0, 4.0], [0.0584897362, 0.0, 0.0, 0.0], [0.0736333355, 0.0, 0.0, 0.0], [0.00445505511, 0.0, 0.0, 0.0], [-0.578999996, 9.0, 10.0, 1.0], [-0.513999999, 11.0, 12.0, 1.0], [-0.0580499992, 13.0, 14.0, 0.0], [-0.0711142346, 0.0, 0.0, 0.0], [-0.190499991, 15.0, 16.0, 0.0], [0.0489690527, 0.0, 0.0, 0.0], [0.0139397932, 0.0, 0.0, 0.0], [-0.0606711246, 0.0, 0.0, 0.0], [-0.114473134, 0.0, 0.0, 0.0], [0.000240043533, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_517(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.138500005, 1.0, 2.0, 0.0], [-0.192499995, 3.0, 4.0, 0.0], [0.0463999994, 5.0, 6.0, 0.0], [-0.207500011, 7.0, 8.0, 0.0], [-0.969500005, 9.0, 10.0, 4.0], [-0.0860539824, 0.0, 0.0, 0.0], [0.0312935263, 0.0, 0.0, 0.0], [-0.752499998, 11.0, 12.0, 1.0], [0.476500005, 13.0, 14.0, 2.0], [0.0845306665, 0.0, 0.0, 0.0], [0.00386359752, 0.0, 0.0, 0.0], [-0.784500003, 15.0, 16.0, 1.0], [-0.967499971, 17.0, 18.0, 4.0], [0.0157192834, 0.0, 0.0, 0.0], [-0.0851148441, 0.0, 0.0, 0.0], [0.0151816355, 0.0, 0.0, 0.0], [-0.0622281916, 0.0, 0.0, 0.0], [0.0884636939, 0.0, 0.0, 0.0], [0.00534303393, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_518(xs):
    #Predicts Class 2
    function_dict = np.array([[0.804499984, 1.0, 2.0, 2.0], [0.713500023, 3.0, 4.0, 2.0], [0.0447326712, 0.0, 0.0, 0.0], [0.60650003, 5.0, 6.0, 2.0], [-0.985499978, 7.0, 8.0, 3.0], [-0.982499957, 9.0, 10.0, 3.0], [-0.216499999, 11.0, 12.0, 0.0], [-0.074921377, 0.0, 0.0, 0.0], [0.00768607948, 0.0, 0.0, 0.0], [-0.992499948, 13.0, 14.0, 3.0], [-0.968500018, 15.0, 16.0, 3.0], [-0.485000014, 17.0, 18.0, 1.0], [-0.166500002, 19.0, 20.0, 0.0], [-0.0192481671, 0.0, 0.0, 0.0], [0.0529039912, 0.0, 0.0, 0.0], [-0.100990191, 0.0, 0.0, 0.0], [-0.00838251039, 0.0, 0.0, 0.0], [-0.0577326119, 0.0, 0.0, 0.0], [0.0213605203, 0.0, 0.0, 0.0], [0.108549185, 0.0, 0.0, 0.0], [-0.0369044766, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 17, 18, 19, 20, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_519(xs):
    #Predicts Class 3
    function_dict = np.array([[0.620499969, 1.0, 2.0, 0.0], [0.588, 3.0, 4.0, 0.0], [0.0627279207, 0.0, 0.0, 0.0], [0.564499974, 5.0, 6.0, 0.0], [-0.0830106884, 0.0, 0.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [0.0853176638, 0.0, 0.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [0.557999969, 11.0, 12.0, 0.0], [-0.00037336073, 0.0, 0.0, 0.0], [0.0710803792, 0.0, 0.0, 0.0], [-0.0283728633, 0.0, 0.0, 0.0], [-0.0875914469, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_520(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00185999996, 1.0, 2.0, 0.0], [0.00118499994, 3.0, 4.0, 0.0], [0.0042849998, 5.0, 6.0, 0.0], [-0.000944999978, 7.0, 8.0, 0.0], [-0.189204291, 0.0, 0.0, 0.0], [0.173055351, 0.0, 0.0, 0.0], [0.00768500008, 9.0, 10.0, 0.0], [-0.00200500013, 11.0, 12.0, 0.0], [-0.000224999996, 13.0, 14.0, 0.0], [0.00655000005, 15.0, 16.0, 0.0], [0.0203999989, 17.0, 18.0, 0.0], [-0.00322999991, 19.0, 20.0, 0.0], [-0.159018978, 0.0, 0.0, 0.0], [0.160747454, 0.0, 0.0, 0.0], [-0.0243011396, 0.0, 0.0, 0.0], [0.00540999975, 21.0, 22.0, 0.0], [-0.177902177, 0.0, 0.0, 0.0], [-0.951499999, 23.0, 24.0, 2.0], [0.0234000012, 25.0, 26.0, 0.0], [-0.00423930166, 0.0, 0.0, 0.0], [0.146873713, 0.0, 0.0, 0.0], [-0.12820144, 0.0, 0.0, 0.0], [0.0589620657, 0.0, 0.0, 0.0], [0.191008836, 0.0, 0.0, 0.0], [-0.103737146, 0.0, 0.0, 0.0], [-0.270246089, 0.0, 0.0, 0.0], [0.0118755475, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 21, 22, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 15, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_521(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.401000023, 1.0, 2.0, 0.0], [-0.420000017, 3.0, 4.0, 0.0], [-0.38349998, 5.0, 6.0, 0.0], [-0.46450001, 7.0, 8.0, 0.0], [0.110421747, 0.0, 0.0, 0.0], [-0.0996035859, 0.0, 0.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.0349838212, 0.0, 0.0, 0.0], [-0.0653899685, 0.0, 0.0, 0.0], [0.0956348181, 0.0, 0.0, 0.0], [-0.169499993, 11.0, 12.0, 0.0], [-0.103218608, 0.0, 0.0, 0.0], [-0.168500006, 13.0, 14.0, 0.0], [0.0725057125, 0.0, 0.0, 0.0], [-0.00255597779, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_522(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.921499968, 1.0, 2.0, 3.0], [-0.940500021, 3.0, 4.0, 3.0], [-0.201499999, 5.0, 6.0, 0.0], [-0.965499997, 7.0, 8.0, 3.0], [-0.0638092756, 0.0, 0.0, 0.0], [0.070410274, 0.0, 0.0, 0.0], [-0.0165166669, 0.0, 0.0, 0.0], [-0.727499962, 9.0, 10.0, 4.0], [-0.212500006, 11.0, 12.0, 0.0], [-0.847499967, 13.0, 14.0, 4.0], [0.0512814336, 0.0, 0.0, 0.0], [-0.0147743057, 0.0, 0.0, 0.0], [0.086411804, 0.0, 0.0, 0.0], [-0.00335092214, 0.0, 0.0, 0.0], [-0.0757384524, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_523(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [-0.192499995, 3.0, 4.0, 0.0], [-0.997500002, 5.0, 6.0, 3.0], [0.291500002, 7.0, 8.0, 2.0], [0.0646431446, 0.0, 0.0, 0.0], [-0.089401342, 0.0, 0.0, 0.0], [-0.96449995, 9.0, 10.0, 4.0], [0.0555975325, 0.0, 0.0, 0.0], [-0.818500042, 11.0, 12.0, 1.0], [0.0564439446, 0.0, 0.0, 0.0], [-0.0495293662, 0.0, 0.0, 0.0], [-0.0630326048, 0.0, 0.0, 0.0], [-0.915500045, 13.0, 14.0, 3.0], [0.0106859272, 0.0, 0.0, 0.0], [-0.0595626645, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 13, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 8, 12, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_524(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.526499987, 3.0, 4.0, 1.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.911499977, 7.0, 8.0, 3.0], [-0.984500051, 9.0, 10.0, 3.0], [-0.318499982, 11.0, 12.0, 0.0], [-0.985499978, 13.0, 14.0, 3.0], [-0.149500012, 15.0, 16.0, 0.0], [0.0488645397, 0.0, 0.0, 0.0], [-0.00474659679, 0.0, 0.0, 0.0], [-0.0768840164, 0.0, 0.0, 0.0], [0.0310103409, 0.0, 0.0, 0.0], [-0.0659424588, 0.0, 0.0, 0.0], [0.0932300314, 0.0, 0.0, 0.0], [0.00419668667, 0.0, 0.0, 0.0], [-0.593500018, 17.0, 18.0, 1.0], [-0.988499999, 19.0, 20.0, 3.0], [-0.0143857105, 0.0, 0.0, 0.0], [0.074882701, 0.0, 0.0, 0.0], [0.0121907908, 0.0, 0.0, 0.0], [-0.114733107, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_525(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.5625, 3.0, 4.0, 0.0], [0.621500015, 5.0, 6.0, 0.0], [-0.0293500014, 7.0, 8.0, 0.0], [-0.117912784, 0.0, 0.0, 0.0], [0.618499994, 9.0, 10.0, 0.0], [-0.0318249427, 0.0, 0.0, 0.0], [-0.0339000002, 11.0, 12.0, 0.0], [-0.0250499994, 13.0, 14.0, 0.0], [0.0784186795, 0.0, 0.0, 0.0], [0.0165842455, 0.0, 0.0, 0.0], [-0.0382499993, 15.0, 16.0, 0.0], [-0.187442511, 0.0, 0.0, 0.0], [0.229535177, 0.0, 0.0, 0.0], [-0.0206000004, 17.0, 18.0, 0.0], [-0.00368981692, 0.0, 0.0, 0.0], [0.179288834, 0.0, 0.0, 0.0], [-0.1387804, 0.0, 0.0, 0.0], [0.00359370932, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 13, 17, 18, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_526(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0293500014, 1.0, 2.0, 0.0], [-0.0310500003, 3.0, 4.0, 0.0], [-0.027350001, 5.0, 6.0, 0.0], [-0.0421000011, 7.0, 8.0, 0.0], [0.174333587, 0.0, 0.0, 0.0], [-0.263933599, 0.0, 0.0, 0.0], [-0.0244999994, 9.0, 10.0, 0.0], [-0.0466499999, 11.0, 12.0, 0.0], [-0.03895, 13.0, 14.0, 0.0], [0.116330698, 0.0, 0.0, 0.0], [-0.0101749999, 15.0, 16.0, 0.0], [-0.0494500026, 17.0, 18.0, 0.0], [-0.0455499999, 19.0, 20.0, 0.0], [-0.123839997, 0.0, 0.0, 0.0], [-0.0260025524, 0.0, 0.0, 0.0], [-0.0150499996, 21.0, 22.0, 0.0], [-0.00885999948, 23.0, 24.0, 0.0], [0.00322426716, 0.0, 0.0, 0.0], [-0.18422167, 0.0, 0.0, 0.0], [0.176653221, 0.0, 0.0, 0.0], [0.0324883312, 0.0, 0.0, 0.0], [-0.00668881368, 0.0, 0.0, 0.0], [-0.268419892, 0.0, 0.0, 0.0], [0.147003293, 0.0, 0.0, 0.0], [-0.00413109595, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_527(xs):
    #Predicts Class 5
    function_dict = np.array([[0.272000015, 1.0, 2.0, 0.0], [0.260500014, 3.0, 4.0, 0.0], [0.276499987, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.1333161, 0.0, 0.0, 0.0], [0.155696824, 0.0, 0.0, 0.0], [0.363499999, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [0.134353951, 0.0, 0.0, 0.0], [0.341000021, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.203500003, 17.0, 18.0, 0.0], [-0.149844751, 0.0, 0.0, 0.0], [-0.0866208971, 0.0, 0.0, 0.0], [-0.0211674962, 0.0, 0.0, 0.0], [0.394500017, 19.0, 20.0, 0.0], [0.531499982, 21.0, 22.0, 0.0], [-0.0119289942, 0.0, 0.0, 0.0], [0.0996219069, 0.0, 0.0, 0.0], [0.0704865754, 0.0, 0.0, 0.0], [-0.00572496047, 0.0, 0.0, 0.0], [0.00874572806, 0.0, 0.0, 0.0], [0.137371629, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_528(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0443627685, 0.0, 0.0, 0.0], [-0.824499965, 3.0, 4.0, 1.0], [-0.848500013, 5.0, 6.0, 1.0], [0.463499993, 7.0, 8.0, 2.0], [-0.0125256758, 0.0, 0.0, 0.0], [0.0854570419, 0.0, 0.0, 0.0], [-0.10125, 9.0, 10.0, 0.0], [-0.102499999, 11.0, 12.0, 0.0], [-0.932999969, 13.0, 14.0, 4.0], [0.0543779097, 0.0, 0.0, 0.0], [-0.538499951, 15.0, 16.0, 1.0], [-0.0525451452, 0.0, 0.0, 0.0], [-0.0911499262, 0.0, 0.0, 0.0], [0.0101925712, 0.0, 0.0, 0.0], [0.028857464, 0.0, 0.0, 0.0], [-0.0274059083, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 13, 14, 10, 15, 16, 12])
    branch_indices = np.array([0, 2, 3, 4, 7, 9, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_529(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.855499983, 1.0, 2.0, 4.0], [-0.332499981, 3.0, 4.0, 0.0], [-0.0461985767, 0.0, 0.0, 0.0], [-0.606999993, 5.0, 6.0, 1.0], [-0.2755, 7.0, 8.0, 0.0], [-0.0904048607, 0.0, 0.0, 0.0], [0.0134053165, 0.0, 0.0, 0.0], [0.516000032, 9.0, 10.0, 2.0], [-0.256500006, 11.0, 12.0, 0.0], [-0.0197663102, 0.0, 0.0, 0.0], [-0.315500021, 13.0, 14.0, 0.0], [-0.08363913, 0.0, 0.0, 0.0], [-0.941499949, 15.0, 16.0, 4.0], [0.135043323, 0.0, 0.0, 0.0], [0.0333318524, 0.0, 0.0, 0.0], [-0.0100826509, 0.0, 0.0, 0.0], [0.052060999, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 9, 13, 14, 11, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 10, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_530(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.712499976, 1.0, 2.0, 4.0], [0.483500004, 3.0, 4.0, 2.0], [0.0505666211, 0.0, 0.0, 0.0], [0.436500013, 5.0, 6.0, 2.0], [-0.965499997, 7.0, 8.0, 3.0], [-0.980499983, 9.0, 10.0, 4.0], [-0.184, 11.0, 12.0, 0.0], [-0.976500034, 13.0, 14.0, 3.0], [-0.872500002, 15.0, 16.0, 4.0], [0.0333516449, 0.0, 0.0, 0.0], [-0.74150002, 17.0, 18.0, 1.0], [0.081381917, 0.0, 0.0, 0.0], [0.00607635127, 0.0, 0.0, 0.0], [-0.862499952, 19.0, 20.0, 4.0], [0.0803086981, 0.0, 0.0, 0.0], [-0.913499951, 21.0, 22.0, 4.0], [-0.0957989022, 0.0, 0.0, 0.0], [-0.0692728385, 0.0, 0.0, 0.0], [-0.00312080933, 0.0, 0.0, 0.0], [-0.0306519661, 0.0, 0.0, 0.0], [0.039998848, 0.0, 0.0, 0.0], [-0.0652243495, 0.0, 0.0, 0.0], [0.0605382845, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 17, 18, 11, 12, 19, 20, 14, 21, 22, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 4, 7, 13, 8, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_531(xs):
    #Predicts Class 3
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0137499999, 3.0, 4.0, 0.0], [0.025150001, 5.0, 6.0, 0.0], [0.0104999999, 7.0, 8.0, 0.0], [0.232051358, 0.0, 0.0, 0.0], [0.0234000012, 9.0, 10.0, 0.0], [0.0260500014, 11.0, 12.0, 0.0], [0.00881000049, 13.0, 14.0, 0.0], [-0.168279111, 0.0, 0.0, 0.0], [-0.0491680317, 0.0, 0.0, 0.0], [-0.187928453, 0.0, 0.0, 0.0], [0.19153291, 0.0, 0.0, 0.0], [0.0373999998, 15.0, 16.0, 0.0], [0.00456999987, 17.0, 18.0, 0.0], [0.174220175, 0.0, 0.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [0.0447499976, 21.0, 22.0, 0.0], [0.00647684559, 0.0, 0.0, 0.0], [-0.138130948, 0.0, 0.0, 0.0], [-0.019870678, 0.0, 0.0, 0.0], [-0.213671356, 0.0, 0.0, 0.0], [0.167408615, 0.0, 0.0, 0.0], [-0.00339766545, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_532(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0131000001, 3.0, 4.0, 0.0], [0.025150001, 5.0, 6.0, 0.0], [0.0104999999, 7.0, 8.0, 0.0], [-0.230993256, 0.0, 0.0, 0.0], [0.0234000012, 9.0, 10.0, 0.0], [0.0260500014, 11.0, 12.0, 0.0], [0.00881000049, 13.0, 14.0, 0.0], [0.17524536, 0.0, 0.0, 0.0], [0.0520320199, 0.0, 0.0, 0.0], [0.188519195, 0.0, 0.0, 0.0], [-0.191109776, 0.0, 0.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.00758500025, 17.0, 18.0, 0.0], [-0.173863977, 0.0, 0.0, 0.0], [0.0824999958, 19.0, 20.0, 0.0], [0.0778999999, 21.0, 22.0, 0.0], [-0.00481767766, 0.0, 0.0, 0.0], [0.177294984, 0.0, 0.0, 0.0], [-0.0633532405, 0.0, 0.0, 0.0], [0.0151480651, 0.0, 0.0, 0.0], [0.184862763, 0.0, 0.0, 0.0], [-0.0830090269, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_533(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.393000007, 1.0, 2.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [-0.161500007, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [0.116855711, 0.0, 0.0, 0.0], [-0.822000027, 9.0, 10.0, 2.0], [-0.149500012, 11.0, 12.0, 0.0], [-0.453500003, 13.0, 14.0, 0.0], [-0.0709043145, 0.0, 0.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.0271526426, 0.0, 0.0, 0.0], [-0.1505, 17.0, 18.0, 0.0], [-0.0748500004, 19.0, 20.0, 0.0], [-0.00532648899, 0.0, 0.0, 0.0], [0.0634598956, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.124974087, 0.0, 0.0, 0.0], [-0.154500008, 23.0, 24.0, 0.0], [0.157068521, 0.0, 0.0, 0.0], [-0.972000003, 25.0, 26.0, 2.0], [-0.0318999998, 27.0, 28.0, 0.0], [-0.0525462925, 0.0, 0.0, 0.0], [0.0683870018, 0.0, 0.0, 0.0], [0.0862609148, 0.0, 0.0, 0.0], [-0.0521432087, 0.0, 0.0, 0.0], [-0.227304474, 0.0, 0.0, 0.0], [0.0411887057, 0.0, 0.0, 0.0], [0.0761257783, 0.0, 0.0, 0.0], [3.4876517e-05, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 21, 22, 16, 10, 23, 24, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 9, 15, 6, 11, 17, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_534(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.266499996, 3.0, 4.0, 0.0], [0.63349998, 5.0, 6.0, 2.0], [-0.825500011, 7.0, 8.0, 1.0], [-0.961500049, 9.0, 10.0, 4.0], [-0.263500005, 11.0, 12.0, 0.0], [-0.259499997, 13.0, 14.0, 0.0], [-0.00894256867, 0.0, 0.0, 0.0], [-0.0495818481, 0.0, 0.0, 0.0], [-0.965499997, 15.0, 16.0, 4.0], [0.391499996, 17.0, 18.0, 2.0], [-0.2755, 19.0, 20.0, 0.0], [-0.221500009, 21.0, 22.0, 0.0], [-0.0307916123, 0.0, 0.0, 0.0], [-0.221500009, 23.0, 24.0, 0.0], [-0.180500001, 25.0, 26.0, 0.0], [-0.0940908194, 0.0, 0.0, 0.0], [0.00133864873, 0.0, 0.0, 0.0], [0.114426866, 0.0, 0.0, 0.0], [-0.0306626149, 0.0, 0.0, 0.0], [0.0858597532, 0.0, 0.0, 0.0], [-0.747500002, 27.0, 28.0, 1.0], [-0.199499995, 29.0, 30.0, 0.0], [0.0930218399, 0.0, 0.0, 0.0], [-0.984500051, 31.0, 32.0, 3.0], [0.0909837335, 0.0, 0.0, 0.0], [-0.0203125589, 0.0, 0.0, 0.0], [-0.0267523974, 0.0, 0.0, 0.0], [-0.135261953, 0.0, 0.0, 0.0], [0.0466326214, 0.0, 0.0, 0.0], [-0.0366226137, 0.0, 0.0, 0.0], [0.0328503475, 0.0, 0.0, 0.0], [-0.0433573201, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 25, 26, 16, 17, 18, 19, 20, 27, 28, 29, 30, 13, 23, 31, 32])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 10, 2, 5, 11, 12, 21, 22, 6, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_535(xs):
    #Predicts Class 1
    function_dict = np.array([[0.367500007, 1.0, 2.0, 2.0], [-0.236499995, 3.0, 4.0, 0.0], [0.407499999, 5.0, 6.0, 2.0], [-0.0689163953, 0.0, 0.0, 0.0], [-0.169499993, 7.0, 8.0, 0.0], [0.0526562221, 0.0, 0.0, 0.0], [0.444499999, 9.0, 10.0, 2.0], [0.052250836, 0.0, 0.0, 0.0], [-0.0602007248, 0.0, 0.0, 0.0], [-0.952499986, 11.0, 12.0, 4.0], [-0.94749999, 13.0, 14.0, 4.0], [-0.0817639977, 0.0, 0.0, 0.0], [0.036073029, 0.0, 0.0, 0.0], [-0.99849999, 15.0, 16.0, 3.0], [-0.315500021, 17.0, 18.0, 0.0], [-0.0530835651, 0.0, 0.0, 0.0], [0.0439345203, 0.0, 0.0, 0.0], [0.0341923125, 0.0, 0.0, 0.0], [-0.033999756, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 11, 12, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_536(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 1.0], [-0.180500001, 3.0, 4.0, 0.0], [-0.756500006, 5.0, 6.0, 1.0], [-0.063477695, 0.0, 0.0, 0.0], [0.0124840057, 0.0, 0.0, 0.0], [0.0798202381, 0.0, 0.0, 0.0], [-0.968500018, 7.0, 8.0, 4.0], [-0.2095, 9.0, 10.0, 0.0], [-0.203500003, 11.0, 12.0, 0.0], [0.00318373879, 0.0, 0.0, 0.0], [-0.0634225979, 0.0, 0.0, 0.0], [-0.217500001, 13.0, 14.0, 0.0], [-0.12650001, 15.0, 16.0, 0.0], [0.0083548883, 0.0, 0.0, 0.0], [-0.0949725509, 0.0, 0.0, 0.0], [0.0536904782, 0.0, 0.0, 0.0], [-0.0167670026, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 10, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 2, 6, 7, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_537(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0307, 1.0, 2.0, 0.0], [-0.0424499996, 3.0, 4.0, 0.0], [-0.0297999997, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [-0.999500036, 9.0, 10.0, 4.0], [0.277106285, 0.0, 0.0, 0.0], [-0.0238499995, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [-0.260500014, 15.0, 16.0, 0.0], [-0.0385500006, 17.0, 18.0, 0.0], [-0.305977046, 0.0, 0.0, 0.0], [-0.923500001, 19.0, 20.0, 2.0], [-0.0156999994, 21.0, 22.0, 0.0], [-0.057099998, 23.0, 24.0, 0.0], [-0.795000017, 25.0, 26.0, 2.0], [-0.0717270225, 0.0, 0.0, 0.0], [-0.607499957, 27.0, 28.0, 2.0], [0.162022576, 0.0, 0.0, 0.0], [-0.103912681, 0.0, 0.0, 0.0], [-0.146659136, 0.0, 0.0, 0.0], [0.024394365, 0.0, 0.0, 0.0], [0.235341296, 0.0, 0.0, 0.0], [-0.00963000022, 29.0, 30.0, 0.0], [-0.010124905, 0.0, 0.0, 0.0], [0.0650192127, 0.0, 0.0, 0.0], [-0.163559631, 0.0, 0.0, 0.0], [0.0620779954, 0.0, 0.0, 0.0], [0.151403666, 0.0, 0.0, 0.0], [-0.0718654692, 0.0, 0.0, 0.0], [-0.110095903, 0.0, 0.0, 0.0], [0.00488401111, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 15, 27, 28, 17, 18, 10, 5, 19, 20, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 9, 2, 6, 11, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_538(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0382499993, 1.0, 2.0, 0.0], [-0.0423500016, 3.0, 4.0, 0.0], [-0.0297999997, 5.0, 6.0, 0.0], [-0.0460999981, 7.0, 8.0, 0.0], [0.151468858, 0.0, 0.0, 0.0], [-0.0307, 9.0, 10.0, 0.0], [-0.0244999994, 11.0, 12.0, 0.0], [-0.0496499985, 13.0, 14.0, 0.0], [-0.0435499996, 15.0, 16.0, 0.0], [-0.0341182798, 0.0, 0.0, 0.0], [-0.267367214, 0.0, 0.0, 0.0], [-0.923500001, 17.0, 18.0, 2.0], [-0.0156999994, 19.0, 20.0, 0.0], [-0.0571999997, 21.0, 22.0, 0.0], [0.170416608, 0.0, 0.0, 0.0], [-0.151581869, 0.0, 0.0, 0.0], [0.031686727, 0.0, 0.0, 0.0], [0.159172192, 0.0, 0.0, 0.0], [-0.0155716697, 0.0, 0.0, 0.0], [-0.220840678, 0.0, 0.0, 0.0], [-0.0150499996, 23.0, 24.0, 0.0], [0.00391734717, 0.0, 0.0, 0.0], [-0.159138039, 0.0, 0.0, 0.0], [0.174180716, 0.0, 0.0, 0.0], [-0.00719580986, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 4, 9, 10, 17, 18, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_539(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.032850001, 5.0, 6.0, 0.0], [-0.398999989, 7.0, 8.0, 0.0], [-0.257499993, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.0123999994, 13.0, 14.0, 0.0], [-0.411000013, 15.0, 16.0, 0.0], [-0.169499993, 17.0, 18.0, 0.0], [-0.360500008, 19.0, 20.0, 0.0], [-0.175874144, 0.0, 0.0, 0.0], [-0.149500012, 21.0, 22.0, 0.0], [-0.0746500045, 23.0, 24.0, 0.0], [-0.0137499999, 25.0, 26.0, 0.0], [0.198500007, 27.0, 28.0, 0.0], [-0.438499987, 29.0, 30.0, 0.0], [-0.0991405994, 0.0, 0.0, 0.0], [0.0292834267, 0.0, 0.0, 0.0], [-0.168500006, 31.0, 32.0, 0.0], [-0.0251165386, 0.0, 0.0, 0.0], [0.0952628329, 0.0, 0.0, 0.0], [-0.1505, 33.0, 34.0, 0.0], [-0.252471536, 0.0, 0.0, 0.0], [0.0854103863, 0.0, 0.0, 0.0], [-0.0559212789, 0.0, 0.0, 0.0], [0.0085747242, 0.0, 0.0, 0.0], [0.160701945, 0.0, 0.0, 0.0], [-0.140321508, 0.0, 0.0, 0.0], [-0.999500036, 35.0, 36.0, 1.0], [-0.00406098878, 0.0, 0.0, 0.0], [0.0387519486, 0.0, 0.0, 0.0], [0.155032083, 0.0, 0.0, 0.0], [0.06612093, 0.0, 0.0, 0.0], [-0.0543781631, 0.0, 0.0, 0.0], [0.111005023, 0.0, 0.0, 0.0], [-0.00535887154, 0.0, 0.0, 0.0], [0.0448758267, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 17, 31, 32, 19, 20, 10, 33, 34, 22, 23, 24, 25, 26, 27, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 18, 4, 9, 2, 5, 11, 21, 12, 6, 13, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_540(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.990499973, 1.0, 2.0, 3.0], [-0.992499948, 3.0, 4.0, 3.0], [-0.229499996, 5.0, 6.0, 0.0], [-0.930500031, 7.0, 8.0, 4.0], [-0.0683616102, 0.0, 0.0, 0.0], [-0.2465, 9.0, 10.0, 0.0], [-0.738999963, 11.0, 12.0, 1.0], [-0.213499993, 13.0, 14.0, 0.0], [-0.206499994, 15.0, 16.0, 0.0], [-0.957499981, 17.0, 18.0, 3.0], [-0.0786874965, 0.0, 0.0, 0.0], [-0.977499962, 19.0, 20.0, 3.0], [-0.706499994, 21.0, 22.0, 1.0], [0.4375, 23.0, 24.0, 2.0], [-0.976500034, 25.0, 26.0, 4.0], [-0.680999994, 27.0, 28.0, 1.0], [-0.186500013, 29.0, 30.0, 0.0], [-0.291000009, 31.0, 32.0, 0.0], [-0.0414800644, 0.0, 0.0, 0.0], [0.0207344964, 0.0, 0.0, 0.0], [0.0898985639, 0.0, 0.0, 0.0], [-0.0739967376, 0.0, 0.0, 0.0], [-0.199499995, 33.0, 34.0, 0.0], [-0.116538912, 0.0, 0.0, 0.0], [-0.021032162, 0.0, 0.0, 0.0], [-0.0684963837, 0.0, 0.0, 0.0], [0.0515696406, 0.0, 0.0, 0.0], [0.136288747, 0.0, 0.0, 0.0], [-0.0161345843, 0.0, 0.0, 0.0], [-0.0826756358, 0.0, 0.0, 0.0], [0.0311799943, 0.0, 0.0, 0.0], [-0.0221031792, 0.0, 0.0, 0.0], [0.128830627, 0.0, 0.0, 0.0], [0.0913585052, 0.0, 0.0, 0.0], [0.00512418663, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 29, 30, 4, 31, 32, 18, 10, 19, 20, 21, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 9, 17, 6, 11, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_541(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.5995, 1.0, 2.0, 1.0], [-0.630499959, 3.0, 4.0, 1.0], [-0.294499993, 5.0, 6.0, 0.0], [-0.960500002, 7.0, 8.0, 3.0], [0.0816080794, 0.0, 0.0, 0.0], [-0.42750001, 9.0, 10.0, 1.0], [-0.960500002, 11.0, 12.0, 4.0], [-0.98150003, 13.0, 14.0, 4.0], [-0.921000004, 15.0, 16.0, 4.0], [0.0546996966, 0.0, 0.0, 0.0], [-0.030744439, 0.0, 0.0, 0.0], [0.0177474916, 0.0, 0.0, 0.0], [-0.0943126008, 0.0, 0.0, 0.0], [-0.0534576364, 0.0, 0.0, 0.0], [-0.970499992, 17.0, 18.0, 4.0], [-0.73300004, 19.0, 20.0, 1.0], [0.0442336872, 0.0, 0.0, 0.0], [0.0633664206, 0.0, 0.0, 0.0], [-0.00199257536, 0.0, 0.0, 0.0], [-0.133092105, 0.0, 0.0, 0.0], [-0.00249273516, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 17, 18, 19, 20, 16, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 15, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_542(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.972499967, 3.0, 4.0, 4.0], [-0.919499993, 5.0, 6.0, 4.0], [-0.770500004, 7.0, 8.0, 1.0], [-0.956499994, 9.0, 10.0, 4.0], [-0.960500002, 11.0, 12.0, 4.0], [-0.784500003, 13.0, 14.0, 4.0], [-0.0242733527, 0.0, 0.0, 0.0], [0.0589599125, 0.0, 0.0, 0.0], [-0.652499974, 15.0, 16.0, 1.0], [-0.988499999, 17.0, 18.0, 3.0], [0.00623972528, 0.0, 0.0, 0.0], [0.0800824761, 0.0, 0.0, 0.0], [-0.872500002, 19.0, 20.0, 4.0], [0.0481259748, 0.0, 0.0, 0.0], [0.471499979, 21.0, 22.0, 2.0], [-0.115973622, 0.0, 0.0, 0.0], [-0.700500011, 23.0, 24.0, 1.0], [-0.976500034, 25.0, 26.0, 3.0], [-0.00632684818, 0.0, 0.0, 0.0], [-0.0668348521, 0.0, 0.0, 0.0], [-0.0471615829, 0.0, 0.0, 0.0], [0.0250354838, 0.0, 0.0, 0.0], [-0.0402800813, 0.0, 0.0, 0.0], [0.0503163002, 0.0, 0.0, 0.0], [-0.0756701156, 0.0, 0.0, 0.0], [0.0055027958, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 21, 22, 16, 23, 24, 25, 26, 11, 12, 19, 20, 14])
    branch_indices = np.array([0, 1, 3, 4, 9, 15, 10, 17, 18, 2, 5, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_543(xs):
    #Predicts Class 3
    function_dict = np.array([[0.0240500011, 1.0, 2.0, 0.0], [0.0203999989, 3.0, 4.0, 0.0], [0.02685, 5.0, 6.0, 0.0], [0.0110500008, 7.0, 8.0, 0.0], [0.0234000012, 9.0, 10.0, 0.0], [0.0256000012, 11.0, 12.0, 0.0], [0.0353999995, 13.0, 14.0, 0.0], [0.00994499959, 15.0, 16.0, 0.0], [-0.21229966, 0.0, 0.0, 0.0], [0.249560937, 0.0, 0.0, 0.0], [0.0674432442, 0.0, 0.0, 0.0], [-0.0221638847, 0.0, 0.0, 0.0], [-0.255914122, 0.0, 0.0, 0.0], [0.133151248, 0.0, 0.0, 0.0], [0.0422499999, 17.0, 18.0, 0.0], [0.00768500008, 19.0, 20.0, 0.0], [0.158785075, 0.0, 0.0, 0.0], [-0.141154408, 0.0, 0.0, 0.0], [0.0477499999, 21.0, 22.0, 0.0], [0.00566418562, 0.0, 0.0, 0.0], [-0.135348588, 0.0, 0.0, 0.0], [0.100780793, 0.0, 0.0, 0.0], [-0.00314771966, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 16, 8, 9, 10, 11, 12, 13, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 6, 14, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_544(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.192499995, 3.0, 4.0, 0.0], [0.0602932535, 0.0, 0.0, 0.0], [0.152999997, 5.0, 6.0, 0.0], [0.195499986, 7.0, 8.0, 0.0], [0.111500002, 9.0, 10.0, 0.0], [0.139604792, 0.0, 0.0, 0.0], [-0.1009541, 0.0, 0.0, 0.0], [0.00425921194, 0.0, 0.0, 0.0], [0.0941499993, 11.0, 12.0, 0.0], [-0.15473564, 0.0, 0.0, 0.0], [-0.00202375441, 0.0, 0.0, 0.0], [0.0933934599, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_545(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [0.253499985, 7.0, 8.0, 0.0], [-0.119119838, 0.0, 0.0, 0.0], [0.134526893, 0.0, 0.0, 0.0], [0.392499983, 9.0, 10.0, 0.0], [0.212500006, 11.0, 12.0, 0.0], [0.120798692, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [0.394500017, 15.0, 16.0, 0.0], [0.201499999, 17.0, 18.0, 0.0], [-0.111182682, 0.0, 0.0, 0.0], [0.276499987, 19.0, 20.0, 0.0], [0.0682999492, 0.0, 0.0, 0.0], [0.116055533, 0.0, 0.0, 0.0], [0.404500008, 21.0, 22.0, 0.0], [-0.00915636588, 0.0, 0.0, 0.0], [0.0670733899, 0.0, 0.0, 0.0], [-0.0284979008, 0.0, 0.0, 0.0], [-0.230680943, 0.0, 0.0, 0.0], [-0.0813750029, 0.0, 0.0, 0.0], [0.00811171066, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 14, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_546(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.931499958, 3.0, 4.0, 3.0], [-0.902500033, 5.0, 6.0, 4.0], [0.407499999, 7.0, 8.0, 2.0], [-0.0491860658, 0.0, 0.0, 0.0], [0.0674800277, 0.0, 0.0, 0.0], [0.00251981826, 0.0, 0.0, 0.0], [-0.845499992, 9.0, 10.0, 1.0], [-0.996500015, 11.0, 12.0, 3.0], [0.0282776766, 0.0, 0.0, 0.0], [-0.953500032, 13.0, 14.0, 4.0], [-0.965499997, 15.0, 16.0, 4.0], [-0.961500049, 17.0, 18.0, 4.0], [-0.0178712774, 0.0, 0.0, 0.0], [-0.0733771175, 0.0, 0.0, 0.0], [0.0559173189, 0.0, 0.0, 0.0], [-0.0464897826, 0.0, 0.0, 0.0], [-0.0301735085, 0.0, 0.0, 0.0], [0.037390776, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 10, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_547(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.953500032, 1.0, 2.0, 4.0], [-0.95449996, 3.0, 4.0, 3.0], [-0.946500003, 5.0, 6.0, 4.0], [-0.956499994, 7.0, 8.0, 4.0], [0.0573790893, 0.0, 0.0, 0.0], [-0.985499978, 9.0, 10.0, 3.0], [-0.941499949, 11.0, 12.0, 4.0], [-0.497500002, 13.0, 14.0, 1.0], [-0.105961375, 0.0, 0.0, 0.0], [0.00335529982, 0.0, 0.0, 0.0], [0.107028857, 0.0, 0.0, 0.0], [-0.0571179092, 0.0, 0.0, 0.0], [-0.256500006, 15.0, 16.0, 0.0], [-0.963500023, 17.0, 18.0, 4.0], [-0.0688946098, 0.0, 0.0, 0.0], [-0.847499967, 19.0, 20.0, 4.0], [-0.772500038, 21.0, 22.0, 1.0], [-0.0147910388, 0.0, 0.0, 0.0], [0.0685703307, 0.0, 0.0, 0.0], [-0.0464277118, 0.0, 0.0, 0.0], [0.0358468033, 0.0, 0.0, 0.0], [-0.031150274, 0.0, 0.0, 0.0], [0.0535388626, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_548(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [0.331499994, 3.0, 4.0, 2.0], [-0.901499987, 5.0, 6.0, 4.0], [-0.0470531695, 0.0, 0.0, 0.0], [-0.958500028, 7.0, 8.0, 4.0], [-0.0768415332, 0.0, 0.0, 0.0], [0.0177026298, 0.0, 0.0, 0.0], [-0.977499962, 9.0, 10.0, 4.0], [0.711500049, 11.0, 12.0, 2.0], [-0.0396427438, 0.0, 0.0, 0.0], [-0.221500009, 13.0, 14.0, 0.0], [0.673500001, 15.0, 16.0, 2.0], [-0.240500003, 17.0, 18.0, 0.0], [0.0815368444, 0.0, 0.0, 0.0], [0.0149509851, 0.0, 0.0, 0.0], [-0.00521841645, 0.0, 0.0, 0.0], [-0.0908486396, 0.0, 0.0, 0.0], [-0.0240152329, 0.0, 0.0, 0.0], [0.0703965276, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 9, 13, 14, 15, 16, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 4, 7, 10, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_549(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0293500014, 1.0, 2.0, 0.0], [-0.0339000002, 3.0, 4.0, 0.0], [-0.0250499994, 5.0, 6.0, 0.0], [-0.0382499993, 7.0, 8.0, 0.0], [-0.136289746, 0.0, 0.0, 0.0], [0.186178505, 0.0, 0.0, 0.0], [-0.0154499998, 9.0, 10.0, 0.0], [-0.0469499975, 11.0, 12.0, 0.0], [0.152086392, 0.0, 0.0, 0.0], [-0.110233039, 0.0, 0.0, 0.0], [-0.0128499996, 13.0, 14.0, 0.0], [-0.0491999984, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [0.180964664, 0.0, 0.0, 0.0], [-0.00963000022, 19.0, 20.0, 0.0], [-0.0059244507, 0.0, 0.0, 0.0], [0.179738596, 0.0, 0.0, 0.0], [-0.0227156077, 0.0, 0.0, 0.0], [-0.225899518, 0.0, 0.0, 0.0], [-0.0990178958, 0.0, 0.0, 0.0], [0.00412963331, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_550(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.372500002, 1.0, 2.0, 0.0], [-0.395500004, 3.0, 4.0, 0.0], [-0.297500014, 5.0, 6.0, 0.0], [-0.412999988, 7.0, 8.0, 0.0], [-0.1115591, 0.0, 0.0, 0.0], [0.100623876, 0.0, 0.0, 0.0], [-0.292500019, 9.0, 10.0, 0.0], [-0.99849999, 11.0, 12.0, 1.0], [0.0791376308, 0.0, 0.0, 0.0], [-0.0694741905, 0.0, 0.0, 0.0], [-0.162499994, 13.0, 14.0, 0.0], [-0.121192791, 0.0, 0.0, 0.0], [0.0786094069, 0.0, 0.0, 0.0], [-0.185499996, 15.0, 16.0, 0.0], [-0.159500003, 17.0, 18.0, 0.0], [-0.00160784263, 0.0, 0.0, 0.0], [0.0847369581, 0.0, 0.0, 0.0], [-0.215335876, 0.0, 0.0, 0.0], [0.000565287308, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 9, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_551(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.393000007, 1.0, 2.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [-0.161500007, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [0.102726437, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 1.0], [-0.0802500024, 11.0, 12.0, 0.0], [-0.457500011, 13.0, 14.0, 0.0], [0.0564769097, 0.0, 0.0, 0.0], [-0.168500006, 15.0, 16.0, 0.0], [0.0227673259, 0.0, 0.0, 0.0], [-0.158500001, 17.0, 18.0, 0.0], [-0.032850001, 19.0, 20.0, 0.0], [-0.0810439512, 0.0, 0.0, 0.0], [0.00653063413, 0.0, 0.0, 0.0], [-0.169499993, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [0.0935867503, 0.0, 0.0, 0.0], [-0.1505, 25.0, 26.0, 0.0], [-0.923500001, 27.0, 28.0, 2.0], [-0.0123999994, 29.0, 30.0, 0.0], [-0.0822819322, 0.0, 0.0, 0.0], [0.0500961728, 0.0, 0.0, 0.0], [-0.114729643, 0.0, 0.0, 0.0], [0.0301692765, 0.0, 0.0, 0.0], [0.000806448865, 0.0, 0.0, 0.0], [0.0747746751, 0.0, 0.0, 0.0], [-0.165137842, 0.0, 0.0, 0.0], [0.0290641692, 0.0, 0.0, 0.0], [0.0706280097, 0.0, 0.0, 0.0], [-0.00356147275, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 21, 22, 23, 24, 10, 17, 25, 26, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 9, 15, 16, 6, 11, 18, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_552(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0422277525, 0.0, 0.0, 0.0], [0.398499995, 3.0, 4.0, 2.0], [0.354499996, 5.0, 6.0, 2.0], [0.484499991, 7.0, 8.0, 2.0], [0.00328833726, 0.0, 0.0, 0.0], [0.076087229, 0.0, 0.0, 0.0], [-0.235500008, 9.0, 10.0, 0.0], [-0.253499985, 11.0, 12.0, 0.0], [0.040642295, 0.0, 0.0, 0.0], [0.449499995, 13.0, 14.0, 2.0], [-0.703500032, 15.0, 16.0, 1.0], [0.559499979, 17.0, 18.0, 2.0], [-0.0044771987, 0.0, 0.0, 0.0], [-0.0901011452, 0.0, 0.0, 0.0], [-0.0552997291, 0.0, 0.0, 0.0], [0.0168549847, 0.0, 0.0, 0.0], [0.0605294816, 0.0, 0.0, 0.0], [-0.000239671412, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 9, 13, 14, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 3, 4, 7, 10, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_553(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.253499985, 1.0, 2.0, 0.0], [-0.938500047, 3.0, 4.0, 4.0], [-0.9745, 5.0, 6.0, 3.0], [-0.966500044, 7.0, 8.0, 4.0], [-0.703000009, 9.0, 10.0, 1.0], [-0.975499988, 11.0, 12.0, 4.0], [-0.212500006, 13.0, 14.0, 0.0], [-0.030125102, 0.0, 0.0, 0.0], [-0.793500006, 15.0, 16.0, 1.0], [-0.735499978, 17.0, 18.0, 1.0], [-0.606999993, 19.0, 20.0, 1.0], [-0.983500004, 21.0, 22.0, 4.0], [-0.989500046, 23.0, 24.0, 3.0], [-0.236499995, 25.0, 26.0, 0.0], [-0.104872368, 0.0, 0.0, 0.0], [-0.00858959276, 0.0, 0.0, 0.0], [-0.524999976, 27.0, 28.0, 1.0], [-0.0216783434, 0.0, 0.0, 0.0], [0.073809661, 0.0, 0.0, 0.0], [-0.112833671, 0.0, 0.0, 0.0], [0.0128371483, 0.0, 0.0, 0.0], [0.0054117064, 0.0, 0.0, 0.0], [-0.0732845366, 0.0, 0.0, 0.0], [-0.2315, 29.0, 30.0, 0.0], [0.50999999, 31.0, 32.0, 2.0], [-0.0436464027, 0.0, 0.0, 0.0], [0.0754957497, 0.0, 0.0, 0.0], [0.136671871, 0.0, 0.0, 0.0], [0.017125275, 0.0, 0.0, 0.0], [-0.0834121108, 0.0, 0.0, 0.0], [0.0211643074, 0.0, 0.0, 0.0], [0.102269091, 0.0, 0.0, 0.0], [0.0211633965, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 27, 28, 17, 18, 19, 20, 21, 22, 29, 30, 31, 32, 25, 26, 14])
    branch_indices = np.array([0, 1, 3, 8, 16, 4, 9, 10, 2, 5, 11, 12, 23, 24, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_554(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.266499996, 1.0, 2.0, 0.0], [-0.884500027, 3.0, 4.0, 4.0], [-0.440500021, 5.0, 6.0, 1.0], [0.612500012, 7.0, 8.0, 2.0], [0.0216519125, 0.0, 0.0, 0.0], [-0.490500003, 9.0, 10.0, 1.0], [0.0731327683, 0.0, 0.0, 0.0], [-0.0028660614, 0.0, 0.0, 0.0], [-0.0945791453, 0.0, 0.0, 0.0], [-0.956499994, 11.0, 12.0, 4.0], [-0.0642728731, 0.0, 0.0, 0.0], [0.48299998, 13.0, 14.0, 2.0], [-0.99849999, 15.0, 16.0, 3.0], [0.0167433303, 0.0, 0.0, 0.0], [-0.0628434494, 0.0, 0.0, 0.0], [-0.0492328592, 0.0, 0.0, 0.0], [0.0363975391, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 14, 15, 16, 10, 6])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_555(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.99849999, 3.0, 4.0, 1.0], [0.0689999983, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.996500015, 9.0, 10.0, 1.0], [0.0360366926, 0.0, 0.0, 0.0], [-0.122089885, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [0.0255500004, 13.0, 14.0, 0.0], [0.400000006, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.142500013, 19.0, 20.0, 0.0], [-0.143999994, 21.0, 22.0, 0.0], [-0.00517999986, 23.0, 24.0, 0.0], [0.0784000009, 25.0, 26.0, 0.0], [0.0735500008, 27.0, 28.0, 0.0], [0.0474587046, 0.0, 0.0, 0.0], [0.0690733194, 0.0, 0.0, 0.0], [-0.0174457487, 0.0, 0.0, 0.0], [-0.0339359641, 0.0, 0.0, 0.0], [0.00488239806, 0.0, 0.0, 0.0], [0.0930264741, 0.0, 0.0, 0.0], [-0.093130216, 0.0, 0.0, 0.0], [0.0137140341, 0.0, 0.0, 0.0], [0.214292765, 0.0, 0.0, 0.0], [-0.174477249, 0.0, 0.0, 0.0], [0.0458003096, 0.0, 0.0, 0.0], [-0.021064911, 0.0, 0.0, 0.0], [-0.206636563, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 16, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 4, 9, 15, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_556(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.747500002, 3.0, 4.0, 2.0], [-0.0722566918, 0.0, 0.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [-0.112000003, 7.0, 8.0, 0.0], [-0.132499993, 9.0, 10.0, 0.0], [-0.132499993, 11.0, 12.0, 0.0], [-0.654500008, 13.0, 14.0, 2.0], [-0.0565499999, 15.0, 16.0, 0.0], [-0.186500013, 17.0, 18.0, 0.0], [-0.127499998, 19.0, 20.0, 0.0], [-0.187999994, 21.0, 22.0, 0.0], [-0.0742999986, 23.0, 24.0, 0.0], [0.115950204, 0.0, 0.0, 0.0], [-0.588500023, 25.0, 26.0, 2.0], [-0.0942049772, 0.0, 0.0, 0.0], [0.00526000001, 27.0, 28.0, 0.0], [0.0232654773, 0.0, 0.0, 0.0], [-0.0545148142, 0.0, 0.0, 0.0], [0.330320567, 0.0, 0.0, 0.0], [0.00443231175, 0.0, 0.0, 0.0], [-0.0743492171, 0.0, 0.0, 0.0], [0.328023463, 0.0, 0.0, 0.0], [-0.241852537, 0.0, 0.0, 0.0], [0.00325480173, 0.0, 0.0, 0.0], [-0.029440634, 0.0, 0.0, 0.0], [0.0387764908, 0.0, 0.0, 0.0], [0.105554752, 0.0, 0.0, 0.0], [-0.0219715983, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 13, 25, 26, 15, 27, 28, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_557(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.155499995, 5.0, 6.0, 0.0], [-0.169499993, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [-0.219751999, 0.0, 0.0, 0.0], [-0.154500008, 11.0, 12.0, 0.0], [-0.393000007, 13.0, 14.0, 0.0], [-0.1655, 15.0, 16.0, 0.0], [-0.182804763, 0.0, 0.0, 0.0], [-0.996500015, 17.0, 18.0, 1.0], [0.103109576, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 4.0], [-0.421000004, 21.0, 22.0, 0.0], [-0.0851247311, 0.0, 0.0, 0.0], [-0.168500006, 23.0, 24.0, 0.0], [0.14150247, 0.0, 0.0, 0.0], [0.0808582604, 0.0, 0.0, 0.0], [-0.04344742, 0.0, 0.0, 0.0], [-0.923500001, 25.0, 26.0, 2.0], [0.081675306, 0.0, 0.0, 0.0], [-0.0482206084, 0.0, 0.0, 0.0], [0.0844092891, 0.0, 0.0, 0.0], [0.123523057, 0.0, 0.0, 0.0], [-0.0194237102, 0.0, 0.0, 0.0], [0.00158365816, 0.0, 0.0, 0.0], [-0.0610487238, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 16, 9, 17, 18, 5, 11, 25, 26, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 10, 2, 6, 12, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_558(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0469898991, 0.0, 0.0, 0.0], [-0.792500019, 3.0, 4.0, 1.0], [-0.932500005, 5.0, 6.0, 4.0], [-0.916499972, 7.0, 8.0, 4.0], [0.455500007, 9.0, 10.0, 2.0], [-0.0437482521, 0.0, 0.0, 0.0], [-0.657500029, 11.0, 12.0, 1.0], [0.505499959, 13.0, 14.0, 2.0], [0.398499995, 15.0, 16.0, 2.0], [0.0899481922, 0.0, 0.0, 0.0], [-0.1875, 17.0, 18.0, 0.0], [-0.175500005, 19.0, 20.0, 0.0], [0.0736691877, 0.0, 0.0, 0.0], [0.555500031, 21.0, 22.0, 2.0], [0.0572851859, 0.0, 0.0, 0.0], [-0.0318856314, 0.0, 0.0, 0.0], [0.0268074963, 0.0, 0.0, 0.0], [-0.0685095042, 0.0, 0.0, 0.0], [-0.118535116, 0.0, 0.0, 0.0], [0.0299929064, 0.0, 0.0, 0.0], [-0.0940140709, 0.0, 0.0, 0.0], [0.0301353186, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 10, 6, 17, 18, 19, 20, 13, 21, 22])
    branch_indices = np.array([0, 2, 3, 5, 9, 4, 7, 11, 12, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_559(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [-0.973500013, 3.0, 4.0, 4.0], [-0.744500041, 5.0, 6.0, 1.0], [0.0809147209, 0.0, 0.0, 0.0], [-0.895500004, 7.0, 8.0, 4.0], [-0.178499997, 9.0, 10.0, 0.0], [-0.175500005, 11.0, 12.0, 0.0], [0.673500001, 13.0, 14.0, 2.0], [-0.851500034, 15.0, 16.0, 4.0], [-0.949499965, 17.0, 18.0, 4.0], [-0.132499993, 19.0, 20.0, 0.0], [-0.997500002, 21.0, 22.0, 3.0], [-0.0529128723, 0.0, 0.0, 0.0], [-0.942499995, 23.0, 24.0, 3.0], [0.0834749341, 0.0, 0.0, 0.0], [-0.0749892071, 0.0, 0.0, 0.0], [0.0138652436, 0.0, 0.0, 0.0], [-0.995499969, 25.0, 26.0, 3.0], [0.0119512742, 0.0, 0.0, 0.0], [0.0630194694, 0.0, 0.0, 0.0], [-0.0313328952, 0.0, 0.0, 0.0], [0.0789517686, 0.0, 0.0, 0.0], [-0.993499994, 27.0, 28.0, 3.0], [-0.0208505169, 0.0, 0.0, 0.0], [0.0630281642, 0.0, 0.0, 0.0], [-0.0203377139, 0.0, 0.0, 0.0], [-0.139216155, 0.0, 0.0, 0.0], [-0.0618119128, 0.0, 0.0, 0.0], [0.0424467735, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 23, 24, 14, 15, 16, 25, 26, 18, 19, 20, 21, 27, 28, 12])
    branch_indices = np.array([0, 1, 4, 7, 13, 8, 2, 5, 9, 17, 10, 6, 11, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_560(xs):
    #Predicts Class 2
    function_dict = np.array([[0.60650003, 1.0, 2.0, 2.0], [0.590499997, 3.0, 4.0, 2.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.978500009, 7.0, 8.0, 3.0], [-0.0727388188, 0.0, 0.0, 0.0], [-0.590999961, 9.0, 10.0, 1.0], [-0.983500004, 11.0, 12.0, 3.0], [-0.992499948, 13.0, 14.0, 3.0], [-0.946500003, 15.0, 16.0, 4.0], [0.0920540541, 0.0, 0.0, 0.0], [-0.00684622955, 0.0, 0.0, 0.0], [-0.861999989, 17.0, 18.0, 4.0], [-0.872500002, 19.0, 20.0, 4.0], [-0.109499998, 21.0, 22.0, 0.0], [0.514500022, 23.0, 24.0, 2.0], [-0.0867150351, 0.0, 0.0, 0.0], [-0.925000012, 25.0, 26.0, 3.0], [-0.084849976, 0.0, 0.0, 0.0], [0.00860110577, 0.0, 0.0, 0.0], [-0.966500044, 27.0, 28.0, 3.0], [-0.48300001, 29.0, 30.0, 1.0], [-0.0427950174, 0.0, 0.0, 0.0], [0.0541789569, 0.0, 0.0, 0.0], [0.0100657484, 0.0, 0.0, 0.0], [0.0967264101, 0.0, 0.0, 0.0], [0.0504889116, 0.0, 0.0, 0.0], [-0.0359844193, 0.0, 0.0, 0.0], [0.0901378691, 0.0, 0.0, 0.0], [0.0135930851, 0.0, 0.0, 0.0], [-0.0448972173, 0.0, 0.0, 0.0], [0.0121482173, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 4, 9, 10, 17, 18, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_561(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0307, 1.0, 2.0, 0.0], [-0.0394999981, 3.0, 4.0, 0.0], [-0.00550500024, 5.0, 6.0, 0.0], [-0.042750001, 7.0, 8.0, 0.0], [-0.133494064, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.00478500035, 11.0, 12.0, 0.0], [-0.0496499985, 13.0, 14.0, 0.0], [0.129319057, 0.0, 0.0, 0.0], [-0.00939000025, 15.0, 16.0, 0.0], [0.243919253, 0.0, 0.0, 0.0], [-0.188201234, 0.0, 0.0, 0.0], [-0.00209000008, 17.0, 18.0, 0.0], [-0.0538500026, 19.0, 20.0, 0.0], [-0.0460999981, 21.0, 22.0, 0.0], [-0.0152500002, 23.0, 24.0, 0.0], [0.149480134, 0.0, 0.0, 0.0], [-0.00413500005, 25.0, 26.0, 0.0], [-0.00132499996, 27.0, 28.0, 0.0], [-0.00501526473, 0.0, 0.0, 0.0], [0.160770923, 0.0, 0.0, 0.0], [-0.164165005, 0.0, 0.0, 0.0], [-0.00831079856, 0.0, 0.0, 0.0], [0.0604987442, 0.0, 0.0, 0.0], [-0.0640944988, 0.0, 0.0, 0.0], [0.00661379332, 0.0, 0.0, 0.0], [0.198406965, 0.0, 0.0, 0.0], [-0.146697521, 0.0, 0.0, 0.0], [0.000457782327, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 23, 24, 16, 10, 11, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_562(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0429500006, 1.0, 2.0, 0.0], [-0.0579499975, 3.0, 4.0, 0.0], [-0.00894000009, 5.0, 6.0, 0.0], [-0.0603, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.0150499996, 11.0, 12.0, 0.0], [-0.00478500035, 13.0, 14.0, 0.0], [-0.0655499995, 15.0, 16.0, 0.0], [-0.319408596, 0.0, 0.0, 0.0], [-0.0493500009, 17.0, 18.0, 0.0], [-0.838, 19.0, 20.0, 2.0], [-0.0156999994, 21.0, 22.0, 0.0], [-0.0101749999, 23.0, 24.0, 0.0], [-0.972000003, 25.0, 26.0, 2.0], [-0.00209000008, 27.0, 28.0, 0.0], [-0.0728500038, 29.0, 30.0, 0.0], [0.287786931, 0.0, 0.0, 0.0], [0.133476481, 0.0, 0.0, 0.0], [-0.0467999987, 31.0, 32.0, 0.0], [0.262976587, 0.0, 0.0, 0.0], [0.0738337114, 0.0, 0.0, 0.0], [-0.999500036, 33.0, 34.0, 1.0], [0.126992747, 0.0, 0.0, 0.0], [-0.246460065, 0.0, 0.0, 0.0], [-0.0426714234, 0.0, 0.0, 0.0], [0.224668726, 0.0, 0.0, 0.0], [-0.0379482023, 0.0, 0.0, 0.0], [-0.00413500005, 35.0, 36.0, 0.0], [-0.00132499996, 37.0, 38.0, 0.0], [0.00606079772, 0.0, 0.0, 0.0], [-0.103961632, 0.0, 0.0, 0.0], [-0.264686704, 0.0, 0.0, 0.0], [0.0790182576, 0.0, 0.0, 0.0], [-0.0945459977, 0.0, 0.0, 0.0], [0.0866413191, 0.0, 0.0, 0.0], [-0.00462746387, 0.0, 0.0, 0.0], [-0.195819214, 0.0, 0.0, 0.0], [0.163210005, 0.0, 0.0, 0.0], [-0.00438618893, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 8, 17, 31, 32, 19, 20, 33, 34, 22, 23, 24, 25, 26, 35, 36, 37, 38])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 18, 10, 2, 5, 11, 21, 12, 6, 13, 14, 27, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_563(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.344999999, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.129233792, 0.0, 0.0, 0.0], [0.147285789, 0.0, 0.0, 0.0], [0.392499983, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [0.260500014, 13.0, 14.0, 0.0], [-0.170106217, 0.0, 0.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.203500003, 17.0, 18.0, 0.0], [-0.124395505, 0.0, 0.0, 0.0], [0.114724576, 0.0, 0.0, 0.0], [-0.0198896229, 0.0, 0.0, 0.0], [0.405499995, 19.0, 20.0, 0.0], [0.531499982, 21.0, 22.0, 0.0], [-0.0185251217, 0.0, 0.0, 0.0], [0.0850850344, 0.0, 0.0, 0.0], [0.0628411323, 0.0, 0.0, 0.0], [-0.00580790918, 0.0, 0.0, 0.0], [0.0092360843, 0.0, 0.0, 0.0], [0.129372314, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_564(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [-0.189500004, 3.0, 4.0, 0.0], [-0.96449995, 5.0, 6.0, 4.0], [-0.615499973, 7.0, 8.0, 1.0], [-0.0867539123, 0.0, 0.0, 0.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.109499998, 11.0, 12.0, 0.0], [0.636500001, 13.0, 14.0, 2.0], [-0.827499986, 15.0, 16.0, 4.0], [-0.065814659, 0.0, 0.0, 0.0], [0.0232515018, 0.0, 0.0, 0.0], [-0.715499997, 17.0, 18.0, 1.0], [-0.0725499988, 19.0, 20.0, 0.0], [-0.89349997, 21.0, 22.0, 4.0], [0.692499995, 23.0, 24.0, 2.0], [-0.0917632952, 0.0, 0.0, 0.0], [-0.75849998, 25.0, 26.0, 4.0], [0.159987107, 0.0, 0.0, 0.0], [-0.891499996, 27.0, 28.0, 4.0], [-0.0641740113, 0.0, 0.0, 0.0], [0.0503492169, 0.0, 0.0, 0.0], [0.00800211914, 0.0, 0.0, 0.0], [-0.0826055855, 0.0, 0.0, 0.0], [0.104859322, 0.0, 0.0, 0.0], [0.0142336292, 0.0, 0.0, 0.0], [0.0688649341, 0.0, 0.0, 0.0], [-0.0717783421, 0.0, 0.0, 0.0], [-0.0653948188, 0.0, 0.0, 0.0], [0.0591543876, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 4, 9, 10, 17, 27, 28, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 6, 11, 18, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_565(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [-0.946500003, 3.0, 4.0, 4.0], [-0.952499986, 5.0, 6.0, 3.0], [-0.74150002, 7.0, 8.0, 1.0], [-0.923500001, 9.0, 10.0, 4.0], [-0.98150003, 11.0, 12.0, 4.0], [-0.0777890608, 0.0, 0.0, 0.0], [-0.804499984, 13.0, 14.0, 1.0], [0.555500031, 15.0, 16.0, 2.0], [-0.752499998, 17.0, 18.0, 1.0], [-0.992499948, 19.0, 20.0, 3.0], [-0.0727549344, 0.0, 0.0, 0.0], [0.426499993, 21.0, 22.0, 2.0], [-0.004837777, 0.0, 0.0, 0.0], [0.13305895, 0.0, 0.0, 0.0], [-0.961500049, 23.0, 24.0, 4.0], [0.0571488291, 0.0, 0.0, 0.0], [-0.0815234557, 0.0, 0.0, 0.0], [0.00552435033, 0.0, 0.0, 0.0], [-0.0589944236, 0.0, 0.0, 0.0], [-0.912500024, 25.0, 26.0, 4.0], [-0.801499963, 27.0, 28.0, 1.0], [0.548500001, 29.0, 30.0, 2.0], [-0.0685707927, 0.0, 0.0, 0.0], [0.00200038403, 0.0, 0.0, 0.0], [0.108244792, 0.0, 0.0, 0.0], [0.00395701872, 0.0, 0.0, 0.0], [-0.00728177093, 0.0, 0.0, 0.0], [0.107180022, 0.0, 0.0, 0.0], [-0.0332343988, 0.0, 0.0, 0.0], [0.0199594628, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 23, 24, 16, 17, 18, 19, 25, 26, 11, 27, 28, 29, 30, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 4, 9, 10, 20, 2, 5, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_566(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.607499957, 1.0, 2.0, 1.0], [-0.136500001, 3.0, 4.0, 0.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.729499996, 9.0, 10.0, 1.0], [-0.232999995, 11.0, 12.0, 0.0], [-0.941499949, 13.0, 14.0, 4.0], [-0.756500006, 15.0, 16.0, 1.0], [-0.71449995, 17.0, 18.0, 1.0], [-0.00313917408, 0.0, 0.0, 0.0], [-0.0939470306, 0.0, 0.0, 0.0], [-0.0104544545, 0.0, 0.0, 0.0], [0.0945421457, 0.0, 0.0, 0.0], [-0.237499997, 19.0, 20.0, 0.0], [-0.872500002, 21.0, 22.0, 4.0], [0.0257955734, 0.0, 0.0, 0.0], [0.557500005, 23.0, 24.0, 2.0], [0.00639704987, 0.0, 0.0, 0.0], [0.0841285065, 0.0, 0.0, 0.0], [-0.00690696901, 0.0, 0.0, 0.0], [-0.0696922615, 0.0, 0.0, 0.0], [-0.912500024, 25.0, 26.0, 4.0], [-0.539999962, 27.0, 28.0, 1.0], [-0.00549230818, 0.0, 0.0, 0.0], [-0.0849157795, 0.0, 0.0, 0.0], [0.00269943615, 0.0, 0.0, 0.0], [0.0930021182, 0.0, 0.0, 0.0], [-0.0626813844, 0.0, 0.0, 0.0], [0.0165234059, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 23, 24, 17, 18, 9, 10, 11, 12, 19, 20, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 4, 2, 5, 6, 13, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_567(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.273499995, 1.0, 2.0, 0.0], [-0.284500003, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.37349999, 7.0, 8.0, 0.0], [0.0743955448, 0.0, 0.0, 0.0], [-0.112670995, 0.0, 0.0, 0.0], [-0.20449999, 9.0, 10.0, 0.0], [0.0209891479, 0.0, 0.0, 0.0], [-0.0604920574, 0.0, 0.0, 0.0], [0.0879303813, 0.0, 0.0, 0.0], [-0.191500008, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.185499996, 15.0, 16.0, 0.0], [-0.166502222, 0.0, 0.0, 0.0], [0.0686770752, 0.0, 0.0, 0.0], [0.123459682, 0.0, 0.0, 0.0], [-0.000703427242, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_568(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.273499995, 1.0, 2.0, 0.0], [-0.399500012, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [-0.795000017, 9.0, 10.0, 2.0], [-0.770500004, 11.0, 12.0, 2.0], [-0.20449999, 13.0, 14.0, 0.0], [-0.0518898442, 0.0, 0.0, 0.0], [-0.408500016, 15.0, 16.0, 0.0], [-0.38349998, 17.0, 18.0, 0.0], [0.0351847112, 0.0, 0.0, 0.0], [0.152794659, 0.0, 0.0, 0.0], [0.0332355313, 0.0, 0.0, 0.0], [-0.0874627903, 0.0, 0.0, 0.0], [-0.607499957, 19.0, 20.0, 2.0], [0.0179020502, 0.0, 0.0, 0.0], [0.0848136321, 0.0, 0.0, 0.0], [0.00164504338, 0.0, 0.0, 0.0], [-0.294, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [-0.47299999, 25.0, 26.0, 2.0], [-0.113471419, 0.0, 0.0, 0.0], [-0.0436802208, 0.0, 0.0, 0.0], [0.00308310217, 0.0, 0.0, 0.0], [-0.056795869, 0.0, 0.0, 0.0], [0.141119465, 0.0, 0.0, 0.0], [-0.00570525322, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 17, 21, 22, 10, 11, 12, 13, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 8, 4, 9, 18, 2, 5, 6, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_569(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.401000023, 1.0, 2.0, 0.0], [-0.420000017, 3.0, 4.0, 0.0], [-0.38349998, 5.0, 6.0, 0.0], [-0.552999973, 7.0, 8.0, 0.0], [0.0934315473, 0.0, 0.0, 0.0], [-0.101729974, 0.0, 0.0, 0.0], [-0.337500006, 9.0, 10.0, 0.0], [0.0683070496, 0.0, 0.0, 0.0], [-0.051134754, 0.0, 0.0, 0.0], [0.110138699, 0.0, 0.0, 0.0], [0.263000011, 11.0, 12.0, 0.0], [0.259499997, 13.0, 14.0, 0.0], [0.273999989, 15.0, 16.0, 0.0], [-0.0131099178, 0.0, 0.0, 0.0], [-0.108613349, 0.0, 0.0, 0.0], [0.121698, 0.0, 0.0, 0.0], [0.00139580388, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_570(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.281499982, 3.0, 4.0, 0.0], [0.0350528285, 0.0, 0.0, 0.0], [-0.323500007, 5.0, 6.0, 0.0], [-0.931499958, 7.0, 8.0, 3.0], [0.0115943328, 0.0, 0.0, 0.0], [-0.0855221078, 0.0, 0.0, 0.0], [-0.972499967, 9.0, 10.0, 3.0], [-0.0453384817, 0.0, 0.0, 0.0], [-0.983500004, 11.0, 12.0, 3.0], [0.450500011, 13.0, 14.0, 2.0], [0.00880740024, 0.0, 0.0, 0.0], [-0.0419195332, 0.0, 0.0, 0.0], [-0.0188855082, 0.0, 0.0, 0.0], [0.0631951168, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 11, 12, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_571(xs):
    #Predicts Class 1
    function_dict = np.array([[0.570500016, 1.0, 2.0, 2.0], [-0.291500002, 3.0, 4.0, 0.0], [-0.236499995, 5.0, 6.0, 0.0], [0.516000032, 7.0, 8.0, 2.0], [-0.2465, 9.0, 10.0, 0.0], [-0.297500014, 11.0, 12.0, 0.0], [-0.568500042, 13.0, 14.0, 1.0], [-0.00749159558, 0.0, 0.0, 0.0], [0.110742077, 0.0, 0.0, 0.0], [-0.994500041, 15.0, 16.0, 3.0], [-0.69749999, 17.0, 18.0, 1.0], [-0.987499952, 19.0, 20.0, 3.0], [-0.263500005, 21.0, 22.0, 0.0], [-0.0894248486, 0.0, 0.0, 0.0], [-0.00750222057, 0.0, 0.0, 0.0], [0.0379981026, 0.0, 0.0, 0.0], [-0.101410083, 0.0, 0.0, 0.0], [-0.727499962, 23.0, 24.0, 1.0], [-0.657500029, 25.0, 26.0, 1.0], [0.0436732583, 0.0, 0.0, 0.0], [-0.0803916976, 0.0, 0.0, 0.0], [0.074367933, 0.0, 0.0, 0.0], [0.0157217532, 0.0, 0.0, 0.0], [0.0118918419, 0.0, 0.0, 0.0], [-0.0706957504, 0.0, 0.0, 0.0], [0.091539681, 0.0, 0.0, 0.0], [0.00623057038, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 15, 16, 23, 24, 25, 26, 19, 20, 21, 22, 13, 14])
    branch_indices = np.array([0, 1, 3, 4, 9, 10, 17, 18, 2, 5, 11, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_572(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.976500034, 3.0, 4.0, 4.0], [-0.919499993, 5.0, 6.0, 4.0], [-0.000779272348, 0.0, 0.0, 0.0], [-0.0618600063, 0.0, 0.0, 0.0], [-0.155499995, 7.0, 8.0, 0.0], [0.754500031, 9.0, 10.0, 2.0], [0.546499968, 11.0, 12.0, 2.0], [-0.0268845651, 0.0, 0.0, 0.0], [-0.806499958, 13.0, 14.0, 4.0], [0.0462223738, 0.0, 0.0, 0.0], [0.480499983, 15.0, 16.0, 2.0], [-0.240500003, 17.0, 18.0, 0.0], [0.550999999, 19.0, 20.0, 2.0], [0.0200978667, 0.0, 0.0, 0.0], [0.0377421342, 0.0, 0.0, 0.0], [-0.0699416026, 0.0, 0.0, 0.0], [-0.00262683909, 0.0, 0.0, 0.0], [0.0778908655, 0.0, 0.0, 0.0], [0.0190192163, 0.0, 0.0, 0.0], [-0.0720465258, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 17, 18, 8, 19, 20, 14, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 6, 9, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_573(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.145500004, 1.0, 2.0, 0.0], [-0.185499996, 3.0, 4.0, 0.0], [-0.141499996, 5.0, 6.0, 0.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.169210091, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.136500001, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.160417676, 0.0, 0.0, 0.0], [0.0367600247, 0.0, 0.0, 0.0], [0.126315907, 0.0, 0.0, 0.0], [-0.138500005, 15.0, 16.0, 0.0], [-0.131500006, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [-0.747500002, 21.0, 22.0, 2.0], [-0.139499992, 23.0, 24.0, 0.0], [-0.0800886899, 0.0, 0.0, 0.0], [-0.135500014, 25.0, 26.0, 0.0], [-0.127499998, 27.0, 28.0, 0.0], [-0.0476368628, 0.0, 0.0, 0.0], [0.0321912915, 0.0, 0.0, 0.0], [0.0831622928, 0.0, 0.0, 0.0], [-0.0163618289, 0.0, 0.0, 0.0], [-0.019172946, 0.0, 0.0, 0.0], [0.0044204155, 0.0, 0.0, 0.0], [0.0107995877, 0.0, 0.0, 0.0], [0.0773750171, 0.0, 0.0, 0.0], [-0.097965464, 0.0, 0.0, 0.0], [0.00251999171, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 10, 23, 24, 16, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 6, 11, 15, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_574(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0506500006, 1.0, 2.0, 0.0], [0.03785, 3.0, 4.0, 0.0], [0.0740500018, 5.0, 6.0, 0.0], [0.0293500014, 7.0, 8.0, 0.0], [0.0476500019, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [0.0760499984, 13.0, 14.0, 0.0], [0.0240500011, 15.0, 16.0, 0.0], [-0.164382771, 0.0, 0.0, 0.0], [0.171623901, 0.0, 0.0, 0.0], [0.0234045461, 0.0, 0.0, 0.0], [-0.0215078369, 0.0, 0.0, 0.0], [-0.173271641, 0.0, 0.0, 0.0], [0.127175167, 0.0, 0.0, 0.0], [0.0825999975, 17.0, 18.0, 0.0], [0.0203999989, 19.0, 20.0, 0.0], [0.02685, 21.0, 22.0, 0.0], [-0.180598229, 0.0, 0.0, 0.0], [0.0854000002, 23.0, 24.0, 0.0], [0.00256488472, 0.0, 0.0, 0.0], [-0.163360789, 0.0, 0.0, 0.0], [0.145354524, 0.0, 0.0, 0.0], [-0.00402975548, 0.0, 0.0, 0.0], [0.105558768, 0.0, 0.0, 0.0], [-0.013012507, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 11, 12, 13, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 14, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_575(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.382499993, 1.0, 2.0, 0.0], [-0.399500012, 3.0, 4.0, 0.0], [-0.296499997, 5.0, 6.0, 0.0], [-0.412999988, 7.0, 8.0, 0.0], [0.110558994, 0.0, 0.0, 0.0], [-0.0962967798, 0.0, 0.0, 0.0], [-0.16049999, 9.0, 10.0, 0.0], [-0.4375, 11.0, 12.0, 0.0], [-0.0686122403, 0.0, 0.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [0.201499999, 15.0, 16.0, 0.0], [-0.537500024, 17.0, 18.0, 0.0], [0.0734395832, 0.0, 0.0, 0.0], [-0.166500002, 19.0, 20.0, 0.0], [-0.0379515514, 0.0, 0.0, 0.0], [-0.0318999998, 21.0, 22.0, 0.0], [0.212500006, 23.0, 24.0, 0.0], [0.0502125733, 0.0, 0.0, 0.0], [-0.0592857637, 0.0, 0.0, 0.0], [-0.00633878959, 0.0, 0.0, 0.0], [0.0784527808, 0.0, 0.0, 0.0], [-0.0119624073, 0.0, 0.0, 0.0], [-0.0886634365, 0.0, 0.0, 0.0], [0.0511761829, 0.0, 0.0, 0.0], [0.000320806168, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 14, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_576(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.957499981, 1.0, 2.0, 4.0], [-0.228500009, 3.0, 4.0, 0.0], [-0.74849999, 5.0, 6.0, 1.0], [-0.0556637123, 0.0, 0.0, 0.0], [-0.965499997, 7.0, 8.0, 4.0], [0.411000013, 9.0, 10.0, 2.0], [0.586500049, 11.0, 12.0, 2.0], [-0.180500001, 13.0, 14.0, 0.0], [-0.0587925762, 0.0, 0.0, 0.0], [-0.0199930016, 0.0, 0.0, 0.0], [-0.291999996, 15.0, 16.0, 0.0], [-0.949999988, 17.0, 18.0, 3.0], [-0.673500001, 19.0, 20.0, 1.0], [-0.2095, 21.0, 22.0, 0.0], [-0.0262243208, 0.0, 0.0, 0.0], [-0.0322658345, 0.0, 0.0, 0.0], [-0.772000015, 23.0, 24.0, 1.0], [0.508000016, 25.0, 26.0, 2.0], [0.0347092822, 0.0, 0.0, 0.0], [0.0611222945, 0.0, 0.0, 0.0], [-0.946500003, 27.0, 28.0, 3.0], [-0.00985393766, 0.0, 0.0, 0.0], [0.115955099, 0.0, 0.0, 0.0], [0.119360976, 0.0, 0.0, 0.0], [0.0230104737, 0.0, 0.0, 0.0], [0.00544441072, 0.0, 0.0, 0.0], [-0.0904430822, 0.0, 0.0, 0.0], [0.0110829081, 0.0, 0.0, 0.0], [-0.0460843407, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 21, 22, 14, 8, 9, 15, 23, 24, 25, 26, 18, 19, 27, 28])
    branch_indices = np.array([0, 1, 4, 7, 13, 2, 5, 10, 16, 6, 11, 17, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_577(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.862499952, 1.0, 2.0, 1.0], [-0.0460007153, 0.0, 0.0, 0.0], [-0.973500013, 3.0, 4.0, 4.0], [-0.219500005, 5.0, 6.0, 0.0], [0.354499996, 7.0, 8.0, 2.0], [0.090620257, 0.0, 0.0, 0.0], [-0.995499969, 9.0, 10.0, 3.0], [0.0611428693, 0.0, 0.0, 0.0], [0.445500016, 11.0, 12.0, 2.0], [-0.0317810848, 0.0, 0.0, 0.0], [0.0269974824, 0.0, 0.0, 0.0], [-0.230500013, 13.0, 14.0, 0.0], [-0.94749999, 15.0, 16.0, 4.0], [0.0338297561, 0.0, 0.0, 0.0], [-0.103139862, 0.0, 0.0, 0.0], [0.0234068893, 0.0, 0.0, 0.0], [-0.0153202964, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 9, 10, 7, 13, 14, 15, 16])
    branch_indices = np.array([0, 2, 3, 6, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_578(xs):
    #Predicts Class 2
    function_dict = np.array([[0.331499994, 1.0, 2.0, 2.0], [-0.0548722334, 0.0, 0.0, 0.0], [-0.183499992, 3.0, 4.0, 0.0], [-0.207500011, 5.0, 6.0, 0.0], [-0.138500005, 7.0, 8.0, 0.0], [-0.409500003, 9.0, 10.0, 1.0], [-0.659000039, 11.0, 12.0, 1.0], [-0.63499999, 13.0, 14.0, 1.0], [-0.62650001, 15.0, 16.0, 1.0], [-0.940500021, 17.0, 18.0, 4.0], [0.0443165414, 0.0, 0.0, 0.0], [0.0891466886, 0.0, 0.0, 0.0], [-0.0186341088, 0.0, 0.0, 0.0], [0.00669652829, 0.0, 0.0, 0.0], [-0.0726122633, 0.0, 0.0, 0.0], [-0.0462720767, 0.0, 0.0, 0.0], [0.0816907436, 0.0, 0.0, 0.0], [0.0229598619, 0.0, 0.0, 0.0], [-0.04959758, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 17, 18, 10, 11, 12, 13, 14, 15, 16])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 4, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_579(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.99849999, 5.0, 6.0, 1.0], [-0.390500009, 7.0, 8.0, 0.0], [-0.996500015, 9.0, 10.0, 1.0], [-0.117549568, 0.0, 0.0, 0.0], [0.0412558056, 0.0, 0.0, 0.0], [0.078009367, 0.0, 0.0, 0.0], [-0.142500013, 11.0, 12.0, 0.0], [0.400000006, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.161500007, 17.0, 18.0, 0.0], [-0.125499994, 19.0, 20.0, 0.0], [0.0735500008, 21.0, 22.0, 0.0], [0.0288950726, 0.0, 0.0, 0.0], [0.0534903444, 0.0, 0.0, 0.0], [-0.0201036818, 0.0, 0.0, 0.0], [-0.00375195197, 0.0, 0.0, 0.0], [-0.115547828, 0.0, 0.0, 0.0], [0.0357608758, 0.0, 0.0, 0.0], [-0.000118904565, 0.0, 0.0, 0.0], [-0.00821501855, 0.0, 0.0, 0.0], [-0.184995025, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 17, 18, 19, 20, 21, 22, 14, 15, 16, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 11, 12, 4, 9, 13, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_580(xs):
    #Predicts Class 4
    function_dict = np.array([[0.190499991, 1.0, 2.0, 0.0], [0.111500002, 3.0, 4.0, 0.0], [0.194499999, 5.0, 6.0, 0.0], [0.0892499983, 7.0, 8.0, 0.0], [0.152999997, 9.0, 10.0, 0.0], [0.0931741074, 0.0, 0.0, 0.0], [0.202500001, 11.0, 12.0, 0.0], [0.082949996, 13.0, 14.0, 0.0], [0.0917500034, 15.0, 16.0, 0.0], [-0.131050035, 0.0, 0.0, 0.0], [-0.0261686835, 0.0, 0.0, 0.0], [-0.053953208, 0.0, 0.0, 0.0], [0.0535329729, 0.0, 0.0, 0.0], [0.0757500008, 17.0, 18.0, 0.0], [0.0850500017, 19.0, 20.0, 0.0], [0.133188784, 0.0, 0.0, 0.0], [0.0941499993, 21.0, 22.0, 0.0], [-0.00107991381, 0.0, 0.0, 0.0], [0.141040578, 0.0, 0.0, 0.0], [-0.253245324, 0.0, 0.0, 0.0], [-0.0150993885, 0.0, 0.0, 0.0], [-0.0978147015, 0.0, 0.0, 0.0], [0.0669472963, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 15, 21, 22, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_581(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.428499997, 5.0, 6.0, 0.0], [0.5625, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.194000006, 11.0, 12.0, 0.0], [0.43599999, 13.0, 14.0, 0.0], [-0.885499954, 15.0, 16.0, 2.0], [0.114664979, 0.0, 0.0, 0.0], [-0.137287244, 0.0, 0.0, 0.0], [0.0429891348, 0.0, 0.0, 0.0], [-0.993499994, 17.0, 18.0, 1.0], [-0.923500001, 19.0, 20.0, 2.0], [-0.11437694, 0.0, 0.0, 0.0], [0.523499966, 21.0, 22.0, 0.0], [0.538499951, 23.0, 24.0, 0.0], [-0.103325106, 0.0, 0.0, 0.0], [-0.294, 25.0, 26.0, 0.0], [0.0913656577, 0.0, 0.0, 0.0], [0.344999999, 27.0, 28.0, 0.0], [-0.0176295694, 0.0, 0.0, 0.0], [0.149576873, 0.0, 0.0, 0.0], [0.538500011, 29.0, 30.0, 0.0], [0.00396345602, 0.0, 0.0, 0.0], [-0.0439648665, 0.0, 0.0, 0.0], [0.0432029553, 0.0, 0.0, 0.0], [-0.113636553, 0.0, 0.0, 0.0], [0.16886431, 0.0, 0.0, 0.0], [-0.0157568343, 0.0, 0.0, 0.0], [-0.10082791, 0.0, 0.0, 0.0], [0.0748361051, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 10, 25, 26, 18, 27, 28, 20, 13, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 11, 17, 12, 19, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_582(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0352196433, 0.0, 0.0, 0.0], [-0.824499965, 3.0, 4.0, 1.0], [0.0464253351, 0.0, 0.0, 0.0], [0.497500002, 5.0, 6.0, 2.0], [-0.995499969, 7.0, 8.0, 3.0], [-0.721500039, 9.0, 10.0, 1.0], [-0.202500001, 11.0, 12.0, 0.0], [-0.962499976, 13.0, 14.0, 4.0], [-0.911499977, 15.0, 16.0, 4.0], [-0.166500002, 17.0, 18.0, 0.0], [-0.101565756, 0.0, 0.0, 0.0], [-0.00352078862, 0.0, 0.0, 0.0], [0.0689170882, 0.0, 0.0, 0.0], [-0.0237826016, 0.0, 0.0, 0.0], [0.0927076787, 0.0, 0.0, 0.0], [-0.0220226683, 0.0, 0.0, 0.0], [-0.0321516469, 0.0, 0.0, 0.0], [0.0332612619, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 11, 12, 13, 14, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 4, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_583(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.809499979, 1.0, 2.0, 1.0], [-0.208499998, 3.0, 4.0, 0.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.83949995, 7.0, 8.0, 1.0], [0.0197956357, 0.0, 0.0, 0.0], [-0.476999998, 9.0, 10.0, 1.0], [0.657000005, 11.0, 12.0, 2.0], [-0.00482379086, 0.0, 0.0, 0.0], [-0.074046351, 0.0, 0.0, 0.0], [0.0681302547, 0.0, 0.0, 0.0], [-0.016657019, 0.0, 0.0, 0.0], [0.591500044, 13.0, 14.0, 2.0], [-0.92750001, 15.0, 16.0, 4.0], [-0.973500013, 17.0, 18.0, 4.0], [-0.939499974, 19.0, 20.0, 4.0], [0.000793106505, 0.0, 0.0, 0.0], [-0.0848671347, 0.0, 0.0, 0.0], [0.0587107576, 0.0, 0.0, 0.0], [-0.0161814783, 0.0, 0.0, 0.0], [0.0646361038, 0.0, 0.0, 0.0], [0.00134489371, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 10, 17, 18, 19, 20, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 5, 6, 11, 13, 14, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_584(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.956499994, 3.0, 4.0, 4.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [0.550500035, 9.0, 10.0, 2.0], [-0.330500007, 11.0, 12.0, 0.0], [-0.825999975, 13.0, 14.0, 4.0], [0.546499968, 15.0, 16.0, 2.0], [-0.0840881616, 0.0, 0.0, 0.0], [0.477999985, 17.0, 18.0, 2.0], [-0.634500027, 19.0, 20.0, 1.0], [0.0201765448, 0.0, 0.0, 0.0], [-0.039772436, 0.0, 0.0, 0.0], [0.0730927512, 0.0, 0.0, 0.0], [0.00996638276, 0.0, 0.0, 0.0], [0.438499987, 21.0, 22.0, 2.0], [0.0537202731, 0.0, 0.0, 0.0], [-0.0307631772, 0.0, 0.0, 0.0], [0.0936505646, 0.0, 0.0, 0.0], [-0.063116312, 0.0, 0.0, 0.0], [-0.526499987, 23.0, 24.0, 1.0], [0.0116555095, 0.0, 0.0, 0.0], [-0.0817715526, 0.0, 0.0, 0.0], [0.0431707911, 0.0, 0.0, 0.0], [-0.050352104, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 8, 17, 18, 19, 23, 24, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 10, 20, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_585(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0293500014, 1.0, 2.0, 0.0], [-0.0339000002, 3.0, 4.0, 0.0], [-0.00463499967, 5.0, 6.0, 0.0], [-0.654500008, 7.0, 8.0, 2.0], [-0.121796288, 0.0, 0.0, 0.0], [-0.0052199997, 9.0, 10.0, 0.0], [-0.00390999997, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [-0.208499998, 15.0, 16.0, 0.0], [-0.00894000009, 17.0, 18.0, 0.0], [0.208680794, 0.0, 0.0, 0.0], [-0.25820905, 0.0, 0.0, 0.0], [-0.000944999978, 19.0, 20.0, 0.0], [-0.057099998, 21.0, 22.0, 0.0], [-0.851999998, 23.0, 24.0, 2.0], [0.0956131294, 0.0, 0.0, 0.0], [0.00425217813, 0.0, 0.0, 0.0], [-0.972000003, 25.0, 26.0, 2.0], [-0.119115897, 0.0, 0.0, 0.0], [-0.00200500013, 27.0, 28.0, 0.0], [0.00171500002, 29.0, 30.0, 0.0], [-0.00651552388, 0.0, 0.0, 0.0], [0.0568616726, 0.0, 0.0, 0.0], [-0.20397599, 0.0, 0.0, 0.0], [-0.0173144788, 0.0, 0.0, 0.0], [0.106667399, 0.0, 0.0, 0.0], [-0.0386797376, 0.0, 0.0, 0.0], [-0.0407323316, 0.0, 0.0, 0.0], [0.168955103, 0.0, 0.0, 0.0], [-0.124163404, 0.0, 0.0, 0.0], [0.00231585396, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 16, 4, 25, 26, 18, 10, 11, 27, 28, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 9, 17, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_586(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.401000023, 3.0, 4.0, 0.0], [-0.41049999, 5.0, 6.0, 0.0], [-0.071497716, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [0.0545268208, 0.0, 0.0, 0.0], [-0.188499987, 9.0, 10.0, 0.0], [0.112540454, 0.0, 0.0, 0.0], [0.0560500026, 11.0, 12.0, 0.0], [-0.747500002, 13.0, 14.0, 2.0], [-0.1505, 15.0, 16.0, 0.0], [0.0477499999, 17.0, 18.0, 0.0], [0.1105, 19.0, 20.0, 0.0], [-0.139980346, 0.0, 0.0, 0.0], [-0.546000004, 21.0, 22.0, 2.0], [0.153229669, 0.0, 0.0, 0.0], [-0.0403999984, 23.0, 24.0, 0.0], [0.00353281782, 0.0, 0.0, 0.0], [0.162183344, 0.0, 0.0, 0.0], [-0.0526415855, 0.0, 0.0, 0.0], [0.0406561494, 0.0, 0.0, 0.0], [0.084002845, 0.0, 0.0, 0.0], [-0.0852966681, 0.0, 0.0, 0.0], [-0.109089732, 0.0, 0.0, 0.0], [0.0065760049, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 17, 18, 19, 20, 5, 13, 21, 22, 15, 23, 24])
    branch_indices = np.array([0, 1, 4, 8, 11, 12, 2, 6, 9, 14, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_587(xs):
    #Predicts Class 5
    function_dict = np.array([[0.404500008, 1.0, 2.0, 0.0], [0.344999999, 3.0, 4.0, 0.0], [0.405499995, 5.0, 6.0, 0.0], [0.2755, 7.0, 8.0, 0.0], [0.392499983, 9.0, 10.0, 0.0], [0.0981569886, 0.0, 0.0, 0.0], [0.409500003, 11.0, 12.0, 0.0], [0.264499992, 13.0, 14.0, 0.0], [0.282499999, 15.0, 16.0, 0.0], [-0.143947214, 0.0, 0.0, 0.0], [0.394500017, 17.0, 18.0, 0.0], [-0.118281461, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [0.256500006, 21.0, 22.0, 0.0], [-0.119065724, 0.0, 0.0, 0.0], [0.131848261, 0.0, 0.0, 0.0], [0.00019416034, 0.0, 0.0, 0.0], [0.0726990551, 0.0, 0.0, 0.0], [-0.0749432743, 0.0, 0.0, 0.0], [0.419499993, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [-0.0102076782, 0.0, 0.0, 0.0], [0.0649231449, 0.0, 0.0, 0.0], [0.10063757, 0.0, 0.0, 0.0], [0.013452081, 0.0, 0.0, 0.0], [-0.150219083, 0.0, 0.0, 0.0], [0.0303527694, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 9, 17, 18, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 2, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_588(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.918500006, 1.0, 2.0, 3.0], [-0.536499977, 3.0, 4.0, 1.0], [-0.196500003, 5.0, 6.0, 0.0], [-0.71449995, 7.0, 8.0, 1.0], [-0.466499984, 9.0, 10.0, 1.0], [0.0641102046, 0.0, 0.0, 0.0], [-0.0225004032, 0.0, 0.0, 0.0], [0.628499985, 11.0, 12.0, 2.0], [-0.987499952, 13.0, 14.0, 3.0], [-0.0601710826, 0.0, 0.0, 0.0], [-0.00319333258, 0.0, 0.0, 0.0], [-0.997500002, 15.0, 16.0, 3.0], [-0.08376728, 0.0, 0.0, 0.0], [-0.88349998, 17.0, 18.0, 4.0], [-0.976500034, 19.0, 20.0, 3.0], [0.0395883024, 0.0, 0.0, 0.0], [-0.0189859755, 0.0, 0.0, 0.0], [0.0232097302, 0.0, 0.0, 0.0], [-0.0476014391, 0.0, 0.0, 0.0], [0.111394256, 0.0, 0.0, 0.0], [0.000538832915, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 17, 18, 19, 20, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_589(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.654500008, 3.0, 4.0, 1.0], [-0.96449995, 5.0, 6.0, 4.0], [-0.99849999, 7.0, 8.0, 3.0], [0.0229061078, 0.0, 0.0, 0.0], [-0.976500034, 9.0, 10.0, 4.0], [-0.958500028, 11.0, 12.0, 4.0], [-0.2465, 13.0, 14.0, 0.0], [-0.0728769451, 0.0, 0.0, 0.0], [-0.0155745298, 0.0, 0.0, 0.0], [-0.212500006, 15.0, 16.0, 0.0], [-0.0653658807, 0.0, 0.0, 0.0], [-0.950500011, 17.0, 18.0, 3.0], [0.0533844456, 0.0, 0.0, 0.0], [-0.20449999, 19.0, 20.0, 0.0], [0.0213637128, 0.0, 0.0, 0.0], [0.0821642056, 0.0, 0.0, 0.0], [-0.652500033, 21.0, 22.0, 1.0], [-0.631500006, 23.0, 24.0, 1.0], [-0.0524970852, 0.0, 0.0, 0.0], [0.00326763839, 0.0, 0.0, 0.0], [0.0406740829, 0.0, 0.0, 0.0], [-0.0187118966, 0.0, 0.0, 0.0], [-0.0670980662, 0.0, 0.0, 0.0], [0.029009765, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 19, 20, 8, 4, 9, 15, 16, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 14, 2, 5, 10, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_590(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.864500046, 1.0, 2.0, 4.0], [0.67750001, 3.0, 4.0, 2.0], [-0.978999972, 5.0, 6.0, 3.0], [0.602499962, 7.0, 8.0, 2.0], [-0.990499973, 9.0, 10.0, 3.0], [-0.778499961, 11.0, 12.0, 4.0], [0.685000002, 13.0, 14.0, 2.0], [0.578500032, 15.0, 16.0, 2.0], [-0.986500025, 17.0, 18.0, 3.0], [-0.00411316101, 0.0, 0.0, 0.0], [-0.0796834603, 0.0, 0.0, 0.0], [0.0946925059, 0.0, 0.0, 0.0], [-0.0123245865, 0.0, 0.0, 0.0], [-0.0742911845, 0.0, 0.0, 0.0], [0.0353089273, 0.0, 0.0, 0.0], [-0.743499994, 19.0, 20.0, 1.0], [-0.0823276117, 0.0, 0.0, 0.0], [-0.00466171978, 0.0, 0.0, 0.0], [0.0821255818, 0.0, 0.0, 0.0], [-0.0245322138, 0.0, 0.0, 0.0], [0.0187725741, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 16, 17, 18, 9, 10, 11, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_591(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.851999998, 3.0, 4.0, 2.0], [0.101500005, 5.0, 6.0, 0.0], [-0.885499954, 7.0, 8.0, 2.0], [-0.0527499989, 9.0, 10.0, 0.0], [-0.629000008, 11.0, 12.0, 2.0], [0.319000006, 13.0, 14.0, 0.0], [0.561499953, 15.0, 16.0, 0.0], [0.0502500013, 17.0, 18.0, 0.0], [-0.0759000033, 19.0, 20.0, 0.0], [0.00679999962, 21.0, 22.0, 0.0], [-0.0420500003, 23.0, 24.0, 0.0], [-0.51699996, 25.0, 26.0, 2.0], [0.061906185, 0.0, 0.0, 0.0], [0.0152238905, 0.0, 0.0, 0.0], [0.549000025, 27.0, 28.0, 0.0], [0.588, 29.0, 30.0, 0.0], [-0.00572545687, 0.0, 0.0, 0.0], [-0.112992369, 0.0, 0.0, 0.0], [0.0155500704, 0.0, 0.0, 0.0], [0.167563409, 0.0, 0.0, 0.0], [-0.0833540931, 0.0, 0.0, 0.0], [0.0682500005, 31.0, 32.0, 0.0], [-0.146500006, 33.0, 34.0, 0.0], [-0.138180315, 0.0, 0.0, 0.0], [0.0705888569, 0.0, 0.0, 0.0], [-0.0300960243, 0.0, 0.0, 0.0], [0.000927332556, 0.0, 0.0, 0.0], [-0.079845041, 0.0, 0.0, 0.0], [0.102672204, 0.0, 0.0, 0.0], [-0.0212518219, 0.0, 0.0, 0.0], [0.105296597, 0.0, 0.0, 0.0], [-0.0328141376, 0.0, 0.0, 0.0], [-0.151786998, 0.0, 0.0, 0.0], [0.0581077114, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 18, 19, 20, 21, 31, 32, 33, 34, 24, 25, 26, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 4, 9, 10, 22, 2, 5, 11, 23, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_592(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0945499986, 1.0, 2.0, 0.0], [0.0912000015, 3.0, 4.0, 0.0], [0.1105, 5.0, 6.0, 0.0], [0.0883999988, 7.0, 8.0, 0.0], [0.0923999995, 9.0, 10.0, 0.0], [-0.173438326, 0.0, 0.0, 0.0], [0.157999992, 11.0, 12.0, 0.0], [0.0867500007, 13.0, 14.0, 0.0], [0.0892499983, 15.0, 16.0, 0.0], [0.14601098, 0.0, 0.0, 0.0], [0.0345125236, 0.0, 0.0, 0.0], [0.11400497, 0.0, 0.0, 0.0], [0.193500012, 17.0, 18.0, 0.0], [0.082949996, 19.0, 20.0, 0.0], [0.134709477, 0.0, 0.0, 0.0], [-0.107618958, 0.0, 0.0, 0.0], [0.0140042035, 0.0, 0.0, 0.0], [-0.119111292, 0.0, 0.0, 0.0], [0.196500003, 21.0, 22.0, 0.0], [0.00162946444, 0.0, 0.0, 0.0], [-0.143287346, 0.0, 0.0, 0.0], [0.0483485684, 0.0, 0.0, 0.0], [-0.0396397337, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 16, 9, 10, 5, 11, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_593(xs):
    #Predicts Class 5
    function_dict = np.array([[0.528499961, 1.0, 2.0, 0.0], [0.503000021, 3.0, 4.0, 0.0], [0.538499951, 5.0, 6.0, 0.0], [0.466499984, 7.0, 8.0, 0.0], [0.513000011, 9.0, 10.0, 0.0], [0.126056179, 0.0, 0.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.463499993, 13.0, 14.0, 0.0], [0.487500012, 15.0, 16.0, 0.0], [-0.107984737, 0.0, 0.0, 0.0], [0.523499966, 17.0, 18.0, 0.0], [0.588, 19.0, 20.0, 0.0], [0.125818297, 0.0, 0.0, 0.0], [0.455500007, 21.0, 22.0, 0.0], [-0.0849898756, 0.0, 0.0, 0.0], [0.165556207, 0.0, 0.0, 0.0], [0.0339044631, 0.0, 0.0, 0.0], [0.052123148, 0.0, 0.0, 0.0], [-0.0811354145, 0.0, 0.0, 0.0], [0.561499953, 23.0, 24.0, 0.0], [0.620499969, 25.0, 26.0, 0.0], [-0.00474172458, 0.0, 0.0, 0.0], [0.134355515, 0.0, 0.0, 0.0], [-0.00722996797, 0.0, 0.0, 0.0], [-0.122717209, 0.0, 0.0, 0.0], [0.109686993, 0.0, 0.0, 0.0], [-0.0391611308, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 9, 17, 18, 5, 23, 24, 25, 26, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 2, 6, 11, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_594(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.916499972, 1.0, 2.0, 4.0], [-0.657500029, 3.0, 4.0, 1.0], [-0.2755, 5.0, 6.0, 0.0], [-0.189500004, 7.0, 8.0, 0.0], [-0.182500005, 9.0, 10.0, 0.0], [0.0561710261, 0.0, 0.0, 0.0], [-0.250499994, 11.0, 12.0, 0.0], [-0.281499982, 13.0, 14.0, 0.0], [0.476500005, 15.0, 16.0, 2.0], [-0.09528023, 0.0, 0.0, 0.0], [0.012478305, 0.0, 0.0, 0.0], [-0.071736224, 0.0, 0.0, 0.0], [0.59799999, 17.0, 18.0, 2.0], [-0.0441622771, 0.0, 0.0, 0.0], [0.472499996, 19.0, 20.0, 2.0], [-0.994500041, 21.0, 22.0, 3.0], [-0.0879271328, 0.0, 0.0, 0.0], [-0.651499987, 23.0, 24.0, 1.0], [-0.720499992, 25.0, 26.0, 4.0], [-0.0102972956, 0.0, 0.0, 0.0], [0.0856482536, 0.0, 0.0, 0.0], [-0.04200086, 0.0, 0.0, 0.0], [0.0782884583, 0.0, 0.0, 0.0], [-0.0521030836, 0.0, 0.0, 0.0], [0.050885193, 0.0, 0.0, 0.0], [0.0809162408, 0.0, 0.0, 0.0], [-0.0329017006, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 19, 20, 21, 22, 16, 9, 10, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 15, 4, 2, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_595(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.752499998, 1.0, 2.0, 1.0], [-0.786499977, 3.0, 4.0, 1.0], [-0.965499997, 5.0, 6.0, 4.0], [-0.809499979, 7.0, 8.0, 1.0], [-0.237500012, 9.0, 10.0, 0.0], [-0.210500002, 11.0, 12.0, 0.0], [-0.953500032, 13.0, 14.0, 4.0], [-0.96449995, 15.0, 16.0, 4.0], [-0.989500046, 17.0, 18.0, 3.0], [0.0219844133, 0.0, 0.0, 0.0], [-0.0886656344, 0.0, 0.0, 0.0], [0.0900556371, 0.0, 0.0, 0.0], [-0.0261235815, 0.0, 0.0, 0.0], [-0.681499958, 19.0, 20.0, 1.0], [-0.94749999, 21.0, 22.0, 4.0], [0.0104813371, 0.0, 0.0, 0.0], [-0.0411244072, 0.0, 0.0, 0.0], [0.0562082157, 0.0, 0.0, 0.0], [-0.0173923653, 0.0, 0.0, 0.0], [-0.10957101, 0.0, 0.0, 0.0], [-0.553499997, 23.0, 24.0, 1.0], [0.088961415, 0.0, 0.0, 0.0], [-0.717499971, 25.0, 26.0, 1.0], [0.0426649712, 0.0, 0.0, 0.0], [-0.0384109467, 0.0, 0.0, 0.0], [0.0587076023, 0.0, 0.0, 0.0], [-0.0185383856, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 9, 10, 11, 12, 19, 23, 24, 21, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 8, 4, 2, 5, 6, 13, 20, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_596(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.315500021, 3.0, 4.0, 0.0], [0.0302002449, 0.0, 0.0, 0.0], [-0.0610008016, 0.0, 0.0, 0.0], [-0.254500002, 5.0, 6.0, 0.0], [0.0414946675, 0.0, 0.0, 0.0], [-0.936499953, 7.0, 8.0, 4.0], [-0.956499994, 9.0, 10.0, 4.0], [-0.216499999, 11.0, 12.0, 0.0], [-0.0172710661, 0.0, 0.0, 0.0], [0.0553477071, 0.0, 0.0, 0.0], [-0.0908726379, 0.0, 0.0, 0.0], [0.00106681092, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 5, 9, 10, 11, 12, 2])
    branch_indices = np.array([0, 1, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_597(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.5625, 3.0, 4.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 3.0], [-0.109986506, 0.0, 0.0, 0.0], [0.0908563659, 0.0, 0.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [-0.00963000022, 11.0, 12.0, 0.0], [0.0689999983, 13.0, 14.0, 0.0], [-0.00170201017, 0.0, 0.0, 0.0], [-0.0190115515, 0.0, 0.0, 0.0], [-0.0152500002, 15.0, 16.0, 0.0], [-0.00550500024, 17.0, 18.0, 0.0], [0.0311326217, 0.0, 0.0, 0.0], [-0.117837809, 0.0, 0.0, 0.0], [-0.000253351027, 0.0, 0.0, 0.0], [-0.122121826, 0.0, 0.0, 0.0], [0.184653997, 0.0, 0.0, 0.0], [0.00122937316, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_598(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 1.0], [-0.747500002, 3.0, 4.0, 2.0], [-0.0715363994, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [0.00526000001, 7.0, 8.0, 0.0], [-0.393000007, 9.0, 10.0, 0.0], [-0.997500002, 11.0, 12.0, 1.0], [-0.99849999, 13.0, 14.0, 4.0], [-0.042956654, 0.0, 0.0, 0.0], [-0.406000018, 15.0, 16.0, 0.0], [-0.191500008, 17.0, 18.0, 0.0], [-0.148499995, 19.0, 20.0, 0.0], [0.0738573521, 0.0, 0.0, 0.0], [-0.0566500016, 21.0, 22.0, 0.0], [-0.99849999, 23.0, 24.0, 1.0], [0.00243219547, 0.0, 0.0, 0.0], [-0.112353243, 0.0, 0.0, 0.0], [0.0361270867, 0.0, 0.0, 0.0], [-0.00185862184, 0.0, 0.0, 0.0], [-0.0380835719, 0.0, 0.0, 0.0], [-0.153327167, 0.0, 0.0, 0.0], [0.0402296372, 0.0, 0.0, 0.0], [0.166567191, 0.0, 0.0, 0.0], [-0.0910813734, 0.0, 0.0, 0.0], [0.0729529858, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 20, 12, 21, 22, 23, 24, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 4, 7, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_599(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [0.585000038, 5.0, 6.0, 0.0], [0.489499986, 7.0, 8.0, 0.0], [0.522500038, 9.0, 10.0, 0.0], [0.5625, 11.0, 12.0, 0.0], [0.618499994, 13.0, 14.0, 0.0], [0.479499996, 15.0, 16.0, 0.0], [0.506000042, 17.0, 18.0, 0.0], [-0.144800633, 0.0, 0.0, 0.0], [0.527500033, 19.0, 20.0, 0.0], [0.556499958, 21.0, 22.0, 0.0], [0.118055969, 0.0, 0.0, 0.0], [-0.0883302912, 0.0, 0.0, 0.0], [0.621500015, 23.0, 24.0, 0.0], [0.46450001, 25.0, 26.0, 0.0], [-0.16251348, 0.0, 0.0, 0.0], [0.119536981, 0.0, 0.0, 0.0], [-0.00732332608, 0.0, 0.0, 0.0], [0.0604424961, 0.0, 0.0, 0.0], [-0.0769310743, 0.0, 0.0, 0.0], [0.541499972, 27.0, 28.0, 0.0], [-0.0409324616, 0.0, 0.0, 0.0], [0.00332976342, 0.0, 0.0, 0.0], [0.0404247642, 0.0, 0.0, 0.0], [-0.00334189041, 0.0, 0.0, 0.0], [0.120387062, 0.0, 0.0, 0.0], [0.0178930126, 0.0, 0.0, 0.0], [0.0812457055, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 16, 17, 18, 9, 19, 20, 27, 28, 22, 12, 13, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 2, 5, 11, 21, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_600(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.782500029, 1.0, 2.0, 1.0], [-0.798500001, 3.0, 4.0, 1.0], [-0.271499991, 5.0, 6.0, 0.0], [-0.139499992, 7.0, 8.0, 0.0], [0.0561322123, 0.0, 0.0, 0.0], [-0.309499979, 9.0, 10.0, 0.0], [-0.925500035, 11.0, 12.0, 4.0], [-0.982499957, 13.0, 14.0, 3.0], [0.0425855368, 0.0, 0.0, 0.0], [-0.0144070592, 0.0, 0.0, 0.0], [0.0767107457, 0.0, 0.0, 0.0], [-0.972499967, 15.0, 16.0, 3.0], [-0.95449996, 17.0, 18.0, 3.0], [-0.824499965, 19.0, 20.0, 1.0], [0.0317235775, 0.0, 0.0, 0.0], [0.590499997, 21.0, 22.0, 2.0], [0.0289934706, 0.0, 0.0, 0.0], [0.687000036, 23.0, 24.0, 2.0], [-0.604499996, 25.0, 26.0, 1.0], [0.0251816567, 0.0, 0.0, 0.0], [-0.0979294702, 0.0, 0.0, 0.0], [-0.0836954713, 0.0, 0.0, 0.0], [0.0112083983, 0.0, 0.0, 0.0], [0.0588839725, 0.0, 0.0, 0.0], [-0.0204495024, 0.0, 0.0, 0.0], [-0.0870093256, 0.0, 0.0, 0.0], [0.0086838603, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 10, 21, 22, 16, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 15, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_601(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.75849998, 1.0, 2.0, 1.0], [-0.965499997, 3.0, 4.0, 4.0], [0.455500007, 5.0, 6.0, 2.0], [0.409500003, 7.0, 8.0, 2.0], [-0.956499994, 9.0, 10.0, 4.0], [0.41049999, 11.0, 12.0, 2.0], [0.488499999, 13.0, 14.0, 2.0], [0.292500019, 15.0, 16.0, 2.0], [-0.0847005993, 0.0, 0.0, 0.0], [0.0758231059, 0.0, 0.0, 0.0], [-0.993499994, 17.0, 18.0, 3.0], [0.0186573435, 0.0, 0.0, 0.0], [0.0755791068, 0.0, 0.0, 0.0], [-0.0517156497, 0.0, 0.0, 0.0], [-0.729499996, 19.0, 20.0, 1.0], [-0.027558716, 0.0, 0.0, 0.0], [0.0324076936, 0.0, 0.0, 0.0], [-0.0692530647, 0.0, 0.0, 0.0], [-0.930500031, 21.0, 22.0, 4.0], [-0.0441816375, 0.0, 0.0, 0.0], [-0.691499949, 23.0, 24.0, 1.0], [-0.0306303836, 0.0, 0.0, 0.0], [0.0739421025, 0.0, 0.0, 0.0], [0.0710966885, 0.0, 0.0, 0.0], [-0.00049854588, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 9, 17, 21, 22, 11, 12, 13, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 4, 10, 18, 2, 5, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_602(xs):
    #Predicts Class 2
    function_dict = np.array([[0.436500013, 1.0, 2.0, 2.0], [-0.17050001, 3.0, 4.0, 0.0], [-0.995499969, 5.0, 6.0, 3.0], [-0.0536292754, 0.0, 0.0, 0.0], [0.017433228, 0.0, 0.0, 0.0], [-0.178499997, 7.0, 8.0, 0.0], [-0.266499996, 9.0, 10.0, 0.0], [-0.659000039, 11.0, 12.0, 1.0], [-0.0287465751, 0.0, 0.0, 0.0], [0.652500033, 13.0, 14.0, 2.0], [0.648499966, 15.0, 16.0, 2.0], [0.0883341059, 0.0, 0.0, 0.0], [0.62349999, 17.0, 18.0, 2.0], [-0.00647906866, 0.0, 0.0, 0.0], [-0.0701246858, 0.0, 0.0, 0.0], [0.580500007, 19.0, 20.0, 2.0], [0.67750001, 21.0, 22.0, 2.0], [-0.0398954041, 0.0, 0.0, 0.0], [0.0458541214, 0.0, 0.0, 0.0], [0.00953964144, 0.0, 0.0, 0.0], [-0.0762195662, 0.0, 0.0, 0.0], [0.105656363, 0.0, 0.0, 0.0], [-0.00810022186, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 17, 18, 8, 13, 14, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 2, 5, 7, 12, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_603(xs):
    #Predicts Class 3
    function_dict = np.array([[0.620499969, 1.0, 2.0, 0.0], [0.588, 3.0, 4.0, 0.0], [0.0550296158, 0.0, 0.0, 0.0], [0.564499974, 5.0, 6.0, 0.0], [-0.0847998634, 0.0, 0.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [0.0924685076, 0.0, 0.0, 0.0], [0.556499958, 9.0, 10.0, 0.0], [-0.0821098536, 0.0, 0.0, 0.0], [9.58843375e-05, 0.0, 0.0, 0.0], [0.0596760213, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 8, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_604(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.190499991, 1.0, 2.0, 0.0], [-0.194499999, 3.0, 4.0, 0.0], [-0.162499994, 5.0, 6.0, 0.0], [-0.20449999, 7.0, 8.0, 0.0], [-0.093549408, 0.0, 0.0, 0.0], [-0.168500006, 9.0, 10.0, 0.0], [-0.159500003, 11.0, 12.0, 0.0], [-0.205500007, 13.0, 14.0, 0.0], [0.0771375299, 0.0, 0.0, 0.0], [-0.169499993, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.174758464, 0.0, 0.0, 0.0], [-0.1505, 19.0, 20.0, 0.0], [-0.273499995, 21.0, 22.0, 0.0], [-0.150168046, 0.0, 0.0, 0.0], [0.0788908973, 0.0, 0.0, 0.0], [-0.0502784923, 0.0, 0.0, 0.0], [0.1101676, 0.0, 0.0, 0.0], [-0.0286550242, 0.0, 0.0, 0.0], [-0.154500008, 23.0, 24.0, 0.0], [-0.141499996, 25.0, 26.0, 0.0], [-0.0261796191, 0.0, 0.0, 0.0], [0.0534563921, 0.0, 0.0, 0.0], [0.0219111405, 0.0, 0.0, 0.0], [0.0709944591, 0.0, 0.0, 0.0], [-0.0775112957, 0.0, 0.0, 0.0], [0.00296332454, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 4, 15, 16, 17, 18, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 10, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_605(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [-0.98150003, 5.0, 6.0, 1.0], [0.522500038, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [-0.0583733991, 0.0, 0.0, 0.0], [0.465499997, 13.0, 14.0, 0.0], [0.538499951, 15.0, 16.0, 0.0], [-0.108363055, 0.0, 0.0, 0.0], [0.0257082265, 0.0, 0.0, 0.0], [0.193000004, 17.0, 18.0, 0.0], [0.430999994, 19.0, 20.0, 0.0], [0.424000025, 21.0, 22.0, 0.0], [0.494000018, 23.0, 24.0, 0.0], [0.136435628, 0.0, 0.0, 0.0], [0.541999996, 25.0, 26.0, 0.0], [-0.993499994, 27.0, 28.0, 1.0], [0.188528255, 0.0, 0.0, 0.0], [0.344999999, 29.0, 30.0, 0.0], [0.527500033, 31.0, 32.0, 0.0], [-0.01364253, 0.0, 0.0, 0.0], [0.0463636853, 0.0, 0.0, 0.0], [-0.166669443, 0.0, 0.0, 0.0], [-0.00714732148, 0.0, 0.0, 0.0], [-0.0957238302, 0.0, 0.0, 0.0], [0.037289694, 0.0, 0.0, 0.0], [-0.0300421994, 0.0, 0.0, 0.0], [0.127130494, 0.0, 0.0, 0.0], [0.0174058229, 0.0, 0.0, 0.0], [-0.113172926, 0.0, 0.0, 0.0], [0.0826466754, 0.0, 0.0, 0.0], [-0.035144832, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 9, 10, 27, 28, 18, 29, 30, 31, 32, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 2, 5, 11, 17, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_606(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.968500018, 3.0, 4.0, 4.0], [0.442499995, 5.0, 6.0, 2.0], [-0.0623876154, 0.0, 0.0, 0.0], [-0.199499995, 7.0, 8.0, 0.0], [0.0676668808, 0.0, 0.0, 0.0], [-0.183499992, 9.0, 10.0, 0.0], [0.0532269068, 0.0, 0.0, 0.0], [-0.0463560112, 0.0, 0.0, 0.0], [0.473500013, 11.0, 12.0, 2.0], [-0.141499996, 13.0, 14.0, 0.0], [-0.0749150887, 0.0, 0.0, 0.0], [-0.615499973, 15.0, 16.0, 1.0], [-0.578500032, 17.0, 18.0, 1.0], [-0.925500035, 19.0, 20.0, 4.0], [0.0172845032, 0.0, 0.0, 0.0], [-0.0393421911, 0.0, 0.0, 0.0], [0.083756797, 0.0, 0.0, 0.0], [0.0197926294, 0.0, 0.0, 0.0], [-0.0428896286, 0.0, 0.0, 0.0], [0.0299591329, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 11, 15, 16, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 12, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_607(xs):
    #Predicts Class 1
    function_dict = np.array([[0.570500016, 1.0, 2.0, 2.0], [0.554499984, 3.0, 4.0, 2.0], [-0.657500029, 5.0, 6.0, 1.0], [0.539499998, 7.0, 8.0, 2.0], [0.0633730069, 0.0, 0.0, 0.0], [0.628499985, 9.0, 10.0, 2.0], [0.67050004, 11.0, 12.0, 2.0], [0.490500003, 13.0, 14.0, 2.0], [-0.0659599826, 0.0, 0.0, 0.0], [-0.0865403488, 0.0, 0.0, 0.0], [0.000908642542, 0.0, 0.0, 0.0], [-0.485499978, 15.0, 16.0, 1.0], [-0.460500002, 17.0, 18.0, 1.0], [-0.995499969, 19.0, 20.0, 3.0], [-0.960500002, 21.0, 22.0, 4.0], [0.0549817793, 0.0, 0.0, 0.0], [-0.025848126, 0.0, 0.0, 0.0], [-0.0408414975, 0.0, 0.0, 0.0], [-0.00350234751, 0.0, 0.0, 0.0], [0.0218171608, 0.0, 0.0, 0.0], [-0.0246290714, 0.0, 0.0, 0.0], [-0.00831010472, 0.0, 0.0, 0.0], [0.0549461804, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 10, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 6, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_608(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.607499957, 1.0, 2.0, 1.0], [-0.930500031, 3.0, 4.0, 3.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.213499993, 7.0, 8.0, 0.0], [0.0304288846, 0.0, 0.0, 0.0], [0.62349999, 9.0, 10.0, 2.0], [-0.941499949, 11.0, 12.0, 4.0], [0.438499987, 13.0, 14.0, 2.0], [-0.976500034, 15.0, 16.0, 4.0], [0.00381498435, 0.0, 0.0, 0.0], [0.077293776, 0.0, 0.0, 0.0], [-0.044784341, 0.0, 0.0, 0.0], [-0.872500002, 17.0, 18.0, 4.0], [0.0450845771, 0.0, 0.0, 0.0], [-0.0205131974, 0.0, 0.0, 0.0], [0.0128242839, 0.0, 0.0, 0.0], [-0.918500006, 19.0, 20.0, 4.0], [-0.912500024, 21.0, 22.0, 4.0], [-0.21450001, 23.0, 24.0, 0.0], [-0.0877482146, 0.0, 0.0, 0.0], [-0.0129457619, 0.0, 0.0, 0.0], [0.00109416642, 0.0, 0.0, 0.0], [0.0844424888, 0.0, 0.0, 0.0], [-0.043394316, 0.0, 0.0, 0.0], [0.0273085702, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 19, 20, 4, 9, 10, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 8, 16, 2, 5, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_609(xs):
    #Predicts Class 3
    function_dict = np.array([[0.212500006, 1.0, 2.0, 0.0], [0.202500001, 3.0, 4.0, 0.0], [0.253499985, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [-0.165700361, 0.0, 0.0, 0.0], [0.128876105, 0.0, 0.0, 0.0], [-0.923500001, 9.0, 10.0, 2.0], [0.0912000015, 11.0, 12.0, 0.0], [0.1105, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.997500002, 19.0, 20.0, 1.0], [0.0923999995, 21.0, 22.0, 0.0], [0.149832949, 0.0, 0.0, 0.0], [0.192499995, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [-0.107369639, 0.0, 0.0, 0.0], [0.136671424, 0.0, 0.0, 0.0], [-0.0307798237, 0.0, 0.0, 0.0], [0.00205276837, 0.0, 0.0, 0.0], [-0.0632999092, 0.0, 0.0, 0.0], [-0.110915437, 0.0, 0.0, 0.0], [-0.0281468481, 0.0, 0.0, 0.0], [-0.0384020843, 0.0, 0.0, 0.0], [0.0401515737, 0.0, 0.0, 0.0], [0.00142876559, 0.0, 0.0, 0.0], [0.103411496, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 13, 23, 24, 4, 5, 25, 26, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6, 9, 15, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_610(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.1655, 3.0, 4.0, 0.0], [-0.1505, 5.0, 6.0, 0.0], [-0.185499996, 7.0, 8.0, 0.0], [-0.0905030072, 0.0, 0.0, 0.0], [0.0632848218, 0.0, 0.0, 0.0], [-0.144499987, 9.0, 10.0, 0.0], [-0.186500013, 11.0, 12.0, 0.0], [-0.166500002, 13.0, 14.0, 0.0], [-0.145500004, 15.0, 16.0, 0.0], [-0.142500013, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.140725672, 0.0, 0.0, 0.0], [0.0704024285, 0.0, 0.0, 0.0], [-0.00202149688, 0.0, 0.0, 0.0], [-0.0140123423, 0.0, 0.0, 0.0], [-0.10946513, 0.0, 0.0, 0.0], [0.140852809, 0.0, 0.0, 0.0], [-0.141499996, 21.0, 22.0, 0.0], [0.0139751267, 0.0, 0.0, 0.0], [-0.0514286347, 0.0, 0.0, 0.0], [-0.14998129, 0.0, 0.0, 0.0], [0.00166851771, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_611(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.0911405012, 0.0, 0.0, 0.0], [0.615499973, 9.0, 10.0, 0.0], [-0.0180419572, 0.0, 0.0, 0.0], [0.534000039, 11.0, 12.0, 0.0], [0.0660490841, 0.0, 0.0, 0.0], [0.0955324695, 0.0, 0.0, 0.0], [0.0284738336, 0.0, 0.0, 0.0], [0.522500038, 13.0, 14.0, 0.0], [0.539999962, 15.0, 16.0, 0.0], [-0.00202157046, 0.0, 0.0, 0.0], [0.0517524183, 0.0, 0.0, 0.0], [-0.121222466, 0.0, 0.0, 0.0], [0.00869622361, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_612(xs):
    #Predicts Class 0
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [0.685500026, 3.0, 4.0, 2.0], [0.772500038, 5.0, 6.0, 2.0], [-0.854499996, 7.0, 8.0, 4.0], [-0.0592185222, 0.0, 0.0, 0.0], [0.0618623532, 0.0, 0.0, 0.0], [-0.0187356006, 0.0, 0.0, 0.0], [-0.782500029, 9.0, 10.0, 1.0], [-0.794499993, 11.0, 12.0, 4.0], [0.455500007, 13.0, 14.0, 2.0], [-0.932999969, 15.0, 16.0, 3.0], [0.0718035623, 0.0, 0.0, 0.0], [-0.0140356133, 0.0, 0.0, 0.0], [-0.00651793601, 0.0, 0.0, 0.0], [0.0557133853, 0.0, 0.0, 0.0], [-0.00660077436, 0.0, 0.0, 0.0], [-0.0713787228, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_613(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.851500034, 1.0, 2.0, 1.0], [-0.037907768, 0.0, 0.0, 0.0], [-0.291500002, 3.0, 4.0, 0.0], [0.57249999, 5.0, 6.0, 2.0], [-0.5995, 7.0, 8.0, 1.0], [0.064696826, 0.0, 0.0, 0.0], [-0.987499952, 9.0, 10.0, 3.0], [-0.75849998, 11.0, 12.0, 1.0], [-0.960500002, 13.0, 14.0, 4.0], [0.0343794487, 0.0, 0.0, 0.0], [-0.0432585217, 0.0, 0.0, 0.0], [-0.172499999, 15.0, 16.0, 0.0], [-0.213499993, 17.0, 18.0, 0.0], [0.022089446, 0.0, 0.0, 0.0], [-0.0835961625, 0.0, 0.0, 0.0], [-0.0385098271, 0.0, 0.0, 0.0], [0.0307402834, 0.0, 0.0, 0.0], [0.0490645282, 0.0, 0.0, 0.0], [-0.0227987692, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 9, 10, 15, 16, 17, 18, 13, 14])
    branch_indices = np.array([0, 2, 3, 6, 4, 7, 11, 12, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_614(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.0683000013, 1.0, 2.0, 0.0], [-0.977499962, 3.0, 4.0, 4.0], [-0.0463277511, 0.0, 0.0, 0.0], [-0.0454090089, 0.0, 0.0, 0.0], [-0.109499998, 5.0, 6.0, 0.0], [-0.958500028, 7.0, 8.0, 4.0], [0.0601099953, 0.0, 0.0, 0.0], [-0.994500041, 9.0, 10.0, 3.0], [-0.700500011, 11.0, 12.0, 1.0], [0.0612254031, 0.0, 0.0, 0.0], [-0.00102799688, 0.0, 0.0, 0.0], [-0.0769213736, 0.0, 0.0, 0.0], [0.00940018613, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 9, 10, 11, 12, 6, 2])
    branch_indices = np.array([0, 1, 4, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_615(xs):
    #Predicts Class 3
    function_dict = np.array([[0.431500018, 1.0, 2.0, 0.0], [0.424000025, 3.0, 4.0, 0.0], [0.46450001, 5.0, 6.0, 0.0], [0.415000021, 7.0, 8.0, 0.0], [-0.129364416, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.503000021, 11.0, 12.0, 0.0], [0.406499982, 13.0, 14.0, 0.0], [0.0786672309, 0.0, 0.0, 0.0], [0.446500003, 15.0, 16.0, 0.0], [-0.0421221852, 0.0, 0.0, 0.0], [0.466499984, 17.0, 18.0, 0.0], [0.537500024, 19.0, 20.0, 0.0], [-0.99150002, 21.0, 22.0, 1.0], [-0.127041101, 0.0, 0.0, 0.0], [0.4375, 23.0, 24.0, 0.0], [0.139215574, 0.0, 0.0, 0.0], [-0.0140401749, 0.0, 0.0, 0.0], [-0.118891582, 0.0, 0.0, 0.0], [0.513000011, 25.0, 26.0, 0.0], [-0.972000003, 27.0, 28.0, 2.0], [-0.00134749059, 0.0, 0.0, 0.0], [0.0732175931, 0.0, 0.0, 0.0], [0.118138298, 0.0, 0.0, 0.0], [-0.0597202294, 0.0, 0.0, 0.0], [0.102553859, 0.0, 0.0, 0.0], [0.035859894, 0.0, 0.0, 0.0], [0.00368611305, 0.0, 0.0, 0.0], [-0.117832422, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 4, 23, 24, 16, 10, 17, 18, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 15, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_616(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0873000026, 3.0, 4.0, 0.0], [0.0941499993, 5.0, 6.0, 0.0], [0.0854000002, 7.0, 8.0, 0.0], [0.0980941951, 0.0, 0.0, 0.0], [-0.109514587, 0.0, 0.0, 0.0], [0.111500002, 9.0, 10.0, 0.0], [0.0825999975, 11.0, 12.0, 0.0], [-0.104719311, 0.0, 0.0, 0.0], [0.102447785, 0.0, 0.0, 0.0], [0.152999997, 13.0, 14.0, 0.0], [0.0760499984, 15.0, 16.0, 0.0], [0.157729164, 0.0, 0.0, 0.0], [-0.158377901, 0.0, 0.0, 0.0], [0.192499995, 17.0, 18.0, 0.0], [9.84672151e-05, 0.0, 0.0, 0.0], [-0.164060608, 0.0, 0.0, 0.0], [0.100398786, 0.0, 0.0, 0.0], [-0.0255110506, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_617(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.46450001, 7.0, 8.0, 0.0], [0.522500038, 9.0, 10.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.120856985, 0.0, 0.0, 0.0], [0.446500003, 13.0, 14.0, 0.0], [0.503000021, 15.0, 16.0, 0.0], [-0.112843975, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.061901059, 0.0, 0.0, 0.0], [0.588, 19.0, 20.0, 0.0], [0.436500013, 21.0, 22.0, 0.0], [-0.112868816, 0.0, 0.0, 0.0], [0.466499984, 23.0, 24.0, 0.0], [0.507500052, 25.0, 26.0, 0.0], [0.00856804196, 0.0, 0.0, 0.0], [-0.0746547431, 0.0, 0.0, 0.0], [0.561499953, 27.0, 28.0, 0.0], [0.620499969, 29.0, 30.0, 0.0], [0.000176806439, 0.0, 0.0, 0.0], [0.0623912178, 0.0, 0.0, 0.0], [0.0158486031, 0.0, 0.0, 0.0], [0.121683769, 0.0, 0.0, 0.0], [-0.0421710573, 0.0, 0.0, 0.0], [0.0151241161, 0.0, 0.0, 0.0], [-0.012296671, 0.0, 0.0, 0.0], [-0.0842833221, 0.0, 0.0, 0.0], [0.0963440537, 0.0, 0.0, 0.0], [-0.0216109455, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 25, 26, 9, 17, 18, 11, 27, 28, 29, 30, 6])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 10, 2, 5, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_618(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.844500005, 3.0, 4.0, 1.0], [0.442499995, 5.0, 6.0, 2.0], [0.0185172558, 0.0, 0.0, 0.0], [-0.936499953, 7.0, 8.0, 4.0], [0.0566205345, 0.0, 0.0, 0.0], [-0.179500014, 9.0, 10.0, 0.0], [-0.213499993, 11.0, 12.0, 0.0], [0.00350324297, 0.0, 0.0, 0.0], [-0.24149999, 13.0, 14.0, 0.0], [-0.960500002, 15.0, 16.0, 4.0], [-0.0954638347, 0.0, 0.0, 0.0], [0.0132119423, 0.0, 0.0, 0.0], [-0.250499994, 17.0, 18.0, 0.0], [0.666499972, 19.0, 20.0, 2.0], [-0.0293466467, 0.0, 0.0, 0.0], [-0.102499999, 21.0, 22.0, 0.0], [-0.00226354809, 0.0, 0.0, 0.0], [0.0921918899, 0.0, 0.0, 0.0], [-0.0560252331, 0.0, 0.0, 0.0], [0.0291348733, 0.0, 0.0, 0.0], [0.0647578686, 0.0, 0.0, 0.0], [-0.00991763547, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 8, 5, 17, 18, 19, 20, 15, 21, 22])
    branch_indices = np.array([0, 1, 4, 7, 2, 6, 9, 13, 14, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_619(xs):
    #Predicts Class 1
    function_dict = np.array([[0.701499999, 1.0, 2.0, 2.0], [-0.334500015, 3.0, 4.0, 0.0], [0.0282939095, 0.0, 0.0, 0.0], [-0.0509330146, 0.0, 0.0, 0.0], [-0.2755, 5.0, 6.0, 0.0], [-0.978500009, 7.0, 8.0, 3.0], [-0.245499998, 9.0, 10.0, 0.0], [-0.9375, 11.0, 12.0, 4.0], [-0.0158184245, 0.0, 0.0, 0.0], [0.504500031, 13.0, 14.0, 2.0], [-0.989500046, 15.0, 16.0, 3.0], [0.00965090655, 0.0, 0.0, 0.0], [0.0912827402, 0.0, 0.0, 0.0], [-0.0114103053, 0.0, 0.0, 0.0], [-0.0829398409, 0.0, 0.0, 0.0], [-0.011031555, 0.0, 0.0, 0.0], [0.0279862564, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 8, 13, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 4, 5, 7, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_620(xs):
    #Predicts Class 2
    function_dict = np.array([[0.529500008, 1.0, 2.0, 2.0], [0.483500004, 3.0, 4.0, 2.0], [-0.266499996, 5.0, 6.0, 0.0], [0.455500007, 7.0, 8.0, 2.0], [-0.0666930974, 0.0, 0.0, 0.0], [-0.990499973, 9.0, 10.0, 3.0], [-0.983500004, 11.0, 12.0, 3.0], [-0.972499967, 13.0, 14.0, 4.0], [0.0413822792, 0.0, 0.0, 0.0], [0.0221245755, 0.0, 0.0, 0.0], [-0.0562620908, 0.0, 0.0, 0.0], [0.63349998, 15.0, 16.0, 2.0], [0.726500034, 17.0, 18.0, 2.0], [0.0292026382, 0.0, 0.0, 0.0], [-0.0519038476, 0.0, 0.0, 0.0], [-0.950500011, 19.0, 20.0, 4.0], [-0.85800004, 21.0, 22.0, 4.0], [-0.588500023, 23.0, 24.0, 1.0], [-0.0176294018, 0.0, 0.0, 0.0], [-0.0262720454, 0.0, 0.0, 0.0], [0.0627570003, 0.0, 0.0, 0.0], [-0.0731329545, 0.0, 0.0, 0.0], [-0.000798667606, 0.0, 0.0, 0.0], [0.0280136075, 0.0, 0.0, 0.0], [0.110374957, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 9, 10, 19, 20, 21, 22, 23, 24, 18])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 6, 11, 15, 16, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_621(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0307, 3.0, 4.0, 0.0], [0.0689999983, 5.0, 6.0, 0.0], [-0.0720499977, 7.0, 8.0, 0.0], [-0.0250499994, 9.0, 10.0, 0.0], [0.0309825372, 0.0, 0.0, 0.0], [-0.110232376, 0.0, 0.0, 0.0], [-0.0728500038, 11.0, 12.0, 0.0], [-0.0667499974, 13.0, 14.0, 0.0], [-0.0293500014, 15.0, 16.0, 0.0], [-0.0154499998, 17.0, 18.0, 0.0], [-0.0743499994, 19.0, 20.0, 0.0], [0.301230609, 0.0, 0.0, 0.0], [-0.222369, 0.0, 0.0, 0.0], [-0.0579499975, 21.0, 22.0, 0.0], [0.0146629345, 0.0, 0.0, 0.0], [0.166619524, 0.0, 0.0, 0.0], [-0.117755324, 0.0, 0.0, 0.0], [-0.0101749999, 23.0, 24.0, 0.0], [0.00550828129, 0.0, 0.0, 0.0], [-0.248832271, 0.0, 0.0, 0.0], [0.134914473, 0.0, 0.0, 0.0], [-0.0569230579, 0.0, 0.0, 0.0], [0.108699225, 0.0, 0.0, 0.0], [0.00149637286, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 21, 22, 15, 16, 17, 23, 24, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 4, 9, 10, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_622(xs):
    #Predicts Class 4
    function_dict = np.array([[0.195499986, 1.0, 2.0, 0.0], [0.192499995, 3.0, 4.0, 0.0], [0.196500003, 5.0, 6.0, 0.0], [0.152999997, 7.0, 8.0, 0.0], [-0.0846940726, 0.0, 0.0, 0.0], [0.108779274, 0.0, 0.0, 0.0], [-0.0254982747, 0.0, 0.0, 0.0], [0.111500002, 9.0, 10.0, 0.0], [0.0721743181, 0.0, 0.0, 0.0], [0.0941499993, 11.0, 12.0, 0.0], [-0.13143152, 0.0, 0.0, 0.0], [-0.00164574187, 0.0, 0.0, 0.0], [0.0716677234, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_623(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.0318999998, 1.0, 2.0, 0.0], [-0.0748500004, 3.0, 4.0, 0.0], [0.253499985, 5.0, 6.0, 0.0], [-0.149500012, 7.0, 8.0, 0.0], [0.104717866, 0.0, 0.0, 0.0], [-0.885499954, 9.0, 10.0, 2.0], [-0.923500001, 11.0, 12.0, 2.0], [-0.155499995, 13.0, 14.0, 0.0], [-0.083348535, 0.0, 0.0, 0.0], [0.210999995, 15.0, 16.0, 0.0], [0.0450542234, 0.0, 0.0, 0.0], [0.260500014, 17.0, 18.0, 0.0], [-0.99849999, 19.0, 20.0, 1.0], [-0.164499998, 21.0, 22.0, 0.0], [-0.153499991, 23.0, 24.0, 0.0], [0.198500007, 25.0, 26.0, 0.0], [-0.126507357, 0.0, 0.0, 0.0], [0.1109455, 0.0, 0.0, 0.0], [0.272000015, 27.0, 28.0, 0.0], [-0.119891591, 0.0, 0.0, 0.0], [0.00898038875, 0.0, 0.0, 0.0], [0.0215481035, 0.0, 0.0, 0.0], [-0.119289242, 0.0, 0.0, 0.0], [0.117623396, 0.0, 0.0, 0.0], [-0.0013536819, 0.0, 0.0, 0.0], [-0.076412268, 0.0, 0.0, 0.0], [0.0116525777, 0.0, 0.0, 0.0], [-0.0911405906, 0.0, 0.0, 0.0], [0.0103672221, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 4, 25, 26, 16, 10, 17, 27, 28, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 6, 11, 18, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_624(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [0.338, 3.0, 4.0, 2.0], [-0.0329156518, 0.0, 0.0, 0.0], [-0.0280252546, 0.0, 0.0, 0.0], [-0.141499996, 5.0, 6.0, 0.0], [-0.166500002, 7.0, 8.0, 0.0], [-0.0742499977, 9.0, 10.0, 0.0], [-0.1875, 11.0, 12.0, 0.0], [0.0716946572, 0.0, 0.0, 0.0], [-0.988499999, 13.0, 14.0, 3.0], [0.0403047688, 0.0, 0.0, 0.0], [0.0182207339, 0.0, 0.0, 0.0], [-0.0593288019, 0.0, 0.0, 0.0], [-0.0713880509, 0.0, 0.0, 0.0], [0.0108458726, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 8, 13, 14, 10, 2])
    branch_indices = np.array([0, 1, 4, 5, 7, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_625(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.360500008, 1.0, 2.0, 0.0], [0.0260252785, 0.0, 0.0, 0.0], [-0.855499983, 3.0, 4.0, 4.0], [-0.332499981, 5.0, 6.0, 0.0], [-0.0607551672, 0.0, 0.0, 0.0], [-0.0556889437, 0.0, 0.0, 0.0], [-0.917500019, 7.0, 8.0, 4.0], [-0.2755, 9.0, 10.0, 0.0], [0.576499999, 11.0, 12.0, 2.0], [0.0228587855, 0.0, 0.0, 0.0], [-0.0124860164, 0.0, 0.0, 0.0], [0.0700488538, 0.0, 0.0, 0.0], [0.0094754491, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 9, 10, 11, 12, 4])
    branch_indices = np.array([0, 2, 3, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_626(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 1.0], [-0.03331168, 0.0, 0.0, 0.0], [0.389499992, 3.0, 4.0, 2.0], [0.0436722487, 0.0, 0.0, 0.0], [0.455500007, 5.0, 6.0, 2.0], [-0.0484898798, 0.0, 0.0, 0.0], [0.483500004, 7.0, 8.0, 2.0], [0.0502228588, 0.0, 0.0, 0.0], [0.529500008, 9.0, 10.0, 2.0], [-0.0457746089, 0.0, 0.0, 0.0], [0.0109151984, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 7, 9, 10])
    branch_indices = np.array([0, 2, 4, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_627(xs):
    #Predicts Class 3
    function_dict = np.array([[0.428499997, 1.0, 2.0, 0.0], [0.42049998, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 4.0], [0.415000021, 7.0, 8.0, 0.0], [-0.100733459, 0.0, 0.0, 0.0], [0.432500005, 9.0, 10.0, 0.0], [0.128131866, 0.0, 0.0, 0.0], [0.406499982, 11.0, 12.0, 0.0], [0.0672307462, 0.0, 0.0, 0.0], [0.109995984, 0.0, 0.0, 0.0], [0.434499979, 13.0, 14.0, 0.0], [0.273999989, 15.0, 16.0, 0.0], [-0.0977176055, 0.0, 0.0, 0.0], [-0.115865476, 0.0, 0.0, 0.0], [0.456, 17.0, 18.0, 0.0], [-0.00279417471, 0.0, 0.0, 0.0], [0.0352061354, 0.0, 0.0, 0.0], [0.0890086815, 0.0, 0.0, 0.0], [-0.0167528149, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 9, 13, 17, 18, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_628(xs):
    #Predicts Class 4
    function_dict = np.array([[0.190499991, 1.0, 2.0, 0.0], [0.0945499986, 3.0, 4.0, 0.0], [0.194499999, 5.0, 6.0, 0.0], [0.0912000015, 7.0, 8.0, 0.0], [0.1105, 9.0, 10.0, 0.0], [0.0830915123, 0.0, 0.0, 0.0], [0.202500001, 11.0, 12.0, 0.0], [0.0883999988, 13.0, 14.0, 0.0], [0.0888264403, 0.0, 0.0, 0.0], [-0.155091137, 0.0, 0.0, 0.0], [0.1435, 15.0, 16.0, 0.0], [-0.0526760854, 0.0, 0.0, 0.0], [0.0484600551, 0.0, 0.0, 0.0], [0.0867500007, 17.0, 18.0, 0.0], [0.0892499983, 19.0, 20.0, 0.0], [0.0096733626, 0.0, 0.0, 0.0], [-0.069327265, 0.0, 0.0, 0.0], [-0.000734514382, 0.0, 0.0, 0.0], [0.114808239, 0.0, 0.0, 0.0], [-0.111241378, 0.0, 0.0, 0.0], [0.0195847508, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 15, 16, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_629(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.98150003, 1.0, 2.0, 1.0], [-0.999500036, 3.0, 4.0, 1.0], [-0.0539647974, 0.0, 0.0, 0.0], [0.615499973, 5.0, 6.0, 0.0], [0.428499997, 7.0, 8.0, 0.0], [0.5625, 9.0, 10.0, 0.0], [0.621500015, 11.0, 12.0, 0.0], [0.193000004, 13.0, 14.0, 0.0], [0.43599999, 15.0, 16.0, 0.0], [0.547500014, 17.0, 18.0, 0.0], [0.098230511, 0.0, 0.0, 0.0], [-0.124971755, 0.0, 0.0, 0.0], [0.0384258479, 0.0, 0.0, 0.0], [-0.335500002, 19.0, 20.0, 0.0], [0.228500009, 21.0, 22.0, 0.0], [-0.111982264, 0.0, 0.0, 0.0], [0.527500033, 23.0, 24.0, 0.0], [0.000972341048, 0.0, 0.0, 0.0], [-0.0564837009, 0.0, 0.0, 0.0], [0.0667304322, 0.0, 0.0, 0.0], [-0.0510781482, 0.0, 0.0, 0.0], [0.18454729, 0.0, 0.0, 0.0], [0.0404732749, 0.0, 0.0, 0.0], [0.0622414798, 0.0, 0.0, 0.0], [-0.022222098, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 10, 11, 12, 19, 20, 21, 22, 15, 23, 24, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 6, 4, 7, 13, 14, 8, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_630(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.965499997, 1.0, 2.0, 3.0], [-0.976500034, 3.0, 4.0, 3.0], [-0.247500002, 5.0, 6.0, 0.0], [0.497500002, 7.0, 8.0, 2.0], [-0.0455692522, 0.0, 0.0, 0.0], [-0.0297291912, 0.0, 0.0, 0.0], [-0.729499996, 9.0, 10.0, 1.0], [-0.0961499959, 11.0, 12.0, 0.0], [-0.538499951, 13.0, 14.0, 1.0], [-0.0218265988, 0.0, 0.0, 0.0], [-0.899500012, 15.0, 16.0, 4.0], [-0.966500044, 17.0, 18.0, 4.0], [0.0383880697, 0.0, 0.0, 0.0], [-0.987499952, 19.0, 20.0, 3.0], [-0.0408280343, 0.0, 0.0, 0.0], [0.101969697, 0.0, 0.0, 0.0], [-0.0077515603, 0.0, 0.0, 0.0], [0.0145182889, 0.0, 0.0, 0.0], [-0.0637429729, 0.0, 0.0, 0.0], [0.00627260422, 0.0, 0.0, 0.0], [0.0730751902, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 19, 20, 14, 4, 5, 9, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_631(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.809499979, 1.0, 2.0, 1.0], [-0.198500007, 3.0, 4.0, 0.0], [-0.78550005, 5.0, 6.0, 1.0], [-0.83949995, 7.0, 8.0, 1.0], [0.0147120869, 0.0, 0.0, 0.0], [-0.215000004, 9.0, 10.0, 0.0], [-0.233500004, 11.0, 12.0, 0.0], [-0.0056595658, 0.0, 0.0, 0.0], [-0.0542543121, 0.0, 0.0, 0.0], [0.0589908473, 0.0, 0.0, 0.0], [-0.00881770812, 0.0, 0.0, 0.0], [-0.95449996, 13.0, 14.0, 3.0], [-0.217500001, 15.0, 16.0, 0.0], [-0.978500009, 17.0, 18.0, 3.0], [0.0721981898, 0.0, 0.0, 0.0], [-0.728500009, 19.0, 20.0, 1.0], [-0.985499978, 21.0, 22.0, 3.0], [0.0164315701, 0.0, 0.0, 0.0], [-0.0647682026, 0.0, 0.0, 0.0], [-0.0785854235, 0.0, 0.0, 0.0], [-0.0234901663, 0.0, 0.0, 0.0], [0.0365485363, 0.0, 0.0, 0.0], [-0.0444937125, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 10, 17, 18, 14, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 2, 5, 6, 11, 13, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_632(xs):
    #Predicts Class 2
    function_dict = np.array([[0.331499994, 1.0, 2.0, 2.0], [-0.0417704768, 0.0, 0.0, 0.0], [-0.713500023, 3.0, 4.0, 1.0], [-0.995499969, 5.0, 6.0, 3.0], [-0.962499976, 7.0, 8.0, 3.0], [-0.0198727213, 0.0, 0.0, 0.0], [-0.742499948, 9.0, 10.0, 1.0], [-0.600499988, 11.0, 12.0, 1.0], [0.637500048, 13.0, 14.0, 2.0], [-0.000640068087, 0.0, 0.0, 0.0], [0.0865837559, 0.0, 0.0, 0.0], [-0.219500005, 15.0, 16.0, 0.0], [0.573500037, 17.0, 18.0, 2.0], [-0.07718575, 0.0, 0.0, 0.0], [-0.911499977, 19.0, 20.0, 3.0], [0.0270676371, 0.0, 0.0, 0.0], [-0.0512059927, 0.0, 0.0, 0.0], [0.0706958473, 0.0, 0.0, 0.0], [0.00986270141, 0.0, 0.0, 0.0], [-0.00395319704, 0.0, 0.0, 0.0], [0.00605206192, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 9, 10, 15, 16, 17, 18, 13, 19, 20])
    branch_indices = np.array([0, 2, 3, 6, 4, 7, 11, 12, 8, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_633(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.996500015, 3.0, 4.0, 1.0], [0.0689999983, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 1.0], [-0.989500046, 9.0, 10.0, 1.0], [0.0235666577, 0.0, 0.0, 0.0], [-0.103139959, 0.0, 0.0, 0.0], [-0.273499995, 11.0, 12.0, 0.0], [-0.0942224115, 0.0, 0.0, 0.0], [0.0802897513, 0.0, 0.0, 0.0], [-0.0157108977, 0.0, 0.0, 0.0], [-0.284500003, 13.0, 14.0, 0.0], [-0.210500002, 15.0, 16.0, 0.0], [-0.0108967321, 0.0, 0.0, 0.0], [0.0589596108, 0.0, 0.0, 0.0], [-0.0968810171, 0.0, 0.0, 0.0], [0.00126320147, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_634(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.407499999, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.378499985, 5.0, 6.0, 0.0], [-0.0276486669, 0.0, 0.0, 0.0], [0.114168428, 0.0, 0.0, 0.0], [-0.071229808, 0.0, 0.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [0.0915042013, 0.0, 0.0, 0.0], [-0.996500015, 9.0, 10.0, 1.0], [-0.273499995, 11.0, 12.0, 0.0], [-0.0891033262, 0.0, 0.0, 0.0], [-0.0493122116, 0.0, 0.0, 0.0], [0.00112517201, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 11, 12, 10])
    branch_indices = np.array([0, 1, 2, 6, 8, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_635(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.407499999, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.393000007, 5.0, 6.0, 0.0], [-0.48299998, 7.0, 8.0, 0.0], [-0.0971806124, 0.0, 0.0, 0.0], [0.0938504189, 0.0, 0.0, 0.0], [-0.99150002, 9.0, 10.0, 1.0], [-0.01253145, 0.0, 0.0, 0.0], [0.0432127565, 0.0, 0.0, 0.0], [-0.99849999, 11.0, 12.0, 1.0], [-0.0641161054, 0.0, 0.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [0.411500007, 15.0, 16.0, 0.0], [0.00360315456, 0.0, 0.0, 0.0], [-0.0546573214, 0.0, 0.0, 0.0], [0.0763419122, 0.0, 0.0, 0.0], [-0.0398891307, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 13, 14, 15, 16, 10])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_636(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.915500045, 1.0, 2.0, 4.0], [-0.700500011, 3.0, 4.0, 1.0], [-0.892500043, 5.0, 6.0, 4.0], [0.554499984, 7.0, 8.0, 2.0], [0.539499998, 9.0, 10.0, 2.0], [0.0584693961, 0.0, 0.0, 0.0], [-0.268999994, 11.0, 12.0, 0.0], [0.504500031, 13.0, 14.0, 2.0], [-0.217500001, 15.0, 16.0, 0.0], [-0.0864284486, 0.0, 0.0, 0.0], [-0.214000002, 17.0, 18.0, 0.0], [-0.0464462042, 0.0, 0.0, 0.0], [-0.216499999, 19.0, 20.0, 0.0], [-0.225499988, 21.0, 22.0, 0.0], [0.0850966349, 0.0, 0.0, 0.0], [0.00604433613, 0.0, 0.0, 0.0], [-0.0625860915, 0.0, 0.0, 0.0], [-0.0429325588, 0.0, 0.0, 0.0], [0.0463511087, 0.0, 0.0, 0.0], [0.0675764754, 0.0, 0.0, 0.0], [-0.191500008, 23.0, 24.0, 0.0], [-0.0462161414, 0.0, 0.0, 0.0], [0.0234331153, 0.0, 0.0, 0.0], [-0.09518978, 0.0, 0.0, 0.0], [0.0289509464, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 9, 17, 18, 5, 11, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 2, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_637(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.729499996, 1.0, 2.0, 1.0], [0.565500021, 3.0, 4.0, 2.0], [-0.698500037, 5.0, 6.0, 1.0], [0.461499989, 7.0, 8.0, 2.0], [-0.0558919311, 0.0, 0.0, 0.0], [-0.245999992, 9.0, 10.0, 0.0], [-0.681499958, 11.0, 12.0, 1.0], [-0.99849999, 13.0, 14.0, 3.0], [-0.961500049, 15.0, 16.0, 4.0], [0.0714426041, 0.0, 0.0, 0.0], [-0.00237731123, 0.0, 0.0, 0.0], [-0.040680103, 0.0, 0.0, 0.0], [-0.884500027, 17.0, 18.0, 4.0], [0.0344130211, 0.0, 0.0, 0.0], [0.407499999, 19.0, 20.0, 2.0], [0.064930439, 0.0, 0.0, 0.0], [-0.0105176987, 0.0, 0.0, 0.0], [-0.966500044, 21.0, 22.0, 4.0], [-0.0302158743, 0.0, 0.0, 0.0], [0.000308836257, 0.0, 0.0, 0.0], [-0.0799105838, 0.0, 0.0, 0.0], [-0.0207202397, 0.0, 0.0, 0.0], [0.0302979648, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 19, 20, 15, 16, 4, 9, 10, 11, 21, 22, 18])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 2, 5, 6, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_638(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.718500018, 1.0, 2.0, 1.0], [-0.179500014, 3.0, 4.0, 0.0], [-0.174499989, 5.0, 6.0, 0.0], [-0.219500005, 7.0, 8.0, 0.0], [-0.052953694, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 3.0], [-0.12650001, 11.0, 12.0, 0.0], [-0.0511655286, 0.0, 0.0, 0.0], [0.0446629412, 0.0, 0.0, 0.0], [0.0396247581, 0.0, 0.0, 0.0], [-0.962499976, 13.0, 14.0, 4.0], [-0.592999995, 15.0, 16.0, 1.0], [-0.0224501174, 0.0, 0.0, 0.0], [-0.0722091943, 0.0, 0.0, 0.0], [-0.20449999, 17.0, 18.0, 0.0], [0.115483917, 0.0, 0.0, 0.0], [0.00844322518, 0.0, 0.0, 0.0], [-0.0205738377, 0.0, 0.0, 0.0], [0.047949031, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 13, 17, 18, 15, 16, 12])
    branch_indices = np.array([0, 1, 3, 2, 5, 10, 14, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_639(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.0770607367, 0.0, 0.0, 0.0], [0.122014821, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.024465438, 0.0, 0.0, 0.0], [0.0302616488, 0.0, 0.0, 0.0], [-0.995499969, 11.0, 12.0, 1.0], [-0.0790886506, 0.0, 0.0, 0.0], [-0.140500009, 13.0, 14.0, 0.0], [0.0743674263, 0.0, 0.0, 0.0], [-0.0266554728, 0.0, 0.0, 0.0], [0.00189573702, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 13, 14, 12, 10])
    branch_indices = np.array([0, 1, 3, 2, 6, 9, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_640(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.292500019, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [0.0770765319, 0.0, 0.0, 0.0], [-0.11505878, 0.0, 0.0, 0.0], [-0.996500015, 9.0, 10.0, 1.0], [-0.401000023, 11.0, 12.0, 0.0], [-0.337500006, 13.0, 14.0, 0.0], [-0.191500008, 15.0, 16.0, 0.0], [-0.081229046, 0.0, 0.0, 0.0], [-0.99849999, 17.0, 18.0, 1.0], [0.0997995883, 0.0, 0.0, 0.0], [-0.104596548, 0.0, 0.0, 0.0], [0.00946162269, 0.0, 0.0, 0.0], [-0.20449999, 19.0, 20.0, 0.0], [-0.190499991, 21.0, 22.0, 0.0], [-0.0965497196, 0.0, 0.0, 0.0], [0.115572385, 0.0, 0.0, 0.0], [-0.00782177504, 0.0, 0.0, 0.0], [0.107042782, 0.0, 0.0, 0.0], [-0.144065425, 0.0, 0.0, 0.0], [0.000390227564, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 19, 20, 21, 22, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_641(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [-0.0123999994, 7.0, 8.0, 0.0], [-0.101878129, 0.0, 0.0, 0.0], [0.143710256, 0.0, 0.0, 0.0], [0.363499999, 9.0, 10.0, 0.0], [-0.0126499999, 11.0, 12.0, 0.0], [0.203500003, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [0.405499995, 17.0, 18.0, 0.0], [-0.0802500024, 19.0, 20.0, 0.0], [0.148589671, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.218499988, 23.0, 24.0, 0.0], [-0.106364392, 0.0, 0.0, 0.0], [-0.0156011684, 0.0, 0.0, 0.0], [0.404500008, 25.0, 26.0, 0.0], [0.409500003, 27.0, 28.0, 0.0], [0.00600296818, 0.0, 0.0, 0.0], [-0.0624967441, 0.0, 0.0, 0.0], [-0.0858819261, 0.0, 0.0, 0.0], [0.00673214858, 0.0, 0.0, 0.0], [0.0730933249, 0.0, 0.0, 0.0], [-0.0183885731, 0.0, 0.0, 0.0], [0.0153977051, 0.0, 0.0, 0.0], [0.0846645162, 0.0, 0.0, 0.0], [-0.128540963, 0.0, 0.0, 0.0], [0.00810197461, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 21, 22, 23, 24, 4, 5, 15, 16, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 2, 6, 9, 10, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_642(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.113499999, 1.0, 2.0, 0.0], [-0.538499951, 3.0, 4.0, 1.0], [-0.990499973, 5.0, 6.0, 3.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.738499999, 9.0, 10.0, 4.0], [-0.0542128906, 0.0, 0.0, 0.0], [0.00630314276, 0.0, 0.0, 0.0], [-0.236499995, 11.0, 12.0, 0.0], [-0.1875, 13.0, 14.0, 0.0], [-0.0454553887, 0.0, 0.0, 0.0], [0.0144629935, 0.0, 0.0, 0.0], [-0.99849999, 15.0, 16.0, 3.0], [-0.747500002, 17.0, 18.0, 1.0], [-0.98150003, 19.0, 20.0, 3.0], [-0.155499995, 21.0, 22.0, 0.0], [-0.0394350067, 0.0, 0.0, 0.0], [0.0300494041, 0.0, 0.0, 0.0], [-0.00225749938, 0.0, 0.0, 0.0], [-0.0863367021, 0.0, 0.0, 0.0], [0.00935661234, 0.0, 0.0, 0.0], [0.109888807, 0.0, 0.0, 0.0], [-0.0554125793, 0.0, 0.0, 0.0], [0.050125733, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 19, 20, 21, 22, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_643(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.0271500014, 1.0, 2.0, 0.0], [-0.138500005, 3.0, 4.0, 0.0], [0.0402495824, 0.0, 0.0, 0.0], [-0.979499996, 5.0, 6.0, 4.0], [-0.0674731359, 0.0, 0.0, 0.0], [0.0429512076, 0.0, 0.0, 0.0], [-0.950500011, 7.0, 8.0, 3.0], [-0.970499992, 9.0, 10.0, 3.0], [-0.631500006, 11.0, 12.0, 1.0], [-0.00818018988, 0.0, 0.0, 0.0], [0.04720686, 0.0, 0.0, 0.0], [-0.0869500637, 0.0, 0.0, 0.0], [0.0320113078, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 10, 11, 12, 4, 2])
    branch_indices = np.array([0, 1, 3, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_644(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.651499987, 1.0, 2.0, 1.0], [-0.186500013, 3.0, 4.0, 0.0], [-0.138500005, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.137499988, 9.0, 10.0, 0.0], [-0.997500002, 11.0, 12.0, 3.0], [0.06642434, 0.0, 0.0, 0.0], [0.0347546153, 0.0, 0.0, 0.0], [0.461499989, 13.0, 14.0, 2.0], [0.0563145764, 0.0, 0.0, 0.0], [-0.0324282534, 0.0, 0.0, 0.0], [-0.0492665023, 0.0, 0.0, 0.0], [-0.872500002, 15.0, 16.0, 4.0], [-0.00525124976, 0.0, 0.0, 0.0], [-0.0951716602, 0.0, 0.0, 0.0], [-0.4745, 17.0, 18.0, 1.0], [0.736999989, 19.0, 20.0, 2.0], [0.078096427, 0.0, 0.0, 0.0], [-0.0070433151, 0.0, 0.0, 0.0], [0.00419900287, 0.0, 0.0, 0.0], [-0.0582756624, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 9, 10, 11, 17, 18, 19, 20, 6])
    branch_indices = np.array([0, 1, 3, 8, 4, 2, 5, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_645(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.141646519, 0.0, 0.0, 0.0], [0.506000042, 11.0, 12.0, 0.0], [0.429499984, 13.0, 14.0, 0.0], [0.0981050804, 0.0, 0.0, 0.0], [-0.13794826, 0.0, 0.0, 0.0], [-0.0433633253, 0.0, 0.0, 0.0], [-0.0901525915, 0.0, 0.0, 0.0], [0.537500024, 15.0, 16.0, 0.0], [0.421999991, 17.0, 18.0, 0.0], [0.433499992, 19.0, 20.0, 0.0], [0.523499966, 21.0, 22.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [-0.000959999335, 0.0, 0.0, 0.0], [0.123891816, 0.0, 0.0, 0.0], [-0.113626942, 0.0, 0.0, 0.0], [0.00361537561, 0.0, 0.0, 0.0], [0.0159427412, 0.0, 0.0, 0.0], [0.0794238001, 0.0, 0.0, 0.0], [0.00719313277, 0.0, 0.0, 0.0], [-0.108655058, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_646(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.395500004, 1.0, 2.0, 0.0], [-0.412999988, 3.0, 4.0, 0.0], [-0.378499985, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [0.102516592, 0.0, 0.0, 0.0], [-0.0924113616, 0.0, 0.0, 0.0], [-0.298500001, 9.0, 10.0, 0.0], [-0.0474438034, 0.0, 0.0, 0.0], [0.0384544358, 0.0, 0.0, 0.0], [0.0913224146, 0.0, 0.0, 0.0], [-0.282499999, 11.0, 12.0, 0.0], [-0.284500003, 13.0, 14.0, 0.0], [-0.210500002, 15.0, 16.0, 0.0], [-0.0022557918, 0.0, 0.0, 0.0], [-0.0784431323, 0.0, 0.0, 0.0], [0.0865305066, 0.0, 0.0, 0.0], [-0.00248601637, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_647(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.168500006, 3.0, 4.0, 0.0], [-0.153499991, 5.0, 6.0, 0.0], [-0.169499993, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.155499995, 11.0, 12.0, 0.0], [-0.080400005, 13.0, 14.0, 0.0], [-0.382499993, 15.0, 16.0, 0.0], [0.0566898473, 0.0, 0.0, 0.0], [-0.0917914361, 0.0, 0.0, 0.0], [0.0251370557, 0.0, 0.0, 0.0], [0.0124951629, 0.0, 0.0, 0.0], [0.0706457868, 0.0, 0.0, 0.0], [-0.0670581833, 0.0, 0.0, 0.0], [-0.0318999998, 17.0, 18.0, 0.0], [-0.399500012, 19.0, 20.0, 0.0], [-0.0648184717, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [0.272000015, 23.0, 24.0, 0.0], [-0.0326055884, 0.0, 0.0, 0.0], [0.083883293, 0.0, 0.0, 0.0], [0.115367748, 0.0, 0.0, 0.0], [-0.00428665197, 0.0, 0.0, 0.0], [-0.0286180247, 0.0, 0.0, 0.0], [0.00720429374, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 16, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 6, 14, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_648(xs):
    #Predicts Class 0
    function_dict = np.array([[0.63349998, 1.0, 2.0, 2.0], [0.592499971, 3.0, 4.0, 2.0], [-0.259499997, 5.0, 6.0, 0.0], [-0.950500011, 7.0, 8.0, 3.0], [-0.0497570075, 0.0, 0.0, 0.0], [-0.0314868428, 0.0, 0.0, 0.0], [-0.158500001, 9.0, 10.0, 0.0], [-0.993499994, 11.0, 12.0, 3.0], [-0.201999992, 13.0, 14.0, 0.0], [-0.987499952, 15.0, 16.0, 3.0], [-0.0310343709, 0.0, 0.0, 0.0], [-0.140500009, 17.0, 18.0, 0.0], [-0.746500015, 19.0, 20.0, 1.0], [0.0762492046, 0.0, 0.0, 0.0], [-0.0192136895, 0.0, 0.0, 0.0], [0.0948043838, 0.0, 0.0, 0.0], [0.0079777902, 0.0, 0.0, 0.0], [0.034853939, 0.0, 0.0, 0.0], [-0.0495426543, 0.0, 0.0, 0.0], [-0.00269434555, 0.0, 0.0, 0.0], [-0.076531969, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 15, 16, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_649(xs):
    #Predicts Class 1
    function_dict = np.array([[0.361499995, 1.0, 2.0, 2.0], [-0.996500015, 3.0, 4.0, 3.0], [0.436500013, 5.0, 6.0, 2.0], [-0.067513518, 0.0, 0.0, 0.0], [0.014039197, 0.0, 0.0, 0.0], [-0.995499969, 7.0, 8.0, 3.0], [-0.993499994, 9.0, 10.0, 3.0], [0.0929945707, 0.0, 0.0, 0.0], [-0.0161692761, 0.0, 0.0, 0.0], [-0.654500008, 11.0, 12.0, 1.0], [-0.7245, 13.0, 14.0, 1.0], [-0.971500039, 15.0, 16.0, 4.0], [-0.234999999, 17.0, 18.0, 0.0], [-0.984500051, 19.0, 20.0, 3.0], [-0.962499976, 21.0, 22.0, 4.0], [0.010221146, 0.0, 0.0, 0.0], [-0.0615539216, 0.0, 0.0, 0.0], [0.0458882824, 0.0, 0.0, 0.0], [-0.0185646527, 0.0, 0.0, 0.0], [0.0827492997, 0.0, 0.0, 0.0], [-0.00326244184, 0.0, 0.0, 0.0], [0.0462333634, 0.0, 0.0, 0.0], [-0.026758194, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11, 12, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_650(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.526499987, 3.0, 4.0, 1.0], [-0.283999979, 5.0, 6.0, 0.0], [-0.911499977, 7.0, 8.0, 3.0], [-0.0498305336, 0.0, 0.0, 0.0], [-0.00594493607, 0.0, 0.0, 0.0], [-0.825999975, 9.0, 10.0, 4.0], [-0.600499988, 11.0, 12.0, 1.0], [0.048063904, 0.0, 0.0, 0.0], [0.0673268661, 0.0, 0.0, 0.0], [0.00392854773, 0.0, 0.0, 0.0], [-0.733500004, 13.0, 14.0, 1.0], [-0.930000007, 15.0, 16.0, 4.0], [0.0049794009, 0.0, 0.0, 0.0], [-0.0416915976, 0.0, 0.0, 0.0], [-0.0144182881, 0.0, 0.0, 0.0], [0.0564171709, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_651(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.478500009, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.201499999, 15.0, 16.0, 0.0], [0.0754458532, 0.0, 0.0, 0.0], [-0.105587356, 0.0, 0.0, 0.0], [-0.0304748882, 0.0, 0.0, 0.0], [0.0241325404, 0.0, 0.0, 0.0], [0.137299776, 0.0, 0.0, 0.0], [0.547500014, 17.0, 18.0, 0.0], [0.10495723, 0.0, 0.0, 0.0], [0.0894500017, 19.0, 20.0, 0.0], [0.212500006, 21.0, 22.0, 0.0], [0.539999962, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [-0.00183834648, 0.0, 0.0, 0.0], [0.0441111624, 0.0, 0.0, 0.0], [-0.133633092, 0.0, 0.0, 0.0], [0.000967599684, 0.0, 0.0, 0.0], [-0.00777347293, 0.0, 0.0, 0.0], [-0.118726254, 0.0, 0.0, 0.0], [0.0477606133, 0.0, 0.0, 0.0], [-0.0716478005, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 11, 12, 23, 24, 25, 26, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 13, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_652(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0885500014, 3.0, 4.0, 0.0], [0.190499991, 5.0, 6.0, 0.0], [0.082949996, 7.0, 8.0, 0.0], [0.100701772, 0.0, 0.0, 0.0], [0.111500002, 9.0, 10.0, 0.0], [0.196500003, 11.0, 12.0, 0.0], [0.0757500008, 13.0, 14.0, 0.0], [0.0867500007, 15.0, 16.0, 0.0], [0.0941499993, 17.0, 18.0, 0.0], [-0.114091627, 0.0, 0.0, 0.0], [0.195499986, 19.0, 20.0, 0.0], [-0.0244516507, 0.0, 0.0, 0.0], [0.0506500006, 21.0, 22.0, 0.0], [0.136814743, 0.0, 0.0, 0.0], [-0.12798512, 0.0, 0.0, 0.0], [0.00941459555, 0.0, 0.0, 0.0], [-0.0967448056, 0.0, 0.0, 0.0], [0.0623130128, 0.0, 0.0, 0.0], [0.00764494762, 0.0, 0.0, 0.0], [0.0933790654, 0.0, 0.0, 0.0], [0.00175379973, 0.0, 0.0, 0.0], [-0.0814213604, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 4, 17, 18, 10, 19, 20, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 9, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_653(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.421000004, 3.0, 4.0, 0.0], [0.538500011, 5.0, 6.0, 0.0], [-0.073397629, 0.0, 0.0, 0.0], [0.431500018, 7.0, 8.0, 0.0], [0.5255, 9.0, 10.0, 0.0], [0.0918075815, 0.0, 0.0, 0.0], [0.424000025, 11.0, 12.0, 0.0], [0.4375, 13.0, 14.0, 0.0], [0.430999994, 15.0, 16.0, 0.0], [-0.0612783693, 0.0, 0.0, 0.0], [0.419499993, 17.0, 18.0, 0.0], [0.253927499, 0.0, 0.0, 0.0], [0.433499992, 19.0, 20.0, 0.0], [0.446500003, 21.0, 22.0, 0.0], [0.344999999, 23.0, 24.0, 0.0], [0.0824824199, 0.0, 0.0, 0.0], [0.00342176086, 0.0, 0.0, 0.0], [-0.102315396, 0.0, 0.0, 0.0], [-0.0323172435, 0.0, 0.0, 0.0], [-0.137442484, 0.0, 0.0, 0.0], [0.0670747757, 0.0, 0.0, 0.0], [-0.013502623, 0.0, 0.0, 0.0], [0.0304422602, 0.0, 0.0, 0.0], [-0.0657247156, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 17, 18, 12, 19, 20, 21, 22, 23, 24, 16, 10, 6])
    branch_indices = np.array([0, 1, 4, 7, 11, 8, 13, 14, 2, 5, 9, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_654(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.228500009, 1.0, 2.0, 0.0], [-0.938500047, 3.0, 4.0, 4.0], [-0.972499967, 5.0, 6.0, 3.0], [-0.738499999, 7.0, 8.0, 1.0], [-0.940500021, 9.0, 10.0, 3.0], [-0.99849999, 11.0, 12.0, 3.0], [-0.913499951, 13.0, 14.0, 4.0], [-0.818500042, 15.0, 16.0, 1.0], [0.0035312965, 0.0, 0.0, 0.0], [-0.729499996, 17.0, 18.0, 1.0], [-0.0569257662, 0.0, 0.0, 0.0], [-0.744499981, 19.0, 20.0, 1.0], [-0.950500011, 21.0, 22.0, 4.0], [0.0600471534, 0.0, 0.0, 0.0], [-0.00415101973, 0.0, 0.0, 0.0], [-0.00969981402, 0.0, 0.0, 0.0], [-0.10508766, 0.0, 0.0, 0.0], [0.105702661, 0.0, 0.0, 0.0], [-0.625499964, 23.0, 24.0, 1.0], [0.0741865039, 0.0, 0.0, 0.0], [-0.0209110342, 0.0, 0.0, 0.0], [-0.817499995, 25.0, 26.0, 1.0], [-0.909500003, 27.0, 28.0, 4.0], [-0.0527232401, 0.0, 0.0, 0.0], [0.0345924087, 0.0, 0.0, 0.0], [-0.0578043088, 0.0, 0.0, 0.0], [0.0382025689, 0.0, 0.0, 0.0], [-0.0838867873, 0.0, 0.0, 0.0], [-0.00363023812, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 17, 23, 24, 10, 19, 20, 25, 26, 27, 28, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 18, 2, 5, 11, 12, 21, 22, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_655(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.315500021, 3.0, 4.0, 0.0], [-0.0303799547, 0.0, 0.0, 0.0], [-0.661000013, 5.0, 6.0, 1.0], [-0.906499982, 7.0, 8.0, 4.0], [0.00671045203, 0.0, 0.0, 0.0], [0.0606701896, 0.0, 0.0, 0.0], [-0.980499983, 9.0, 10.0, 3.0], [0.576499999, 11.0, 12.0, 2.0], [-0.99150002, 13.0, 14.0, 3.0], [-0.694999993, 15.0, 16.0, 1.0], [-0.0060890303, 0.0, 0.0, 0.0], [-0.0689843595, 0.0, 0.0, 0.0], [0.00914897397, 0.0, 0.0, 0.0], [-0.0497158729, 0.0, 0.0, 0.0], [0.0679055378, 0.0, 0.0, 0.0], [-0.00217917655, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 13, 14, 15, 16, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 9, 10, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_656(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.401499987, 1.0, 2.0, 1.0], [-0.892500043, 3.0, 4.0, 3.0], [0.0353081375, 0.0, 0.0, 0.0], [-0.962499976, 5.0, 6.0, 4.0], [-0.0485757813, 0.0, 0.0, 0.0], [-0.219500005, 7.0, 8.0, 0.0], [-0.958500028, 9.0, 10.0, 4.0], [-0.0603049025, 0.0, 0.0, 0.0], [-0.770500004, 11.0, 12.0, 1.0], [0.0708667114, 0.0, 0.0, 0.0], [-0.700500011, 13.0, 14.0, 1.0], [-0.0375416651, 0.0, 0.0, 0.0], [0.0317223519, 0.0, 0.0, 0.0], [-0.043501664, 0.0, 0.0, 0.0], [0.0159509014, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 9, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 8, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_657(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.99849999, 5.0, 6.0, 1.0], [-0.190499991, 7.0, 8.0, 0.0], [-0.0225000009, 9.0, 10.0, 0.0], [-0.0964056402, 0.0, 0.0, 0.0], [0.0262923092, 0.0, 0.0, 0.0], [-0.191500008, 11.0, 12.0, 0.0], [-0.145500004, 13.0, 14.0, 0.0], [-0.795000017, 15.0, 16.0, 2.0], [0.351500005, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [0.116449744, 0.0, 0.0, 0.0], [-0.185499996, 21.0, 22.0, 0.0], [-0.144499987, 23.0, 24.0, 0.0], [0.023940159, 0.0, 0.0, 0.0], [-0.109370075, 0.0, 0.0, 0.0], [0.0825631842, 0.0, 0.0, 0.0], [-0.0722999871, 0.0, 0.0, 0.0], [-0.016861992, 0.0, 0.0, 0.0], [0.0752353817, 0.0, 0.0, 0.0], [-0.0111894058, 0.0, 0.0, 0.0], [-0.134134725, 0.0, 0.0, 0.0], [0.0898545086, 0.0, 0.0, 0.0], [0.00071158621, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 21, 22, 23, 24, 15, 16, 17, 18, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 4, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_658(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00974999927, 1.0, 2.0, 0.0], [0.0079549998, 3.0, 4.0, 0.0], [0.0203999989, 5.0, 6.0, 0.0], [0.00456999987, 7.0, 8.0, 0.0], [-0.196512476, 0.0, 0.0, 0.0], [0.0110500008, 9.0, 10.0, 0.0], [0.0240500011, 11.0, 12.0, 0.0], [0.00146499998, 13.0, 14.0, 0.0], [0.00655000005, 15.0, 16.0, 0.0], [0.0537607111, 0.0, 0.0, 0.0], [0.160595596, 0.0, 0.0, 0.0], [-0.123169877, 0.0, 0.0, 0.0], [0.0368999988, 17.0, 18.0, 0.0], [-0.000469999999, 19.0, 20.0, 0.0], [0.00325499987, 21.0, 22.0, 0.0], [0.102401428, 0.0, 0.0, 0.0], [-0.00328295608, 0.0, 0.0, 0.0], [0.028549999, 23.0, 24.0, 0.0], [0.0447499976, 25.0, 26.0, 0.0], [-0.00234239805, 0.0, 0.0, 0.0], [0.133713409, 0.0, 0.0, 0.0], [-0.130234048, 0.0, 0.0, 0.0], [-0.0193212125, 0.0, 0.0, 0.0], [-0.0132654412, 0.0, 0.0, 0.0], [0.172668278, 0.0, 0.0, 0.0], [-0.146847039, 0.0, 0.0, 0.0], [0.0106041487, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 16, 4, 9, 10, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_659(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0547842085, 0.0, 0.0, 0.0], [0.549000025, 5.0, 6.0, 0.0], [-0.0834225565, 0.0, 0.0, 0.0], [0.538499951, 7.0, 8.0, 0.0], [0.5625, 9.0, 10.0, 0.0], [0.528499961, 11.0, 12.0, 0.0], [0.541499972, 13.0, 14.0, 0.0], [0.0303021837, 0.0, 0.0, 0.0], [0.0828028619, 0.0, 0.0, 0.0], [-0.0023882247, 0.0, 0.0, 0.0], [0.111082882, 0.0, 0.0, 0.0], [-0.0812703371, 0.0, 0.0, 0.0], [-0.0253981873, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_660(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.971500039, 1.0, 2.0, 4.0], [-0.805500031, 3.0, 4.0, 1.0], [-0.80250001, 5.0, 6.0, 1.0], [0.0218272246, 0.0, 0.0, 0.0], [-0.05872887, 0.0, 0.0, 0.0], [-0.826499999, 7.0, 8.0, 1.0], [-0.74849999, 9.0, 10.0, 1.0], [0.0108103147, 0.0, 0.0, 0.0], [-0.0450943299, 0.0, 0.0, 0.0], [-0.210500002, 11.0, 12.0, 0.0], [-0.20449999, 13.0, 14.0, 0.0], [-0.938500047, 15.0, 16.0, 4.0], [0.0728601739, 0.0, 0.0, 0.0], [-0.234499991, 17.0, 18.0, 0.0], [-0.183499992, 19.0, 20.0, 0.0], [-0.0293707419, 0.0, 0.0, 0.0], [0.0425526313, 0.0, 0.0, 0.0], [-0.00922824536, 0.0, 0.0, 0.0], [0.0615917556, 0.0, 0.0, 0.0], [-0.0825405121, 0.0, 0.0, 0.0], [0.00798985083, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 15, 16, 12, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_661(xs):
    #Predicts Class 1
    function_dict = np.array([[0.361499995, 1.0, 2.0, 2.0], [-0.996500015, 3.0, 4.0, 3.0], [-0.973500013, 5.0, 6.0, 4.0], [-0.0526406392, 0.0, 0.0, 0.0], [0.00744060613, 0.0, 0.0, 0.0], [-0.210500002, 7.0, 8.0, 0.0], [0.554499984, 9.0, 10.0, 2.0], [0.0620600656, 0.0, 0.0, 0.0], [-0.00696533266, 0.0, 0.0, 0.0], [-0.965499997, 11.0, 12.0, 4.0], [-0.939499974, 13.0, 14.0, 4.0], [-0.0612362698, 0.0, 0.0, 0.0], [0.455500007, 15.0, 16.0, 2.0], [0.608999968, 17.0, 18.0, 2.0], [0.676499963, 19.0, 20.0, 2.0], [0.036789, 0.0, 0.0, 0.0], [-0.0240886789, 0.0, 0.0, 0.0], [0.0631978288, 0.0, 0.0, 0.0], [0.015066334, 0.0, 0.0, 0.0], [-0.0282759555, 0.0, 0.0, 0.0], [0.0234749224, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 11, 15, 16, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 12, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_662(xs):
    #Predicts Class 2
    function_dict = np.array([[0.772500038, 1.0, 2.0, 2.0], [-0.915500045, 3.0, 4.0, 4.0], [0.0287145991, 0.0, 0.0, 0.0], [-0.218499988, 5.0, 6.0, 0.0], [-0.862499952, 7.0, 8.0, 4.0], [-0.24849999, 9.0, 10.0, 0.0], [-0.674499989, 11.0, 12.0, 1.0], [-0.980499983, 13.0, 14.0, 3.0], [-0.978999972, 15.0, 16.0, 3.0], [-0.012394825, 0.0, 0.0, 0.0], [-0.959499955, 17.0, 18.0, 4.0], [0.442499995, 19.0, 20.0, 2.0], [-0.184500009, 21.0, 22.0, 0.0], [-0.111442074, 0.0, 0.0, 0.0], [0.0308153629, 0.0, 0.0, 0.0], [0.0446180329, 0.0, 0.0, 0.0], [-0.049804315, 0.0, 0.0, 0.0], [0.0132262846, 0.0, 0.0, 0.0], [0.0864306092, 0.0, 0.0, 0.0], [-0.0451474711, 0.0, 0.0, 0.0], [0.0581347235, 0.0, 0.0, 0.0], [-0.0622158647, 0.0, 0.0, 0.0], [-0.0097706141, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 11, 12, 4, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_663(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0968500003, 1.0, 2.0, 0.0], [-0.0987499952, 3.0, 4.0, 0.0], [-0.0905999988, 5.0, 6.0, 0.0], [-0.111500002, 7.0, 8.0, 0.0], [-0.249634475, 0.0, 0.0, 0.0], [-0.0910999998, 9.0, 10.0, 0.0], [-0.0801500008, 11.0, 12.0, 0.0], [-0.115500003, 13.0, 14.0, 0.0], [-0.105499998, 15.0, 16.0, 0.0], [-0.0961499959, 17.0, 18.0, 0.0], [0.191285253, 0.0, 0.0, 0.0], [-0.205665797, 0.0, 0.0, 0.0], [-0.0743499994, 19.0, 20.0, 0.0], [-0.120499998, 21.0, 22.0, 0.0], [-0.21703659, 0.0, 0.0, 0.0], [0.109965391, 0.0, 0.0, 0.0], [-0.103500001, 23.0, 24.0, 0.0], [0.158149108, 0.0, 0.0, 0.0], [-0.0698249042, 0.0, 0.0, 0.0], [-0.0762000009, 25.0, 26.0, 0.0], [-0.0599500015, 27.0, 28.0, 0.0], [-0.00712097855, 0.0, 0.0, 0.0], [0.0731756687, 0.0, 0.0, 0.0], [-0.121569648, 0.0, 0.0, 0.0], [0.0479595177, 0.0, 0.0, 0.0], [-0.00960993301, 0.0, 0.0, 0.0], [0.215204939, 0.0, 0.0, 0.0], [-0.0883842558, 0.0, 0.0, 0.0], [0.00244537997, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 23, 24, 4, 17, 18, 10, 11, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_664(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.747500002, 3.0, 4.0, 2.0], [-0.639999986, 5.0, 6.0, 2.0], [-0.401000023, 7.0, 8.0, 0.0], [0.068968825, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 1.0], [-0.581499994, 11.0, 12.0, 2.0], [-0.0745512024, 0.0, 0.0, 0.0], [-0.38349998, 13.0, 14.0, 0.0], [-0.147, 15.0, 16.0, 0.0], [-0.120499998, 17.0, 18.0, 0.0], [0.0800936967, 0.0, 0.0, 0.0], [-0.208499998, 19.0, 20.0, 0.0], [0.119201556, 0.0, 0.0, 0.0], [-0.2095, 21.0, 22.0, 0.0], [-0.245499998, 23.0, 24.0, 0.0], [-0.139916763, 0.0, 0.0, 0.0], [-0.298500001, 25.0, 26.0, 0.0], [0.0802302584, 0.0, 0.0, 0.0], [-0.0533263348, 0.0, 0.0, 0.0], [0.0162276905, 0.0, 0.0, 0.0], [-0.0349501558, 0.0, 0.0, 0.0], [0.00225371658, 0.0, 0.0, 0.0], [-0.0905524641, 0.0, 0.0, 0.0], [0.0566354133, 0.0, 0.0, 0.0], [0.0689146742, 0.0, 0.0, 0.0], [-0.12132486, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 21, 22, 4, 23, 24, 16, 25, 26, 18, 11, 19, 20])
    branch_indices = np.array([0, 1, 3, 8, 14, 2, 5, 9, 15, 10, 17, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_665(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.421000004, 3.0, 4.0, 0.0], [-0.0371000022, 5.0, 6.0, 0.0], [-0.0570694394, 0.0, 0.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.193500012, 9.0, 10.0, 0.0], [0.428499997, 11.0, 12.0, 0.0], [-0.1655, 13.0, 14.0, 0.0], [0.256500006, 15.0, 16.0, 0.0], [-0.360500008, 17.0, 18.0, 0.0], [-0.122605622, 0.0, 0.0, 0.0], [-0.996500015, 19.0, 20.0, 1.0], [0.43599999, 21.0, 22.0, 0.0], [-0.393000007, 23.0, 24.0, 0.0], [0.075916402, 0.0, 0.0, 0.0], [-0.0123999994, 25.0, 26.0, 0.0], [0.260500014, 27.0, 28.0, 0.0], [0.0013741327, 0.0, 0.0, 0.0], [0.0673408136, 0.0, 0.0, 0.0], [0.253000021, 29.0, 30.0, 0.0], [-0.0155651737, 0.0, 0.0, 0.0], [-0.0676560774, 0.0, 0.0, 0.0], [0.527500033, 31.0, 32.0, 0.0], [0.0587281659, 0.0, 0.0, 0.0], [-0.0298833661, 0.0, 0.0, 0.0], [-0.00110256893, 0.0, 0.0, 0.0], [-0.0890058577, 0.0, 0.0, 0.0], [0.107109964, 0.0, 0.0, 0.0], [-0.00349940965, 0.0, 0.0, 0.0], [0.0326969996, 0.0, 0.0, 0.0], [0.115322419, 0.0, 0.0, 0.0], [0.081291087, 0.0, 0.0, 0.0], [-0.0330090672, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 23, 24, 14, 25, 26, 27, 28, 17, 18, 10, 29, 30, 20, 21, 31, 32])
    branch_indices = np.array([0, 1, 4, 7, 13, 8, 15, 16, 2, 5, 9, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_666(xs):
    #Predicts Class 0
    function_dict = np.array([[0.338, 1.0, 2.0, 2.0], [-0.0414928459, 0.0, 0.0, 0.0], [-0.560500026, 3.0, 4.0, 1.0], [-0.597499967, 5.0, 6.0, 1.0], [-0.178499997, 7.0, 8.0, 0.0], [-0.89349997, 9.0, 10.0, 4.0], [0.0607559904, 0.0, 0.0, 0.0], [-0.0435712598, 0.0, 0.0, 0.0], [0.0152829979, 0.0, 0.0, 0.0], [-0.174499989, 11.0, 12.0, 0.0], [-0.990499973, 13.0, 14.0, 3.0], [0.0272261687, 0.0, 0.0, 0.0], [-0.02669039, 0.0, 0.0, 0.0], [-0.0632462129, 0.0, 0.0, 0.0], [0.0192109831, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 13, 14, 6, 7, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_667(xs):
    #Predicts Class 1
    function_dict = np.array([[0.490500003, 1.0, 2.0, 2.0], [-0.218499988, 3.0, 4.0, 0.0], [-0.334500015, 5.0, 6.0, 0.0], [-0.965499997, 7.0, 8.0, 4.0], [-0.169499993, 9.0, 10.0, 0.0], [-0.0341050476, 0.0, 0.0, 0.0], [-0.875499964, 11.0, 12.0, 4.0], [0.0138244489, 0.0, 0.0, 0.0], [-0.742500007, 13.0, 14.0, 1.0], [-0.963500023, 15.0, 16.0, 4.0], [-0.0391302146, 0.0, 0.0, 0.0], [-0.953500032, 17.0, 18.0, 4.0], [-0.0467942022, 0.0, 0.0, 0.0], [-0.0173847266, 0.0, 0.0, 0.0], [-0.0828805268, 0.0, 0.0, 0.0], [0.00581660448, 0.0, 0.0, 0.0], [0.0726107508, 0.0, 0.0, 0.0], [-0.245499998, 19.0, 20.0, 0.0], [-0.237500012, 21.0, 22.0, 0.0], [-0.0762062296, 0.0, 0.0, 0.0], [0.0264901873, 0.0, 0.0, 0.0], [0.101537563, 0.0, 0.0, 0.0], [-0.0178592429, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 15, 16, 10, 5, 19, 20, 21, 22, 12])
    branch_indices = np.array([0, 1, 3, 8, 4, 9, 2, 6, 11, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_668(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.950500011, 3.0, 4.0, 3.0], [-0.4745, 5.0, 6.0, 1.0], [0.443499982, 7.0, 8.0, 2.0], [0.0208372865, 0.0, 0.0, 0.0], [0.0616303049, 0.0, 0.0, 0.0], [-0.410000026, 9.0, 10.0, 1.0], [-0.20449999, 11.0, 12.0, 0.0], [-0.972499967, 13.0, 14.0, 3.0], [-0.0343551487, 0.0, 0.0, 0.0], [0.0240721889, 0.0, 0.0, 0.0], [0.0490353964, 0.0, 0.0, 0.0], [-0.0197381545, 0.0, 0.0, 0.0], [0.676499963, 15.0, 16.0, 2.0], [-0.0805508345, 0.0, 0.0, 0.0], [-0.0298155919, 0.0, 0.0, 0.0], [0.037684992, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 15, 16, 14, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 8, 13, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_669(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.443499982, 3.0, 4.0, 0.0], [-0.259499997, 5.0, 6.0, 0.0], [0.0199670084, 0.0, 0.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [0.0880252421, 0.0, 0.0, 0.0], [-0.210500002, 9.0, 10.0, 0.0], [-0.0538387373, 0.0, 0.0, 0.0], [-0.0198746808, 0.0, 0.0, 0.0], [-0.079237096, 0.0, 0.0, 0.0], [-0.2095, 11.0, 12.0, 0.0], [0.115721218, 0.0, 0.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.00463427464, 0.0, 0.0, 0.0], [0.0177725684, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 4, 2, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_670(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0929999948, 1.0, 2.0, 0.0], [-0.0965999961, 3.0, 4.0, 0.0], [-0.0908499956, 5.0, 6.0, 0.0], [-0.0998999998, 7.0, 8.0, 0.0], [0.217433497, 0.0, 0.0, 0.0], [-0.158064216, 0.0, 0.0, 0.0], [-0.0811500028, 9.0, 10.0, 0.0], [-0.102499999, 11.0, 12.0, 0.0], [-0.119298756, 0.0, 0.0, 0.0], [-0.0904500037, 13.0, 14.0, 0.0], [-0.0793000013, 15.0, 16.0, 0.0], [-0.104499996, 17.0, 18.0, 0.0], [0.0995424241, 0.0, 0.0, 0.0], [0.00154334528, 0.0, 0.0, 0.0], [0.173577785, 0.0, 0.0, 0.0], [-0.198701888, 0.0, 0.0, 0.0], [-0.076000005, 19.0, 20.0, 0.0], [0.00695894472, 0.0, 0.0, 0.0], [-0.153979659, 0.0, 0.0, 0.0], [0.135134563, 0.0, 0.0, 0.0], [-0.00397926336, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_671(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.0819453448, 0.0, 0.0, 0.0], [0.0765240192, 0.0, 0.0, 0.0], [-0.0128758764, 0.0, 0.0, 0.0], [0.543500006, 9.0, 10.0, 0.0], [0.557999969, 11.0, 12.0, 0.0], [0.539999962, 13.0, 14.0, 0.0], [-0.0668055415, 0.0, 0.0, 0.0], [0.0215866435, 0.0, 0.0, 0.0], [0.0758164078, 0.0, 0.0, 0.0], [-0.000891577161, 0.0, 0.0, 0.0], [0.0953803062, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_672(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.970499992, 3.0, 4.0, 4.0], [-0.183499992, 5.0, 6.0, 0.0], [-0.0600065589, 0.0, 0.0, 0.0], [-0.185000002, 7.0, 8.0, 0.0], [-0.969500005, 9.0, 10.0, 4.0], [-0.102499999, 11.0, 12.0, 0.0], [0.0453330725, 0.0, 0.0, 0.0], [-0.0396329463, 0.0, 0.0, 0.0], [0.0496465005, 0.0, 0.0, 0.0], [-0.206499994, 13.0, 14.0, 0.0], [-0.569499969, 15.0, 16.0, 1.0], [-0.0211443938, 0.0, 0.0, 0.0], [-0.740999997, 17.0, 18.0, 1.0], [-0.0788283721, 0.0, 0.0, 0.0], [0.0692370683, 0.0, 0.0, 0.0], [-0.000399583922, 0.0, 0.0, 0.0], [-0.0351342075, 0.0, 0.0, 0.0], [0.0238715522, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 17, 18, 14, 15, 16, 12])
    branch_indices = np.array([0, 1, 4, 2, 5, 10, 13, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_673(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.75849998, 1.0, 2.0, 1.0], [-0.281499982, 3.0, 4.0, 0.0], [0.468500018, 5.0, 6.0, 2.0], [0.027207572, 0.0, 0.0, 0.0], [-0.218499988, 7.0, 8.0, 0.0], [0.417500019, 9.0, 10.0, 2.0], [-0.967499971, 11.0, 12.0, 4.0], [0.412499994, 13.0, 14.0, 2.0], [-0.112499997, 15.0, 16.0, 0.0], [0.0148880351, 0.0, 0.0, 0.0], [0.0610559843, 0.0, 0.0, 0.0], [0.031928964, 0.0, 0.0, 0.0], [0.551499963, 17.0, 18.0, 2.0], [-0.00718911551, 0.0, 0.0, 0.0], [-0.0695856437, 0.0, 0.0, 0.0], [-0.962499976, 19.0, 20.0, 4.0], [-0.0354346633, 0.0, 0.0, 0.0], [-0.236499995, 21.0, 22.0, 0.0], [0.657500029, 23.0, 24.0, 2.0], [0.056108702, 0.0, 0.0, 0.0], [-0.0358989649, 0.0, 0.0, 0.0], [-0.0757825747, 0.0, 0.0, 0.0], [-0.00375920371, 0.0, 0.0, 0.0], [0.0318038799, 0.0, 0.0, 0.0], [-0.0320535563, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 19, 20, 16, 9, 10, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 4, 7, 8, 15, 2, 5, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_674(xs):
    #Predicts Class 2
    function_dict = np.array([[0.735499978, 1.0, 2.0, 2.0], [-0.889500022, 3.0, 4.0, 4.0], [-0.523999989, 5.0, 6.0, 1.0], [-0.24849999, 7.0, 8.0, 0.0], [-0.548500001, 9.0, 10.0, 1.0], [-0.00526738679, 0.0, 0.0, 0.0], [0.0457245521, 0.0, 0.0, 0.0], [-0.953500032, 11.0, 12.0, 4.0], [0.529500008, 13.0, 14.0, 2.0], [-0.0828119665, 0.0, 0.0, 0.0], [0.00725839799, 0.0, 0.0, 0.0], [0.0204385836, 0.0, 0.0, 0.0], [-0.072894156, 0.0, 0.0, 0.0], [-0.138500005, 15.0, 16.0, 0.0], [-0.956499994, 17.0, 18.0, 4.0], [-0.0324794687, 0.0, 0.0, 0.0], [0.0352022275, 0.0, 0.0, 0.0], [0.00838931091, 0.0, 0.0, 0.0], [0.0748402029, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 15, 16, 17, 18, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 13, 14, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_675(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.478500009, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [0.432500005, 15.0, 16.0, 0.0], [0.0673164278, 0.0, 0.0, 0.0], [-0.0836433545, 0.0, 0.0, 0.0], [-0.0265410766, 0.0, 0.0, 0.0], [0.0160524976, 0.0, 0.0, 0.0], [0.132306874, 0.0, 0.0, 0.0], [0.547500014, 17.0, 18.0, 0.0], [0.0852135196, 0.0, 0.0, 0.0], [0.428499997, 19.0, 20.0, 0.0], [0.434499979, 21.0, 22.0, 0.0], [0.539999962, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 1.0], [-0.00198929803, 0.0, 0.0, 0.0], [0.115826368, 0.0, 0.0, 0.0], [-0.103917718, 0.0, 0.0, 0.0], [-0.00962133612, 0.0, 0.0, 0.0], [-0.00373632577, 0.0, 0.0, 0.0], [-0.107277207, 0.0, 0.0, 0.0], [0.0392639041, 0.0, 0.0, 0.0], [-0.05243247, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 11, 12, 23, 24, 25, 26, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 6, 13, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_676(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0101999994, 3.0, 4.0, 0.0], [0.0237000007, 5.0, 6.0, 0.0], [0.00768500008, 7.0, 8.0, 0.0], [-0.167724982, 0.0, 0.0, 0.0], [0.209745601, 0.0, 0.0, 0.0], [-0.822000027, 9.0, 10.0, 2.0], [0.0042849998, 11.0, 12.0, 0.0], [0.159511328, 0.0, 0.0, 0.0], [0.03785, 13.0, 14.0, 0.0], [-0.73150003, 15.0, 16.0, 2.0], [0.00185999996, 17.0, 18.0, 0.0], [0.00588999968, 19.0, 20.0, 0.0], [0.0293500014, 21.0, 22.0, 0.0], [0.0476500019, 23.0, 24.0, 0.0], [0.184468716, 0.0, 0.0, 0.0], [-0.0310419798, 0.0, 0.0, 0.0], [-0.00330805918, 0.0, 0.0, 0.0], [0.162008002, 0.0, 0.0, 0.0], [-0.0514052473, 0.0, 0.0, 0.0], [-0.165741906, 0.0, 0.0, 0.0], [-0.00588312, 0.0, 0.0, 0.0], [-0.229121521, 0.0, 0.0, 0.0], [0.153511152, 0.0, 0.0, 0.0], [-0.0128177376, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 21, 22, 23, 24, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 13, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_677(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.040712636, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0689626783, 0.0, 0.0, 0.0], [0.534000039, 7.0, 8.0, 0.0], [0.0763305277, 0.0, 0.0, 0.0], [0.513000011, 9.0, 10.0, 0.0], [0.539999962, 11.0, 12.0, 0.0], [-0.000946079497, 0.0, 0.0, 0.0], [0.0499366336, 0.0, 0.0, 0.0], [-0.112559415, 0.0, 0.0, 0.0], [0.0102350721, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_678(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.213499993, 1.0, 2.0, 0.0], [-0.946500003, 3.0, 4.0, 4.0], [-0.1875, 5.0, 6.0, 0.0], [-0.768999994, 7.0, 8.0, 1.0], [-0.929499984, 9.0, 10.0, 4.0], [-0.902500033, 11.0, 12.0, 4.0], [-0.799499989, 13.0, 14.0, 1.0], [0.451000005, 15.0, 16.0, 2.0], [-0.0754387975, 0.0, 0.0, 0.0], [0.0528527983, 0.0, 0.0, 0.0], [-0.828999996, 17.0, 18.0, 4.0], [0.473999977, 19.0, 20.0, 2.0], [-0.0314843915, 0.0, 0.0, 0.0], [0.0406112745, 0.0, 0.0, 0.0], [-0.593500018, 21.0, 22.0, 1.0], [-0.0297820978, 0.0, 0.0, 0.0], [0.0309909955, 0.0, 0.0, 0.0], [-0.988499999, 23.0, 24.0, 3.0], [0.0305297449, 0.0, 0.0, 0.0], [-0.00957457907, 0.0, 0.0, 0.0], [0.0904290006, 0.0, 0.0, 0.0], [-0.944499969, 25.0, 26.0, 4.0], [0.0313415639, 0.0, 0.0, 0.0], [0.00724112894, 0.0, 0.0, 0.0], [-0.0785203949, 0.0, 0.0, 0.0], [-0.0743879825, 0.0, 0.0, 0.0], [-0.0105680767, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 9, 23, 24, 18, 19, 20, 12, 13, 25, 26, 22])
    branch_indices = np.array([0, 1, 3, 7, 4, 10, 17, 2, 5, 11, 6, 14, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_679(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.797500014, 1.0, 2.0, 1.0], [-0.978500009, 3.0, 4.0, 3.0], [-0.786499977, 5.0, 6.0, 1.0], [-0.230500013, 7.0, 8.0, 0.0], [0.0096945595, 0.0, 0.0, 0.0], [0.0469485, 0.0, 0.0, 0.0], [-0.95449996, 9.0, 10.0, 3.0], [-0.00307329488, 0.0, 0.0, 0.0], [-0.967499971, 11.0, 12.0, 4.0], [-0.766499996, 13.0, 14.0, 1.0], [-0.244500011, 15.0, 16.0, 0.0], [-0.0622843318, 0.0, 0.0, 0.0], [-0.0166509654, 0.0, 0.0, 0.0], [-0.0581419133, 0.0, 0.0, 0.0], [-0.718500018, 17.0, 18.0, 1.0], [0.06260629, 0.0, 0.0, 0.0], [-0.00629446376, 0.0, 0.0, 0.0], [0.0306866672, 0.0, 0.0, 0.0], [-0.013584883, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 4, 5, 13, 17, 18, 15, 16])
    branch_indices = np.array([0, 1, 3, 8, 2, 6, 9, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_680(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.930500031, 3.0, 4.0, 3.0], [-0.960500002, 5.0, 6.0, 3.0], [-0.756500006, 7.0, 8.0, 1.0], [0.0310824551, 0.0, 0.0, 0.0], [-0.789499998, 9.0, 10.0, 4.0], [0.657000005, 11.0, 12.0, 2.0], [-0.20449999, 13.0, 14.0, 0.0], [-0.943500042, 15.0, 16.0, 4.0], [-0.528499961, 17.0, 18.0, 1.0], [-0.0169138983, 0.0, 0.0, 0.0], [-0.0530422181, 0.0, 0.0, 0.0], [0.00959643256, 0.0, 0.0, 0.0], [0.0340221301, 0.0, 0.0, 0.0], [-0.0158539172, 0.0, 0.0, 0.0], [0.546499968, 19.0, 20.0, 2.0], [0.559499979, 21.0, 22.0, 2.0], [0.0782296583, 0.0, 0.0, 0.0], [0.614500046, 23.0, 24.0, 2.0], [-0.0328588746, 0.0, 0.0, 0.0], [0.0465880632, 0.0, 0.0, 0.0], [-0.0111018466, 0.0, 0.0, 0.0], [-0.0804807171, 0.0, 0.0, 0.0], [0.0507261157, 0.0, 0.0, 0.0], [-0.0342123993, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 19, 20, 21, 22, 4, 17, 23, 24, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 16, 2, 5, 9, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_681(xs):
    #Predicts Class 3
    function_dict = np.array([[0.503000021, 1.0, 2.0, 0.0], [0.466499984, 3.0, 4.0, 0.0], [0.513000011, 5.0, 6.0, 0.0], [0.463499993, 7.0, 8.0, 0.0], [0.4815, 9.0, 10.0, 0.0], [0.0951682404, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [0.436500013, 13.0, 14.0, 0.0], [0.081658721, 0.0, 0.0, 0.0], [-0.127073944, 0.0, 0.0, 0.0], [-0.0309204198, 0.0, 0.0, 0.0], [0.5255, 15.0, 16.0, 0.0], [0.0758607015, 0.0, 0.0, 0.0], [0.433499992, 17.0, 18.0, 0.0], [0.446500003, 19.0, 20.0, 0.0], [-0.0835346803, 0.0, 0.0, 0.0], [0.528499961, 21.0, 22.0, 0.0], [-0.00139746896, 0.0, 0.0, 0.0], [0.0573237427, 0.0, 0.0, 0.0], [-0.0803870559, 0.0, 0.0, 0.0], [0.0132120429, 0.0, 0.0, 0.0], [0.0971546099, 0.0, 0.0, 0.0], [-0.0103234146, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 15, 21, 22, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 11, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_682(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0914499983, 3.0, 4.0, 0.0], [-0.0720499977, 5.0, 6.0, 0.0], [-0.0973500013, 7.0, 8.0, 0.0], [0.145391494, 0.0, 0.0, 0.0], [-0.0771999955, 9.0, 10.0, 0.0], [-0.0673500001, 11.0, 12.0, 0.0], [-0.100500003, 13.0, 14.0, 0.0], [-0.125890449, 0.0, 0.0, 0.0], [-0.0896499977, 15.0, 16.0, 0.0], [-0.0742499977, 17.0, 18.0, 0.0], [0.160764456, 0.0, 0.0, 0.0], [-0.0579499975, 19.0, 20.0, 0.0], [-0.103500001, 21.0, 22.0, 0.0], [0.126291066, 0.0, 0.0, 0.0], [-0.175256371, 0.0, 0.0, 0.0], [0.052895423, 0.0, 0.0, 0.0], [-0.246056825, 0.0, 0.0, 0.0], [-0.049144987, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [-0.0494500026, 25.0, 26.0, 0.0], [0.00395978428, 0.0, 0.0, 0.0], [-0.0419458859, 0.0, 0.0, 0.0], [0.0502436832, 0.0, 0.0, 0.0], [-0.245873183, 0.0, 0.0, 0.0], [0.11443793, 0.0, 0.0, 0.0], [-0.00497796526, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 4, 15, 16, 17, 18, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 10, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_683(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.0877740681, 0.0, 0.0, 0.0], [0.615499973, 9.0, 10.0, 0.0], [-0.0128476275, 0.0, 0.0, 0.0], [0.543500006, 11.0, 12.0, 0.0], [0.06425827, 0.0, 0.0, 0.0], [0.077224955, 0.0, 0.0, 0.0], [0.023990849, 0.0, 0.0, 0.0], [0.537500024, 13.0, 14.0, 0.0], [-0.0735947862, 0.0, 0.0, 0.0], [-0.00176713325, 0.0, 0.0, 0.0], [0.0722360834, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_684(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.806499958, 1.0, 2.0, 4.0], [0.63349998, 3.0, 4.0, 2.0], [-0.730999947, 5.0, 6.0, 4.0], [-0.979499996, 7.0, 8.0, 4.0], [-0.615499973, 9.0, 10.0, 1.0], [-0.0623450503, 0.0, 0.0, 0.0], [0.0142784603, 0.0, 0.0, 0.0], [-0.0471868068, 0.0, 0.0, 0.0], [-0.825500011, 11.0, 12.0, 1.0], [0.0565767698, 0.0, 0.0, 0.0], [0.00416749204, 0.0, 0.0, 0.0], [0.0445961133, 0.0, 0.0, 0.0], [-0.281499982, 13.0, 14.0, 0.0], [-0.0576705001, 0.0, 0.0, 0.0], [0.00214681239, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 13, 14, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_685(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.729499996, 1.0, 2.0, 1.0], [-0.74150002, 3.0, 4.0, 1.0], [-0.393999994, 5.0, 6.0, 1.0], [-0.226500005, 7.0, 8.0, 0.0], [-0.0619011521, 0.0, 0.0, 0.0], [-0.207500011, 9.0, 10.0, 0.0], [-0.0240604561, 0.0, 0.0, 0.0], [-0.790500045, 11.0, 12.0, 1.0], [-0.791499972, 13.0, 14.0, 1.0], [-0.962499976, 15.0, 16.0, 4.0], [-0.950500011, 17.0, 18.0, 4.0], [-0.296499997, 19.0, 20.0, 0.0], [0.0638446957, 0.0, 0.0, 0.0], [-0.8125, 21.0, 22.0, 1.0], [-0.0642716736, 0.0, 0.0, 0.0], [0.0919481441, 0.0, 0.0, 0.0], [0.578000009, 23.0, 24.0, 2.0], [-0.0503480956, 0.0, 0.0, 0.0], [0.0194667447, 0.0, 0.0, 0.0], [-0.0396383926, 0.0, 0.0, 0.0], [0.012811943, 0.0, 0.0, 0.0], [-0.0179291535, 0.0, 0.0, 0.0], [0.032033328, 0.0, 0.0, 0.0], [-0.0337448306, 0.0, 0.0, 0.0], [0.0295678843, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 21, 22, 14, 4, 15, 23, 24, 17, 18, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 2, 5, 9, 16, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_686(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.930500031, 1.0, 2.0, 4.0], [0.649999976, 3.0, 4.0, 2.0], [-0.456499994, 5.0, 6.0, 1.0], [-0.985499978, 7.0, 8.0, 3.0], [-0.0666184351, 0.0, 0.0, 0.0], [-0.157000005, 9.0, 10.0, 0.0], [0.0543709025, 0.0, 0.0, 0.0], [-0.218499988, 11.0, 12.0, 0.0], [-0.21450001, 13.0, 14.0, 0.0], [-0.526499987, 15.0, 16.0, 1.0], [0.0451084562, 0.0, 0.0, 0.0], [-0.235500008, 17.0, 18.0, 0.0], [-0.180500001, 19.0, 20.0, 0.0], [-0.000969445216, 0.0, 0.0, 0.0], [0.0555495918, 0.0, 0.0, 0.0], [0.631500006, 21.0, 22.0, 2.0], [-0.0873149708, 0.0, 0.0, 0.0], [-0.0205228012, 0.0, 0.0, 0.0], [0.0527586676, 0.0, 0.0, 0.0], [-0.0943306759, 0.0, 0.0, 0.0], [0.0138002532, 0.0, 0.0, 0.0], [-0.0371727273, 0.0, 0.0, 0.0], [0.0466680117, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 21, 22, 16, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 5, 9, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_687(xs):
    #Predicts Class 3
    function_dict = np.array([[0.521499991, 1.0, 2.0, 0.0], [0.489499986, 3.0, 4.0, 0.0], [0.522500038, 5.0, 6.0, 0.0], [0.478500009, 7.0, 8.0, 0.0], [0.506000042, 9.0, 10.0, 0.0], [0.114807747, 0.0, 0.0, 0.0], [0.534000039, 11.0, 12.0, 0.0], [0.46450001, 13.0, 14.0, 0.0], [0.121057525, 0.0, 0.0, 0.0], [-0.0841679275, 0.0, 0.0, 0.0], [0.0020513651, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.972000003, 17.0, 18.0, 2.0], [0.446500003, 19.0, 20.0, 0.0], [-0.105049133, 0.0, 0.0, 0.0], [-0.103760213, 0.0, 0.0, 0.0], [0.0175936576, 0.0, 0.0, 0.0], [0.539999962, 21.0, 22.0, 0.0], [-0.114184789, 0.0, 0.0, 0.0], [-0.000842263224, 0.0, 0.0, 0.0], [0.0907517001, 0.0, 0.0, 0.0], [0.125410646, 0.0, 0.0, 0.0], [0.0189779606, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 9, 10, 5, 15, 16, 21, 22, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 11, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_688(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00974999927, 1.0, 2.0, 0.0], [0.0079549998, 3.0, 4.0, 0.0], [0.0203999989, 5.0, 6.0, 0.0], [0.00456999987, 7.0, 8.0, 0.0], [-0.188153028, 0.0, 0.0, 0.0], [0.0110500008, 9.0, 10.0, 0.0], [0.0240500011, 11.0, 12.0, 0.0], [0.00202000001, 13.0, 14.0, 0.0], [0.00655000005, 15.0, 16.0, 0.0], [0.0472086743, 0.0, 0.0, 0.0], [0.140033275, 0.0, 0.0, 0.0], [-0.129626557, 0.0, 0.0, 0.0], [0.02685, 17.0, 18.0, 0.0], [0.000549999997, 19.0, 20.0, 0.0], [0.00325499987, 21.0, 22.0, 0.0], [0.104524471, 0.0, 0.0, 0.0], [0.0119205238, 0.0, 0.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [0.0353999995, 25.0, 26.0, 0.0], [-0.00390944676, 0.0, 0.0, 0.0], [0.103920057, 0.0, 0.0, 0.0], [-0.17835255, 0.0, 0.0, 0.0], [-0.0349320807, 0.0, 0.0, 0.0], [0.15503943, 0.0, 0.0, 0.0], [0.00992882438, 0.0, 0.0, 0.0], [-0.100419946, 0.0, 0.0, 0.0], [0.00891968235, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 16, 4, 9, 10, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 2, 5, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_689(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.557999969, 7.0, 8.0, 0.0], [-0.0774365813, 0.0, 0.0, 0.0], [0.0653514341, 0.0, 0.0, 0.0], [-0.0102223884, 0.0, 0.0, 0.0], [0.556499958, 9.0, 10.0, 0.0], [0.0692635104, 0.0, 0.0, 0.0], [0.537500024, 11.0, 12.0, 0.0], [-0.0669655651, 0.0, 0.0, 0.0], [0.000350947405, 0.0, 0.0, 0.0], [0.0357323997, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_690(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0392442979, 0.0, 0.0, 0.0], [-0.792500019, 3.0, 4.0, 1.0], [-0.817499995, 5.0, 6.0, 1.0], [-0.776499987, 7.0, 8.0, 1.0], [-0.989500046, 9.0, 10.0, 3.0], [-0.99150002, 11.0, 12.0, 3.0], [-0.0561219864, 0.0, 0.0, 0.0], [-0.149500012, 13.0, 14.0, 0.0], [0.0317079201, 0.0, 0.0, 0.0], [-0.0385646299, 0.0, 0.0, 0.0], [-0.0142368739, 0.0, 0.0, 0.0], [0.0964853391, 0.0, 0.0, 0.0], [-0.266499996, 15.0, 16.0, 0.0], [0.637500048, 17.0, 18.0, 2.0], [0.0326867849, 0.0, 0.0, 0.0], [-0.0256458838, 0.0, 0.0, 0.0], [0.0723758563, 0.0, 0.0, 0.0], [-0.028003348, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 7, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 3, 5, 6, 4, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_691(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.975499988, 1.0, 2.0, 4.0], [-0.210500002, 3.0, 4.0, 0.0], [-0.9745, 5.0, 6.0, 3.0], [0.0182842482, 0.0, 0.0, 0.0], [-0.0516182519, 0.0, 0.0, 0.0], [-0.922500014, 7.0, 8.0, 4.0], [-0.922500014, 9.0, 10.0, 4.0], [-0.985499978, 11.0, 12.0, 3.0], [-0.902500033, 13.0, 14.0, 4.0], [-0.721499979, 15.0, 16.0, 1.0], [0.017232433, 0.0, 0.0, 0.0], [-0.74150002, 17.0, 18.0, 1.0], [0.0781899765, 0.0, 0.0, 0.0], [-0.0683219135, 0.0, 0.0, 0.0], [-0.871500015, 19.0, 20.0, 4.0], [-0.101740345, 0.0, 0.0, 0.0], [0.00959483907, 0.0, 0.0, 0.0], [0.0442450941, 0.0, 0.0, 0.0], [-0.0282982662, 0.0, 0.0, 0.0], [0.0423472747, 0.0, 0.0, 0.0], [-0.0274489652, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 17, 18, 12, 13, 19, 20, 15, 16, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 8, 14, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_692(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.149500012, 1.0, 2.0, 0.0], [-0.174499989, 3.0, 4.0, 0.0], [-0.918500006, 5.0, 6.0, 4.0], [-0.191500008, 7.0, 8.0, 0.0], [0.0518826656, 0.0, 0.0, 0.0], [-0.0533962399, 0.0, 0.0, 0.0], [0.00903556589, 0.0, 0.0, 0.0], [-0.200500011, 9.0, 10.0, 0.0], [-0.0408996977, 0.0, 0.0, 0.0], [-0.5995, 11.0, 12.0, 1.0], [0.0468871817, 0.0, 0.0, 0.0], [-0.0296972189, 0.0, 0.0, 0.0], [0.0208451413, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_693(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [-0.0759151503, 0.0, 0.0, 0.0], [0.0873991698, 0.0, 0.0, 0.0], [0.506000042, 9.0, 10.0, 0.0], [0.432500005, 11.0, 12.0, 0.0], [0.0614743754, 0.0, 0.0, 0.0], [-0.0595805757, 0.0, 0.0, 0.0], [0.537500024, 13.0, 14.0, 0.0], [0.428499997, 15.0, 16.0, 0.0], [0.434499979, 17.0, 18.0, 0.0], [0.521499991, 19.0, 20.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [-0.000698603981, 0.0, 0.0, 0.0], [0.0813506916, 0.0, 0.0, 0.0], [-0.0889003277, 0.0, 0.0, 0.0], [-0.0157980192, 0.0, 0.0, 0.0], [0.00169039029, 0.0, 0.0, 0.0], [0.0580524914, 0.0, 0.0, 0.0], [0.0105442619, 0.0, 0.0, 0.0], [-0.0821890682, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_694(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0929999948, 1.0, 2.0, 0.0], [-0.0965999961, 3.0, 4.0, 0.0], [-0.0908499956, 5.0, 6.0, 0.0], [-0.0998999998, 7.0, 8.0, 0.0], [0.206173465, 0.0, 0.0, 0.0], [-0.1321197, 0.0, 0.0, 0.0], [-0.0811500028, 9.0, 10.0, 0.0], [-0.102499999, 11.0, 12.0, 0.0], [-0.101592079, 0.0, 0.0, 0.0], [-0.0904500037, 13.0, 14.0, 0.0], [-0.0793000013, 15.0, 16.0, 0.0], [-0.104499996, 17.0, 18.0, 0.0], [0.0755913779, 0.0, 0.0, 0.0], [-0.00329232006, 0.0, 0.0, 0.0], [0.159738317, 0.0, 0.0, 0.0], [-0.163206652, 0.0, 0.0, 0.0], [-0.0728500038, 19.0, 20.0, 0.0], [0.00319433026, 0.0, 0.0, 0.0], [-0.113898508, 0.0, 0.0, 0.0], [0.089342773, 0.0, 0.0, 0.0], [-0.00579111697, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_695(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.348500013, 5.0, 6.0, 0.0], [0.5625, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [0.527500033, 13.0, 14.0, 0.0], [0.538499951, 15.0, 16.0, 0.0], [0.0880865455, 0.0, 0.0, 0.0], [-0.110401757, 0.0, 0.0, 0.0], [0.0399763957, 0.0, 0.0, 0.0], [-0.0371000022, 17.0, 18.0, 0.0], [-0.0723398924, 0.0, 0.0, 0.0], [0.0779443532, 0.0, 0.0, 0.0], [-0.021298822, 0.0, 0.0, 0.0], [0.527999997, 19.0, 20.0, 0.0], [0.541999996, 21.0, 22.0, 0.0], [-0.29549998, 23.0, 24.0, 0.0], [-0.997500002, 25.0, 26.0, 1.0], [-0.00442057569, 0.0, 0.0, 0.0], [0.14743951, 0.0, 0.0, 0.0], [-0.0891912878, 0.0, 0.0, 0.0], [-0.0120555693, 0.0, 0.0, 0.0], [0.0369963422, 0.0, 0.0, 0.0], [-0.0877973363, 0.0, 0.0, 0.0], [0.116897762, 0.0, 0.0, 0.0], [-0.0260293018, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 10, 23, 24, 25, 26, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 17, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_696(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.970499992, 3.0, 4.0, 4.0], [0.442499995, 5.0, 6.0, 2.0], [-0.051944267, 0.0, 0.0, 0.0], [-0.185000002, 7.0, 8.0, 0.0], [0.053530965, 0.0, 0.0, 0.0], [-0.179500014, 9.0, 10.0, 0.0], [0.0334267542, 0.0, 0.0, 0.0], [-0.0312627256, 0.0, 0.0, 0.0], [-0.24149999, 11.0, 12.0, 0.0], [-0.102499999, 13.0, 14.0, 0.0], [-0.253499985, 15.0, 16.0, 0.0], [0.496500015, 17.0, 18.0, 2.0], [-0.569499969, 19.0, 20.0, 1.0], [-0.017916156, 0.0, 0.0, 0.0], [-0.00666460069, 0.0, 0.0, 0.0], [0.0609426349, 0.0, 0.0, 0.0], [-0.0706375688, 0.0, 0.0, 0.0], [-0.00410444802, 0.0, 0.0, 0.0], [0.0590329207, 0.0, 0.0, 0.0], [0.00293100113, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 15, 16, 17, 18, 19, 20, 14])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 11, 12, 10, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_697(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.734500051, 1.0, 2.0, 1.0], [-0.281499982, 3.0, 4.0, 0.0], [-0.949499965, 5.0, 6.0, 4.0], [0.0222993419, 0.0, 0.0, 0.0], [-0.178499997, 7.0, 8.0, 0.0], [-0.210500002, 9.0, 10.0, 0.0], [-0.2465, 11.0, 12.0, 0.0], [0.412999988, 13.0, 14.0, 2.0], [-0.1105, 15.0, 16.0, 0.0], [-0.238499999, 17.0, 18.0, 0.0], [-0.0190327093, 0.0, 0.0, 0.0], [-0.305500001, 19.0, 20.0, 0.0], [-0.2095, 21.0, 22.0, 0.0], [0.329999983, 23.0, 24.0, 2.0], [-0.958500028, 25.0, 26.0, 4.0], [0.0437878072, 0.0, 0.0, 0.0], [-0.0180356726, 0.0, 0.0, 0.0], [-0.00675775111, 0.0, 0.0, 0.0], [0.103882365, 0.0, 0.0, 0.0], [-0.982499957, 27.0, 28.0, 3.0], [0.0453235097, 0.0, 0.0, 0.0], [-0.0730948299, 0.0, 0.0, 0.0], [0.0218894035, 0.0, 0.0, 0.0], [0.0263975728, 0.0, 0.0, 0.0], [-0.0123815443, 0.0, 0.0, 0.0], [-0.108236372, 0.0, 0.0, 0.0], [-0.00779788382, 0.0, 0.0, 0.0], [-0.0328767002, 0.0, 0.0, 0.0], [0.00869529229, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 23, 24, 25, 26, 15, 16, 17, 18, 10, 27, 28, 20, 21, 22])
    branch_indices = np.array([0, 1, 4, 7, 13, 14, 8, 2, 5, 9, 6, 11, 19, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_698(xs):
    #Predicts Class 2
    function_dict = np.array([[0.386500001, 1.0, 2.0, 2.0], [-0.0285847094, 0.0, 0.0, 0.0], [0.483500004, 3.0, 4.0, 2.0], [-0.743499994, 5.0, 6.0, 1.0], [0.529500008, 7.0, 8.0, 2.0], [0.00497023296, 0.0, 0.0, 0.0], [0.0472753756, 0.0, 0.0, 0.0], [-0.0403863639, 0.0, 0.0, 0.0], [-0.166500002, 9.0, 10.0, 0.0], [-0.528499961, 11.0, 12.0, 1.0], [-0.578999996, 13.0, 14.0, 1.0], [0.044612214, 0.0, 0.0, 0.0], [-0.0151495533, 0.0, 0.0, 0.0], [-0.0502949059, 0.0, 0.0, 0.0], [-0.000174546061, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 7, 11, 12, 13, 14])
    branch_indices = np.array([0, 2, 3, 4, 8, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_699(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.125499994, 1.0, 2.0, 0.0], [-0.12650001, 3.0, 4.0, 0.0], [-0.120499998, 5.0, 6.0, 0.0], [-0.129500002, 7.0, 8.0, 0.0], [0.176504508, 0.0, 0.0, 0.0], [-0.203611344, 0.0, 0.0, 0.0], [-0.118500002, 9.0, 10.0, 0.0], [-0.130499989, 11.0, 12.0, 0.0], [-0.111394659, 0.0, 0.0, 0.0], [0.120878942, 0.0, 0.0, 0.0], [-0.111500002, 13.0, 14.0, 0.0], [-0.131500006, 15.0, 16.0, 0.0], [0.132425666, 0.0, 0.0, 0.0], [-0.116499998, 17.0, 18.0, 0.0], [-0.105499998, 19.0, 20.0, 0.0], [0.00579781504, 0.0, 0.0, 0.0], [-0.0893125162, 0.0, 0.0, 0.0], [-0.0183677766, 0.0, 0.0, 0.0], [-0.11942599, 0.0, 0.0, 0.0], [0.0777686983, 0.0, 0.0, 0.0], [-0.00153252494, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_700(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0117000006, 3.0, 4.0, 0.0], [0.0237000007, 5.0, 6.0, 0.0], [0.00974999927, 7.0, 8.0, 0.0], [-0.192302212, 0.0, 0.0, 0.0], [0.164225385, 0.0, 0.0, 0.0], [0.0256000012, 9.0, 10.0, 0.0], [0.0042849998, 11.0, 12.0, 0.0], [0.109219112, 0.0, 0.0, 0.0], [-0.116276361, 0.0, 0.0, 0.0], [0.0368999988, 13.0, 14.0, 0.0], [0.00185999996, 15.0, 16.0, 0.0], [0.00768500008, 17.0, 18.0, 0.0], [0.028549999, 19.0, 20.0, 0.0], [0.0447499976, 21.0, 22.0, 0.0], [-0.00419830205, 0.0, 0.0, 0.0], [0.140085801, 0.0, 0.0, 0.0], [-0.122464754, 0.0, 0.0, 0.0], [0.0065424568, 0.0, 0.0, 0.0], [-0.0151637625, 0.0, 0.0, 0.0], [0.177223548, 0.0, 0.0, 0.0], [-0.122427635, 0.0, 0.0, 0.0], [0.00815625954, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_701(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0497157499, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0710184053, 0.0, 0.0, 0.0], [0.503000021, 7.0, 8.0, 0.0], [0.0706559718, 0.0, 0.0, 0.0], [0.466499984, 9.0, 10.0, 0.0], [0.513000011, 11.0, 12.0, 0.0], [0.000728355255, 0.0, 0.0, 0.0], [0.101956412, 0.0, 0.0, 0.0], [-0.0939027369, 0.0, 0.0, 0.0], [0.00500287022, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_702(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.0335144028, 0.0, 0.0, 0.0], [-0.792500019, 3.0, 4.0, 1.0], [-0.180500001, 5.0, 6.0, 0.0], [-0.957499981, 7.0, 8.0, 4.0], [-0.957499981, 9.0, 10.0, 4.0], [0.00163309625, 0.0, 0.0, 0.0], [0.511500001, 11.0, 12.0, 2.0], [-0.992499948, 13.0, 14.0, 3.0], [0.0586425923, 0.0, 0.0, 0.0], [0.0118953101, 0.0, 0.0, 0.0], [-0.0924077183, 0.0, 0.0, 0.0], [0.014863139, 0.0, 0.0, 0.0], [0.56099999, 15.0, 16.0, 2.0], [-0.987499952, 17.0, 18.0, 3.0], [0.0664608553, 0.0, 0.0, 0.0], [-0.00708945096, 0.0, 0.0, 0.0], [-0.0621443018, 0.0, 0.0, 0.0], [0.00798491761, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 6, 11, 12, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 3, 5, 4, 7, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_703(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.860499978, 1.0, 2.0, 1.0], [-0.0451093838, 0.0, 0.0, 0.0], [0.386500001, 3.0, 4.0, 2.0], [-0.208499998, 5.0, 6.0, 0.0], [-0.315500021, 7.0, 8.0, 0.0], [-0.00210436783, 0.0, 0.0, 0.0], [0.0607362725, 0.0, 0.0, 0.0], [-0.334500015, 9.0, 10.0, 0.0], [-0.797500014, 11.0, 12.0, 1.0], [0.000645823078, 0.0, 0.0, 0.0], [0.0571061634, 0.0, 0.0, 0.0], [-0.0579284057, 0.0, 0.0, 0.0], [-0.926499963, 13.0, 14.0, 4.0], [0.0132811535, 0.0, 0.0, 0.0], [-0.0401620232, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 9, 10, 11, 13, 14])
    branch_indices = np.array([0, 2, 3, 4, 7, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_704(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.484499991, 1.0, 2.0, 1.0], [-0.566499949, 3.0, 4.0, 1.0], [-0.435499996, 5.0, 6.0, 1.0], [0.605499983, 7.0, 8.0, 2.0], [-0.237000003, 9.0, 10.0, 0.0], [0.0478823632, 0.0, 0.0, 0.0], [-0.919499993, 11.0, 12.0, 4.0], [-0.202500001, 13.0, 14.0, 0.0], [-0.99150002, 15.0, 16.0, 3.0], [0.0259831678, 0.0, 0.0, 0.0], [-0.062824212, 0.0, 0.0, 0.0], [0.0281163789, 0.0, 0.0, 0.0], [-0.0369929262, 0.0, 0.0, 0.0], [0.443499982, 17.0, 18.0, 2.0], [-0.743499994, 19.0, 20.0, 1.0], [0.0567001514, 0.0, 0.0, 0.0], [-0.0060656541, 0.0, 0.0, 0.0], [0.018865725, 0.0, 0.0, 0.0], [-0.0859571397, 0.0, 0.0, 0.0], [-0.0286051631, 0.0, 0.0, 0.0], [0.0390854068, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 15, 16, 9, 10, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_705(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0914499983, 3.0, 4.0, 0.0], [-0.0896499977, 5.0, 6.0, 0.0], [-0.0968500003, 7.0, 8.0, 0.0], [-0.131147608, 0.0, 0.0, 0.0], [0.157284558, 0.0, 0.0, 0.0], [-0.0762000009, 9.0, 10.0, 0.0], [-0.1105, 11.0, 12.0, 0.0], [0.106386051, 0.0, 0.0, 0.0], [-0.0765018985, 0.0, 0.0, 0.0], [-0.0743499994, 13.0, 14.0, 0.0], [-0.1175, 15.0, 16.0, 0.0], [-0.104499996, 17.0, 18.0, 0.0], [0.157146052, 0.0, 0.0, 0.0], [-0.0599500015, 19.0, 20.0, 0.0], [-0.00393036148, 0.0, 0.0, 0.0], [0.0932303071, 0.0, 0.0, 0.0], [-0.12372379, 0.0, 0.0, 0.0], [-0.0146340486, 0.0, 0.0, 0.0], [-0.0565310456, 0.0, 0.0, 0.0], [0.00321218325, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_706(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0914499983, 3.0, 4.0, 0.0], [-0.0720499977, 5.0, 6.0, 0.0], [-0.0973500013, 7.0, 8.0, 0.0], [0.132913738, 0.0, 0.0, 0.0], [-0.0733499974, 9.0, 10.0, 0.0], [-0.0603, 11.0, 12.0, 0.0], [-0.108500004, 13.0, 14.0, 0.0], [-0.100291081, 0.0, 0.0, 0.0], [-0.0793000013, 15.0, 16.0, 0.0], [-0.193042427, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.0496499985, 19.0, 20.0, 0.0], [-0.1175, 21.0, 22.0, 0.0], [-0.104499996, 23.0, 24.0, 0.0], [-0.0896499977, 25.0, 26.0, 0.0], [-0.999500036, 27.0, 28.0, 4.0], [0.269264877, 0.0, 0.0, 0.0], [-0.0783934668, 0.0, 0.0, 0.0], [-0.0571999997, 29.0, 30.0, 0.0], [-0.0473999977, 31.0, 32.0, 0.0], [0.00363702513, 0.0, 0.0, 0.0], [-0.0896496847, 0.0, 0.0, 0.0], [0.124285057, 0.0, 0.0, 0.0], [0.0163012892, 0.0, 0.0, 0.0], [-0.154039368, 0.0, 0.0, 0.0], [-0.0439162031, 0.0, 0.0, 0.0], [0.130976662, 0.0, 0.0, 0.0], [-0.0648171902, 0.0, 0.0, 0.0], [0.00144451554, 0.0, 0.0, 0.0], [-0.184480622, 0.0, 0.0, 0.0], [0.158330977, 0.0, 0.0, 0.0], [-0.0036008507, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 8, 4, 25, 26, 27, 28, 10, 17, 18, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 9, 15, 16, 6, 11, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_707(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.0654838085, 0.0, 0.0, 0.0], [0.0691402331, 0.0, 0.0, 0.0], [-0.0164032225, 0.0, 0.0, 0.0], [0.538499951, 9.0, 10.0, 0.0], [0.0621674843, 0.0, 0.0, 0.0], [0.528499961, 11.0, 12.0, 0.0], [0.541499972, 13.0, 14.0, 0.0], [-0.000645198277, 0.0, 0.0, 0.0], [0.083997272, 0.0, 0.0, 0.0], [-0.0690426901, 0.0, 0.0, 0.0], [-0.0195624474, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_708(xs):
    #Predicts Class 0
    function_dict = np.array([[0.573500037, 1.0, 2.0, 2.0], [-0.281499982, 3.0, 4.0, 0.0], [-0.657500029, 5.0, 6.0, 1.0], [-0.0573386438, 0.0, 0.0, 0.0], [-0.256500006, 7.0, 8.0, 0.0], [0.628499985, 9.0, 10.0, 2.0], [0.671499968, 11.0, 12.0, 2.0], [0.0763286427, 0.0, 0.0, 0.0], [-0.70449996, 13.0, 14.0, 1.0], [0.0817389041, 0.0, 0.0, 0.0], [-0.00945838075, 0.0, 0.0, 0.0], [-0.0355948918, 0.0, 0.0, 0.0], [0.772500038, 15.0, 16.0, 2.0], [0.456499994, 17.0, 18.0, 2.0], [-0.983500004, 19.0, 20.0, 3.0], [0.0421295129, 0.0, 0.0, 0.0], [-0.027599087, 0.0, 0.0, 0.0], [-0.0194829069, 0.0, 0.0, 0.0], [0.0324009396, 0.0, 0.0, 0.0], [-0.0980798081, 0.0, 0.0, 0.0], [0.00713034393, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 17, 18, 19, 20, 9, 10, 11, 15, 16])
    branch_indices = np.array([0, 1, 4, 8, 13, 14, 2, 5, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_709(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.74849999, 1.0, 2.0, 1.0], [-0.770500004, 3.0, 4.0, 1.0], [-0.953500032, 5.0, 6.0, 4.0], [-0.923500001, 7.0, 8.0, 4.0], [-0.0591057241, 0.0, 0.0, 0.0], [-0.965499997, 9.0, 10.0, 4.0], [0.631500006, 11.0, 12.0, 2.0], [-0.952499986, 13.0, 14.0, 4.0], [0.0395097882, 0.0, 0.0, 0.0], [-0.996500015, 15.0, 16.0, 3.0], [-0.646999955, 17.0, 18.0, 1.0], [-0.956499994, 19.0, 20.0, 3.0], [0.701499999, 21.0, 22.0, 2.0], [-0.844500005, 23.0, 24.0, 1.0], [-0.0480135754, 0.0, 0.0, 0.0], [-0.0425096788, 0.0, 0.0, 0.0], [0.0712066963, 0.0, 0.0, 0.0], [-0.0794140175, 0.0, 0.0, 0.0], [0.00295050745, 0.0, 0.0, 0.0], [-0.213499993, 25.0, 26.0, 0.0], [-0.0110316351, 0.0, 0.0, 0.0], [-0.0436848439, 0.0, 0.0, 0.0], [0.0149416989, 0.0, 0.0, 0.0], [-0.0384144671, 0.0, 0.0, 0.0], [0.0371627174, 0.0, 0.0, 0.0], [0.0823125616, 0.0, 0.0, 0.0], [0.00998652074, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 8, 4, 15, 16, 17, 18, 25, 26, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 10, 6, 11, 19, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_710(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.24849999, 1.0, 2.0, 0.0], [-0.928499997, 3.0, 4.0, 4.0], [-0.892500043, 5.0, 6.0, 3.0], [-0.0452358313, 0.0, 0.0, 0.0], [-0.848500013, 7.0, 8.0, 4.0], [-0.889500022, 9.0, 10.0, 4.0], [-0.0361198299, 0.0, 0.0, 0.0], [0.0364501625, 0.0, 0.0, 0.0], [-0.0199751705, 0.0, 0.0, 0.0], [-0.959499955, 11.0, 12.0, 3.0], [-0.555999994, 13.0, 14.0, 1.0], [-0.217500001, 15.0, 16.0, 0.0], [0.0701620057, 0.0, 0.0, 0.0], [-0.0469007269, 0.0, 0.0, 0.0], [0.025468437, 0.0, 0.0, 0.0], [0.0445103571, 0.0, 0.0, 0.0], [-0.00977334846, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 15, 16, 12, 13, 14, 6])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 11, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_711(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.436500013, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.433499992, 7.0, 8.0, 0.0], [0.446500003, 9.0, 10.0, 0.0], [0.0890425667, 0.0, 0.0, 0.0], [0.506000042, 11.0, 12.0, 0.0], [0.429499984, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.0724820346, 0.0, 0.0, 0.0], [0.462500006, 17.0, 18.0, 0.0], [-0.0600057058, 0.0, 0.0, 0.0], [0.537500024, 19.0, 20.0, 0.0], [0.421999991, 21.0, 22.0, 0.0], [-0.096681416, 0.0, 0.0, 0.0], [0.127837092, 0.0, 0.0, 0.0], [-0.0246656183, 0.0, 0.0, 0.0], [0.000139294236, 0.0, 0.0, 0.0], [-0.017900642, 0.0, 0.0, 0.0], [0.523499966, 23.0, 24.0, 0.0], [0.543500006, 25.0, 26.0, 0.0], [-0.00119415799, 0.0, 0.0, 0.0], [0.0907686055, 0.0, 0.0, 0.0], [0.00525719207, 0.0, 0.0, 0.0], [0.079472214, 0.0, 0.0, 0.0], [-0.071917288, 0.0, 0.0, 0.0], [0.0116622737, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 9, 17, 18, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 10, 2, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_712(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0101999994, 3.0, 4.0, 0.0], [0.025150001, 5.0, 6.0, 0.0], [0.00768500008, 7.0, 8.0, 0.0], [-0.146995053, 0.0, 0.0, 0.0], [0.0234000012, 9.0, 10.0, 0.0], [0.0260500014, 11.0, 12.0, 0.0], [-0.000834999955, 13.0, 14.0, 0.0], [0.130531937, 0.0, 0.0, 0.0], [0.0312456209, 0.0, 0.0, 0.0], [0.13470301, 0.0, 0.0, 0.0], [-0.16892986, 0.0, 0.0, 0.0], [0.0417999998, 15.0, 16.0, 0.0], [-0.00163000007, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 4.0], [0.0353999995, 21.0, 22.0, 0.0], [0.0477499999, 23.0, 24.0, 0.0], [-0.00225808402, 0.0, 0.0, 0.0], [0.129736453, 0.0, 0.0, 0.0], [-0.128810182, 0.0, 0.0, 0.0], [0.175061539, 0.0, 0.0, 0.0], [0.00507534994, 0.0, 0.0, 0.0], [0.135193169, 0.0, 0.0, 0.0], [-0.124678321, 0.0, 0.0, 0.0], [0.00868693274, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 9, 10, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_713(xs):
    #Predicts Class 5
    function_dict = np.array([[0.272000015, 1.0, 2.0, 0.0], [0.260500014, 3.0, 4.0, 0.0], [0.276499987, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.0886833966, 0.0, 0.0, 0.0], [0.14710328, 0.0, 0.0, 0.0], [0.363499999, 9.0, 10.0, 0.0], [0.226999998, 11.0, 12.0, 0.0], [0.074746795, 0.0, 0.0, 0.0], [-0.0898787901, 0.0, 0.0, 0.0], [0.431500018, 13.0, 14.0, 0.0], [0.203500003, 15.0, 16.0, 0.0], [-0.104345173, 0.0, 0.0, 0.0], [0.424000025, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [-0.0029521822, 0.0, 0.0, 0.0], [0.0561701991, 0.0, 0.0, 0.0], [0.00474704988, 0.0, 0.0, 0.0], [0.131819263, 0.0, 0.0, 0.0], [-0.0155225564, 0.0, 0.0, 0.0], [0.0432719253, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_714(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.0726500005, 1.0, 2.0, 0.0], [-0.140500009, 3.0, 4.0, 0.0], [0.0250126701, 0.0, 0.0, 0.0], [0.414499998, 5.0, 6.0, 2.0], [-0.918500006, 7.0, 8.0, 4.0], [-0.0335817933, 0.0, 0.0, 0.0], [-0.969500005, 9.0, 10.0, 4.0], [-0.00165890402, 0.0, 0.0, 0.0], [-0.0553737171, 0.0, 0.0, 0.0], [0.0483549088, 0.0, 0.0, 0.0], [-0.946500003, 11.0, 12.0, 4.0], [-0.0328613333, 0.0, 0.0, 0.0], [0.0109236212, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 6, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_715(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.975499988, 1.0, 2.0, 4.0], [-0.210500002, 3.0, 4.0, 0.0], [-0.968500018, 5.0, 6.0, 4.0], [0.00725808507, 0.0, 0.0, 0.0], [-0.0487592183, 0.0, 0.0, 0.0], [0.48299998, 7.0, 8.0, 2.0], [0.455500007, 9.0, 10.0, 2.0], [-0.00143726263, 0.0, 0.0, 0.0], [0.0563226193, 0.0, 0.0, 0.0], [0.421499997, 11.0, 12.0, 2.0], [0.642500043, 13.0, 14.0, 2.0], [-0.229499996, 15.0, 16.0, 0.0], [0.0734163001, 0.0, 0.0, 0.0], [-0.932500005, 17.0, 18.0, 4.0], [-0.928499997, 19.0, 20.0, 4.0], [0.0209842417, 0.0, 0.0, 0.0], [-0.0382363275, 0.0, 0.0, 0.0], [-0.0554547645, 0.0, 0.0, 0.0], [0.00791498087, 0.0, 0.0, 0.0], [0.0497188084, 0.0, 0.0, 0.0], [-0.000707516621, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 15, 16, 12, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_716(xs):
    #Predicts Class 2
    function_dict = np.array([[0.476500005, 1.0, 2.0, 2.0], [-0.972499967, 3.0, 4.0, 4.0], [0.53550005, 5.0, 6.0, 2.0], [0.0147239072, 0.0, 0.0, 0.0], [-0.94749999, 7.0, 8.0, 4.0], [0.0484911799, 0.0, 0.0, 0.0], [-0.983500004, 9.0, 10.0, 3.0], [-0.0722692013, 0.0, 0.0, 0.0], [0.0112276431, 0.0, 0.0, 0.0], [-0.862499952, 11.0, 12.0, 4.0], [-0.872500002, 13.0, 14.0, 4.0], [-0.943500042, 15.0, 16.0, 4.0], [0.0412746705, 0.0, 0.0, 0.0], [0.65200001, 17.0, 18.0, 2.0], [-0.76849997, 19.0, 20.0, 4.0], [0.00495161349, 0.0, 0.0, 0.0], [-0.0895638764, 0.0, 0.0, 0.0], [0.0766275972, 0.0, 0.0, 0.0], [0.00816378929, 0.0, 0.0, 0.0], [-0.0468740314, 0.0, 0.0, 0.0], [0.0121693695, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 15, 16, 12, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 11, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_717(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.851999998, 1.0, 2.0, 2.0], [-0.885499954, 3.0, 4.0, 2.0], [-0.770500004, 5.0, 6.0, 2.0], [-0.125499994, 7.0, 8.0, 0.0], [-0.0832534507, 0.0, 0.0, 0.0], [-0.0527499989, 9.0, 10.0, 0.0], [0.101500005, 11.0, 12.0, 0.0], [-0.127499998, 13.0, 14.0, 0.0], [-0.120499998, 15.0, 16.0, 0.0], [-0.0759000033, 17.0, 18.0, 0.0], [-0.00303999986, 19.0, 20.0, 0.0], [-0.00567999994, 21.0, 22.0, 0.0], [0.047633674, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [0.119311288, 0.0, 0.0, 0.0], [-0.252335221, 0.0, 0.0, 0.0], [-0.118500002, 25.0, 26.0, 0.0], [0.03441846, 0.0, 0.0, 0.0], [0.15654251, 0.0, 0.0, 0.0], [-0.0628543198, 0.0, 0.0, 0.0], [0.0291999988, 27.0, 28.0, 0.0], [-0.0527999997, 29.0, 30.0, 0.0], [-0.116832443, 0.0, 0.0, 0.0], [-0.0133817438, 0.0, 0.0, 0.0], [0.091275692, 0.0, 0.0, 0.0], [0.156579226, 0.0, 0.0, 0.0], [-0.00359283225, 0.0, 0.0, 0.0], [0.0939043984, 0.0, 0.0, 0.0], [0.00640786625, 0.0, 0.0, 0.0], [-0.0305850822, 0.0, 0.0, 0.0], [0.0722935721, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 25, 26, 4, 17, 18, 19, 27, 28, 29, 30, 22, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 9, 10, 20, 6, 11, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_718(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.395500004, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.372500002, 5.0, 6.0, 0.0], [-0.0358249508, 0.0, 0.0, 0.0], [0.0751358196, 0.0, 0.0, 0.0], [-0.0731349215, 0.0, 0.0, 0.0], [-0.51699996, 7.0, 8.0, 2.0], [-0.629000008, 9.0, 10.0, 2.0], [0.0480786525, 0.0, 0.0, 0.0], [-0.205500007, 11.0, 12.0, 0.0], [-0.0782507882, 0.0, 0.0, 0.0], [0.0321984366, 0.0, 0.0, 0.0], [-0.00226908666, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 11, 12, 10, 8])
    branch_indices = np.array([0, 1, 2, 6, 7, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_719(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0436209701, 0.0, 0.0, 0.0], [0.5625, 5.0, 6.0, 0.0], [-0.0621509962, 0.0, 0.0, 0.0], [0.534000039, 7.0, 8.0, 0.0], [0.0735509023, 0.0, 0.0, 0.0], [0.513000011, 9.0, 10.0, 0.0], [0.539999962, 11.0, 12.0, 0.0], [-0.000210570637, 0.0, 0.0, 0.0], [0.0514878444, 0.0, 0.0, 0.0], [-0.0986579284, 0.0, 0.0, 0.0], [0.00934108347, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_720(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.971500039, 1.0, 2.0, 4.0], [-0.805500031, 3.0, 4.0, 1.0], [0.702499986, 5.0, 6.0, 2.0], [0.0183230136, 0.0, 0.0, 0.0], [-0.0488428995, 0.0, 0.0, 0.0], [-0.25849998, 7.0, 8.0, 0.0], [-0.984500051, 9.0, 10.0, 3.0], [-0.281499982, 11.0, 12.0, 0.0], [-0.213499993, 13.0, 14.0, 0.0], [0.0180203822, 0.0, 0.0, 0.0], [-0.0506537594, 0.0, 0.0, 0.0], [-0.987499952, 15.0, 16.0, 3.0], [0.0756536499, 0.0, 0.0, 0.0], [-0.765499949, 17.0, 18.0, 1.0], [-0.805500031, 19.0, 20.0, 1.0], [-0.0423401222, 0.0, 0.0, 0.0], [0.0325946063, 0.0, 0.0, 0.0], [0.0154333003, 0.0, 0.0, 0.0], [-0.0484808236, 0.0, 0.0, 0.0], [-0.0368137471, 0.0, 0.0, 0.0], [0.0324346237, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 12, 17, 18, 19, 20, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 8, 13, 14, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_721(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.851500034, 3.0, 4.0, 1.0], [-0.880499959, 5.0, 6.0, 4.0], [-0.0386961624, 0.0, 0.0, 0.0], [-0.953500032, 7.0, 8.0, 4.0], [-0.0676053613, 0.0, 0.0, 0.0], [-0.700500011, 9.0, 10.0, 1.0], [0.444499999, 11.0, 12.0, 2.0], [-0.982499957, 13.0, 14.0, 3.0], [0.0310832746, 0.0, 0.0, 0.0], [-0.00986304041, 0.0, 0.0, 0.0], [-0.973500013, 15.0, 16.0, 4.0], [-0.99849999, 17.0, 18.0, 3.0], [-0.76849997, 19.0, 20.0, 1.0], [-0.959499955, 21.0, 22.0, 3.0], [0.0139541989, 0.0, 0.0, 0.0], [-0.0675911456, 0.0, 0.0, 0.0], [-0.0428512841, 0.0, 0.0, 0.0], [0.0401881859, 0.0, 0.0, 0.0], [-0.0536704175, 0.0, 0.0, 0.0], [0.0325564779, 0.0, 0.0, 0.0], [0.0970071778, 0.0, 0.0, 0.0], [-0.00418222044, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 15, 16, 17, 18, 19, 20, 21, 22, 5, 9, 10])
    branch_indices = np.array([0, 1, 4, 7, 11, 12, 8, 13, 14, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_722(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.210500002, 3.0, 4.0, 0.0], [-0.4745, 5.0, 6.0, 1.0], [-0.963500023, 7.0, 8.0, 4.0], [-0.179500014, 9.0, 10.0, 0.0], [0.0554035157, 0.0, 0.0, 0.0], [-0.410000026, 11.0, 12.0, 1.0], [0.0121425847, 0.0, 0.0, 0.0], [-0.245499998, 13.0, 14.0, 0.0], [0.529500008, 15.0, 16.0, 2.0], [-0.995499969, 17.0, 18.0, 3.0], [-0.0276947878, 0.0, 0.0, 0.0], [0.0206202883, 0.0, 0.0, 0.0], [0.0020903761, 0.0, 0.0, 0.0], [-0.0610481091, 0.0, 0.0, 0.0], [-0.0114433989, 0.0, 0.0, 0.0], [0.0504971445, 0.0, 0.0, 0.0], [-0.0426363051, 0.0, 0.0, 0.0], [-0.897500038, 19.0, 20.0, 4.0], [0.0349967815, 0.0, 0.0, 0.0], [-0.0329353251, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 15, 16, 17, 19, 20, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 8, 4, 9, 10, 18, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_723(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.273499995, 1.0, 2.0, 0.0], [-0.284500003, 3.0, 4.0, 0.0], [-0.210500002, 5.0, 6.0, 0.0], [-0.37349999, 7.0, 8.0, 0.0], [-0.283500016, 9.0, 10.0, 0.0], [-0.0830013156, 0.0, 0.0, 0.0], [-0.2095, 11.0, 12.0, 0.0], [0.0163934529, 0.0, 0.0, 0.0], [-0.035296157, 0.0, 0.0, 0.0], [0.0718910769, 0.0, 0.0, 0.0], [0.0180350821, 0.0, 0.0, 0.0], [0.10064932, 0.0, 0.0, 0.0], [-0.111500002, 13.0, 14.0, 0.0], [-0.119499996, 15.0, 16.0, 0.0], [-0.105499998, 17.0, 18.0, 0.0], [0.00114057562, 0.0, 0.0, 0.0], [-0.100855075, 0.0, 0.0, 0.0], [0.112220086, 0.0, 0.0, 0.0], [-0.000111855516, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 5, 11, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 4, 2, 6, 12, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_724(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.1505, 5.0, 6.0, 0.0], [-0.186500013, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0697448403, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [-0.20449999, 13.0, 14.0, 0.0], [-0.163500011, 15.0, 16.0, 0.0], [0.13365984, 0.0, 0.0, 0.0], [-0.997500002, 17.0, 18.0, 1.0], [-0.999500036, 19.0, 20.0, 4.0], [-0.120499998, 21.0, 22.0, 0.0], [-0.205500007, 23.0, 24.0, 0.0], [-0.191500008, 25.0, 26.0, 0.0], [-0.168500006, 27.0, 28.0, 0.0], [-0.150962874, 0.0, 0.0, 0.0], [-0.747500002, 29.0, 30.0, 2.0], [0.0323258489, 0.0, 0.0, 0.0], [-0.111500002, 31.0, 32.0, 0.0], [0.0107000005, 33.0, 34.0, 0.0], [-0.13001141, 0.0, 0.0, 0.0], [-0.02575, 35.0, 36.0, 0.0], [-0.0077458946, 0.0, 0.0, 0.0], [-0.131584808, 0.0, 0.0, 0.0], [0.130262747, 0.0, 0.0, 0.0], [0.0208587665, 0.0, 0.0, 0.0], [-0.0968413204, 0.0, 0.0, 0.0], [-0.00358169805, 0.0, 0.0, 0.0], [-0.0840293691, 0.0, 0.0, 0.0], [0.00791069493, 0.0, 0.0, 0.0], [0.0222113281, 0.0, 0.0, 0.0], [-0.0110862134, 0.0, 0.0, 0.0], [0.0665161982, 0.0, 0.0, 0.0], [-0.0993382558, 0.0, 0.0, 0.0], [0.0664027929, 0.0, 0.0, 0.0], [-0.0575006977, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 27, 28, 16, 9, 29, 30, 18, 5, 31, 32, 33, 34, 21, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 10, 17, 2, 6, 11, 19, 20, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_725(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.537500024, 7.0, 8.0, 0.0], [-0.0856819749, 0.0, 0.0, 0.0], [0.615499973, 9.0, 10.0, 0.0], [-0.0177049786, 0.0, 0.0, 0.0], [0.521499991, 11.0, 12.0, 0.0], [0.543500006, 13.0, 14.0, 0.0], [0.0772387162, 0.0, 0.0, 0.0], [0.0180509351, 0.0, 0.0, 0.0], [0.466499984, 15.0, 16.0, 0.0], [0.522500038, 17.0, 18.0, 0.0], [0.0692722723, 0.0, 0.0, 0.0], [0.549000025, 19.0, 20.0, 0.0], [-0.00130328594, 0.0, 0.0, 0.0], [0.0436643213, 0.0, 0.0, 0.0], [-0.0801548362, 0.0, 0.0, 0.0], [-0.0271182731, 0.0, 0.0, 0.0], [-0.0502496175, 0.0, 0.0, 0.0], [0.0491791889, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 13, 19, 20, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_726(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.994500041, 3.0, 4.0, 3.0], [-0.700500011, 5.0, 6.0, 1.0], [-0.0467312485, 0.0, 0.0, 0.0], [0.00714945607, 0.0, 0.0, 0.0], [-0.17050001, 7.0, 8.0, 0.0], [0.558500051, 9.0, 10.0, 2.0], [-0.202500001, 11.0, 12.0, 0.0], [-0.0273192748, 0.0, 0.0, 0.0], [-0.98150003, 13.0, 14.0, 3.0], [-0.259499997, 15.0, 16.0, 0.0], [-0.218499988, 17.0, 18.0, 0.0], [0.0713321045, 0.0, 0.0, 0.0], [-0.0996862352, 0.0, 0.0, 0.0], [0.0238046311, 0.0, 0.0, 0.0], [-0.0300050769, 0.0, 0.0, 0.0], [-0.989500046, 19.0, 20.0, 3.0], [0.0285309218, 0.0, 0.0, 0.0], [-0.0454965383, 0.0, 0.0, 0.0], [0.0450274572, 0.0, 0.0, 0.0], [-0.00404501846, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 17, 18, 12, 8, 13, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_727(xs):
    #Predicts Class 1
    function_dict = np.array([[0.570500016, 1.0, 2.0, 2.0], [-0.70449996, 3.0, 4.0, 1.0], [-0.236499995, 5.0, 6.0, 0.0], [-0.281499982, 7.0, 8.0, 0.0], [-0.271499991, 9.0, 10.0, 0.0], [-0.277500004, 11.0, 12.0, 0.0], [-0.0489831865, 0.0, 0.0, 0.0], [0.050129015, 0.0, 0.0, 0.0], [-0.234499991, 13.0, 14.0, 0.0], [-0.0131493611, 0.0, 0.0, 0.0], [-0.657500029, 15.0, 16.0, 1.0], [0.642500043, 17.0, 18.0, 2.0], [0.0441330299, 0.0, 0.0, 0.0], [-0.0602399334, 0.0, 0.0, 0.0], [-0.949499965, 19.0, 20.0, 4.0], [0.0649153069, 0.0, 0.0, 0.0], [0.0135451779, 0.0, 0.0, 0.0], [-0.0609150827, 0.0, 0.0, 0.0], [0.0167122912, 0.0, 0.0, 0.0], [-0.0242214166, 0.0, 0.0, 0.0], [0.0496212021, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 19, 20, 9, 15, 16, 17, 18, 12, 6])
    branch_indices = np.array([0, 1, 3, 8, 14, 4, 10, 2, 5, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_728(xs):
    #Predicts Class 2
    function_dict = np.array([[0.386500001, 1.0, 2.0, 2.0], [-0.0266329572, 0.0, 0.0, 0.0], [-0.965499997, 3.0, 4.0, 3.0], [-0.767500043, 5.0, 6.0, 4.0], [-0.946500003, 7.0, 8.0, 3.0], [-0.922500014, 9.0, 10.0, 4.0], [-0.0259917974, 0.0, 0.0, 0.0], [-0.0588398911, 0.0, 0.0, 0.0], [-0.892500043, 11.0, 12.0, 3.0], [-0.743499994, 13.0, 14.0, 1.0], [-0.996500015, 15.0, 16.0, 3.0], [0.0394481234, 0.0, 0.0, 0.0], [-0.0140699223, 0.0, 0.0, 0.0], [-0.0389542431, 0.0, 0.0, 0.0], [0.0204441771, 0.0, 0.0, 0.0], [-0.0115454532, 0.0, 0.0, 0.0], [0.0709532276, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 15, 16, 6, 7, 11, 12])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_729(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.129500002, 1.0, 2.0, 0.0], [-0.130499989, 3.0, 4.0, 0.0], [-0.12650001, 5.0, 6.0, 0.0], [-0.131500006, 7.0, 8.0, 0.0], [0.104512423, 0.0, 0.0, 0.0], [-0.100244544, 0.0, 0.0, 0.0], [-0.125499994, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.0659970194, 0.0, 0.0, 0.0], [0.0950568467, 0.0, 0.0, 0.0], [-0.120499998, 13.0, 14.0, 0.0], [-0.140500009, 15.0, 16.0, 0.0], [-0.822000027, 17.0, 18.0, 2.0], [-0.132297054, 0.0, 0.0, 0.0], [-0.119499996, 19.0, 20.0, 0.0], [-0.00828381442, 0.0, 0.0, 0.0], [0.0530396402, 0.0, 0.0, 0.0], [-0.128100604, 0.0, 0.0, 0.0], [0.0267644972, 0.0, 0.0, 0.0], [0.128187299, 0.0, 0.0, 0.0], [-0.00193145452, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_730(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00185999996, 1.0, 2.0, 0.0], [-0.00132499996, 3.0, 4.0, 0.0], [0.0042849998, 5.0, 6.0, 0.0], [-0.00463499967, 7.0, 8.0, 0.0], [0.000549999997, 9.0, 10.0, 0.0], [0.133171484, 0.0, 0.0, 0.0], [0.00974999927, 11.0, 12.0, 0.0], [-0.0052199997, 13.0, 14.0, 0.0], [-0.00200500013, 15.0, 16.0, 0.0], [-0.000834999955, 17.0, 18.0, 0.0], [-0.0258445628, 0.0, 0.0, 0.0], [0.00588999968, 19.0, 20.0, 0.0], [0.0203999989, 21.0, 22.0, 0.0], [-0.00894000009, 23.0, 24.0, 0.0], [-0.153409779, 0.0, 0.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [-0.0170234255, 0.0, 0.0, 0.0], [-0.0297503993, 0.0, 0.0, 0.0], [-0.155929238, 0.0, 0.0, 0.0], [0.00354781863, 0.0, 0.0, 0.0], [0.00768500008, 27.0, 28.0, 0.0], [0.0110500008, 29.0, 30.0, 0.0], [0.0240500011, 31.0, 32.0, 0.0], [-0.00566154625, 0.0, 0.0, 0.0], [0.13402921, 0.0, 0.0, 0.0], [0.163521856, 0.0, 0.0, 0.0], [0.0193054192, 0.0, 0.0, 0.0], [-0.103625245, 0.0, 0.0, 0.0], [-0.0271644145, 0.0, 0.0, 0.0], [0.0207097512, 0.0, 0.0, 0.0], [0.148857564, 0.0, 0.0, 0.0], [-0.137176335, 0.0, 0.0, 0.0], [0.0131562473, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 25, 26, 16, 17, 18, 10, 5, 19, 27, 28, 29, 30, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 9, 2, 6, 11, 20, 12, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_731(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.401000023, 1.0, 2.0, 0.0], [-0.420000017, 3.0, 4.0, 0.0], [-0.38349998, 5.0, 6.0, 0.0], [-0.46450001, 7.0, 8.0, 0.0], [0.0868908316, 0.0, 0.0, 0.0], [-0.0936183631, 0.0, 0.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [0.0418132395, 0.0, 0.0, 0.0], [-0.0543517806, 0.0, 0.0, 0.0], [0.0502039567, 0.0, 0.0, 0.0], [-0.161500007, 11.0, 12.0, 0.0], [-0.1655, 13.0, 14.0, 0.0], [-0.0742499977, 15.0, 16.0, 0.0], [-0.0150592746, 0.0, 0.0, 0.0], [-0.0606772043, 0.0, 0.0, 0.0], [0.0485155918, 0.0, 0.0, 0.0], [-0.00232039648, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_732(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.961500049, 1.0, 2.0, 4.0], [-0.180500001, 3.0, 4.0, 0.0], [-0.779500008, 5.0, 6.0, 1.0], [-0.759500027, 7.0, 8.0, 1.0], [-0.131500006, 9.0, 10.0, 0.0], [-0.291999996, 11.0, 12.0, 0.0], [0.452499986, 13.0, 14.0, 2.0], [0.0293409154, 0.0, 0.0, 0.0], [-0.028380312, 0.0, 0.0, 0.0], [-0.0697061867, 0.0, 0.0, 0.0], [0.00632677367, 0.0, 0.0, 0.0], [-0.0211976636, 0.0, 0.0, 0.0], [0.0631865561, 0.0, 0.0, 0.0], [-0.0455602556, 0.0, 0.0, 0.0], [-0.990499973, 15.0, 16.0, 3.0], [0.662500024, 17.0, 18.0, 2.0], [-0.644999981, 19.0, 20.0, 1.0], [-0.043915458, 0.0, 0.0, 0.0], [0.0228615049, 0.0, 0.0, 0.0], [0.0624001957, 0.0, 0.0, 0.0], [-0.0105210571, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 6, 14, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_733(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.95449996, 3.0, 4.0, 3.0], [-0.877499998, 5.0, 6.0, 4.0], [-0.9745, 7.0, 8.0, 3.0], [-0.921499968, 9.0, 10.0, 3.0], [-0.0533035174, 0.0, 0.0, 0.0], [0.0152293621, 0.0, 0.0, 0.0], [-0.975499988, 11.0, 12.0, 4.0], [-0.035443157, 0.0, 0.0, 0.0], [0.0545055121, 0.0, 0.0, 0.0], [0.00717471167, 0.0, 0.0, 0.0], [-0.983500004, 13.0, 14.0, 4.0], [-0.956499994, 15.0, 16.0, 4.0], [0.00588312931, 0.0, 0.0, 0.0], [-0.0517598316, 0.0, 0.0, 0.0], [0.0397319011, 0.0, 0.0, 0.0], [-0.00826665666, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_734(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.294499993, 1.0, 2.0, 0.0], [-0.42750001, 3.0, 4.0, 1.0], [0.693500042, 5.0, 6.0, 2.0], [-0.0492707305, 0.0, 0.0, 0.0], [0.0130524663, 0.0, 0.0, 0.0], [0.63349998, 7.0, 8.0, 2.0], [-0.188999996, 9.0, 10.0, 0.0], [-0.982499957, 11.0, 12.0, 3.0], [-0.978500009, 13.0, 14.0, 3.0], [0.0549754277, 0.0, 0.0, 0.0], [-0.0182163715, 0.0, 0.0, 0.0], [-0.997500002, 15.0, 16.0, 3.0], [-0.67750001, 17.0, 18.0, 1.0], [-0.0533879027, 0.0, 0.0, 0.0], [-0.0018486944, 0.0, 0.0, 0.0], [-0.0133999512, 0.0, 0.0, 0.0], [0.0467770435, 0.0, 0.0, 0.0], [0.000221807888, 0.0, 0.0, 0.0], [-0.0348888114, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 17, 18, 13, 14, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_735(xs):
    #Predicts Class 3
    function_dict = np.array([[0.428499997, 1.0, 2.0, 0.0], [0.418500006, 3.0, 4.0, 0.0], [0.432500005, 5.0, 6.0, 0.0], [0.407999992, 7.0, 8.0, 0.0], [0.42049998, 9.0, 10.0, 0.0], [0.0967735499, 0.0, 0.0, 0.0], [0.434499979, 11.0, 12.0, 0.0], [0.201499999, 13.0, 14.0, 0.0], [0.0934722945, 0.0, 0.0, 0.0], [-0.0286441017, 0.0, 0.0, 0.0], [-0.0956870168, 0.0, 0.0, 0.0], [-0.0832014903, 0.0, 0.0, 0.0], [0.436500013, 15.0, 16.0, 0.0], [0.0945499986, 17.0, 18.0, 0.0], [0.212500006, 19.0, 20.0, 0.0], [0.0791879743, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.00191116799, 0.0, 0.0, 0.0], [0.0406114683, 0.0, 0.0, 0.0], [-0.110695161, 0.0, 0.0, 0.0], [0.0084677171, 0.0, 0.0, 0.0], [-0.00339741819, 0.0, 0.0, 0.0], [0.0679066852, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_736(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.0910999998, 3.0, 4.0, 0.0], [-0.67050004, 5.0, 6.0, 2.0], [-0.0987499952, 7.0, 8.0, 0.0], [-0.0905500054, 9.0, 10.0, 0.0], [-0.997500002, 11.0, 12.0, 1.0], [-0.119499996, 13.0, 14.0, 0.0], [-0.103500001, 15.0, 16.0, 0.0], [-0.0927000046, 17.0, 18.0, 0.0], [-0.153145149, 0.0, 0.0, 0.0], [-0.0767499954, 19.0, 20.0, 0.0], [-0.770500004, 21.0, 22.0, 2.0], [0.0435102098, 0.0, 0.0, 0.0], [-0.546000004, 23.0, 24.0, 2.0], [-0.99849999, 25.0, 26.0, 1.0], [-0.105499998, 27.0, 28.0, 0.0], [-0.0674910024, 0.0, 0.0, 0.0], [0.180565134, 0.0, 0.0, 0.0], [0.0077423281, 0.0, 0.0, 0.0], [0.0977248624, 0.0, 0.0, 0.0], [-0.0656000003, 29.0, 30.0, 0.0], [-0.203500003, 31.0, 32.0, 0.0], [-0.0135375047, 0.0, 0.0, 0.0], [0.109497964, 0.0, 0.0, 0.0], [-0.0343354791, 0.0, 0.0, 0.0], [-0.00333158509, 0.0, 0.0, 0.0], [-0.0625699535, 0.0, 0.0, 0.0], [0.00225685188, 0.0, 0.0, 0.0], [0.157855779, 0.0, 0.0, 0.0], [-0.106846198, 0.0, 0.0, 0.0], [0.00425272575, 0.0, 0.0, 0.0], [-0.0420283191, 0.0, 0.0, 0.0], [-0.137905747, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 16, 17, 18, 9, 19, 29, 30, 31, 32, 22, 12, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 4, 10, 20, 2, 5, 11, 21, 6, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_737(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.253000021, 5.0, 6.0, 0.0], [0.5625, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [-0.418500006, 11.0, 12.0, 0.0], [0.344999999, 13.0, 14.0, 0.0], [0.547500014, 15.0, 16.0, 0.0], [0.0698727891, 0.0, 0.0, 0.0], [-0.0910057724, 0.0, 0.0, 0.0], [0.0254619922, 0.0, 0.0, 0.0], [0.0564925522, 0.0, 0.0, 0.0], [-0.770500004, 17.0, 18.0, 2.0], [0.133296713, 0.0, 0.0, 0.0], [0.430999994, 19.0, 20.0, 0.0], [0.527999997, 21.0, 22.0, 0.0], [-0.0457784049, 0.0, 0.0, 0.0], [-0.0765499994, 23.0, 24.0, 0.0], [-0.601000011, 25.0, 26.0, 2.0], [-0.0695164651, 0.0, 0.0, 0.0], [0.527500033, 27.0, 28.0, 0.0], [-0.00591625134, 0.0, 0.0, 0.0], [0.0424340703, 0.0, 0.0, 0.0], [-0.0825078487, 0.0, 0.0, 0.0], [-0.0229981411, 0.0, 0.0, 0.0], [0.0838589519, 0.0, 0.0, 0.0], [-0.062704213, 0.0, 0.0, 0.0], [0.0555429533, 0.0, 0.0, 0.0], [-0.01439186, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 8, 9, 10, 11, 23, 24, 25, 26, 13, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 12, 17, 18, 6, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_738(xs):
    #Predicts Class 0
    function_dict = np.array([[0.338, 1.0, 2.0, 2.0], [-0.0304280967, 0.0, 0.0, 0.0], [-0.0742499977, 3.0, 4.0, 0.0], [-0.140500009, 5.0, 6.0, 0.0], [0.034759365, 0.0, 0.0, 0.0], [-0.228500009, 7.0, 8.0, 0.0], [0.56400001, 9.0, 10.0, 2.0], [-0.938500047, 11.0, 12.0, 4.0], [0.441500008, 13.0, 14.0, 2.0], [-0.0512328222, 0.0, 0.0, 0.0], [-0.00181019341, 0.0, 0.0, 0.0], [-0.0436441414, 0.0, 0.0, 0.0], [0.0176411252, 0.0, 0.0, 0.0], [0.0706133991, 0.0, 0.0, 0.0], [0.00552975619, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 13, 14, 9, 10, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_739(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.138500005, 1.0, 2.0, 0.0], [0.407499999, 3.0, 4.0, 2.0], [-0.0207302403, 0.0, 0.0, 0.0], [-0.814499974, 5.0, 6.0, 1.0], [0.444499999, 7.0, 8.0, 2.0], [-0.00844771694, 0.0, 0.0, 0.0], [0.0554195829, 0.0, 0.0, 0.0], [-0.0483178273, 0.0, 0.0, 0.0], [0.657500029, 9.0, 10.0, 2.0], [-0.990499973, 11.0, 12.0, 3.0], [-0.990499973, 13.0, 14.0, 3.0], [0.0339120515, 0.0, 0.0, 0.0], [-0.0121580604, 0.0, 0.0, 0.0], [-0.0551664829, 0.0, 0.0, 0.0], [0.00865639932, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 7, 11, 12, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 4, 8, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_740(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.712499976, 1.0, 2.0, 4.0], [-0.186500013, 3.0, 4.0, 0.0], [0.0296203196, 0.0, 0.0, 0.0], [-0.756500006, 5.0, 6.0, 1.0], [-0.149500012, 7.0, 8.0, 0.0], [0.0244237147, 0.0, 0.0, 0.0], [-0.222499996, 9.0, 10.0, 0.0], [0.0519012883, 0.0, 0.0, 0.0], [-0.642500043, 11.0, 12.0, 1.0], [-0.919499993, 13.0, 14.0, 4.0], [0.593500018, 15.0, 16.0, 2.0], [-0.0403630957, 0.0, 0.0, 0.0], [0.0280321836, 0.0, 0.0, 0.0], [0.0224947054, 0.0, 0.0, 0.0], [-0.0372675732, 0.0, 0.0, 0.0], [-0.065883562, 0.0, 0.0, 0.0], [-0.0177784003, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 13, 14, 15, 16, 7, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 6, 9, 10, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_741(xs):
    #Predicts Class 3
    function_dict = np.array([[0.487500012, 1.0, 2.0, 0.0], [0.466499984, 3.0, 4.0, 0.0], [0.513000011, 5.0, 6.0, 0.0], [0.463499993, 7.0, 8.0, 0.0], [-0.124348439, 0.0, 0.0, 0.0], [0.080072701, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.455500007, 11.0, 12.0, 0.0], [0.0744511336, 0.0, 0.0, 0.0], [0.5255, 13.0, 14.0, 0.0], [0.0795170963, 0.0, 0.0, 0.0], [0.445500016, 15.0, 16.0, 0.0], [-0.0744218677, 0.0, 0.0, 0.0], [-0.0917295292, 0.0, 0.0, 0.0], [0.537500024, 17.0, 18.0, 0.0], [-0.00152937905, 0.0, 0.0, 0.0], [0.0555921011, 0.0, 0.0, 0.0], [0.0711679757, 0.0, 0.0, 0.0], [-0.0107654771, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 13, 17, 18, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_742(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0892499983, 1.0, 2.0, 0.0], [0.0883999988, 3.0, 4.0, 0.0], [0.0917500034, 5.0, 6.0, 0.0], [0.0850500017, 7.0, 8.0, 0.0], [-0.109303437, 0.0, 0.0, 0.0], [0.116308264, 0.0, 0.0, 0.0], [0.1105, 9.0, 10.0, 0.0], [0.0760499984, 11.0, 12.0, 0.0], [0.073465094, 0.0, 0.0, 0.0], [0.0945499986, 13.0, 14.0, 0.0], [0.157999992, 15.0, 16.0, 0.0], [0.0740500018, 17.0, 18.0, 0.0], [0.0825999975, 19.0, 20.0, 0.0], [0.0189441349, 0.0, 0.0, 0.0], [-0.13371855, 0.0, 0.0, 0.0], [0.1241863, 0.0, 0.0, 0.0], [0.193500012, 21.0, 22.0, 0.0], [-0.00099629676, 0.0, 0.0, 0.0], [0.102288999, 0.0, 0.0, 0.0], [-0.172769144, 0.0, 0.0, 0.0], [0.0103066871, 0.0, 0.0, 0.0], [-0.0954901651, 0.0, 0.0, 0.0], [0.0229189657, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 13, 14, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_743(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.0798635483, 0.0, 0.0, 0.0], [0.0734143555, 0.0, 0.0, 0.0], [-0.0120049017, 0.0, 0.0, 0.0], [0.534000039, 9.0, 10.0, 0.0], [0.0430939123, 0.0, 0.0, 0.0], [0.513000011, 11.0, 12.0, 0.0], [0.539999962, 13.0, 14.0, 0.0], [-0.00163648266, 0.0, 0.0, 0.0], [0.040278241, 0.0, 0.0, 0.0], [-0.0946940258, 0.0, 0.0, 0.0], [-0.00543558737, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_744(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.0580499992, 1.0, 2.0, 0.0], [-0.560500026, 3.0, 4.0, 1.0], [-0.0369269438, 0.0, 0.0, 0.0], [-0.107500002, 5.0, 6.0, 0.0], [-0.738499999, 7.0, 8.0, 4.0], [0.463499993, 9.0, 10.0, 2.0], [0.0554921329, 0.0, 0.0, 0.0], [-0.0506109521, 0.0, 0.0, 0.0], [0.0196286533, 0.0, 0.0, 0.0], [-0.234499991, 11.0, 12.0, 0.0], [-0.847000003, 13.0, 14.0, 4.0], [0.0224219281, 0.0, 0.0, 0.0], [-0.0395666286, 0.0, 0.0, 0.0], [0.0286978018, 0.0, 0.0, 0.0], [-0.0372875072, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_745(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 3.0], [-0.654500008, 3.0, 4.0, 1.0], [-0.651499987, 5.0, 6.0, 1.0], [0.466499984, 7.0, 8.0, 2.0], [0.0267214477, 0.0, 0.0, 0.0], [0.536499977, 9.0, 10.0, 2.0], [-0.309499979, 11.0, 12.0, 0.0], [0.388000011, 13.0, 14.0, 2.0], [-0.06191976, 0.0, 0.0, 0.0], [-0.995499969, 15.0, 16.0, 3.0], [-0.276499987, 17.0, 18.0, 0.0], [0.038754154, 0.0, 0.0, 0.0], [0.638499975, 19.0, 20.0, 2.0], [-0.0246600863, 0.0, 0.0, 0.0], [0.0276726149, 0.0, 0.0, 0.0], [0.0648321435, 0.0, 0.0, 0.0], [0.407499999, 21.0, 22.0, 2.0], [-0.00950527377, 0.0, 0.0, 0.0], [0.0704901963, 0.0, 0.0, 0.0], [-0.0629559308, 0.0, 0.0, 0.0], [0.00363423862, 0.0, 0.0, 0.0], [0.0190017167, 0.0, 0.0, 0.0], [-0.0490336195, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 15, 21, 22, 17, 18, 11, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 9, 16, 10, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_746(xs):
    #Predicts Class 2
    function_dict = np.array([[0.476500005, 1.0, 2.0, 2.0], [-0.972499967, 3.0, 4.0, 4.0], [0.53550005, 5.0, 6.0, 2.0], [0.0117737986, 0.0, 0.0, 0.0], [-0.948500037, 7.0, 8.0, 4.0], [0.039241191, 0.0, 0.0, 0.0], [0.60650003, 9.0, 10.0, 2.0], [-0.0567115992, 0.0, 0.0, 0.0], [0.00388506078, 0.0, 0.0, 0.0], [-0.222499996, 11.0, 12.0, 0.0], [-0.996500015, 13.0, 14.0, 3.0], [0.0112770209, 0.0, 0.0, 0.0], [-0.0460642278, 0.0, 0.0, 0.0], [0.0459984764, 0.0, 0.0, 0.0], [-0.484499991, 15.0, 16.0, 1.0], [-0.0324820392, 0.0, 0.0, 0.0], [0.0279702209, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 11, 12, 13, 15, 16])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_747(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.436500013, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.434499979, 7.0, 8.0, 0.0], [0.446500003, 9.0, 10.0, 0.0], [0.0800809339, 0.0, 0.0, 0.0], [0.506000042, 11.0, 12.0, 0.0], [0.424000025, 13.0, 14.0, 0.0], [0.0696307123, 0.0, 0.0, 0.0], [-0.0696052611, 0.0, 0.0, 0.0], [0.462500006, 15.0, 16.0, 0.0], [-0.0578229241, 0.0, 0.0, 0.0], [0.528499961, 17.0, 18.0, 0.0], [0.419499993, 19.0, 20.0, 0.0], [0.431500018, 21.0, 22.0, 0.0], [0.00759912468, 0.0, 0.0, 0.0], [-0.035522297, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [0.538499951, 25.0, 26.0, 0.0], [-0.000710356922, 0.0, 0.0, 0.0], [0.0761415139, 0.0, 0.0, 0.0], [-0.114753306, 0.0, 0.0, 0.0], [0.0194482319, 0.0, 0.0, 0.0], [0.073661074, 0.0, 0.0, 0.0], [0.00558679178, 0.0, 0.0, 0.0], [-0.100890137, 0.0, 0.0, 0.0], [0.0180473439, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 9, 15, 16, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 2, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_748(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.190499991, 1.0, 2.0, 0.0], [-0.205500007, 3.0, 4.0, 0.0], [-0.169499993, 5.0, 6.0, 0.0], [-0.273499995, 7.0, 8.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.0695400685, 0.0, 0.0, 0.0], [-0.16049999, 11.0, 12.0, 0.0], [-0.795000017, 13.0, 14.0, 2.0], [-0.851999998, 15.0, 16.0, 2.0], [-0.191500008, 17.0, 18.0, 0.0], [-0.107706912, 0.0, 0.0, 0.0], [-0.1655, 19.0, 20.0, 0.0], [-0.1505, 21.0, 22.0, 0.0], [-0.297500014, 23.0, 24.0, 0.0], [0.0524593033, 0.0, 0.0, 0.0], [0.0858918205, 0.0, 0.0, 0.0], [-0.0173446052, 0.0, 0.0, 0.0], [-0.20449999, 25.0, 26.0, 0.0], [-0.100558937, 0.0, 0.0, 0.0], [-0.168500006, 27.0, 28.0, 0.0], [-0.0658755302, 0.0, 0.0, 0.0], [0.0639805868, 0.0, 0.0, 0.0], [-0.141499996, 29.0, 30.0, 0.0], [0.00763709657, 0.0, 0.0, 0.0], [-0.0608359054, 0.0, 0.0, 0.0], [-0.100126803, 0.0, 0.0, 0.0], [0.103946455, 0.0, 0.0, 0.0], [-0.0266317241, 0.0, 0.0, 0.0], [0.0341613144, 0.0, 0.0, 0.0], [-0.0468453094, 0.0, 0.0, 0.0], [0.0011260804, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 25, 26, 18, 10, 5, 27, 28, 20, 21, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 9, 17, 2, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_749(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.997500002, 1.0, 2.0, 4.0], [0.2755, 3.0, 4.0, 0.0], [0.0523644052, 0.0, 0.0, 0.0], [0.264499992, 5.0, 6.0, 0.0], [0.286500007, 7.0, 8.0, 0.0], [0.256500006, 9.0, 10.0, 0.0], [-0.116629981, 0.0, 0.0, 0.0], [0.109373964, 0.0, 0.0, 0.0], [0.363499999, 11.0, 12.0, 0.0], [-0.0123999994, 13.0, 14.0, 0.0], [0.057691168, 0.0, 0.0, 0.0], [-0.0829344466, 0.0, 0.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.00988010317, 0.0, 0.0, 0.0], [-0.059637282, 0.0, 0.0, 0.0], [0.000267702359, 0.0, 0.0, 0.0], [0.0566225164, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 11, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_750(xs):
    #Predicts Class 0
    function_dict = np.array([[0.713500023, 1.0, 2.0, 2.0], [0.669499993, 3.0, 4.0, 2.0], [0.772500038, 5.0, 6.0, 2.0], [0.63349998, 7.0, 8.0, 2.0], [-0.0416573845, 0.0, 0.0, 0.0], [0.0508739389, 0.0, 0.0, 0.0], [-0.0170381423, 0.0, 0.0, 0.0], [-0.782500029, 9.0, 10.0, 1.0], [0.0369018912, 0.0, 0.0, 0.0], [-0.961500049, 11.0, 12.0, 4.0], [-0.874500036, 13.0, 14.0, 4.0], [-0.0118584177, 0.0, 0.0, 0.0], [0.0330827571, 0.0, 0.0, 0.0], [-0.0344913602, 0.0, 0.0, 0.0], [0.0421999171, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_751(xs):
    #Predicts Class 1
    function_dict = np.array([[0.361499995, 1.0, 2.0, 2.0], [-0.219500005, 3.0, 4.0, 0.0], [0.539499998, 5.0, 6.0, 2.0], [0.00845381804, 0.0, 0.0, 0.0], [-0.0420487672, 0.0, 0.0, 0.0], [-0.658499956, 7.0, 8.0, 1.0], [-0.235500008, 9.0, 10.0, 0.0], [-0.228500009, 11.0, 12.0, 0.0], [0.0612025559, 0.0, 0.0, 0.0], [-0.908499956, 13.0, 14.0, 4.0], [-0.651499987, 15.0, 16.0, 1.0], [-0.74150002, 17.0, 18.0, 1.0], [-0.17050001, 19.0, 20.0, 0.0], [-0.617499948, 21.0, 22.0, 1.0], [-0.871500015, 23.0, 24.0, 4.0], [0.0026533308, 0.0, 0.0, 0.0], [-0.0587391593, 0.0, 0.0, 0.0], [0.0664294586, 0.0, 0.0, 0.0], [-0.0211650953, 0.0, 0.0, 0.0], [-0.0442625433, 0.0, 0.0, 0.0], [0.032865826, 0.0, 0.0, 0.0], [-0.0441939086, 0.0, 0.0, 0.0], [0.0324622653, 0.0, 0.0, 0.0], [0.0561460964, 0.0, 0.0, 0.0], [0.0012599522, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 17, 18, 19, 20, 8, 21, 22, 23, 24, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 12, 6, 9, 13, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_752(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.24849999, 1.0, 2.0, 0.0], [-0.895500004, 3.0, 4.0, 4.0], [0.529500008, 5.0, 6.0, 2.0], [-0.987499952, 7.0, 8.0, 3.0], [0.0209056642, 0.0, 0.0, 0.0], [-0.673500001, 9.0, 10.0, 1.0], [-0.183499992, 11.0, 12.0, 0.0], [-0.0616043024, 0.0, 0.0, 0.0], [-0.00671874173, 0.0, 0.0, 0.0], [-0.965499997, 13.0, 14.0, 4.0], [-0.0524600297, 0.0, 0.0, 0.0], [-0.541499972, 15.0, 16.0, 1.0], [-0.978999972, 17.0, 18.0, 3.0], [-0.0195952971, 0.0, 0.0, 0.0], [0.0354528315, 0.0, 0.0, 0.0], [-0.904500008, 19.0, 20.0, 4.0], [-0.00793072302, 0.0, 0.0, 0.0], [-0.0353563391, 0.0, 0.0, 0.0], [0.0238063633, 0.0, 0.0, 0.0], [0.0793214142, 0.0, 0.0, 0.0], [0.00452597253, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 13, 14, 10, 19, 20, 16, 17, 18])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 6, 11, 15, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_753(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.654500008, 3.0, 4.0, 2.0], [0.0689999983, 5.0, 6.0, 0.0], [-0.680500031, 7.0, 8.0, 2.0], [-0.644500017, 9.0, 10.0, 2.0], [0.0218653679, 0.0, 0.0, 0.0], [-0.0953621194, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.0792420357, 0.0, 0.0, 0.0], [0.099152714, 0.0, 0.0, 0.0], [-0.00736000016, 13.0, 14.0, 0.0], [-0.120499998, 15.0, 16.0, 0.0], [-0.0562999994, 17.0, 18.0, 0.0], [0.0619422458, 0.0, 0.0, 0.0], [-0.0895930305, 0.0, 0.0, 0.0], [-0.0148724616, 0.0, 0.0, 0.0], [0.00735495007, 0.0, 0.0, 0.0], [0.0413178802, 0.0, 0.0, 0.0], [-0.0635512993, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 9, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_754(xs):
    #Predicts Class 4
    function_dict = np.array([[0.196500003, 1.0, 2.0, 0.0], [0.190499991, 3.0, 4.0, 0.0], [-0.0415070429, 0.0, 0.0, 0.0], [0.111500002, 5.0, 6.0, 0.0], [0.194499999, 7.0, 8.0, 0.0], [0.0941499993, 9.0, 10.0, 0.0], [-0.0843107179, 0.0, 0.0, 0.0], [0.0802181363, 0.0, 0.0, 0.0], [0.00845594518, 0.0, 0.0, 0.0], [0.0894500017, 11.0, 12.0, 0.0], [0.0784052685, 0.0, 0.0, 0.0], [0.000359279802, 0.0, 0.0, 0.0], [-0.0808215812, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_755(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.212500006, 5.0, 6.0, 0.0], [0.5625, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.428499997, 13.0, 14.0, 0.0], [0.547500014, 15.0, 16.0, 0.0], [0.0621803701, 0.0, 0.0, 0.0], [-0.0864006132, 0.0, 0.0, 0.0], [0.0269757323, 0.0, 0.0, 0.0], [-0.0607894585, 0.0, 0.0, 0.0], [-0.639999986, 17.0, 18.0, 2.0], [-0.923500001, 19.0, 20.0, 2.0], [0.538500011, 21.0, 22.0, 0.0], [0.409500003, 23.0, 24.0, 0.0], [-0.0429812931, 0.0, 0.0, 0.0], [-0.795000017, 25.0, 26.0, 2.0], [-0.0572136156, 0.0, 0.0, 0.0], [0.11705061, 0.0, 0.0, 0.0], [-0.00539569976, 0.0, 0.0, 0.0], [0.43599999, 27.0, 28.0, 0.0], [0.0787780285, 0.0, 0.0, 0.0], [-0.00951840635, 0.0, 0.0, 0.0], [0.0153224878, 0.0, 0.0, 0.0], [0.00732662249, 0.0, 0.0, 0.0], [0.09515737, 0.0, 0.0, 0.0], [-0.0550874062, 0.0, 0.0, 0.0], [0.000934179057, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 9, 10, 11, 25, 26, 18, 19, 20, 27, 28, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 12, 17, 6, 13, 14, 21])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_756(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.281499982, 1.0, 2.0, 0.0], [-0.987499952, 3.0, 4.0, 3.0], [-0.109499998, 5.0, 6.0, 0.0], [-0.0448652431, 0.0, 0.0, 0.0], [0.0107801175, 0.0, 0.0, 0.0], [-0.992499948, 7.0, 8.0, 3.0], [-0.993499994, 9.0, 10.0, 3.0], [-0.995499969, 11.0, 12.0, 3.0], [0.446500003, 13.0, 14.0, 2.0], [-0.0480117016, 0.0, 0.0, 0.0], [0.0148808379, 0.0, 0.0, 0.0], [0.541999996, 15.0, 16.0, 2.0], [0.0640408248, 0.0, 0.0, 0.0], [-0.038401708, 0.0, 0.0, 0.0], [0.534500003, 17.0, 18.0, 2.0], [-0.0242616609, 0.0, 0.0, 0.0], [0.0385019444, 0.0, 0.0, 0.0], [0.0476795547, 0.0, 0.0, 0.0], [-0.0145191047, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 12, 13, 17, 18, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 8, 14, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_757(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.851500034, 1.0, 2.0, 1.0], [-0.0296316314, 0.0, 0.0, 0.0], [-0.291500002, 3.0, 4.0, 0.0], [0.603500009, 5.0, 6.0, 2.0], [0.591500044, 7.0, 8.0, 2.0], [0.532000005, 9.0, 10.0, 2.0], [-0.987499952, 11.0, 12.0, 3.0], [-0.973500013, 13.0, 14.0, 4.0], [0.636500001, 15.0, 16.0, 2.0], [0.0140004111, 0.0, 0.0, 0.0], [0.064467743, 0.0, 0.0, 0.0], [0.0226401165, 0.0, 0.0, 0.0], [-0.0370324254, 0.0, 0.0, 0.0], [0.416000009, 17.0, 18.0, 2.0], [0.386500001, 19.0, 20.0, 2.0], [0.0551730767, 0.0, 0.0, 0.0], [-0.0097581083, 0.0, 0.0, 0.0], [0.00473294081, 0.0, 0.0, 0.0], [0.0452794954, 0.0, 0.0, 0.0], [0.0316599011, 0.0, 0.0, 0.0], [-0.0427313559, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 17, 18, 19, 20, 15, 16])
    branch_indices = np.array([0, 2, 3, 5, 6, 4, 7, 13, 14, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_758(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.205500007, 3.0, 4.0, 0.0], [-0.960500002, 5.0, 6.0, 3.0], [-0.996500015, 7.0, 8.0, 3.0], [-0.155499995, 9.0, 10.0, 0.0], [-0.789499998, 11.0, 12.0, 4.0], [-0.226500005, 13.0, 14.0, 0.0], [0.00310906861, 0.0, 0.0, 0.0], [-0.0585446581, 0.0, 0.0, 0.0], [-0.985499978, 15.0, 16.0, 3.0], [-0.0225280691, 0.0, 0.0, 0.0], [-0.997500002, 17.0, 18.0, 3.0], [-0.0135316784, 0.0, 0.0, 0.0], [0.00813837163, 0.0, 0.0, 0.0], [-0.0450147428, 0.0, 0.0, 0.0], [-0.00768386247, 0.0, 0.0, 0.0], [0.0645524487, 0.0, 0.0, 0.0], [-0.0120747099, 0.0, 0.0, 0.0], [-0.451499999, 19.0, 20.0, 1.0], [0.0877784193, 0.0, 0.0, 0.0], [-0.0223005284, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 15, 16, 10, 17, 19, 20, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 4, 9, 2, 5, 11, 18, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_759(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.851999998, 1.0, 2.0, 2.0], [-0.885499954, 3.0, 4.0, 2.0], [-0.0698499978, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 4.0], [-0.0509971045, 0.0, 0.0, 0.0], [-0.120499998, 9.0, 10.0, 0.0], [0.000950000016, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [-0.129500002, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [-0.0870309398, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.0533500016, 21.0, 22.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [0.074791804, 0.0, 0.0, 0.0], [-0.145999998, 25.0, 26.0, 0.0], [0.0145500004, 27.0, 28.0, 0.0], [-0.0460475199, 0.0, 0.0, 0.0], [-0.639999986, 29.0, 30.0, 2.0], [-0.0472499989, 31.0, 32.0, 0.0], [-0.037254788, 0.0, 0.0, 0.0], [-0.0916823894, 0.0, 0.0, 0.0], [-0.626000047, 33.0, 34.0, 2.0], [0.00272035645, 0.0, 0.0, 0.0], [-0.0524927899, 0.0, 0.0, 0.0], [-0.0248774234, 0.0, 0.0, 0.0], [0.121163741, 0.0, 0.0, 0.0], [-0.113099732, 0.0, 0.0, 0.0], [0.0419156253, 0.0, 0.0, 0.0], [0.114487238, 0.0, 0.0, 0.0], [-0.0577075891, 0.0, 0.0, 0.0], [0.0364629626, 0.0, 0.0, 0.0], [0.186635792, 0.0, 0.0, 0.0], [0.0990792438, 0.0, 0.0, 0.0], [-0.0643528327, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 25, 26, 27, 28, 4, 17, 29, 30, 10, 31, 32, 20, 21, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 2, 5, 9, 18, 6, 11, 19, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_760(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.414000005, 3.0, 4.0, 0.0], [-0.0403999984, 5.0, 6.0, 0.0], [-0.0640151426, 0.0, 0.0, 0.0], [-0.274500012, 7.0, 8.0, 0.0], [-0.119499996, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [-0.393000007, 13.0, 14.0, 0.0], [-0.2095, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.13665545, 0.0, 0.0, 0.0], [0.115382917, 0.0, 0.0, 0.0], [-0.67050004, 19.0, 20.0, 2.0], [-0.00742101064, 0.0, 0.0, 0.0], [-0.297500014, 21.0, 22.0, 0.0], [-0.0867980421, 0.0, 0.0, 0.0], [-0.186500013, 23.0, 24.0, 0.0], [-0.206499994, 25.0, 26.0, 0.0], [-0.249500006, 27.0, 28.0, 0.0], [0.00931515172, 0.0, 0.0, 0.0], [-0.0547420792, 0.0, 0.0, 0.0], [0.101603396, 0.0, 0.0, 0.0], [0.0246731751, 0.0, 0.0, 0.0], [0.0559997894, 0.0, 0.0, 0.0], [-0.0012963257, 0.0, 0.0, 0.0], [0.0385913774, 0.0, 0.0, 0.0], [-0.174223945, 0.0, 0.0, 0.0], [-0.0815053657, 0.0, 0.0, 0.0], [0.118473329, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 21, 22, 15, 23, 24, 25, 26, 27, 28, 10, 11, 19, 20])
    branch_indices = np.array([0, 1, 4, 7, 14, 8, 16, 2, 5, 9, 17, 18, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_761(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0450319275, 0.0, 0.0, 0.0], [0.557999969, 5.0, 6.0, 0.0], [-0.0608670227, 0.0, 0.0, 0.0], [0.503000021, 7.0, 8.0, 0.0], [0.0490980968, 0.0, 0.0, 0.0], [0.46450001, 9.0, 10.0, 0.0], [0.513000011, 11.0, 12.0, 0.0], [0.000743634242, 0.0, 0.0, 0.0], [0.0708969831, 0.0, 0.0, 0.0], [-0.0775792375, 0.0, 0.0, 0.0], [-0.00225754874, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_762(xs):
    #Predicts Class 0
    function_dict = np.array([[0.478500009, 1.0, 2.0, 2.0], [0.456499994, 3.0, 4.0, 2.0], [0.522500038, 5.0, 6.0, 2.0], [-0.972499967, 7.0, 8.0, 4.0], [0.0420102961, 0.0, 0.0, 0.0], [-0.941499949, 9.0, 10.0, 4.0], [-0.943500042, 11.0, 12.0, 4.0], [-0.0262046307, 0.0, 0.0, 0.0], [0.398499995, 13.0, 14.0, 2.0], [-0.00524509046, 0.0, 0.0, 0.0], [-0.0603846125, 0.0, 0.0, 0.0], [-0.2095, 15.0, 16.0, 0.0], [-0.911499977, 17.0, 18.0, 4.0], [0.0391028859, 0.0, 0.0, 0.0], [-0.776499987, 19.0, 20.0, 1.0], [-0.0570651218, 0.0, 0.0, 0.0], [0.0191953145, 0.0, 0.0, 0.0], [0.0557122976, 0.0, 0.0, 0.0], [-0.597499967, 21.0, 22.0, 1.0], [-0.0314345546, 0.0, 0.0, 0.0], [0.0127422232, 0.0, 0.0, 0.0], [-0.0309191588, 0.0, 0.0, 0.0], [0.0174098462, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 19, 20, 4, 9, 10, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 8, 14, 2, 5, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_763(xs):
    #Predicts Class 1
    function_dict = np.array([[0.361499995, 1.0, 2.0, 2.0], [-0.789499998, 3.0, 4.0, 1.0], [-0.192499995, 5.0, 6.0, 0.0], [-0.00152711652, 0.0, 0.0, 0.0], [-0.0463350676, 0.0, 0.0, 0.0], [-0.207500011, 7.0, 8.0, 0.0], [-0.96449995, 9.0, 10.0, 4.0], [-0.804499984, 11.0, 12.0, 1.0], [-0.0464390181, 0.0, 0.0, 0.0], [0.0727572739, 0.0, 0.0, 0.0], [-0.0118671358, 0.0, 0.0, 0.0], [-0.0284251515, 0.0, 0.0, 0.0], [0.657500029, 13.0, 14.0, 2.0], [0.0303097349, 0.0, 0.0, 0.0], [-0.022552615, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 11, 13, 14, 8, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_764(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.725499988, 1.0, 2.0, 4.0], [-0.186500013, 3.0, 4.0, 0.0], [0.0318943374, 0.0, 0.0, 0.0], [-0.756500006, 5.0, 6.0, 1.0], [-0.149500012, 7.0, 8.0, 0.0], [0.023497967, 0.0, 0.0, 0.0], [-0.484499991, 9.0, 10.0, 1.0], [0.0428076424, 0.0, 0.0, 0.0], [-0.109499998, 11.0, 12.0, 0.0], [0.557500005, 13.0, 14.0, 2.0], [-0.907500029, 15.0, 16.0, 4.0], [-0.0389596485, 0.0, 0.0, 0.0], [0.0225359704, 0.0, 0.0, 0.0], [-0.00114015874, 0.0, 0.0, 0.0], [-0.0667375922, 0.0, 0.0, 0.0], [0.0409080647, 0.0, 0.0, 0.0], [-0.0284788962, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 13, 14, 15, 16, 7, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 6, 9, 10, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_765(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.185499996, 1.0, 2.0, 0.0], [-0.186500013, 3.0, 4.0, 0.0], [-0.142500013, 5.0, 6.0, 0.0], [-0.770500004, 7.0, 8.0, 2.0], [0.119640127, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.141499996, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.607499957, 15.0, 16.0, 2.0], [-0.189447418, 0.0, 0.0, 0.0], [-0.00420886884, 0.0, 0.0, 0.0], [0.124960974, 0.0, 0.0, 0.0], [-0.136500001, 17.0, 18.0, 0.0], [-0.2095, 19.0, 20.0, 0.0], [0.0664401129, 0.0, 0.0, 0.0], [-0.131195188, 0.0, 0.0, 0.0], [0.0504135899, 0.0, 0.0, 0.0], [-0.138500005, 21.0, 22.0, 0.0], [-0.134499997, 23.0, 24.0, 0.0], [0.026136443, 0.0, 0.0, 0.0], [-0.0402685069, 0.0, 0.0, 0.0], [-0.00890370458, 0.0, 0.0, 0.0], [-0.0620202795, 0.0, 0.0, 0.0], [0.0381512791, 0.0, 0.0, 0.0], [0.00013395102, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 16, 4, 9, 10, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_766(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.1105, 3.0, 4.0, 0.0], [-0.41049999, 5.0, 6.0, 0.0], [0.0923999995, 7.0, 8.0, 0.0], [0.192499995, 9.0, 10.0, 0.0], [0.0491672903, 0.0, 0.0, 0.0], [0.0490000024, 11.0, 12.0, 0.0], [0.0912000015, 13.0, 14.0, 0.0], [-0.125416189, 0.0, 0.0, 0.0], [0.148499995, 15.0, 16.0, 0.0], [0.195499986, 17.0, 18.0, 0.0], [-0.02575, 19.0, 20.0, 0.0], [0.0360139497, 0.0, 0.0, 0.0], [0.0854000002, 21.0, 22.0, 0.0], [0.128013015, 0.0, 0.0, 0.0], [0.0210474357, 0.0, 0.0, 0.0], [0.144808918, 0.0, 0.0, 0.0], [-0.0803659335, 0.0, 0.0, 0.0], [0.196500003, 23.0, 24.0, 0.0], [-0.0773499981, 25.0, 26.0, 0.0], [-0.134973675, 0.0, 0.0, 0.0], [0.00175282545, 0.0, 0.0, 0.0], [-0.079658024, 0.0, 0.0, 0.0], [0.0778548121, 0.0, 0.0, 0.0], [-0.0187706798, 0.0, 0.0, 0.0], [-0.0488112457, 0.0, 0.0, 0.0], [0.0786892846, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 15, 16, 17, 23, 24, 5, 25, 26, 20, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 10, 18, 2, 6, 11, 19])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_767(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.564499974, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [-0.822000027, 7.0, 8.0, 2.0], [-0.0778345242, 0.0, 0.0, 0.0], [0.0769873261, 0.0, 0.0, 0.0], [-0.0176783055, 0.0, 0.0, 0.0], [-0.997500002, 9.0, 10.0, 1.0], [-0.997500002, 11.0, 12.0, 1.0], [-0.923500001, 13.0, 14.0, 2.0], [-0.0484164171, 0.0, 0.0, 0.0], [-0.0821603015, 0.0, 0.0, 0.0], [0.0254140142, 0.0, 0.0, 0.0], [0.0046763951, 0.0, 0.0, 0.0], [0.0733470246, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_768(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.644500017, 1.0, 2.0, 1.0], [-0.877499998, 3.0, 4.0, 4.0], [-0.597499967, 5.0, 6.0, 1.0], [-0.914499998, 7.0, 8.0, 4.0], [-0.0244635139, 0.0, 0.0, 0.0], [-0.053414464, 0.0, 0.0, 0.0], [-0.538499951, 9.0, 10.0, 1.0], [-0.931499958, 11.0, 12.0, 4.0], [0.0686183423, 0.0, 0.0, 0.0], [0.0359189138, 0.0, 0.0, 0.0], [-0.965499997, 13.0, 14.0, 3.0], [-0.99849999, 15.0, 16.0, 3.0], [-0.0430035144, 0.0, 0.0, 0.0], [-0.0440591089, 0.0, 0.0, 0.0], [0.0143511705, 0.0, 0.0, 0.0], [-0.0249367878, 0.0, 0.0, 0.0], [0.0219662804, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_769(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 3.0], [-0.821500003, 3.0, 4.0, 1.0], [-0.930500031, 5.0, 6.0, 4.0], [-0.0496110246, 0.0, 0.0, 0.0], [-0.930500031, 7.0, 8.0, 4.0], [-0.946500003, 9.0, 10.0, 4.0], [-0.912500024, 11.0, 12.0, 4.0], [-0.952499986, 13.0, 14.0, 4.0], [-0.0475880057, 0.0, 0.0, 0.0], [-0.955500007, 15.0, 16.0, 4.0], [-0.0561265051, 0.0, 0.0, 0.0], [0.0705868825, 0.0, 0.0, 0.0], [-0.872500002, 17.0, 18.0, 4.0], [-0.973500013, 19.0, 20.0, 4.0], [0.0821741298, 0.0, 0.0, 0.0], [-0.717499971, 21.0, 22.0, 1.0], [0.0493647158, 0.0, 0.0, 0.0], [-0.0574585274, 0.0, 0.0, 0.0], [0.0346307866, 0.0, 0.0, 0.0], [0.026015019, 0.0, 0.0, 0.0], [-0.0334567502, 0.0, 0.0, 0.0], [-0.0249570757, 0.0, 0.0, 0.0], [0.0215835851, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 19, 20, 14, 8, 21, 22, 16, 10, 11, 17, 18])
    branch_indices = np.array([0, 1, 4, 7, 13, 2, 5, 9, 15, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_770(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.761500001, 1.0, 2.0, 1.0], [-0.0345407687, 0.0, 0.0, 0.0], [-0.996500015, 3.0, 4.0, 3.0], [0.62349999, 5.0, 6.0, 2.0], [-0.713500023, 7.0, 8.0, 1.0], [0.536000013, 9.0, 10.0, 2.0], [0.0585531332, 0.0, 0.0, 0.0], [0.0404710881, 0.0, 0.0, 0.0], [-0.582000017, 11.0, 12.0, 1.0], [0.0202529766, 0.0, 0.0, 0.0], [-0.025944896, 0.0, 0.0, 0.0], [-0.975499988, 13.0, 14.0, 3.0], [-0.526499987, 15.0, 16.0, 1.0], [-0.0633624345, 0.0, 0.0, 0.0], [-0.00468230434, 0.0, 0.0, 0.0], [0.0534692779, 0.0, 0.0, 0.0], [-0.00940232538, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 6, 7, 13, 14, 15, 16])
    branch_indices = np.array([0, 2, 3, 5, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_771(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.190499991, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [-0.0573319793, 0.0, 0.0, 0.0], [-0.770500004, 9.0, 10.0, 2.0], [-0.140500009, 11.0, 12.0, 0.0], [-0.0313078351, 0.0, 0.0, 0.0], [0.0434867032, 0.0, 0.0, 0.0], [-0.205500007, 13.0, 14.0, 0.0], [-0.035767179, 0.0, 0.0, 0.0], [-0.185499996, 15.0, 16.0, 0.0], [-0.137499988, 17.0, 18.0, 0.0], [-0.240500003, 19.0, 20.0, 0.0], [0.0929039866, 0.0, 0.0, 0.0], [-0.00614105351, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [0.0681860074, 0.0, 0.0, 0.0], [-0.135500014, 23.0, 24.0, 0.0], [0.0575441904, 0.0, 0.0, 0.0], [-0.0444600657, 0.0, 0.0, 0.0], [-0.106922194, 0.0, 0.0, 0.0], [-0.0164212771, 0.0, 0.0, 0.0], [-0.0717222467, 0.0, 0.0, 0.0], [0.00133275753, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 19, 20, 14, 10, 15, 21, 22, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 13, 6, 11, 16, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_772(xs):
    #Predicts Class 4
    function_dict = np.array([[0.03785, 1.0, 2.0, 0.0], [0.0293500014, 3.0, 4.0, 0.0], [0.0476500019, 5.0, 6.0, 0.0], [0.0260500014, 7.0, 8.0, 0.0], [-0.145850927, 0.0, 0.0, 0.0], [0.148913026, 0.0, 0.0, 0.0], [0.0757500008, 9.0, 10.0, 0.0], [0.0237000007, 11.0, 12.0, 0.0], [0.0982011259, 0.0, 0.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [0.082949996, 15.0, 16.0, 0.0], [0.0192999989, 17.0, 18.0, 0.0], [-0.0776780769, 0.0, 0.0, 0.0], [0.0740500018, 19.0, 20.0, 0.0], [0.0364194177, 0.0, 0.0, 0.0], [0.112422645, 0.0, 0.0, 0.0], [0.0867500007, 21.0, 22.0, 0.0], [-0.0033572379, 0.0, 0.0, 0.0], [0.119062498, 0.0, 0.0, 0.0], [-0.154522583, 0.0, 0.0, 0.0], [-0.0239966474, 0.0, 0.0, 0.0], [-0.105496272, 0.0, 0.0, 0.0], [0.0124410698, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 14, 15, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_773(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.393000007, 1.0, 2.0, 0.0], [-0.407499999, 3.0, 4.0, 0.0], [-0.155499995, 5.0, 6.0, 0.0], [-0.424499989, 7.0, 8.0, 0.0], [0.095106028, 0.0, 0.0, 0.0], [-0.164499998, 9.0, 10.0, 0.0], [-0.153499991, 11.0, 12.0, 0.0], [-0.48299998, 13.0, 14.0, 0.0], [-0.0709899738, 0.0, 0.0, 0.0], [-0.166500002, 15.0, 16.0, 0.0], [-0.115508996, 0.0, 0.0, 0.0], [0.0797757357, 0.0, 0.0, 0.0], [0.263000011, 17.0, 18.0, 0.0], [-0.000643027597, 0.0, 0.0, 0.0], [0.0531689301, 0.0, 0.0, 0.0], [-0.360500008, 19.0, 20.0, 0.0], [0.060917303, 0.0, 0.0, 0.0], [0.259499997, 21.0, 22.0, 0.0], [0.273999989, 23.0, 24.0, 0.0], [-0.0709190592, 0.0, 0.0, 0.0], [-0.0100063076, 0.0, 0.0, 0.0], [-0.00931623112, 0.0, 0.0, 0.0], [-0.10153649, 0.0, 0.0, 0.0], [0.141615063, 0.0, 0.0, 0.0], [-0.000701912737, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 19, 20, 16, 10, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 9, 15, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_774(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.850499988, 1.0, 2.0, 1.0], [0.0228736512, 0.0, 0.0, 0.0], [0.354499996, 3.0, 4.0, 2.0], [-0.0374323018, 0.0, 0.0, 0.0], [0.433499992, 5.0, 6.0, 2.0], [0.0317623466, 0.0, 0.0, 0.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.968500018, 9.0, 10.0, 4.0], [-0.102499999, 11.0, 12.0, 0.0], [0.0257157106, 0.0, 0.0, 0.0], [-0.0218981039, 0.0, 0.0, 0.0], [0.0356539339, 0.0, 0.0, 0.0], [-0.0295239203, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 9, 10, 11, 12])
    branch_indices = np.array([0, 2, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_775(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.218499988, 1.0, 2.0, 0.0], [-0.977499962, 3.0, 4.0, 3.0], [-0.169499993, 5.0, 6.0, 0.0], [0.554499984, 7.0, 8.0, 2.0], [-0.690500021, 9.0, 10.0, 1.0], [-0.986500025, 11.0, 12.0, 3.0], [0.42049998, 13.0, 14.0, 2.0], [-0.968500018, 15.0, 16.0, 4.0], [-0.928499997, 17.0, 18.0, 4.0], [0.0563312247, 0.0, 0.0, 0.0], [-0.0240519866, 0.0, 0.0, 0.0], [0.493499994, 19.0, 20.0, 2.0], [-0.0270672925, 0.0, 0.0, 0.0], [-0.0407649167, 0.0, 0.0, 0.0], [0.0146065317, 0.0, 0.0, 0.0], [0.0157781709, 0.0, 0.0, 0.0], [-0.281499982, 21.0, 22.0, 0.0], [0.0303840302, 0.0, 0.0, 0.0], [-0.0199945495, 0.0, 0.0, 0.0], [0.0929421484, 0.0, 0.0, 0.0], [-0.00886008982, 0.0, 0.0, 0.0], [-0.00852020923, 0.0, 0.0, 0.0], [-0.088062726, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 21, 22, 17, 18, 9, 10, 19, 20, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 4, 2, 5, 11, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_776(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.691499949, 1.0, 2.0, 1.0], [-0.9745, 3.0, 4.0, 4.0], [0.597499967, 5.0, 6.0, 2.0], [0.0119285677, 0.0, 0.0, 0.0], [-0.990499973, 7.0, 8.0, 3.0], [0.540500045, 9.0, 10.0, 2.0], [-0.180500001, 11.0, 12.0, 0.0], [-0.00204548845, 0.0, 0.0, 0.0], [-0.0493845567, 0.0, 0.0, 0.0], [-0.000411040906, 0.0, 0.0, 0.0], [0.0531293377, 0.0, 0.0, 0.0], [-0.240500003, 13.0, 14.0, 0.0], [-0.0411709137, 0.0, 0.0, 0.0], [0.673500001, 15.0, 16.0, 2.0], [0.0490797609, 0.0, 0.0, 0.0], [0.0306604765, 0.0, 0.0, 0.0], [-0.0460093431, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 10, 15, 16, 14, 12])
    branch_indices = np.array([0, 1, 4, 2, 5, 6, 11, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_777(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0728500038, 1.0, 2.0, 0.0], [-0.0748500004, 3.0, 4.0, 0.0], [-0.0658500046, 5.0, 6.0, 0.0], [-0.0801500008, 7.0, 8.0, 0.0], [-0.180342719, 0.0, 0.0, 0.0], [-0.0698499978, 9.0, 10.0, 0.0], [-0.0599500015, 11.0, 12.0, 0.0], [-0.0909499973, 13.0, 14.0, 0.0], [0.102688327, 0.0, 0.0, 0.0], [0.0441276245, 0.0, 0.0, 0.0], [0.149856597, 0.0, 0.0, 0.0], [-0.203790814, 0.0, 0.0, 0.0], [-0.0578499995, 15.0, 16.0, 0.0], [-0.0922500044, 17.0, 18.0, 0.0], [-0.122130826, 0.0, 0.0, 0.0], [0.17973879, 0.0, 0.0, 0.0], [-0.0491999984, 19.0, 20.0, 0.0], [-0.00654503284, 0.0, 0.0, 0.0], [0.128215611, 0.0, 0.0, 0.0], [-0.0814778358, 0.0, 0.0, 0.0], [0.00246792613, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 4, 9, 10, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_778(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0811500028, 1.0, 2.0, 0.0], [-0.0908499956, 3.0, 4.0, 0.0], [-0.0742499977, 5.0, 6.0, 0.0], [-0.0929999948, 7.0, 8.0, 0.0], [0.124509305, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.0701999962, 11.0, 12.0, 0.0], [-0.0987499952, 13.0, 14.0, 0.0], [-0.12585023, 0.0, 0.0, 0.0], [-0.0411380641, 0.0, 0.0, 0.0], [-0.164469779, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.0655499995, 17.0, 18.0, 0.0], [-0.111500002, 19.0, 20.0, 0.0], [0.130069703, 0.0, 0.0, 0.0], [-0.0980034843, 0.0, 0.0, 0.0], [0.246164694, 0.0, 0.0, 0.0], [-0.145648509, 0.0, 0.0, 0.0], [-0.0571999997, 21.0, 22.0, 0.0], [0.00616943184, 0.0, 0.0, 0.0], [-0.0319586843, 0.0, 0.0, 0.0], [0.124509081, 0.0, 0.0, 0.0], [-0.00532449409, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 10, 15, 16, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_779(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.394999981, 3.0, 4.0, 0.0], [0.348500013, 5.0, 6.0, 0.0], [-0.429499984, 7.0, 8.0, 0.0], [-0.380499989, 9.0, 10.0, 0.0], [-0.29549998, 11.0, 12.0, 0.0], [0.527500033, 13.0, 14.0, 0.0], [-0.000633849122, 0.0, 0.0, 0.0], [-0.0667684451, 0.0, 0.0, 0.0], [0.0942027196, 0.0, 0.0, 0.0], [-0.162, 15.0, 16.0, 0.0], [-0.997500002, 17.0, 18.0, 1.0], [-0.0371000022, 19.0, 20.0, 0.0], [0.430999994, 21.0, 22.0, 0.0], [-0.00492217997, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [-0.0745999962, 25.0, 26.0, 0.0], [0.0686626136, 0.0, 0.0, 0.0], [-0.00483459933, 0.0, 0.0, 0.0], [-0.0841012076, 0.0, 0.0, 0.0], [0.228500009, 27.0, 28.0, 0.0], [0.0185491256, 0.0, 0.0, 0.0], [0.0691565424, 0.0, 0.0, 0.0], [-0.0573885664, 0.0, 0.0, 0.0], [0.0183383804, 0.0, 0.0, 0.0], [0.0400648452, 0.0, 0.0, 0.0], [-0.00689265225, 0.0, 0.0, 0.0], [0.0518079661, 0.0, 0.0, 0.0], [-0.0543978773, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 23, 24, 25, 26, 17, 18, 19, 27, 28, 21, 22, 14])
    branch_indices = np.array([0, 1, 3, 4, 10, 15, 16, 2, 5, 11, 12, 20, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_780(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.1875, 1.0, 2.0, 0.0], [-0.763499975, 3.0, 4.0, 4.0], [-0.799499989, 5.0, 6.0, 1.0], [0.647500038, 7.0, 8.0, 2.0], [-0.0362397619, 0.0, 0.0, 0.0], [0.022238344, 0.0, 0.0, 0.0], [-0.593500018, 9.0, 10.0, 1.0], [-0.89349997, 11.0, 12.0, 4.0], [0.699499965, 13.0, 14.0, 2.0], [-0.944499969, 15.0, 16.0, 4.0], [0.0206763148, 0.0, 0.0, 0.0], [-0.970499992, 17.0, 18.0, 3.0], [-0.052564051, 0.0, 0.0, 0.0], [0.0956742391, 0.0, 0.0, 0.0], [-0.00742779206, 0.0, 0.0, 0.0], [-0.0662788153, 0.0, 0.0, 0.0], [-0.0213806182, 0.0, 0.0, 0.0], [0.0272477251, 0.0, 0.0, 0.0], [-0.0284767728, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 15, 16, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_781(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.218499988, 1.0, 2.0, 0.0], [-0.228500009, 3.0, 4.0, 0.0], [-0.972499967, 5.0, 6.0, 4.0], [-0.949499965, 7.0, 8.0, 4.0], [-0.0388424769, 0.0, 0.0, 0.0], [-0.0190468989, 0.0, 0.0, 0.0], [-0.922500014, 9.0, 10.0, 4.0], [-0.2465, 11.0, 12.0, 0.0], [-0.315500021, 13.0, 14.0, 0.0], [-0.949499965, 15.0, 16.0, 4.0], [-0.0248518437, 0.0, 0.0, 0.0], [-0.987499952, 17.0, 18.0, 3.0], [0.0653679371, 0.0, 0.0, 0.0], [-0.338499993, 19.0, 20.0, 0.0], [-0.917500019, 21.0, 22.0, 4.0], [-0.962499976, 23.0, 24.0, 4.0], [0.0720915422, 0.0, 0.0, 0.0], [0.0228814017, 0.0, 0.0, 0.0], [-0.0421024412, 0.0, 0.0, 0.0], [-0.024502635, 0.0, 0.0, 0.0], [0.0426199064, 0.0, 0.0, 0.0], [-0.05301762, 0.0, 0.0, 0.0], [0.0052887476, 0.0, 0.0, 0.0], [0.0436358191, 0.0, 0.0, 0.0], [-0.0214873366, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 19, 20, 21, 22, 4, 5, 23, 24, 16, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 13, 14, 2, 6, 9, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_782(xs):
    #Predicts Class 2
    function_dict = np.array([[0.436500013, 1.0, 2.0, 2.0], [-0.0217986964, 0.0, 0.0, 0.0], [0.483500004, 3.0, 4.0, 2.0], [0.0371339284, 0.0, 0.0, 0.0], [0.529500008, 5.0, 6.0, 2.0], [-0.0409049131, 0.0, 0.0, 0.0], [-0.215499997, 7.0, 8.0, 0.0], [0.722499967, 9.0, 10.0, 2.0], [-0.976500034, 11.0, 12.0, 3.0], [-0.0252772272, 0.0, 0.0, 0.0], [0.0238630883, 0.0, 0.0, 0.0], [-0.00303092459, 0.0, 0.0, 0.0], [0.0489141606, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 9, 10, 11, 12])
    branch_indices = np.array([0, 2, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_783(xs):
    #Predicts Class 3
    function_dict = np.array([[0.00456999987, 1.0, 2.0, 0.0], [0.00202000001, 3.0, 4.0, 0.0], [0.0079549998, 5.0, 6.0, 0.0], [0.000549999997, 7.0, 8.0, 0.0], [0.00325499987, 9.0, 10.0, 0.0], [0.00655000005, 11.0, 12.0, 0.0], [0.0192999989, 13.0, 14.0, 0.0], [-0.000714999973, 15.0, 16.0, 0.0], [-0.104317546, 0.0, 0.0, 0.0], [0.192476779, 0.0, 0.0, 0.0], [0.0189379957, 0.0, 0.0, 0.0], [-0.173437744, 0.0, 0.0, 0.0], [-0.0459090583, 0.0, 0.0, 0.0], [0.0101999994, 17.0, 18.0, 0.0], [0.025150001, 19.0, 20.0, 0.0], [-0.00163000007, 21.0, 22.0, 0.0], [0.130547374, 0.0, 0.0, 0.0], [0.00812966377, 0.0, 0.0, 0.0], [0.144109145, 0.0, 0.0, 0.0], [0.0234000012, 23.0, 24.0, 0.0], [0.028549999, 25.0, 26.0, 0.0], [0.00227892399, 0.0, 0.0, 0.0], [-0.111995563, 0.0, 0.0, 0.0], [-0.00455770502, 0.0, 0.0, 0.0], [-0.123901136, 0.0, 0.0, 0.0], [0.112633318, 0.0, 0.0, 0.0], [-0.00514408434, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 8, 9, 10, 11, 12, 17, 18, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 6, 13, 14, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_784(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0825999975, 1.0, 2.0, 0.0], [0.0760499984, 3.0, 4.0, 0.0], [0.0854000002, 5.0, 6.0, 0.0], [0.0740500018, 7.0, 8.0, 0.0], [-0.153246865, 0.0, 0.0, 0.0], [0.137884215, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0560500026, 11.0, 12.0, 0.0], [0.0743656531, 0.0, 0.0, 0.0], [0.0892499983, 13.0, 14.0, 0.0], [0.0961788371, 0.0, 0.0, 0.0], [0.0477499999, 15.0, 16.0, 0.0], [-0.11444255, 0.0, 0.0, 0.0], [0.0883999988, 17.0, 18.0, 0.0], [0.0917500034, 19.0, 20.0, 0.0], [-0.00168487662, 0.0, 0.0, 0.0], [0.135387883, 0.0, 0.0, 0.0], [-0.00620003138, 0.0, 0.0, 0.0], [-0.204406023, 0.0, 0.0, 0.0], [0.117183857, 0.0, 0.0, 0.0], [-0.0024685103, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 17, 18, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_785(xs):
    #Predicts Class 5
    function_dict = np.array([[0.272000015, 1.0, 2.0, 0.0], [0.260500014, 3.0, 4.0, 0.0], [0.276499987, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.0821385905, 0.0, 0.0, 0.0], [0.122179493, 0.0, 0.0, 0.0], [0.341000021, 9.0, 10.0, 0.0], [0.2095, 11.0, 12.0, 0.0], [0.0723725706, 0.0, 0.0, 0.0], [-0.106455266, 0.0, 0.0, 0.0], [0.421999991, 13.0, 14.0, 0.0], [-0.0126499999, 15.0, 16.0, 0.0], [-0.0753217041, 0.0, 0.0, 0.0], [0.409500003, 17.0, 18.0, 0.0], [0.429499984, 19.0, 20.0, 0.0], [-0.00851162337, 0.0, 0.0, 0.0], [0.0248696283, 0.0, 0.0, 0.0], [0.0064622201, 0.0, 0.0, 0.0], [0.0786546394, 0.0, 0.0, 0.0], [-0.10793817, 0.0, 0.0, 0.0], [0.00559396623, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_786(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.965499997, 1.0, 2.0, 3.0], [0.426499993, 3.0, 4.0, 2.0], [-0.247500002, 5.0, 6.0, 0.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.696500003, 9.0, 10.0, 1.0], [-0.018358741, 0.0, 0.0, 0.0], [-0.913499951, 11.0, 12.0, 4.0], [0.00811858196, 0.0, 0.0, 0.0], [-0.0474694744, 0.0, 0.0, 0.0], [0.628499985, 13.0, 14.0, 2.0], [0.586500049, 15.0, 16.0, 2.0], [0.0574906468, 0.0, 0.0, 0.0], [-0.00789872929, 0.0, 0.0, 0.0], [-0.971500039, 17.0, 18.0, 4.0], [-0.0275065713, 0.0, 0.0, 0.0], [-0.064114213, 0.0, 0.0, 0.0], [-0.166500002, 19.0, 20.0, 0.0], [-0.0209257007, 0.0, 0.0, 0.0], [0.0507824197, 0.0, 0.0, 0.0], [-0.0161157437, 0.0, 0.0, 0.0], [0.0392826758, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 17, 18, 14, 15, 19, 20, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 4, 9, 13, 10, 16, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_787(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.334500015, 3.0, 4.0, 0.0], [-0.980499983, 5.0, 6.0, 3.0], [-0.0253069755, 0.0, 0.0, 0.0], [-0.923500001, 7.0, 8.0, 4.0], [0.00583112147, 0.0, 0.0, 0.0], [-0.0425053686, 0.0, 0.0, 0.0], [0.637500048, 9.0, 10.0, 2.0], [0.0583405048, 0.0, 0.0, 0.0], [-0.138500005, 11.0, 12.0, 0.0], [0.0357517675, 0.0, 0.0, 0.0], [0.00292620994, 0.0, 0.0, 0.0], [-0.0423773415, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 10, 8, 5, 6])
    branch_indices = np.array([0, 1, 4, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_788(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.962499976, 3.0, 4.0, 4.0], [0.0284286644, 0.0, 0.0, 0.0], [-0.219500005, 5.0, 6.0, 0.0], [-0.940500021, 7.0, 8.0, 4.0], [-0.0585366488, 0.0, 0.0, 0.0], [-0.979499996, 9.0, 10.0, 4.0], [-0.217500001, 11.0, 12.0, 0.0], [-0.203500003, 13.0, 14.0, 0.0], [0.0242681243, 0.0, 0.0, 0.0], [-0.0213413611, 0.0, 0.0, 0.0], [0.0720747262, 0.0, 0.0, 0.0], [-0.0244041197, 0.0, 0.0, 0.0], [-0.243499994, 15.0, 16.0, 0.0], [0.598500013, 17.0, 18.0, 2.0], [0.00619337987, 0.0, 0.0, 0.0], [-0.079807654, 0.0, 0.0, 0.0], [0.0439718217, 0.0, 0.0, 0.0], [-0.0127117727, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 10, 11, 12, 15, 16, 17, 18, 2])
    branch_indices = np.array([0, 1, 3, 6, 4, 7, 8, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_789(xs):
    #Predicts Class 3
    function_dict = np.array([[0.431500018, 1.0, 2.0, 0.0], [0.424000025, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 1.0], [0.415000021, 7.0, 8.0, 0.0], [-0.102304861, 0.0, 0.0, 0.0], [0.46450001, 9.0, 10.0, 0.0], [0.523499966, 11.0, 12.0, 0.0], [0.406499982, 13.0, 14.0, 0.0], [0.42049998, 15.0, 16.0, 0.0], [0.446500003, 17.0, 18.0, 0.0], [0.478500009, 19.0, 20.0, 0.0], [-0.0500526614, 0.0, 0.0, 0.0], [0.531499982, 21.0, 22.0, 0.0], [0.273999989, 23.0, 24.0, 0.0], [-0.0986707062, 0.0, 0.0, 0.0], [0.0703875646, 0.0, 0.0, 0.0], [0.0168478042, 0.0, 0.0, 0.0], [0.4375, 25.0, 26.0, 0.0], [0.101406276, 0.0, 0.0, 0.0], [-0.0709661245, 0.0, 0.0, 0.0], [0.513000011, 27.0, 28.0, 0.0], [0.0334230028, 0.0, 0.0, 0.0], [-0.0386261344, 0.0, 0.0, 0.0], [-0.00214586267, 0.0, 0.0, 0.0], [0.0300610196, 0.0, 0.0, 0.0], [0.0739005357, 0.0, 0.0, 0.0], [-0.0464842506, 0.0, 0.0, 0.0], [0.0656232238, 0.0, 0.0, 0.0], [0.00555153377, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 15, 16, 4, 25, 26, 18, 19, 27, 28, 11, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 2, 5, 9, 17, 10, 20, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_790(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0873000026, 3.0, 4.0, 0.0], [0.0941499993, 5.0, 6.0, 0.0], [0.082949996, 7.0, 8.0, 0.0], [0.111652486, 0.0, 0.0, 0.0], [-0.0814335048, 0.0, 0.0, 0.0], [0.111500002, 9.0, 10.0, 0.0], [0.0757500008, 11.0, 12.0, 0.0], [0.0867500007, 13.0, 14.0, 0.0], [0.062234275, 0.0, 0.0, 0.0], [0.190499991, 15.0, 16.0, 0.0], [0.0506500006, 17.0, 18.0, 0.0], [0.0967928767, 0.0, 0.0, 0.0], [-0.103723593, 0.0, 0.0, 0.0], [-0.000972602284, 0.0, 0.0, 0.0], [-0.092365779, 0.0, 0.0, 0.0], [0.194499999, 19.0, 20.0, 0.0], [0.00145517406, 0.0, 0.0, 0.0], [-0.0753026456, 0.0, 0.0, 0.0], [0.069627054, 0.0, 0.0, 0.0], [-0.0191451386, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 14, 4, 5, 9, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_791(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.164499998, 1.0, 2.0, 0.0], [-0.166500002, 3.0, 4.0, 0.0], [-0.155499995, 5.0, 6.0, 0.0], [-0.393000007, 7.0, 8.0, 0.0], [0.054661423, 0.0, 0.0, 0.0], [-0.089089267, 0.0, 0.0, 0.0], [-0.153499991, 9.0, 10.0, 0.0], [-0.407499999, 11.0, 12.0, 0.0], [-0.360500008, 13.0, 14.0, 0.0], [0.0411520377, 0.0, 0.0, 0.0], [-0.0748500004, 15.0, 16.0, 0.0], [-0.424499989, 17.0, 18.0, 0.0], [0.0778064355, 0.0, 0.0, 0.0], [-0.0655859709, 0.0, 0.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [-0.149500012, 21.0, 22.0, 0.0], [-0.0318999998, 23.0, 24.0, 0.0], [0.0215619914, 0.0, 0.0, 0.0], [-0.0464659929, 0.0, 0.0, 0.0], [-0.0181640834, 0.0, 0.0, 0.0], [0.0390854515, 0.0, 0.0, 0.0], [-0.000552081154, 0.0, 0.0, 0.0], [-0.0933063626, 0.0, 0.0, 0.0], [0.063227199, 0.0, 0.0, 0.0], [-0.00357162859, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 19, 20, 4, 5, 9, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_792(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.833500028, 1.0, 2.0, 4.0], [-0.578999996, 3.0, 4.0, 1.0], [0.728999972, 5.0, 6.0, 2.0], [-0.213499993, 7.0, 8.0, 0.0], [-0.0531309359, 0.0, 0.0, 0.0], [0.0417308137, 0.0, 0.0, 0.0], [-0.0220428072, 0.0, 0.0, 0.0], [-0.950500011, 9.0, 10.0, 3.0], [-0.647500038, 11.0, 12.0, 1.0], [-0.977499962, 13.0, 14.0, 3.0], [0.0310691651, 0.0, 0.0, 0.0], [-0.977499962, 15.0, 16.0, 3.0], [0.0696340874, 0.0, 0.0, 0.0], [-0.0033917441, 0.0, 0.0, 0.0], [-0.0810527205, 0.0, 0.0, 0.0], [-0.0196771529, 0.0, 0.0, 0.0], [0.0430350527, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_793(xs):
    #Predicts Class 1
    function_dict = np.array([[0.539499998, 1.0, 2.0, 2.0], [0.483500004, 3.0, 4.0, 2.0], [-0.436999977, 5.0, 6.0, 1.0], [-0.821500003, 7.0, 8.0, 1.0], [-0.990499973, 9.0, 10.0, 3.0], [-0.319499999, 11.0, 12.0, 0.0], [0.0263942182, 0.0, 0.0, 0.0], [-0.0315435901, 0.0, 0.0, 0.0], [-0.193500012, 13.0, 14.0, 0.0], [0.0538387261, 0.0, 0.0, 0.0], [0.00548842456, 0.0, 0.0, 0.0], [0.0214022007, 0.0, 0.0, 0.0], [-0.25849998, 15.0, 16.0, 0.0], [-0.74150002, 17.0, 18.0, 1.0], [-0.0320505388, 0.0, 0.0, 0.0], [-0.060857404, 0.0, 0.0, 0.0], [-0.613499999, 19.0, 20.0, 1.0], [0.0462045148, 0.0, 0.0, 0.0], [-0.00630215323, 0.0, 0.0, 0.0], [0.00841270573, 0.0, 0.0, 0.0], [-0.0346343406, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 17, 18, 14, 9, 10, 11, 15, 19, 20, 6])
    branch_indices = np.array([0, 1, 3, 8, 13, 4, 2, 5, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_794(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.977499962, 1.0, 2.0, 4.0], [-0.0274004713, 0.0, 0.0, 0.0], [-0.971500039, 3.0, 4.0, 4.0], [0.0412933007, 0.0, 0.0, 0.0], [0.442499995, 5.0, 6.0, 2.0], [-0.0432329364, 0.0, 0.0, 0.0], [0.483500004, 7.0, 8.0, 2.0], [0.0394382067, 0.0, 0.0, 0.0], [-0.203500003, 9.0, 10.0, 0.0], [-0.0200547054, 0.0, 0.0, 0.0], [0.0230387188, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 5, 7, 9, 10])
    branch_indices = np.array([0, 2, 4, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_795(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.654500008, 1.0, 2.0, 2.0], [-0.770500004, 3.0, 4.0, 2.0], [-0.601000011, 5.0, 6.0, 2.0], [-0.795000017, 7.0, 8.0, 2.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0643904954, 0.0, 0.0, 0.0], [-0.99849999, 11.0, 12.0, 4.0], [-0.282999992, 13.0, 14.0, 0.0], [0.0694126487, 0.0, 0.0, 0.0], [0.063513957, 0.0, 0.0, 0.0], [-0.0339000002, 15.0, 16.0, 0.0], [-0.0609151535, 0.0, 0.0, 0.0], [0.0242575072, 0.0, 0.0, 0.0], [-0.374500006, 17.0, 18.0, 0.0], [-0.210500002, 19.0, 20.0, 0.0], [-0.125118256, 0.0, 0.0, 0.0], [0.0208229758, 0.0, 0.0, 0.0], [-0.0139511265, 0.0, 0.0, 0.0], [0.0501256473, 0.0, 0.0, 0.0], [-0.0840758234, 0.0, 0.0, 0.0], [-0.000411166431, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 15, 16, 5, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 10, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_796(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.601000011, 3.0, 4.0, 2.0], [-0.119499996, 5.0, 6.0, 0.0], [-0.654500008, 7.0, 8.0, 2.0], [0.0751160756, 0.0, 0.0, 0.0], [0.0217756256, 0.0, 0.0, 0.0], [-0.0799862742, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.100306407, 0.0, 0.0, 0.0], [0.00950999931, 11.0, 12.0, 0.0], [0.0107000005, 13.0, 14.0, 0.0], [-0.00863683969, 0.0, 0.0, 0.0], [0.0178327784, 0.0, 0.0, 0.0], [0.041596096, 0.0, 0.0, 0.0], [-0.0739634186, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_797(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.0830829665, 0.0, 0.0, 0.0], [0.114406824, 0.0, 0.0, 0.0], [0.341000021, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.203500003, 13.0, 14.0, 0.0], [-0.0725870356, 0.0, 0.0, 0.0], [0.401499987, 15.0, 16.0, 0.0], [-0.398999989, 17.0, 18.0, 0.0], [-0.923500001, 19.0, 20.0, 2.0], [0.202500001, 21.0, 22.0, 0.0], [0.228500009, 23.0, 24.0, 0.0], [0.392499983, 25.0, 26.0, 0.0], [0.409500003, 27.0, 28.0, 0.0], [-0.0239215158, 0.0, 0.0, 0.0], [0.059587758, 0.0, 0.0, 0.0], [-0.0915952325, 0.0, 0.0, 0.0], [0.00691988738, 0.0, 0.0, 0.0], [-0.0154928584, 0.0, 0.0, 0.0], [-0.083202526, 0.0, 0.0, 0.0], [0.0548093766, 0.0, 0.0, 0.0], [-0.00201248284, 0.0, 0.0, 0.0], [0.00364194252, 0.0, 0.0, 0.0], [0.0721887201, 0.0, 0.0, 0.0], [-0.037123058, 0.0, 0.0, 0.0], [0.00631482061, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 4, 5, 9, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 14, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_798(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.657500029, 1.0, 2.0, 1.0], [0.573500037, 3.0, 4.0, 2.0], [-0.916499972, 5.0, 6.0, 4.0], [-0.198500007, 7.0, 8.0, 0.0], [-0.892500043, 9.0, 10.0, 4.0], [-0.0537962727, 0.0, 0.0, 0.0], [-0.812000036, 11.0, 12.0, 4.0], [-0.281499982, 13.0, 14.0, 0.0], [-0.0960000008, 15.0, 16.0, 0.0], [0.0518824719, 0.0, 0.0, 0.0], [-0.00157874892, 0.0, 0.0, 0.0], [0.0412092097, 0.0, 0.0, 0.0], [-0.730999947, 17.0, 18.0, 4.0], [-0.0362978801, 0.0, 0.0, 0.0], [-0.715499997, 19.0, 20.0, 1.0], [0.449499995, 21.0, 22.0, 2.0], [0.0291579217, 0.0, 0.0, 0.0], [-0.0452583097, 0.0, 0.0, 0.0], [0.0082573276, 0.0, 0.0, 0.0], [0.00515834009, 0.0, 0.0, 0.0], [0.0660206527, 0.0, 0.0, 0.0], [-0.00412229961, 0.0, 0.0, 0.0], [-0.0698024109, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 19, 20, 21, 22, 16, 9, 10, 5, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 14, 8, 15, 4, 2, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_799(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.199499995, 1.0, 2.0, 0.0], [-0.818500042, 3.0, 4.0, 1.0], [-0.169499993, 5.0, 6.0, 0.0], [-0.0356440768, 0.0, 0.0, 0.0], [0.512500048, 7.0, 8.0, 2.0], [0.0407705382, 0.0, 0.0, 0.0], [-0.791999996, 9.0, 10.0, 1.0], [0.441500008, 11.0, 12.0, 2.0], [0.559499979, 13.0, 14.0, 2.0], [0.02131694, 0.0, 0.0, 0.0], [-0.0342091992, 0.0, 0.0, 0.0], [-0.230500013, 15.0, 16.0, 0.0], [-0.738499999, 17.0, 18.0, 1.0], [-0.0546377935, 0.0, 0.0, 0.0], [-0.931499958, 19.0, 20.0, 4.0], [0.0106511526, 0.0, 0.0, 0.0], [-0.0336091071, 0.0, 0.0, 0.0], [0.0670752004, 0.0, 0.0, 0.0], [0.0126779424, 0.0, 0.0, 0.0], [0.0290612523, 0.0, 0.0, 0.0], [-0.022813024, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 15, 16, 17, 18, 13, 19, 20, 5, 9, 10])
    branch_indices = np.array([0, 1, 4, 7, 11, 12, 8, 14, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_800(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [-0.956499994, 3.0, 4.0, 4.0], [0.676499963, 5.0, 6.0, 2.0], [0.443499982, 7.0, 8.0, 2.0], [0.515499949, 9.0, 10.0, 2.0], [-0.431500018, 11.0, 12.0, 1.0], [-0.0131132714, 0.0, 0.0, 0.0], [0.0118117305, 0.0, 0.0, 0.0], [0.55250001, 13.0, 14.0, 2.0], [-0.0270767026, 0.0, 0.0, 0.0], [-0.816499949, 15.0, 16.0, 4.0], [0.0100274449, 0.0, 0.0, 0.0], [0.0538245775, 0.0, 0.0, 0.0], [-0.0632356107, 0.0, 0.0, 0.0], [-0.0110721737, 0.0, 0.0, 0.0], [-0.183499992, 17.0, 18.0, 0.0], [-0.00965174101, 0.0, 0.0, 0.0], [0.0472250581, 0.0, 0.0, 0.0], [-0.00372417923, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 9, 17, 18, 16, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 8, 4, 10, 15, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_801(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.443499982, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [0.0291761085, 0.0, 0.0, 0.0], [-0.296499997, 7.0, 8.0, 0.0], [0.0835142881, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.0170091651, 0.0, 0.0, 0.0], [-0.0481547453, 0.0, 0.0, 0.0], [-0.73150003, 11.0, 12.0, 2.0], [-0.0514227822, 0.0, 0.0, 0.0], [-0.770500004, 13.0, 14.0, 2.0], [-0.120999999, 15.0, 16.0, 0.0], [0.000264348346, 0.0, 0.0, 0.0], [-0.0595345944, 0.0, 0.0, 0.0], [0.111359626, 0.0, 0.0, 0.0], [0.00447948137, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 13, 14, 15, 16, 10])
    branch_indices = np.array([0, 1, 4, 2, 6, 9, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_802(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0945499986, 1.0, 2.0, 0.0], [0.0912000015, 3.0, 4.0, 0.0], [0.1105, 5.0, 6.0, 0.0], [0.0888999999, 7.0, 8.0, 0.0], [0.0923170298, 0.0, 0.0, 0.0], [-0.142199919, 0.0, 0.0, 0.0], [0.157999992, 9.0, 10.0, 0.0], [0.0850500017, 11.0, 12.0, 0.0], [-0.080674015, 0.0, 0.0, 0.0], [0.0941207111, 0.0, 0.0, 0.0], [0.193500012, 13.0, 14.0, 0.0], [0.074149996, 15.0, 16.0, 0.0], [0.0883999988, 17.0, 18.0, 0.0], [-0.104169659, 0.0, 0.0, 0.0], [0.194499999, 19.0, 20.0, 0.0], [0.00201418647, 0.0, 0.0, 0.0], [-0.101098582, 0.0, 0.0, 0.0], [0.0818389654, 0.0, 0.0, 0.0], [-0.00170125859, 0.0, 0.0, 0.0], [0.0554739721, 0.0, 0.0, 0.0], [-0.0199698303, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_803(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.344999999, 5.0, 6.0, 0.0], [0.253499985, 7.0, 8.0, 0.0], [-0.107920572, 0.0, 0.0, 0.0], [0.123624578, 0.0, 0.0, 0.0], [0.397499979, 9.0, 10.0, 0.0], [0.2095, 11.0, 12.0, 0.0], [0.0643614382, 0.0, 0.0, 0.0], [-0.0554455556, 0.0, 0.0, 0.0], [0.405499995, 13.0, 14.0, 0.0], [-0.0126499999, 15.0, 16.0, 0.0], [-0.0838115439, 0.0, 0.0, 0.0], [0.404500008, 17.0, 18.0, 0.0], [0.409500003, 19.0, 20.0, 0.0], [-0.0109873163, 0.0, 0.0, 0.0], [0.0238837209, 0.0, 0.0, 0.0], [-0.000909819792, 0.0, 0.0, 0.0], [0.0861996561, 0.0, 0.0, 0.0], [-0.101348288, 0.0, 0.0, 0.0], [0.00408068439, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_804(xs):
    #Predicts Class 0
    function_dict = np.array([[0.29549998, 1.0, 2.0, 2.0], [-0.0304438695, 0.0, 0.0, 0.0], [-0.827499986, 3.0, 4.0, 1.0], [0.0333551802, 0.0, 0.0, 0.0], [-0.228500009, 5.0, 6.0, 0.0], [-0.933500051, 7.0, 8.0, 4.0], [-0.744500041, 9.0, 10.0, 1.0], [0.505499959, 11.0, 12.0, 2.0], [-0.908499956, 13.0, 14.0, 4.0], [-0.208499998, 15.0, 16.0, 0.0], [-0.71449995, 17.0, 18.0, 1.0], [-0.0955581367, 0.0, 0.0, 0.0], [-0.00974152237, 0.0, 0.0, 0.0], [0.0541727021, 0.0, 0.0, 0.0], [-0.00820142496, 0.0, 0.0, 0.0], [0.0634372756, 0.0, 0.0, 0.0], [0.0126558328, 0.0, 0.0, 0.0], [-0.0551617593, 0.0, 0.0, 0.0], [0.00984075665, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 11, 12, 13, 14, 15, 16, 17, 18])
    branch_indices = np.array([0, 2, 4, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_805(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.752499998, 1.0, 2.0, 1.0], [-0.17750001, 3.0, 4.0, 0.0], [-0.718500018, 5.0, 6.0, 1.0], [-0.228500009, 7.0, 8.0, 0.0], [0.022791652, 0.0, 0.0, 0.0], [0.0363350846, 0.0, 0.0, 0.0], [-0.689499974, 9.0, 10.0, 1.0], [-0.946500003, 11.0, 12.0, 4.0], [-0.0624230616, 0.0, 0.0, 0.0], [-0.0297506284, 0.0, 0.0, 0.0], [-0.912500024, 13.0, 14.0, 4.0], [0.0349421613, 0.0, 0.0, 0.0], [-0.0240269322, 0.0, 0.0, 0.0], [-0.476999998, 15.0, 16.0, 1.0], [-0.0171464048, 0.0, 0.0, 0.0], [0.0377125926, 0.0, 0.0, 0.0], [-0.015565183, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 9, 15, 16, 14])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 10, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_806(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.725499988, 1.0, 2.0, 4.0], [-0.816499949, 3.0, 4.0, 4.0], [0.0278885458, 0.0, 0.0, 0.0], [-0.884500027, 5.0, 6.0, 4.0], [-0.0330051892, 0.0, 0.0, 0.0], [-0.263500005, 7.0, 8.0, 0.0], [0.0328370631, 0.0, 0.0, 0.0], [-0.0361933969, 0.0, 0.0, 0.0], [-0.218499988, 9.0, 10.0, 0.0], [0.039070271, 0.0, 0.0, 0.0], [-0.0114425328, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 9, 10, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_807(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.066399999, 1.0, 2.0, 0.0], [-0.0720499977, 3.0, 4.0, 0.0], [-0.0579499975, 5.0, 6.0, 0.0], [-0.0762000009, 7.0, 8.0, 0.0], [-0.15214783, 0.0, 0.0, 0.0], [0.167893067, 0.0, 0.0, 0.0], [-0.0491999984, 9.0, 10.0, 0.0], [-0.0905999988, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.0527999997, 15.0, 16.0, 0.0], [-0.0469499975, 17.0, 18.0, 0.0], [-0.0910999998, 19.0, 20.0, 0.0], [-0.0900495946, 0.0, 0.0, 0.0], [0.13134332, 0.0, 0.0, 0.0], [-0.00154250429, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.133565217, 0.0, 0.0, 0.0], [0.179342046, 0.0, 0.0, 0.0], [-0.0455499999, 23.0, 24.0, 0.0], [-0.00513940584, 0.0, 0.0, 0.0], [0.111994997, 0.0, 0.0, 0.0], [0.0214860048, 0.0, 0.0, 0.0], [-0.0379291996, 0.0, 0.0, 0.0], [-0.126772925, 0.0, 0.0, 0.0], [0.00220484706, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 4, 5, 21, 22, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 2, 6, 9, 15, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_808(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0965999961, 3.0, 4.0, 0.0], [-0.0793000013, 5.0, 6.0, 0.0], [-0.0998999998, 7.0, 8.0, 0.0], [-0.0910999998, 9.0, 10.0, 0.0], [-0.104417056, 0.0, 0.0, 0.0], [-0.0728500038, 11.0, 12.0, 0.0], [-0.102499999, 13.0, 14.0, 0.0], [-0.125269055, 0.0, 0.0, 0.0], [0.146468937, 0.0, 0.0, 0.0], [0.0108407466, 0.0, 0.0, 0.0], [0.0871577039, 0.0, 0.0, 0.0], [-0.0496499985, 15.0, 16.0, 0.0], [-0.104499996, 17.0, 18.0, 0.0], [0.0802847147, 0.0, 0.0, 0.0], [-0.0571999997, 19.0, 20.0, 0.0], [-0.0460999981, 21.0, 22.0, 0.0], [0.00192757696, 0.0, 0.0, 0.0], [-0.102866448, 0.0, 0.0, 0.0], [-0.00247054989, 0.0, 0.0, 0.0], [-0.181076065, 0.0, 0.0, 0.0], [0.104296759, 0.0, 0.0, 0.0], [-0.00432532886, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 10, 5, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_809(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.401000023, 1.0, 2.0, 0.0], [-0.420000017, 3.0, 4.0, 0.0], [-0.38349998, 5.0, 6.0, 0.0], [-0.999500036, 7.0, 8.0, 1.0], [0.092255719, 0.0, 0.0, 0.0], [-0.0891769826, 0.0, 0.0, 0.0], [-0.29549998, 9.0, 10.0, 0.0], [-0.0434806831, 0.0, 0.0, 0.0], [0.0361841321, 0.0, 0.0, 0.0], [0.0624527112, 0.0, 0.0, 0.0], [-0.161500007, 11.0, 12.0, 0.0], [-0.168500006, 13.0, 14.0, 0.0], [-0.158500001, 15.0, 16.0, 0.0], [0.00548507506, 0.0, 0.0, 0.0], [-0.0575454757, 0.0, 0.0, 0.0], [0.0720899478, 0.0, 0.0, 0.0], [-0.000475632522, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_810(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.184500009, 3.0, 4.0, 0.0], [0.478500009, 5.0, 6.0, 2.0], [0.00450634118, 0.0, 0.0, 0.0], [-0.0353745557, 0.0, 0.0, 0.0], [-0.963500023, 7.0, 8.0, 4.0], [-0.940500021, 9.0, 10.0, 3.0], [0.0525993183, 0.0, 0.0, 0.0], [-0.00248532766, 0.0, 0.0, 0.0], [-0.965499997, 11.0, 12.0, 3.0], [-0.0297379363, 0.0, 0.0, 0.0], [0.713500023, 13.0, 14.0, 2.0], [0.054679919, 0.0, 0.0, 0.0], [-0.0166075006, 0.0, 0.0, 0.0], [0.0221538283, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 13, 14, 12, 10])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_811(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.993499994, 1.0, 2.0, 3.0], [0.436500013, 3.0, 4.0, 2.0], [-0.230500013, 5.0, 6.0, 0.0], [0.352499992, 7.0, 8.0, 2.0], [0.499500006, 9.0, 10.0, 2.0], [-0.291500002, 11.0, 12.0, 0.0], [-0.9745, 13.0, 14.0, 3.0], [-0.0102501167, 0.0, 0.0, 0.0], [0.0379531644, 0.0, 0.0, 0.0], [-0.061317239, 0.0, 0.0, 0.0], [-0.610499978, 15.0, 16.0, 1.0], [0.57249999, 17.0, 18.0, 2.0], [-0.967499971, 19.0, 20.0, 3.0], [-0.957499981, 21.0, 22.0, 4.0], [-0.0135111455, 0.0, 0.0, 0.0], [-0.711500049, 23.0, 24.0, 1.0], [-0.0382586867, 0.0, 0.0, 0.0], [0.0615929738, 0.0, 0.0, 0.0], [-0.00773573527, 0.0, 0.0, 0.0], [-0.0689520314, 0.0, 0.0, 0.0], [0.0238416344, 0.0, 0.0, 0.0], [0.0122703603, 0.0, 0.0, 0.0], [0.0657815412, 0.0, 0.0, 0.0], [-0.0172729231, 0.0, 0.0, 0.0], [0.0606336072, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 23, 24, 16, 17, 18, 19, 20, 21, 22, 14])
    branch_indices = np.array([0, 1, 3, 4, 10, 15, 2, 5, 11, 12, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_812(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.977499962, 1.0, 2.0, 4.0], [-0.0242142323, 0.0, 0.0, 0.0], [-0.958500028, 3.0, 4.0, 4.0], [-0.225499988, 5.0, 6.0, 0.0], [0.569499969, 7.0, 8.0, 2.0], [0.0523216538, 0.0, 0.0, 0.0], [-0.00400379347, 0.0, 0.0, 0.0], [-0.976500034, 9.0, 10.0, 3.0], [-0.240500003, 11.0, 12.0, 0.0], [-0.0462133549, 0.0, 0.0, 0.0], [0.0110442024, 0.0, 0.0, 0.0], [0.674499989, 13.0, 14.0, 2.0], [-0.183499992, 15.0, 16.0, 0.0], [0.0176514816, 0.0, 0.0, 0.0], [-0.0390123129, 0.0, 0.0, 0.0], [0.0473958254, 0.0, 0.0, 0.0], [-0.00310591701, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 9, 10, 13, 14, 15, 16])
    branch_indices = np.array([0, 2, 3, 4, 7, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_813(xs):
    #Predicts Class 3
    function_dict = np.array([[0.428499997, 1.0, 2.0, 0.0], [0.418500006, 3.0, 4.0, 0.0], [0.432500005, 5.0, 6.0, 0.0], [0.407999992, 7.0, 8.0, 0.0], [0.419499993, 9.0, 10.0, 0.0], [0.0799702108, 0.0, 0.0, 0.0], [0.434499979, 11.0, 12.0, 0.0], [0.201499999, 13.0, 14.0, 0.0], [0.0860780701, 0.0, 0.0, 0.0], [-0.0922839791, 0.0, 0.0, 0.0], [-0.0224638414, 0.0, 0.0, 0.0], [-0.0806999505, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [0.0945499986, 17.0, 18.0, 0.0], [0.212500006, 19.0, 20.0, 0.0], [0.466499984, 21.0, 22.0, 0.0], [0.0664798021, 0.0, 0.0, 0.0], [-0.000580605702, 0.0, 0.0, 0.0], [0.0439531803, 0.0, 0.0, 0.0], [-0.10080269, 0.0, 0.0, 0.0], [-0.00182322972, 0.0, 0.0, 0.0], [0.0361791626, 0.0, 0.0, 0.0], [-0.00873203948, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 21, 22, 16])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_814(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0240500011, 1.0, 2.0, 0.0], [0.0203999989, 3.0, 4.0, 0.0], [0.02685, 5.0, 6.0, 0.0], [0.0110500008, 7.0, 8.0, 0.0], [-0.141927615, 0.0, 0.0, 0.0], [0.134885699, 0.0, 0.0, 0.0], [-0.822000027, 9.0, 10.0, 2.0], [0.00881000049, 11.0, 12.0, 0.0], [0.133380979, 0.0, 0.0, 0.0], [0.03785, 13.0, 14.0, 0.0], [0.097771585, 0.0, 0.0, 0.0], [0.00456999987, 15.0, 16.0, 0.0], [-0.103374861, 0.0, 0.0, 0.0], [0.0293500014, 17.0, 18.0, 0.0], [0.0476500019, 19.0, 20.0, 0.0], [-0.0039340537, 0.0, 0.0, 0.0], [0.0932360739, 0.0, 0.0, 0.0], [-0.0187154021, 0.0, 0.0, 0.0], [-0.177783504, 0.0, 0.0, 0.0], [0.107620925, 0.0, 0.0, 0.0], [-0.00859181583, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 17, 18, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_815(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.412999988, 1.0, 2.0, 0.0], [-0.4375, 3.0, 4.0, 0.0], [-0.399500012, 5.0, 6.0, 0.0], [-0.0105204713, 0.0, 0.0, 0.0], [0.0805343837, 0.0, 0.0, 0.0], [-0.0740927085, 0.0, 0.0, 0.0], [-0.382499993, 7.0, 8.0, 0.0], [0.0755523294, 0.0, 0.0, 0.0], [-0.99150002, 9.0, 10.0, 1.0], [-0.923500001, 11.0, 12.0, 2.0], [-0.064980194, 0.0, 0.0, 0.0], [0.0035448561, 0.0, 0.0, 0.0], [-0.033262372, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 11, 12, 10])
    branch_indices = np.array([0, 1, 2, 6, 8, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_816(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.931499958, 3.0, 4.0, 3.0], [0.028602764, 0.0, 0.0, 0.0], [-0.281499982, 5.0, 6.0, 0.0], [-0.0338120498, 0.0, 0.0, 0.0], [-0.323500007, 7.0, 8.0, 0.0], [-0.237500012, 9.0, 10.0, 0.0], [0.025547957, 0.0, 0.0, 0.0], [-0.0683972389, 0.0, 0.0, 0.0], [-0.652500033, 11.0, 12.0, 1.0], [-0.213499993, 13.0, 14.0, 0.0], [0.0589278191, 0.0, 0.0, 0.0], [-0.014825942, 0.0, 0.0, 0.0], [-0.0427490845, 0.0, 0.0, 0.0], [0.0131483171, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 11, 12, 13, 14, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_817(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.138500005, 1.0, 2.0, 0.0], [-0.979499996, 3.0, 4.0, 4.0], [-0.0227767378, 0.0, 0.0, 0.0], [0.0391777195, 0.0, 0.0, 0.0], [0.428499997, 5.0, 6.0, 2.0], [-0.232499987, 7.0, 8.0, 0.0], [0.657500029, 9.0, 10.0, 2.0], [-0.0345977657, 0.0, 0.0, 0.0], [-0.00616784953, 0.0, 0.0, 0.0], [-0.24149999, 11.0, 12.0, 0.0], [-0.984500051, 13.0, 14.0, 3.0], [-0.0152047612, 0.0, 0.0, 0.0], [0.0360288583, 0.0, 0.0, 0.0], [-0.0398211665, 0.0, 0.0, 0.0], [0.00690976949, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 11, 12, 13, 14, 2])
    branch_indices = np.array([0, 1, 4, 5, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_818(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.725499988, 1.0, 2.0, 4.0], [-0.186500013, 3.0, 4.0, 0.0], [0.0262041949, 0.0, 0.0, 0.0], [0.557500005, 5.0, 6.0, 2.0], [-0.149500012, 7.0, 8.0, 0.0], [-0.990499973, 9.0, 10.0, 3.0], [0.699499965, 11.0, 12.0, 2.0], [0.0445627123, 0.0, 0.0, 0.0], [-0.642500043, 13.0, 14.0, 1.0], [-0.0191398095, 0.0, 0.0, 0.0], [0.0403687358, 0.0, 0.0, 0.0], [-0.485000014, 15.0, 16.0, 1.0], [0.00663875649, 0.0, 0.0, 0.0], [-0.0356632322, 0.0, 0.0, 0.0], [0.0311610904, 0.0, 0.0, 0.0], [-0.0757939965, 0.0, 0.0, 0.0], [-0.00526664779, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 15, 16, 12, 7, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 11, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_819(xs):
    #Predicts Class 3
    function_dict = np.array([[0.521499991, 1.0, 2.0, 0.0], [0.489499986, 3.0, 4.0, 0.0], [0.537500024, 5.0, 6.0, 0.0], [0.465499997, 7.0, 8.0, 0.0], [-0.0601253137, 0.0, 0.0, 0.0], [0.522500038, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [0.455500007, 13.0, 14.0, 0.0], [0.0845175236, 0.0, 0.0, 0.0], [0.08526887, 0.0, 0.0, 0.0], [0.527500033, 15.0, 16.0, 0.0], [0.543500006, 17.0, 18.0, 0.0], [-0.0995934755, 0.0, 0.0, 0.0], [0.445500016, 19.0, 20.0, 0.0], [0.463499993, 21.0, 22.0, 0.0], [-0.00879468583, 0.0, 0.0, 0.0], [0.074773699, 0.0, 0.0, 0.0], [-0.0318003967, 0.0, 0.0, 0.0], [0.567000031, 23.0, 24.0, 0.0], [-0.00148395507, 0.0, 0.0, 0.0], [0.0586753152, 0.0, 0.0, 0.0], [-0.0841997489, 0.0, 0.0, 0.0], [-0.0144220572, 0.0, 0.0, 0.0], [0.0510714166, 0.0, 0.0, 0.0], [-0.0109998444, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 8, 4, 9, 15, 16, 17, 23, 24, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 2, 5, 10, 6, 11, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_820(xs):
    #Predicts Class 4
    function_dict = np.array([[0.028549999, 1.0, 2.0, 0.0], [0.025150001, 3.0, 4.0, 0.0], [0.0368999988, 5.0, 6.0, 0.0], [0.0234000012, 7.0, 8.0, 0.0], [-0.107138291, 0.0, 0.0, 0.0], [0.167524666, 0.0, 0.0, 0.0], [0.0447499976, 9.0, 10.0, 0.0], [0.0137499999, 11.0, 12.0, 0.0], [0.109126054, 0.0, 0.0, 0.0], [-0.133081838, 0.0, 0.0, 0.0], [0.0506500006, 13.0, 14.0, 0.0], [0.00974999927, 15.0, 16.0, 0.0], [-0.0999793857, 0.0, 0.0, 0.0], [0.108764194, 0.0, 0.0, 0.0], [0.0694999993, 17.0, 18.0, 0.0], [-0.00282029458, 0.0, 0.0, 0.0], [0.119424306, 0.0, 0.0, 0.0], [-0.0950100869, 0.0, 0.0, 0.0], [0.0121831223, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_821(xs):
    #Predicts Class 5
    function_dict = np.array([[0.272000015, 1.0, 2.0, 0.0], [-0.0123999994, 3.0, 4.0, 0.0], [0.276499987, 5.0, 6.0, 0.0], [-0.0126499999, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 1.0], [0.109656125, 0.0, 0.0, 0.0], [0.341000021, 11.0, 12.0, 0.0], [-0.0742499977, 13.0, 14.0, 0.0], [0.117372662, 0.0, 0.0, 0.0], [0.256500006, 15.0, 16.0, 0.0], [-0.99849999, 17.0, 18.0, 1.0], [-0.0873261169, 0.0, 0.0, 0.0], [-0.972000003, 19.0, 20.0, 2.0], [-0.080400005, 21.0, 22.0, 0.0], [-0.0785167441, 0.0, 0.0, 0.0], [-0.0770495087, 0.0, 0.0, 0.0], [0.260500014, 23.0, 24.0, 0.0], [0.0497510731, 0.0, 0.0, 0.0], [-0.0431317091, 0.0, 0.0, 0.0], [0.534000039, 25.0, 26.0, 0.0], [0.479499996, 27.0, 28.0, 0.0], [-0.00473550055, 0.0, 0.0, 0.0], [0.0682049021, 0.0, 0.0, 0.0], [0.0592611358, 0.0, 0.0, 0.0], [-0.0777037442, 0.0, 0.0, 0.0], [0.0113166645, 0.0, 0.0, 0.0], [-0.0307718795, 0.0, 0.0, 0.0], [0.112701707, 0.0, 0.0, 0.0], [0.00535658281, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 15, 23, 24, 17, 18, 5, 11, 25, 26, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 9, 16, 10, 2, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_822(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.970499992, 3.0, 4.0, 4.0], [-0.102499999, 5.0, 6.0, 0.0], [-0.0385019071, 0.0, 0.0, 0.0], [0.00133534882, 0.0, 0.0, 0.0], [-0.179500014, 7.0, 8.0, 0.0], [-0.0235346891, 0.0, 0.0, 0.0], [-0.968500018, 9.0, 10.0, 4.0], [0.668500006, 11.0, 12.0, 2.0], [0.0377706252, 0.0, 0.0, 0.0], [-0.206499994, 13.0, 14.0, 0.0], [0.059091147, 0.0, 0.0, 0.0], [-0.00832143519, 0.0, 0.0, 0.0], [0.00717564672, 0.0, 0.0, 0.0], [-0.0559724569, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 9, 13, 14, 11, 12, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 10, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_823(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.992499948, 1.0, 2.0, 3.0], [-0.791499972, 3.0, 4.0, 1.0], [-0.930500031, 5.0, 6.0, 4.0], [-0.821500003, 7.0, 8.0, 1.0], [-0.657500029, 9.0, 10.0, 1.0], [-0.961500049, 11.0, 12.0, 4.0], [-0.979499996, 13.0, 14.0, 3.0], [-0.037806768, 0.0, 0.0, 0.0], [0.0547182672, 0.0, 0.0, 0.0], [-0.966500044, 15.0, 16.0, 4.0], [0.0131837027, 0.0, 0.0, 0.0], [0.461499989, 17.0, 18.0, 2.0], [-0.26700002, 19.0, 20.0, 0.0], [0.0510128029, 0.0, 0.0, 0.0], [-0.645500004, 21.0, 22.0, 1.0], [0.00881318562, 0.0, 0.0, 0.0], [-0.0621519051, 0.0, 0.0, 0.0], [-0.00826668739, 0.0, 0.0, 0.0], [0.0450160243, 0.0, 0.0, 0.0], [0.0195371341, 0.0, 0.0, 0.0], [-0.0617232211, 0.0, 0.0, 0.0], [-0.0229739547, 0.0, 0.0, 0.0], [0.0219131932, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 15, 16, 10, 17, 18, 19, 20, 13, 21, 22])
    branch_indices = np.array([0, 1, 3, 4, 9, 2, 5, 11, 12, 6, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_824(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.24849999, 1.0, 2.0, 0.0], [-0.895500004, 3.0, 4.0, 4.0], [-0.889500022, 5.0, 6.0, 4.0], [-0.0353820547, 0.0, 0.0, 0.0], [0.0170179997, 0.0, 0.0, 0.0], [-0.956499994, 7.0, 8.0, 4.0], [0.685500026, 9.0, 10.0, 2.0], [-0.994500041, 11.0, 12.0, 3.0], [0.526000023, 13.0, 14.0, 2.0], [-0.0461390689, 0.0, 0.0, 0.0], [0.0191933047, 0.0, 0.0, 0.0], [-0.719500005, 15.0, 16.0, 1.0], [-0.0349542312, 0.0, 0.0, 0.0], [0.00242179283, 0.0, 0.0, 0.0], [0.058685597, 0.0, 0.0, 0.0], [-0.00667727971, 0.0, 0.0, 0.0], [0.0325284451, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 12, 13, 14, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_825(xs):
    #Predicts Class 3
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.523499966, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.513000011, 7.0, 8.0, 0.0], [0.0650954843, 0.0, 0.0, 0.0], [0.561499953, 9.0, 10.0, 0.0], [-0.0785456002, 0.0, 0.0, 0.0], [0.503000021, 11.0, 12.0, 0.0], [-0.0447573625, 0.0, 0.0, 0.0], [0.549999952, 13.0, 14.0, 0.0], [0.588, 15.0, 16.0, 0.0], [0.466499984, 17.0, 18.0, 0.0], [0.0684514493, 0.0, 0.0, 0.0], [0.543500006, 19.0, 20.0, 0.0], [-0.064922139, 0.0, 0.0, 0.0], [0.0800051093, 0.0, 0.0, 0.0], [0.620499969, 21.0, 22.0, 0.0], [0.000619842205, 0.0, 0.0, 0.0], [-0.0827212483, 0.0, 0.0, 0.0], [-0.031498041, 0.0, 0.0, 0.0], [0.0433499925, 0.0, 0.0, 0.0], [-0.0766091496, 0.0, 0.0, 0.0], [0.0369656384, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 19, 20, 14, 15, 21, 22, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5, 9, 13, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_826(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00478500035, 1.0, 2.0, 0.0], [-0.00550500024, 3.0, 4.0, 0.0], [-0.00322999991, 5.0, 6.0, 0.0], [-0.00963000022, 7.0, 8.0, 0.0], [0.164459288, 0.0, 0.0, 0.0], [-0.135342926, 0.0, 0.0, 0.0], [-0.00200500013, 9.0, 10.0, 0.0], [-0.0152500002, 11.0, 12.0, 0.0], [-0.137664273, 0.0, 0.0, 0.0], [0.12713784, 0.0, 0.0, 0.0], [-0.000944999978, 13.0, 14.0, 0.0], [-0.0244999994, 15.0, 16.0, 0.0], [-0.0115, 17.0, 18.0, 0.0], [-0.137188971, 0.0, 0.0, 0.0], [0.00146499998, 19.0, 20.0, 0.0], [0.00160057854, 0.0, 0.0, 0.0], [-0.107866608, 0.0, 0.0, 0.0], [0.0345180519, 0.0, 0.0, 0.0], [0.147519723, 0.0, 0.0, 0.0], [0.111602008, 0.0, 0.0, 0.0], [-0.00587768806, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_827(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.523499966, 3.0, 4.0, 0.0], [-0.972000003, 5.0, 6.0, 2.0], [0.513000011, 7.0, 8.0, 0.0], [-0.0613210797, 0.0, 0.0, 0.0], [0.561499953, 9.0, 10.0, 0.0], [0.082034193, 0.0, 0.0, 0.0], [0.503000021, 11.0, 12.0, 0.0], [0.0470152497, 0.0, 0.0, 0.0], [0.549999952, 13.0, 14.0, 0.0], [0.588, 15.0, 16.0, 0.0], [0.466499984, 17.0, 18.0, 0.0], [-0.0657153428, 0.0, 0.0, 0.0], [0.543500006, 19.0, 20.0, 0.0], [0.0669336841, 0.0, 0.0, 0.0], [-0.0746985376, 0.0, 0.0, 0.0], [0.620499969, 21.0, 22.0, 0.0], [-0.00271953759, 0.0, 0.0, 0.0], [0.0844042897, 0.0, 0.0, 0.0], [0.0338131078, 0.0, 0.0, 0.0], [-0.0407705791, 0.0, 0.0, 0.0], [0.0783922896, 0.0, 0.0, 0.0], [-0.0221639983, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 19, 20, 14, 15, 21, 22, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5, 9, 13, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_828(xs):
    #Predicts Class 0
    function_dict = np.array([[0.484499991, 1.0, 2.0, 2.0], [-0.813500047, 3.0, 4.0, 1.0], [-0.234499991, 5.0, 6.0, 0.0], [-0.996500015, 7.0, 8.0, 3.0], [-0.993499994, 9.0, 10.0, 3.0], [-0.828999996, 11.0, 12.0, 4.0], [-0.141499996, 13.0, 14.0, 0.0], [-0.0114517529, 0.0, 0.0, 0.0], [0.0360579602, 0.0, 0.0, 0.0], [0.00312980218, 0.0, 0.0, 0.0], [0.428499997, 15.0, 16.0, 2.0], [-0.929499984, 17.0, 18.0, 4.0], [0.0173023101, 0.0, 0.0, 0.0], [-0.722499967, 19.0, 20.0, 1.0], [-0.0152806891, 0.0, 0.0, 0.0], [-0.00848568976, 0.0, 0.0, 0.0], [-0.0703589097, 0.0, 0.0, 0.0], [0.00880540442, 0.0, 0.0, 0.0], [-0.0621170029, 0.0, 0.0, 0.0], [0.0714764595, 0.0, 0.0, 0.0], [-0.647500038, 21.0, 22.0, 1.0], [-0.0391663574, 0.0, 0.0, 0.0], [0.0537324026, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 15, 16, 17, 18, 12, 19, 21, 22, 14])
    branch_indices = np.array([0, 1, 3, 4, 10, 2, 5, 11, 6, 13, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_829(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.975499988, 1.0, 2.0, 4.0], [-0.210500002, 3.0, 4.0, 0.0], [0.354499996, 5.0, 6.0, 2.0], [0.00908422004, 0.0, 0.0, 0.0], [-0.0392647609, 0.0, 0.0, 0.0], [0.0351993628, 0.0, 0.0, 0.0], [0.591500044, 7.0, 8.0, 2.0], [-0.192499995, 9.0, 10.0, 0.0], [-0.978500009, 11.0, 12.0, 3.0], [-0.213499993, 13.0, 14.0, 0.0], [0.0189262573, 0.0, 0.0, 0.0], [-0.926499963, 15.0, 16.0, 4.0], [-0.0177228749, 0.0, 0.0, 0.0], [-0.00226862519, 0.0, 0.0, 0.0], [-0.0651873648, 0.0, 0.0, 0.0], [0.0642845929, 0.0, 0.0, 0.0], [-0.00376140373, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 13, 14, 10, 15, 16, 12])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_830(xs):
    #Predicts Class 2
    function_dict = np.array([[0.673500001, 1.0, 2.0, 2.0], [-0.506500006, 3.0, 4.0, 1.0], [-0.864500046, 5.0, 6.0, 4.0], [-0.210500002, 7.0, 8.0, 0.0], [-0.981999993, 9.0, 10.0, 3.0], [-0.043984741, 0.0, 0.0, 0.0], [0.0158640668, 0.0, 0.0, 0.0], [-0.963500023, 11.0, 12.0, 4.0], [-0.179500014, 13.0, 14.0, 0.0], [0.0501559377, 0.0, 0.0, 0.0], [0.00446420582, 0.0, 0.0, 0.0], [0.0104175033, 0.0, 0.0, 0.0], [-0.0409407616, 0.0, 0.0, 0.0], [0.0388091579, 0.0, 0.0, 0.0], [-0.109499998, 15.0, 16.0, 0.0], [-0.0404327363, 0.0, 0.0, 0.0], [0.0209057927, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 15, 16, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 14, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_831(xs):
    #Predicts Class 3
    function_dict = np.array([[0.585000038, 1.0, 2.0, 0.0], [0.5625, 3.0, 4.0, 0.0], [0.618499994, 5.0, 6.0, 0.0], [0.556499958, 7.0, 8.0, 0.0], [-0.0874811113, 0.0, 0.0, 0.0], [0.093357265, 0.0, 0.0, 0.0], [-0.0304533001, 0.0, 0.0, 0.0], [0.541499972, 9.0, 10.0, 0.0], [0.0481405333, 0.0, 0.0, 0.0], [0.538499951, 11.0, 12.0, 0.0], [-0.062816672, 0.0, 0.0, 0.0], [-0.00115172262, 0.0, 0.0, 0.0], [0.095111087, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_832(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0101999994, 3.0, 4.0, 0.0], [0.0237000007, 5.0, 6.0, 0.0], [0.00768500008, 7.0, 8.0, 0.0], [-0.123523742, 0.0, 0.0, 0.0], [0.102825731, 0.0, 0.0, 0.0], [0.0256000012, 9.0, 10.0, 0.0], [0.00588999968, 11.0, 12.0, 0.0], [0.0966529176, 0.0, 0.0, 0.0], [-0.11105758, 0.0, 0.0, 0.0], [0.0271000005, 13.0, 14.0, 0.0], [0.00325499987, 15.0, 16.0, 0.0], [-0.14134261, 0.0, 0.0, 0.0], [0.152030066, 0.0, 0.0, 0.0], [0.0353999995, 17.0, 18.0, 0.0], [-0.00211054762, 0.0, 0.0, 0.0], [0.104056403, 0.0, 0.0, 0.0], [-0.0897858143, 0.0, 0.0, 0.0], [0.00949749071, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_833(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.972000003, 3.0, 4.0, 2.0], [0.212500006, 5.0, 6.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.0745999962, 9.0, 10.0, 0.0], [-0.193500012, 11.0, 12.0, 0.0], [0.428499997, 13.0, 14.0, 0.0], [-0.38349998, 15.0, 16.0, 0.0], [0.409500003, 17.0, 18.0, 0.0], [-0.00433777459, 0.0, 0.0, 0.0], [-0.923500001, 19.0, 20.0, 2.0], [-0.360500008, 21.0, 22.0, 0.0], [-0.972000003, 23.0, 24.0, 2.0], [-0.972000003, 25.0, 26.0, 2.0], [0.43599999, 27.0, 28.0, 0.0], [-0.401000023, 29.0, 30.0, 0.0], [0.0652595833, 0.0, 0.0, 0.0], [0.401499987, 31.0, 32.0, 0.0], [0.431500018, 33.0, 34.0, 0.0], [0.00759729184, 0.0, 0.0, 0.0], [-0.134108916, 0.0, 0.0, 0.0], [0.0006338518, 0.0, 0.0, 0.0], [0.0553614385, 0.0, 0.0, 0.0], [-0.0767520592, 0.0, 0.0, 0.0], [-0.0132244807, 0.0, 0.0, 0.0], [0.107903406, 0.0, 0.0, 0.0], [0.0298914723, 0.0, 0.0, 0.0], [-0.0616837442, 0.0, 0.0, 0.0], [0.527500033, 35.0, 36.0, 0.0], [0.0160584562, 0.0, 0.0, 0.0], [-0.0725333616, 0.0, 0.0, 0.0], [-0.0127674062, 0.0, 0.0, 0.0], [-0.0997153595, 0.0, 0.0, 0.0], [0.0770047605, 0.0, 0.0, 0.0], [-0.00405401085, 0.0, 0.0, 0.0], [0.0643076152, 0.0, 0.0, 0.0], [0.00419740472, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([29, 30, 16, 31, 32, 33, 34, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 17, 18, 4, 10, 2, 5, 11, 12, 6, 13, 14, 28])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_834(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.790500045, 3.0, 4.0, 1.0], [-0.767500043, 5.0, 6.0, 1.0], [-0.994500041, 7.0, 8.0, 3.0], [-0.0386335477, 0.0, 0.0, 0.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.925500035, 11.0, 12.0, 4.0], [-0.0236921627, 0.0, 0.0, 0.0], [0.0196419097, 0.0, 0.0, 0.0], [-0.0015681237, 0.0, 0.0, 0.0], [0.0400128774, 0.0, 0.0, 0.0], [0.631000042, 13.0, 14.0, 2.0], [-0.892500043, 15.0, 16.0, 4.0], [-0.952499986, 17.0, 18.0, 4.0], [0.0235964023, 0.0, 0.0, 0.0], [0.0532731973, 0.0, 0.0, 0.0], [-0.836500049, 19.0, 20.0, 4.0], [-0.000633515127, 0.0, 0.0, 0.0], [-0.0832397416, 0.0, 0.0, 0.0], [-0.0374646559, 0.0, 0.0, 0.0], [0.0165339839, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 10, 17, 18, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 2, 5, 6, 11, 13, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_835(xs):
    #Predicts Class 1
    function_dict = np.array([[0.436500013, 1.0, 2.0, 2.0], [0.361499995, 3.0, 4.0, 2.0], [-0.958500028, 5.0, 6.0, 3.0], [-0.996500015, 7.0, 8.0, 3.0], [-0.957499981, 9.0, 10.0, 4.0], [-0.892500043, 11.0, 12.0, 4.0], [0.0219222736, 0.0, 0.0, 0.0], [-0.0311769024, 0.0, 0.0, 0.0], [0.0138162468, 0.0, 0.0, 0.0], [0.0441273078, 0.0, 0.0, 0.0], [0.006518587, 0.0, 0.0, 0.0], [0.461499989, 13.0, 14.0, 2.0], [0.0210512094, 0.0, 0.0, 0.0], [-0.0673129633, 0.0, 0.0, 0.0], [-0.968500018, 15.0, 16.0, 4.0], [0.0292642452, 0.0, 0.0, 0.0], [-0.0230524987, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 13, 15, 16, 12, 6])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 11, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_836(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.612499952, 1.0, 2.0, 1.0], [-0.941499949, 3.0, 4.0, 4.0], [-0.960500002, 5.0, 6.0, 3.0], [-0.770500004, 7.0, 8.0, 1.0], [0.550500035, 9.0, 10.0, 2.0], [-0.789499998, 11.0, 12.0, 4.0], [-0.455500007, 13.0, 14.0, 1.0], [-0.0237461012, 0.0, 0.0, 0.0], [-0.994500041, 15.0, 16.0, 3.0], [0.0189662036, 0.0, 0.0, 0.0], [-0.0607811846, 0.0, 0.0, 0.0], [-0.931499958, 17.0, 18.0, 4.0], [-0.0106209544, 0.0, 0.0, 0.0], [-0.0380831696, 0.0, 0.0, 0.0], [0.00806924235, 0.0, 0.0, 0.0], [-0.0211673807, 0.0, 0.0, 0.0], [0.0548348837, 0.0, 0.0, 0.0], [0.607499957, 19.0, 20.0, 2.0], [0.0636610985, 0.0, 0.0, 0.0], [0.0253339689, 0.0, 0.0, 0.0], [-0.012013332, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 15, 16, 9, 10, 19, 20, 18, 12, 13, 14])
    branch_indices = np.array([0, 1, 3, 8, 4, 2, 5, 11, 17, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_837(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.00413500005, 1.0, 2.0, 0.0], [-0.00496499985, 3.0, 4.0, 0.0], [-0.00209000008, 5.0, 6.0, 0.0], [-0.00885999948, 7.0, 8.0, 0.0], [-0.187822729, 0.0, 0.0, 0.0], [0.16599521, 0.0, 0.0, 0.0], [-0.00132499996, 9.0, 10.0, 0.0], [-0.0101749999, 11.0, 12.0, 0.0], [0.163994253, 0.0, 0.0, 0.0], [-0.11104399, 0.0, 0.0, 0.0], [0.00185999996, 13.0, 14.0, 0.0], [-0.0150499996, 15.0, 16.0, 0.0], [-0.15562126, 0.0, 0.0, 0.0], [0.00118499994, 17.0, 18.0, 0.0], [0.0042849998, 19.0, 20.0, 0.0], [-0.00303422404, 0.0, 0.0, 0.0], [0.0956966802, 0.0, 0.0, 0.0], [0.0506065264, 0.0, 0.0, 0.0], [0.149630517, 0.0, 0.0, 0.0], [-0.115933329, 0.0, 0.0, 0.0], [0.000865457114, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_838(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.00413500005, 1.0, 2.0, 0.0], [-0.00496499985, 3.0, 4.0, 0.0], [-0.00209000008, 5.0, 6.0, 0.0], [-0.00885999948, 7.0, 8.0, 0.0], [0.189340949, 0.0, 0.0, 0.0], [-0.164209172, 0.0, 0.0, 0.0], [-0.00132499996, 9.0, 10.0, 0.0], [-0.0101749999, 11.0, 12.0, 0.0], [-0.156094611, 0.0, 0.0, 0.0], [0.123449467, 0.0, 0.0, 0.0], [0.00185999996, 13.0, 14.0, 0.0], [-0.0150499996, 15.0, 16.0, 0.0], [0.157732964, 0.0, 0.0, 0.0], [0.00118499994, 17.0, 18.0, 0.0], [0.0042849998, 19.0, 20.0, 0.0], [0.00375869591, 0.0, 0.0, 0.0], [-0.217891604, 0.0, 0.0, 0.0], [-0.049245365, 0.0, 0.0, 0.0], [-0.148085803, 0.0, 0.0, 0.0], [0.117616028, 0.0, 0.0, 0.0], [-0.00498291058, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_839(xs):
    #Predicts Class 5
    function_dict = np.array([[0.528499961, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [0.538499951, 5.0, 6.0, 0.0], [0.489499986, 7.0, 8.0, 0.0], [0.522500038, 9.0, 10.0, 0.0], [0.105276912, 0.0, 0.0, 0.0], [0.541499972, 11.0, 12.0, 0.0], [0.465499997, 13.0, 14.0, 0.0], [0.0633226559, 0.0, 0.0, 0.0], [-0.0870589316, 0.0, 0.0, 0.0], [-0.0122883543, 0.0, 0.0, 0.0], [-0.0673616305, 0.0, 0.0, 0.0], [0.547500014, 15.0, 16.0, 0.0], [0.429499984, 17.0, 18.0, 0.0], [-0.101984397, 0.0, 0.0, 0.0], [0.0588272437, 0.0, 0.0, 0.0], [0.557999969, 19.0, 20.0, 0.0], [-0.00544099696, 0.0, 0.0, 0.0], [0.0302628651, 0.0, 0.0, 0.0], [-0.0384092741, 0.0, 0.0, 0.0], [0.0246561803, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 10, 5, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_840(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.957499981, 1.0, 2.0, 4.0], [0.511500001, 3.0, 4.0, 2.0], [0.511500001, 5.0, 6.0, 2.0], [-0.792500019, 7.0, 8.0, 1.0], [0.0114240414, 0.0, 0.0, 0.0], [0.458499998, 9.0, 10.0, 2.0], [0.54550004, 11.0, 12.0, 2.0], [-0.828500032, 13.0, 14.0, 1.0], [-0.0529607199, 0.0, 0.0, 0.0], [-0.781000018, 15.0, 16.0, 1.0], [0.057845965, 0.0, 0.0, 0.0], [-0.0448996685, 0.0, 0.0, 0.0], [-0.806499958, 17.0, 18.0, 4.0], [-0.0250135753, 0.0, 0.0, 0.0], [0.0190134794, 0.0, 0.0, 0.0], [0.0233879648, 0.0, 0.0, 0.0], [-0.0313599221, 0.0, 0.0, 0.0], [-0.871500015, 19.0, 20.0, 4.0], [-0.730999947, 21.0, 22.0, 4.0], [-0.0051045157, 0.0, 0.0, 0.0], [0.0591175817, 0.0, 0.0, 0.0], [-0.0403074734, 0.0, 0.0, 0.0], [-0.000178973845, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 15, 16, 10, 11, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 9, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_841(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.913499951, 1.0, 2.0, 3.0], [-0.982499957, 3.0, 4.0, 3.0], [-0.022312101, 0.0, 0.0, 0.0], [-0.138500005, 5.0, 6.0, 0.0], [-0.69749999, 7.0, 8.0, 1.0], [-0.2095, 9.0, 10.0, 0.0], [-0.0566804335, 0.0, 0.0, 0.0], [-0.944999993, 11.0, 12.0, 4.0], [-0.606000006, 13.0, 14.0, 1.0], [0.461499989, 15.0, 16.0, 2.0], [-0.960500002, 17.0, 18.0, 4.0], [0.070528321, 0.0, 0.0, 0.0], [0.00986296404, 0.0, 0.0, 0.0], [-0.0333584473, 0.0, 0.0, 0.0], [0.00319984695, 0.0, 0.0, 0.0], [-0.0310231261, 0.0, 0.0, 0.0], [0.00633122865, 0.0, 0.0, 0.0], [0.0578294732, 0.0, 0.0, 0.0], [0.00120925345, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 6, 11, 12, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 4, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_842(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.725499988, 1.0, 2.0, 4.0], [-0.186500013, 3.0, 4.0, 0.0], [0.0299729481, 0.0, 0.0, 0.0], [-0.756500006, 5.0, 6.0, 1.0], [-0.095449999, 7.0, 8.0, 0.0], [0.0266143065, 0.0, 0.0, 0.0], [-0.5995, 9.0, 10.0, 1.0], [-0.950500011, 11.0, 12.0, 4.0], [-0.0185717195, 0.0, 0.0, 0.0], [0.528999984, 13.0, 14.0, 2.0], [-0.872500002, 15.0, 16.0, 4.0], [-0.0188171677, 0.0, 0.0, 0.0], [0.0579802841, 0.0, 0.0, 0.0], [-0.0651809201, 0.0, 0.0, 0.0], [-0.01497343, 0.0, 0.0, 0.0], [0.0282942262, 0.0, 0.0, 0.0], [-0.0489527136, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 13, 14, 15, 16, 11, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 6, 9, 10, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_843(xs):
    #Predicts Class 3
    function_dict = np.array([[0.415000021, 1.0, 2.0, 0.0], [0.404500008, 3.0, 4.0, 0.0], [0.424000025, 5.0, 6.0, 0.0], [0.273999989, 7.0, 8.0, 0.0], [0.406499982, 9.0, 10.0, 0.0], [0.08036118, 0.0, 0.0, 0.0], [0.431500018, 11.0, 12.0, 0.0], [0.263000011, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [-0.0301976185, 0.0, 0.0, 0.0], [-0.103375085, 0.0, 0.0, 0.0], [-0.0787992552, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.228500009, 19.0, 20.0, 0.0], [-0.114699252, 0.0, 0.0, 0.0], [0.392499983, 21.0, 22.0, 0.0], [-0.0531565398, 0.0, 0.0, 0.0], [0.46450001, 23.0, 24.0, 0.0], [0.527500033, 25.0, 26.0, 0.0], [-0.000669621862, 0.0, 0.0, 0.0], [0.0679569468, 0.0, 0.0, 0.0], [0.148691356, 0.0, 0.0, 0.0], [0.00173630193, 0.0, 0.0, 0.0], [0.0500304587, 0.0, 0.0, 0.0], [0.00252676103, 0.0, 0.0, 0.0], [-0.0492338985, 0.0, 0.0, 0.0], [0.00130509096, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 21, 22, 16, 9, 10, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 2, 6, 12, 17, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_844(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0240500011, 1.0, 2.0, 0.0], [0.0203999989, 3.0, 4.0, 0.0], [0.02685, 5.0, 6.0, 0.0], [0.0110500008, 7.0, 8.0, 0.0], [-0.129143313, 0.0, 0.0, 0.0], [0.115831085, 0.0, 0.0, 0.0], [0.0353999995, 9.0, 10.0, 0.0], [0.00146499998, 11.0, 12.0, 0.0], [0.126339257, 0.0, 0.0, 0.0], [-0.0809076801, 0.0, 0.0, 0.0], [0.0417999998, 13.0, 14.0, 0.0], [-0.000469999999, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.127006114, 0.0, 0.0, 0.0], [0.0477499999, 19.0, 20.0, 0.0], [-0.00254832418, 0.0, 0.0, 0.0], [0.135743394, 0.0, 0.0, 0.0], [-0.11615853, 0.0, 0.0, 0.0], [0.140368238, 0.0, 0.0, 0.0], [-0.144654647, 0.0, 0.0, 0.0], [0.0109184384, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_845(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.253000021, 5.0, 6.0, 0.0], [0.527999997, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [-0.418500006, 11.0, 12.0, 0.0], [0.344999999, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.538499951, 17.0, 18.0, 0.0], [-0.0989242643, 0.0, 0.0, 0.0], [0.0205793716, 0.0, 0.0, 0.0], [0.0477291234, 0.0, 0.0, 0.0], [-0.995499969, 19.0, 20.0, 1.0], [0.118650459, 0.0, 0.0, 0.0], [0.430999994, 21.0, 22.0, 0.0], [0.513000011, 23.0, 24.0, 0.0], [-0.0745999962, 25.0, 26.0, 0.0], [0.115718067, 0.0, 0.0, 0.0], [0.557999969, 27.0, 28.0, 0.0], [-0.0386499986, 29.0, 30.0, 0.0], [-0.0663038492, 0.0, 0.0, 0.0], [-0.0720872134, 0.0, 0.0, 0.0], [0.527500033, 31.0, 32.0, 0.0], [-0.00357084814, 0.0, 0.0, 0.0], [0.0586106032, 0.0, 0.0, 0.0], [-0.0017650231, 0.0, 0.0, 0.0], [-0.110437557, 0.0, 0.0, 0.0], [-0.0201149285, 0.0, 0.0, 0.0], [0.0630744994, 0.0, 0.0, 0.0], [-0.0391810164, 0.0, 0.0, 0.0], [0.0397210084, 0.0, 0.0, 0.0], [0.0521066822, 0.0, 0.0, 0.0], [0.000517136184, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 17, 27, 28, 9, 10, 11, 29, 30, 20, 13, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 2, 5, 12, 19, 6, 14, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_846(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.213499993, 1.0, 2.0, 0.0], [-0.828999996, 3.0, 4.0, 4.0], [-0.1875, 5.0, 6.0, 0.0], [-0.759500027, 7.0, 8.0, 1.0], [0.0261293985, 0.0, 0.0, 0.0], [-0.941499949, 9.0, 10.0, 4.0], [-0.593500018, 11.0, 12.0, 1.0], [0.440500021, 13.0, 14.0, 2.0], [-0.25849998, 15.0, 16.0, 0.0], [0.0567075983, 0.0, 0.0, 0.0], [-0.00403058948, 0.0, 0.0, 0.0], [-0.799499989, 17.0, 18.0, 1.0], [0.0264899991, 0.0, 0.0, 0.0], [-0.033477772, 0.0, 0.0, 0.0], [0.0366497189, 0.0, 0.0, 0.0], [-0.00227805623, 0.0, 0.0, 0.0], [-0.0657705441, 0.0, 0.0, 0.0], [0.0190116894, 0.0, 0.0, 0.0], [-0.944499969, 19.0, 20.0, 4.0], [-0.058404725, 0.0, 0.0, 0.0], [-0.00811571814, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 4, 9, 10, 17, 19, 20, 12])
    branch_indices = np.array([0, 1, 3, 7, 8, 2, 5, 6, 11, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_847(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.2755, 1.0, 2.0, 0.0], [-0.4745, 3.0, 4.0, 1.0], [-0.256500006, 5.0, 6.0, 0.0], [-0.916999996, 7.0, 8.0, 4.0], [0.0400870517, 0.0, 0.0, 0.0], [-0.0426221713, 0.0, 0.0, 0.0], [-0.989500046, 9.0, 10.0, 3.0], [-0.945500016, 11.0, 12.0, 4.0], [-0.033224564, 0.0, 0.0, 0.0], [-0.941499949, 13.0, 14.0, 4.0], [-0.229499996, 15.0, 16.0, 0.0], [-0.0148596307, 0.0, 0.0, 0.0], [0.0394167453, 0.0, 0.0, 0.0], [0.381999999, 17.0, 18.0, 2.0], [0.0199177396, 0.0, 0.0, 0.0], [0.0514720418, 0.0, 0.0, 0.0], [-0.1875, 19.0, 20.0, 0.0], [0.00917421654, 0.0, 0.0, 0.0], [-0.0356494375, 0.0, 0.0, 0.0], [-0.0366037637, 0.0, 0.0, 0.0], [0.0391893126, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 17, 18, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 9, 13, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_848(xs):
    #Predicts Class 2
    function_dict = np.array([[0.386500001, 1.0, 2.0, 2.0], [-0.0242974516, 0.0, 0.0, 0.0], [-0.958500028, 3.0, 4.0, 4.0], [-0.994500041, 5.0, 6.0, 3.0], [0.569499969, 7.0, 8.0, 2.0], [0.0429381356, 0.0, 0.0, 0.0], [-0.00567023875, 0.0, 0.0, 0.0], [0.51849997, 9.0, 10.0, 2.0], [-0.940500021, 11.0, 12.0, 3.0], [0.00525616203, 0.0, 0.0, 0.0], [-0.0554075167, 0.0, 0.0, 0.0], [-0.240500003, 13.0, 14.0, 0.0], [0.0353989787, 0.0, 0.0, 0.0], [-0.0335821174, 0.0, 0.0, 0.0], [0.0187120959, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 9, 10, 13, 14, 12])
    branch_indices = np.array([0, 2, 3, 4, 7, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_849(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.851999998, 1.0, 2.0, 2.0], [-0.885499954, 3.0, 4.0, 2.0], [-0.00499999989, 5.0, 6.0, 0.0], [-0.119499996, 7.0, 8.0, 0.0], [-0.0701995715, 0.0, 0.0, 0.0], [-0.0578999966, 9.0, 10.0, 0.0], [0.0122999996, 11.0, 12.0, 0.0], [-0.127499998, 13.0, 14.0, 0.0], [-0.057099998, 15.0, 16.0, 0.0], [-0.0744500011, 17.0, 18.0, 0.0], [-0.102857754, 0.0, 0.0, 0.0], [0.119251274, 0.0, 0.0, 0.0], [-0.99849999, 19.0, 20.0, 1.0], [-0.132499993, 21.0, 22.0, 0.0], [-0.125499994, 23.0, 24.0, 0.0], [-0.0721499994, 25.0, 26.0, 0.0], [-0.0496499985, 27.0, 28.0, 0.0], [-0.201499999, 29.0, 30.0, 0.0], [0.166586965, 0.0, 0.0, 0.0], [-0.0629565641, 0.0, 0.0, 0.0], [0.0741836429, 0.0, 0.0, 0.0], [0.0114320172, 0.0, 0.0, 0.0], [-0.0626741648, 0.0, 0.0, 0.0], [0.0866894722, 0.0, 0.0, 0.0], [0.0202530939, 0.0, 0.0, 0.0], [-0.0119074527, 0.0, 0.0, 0.0], [-0.160318807, 0.0, 0.0, 0.0], [0.22957015, 0.0, 0.0, 0.0], [-0.00212109857, 0.0, 0.0, 0.0], [0.0146712577, 0.0, 0.0, 0.0], [-0.0452038832, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 25, 26, 27, 28, 4, 29, 30, 18, 10, 11, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 16, 2, 5, 9, 17, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_850(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.401000023, 3.0, 4.0, 0.0], [-0.260500014, 5.0, 6.0, 0.0], [-0.0590804107, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [-0.333499998, 9.0, 10.0, 0.0], [-0.0403999984, 11.0, 12.0, 0.0], [0.0861596987, 0.0, 0.0, 0.0], [-0.273499995, 13.0, 14.0, 0.0], [-0.0240871739, 0.0, 0.0, 0.0], [0.0913079679, 0.0, 0.0, 0.0], [-0.607499957, 15.0, 16.0, 2.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.284500003, 19.0, 20.0, 0.0], [-0.191500008, 21.0, 22.0, 0.0], [-0.148499995, 23.0, 24.0, 0.0], [0.031845741, 0.0, 0.0, 0.0], [0.108377561, 0.0, 0.0, 0.0], [0.0131000001, 25.0, 26.0, 0.0], [0.00463275658, 0.0, 0.0, 0.0], [-0.0481329001, 0.0, 0.0, 0.0], [0.0396435224, 0.0, 0.0, 0.0], [0.000337227451, 0.0, 0.0, 0.0], [-0.0384635292, 0.0, 0.0, 0.0], [-0.156143069, 0.0, 0.0, 0.0], [-0.0180373993, 0.0, 0.0, 0.0], [-0.06157168, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 19, 20, 21, 22, 9, 10, 23, 24, 16, 17, 25, 26])
    branch_indices = np.array([0, 1, 4, 8, 13, 14, 2, 5, 6, 11, 15, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_851(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.393000007, 3.0, 4.0, 0.0], [-0.0123999994, 5.0, 6.0, 0.0], [-0.407499999, 7.0, 8.0, 0.0], [-0.99849999, 9.0, 10.0, 1.0], [-0.0126499999, 11.0, 12.0, 0.0], [0.198500007, 13.0, 14.0, 0.0], [-0.424499989, 15.0, 16.0, 0.0], [0.0862321183, 0.0, 0.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [0.0133440048, 0.0, 0.0, 0.0], [-0.149500012, 19.0, 20.0, 0.0], [0.115500905, 0.0, 0.0, 0.0], [-0.068330273, 0.0, 0.0, 0.0], [-0.923500001, 21.0, 22.0, 2.0], [-0.48299998, 23.0, 24.0, 0.0], [-0.0506697409, 0.0, 0.0, 0.0], [-0.168500006, 25.0, 26.0, 0.0], [-0.01028118, 0.0, 0.0, 0.0], [-0.158500001, 27.0, 28.0, 0.0], [-0.972000003, 29.0, 30.0, 2.0], [-0.972000003, 31.0, 32.0, 2.0], [-0.770500004, 33.0, 34.0, 2.0], [0.00204991293, 0.0, 0.0, 0.0], [0.0308471601, 0.0, 0.0, 0.0], [-0.0028352798, 0.0, 0.0, 0.0], [-0.0921519771, 0.0, 0.0, 0.0], [0.0525162593, 0.0, 0.0, 0.0], [0.0223087724, 0.0, 0.0, 0.0], [-0.113857388, 0.0, 0.0, 0.0], [0.0480911992, 0.0, 0.0, 0.0], [0.00390188955, 0.0, 0.0, 0.0], [0.0744591951, 0.0, 0.0, 0.0], [-0.0660232306, 0.0, 0.0, 0.0], [0.00118145382, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 8, 25, 26, 18, 10, 27, 28, 29, 30, 12, 13, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 9, 17, 2, 5, 11, 19, 20, 6, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_852(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.250499994, 1.0, 2.0, 0.0], [-0.847499967, 3.0, 4.0, 4.0], [-0.957499981, 5.0, 6.0, 4.0], [-0.938500047, 7.0, 8.0, 4.0], [-0.0563607216, 0.0, 0.0, 0.0], [-0.997500002, 9.0, 10.0, 3.0], [-0.701499999, 11.0, 12.0, 1.0], [-0.0261963774, 0.0, 0.0, 0.0], [0.0360268205, 0.0, 0.0, 0.0], [0.0184389632, 0.0, 0.0, 0.0], [0.448499978, 13.0, 14.0, 2.0], [0.485500008, 15.0, 16.0, 2.0], [-0.962499976, 17.0, 18.0, 3.0], [0.0164536647, 0.0, 0.0, 0.0], [-0.0610278174, 0.0, 0.0, 0.0], [-0.191500008, 19.0, 20.0, 0.0], [0.0678301826, 0.0, 0.0, 0.0], [-0.566499949, 21.0, 22.0, 1.0], [0.0347762108, 0.0, 0.0, 0.0], [-0.0206555948, 0.0, 0.0, 0.0], [0.0253357552, 0.0, 0.0, 0.0], [-0.0520167463, 0.0, 0.0, 0.0], [0.0264183637, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 9, 13, 14, 19, 20, 16, 21, 22, 18])
    branch_indices = np.array([0, 1, 3, 2, 5, 10, 6, 11, 15, 12, 17])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_853(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.132499993, 3.0, 4.0, 0.0], [-0.315500021, 5.0, 6.0, 0.0], [0.386500001, 7.0, 8.0, 2.0], [-0.0374725051, 0.0, 0.0, 0.0], [0.0205605421, 0.0, 0.0, 0.0], [-0.230500013, 9.0, 10.0, 0.0], [0.0506273061, 0.0, 0.0, 0.0], [0.444499999, 11.0, 12.0, 2.0], [0.532000005, 13.0, 14.0, 2.0], [-0.726500034, 15.0, 16.0, 1.0], [-0.0399944559, 0.0, 0.0, 0.0], [0.565500021, 17.0, 18.0, 2.0], [-0.0717486441, 0.0, 0.0, 0.0], [-0.00477831764, 0.0, 0.0, 0.0], [0.0273148026, 0.0, 0.0, 0.0], [-0.0185856149, 0.0, 0.0, 0.0], [0.035887368, 0.0, 0.0, 0.0], [-0.00901986286, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 17, 18, 4, 5, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 8, 12, 2, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_854(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.506500006, 1.0, 2.0, 1.0], [0.540500045, 3.0, 4.0, 2.0], [-0.949000001, 5.0, 6.0, 3.0], [-0.205500007, 7.0, 8.0, 0.0], [-0.233500004, 9.0, 10.0, 0.0], [0.675500035, 11.0, 12.0, 2.0], [-0.0134085845, 0.0, 0.0, 0.0], [-0.0496850535, 0.0, 0.0, 0.0], [0.442499995, 13.0, 14.0, 2.0], [0.0347414017, 0.0, 0.0, 0.0], [-0.566499949, 15.0, 16.0, 1.0], [0.0515954792, 0.0, 0.0, 0.0], [-0.00188393088, 0.0, 0.0, 0.0], [-0.0242816564, 0.0, 0.0, 0.0], [0.0275126193, 0.0, 0.0, 0.0], [-0.632500052, 17.0, 18.0, 1.0], [-0.0461205095, 0.0, 0.0, 0.0], [-0.0205150787, 0.0, 0.0, 0.0], [0.0422116406, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 9, 17, 18, 16, 11, 12, 6])
    branch_indices = np.array([0, 1, 3, 8, 4, 10, 15, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_855(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.190499991, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.0468608961, 0.0, 0.0, 0.0], [-0.747500002, 9.0, 10.0, 2.0], [-0.142500013, 11.0, 12.0, 0.0], [-0.0236994792, 0.0, 0.0, 0.0], [0.0349968374, 0.0, 0.0, 0.0], [-0.999500036, 13.0, 14.0, 1.0], [-0.0353629179, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.141499996, 17.0, 18.0, 0.0], [-0.2095, 19.0, 20.0, 0.0], [0.0982659087, 0.0, 0.0, 0.0], [-0.185499996, 21.0, 22.0, 0.0], [0.00348899816, 0.0, 0.0, 0.0], [0.116024271, 0.0, 0.0, 0.0], [-0.136500001, 23.0, 24.0, 0.0], [0.0842749998, 0.0, 0.0, 0.0], [-0.0130917514, 0.0, 0.0, 0.0], [-0.00224017515, 0.0, 0.0, 0.0], [-0.153258681, 0.0, 0.0, 0.0], [-0.0347191319, 0.0, 0.0, 0.0], [0.00186089124, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 19, 20, 14, 10, 21, 22, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 2, 5, 9, 13, 6, 11, 15, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_856(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0914499983, 3.0, 4.0, 0.0], [-0.0742499977, 5.0, 6.0, 0.0], [-0.0973500013, 7.0, 8.0, 0.0], [0.12065056, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [-0.0673500001, 11.0, 12.0, 0.0], [-0.100500003, 13.0, 14.0, 0.0], [-0.113588825, 0.0, 0.0, 0.0], [-0.0830000043, 15.0, 16.0, 0.0], [-0.142549947, 0.0, 0.0, 0.0], [-0.0720499977, 17.0, 18.0, 0.0], [-0.0579499975, 19.0, 20.0, 0.0], [-0.972000003, 21.0, 22.0, 2.0], [0.100048296, 0.0, 0.0, 0.0], [-0.0352389403, 0.0, 0.0, 0.0], [-0.00654357718, 0.0, 0.0, 0.0], [-0.00332562625, 0.0, 0.0, 0.0], [0.120281659, 0.0, 0.0, 0.0], [-0.145992368, 0.0, 0.0, 0.0], [-0.0494500026, 23.0, 24.0, 0.0], [0.00465011364, 0.0, 0.0, 0.0], [-0.0274661928, 0.0, 0.0, 0.0], [0.118473187, 0.0, 0.0, 0.0], [-0.00651535671, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 4, 15, 16, 10, 17, 18, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_857(xs):
    #Predicts Class 5
    function_dict = np.array([[0.539999962, 1.0, 2.0, 0.0], [0.534000039, 3.0, 4.0, 0.0], [0.556499958, 5.0, 6.0, 0.0], [-0.885499954, 7.0, 8.0, 2.0], [-0.103720255, 0.0, 0.0, 0.0], [0.543500006, 9.0, 10.0, 0.0], [0.565500021, 11.0, 12.0, 0.0], [-0.999500036, 13.0, 14.0, 4.0], [-0.997500002, 15.0, 16.0, 1.0], [0.0717959851, 0.0, 0.0, 0.0], [0.0236098655, 0.0, 0.0, 0.0], [-0.0376401618, 0.0, 0.0, 0.0], [0.620499969, 17.0, 18.0, 0.0], [0.522500038, 19.0, 20.0, 0.0], [0.263000011, 21.0, 22.0, 0.0], [-0.077700004, 23.0, 24.0, 0.0], [0.0240249783, 0.0, 0.0, 0.0], [0.0505018234, 0.0, 0.0, 0.0], [-0.010354395, 0.0, 0.0, 0.0], [-0.00217868993, 0.0, 0.0, 0.0], [0.0604273193, 0.0, 0.0, 0.0], [-0.0159008689, 0.0, 0.0, 0.0], [0.121105693, 0.0, 0.0, 0.0], [0.0149571626, 0.0, 0.0, 0.0], [-0.107043587, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 16, 4, 9, 10, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 2, 5, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_858(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.569499969, 1.0, 2.0, 1.0], [0.456499994, 3.0, 4.0, 2.0], [0.715000033, 5.0, 6.0, 2.0], [-0.180500001, 7.0, 8.0, 0.0], [-0.2095, 9.0, 10.0, 0.0], [-0.0414189398, 0.0, 0.0, 0.0], [0.00664076023, 0.0, 0.0, 0.0], [-0.945500016, 11.0, 12.0, 4.0], [-0.0350862592, 0.0, 0.0, 0.0], [-0.996500015, 13.0, 14.0, 3.0], [-0.140500009, 15.0, 16.0, 0.0], [-0.0207781084, 0.0, 0.0, 0.0], [0.0376652591, 0.0, 0.0, 0.0], [-0.029029727, 0.0, 0.0, 0.0], [0.555500031, 17.0, 18.0, 2.0], [0.0537563562, 0.0, 0.0, 0.0], [0.00433847448, 0.0, 0.0, 0.0], [0.0497423783, 0.0, 0.0, 0.0], [-0.021037709, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 13, 17, 18, 15, 16, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 14, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_859(xs):
    #Predicts Class 1
    function_dict = np.array([[0.361499995, 1.0, 2.0, 2.0], [-0.79550004, 3.0, 4.0, 1.0], [0.466499984, 5.0, 6.0, 2.0], [0.00296210963, 0.0, 0.0, 0.0], [-0.0412994102, 0.0, 0.0, 0.0], [-0.996500015, 7.0, 8.0, 3.0], [-0.233500004, 9.0, 10.0, 0.0], [0.0647539049, 0.0, 0.0, 0.0], [-0.218499988, 11.0, 12.0, 0.0], [0.530499995, 13.0, 14.0, 2.0], [-0.191500008, 15.0, 16.0, 0.0], [0.0182723533, 0.0, 0.0, 0.0], [-0.0411473475, 0.0, 0.0, 0.0], [-0.0207777061, 0.0, 0.0, 0.0], [-0.332499981, 17.0, 18.0, 0.0], [-0.657500029, 19.0, 20.0, 1.0], [0.0146601275, 0.0, 0.0, 0.0], [-0.0174672157, 0.0, 0.0, 0.0], [0.0312839933, 0.0, 0.0, 0.0], [-0.0592809729, 0.0, 0.0, 0.0], [0.004800505, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 11, 12, 13, 17, 18, 19, 20, 16])
    branch_indices = np.array([0, 1, 2, 5, 8, 6, 9, 14, 10, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_860(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.794499993, 1.0, 2.0, 4.0], [-0.872500002, 3.0, 4.0, 4.0], [0.0224432573, 0.0, 0.0, 0.0], [-0.983500004, 5.0, 6.0, 3.0], [-0.0321724787, 0.0, 0.0, 0.0], [0.534500003, 7.0, 8.0, 2.0], [-0.926499963, 9.0, 10.0, 4.0], [-0.718500018, 11.0, 12.0, 1.0], [-0.996500015, 13.0, 14.0, 3.0], [-9.0713329e-05, 0.0, 0.0, 0.0], [0.0526913963, 0.0, 0.0, 0.0], [-0.0083905058, 0.0, 0.0, 0.0], [0.0438382886, 0.0, 0.0, 0.0], [-0.012974889, 0.0, 0.0, 0.0], [-0.0574541427, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_861(xs):
    #Predicts Class 3
    function_dict = np.array([[0.487500012, 1.0, 2.0, 0.0], [0.46450001, 3.0, 4.0, 0.0], [0.537500024, 5.0, 6.0, 0.0], [0.446500003, 7.0, 8.0, 0.0], [-0.0648558959, 0.0, 0.0, 0.0], [0.521499991, 9.0, 10.0, 0.0], [0.585000038, 11.0, 12.0, 0.0], [0.436500013, 13.0, 14.0, 0.0], [0.0691336542, 0.0, 0.0, 0.0], [0.0127607519, 0.0, 0.0, 0.0], [0.0728997439, 0.0, 0.0, 0.0], [0.543500006, 15.0, 16.0, 0.0], [0.618499994, 17.0, 18.0, 0.0], [0.434499979, 19.0, 20.0, 0.0], [-0.0599894151, 0.0, 0.0, 0.0], [-0.0532186627, 0.0, 0.0, 0.0], [0.549000025, 21.0, 22.0, 0.0], [0.0746393949, 0.0, 0.0, 0.0], [-0.0225938056, 0.0, 0.0, 0.0], [-0.00146491209, 0.0, 0.0, 0.0], [0.0718505383, 0.0, 0.0, 0.0], [0.0360879526, 0.0, 0.0, 0.0], [-0.0441137776, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 9, 10, 15, 21, 22, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 6, 11, 16, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_862(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00456999987, 1.0, 2.0, 0.0], [0.00202000001, 3.0, 4.0, 0.0], [0.0079549998, 5.0, 6.0, 0.0], [0.000549999997, 7.0, 8.0, 0.0], [-0.139380306, 0.0, 0.0, 0.0], [0.107058242, 0.0, 0.0, 0.0], [0.0192999989, 9.0, 10.0, 0.0], [-0.000834999955, 11.0, 12.0, 0.0], [0.119757213, 0.0, 0.0, 0.0], [0.0101999994, 13.0, 14.0, 0.0], [0.0237000007, 15.0, 16.0, 0.0], [-0.00163000007, 17.0, 18.0, 0.0], [-0.119384058, 0.0, 0.0, 0.0], [-0.00101914885, 0.0, 0.0, 0.0], [-0.105519101, 0.0, 0.0, 0.0], [0.0969712287, 0.0, 0.0, 0.0], [0.0256000012, 19.0, 20.0, 0.0], [-0.0035863521, 0.0, 0.0, 0.0], [0.110180266, 0.0, 0.0, 0.0], [-0.0957359672, 0.0, 0.0, 0.0], [0.00750399707, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_863(xs):
    #Predicts Class 5
    function_dict = np.array([[0.537500024, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [0.585000038, 5.0, 6.0, 0.0], [0.489499986, 7.0, 8.0, 0.0], [-0.0692611709, 0.0, 0.0, 0.0], [0.549000025, 9.0, 10.0, 0.0], [0.618499994, 11.0, 12.0, 0.0], [0.465499997, 13.0, 14.0, 0.0], [0.0420567244, 0.0, 0.0, 0.0], [0.543500006, 15.0, 16.0, 0.0], [0.561499953, 17.0, 18.0, 0.0], [-0.0726714358, 0.0, 0.0, 0.0], [0.0351430066, 0.0, 0.0, 0.0], [0.436500013, 19.0, 20.0, 0.0], [-0.0704260767, 0.0, 0.0, 0.0], [0.0558061935, 0.0, 0.0, 0.0], [-0.0326561444, 0.0, 0.0, 0.0], [0.0600227676, 0.0, 0.0, 0.0], [0.014965713, 0.0, 0.0, 0.0], [0.00126752455, 0.0, 0.0, 0.0], [0.0402776524, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 15, 16, 17, 18, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 10, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_864(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.166500002, 1.0, 2.0, 0.0], [-0.921499968, 3.0, 4.0, 3.0], [0.452499986, 5.0, 6.0, 2.0], [0.713500023, 7.0, 8.0, 2.0], [0.0313449576, 0.0, 0.0, 0.0], [-0.0139902439, 0.0, 0.0, 0.0], [0.669499993, 9.0, 10.0, 2.0], [-0.864500046, 11.0, 12.0, 4.0], [0.0229506288, 0.0, 0.0, 0.0], [0.046849899, 0.0, 0.0, 0.0], [-0.00918844435, 0.0, 0.0, 0.0], [-0.921499968, 13.0, 14.0, 4.0], [-0.0732326657, 0.0, 0.0, 0.0], [-0.0163056608, 0.0, 0.0, 0.0], [0.0361429825, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_865(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.218499988, 1.0, 2.0, 0.0], [0.368499994, 3.0, 4.0, 2.0], [-0.194499999, 5.0, 6.0, 0.0], [-0.0417596996, 0.0, 0.0, 0.0], [-0.958500028, 7.0, 8.0, 4.0], [0.489499986, 9.0, 10.0, 2.0], [-0.805500031, 11.0, 12.0, 1.0], [-0.734500051, 13.0, 14.0, 1.0], [-0.742500007, 15.0, 16.0, 1.0], [0.055707708, 0.0, 0.0, 0.0], [-5.47308155e-05, 0.0, 0.0, 0.0], [0.019960193, 0.0, 0.0, 0.0], [-0.716500044, 17.0, 18.0, 1.0], [-0.0474910662, 0.0, 0.0, 0.0], [0.00378703745, 0.0, 0.0, 0.0], [0.0452021994, 0.0, 0.0, 0.0], [-0.966500044, 19.0, 20.0, 3.0], [-0.04462035, 0.0, 0.0, 0.0], [0.00454143574, 0.0, 0.0, 0.0], [-0.0336879976, 0.0, 0.0, 0.0], [0.034075167, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 13, 14, 15, 19, 20, 9, 10, 11, 17, 18])
    branch_indices = np.array([0, 1, 4, 7, 8, 16, 2, 5, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_866(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.149500012, 1.0, 2.0, 0.0], [-0.962499976, 3.0, 4.0, 3.0], [-0.931499958, 5.0, 6.0, 4.0], [0.479499996, 7.0, 8.0, 2.0], [-0.872500002, 9.0, 10.0, 4.0], [-0.0408908352, 0.0, 0.0, 0.0], [0.00736243371, 0.0, 0.0, 0.0], [-0.0163557734, 0.0, 0.0, 0.0], [-0.528499961, 11.0, 12.0, 1.0], [0.0209141746, 0.0, 0.0, 0.0], [-0.0444707945, 0.0, 0.0, 0.0], [0.602499962, 13.0, 14.0, 2.0], [-0.257499993, 15.0, 16.0, 0.0], [0.000481531402, 0.0, 0.0, 0.0], [0.0683193281, 0.0, 0.0, 0.0], [0.040492516, 0.0, 0.0, 0.0], [-0.0464752242, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 15, 16, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 11, 12, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_867(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.212500006, 1.0, 2.0, 0.0], [-0.273499995, 3.0, 4.0, 0.0], [-0.2095, 5.0, 6.0, 0.0], [-0.284500003, 7.0, 8.0, 0.0], [-0.108354591, 0.0, 0.0, 0.0], [0.0665598884, 0.0, 0.0, 0.0], [-0.99849999, 9.0, 10.0, 4.0], [-0.443499982, 11.0, 12.0, 0.0], [0.0408153534, 0.0, 0.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.0495143458, 0.0, 0.0, 0.0], [0.0235920306, 0.0, 0.0, 0.0], [-0.0451683737, 0.0, 0.0, 0.0], [-0.999500036, 15.0, 16.0, 4.0], [-0.101999998, 17.0, 18.0, 0.0], [0.00238010008, 0.0, 0.0, 0.0], [-0.062919654, 0.0, 0.0, 0.0], [0.115847647, 0.0, 0.0, 0.0], [-0.013932988, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 4, 5, 15, 16, 17, 18, 10])
    branch_indices = np.array([0, 1, 3, 7, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_868(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.399500012, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.378499985, 5.0, 6.0, 0.0], [-0.00669984939, 0.0, 0.0, 0.0], [0.0588374883, 0.0, 0.0, 0.0], [-0.0755213499, 0.0, 0.0, 0.0], [-0.212500006, 7.0, 8.0, 0.0], [-0.273499995, 9.0, 10.0, 0.0], [-0.996500015, 11.0, 12.0, 1.0], [-0.284500003, 13.0, 14.0, 0.0], [0.114244759, 0.0, 0.0, 0.0], [-0.2095, 15.0, 16.0, 0.0], [-0.0939969942, 0.0, 0.0, 0.0], [0.0335535295, 0.0, 0.0, 0.0], [-0.0402570292, 0.0, 0.0, 0.0], [-0.0663324893, 0.0, 0.0, 0.0], [-0.000204503798, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 13, 14, 10, 15, 16, 12])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_869(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [-0.0748500004, 7.0, 8.0, 0.0], [-0.0778981596, 0.0, 0.0, 0.0], [0.0604636483, 0.0, 0.0, 0.0], [-0.0216126833, 0.0, 0.0, 0.0], [-0.149500012, 9.0, 10.0, 0.0], [-0.0318999998, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.0942035094, 0.0, 0.0, 0.0], [0.0918098316, 0.0, 0.0, 0.0], [0.2755, 15.0, 16.0, 0.0], [0.0157789886, 0.0, 0.0, 0.0], [-0.057394594, 0.0, 0.0, 0.0], [-0.0160396341, 0.0, 0.0, 0.0], [0.00740315253, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_870(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.560500026, 1.0, 2.0, 1.0], [-0.0604500026, 3.0, 4.0, 0.0], [0.720499992, 5.0, 6.0, 2.0], [0.636500001, 7.0, 8.0, 2.0], [-0.0361616798, 0.0, 0.0, 0.0], [-0.0395839587, 0.0, 0.0, 0.0], [0.00588337705, 0.0, 0.0, 0.0], [-0.153499991, 9.0, 10.0, 0.0], [0.703500032, 11.0, 12.0, 2.0], [-0.767500043, 13.0, 14.0, 1.0], [-0.773499966, 15.0, 16.0, 1.0], [0.0662919581, 0.0, 0.0, 0.0], [-0.0107549774, 0.0, 0.0, 0.0], [0.0180136133, 0.0, 0.0, 0.0], [-0.031785693, 0.0, 0.0, 0.0], [0.00204616389, 0.0, 0.0, 0.0], [0.0595832728, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_871(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.729499996, 1.0, 2.0, 1.0], [-0.178499997, 3.0, 4.0, 0.0], [-0.263500005, 5.0, 6.0, 0.0], [0.407499999, 7.0, 8.0, 2.0], [0.0114866858, 0.0, 0.0, 0.0], [-0.884500027, 9.0, 10.0, 4.0], [0.531499982, 11.0, 12.0, 2.0], [0.00769191282, 0.0, 0.0, 0.0], [-0.958500028, 13.0, 14.0, 4.0], [0.578000009, 15.0, 16.0, 2.0], [-0.0122399833, 0.0, 0.0, 0.0], [0.0250023659, 0.0, 0.0, 0.0], [-0.634500027, 17.0, 18.0, 1.0], [-0.0710474625, 0.0, 0.0, 0.0], [-0.24149999, 19.0, 20.0, 0.0], [0.00428831065, 0.0, 0.0, 0.0], [0.0602280833, 0.0, 0.0, 0.0], [0.00157300697, 0.0, 0.0, 0.0], [-0.038432654, 0.0, 0.0, 0.0], [-0.0238069147, 0.0, 0.0, 0.0], [0.0263604913, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 19, 20, 4, 15, 16, 10, 11, 17, 18])
    branch_indices = np.array([0, 1, 3, 8, 14, 2, 5, 9, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_872(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.266499996, 1.0, 2.0, 0.0], [-0.436500013, 3.0, 4.0, 1.0], [-0.484499991, 5.0, 6.0, 1.0], [0.010077144, 0.0, 0.0, 0.0], [-0.0428885482, 0.0, 0.0, 0.0], [-0.997500002, 7.0, 8.0, 3.0], [0.040282052, 0.0, 0.0, 0.0], [-0.690500021, 9.0, 10.0, 1.0], [-0.581499994, 11.0, 12.0, 1.0], [0.00881818309, 0.0, 0.0, 0.0], [-0.0456520803, 0.0, 0.0, 0.0], [-0.941499949, 13.0, 14.0, 4.0], [0.0339790508, 0.0, 0.0, 0.0], [0.0246025678, 0.0, 0.0, 0.0], [-0.0402835384, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 9, 10, 13, 14, 12, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_873(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0728500038, 1.0, 2.0, 0.0], [-0.0748500004, 3.0, 4.0, 0.0], [-0.0658500046, 5.0, 6.0, 0.0], [-0.0907500014, 7.0, 8.0, 0.0], [-0.151820198, 0.0, 0.0, 0.0], [-0.0692999959, 9.0, 10.0, 0.0], [-0.0569499992, 11.0, 12.0, 0.0], [-0.0965999961, 13.0, 14.0, 0.0], [-0.0879499987, 15.0, 16.0, 0.0], [0.149839133, 0.0, 0.0, 0.0], [0.0374826528, 0.0, 0.0, 0.0], [-0.0950126722, 0.0, 0.0, 0.0], [-0.0496499985, 17.0, 18.0, 0.0], [-0.0989499986, 19.0, 20.0, 0.0], [-0.0910999998, 21.0, 22.0, 0.0], [0.0769621581, 0.0, 0.0, 0.0], [-0.0789999962, 23.0, 24.0, 0.0], [0.151304558, 0.0, 0.0, 0.0], [-0.0460999981, 25.0, 26.0, 0.0], [-0.00683923531, 0.0, 0.0, 0.0], [0.110416852, 0.0, 0.0, 0.0], [-0.113539331, 0.0, 0.0, 0.0], [-0.00291448738, 0.0, 0.0, 0.0], [-0.0144419987, 0.0, 0.0, 0.0], [0.0624471344, 0.0, 0.0, 0.0], [-0.0785656869, 0.0, 0.0, 0.0], [0.00238102488, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 23, 24, 4, 9, 10, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_874(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.0907500014, 1.0, 2.0, 0.0], [-0.0965999961, 3.0, 4.0, 0.0], [-0.0297999997, 5.0, 6.0, 0.0], [-0.0998999998, 7.0, 8.0, 0.0], [-0.0910999998, 9.0, 10.0, 0.0], [-0.0382499993, 11.0, 12.0, 0.0], [-0.0154499998, 13.0, 14.0, 0.0], [-0.129500002, 15.0, 16.0, 0.0], [-0.10819871, 0.0, 0.0, 0.0], [0.11710564, 0.0, 0.0, 0.0], [0.00415365538, 0.0, 0.0, 0.0], [-0.0435499996, 17.0, 18.0, 0.0], [-0.172776833, 0.0, 0.0, 0.0], [-0.923500001, 19.0, 20.0, 2.0], [-0.00894000009, 21.0, 22.0, 0.0], [-0.130499989, 23.0, 24.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [-0.0460999981, 27.0, 28.0, 0.0], [-0.0423500016, 29.0, 30.0, 0.0], [0.169239923, 0.0, 0.0, 0.0], [-0.0136828981, 0.0, 0.0, 0.0], [-0.0143499998, 31.0, 32.0, 0.0], [-0.00478500035, 33.0, 34.0, 0.0], [0.0024600043, 0.0, 0.0, 0.0], [-0.078601338, 0.0, 0.0, 0.0], [0.00775294239, 0.0, 0.0, 0.0], [0.170696378, 0.0, 0.0, 0.0], [-0.0128991613, 0.0, 0.0, 0.0], [-0.13123332, 0.0, 0.0, 0.0], [0.0169875287, 0.0, 0.0, 0.0], [0.109867401, 0.0, 0.0, 0.0], [-0.0183030833, 0.0, 0.0, 0.0], [-0.142314658, 0.0, 0.0, 0.0], [0.129938915, 0.0, 0.0, 0.0], [-0.00859669503, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 25, 26, 8, 9, 10, 27, 28, 29, 30, 12, 19, 20, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 2, 5, 11, 17, 18, 6, 13, 14, 21, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_875(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.348500013, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [0.621500015, 9.0, 10.0, 0.0], [0.228500009, 11.0, 12.0, 0.0], [-0.99849999, 13.0, 14.0, 1.0], [-0.421000004, 15.0, 16.0, 0.0], [0.3935, 17.0, 18.0, 0.0], [-0.0843460932, 0.0, 0.0, 0.0], [0.0094784312, 0.0, 0.0, 0.0], [0.00518500013, 19.0, 20.0, 0.0], [-0.0644758567, 0.0, 0.0, 0.0], [0.437000006, 21.0, 22.0, 0.0], [0.0601912923, 0.0, 0.0, 0.0], [-0.0637572333, 0.0, 0.0, 0.0], [-0.16049999, 23.0, 24.0, 0.0], [-0.0729202628, 0.0, 0.0, 0.0], [0.00764664635, 0.0, 0.0, 0.0], [-0.193500012, 25.0, 26.0, 0.0], [0.0698619857, 0.0, 0.0, 0.0], [-0.0230914168, 0.0, 0.0, 0.0], [0.0543620959, 0.0, 0.0, 0.0], [0.045551803, 0.0, 0.0, 0.0], [-0.00256954529, 0.0, 0.0, 0.0], [0.0329327807, 0.0, 0.0, 0.0], [-0.0765635222, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 23, 24, 17, 18, 9, 10, 25, 26, 20, 12, 21, 22, 14])
    branch_indices = np.array([0, 1, 3, 7, 16, 8, 4, 2, 5, 11, 19, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_876(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0241765194, 0.0, 0.0, 0.0], [-0.825500011, 3.0, 4.0, 1.0], [0.0467050262, 0.0, 0.0, 0.0], [0.484499991, 5.0, 6.0, 2.0], [0.433499992, 7.0, 8.0, 2.0], [-0.315500021, 9.0, 10.0, 0.0], [0.00830520224, 0.0, 0.0, 0.0], [-0.206499994, 11.0, 12.0, 0.0], [-0.02888049, 0.0, 0.0, 0.0], [-0.721500039, 13.0, 14.0, 1.0], [-0.0700730905, 0.0, 0.0, 0.0], [-9.91418783e-05, 0.0, 0.0, 0.0], [0.0527101047, 0.0, 0.0, 0.0], [-0.000607600436, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 11, 12, 9, 13, 14])
    branch_indices = np.array([0, 2, 4, 5, 8, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_877(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.837499976, 1.0, 2.0, 1.0], [-0.0252907705, 0.0, 0.0, 0.0], [-0.315500021, 3.0, 4.0, 0.0], [-0.916999996, 5.0, 6.0, 4.0], [-0.906499982, 7.0, 8.0, 4.0], [0.0537089184, 0.0, 0.0, 0.0], [0.000532244972, 0.0, 0.0, 0.0], [-0.218499988, 9.0, 10.0, 0.0], [-0.0434655063, 0.0, 0.0, 0.0], [-0.970499992, 11.0, 12.0, 3.0], [-0.994500041, 13.0, 14.0, 3.0], [-0.0223116223, 0.0, 0.0, 0.0], [0.0209967121, 0.0, 0.0, 0.0], [-0.00423691934, 0.0, 0.0, 0.0], [0.0386067703, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 11, 12, 13, 14, 8])
    branch_indices = np.array([0, 2, 3, 4, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_878(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.911499977, 1.0, 2.0, 3.0], [0.693500042, 3.0, 4.0, 2.0], [0.0234171841, 0.0, 0.0, 0.0], [-0.186500013, 5.0, 6.0, 0.0], [-0.240500003, 7.0, 8.0, 0.0], [-0.749500036, 9.0, 10.0, 1.0], [0.476500005, 11.0, 12.0, 2.0], [-0.0158745181, 0.0, 0.0, 0.0], [0.0365857668, 0.0, 0.0, 0.0], [0.0206213798, 0.0, 0.0, 0.0], [-0.982499957, 13.0, 14.0, 3.0], [-0.00835510064, 0.0, 0.0, 0.0], [0.0274309851, 0.0, 0.0, 0.0], [-0.00960354414, 0.0, 0.0, 0.0], [-0.067686893, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 13, 14, 11, 12, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 10, 6, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_879(xs):
    #Predicts Class 3
    function_dict = np.array([[0.421999991, 1.0, 2.0, 0.0], [0.190499991, 3.0, 4.0, 0.0], [0.429499984, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.212500006, 9.0, 10.0, 0.0], [0.11366915, 0.0, 0.0, 0.0], [-0.999500036, 11.0, 12.0, 4.0], [0.0912000015, 13.0, 14.0, 0.0], [0.147, 15.0, 16.0, 0.0], [0.201499999, 17.0, 18.0, 0.0], [0.253499985, 19.0, 20.0, 0.0], [0.433499992, 21.0, 22.0, 0.0], [0.0907501131, 0.0, 0.0, 0.0], [0.0854000002, 23.0, 24.0, 0.0], [-0.0653776303, 0.0, 0.0, 0.0], [0.1105, 25.0, 26.0, 0.0], [0.0048687309, 0.0, 0.0, 0.0], [0.194499999, 27.0, 28.0, 0.0], [-0.0993020758, 0.0, 0.0, 0.0], [0.0776137933, 0.0, 0.0, 0.0], [0.264499992, 29.0, 30.0, 0.0], [-0.0878074989, 0.0, 0.0, 0.0], [0.466499984, 31.0, 32.0, 0.0], [-0.00137029367, 0.0, 0.0, 0.0], [0.049393855, 0.0, 0.0, 0.0], [0.127439991, 0.0, 0.0, 0.0], [0.0387358554, 0.0, 0.0, 0.0], [-0.0579946525, 0.0, 0.0, 0.0], [0.0307236742, 0.0, 0.0, 0.0], [-0.0588609688, 0.0, 0.0, 0.0], [-0.00267543062, 0.0, 0.0, 0.0], [0.0304672346, 0.0, 0.0, 0.0], [-0.010011022, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 25, 26, 16, 27, 28, 18, 19, 29, 30, 5, 21, 31, 32, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 9, 17, 10, 20, 2, 6, 11, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_880(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.401000023, 3.0, 4.0, 0.0], [-0.41049999, 5.0, 6.0, 0.0], [-0.0556337163, 0.0, 0.0, 0.0], [-0.38349998, 7.0, 8.0, 0.0], [0.0634498969, 0.0, 0.0, 0.0], [-0.188499987, 9.0, 10.0, 0.0], [0.0964327306, 0.0, 0.0, 0.0], [0.074149996, 11.0, 12.0, 0.0], [-0.747500002, 13.0, 14.0, 2.0], [-0.119499996, 15.0, 16.0, 0.0], [0.0686499998, 17.0, 18.0, 0.0], [0.0824999958, 19.0, 20.0, 0.0], [-0.119711168, 0.0, 0.0, 0.0], [0.00363787194, 0.0, 0.0, 0.0], [0.0494056307, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [0.00146999315, 0.0, 0.0, 0.0], [0.135905251, 0.0, 0.0, 0.0], [-0.113098137, 0.0, 0.0, 0.0], [0.00486843847, 0.0, 0.0, 0.0], [0.0727943331, 0.0, 0.0, 0.0], [-0.0841684788, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 17, 18, 19, 20, 5, 13, 14, 15, 21, 22])
    branch_indices = np.array([0, 1, 4, 8, 11, 12, 2, 6, 9, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_881(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.393000007, 3.0, 4.0, 0.0], [0.415000021, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [-0.99849999, 9.0, 10.0, 1.0], [0.406499982, 11.0, 12.0, 0.0], [0.424000025, 13.0, 14.0, 0.0], [-0.421499997, 15.0, 16.0, 0.0], [-0.0353859551, 0.0, 0.0, 0.0], [-0.169499993, 17.0, 18.0, 0.0], [0.0152608184, 0.0, 0.0, 0.0], [0.2755, 19.0, 20.0, 0.0], [0.0791227818, 0.0, 0.0, 0.0], [0.419499993, 21.0, 22.0, 0.0], [0.431500018, 23.0, 24.0, 0.0], [-0.0127336187, 0.0, 0.0, 0.0], [0.0773129985, 0.0, 0.0, 0.0], [-0.0806019157, 0.0, 0.0, 0.0], [-0.168500006, 25.0, 26.0, 0.0], [0.264499992, 27.0, 28.0, 0.0], [0.344999999, 29.0, 30.0, 0.0], [-0.0151415551, 0.0, 0.0, 0.0], [-0.0688011497, 0.0, 0.0, 0.0], [0.0788126886, 0.0, 0.0, 0.0], [-0.999500036, 31.0, 32.0, 4.0], [0.0118915746, 0.0, 0.0, 0.0], [-0.0511736758, 0.0, 0.0, 0.0], [0.0131456517, 0.0, 0.0, 0.0], [-0.0944573134, 0.0, 0.0, 0.0], [0.0990467742, 0.0, 0.0, 0.0], [-0.00678970292, 0.0, 0.0, 0.0], [0.00206480105, 0.0, 0.0, 0.0], [-0.0747921392, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 8, 17, 25, 26, 10, 27, 28, 29, 30, 12, 21, 22, 23, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 18, 2, 5, 11, 19, 20, 6, 13, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_882(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.987499952, 1.0, 2.0, 3.0], [-0.25150001, 3.0, 4.0, 0.0], [-0.709499955, 5.0, 6.0, 1.0], [-0.0435235836, 0.0, 0.0, 0.0], [-0.230500013, 7.0, 8.0, 0.0], [0.479499996, 9.0, 10.0, 2.0], [-0.644500017, 11.0, 12.0, 1.0], [0.0525264181, 0.0, 0.0, 0.0], [-0.965499997, 13.0, 14.0, 4.0], [0.043582093, 0.0, 0.0, 0.0], [-0.0539937206, 0.0, 0.0, 0.0], [0.0731266141, 0.0, 0.0, 0.0], [-0.526499987, 15.0, 16.0, 1.0], [0.0270763598, 0.0, 0.0, 0.0], [-0.166500002, 17.0, 18.0, 0.0], [-0.0309659019, 0.0, 0.0, 0.0], [0.022154687, 0.0, 0.0, 0.0], [-0.058320906, 0.0, 0.0, 0.0], [0.0177949574, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 13, 17, 18, 9, 10, 11, 15, 16])
    branch_indices = np.array([0, 1, 4, 8, 14, 2, 5, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_883(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.9745, 1.0, 2.0, 3.0], [-0.975499988, 3.0, 4.0, 4.0], [-0.541499972, 5.0, 6.0, 1.0], [-0.0297716726, 0.0, 0.0, 0.0], [-0.956499994, 7.0, 8.0, 4.0], [-0.229499996, 9.0, 10.0, 0.0], [-0.0417878851, 0.0, 0.0, 0.0], [0.553499997, 11.0, 12.0, 2.0], [-0.318499982, 13.0, 14.0, 0.0], [0.0321166478, 0.0, 0.0, 0.0], [-0.0396650806, 0.0, 0.0, 0.0], [-0.225499988, 15.0, 16.0, 0.0], [0.0643390417, 0.0, 0.0, 0.0], [-0.0303216036, 0.0, 0.0, 0.0], [-0.940500021, 17.0, 18.0, 4.0], [-0.0341265723, 0.0, 0.0, 0.0], [0.0491122939, 0.0, 0.0, 0.0], [-0.0270043854, 0.0, 0.0, 0.0], [0.0309084319, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 15, 16, 12, 13, 17, 18, 9, 10, 6])
    branch_indices = np.array([0, 1, 4, 7, 11, 8, 14, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_884(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [0.777500033, 3.0, 4.0, 2.0], [-0.975499988, 5.0, 6.0, 3.0], [0.476500005, 7.0, 8.0, 2.0], [-0.0420281887, 0.0, 0.0, 0.0], [-0.0078222882, 0.0, 0.0, 0.0], [0.0423975885, 0.0, 0.0, 0.0], [-0.972499967, 9.0, 10.0, 4.0], [-0.816499949, 11.0, 12.0, 4.0], [0.00951366685, 0.0, 0.0, 0.0], [-0.0368285365, 0.0, 0.0, 0.0], [-0.993499994, 13.0, 14.0, 3.0], [-0.0208056401, 0.0, 0.0, 0.0], [-0.000648997084, 0.0, 0.0, 0.0], [0.0389919207, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 13, 14, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 11, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_885(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.747500002, 1.0, 2.0, 2.0], [-0.851999998, 3.0, 4.0, 2.0], [0.0087799998, 5.0, 6.0, 0.0], [-0.885499954, 7.0, 8.0, 2.0], [0.00334499986, 9.0, 10.0, 0.0], [-0.626000047, 11.0, 12.0, 2.0], [-0.639999986, 13.0, 14.0, 2.0], [0.534000039, 15.0, 16.0, 0.0], [-0.0552802235, 0.0, 0.0, 0.0], [-0.037150003, 17.0, 18.0, 0.0], [0.0471500009, 19.0, 20.0, 0.0], [-0.120999999, 21.0, 22.0, 0.0], [-0.203500003, 23.0, 24.0, 0.0], [0.102768265, 0.0, 0.0, 0.0], [-0.0774394944, 0.0, 0.0, 0.0], [0.522500038, 25.0, 26.0, 0.0], [0.539999962, 27.0, 28.0, 0.0], [-0.822000027, 29.0, 30.0, 2.0], [0.138796315, 0.0, 0.0, 0.0], [-0.0883858204, 0.0, 0.0, 0.0], [0.0105657103, 0.0, 0.0, 0.0], [0.0021419595, 0.0, 0.0, 0.0], [-0.132445276, 0.0, 0.0, 0.0], [0.0617931522, 0.0, 0.0, 0.0], [-0.0329683796, 0.0, 0.0, 0.0], [0.000699657365, 0.0, 0.0, 0.0], [-0.0509919897, 0.0, 0.0, 0.0], [0.093066223, 0.0, 0.0, 0.0], [0.00709918002, 0.0, 0.0, 0.0], [0.0689465627, 0.0, 0.0, 0.0], [-0.0249744635, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 8, 29, 30, 18, 19, 20, 21, 22, 23, 24, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 4, 9, 17, 10, 2, 5, 11, 12, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_886(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00974999927, 1.0, 2.0, 0.0], [0.00588999968, 3.0, 4.0, 0.0], [0.0137499999, 5.0, 6.0, 0.0], [0.00325499987, 7.0, 8.0, 0.0], [0.00768500008, 9.0, 10.0, 0.0], [0.13347505, 0.0, 0.0, 0.0], [0.0234000012, 11.0, 12.0, 0.0], [0.00146499998, 13.0, 14.0, 0.0], [0.101802677, 0.0, 0.0, 0.0], [-0.119292103, 0.0, 0.0, 0.0], [-0.0273504201, 0.0, 0.0, 0.0], [-0.0942932293, 0.0, 0.0, 0.0], [0.025150001, 15.0, 16.0, 0.0], [-0.000944999978, 17.0, 18.0, 0.0], [-0.113085702, 0.0, 0.0, 0.0], [0.100339346, 0.0, 0.0, 0.0], [0.028549999, 19.0, 20.0, 0.0], [-0.00336053013, 0.0, 0.0, 0.0], [0.104413994, 0.0, 0.0, 0.0], [-0.0951338559, 0.0, 0.0, 0.0], [0.0104612848, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 14, 8, 9, 10, 5, 11, 15, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 2, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_887(xs):
    #Predicts Class 5
    function_dict = np.array([[0.272000015, 1.0, 2.0, 0.0], [0.260500014, 3.0, 4.0, 0.0], [0.276499987, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.080126442, 0.0, 0.0, 0.0], [0.116346925, 0.0, 0.0, 0.0], [0.350499988, 9.0, 10.0, 0.0], [0.202500001, 11.0, 12.0, 0.0], [0.0541087948, 0.0, 0.0, 0.0], [-0.0952948704, 0.0, 0.0, 0.0], [0.405499995, 13.0, 14.0, 0.0], [-0.032850001, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 1.0], [0.404500008, 19.0, 20.0, 0.0], [0.418500006, 21.0, 22.0, 0.0], [-0.0110387951, 0.0, 0.0, 0.0], [0.0279298611, 0.0, 0.0, 0.0], [-0.0736078247, 0.0, 0.0, 0.0], [0.0178658888, 0.0, 0.0, 0.0], [0.0179059207, 0.0, 0.0, 0.0], [0.0798061937, 0.0, 0.0, 0.0], [-0.0810290053, 0.0, 0.0, 0.0], [0.00436750939, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_888(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0291613974, 0.0, 0.0, 0.0], [-0.174499989, 3.0, 4.0, 0.0], [-0.864500046, 5.0, 6.0, 4.0], [-0.0727999955, 7.0, 8.0, 0.0], [-0.213499993, 9.0, 10.0, 0.0], [-0.978999972, 11.0, 12.0, 3.0], [-0.871500015, 13.0, 14.0, 4.0], [0.0230561588, 0.0, 0.0, 0.0], [-0.994500041, 15.0, 16.0, 3.0], [-0.993499994, 17.0, 18.0, 3.0], [-0.053608723, 0.0, 0.0, 0.0], [0.0261051022, 0.0, 0.0, 0.0], [0.523000002, 19.0, 20.0, 2.0], [0.00899987295, 0.0, 0.0, 0.0], [-0.0254840758, 0.0, 0.0, 0.0], [0.0266908109, 0.0, 0.0, 0.0], [0.0702319965, 0.0, 0.0, 0.0], [0.0100119747, 0.0, 0.0, 0.0], [-0.0548540875, 0.0, 0.0, 0.0], [-0.00055215985, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 15, 16, 17, 18, 11, 12, 19, 20, 14, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 6, 4, 7, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_889(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.968500018, 1.0, 2.0, 4.0], [-0.219500005, 3.0, 4.0, 0.0], [-0.654500008, 5.0, 6.0, 1.0], [0.0411978886, 0.0, 0.0, 0.0], [-0.191500008, 7.0, 8.0, 0.0], [-0.253499985, 9.0, 10.0, 0.0], [-0.524500012, 11.0, 12.0, 1.0], [-0.0426655188, 0.0, 0.0, 0.0], [0.0265496038, 0.0, 0.0, 0.0], [-0.297500014, 13.0, 14.0, 0.0], [0.455500007, 15.0, 16.0, 2.0], [0.0370703749, 0.0, 0.0, 0.0], [-0.436999977, 17.0, 18.0, 1.0], [-0.0126528088, 0.0, 0.0, 0.0], [0.0390481651, 0.0, 0.0, 0.0], [-0.208499998, 19.0, 20.0, 0.0], [-0.932500005, 21.0, 22.0, 4.0], [-0.0427049547, 0.0, 0.0, 0.0], [0.00833091047, 0.0, 0.0, 0.0], [-0.0195606221, 0.0, 0.0, 0.0], [0.0271344651, 0.0, 0.0, 0.0], [-0.0771101788, 0.0, 0.0, 0.0], [-0.0121363383, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 13, 14, 19, 20, 21, 22, 11, 17, 18])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 10, 15, 16, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_890(xs):
    #Predicts Class 2
    function_dict = np.array([[0.772500038, 1.0, 2.0, 2.0], [-0.24849999, 3.0, 4.0, 0.0], [0.0227844082, 0.0, 0.0, 0.0], [0.652500033, 5.0, 6.0, 2.0], [-0.2315, 7.0, 8.0, 0.0], [-0.000427048595, 0.0, 0.0, 0.0], [-0.0480538867, 0.0, 0.0, 0.0], [0.0312890522, 0.0, 0.0, 0.0], [-0.67050004, 9.0, 10.0, 1.0], [0.4375, 11.0, 12.0, 2.0], [0.62349999, 13.0, 14.0, 2.0], [-0.0251765214, 0.0, 0.0, 0.0], [0.0299722385, 0.0, 0.0, 0.0], [-0.044851128, 0.0, 0.0, 0.0], [0.0163597539, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 7, 11, 12, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 4, 8, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_891(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.205500007, 1.0, 2.0, 0.0], [-0.654500008, 3.0, 4.0, 2.0], [-0.20449999, 5.0, 6.0, 0.0], [-0.273499995, 7.0, 8.0, 0.0], [0.049120836, 0.0, 0.0, 0.0], [0.0950558707, 0.0, 0.0, 0.0], [-0.644500017, 9.0, 10.0, 2.0], [-0.297500014, 11.0, 12.0, 0.0], [-0.0851425007, 0.0, 0.0, 0.0], [-0.795000017, 13.0, 14.0, 2.0], [-0.0611104816, 0.0, 0.0, 0.0], [-0.041967161, 0.0, 0.0, 0.0], [-0.296499997, 15.0, 16.0, 0.0], [-0.191500008, 17.0, 18.0, 0.0], [-0.120499998, 19.0, 20.0, 0.0], [0.044394739, 0.0, 0.0, 0.0], [0.000856242492, 0.0, 0.0, 0.0], [-0.06646882, 0.0, 0.0, 0.0], [0.00195806078, 0.0, 0.0, 0.0], [0.143218681, 0.0, 0.0, 0.0], [-0.00741271395, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 15, 16, 8, 4, 5, 17, 18, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 12, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_892(xs):
    #Predicts Class 4
    function_dict = np.array([[0.192499995, 1.0, 2.0, 0.0], [0.152999997, 3.0, 4.0, 0.0], [0.195499986, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.11393024, 0.0, 0.0, 0.0], [-0.0908515006, 0.0, 0.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0885500014, 11.0, 12.0, 0.0], [0.0941499993, 13.0, 14.0, 0.0], [0.0770952031, 0.0, 0.0, 0.0], [-0.0427741744, 0.0, 0.0, 0.0], [0.0854000002, 15.0, 16.0, 0.0], [0.0991446525, 0.0, 0.0, 0.0], [-0.0936022401, 0.0, 0.0, 0.0], [0.108500004, 17.0, 18.0, 0.0], [0.00117652758, 0.0, 0.0, 0.0], [-0.0723123476, 0.0, 0.0, 0.0], [0.00711981673, 0.0, 0.0, 0.0], [-0.015563542, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 13, 17, 18, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_893(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [0.212500006, 5.0, 6.0, 0.0], [0.527999997, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [-0.193500012, 11.0, 12.0, 0.0], [0.428499997, 13.0, 14.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.538499951, 17.0, 18.0, 0.0], [-0.0672504455, 0.0, 0.0, 0.0], [0.0114025576, 0.0, 0.0, 0.0], [-0.360500008, 19.0, 20.0, 0.0], [0.00518500013, 21.0, 22.0, 0.0], [0.340499997, 23.0, 24.0, 0.0], [0.43599999, 25.0, 26.0, 0.0], [0.513000011, 27.0, 28.0, 0.0], [-0.0745999962, 29.0, 30.0, 0.0], [0.12041942, 0.0, 0.0, 0.0], [0.541999996, 31.0, 32.0, 0.0], [-0.000804165378, 0.0, 0.0, 0.0], [0.0507428534, 0.0, 0.0, 0.0], [-0.0633245111, 0.0, 0.0, 0.0], [-0.0114361383, 0.0, 0.0, 0.0], [0.0254544448, 0.0, 0.0, 0.0], [0.0947915092, 0.0, 0.0, 0.0], [-0.0478343777, 0.0, 0.0, 0.0], [0.527500033, 33.0, 34.0, 0.0], [-0.00574579742, 0.0, 0.0, 0.0], [0.0606700964, 0.0, 0.0, 0.0], [-0.000145365455, 0.0, 0.0, 0.0], [-0.103382491, 0.0, 0.0, 0.0], [-0.0648779795, 0.0, 0.0, 0.0], [0.0173839275, 0.0, 0.0, 0.0], [0.0423860513, 0.0, 0.0, 0.0], [-0.00488771917, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 31, 32, 9, 10, 19, 20, 21, 22, 23, 24, 25, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 2, 5, 11, 12, 6, 13, 14, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_894(xs):
    #Predicts Class 0
    function_dict = np.array([[0.63349998, 1.0, 2.0, 2.0], [-0.263500005, 3.0, 4.0, 0.0], [-0.259499997, 5.0, 6.0, 0.0], [-0.760499954, 7.0, 8.0, 1.0], [-0.213499993, 9.0, 10.0, 0.0], [-0.022764748, 0.0, 0.0, 0.0], [-0.158500001, 11.0, 12.0, 0.0], [-0.00881392322, 0.0, 0.0, 0.0], [0.0420170836, 0.0, 0.0, 0.0], [-0.765499949, 13.0, 14.0, 1.0], [-0.113499999, 15.0, 16.0, 0.0], [-0.987499952, 17.0, 18.0, 3.0], [-0.0239643194, 0.0, 0.0, 0.0], [0.0100949705, 0.0, 0.0, 0.0], [-0.0794362202, 0.0, 0.0, 0.0], [-0.151499987, 19.0, 20.0, 0.0], [-0.0211723614, 0.0, 0.0, 0.0], [0.0752707422, 0.0, 0.0, 0.0], [0.0208223127, 0.0, 0.0, 0.0], [-0.00432153279, 0.0, 0.0, 0.0], [0.056725964, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 13, 14, 19, 20, 16, 5, 17, 18, 12])
    branch_indices = np.array([0, 1, 3, 4, 9, 10, 15, 2, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_895(xs):
    #Predicts Class 1
    function_dict = np.array([[0.602499962, 1.0, 2.0, 2.0], [-0.169499993, 3.0, 4.0, 0.0], [-0.528499961, 5.0, 6.0, 1.0], [-0.781499982, 7.0, 8.0, 1.0], [-0.0279644914, 0.0, 0.0, 0.0], [0.668500006, 9.0, 10.0, 2.0], [0.0112223122, 0.0, 0.0, 0.0], [-0.805500031, 11.0, 12.0, 1.0], [-0.995499969, 13.0, 14.0, 3.0], [-0.0522479191, 0.0, 0.0, 0.0], [-7.08191146e-05, 0.0, 0.0, 0.0], [0.0155042009, 0.0, 0.0, 0.0], [-0.041508384, 0.0, 0.0, 0.0], [0.526499987, 15.0, 16.0, 2.0], [0.549000025, 17.0, 18.0, 2.0], [0.0744373947, 0.0, 0.0, 0.0], [0.00106513582, 0.0, 0.0, 0.0], [-0.0204078536, 0.0, 0.0, 0.0], [0.0481190719, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 15, 16, 17, 18, 4, 9, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 13, 14, 2, 5])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_896(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [-0.102499999, 3.0, 4.0, 0.0], [0.656499982, 5.0, 6.0, 2.0], [0.461499989, 7.0, 8.0, 2.0], [0.0225950889, 0.0, 0.0, 0.0], [-0.0036296295, 0.0, 0.0, 0.0], [0.0411648676, 0.0, 0.0, 0.0], [-0.205500007, 9.0, 10.0, 0.0], [-0.99849999, 11.0, 12.0, 3.0], [-0.0080841789, 0.0, 0.0, 0.0], [0.0371545702, 0.0, 0.0, 0.0], [0.01770203, 0.0, 0.0, 0.0], [-0.956499994, 13.0, 14.0, 4.0], [-0.0687630028, 0.0, 0.0, 0.0], [-0.0175097995, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 13, 14, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_897(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.296499997, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.0514665246, 0.0, 0.0, 0.0], [0.0816030875, 0.0, 0.0, 0.0], [-0.205500007, 9.0, 10.0, 0.0], [-0.0192624647, 0.0, 0.0, 0.0], [0.0344325751, 0.0, 0.0, 0.0], [-0.0431831442, 0.0, 0.0, 0.0], [-0.20449999, 11.0, 12.0, 0.0], [0.0718277916, 0.0, 0.0, 0.0], [-0.193500012, 13.0, 14.0, 0.0], [-0.0664497688, 0.0, 0.0, 0.0], [0.00114870444, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_898(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.747500002, 3.0, 4.0, 2.0], [-0.260500014, 5.0, 6.0, 0.0], [-0.795000017, 7.0, 8.0, 2.0], [0.0507962592, 0.0, 0.0, 0.0], [-0.333499998, 9.0, 10.0, 0.0], [-0.0403999984, 11.0, 12.0, 0.0], [-0.393000007, 13.0, 14.0, 0.0], [-0.0542544574, 0.0, 0.0, 0.0], [-0.0234474577, 0.0, 0.0, 0.0], [0.0854760855, 0.0, 0.0, 0.0], [-0.67050004, 15.0, 16.0, 2.0], [-0.73150003, 17.0, 18.0, 2.0], [-0.0467752293, 0.0, 0.0, 0.0], [-0.186500013, 19.0, 20.0, 0.0], [-0.110007651, 0.0, 0.0, 0.0], [-0.125499994, 21.0, 22.0, 0.0], [0.0554972962, 0.0, 0.0, 0.0], [-0.0318841822, 0.0, 0.0, 0.0], [0.0287279189, 0.0, 0.0, 0.0], [-0.000378030556, 0.0, 0.0, 0.0], [0.0254065823, 0.0, 0.0, 0.0], [-0.0211070012, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 19, 20, 8, 4, 9, 10, 15, 21, 22, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 14, 2, 5, 6, 11, 16, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_899(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.556499958, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.537500024, 7.0, 8.0, 0.0], [0.557999969, 9.0, 10.0, 0.0], [0.0582815893, 0.0, 0.0, 0.0], [-0.0123240175, 0.0, 0.0, 0.0], [0.5255, 11.0, 12.0, 0.0], [0.0438759886, 0.0, 0.0, 0.0], [-0.0613400191, 0.0, 0.0, 0.0], [-0.0149325915, 0.0, 0.0, 0.0], [0.263000011, 13.0, 14.0, 0.0], [-0.0771119818, 0.0, 0.0, 0.0], [-0.00703060022, 0.0, 0.0, 0.0], [0.00990113895, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_900(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0244517252, 0.0, 0.0, 0.0], [-0.825500011, 3.0, 4.0, 1.0], [0.0400320664, 0.0, 0.0, 0.0], [0.484499991, 5.0, 6.0, 2.0], [-0.7755, 7.0, 8.0, 1.0], [-0.911499977, 9.0, 10.0, 4.0], [-0.0446889102, 0.0, 0.0, 0.0], [0.00400525983, 0.0, 0.0, 0.0], [-0.972499967, 11.0, 12.0, 3.0], [-0.968500018, 13.0, 14.0, 3.0], [0.00188120874, 0.0, 0.0, 0.0], [0.0663172156, 0.0, 0.0, 0.0], [0.0146111678, 0.0, 0.0, 0.0], [-0.0381028876, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 8, 11, 12, 13, 14])
    branch_indices = np.array([0, 2, 4, 5, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_901(xs):
    #Predicts Class 1
    function_dict = np.array([[0.539499998, 1.0, 2.0, 2.0], [0.516499996, 3.0, 4.0, 2.0], [-0.908499956, 5.0, 6.0, 4.0], [-0.821500003, 7.0, 8.0, 1.0], [0.0423322879, 0.0, 0.0, 0.0], [0.638499975, 9.0, 10.0, 2.0], [-0.871500015, 11.0, 12.0, 4.0], [-0.0381133035, 0.0, 0.0, 0.0], [-0.791499972, 13.0, 14.0, 1.0], [-0.230500013, 15.0, 16.0, 0.0], [0.0138577297, 0.0, 0.0, 0.0], [0.0475232266, 0.0, 0.0, 0.0], [-0.037061546, 0.0, 0.0, 0.0], [0.049891416, 0.0, 0.0, 0.0], [-0.229499996, 17.0, 18.0, 0.0], [-0.0638542026, 0.0, 0.0, 0.0], [-4.34879621e-05, 0.0, 0.0, 0.0], [0.0233382881, 0.0, 0.0, 0.0], [-0.0376333557, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 17, 18, 4, 15, 16, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 8, 14, 2, 5, 9, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_902(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.025722472, 0.0, 0.0, 0.0], [-0.976500034, 3.0, 4.0, 3.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.892500043, 7.0, 8.0, 3.0], [-0.607499957, 9.0, 10.0, 1.0], [-0.166500002, 11.0, 12.0, 0.0], [-0.216499999, 13.0, 14.0, 0.0], [-0.0148353102, 0.0, 0.0, 0.0], [-0.00504464423, 0.0, 0.0, 0.0], [0.0392311215, 0.0, 0.0, 0.0], [-0.526499987, 15.0, 16.0, 1.0], [-0.0481773354, 0.0, 0.0, 0.0], [-0.00536968652, 0.0, 0.0, 0.0], [0.0651179478, 0.0, 0.0, 0.0], [0.0241414383, 0.0, 0.0, 0.0], [-0.025314901, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 15, 16, 12, 13, 14, 8])
    branch_indices = np.array([0, 2, 3, 5, 6, 11, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_903(xs):
    #Predicts Class 3
    function_dict = np.array([[0.487500012, 1.0, 2.0, 0.0], [0.46450001, 3.0, 4.0, 0.0], [0.513000011, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [-0.0579866394, 0.0, 0.0, 0.0], [0.0638036728, 0.0, 0.0, 0.0], [0.523499966, 9.0, 10.0, 0.0], [0.432500005, 11.0, 12.0, 0.0], [0.446500003, 13.0, 14.0, 0.0], [-0.0329833478, 0.0, 0.0, 0.0], [-0.972000003, 15.0, 16.0, 2.0], [0.428499997, 17.0, 18.0, 0.0], [0.434499979, 19.0, 20.0, 0.0], [0.0177761894, 0.0, 0.0, 0.0], [0.0556229167, 0.0, 0.0, 0.0], [0.588, 21.0, 22.0, 0.0], [-0.0682443082, 0.0, 0.0, 0.0], [-0.00112337619, 0.0, 0.0, 0.0], [0.0889760181, 0.0, 0.0, 0.0], [-0.061682757, 0.0, 0.0, 0.0], [-0.0230044872, 0.0, 0.0, 0.0], [0.0348187312, 0.0, 0.0, 0.0], [-0.0130449962, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 21, 22, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10, 15])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_904(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.395500004, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.378499985, 5.0, 6.0, 0.0], [-0.018934112, 0.0, 0.0, 0.0], [0.0729545057, 0.0, 0.0, 0.0], [-0.0773112029, 0.0, 0.0, 0.0], [0.0240500011, 7.0, 8.0, 0.0], [0.0203999989, 9.0, 10.0, 0.0], [0.0368999988, 11.0, 12.0, 0.0], [0.0110500008, 13.0, 14.0, 0.0], [-0.121266022, 0.0, 0.0, 0.0], [0.028549999, 15.0, 16.0, 0.0], [0.0447499976, 17.0, 18.0, 0.0], [-0.00331222033, 0.0, 0.0, 0.0], [0.122357018, 0.0, 0.0, 0.0], [0.0239194501, 0.0, 0.0, 0.0], [0.141056255, 0.0, 0.0, 0.0], [-0.10957101, 0.0, 0.0, 0.0], [0.00806718599, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 13, 14, 10, 15, 16, 17, 18])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_905(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0333307534, 0.0, 0.0, 0.0], [0.557999969, 5.0, 6.0, 0.0], [-0.0545207262, 0.0, 0.0, 0.0], [0.487500012, 7.0, 8.0, 0.0], [0.0447491929, 0.0, 0.0, 0.0], [0.46450001, 9.0, 10.0, 0.0], [0.513000011, 11.0, 12.0, 0.0], [-0.00110619736, 0.0, 0.0, 0.0], [0.0601067059, 0.0, 0.0, 0.0], [-0.0613970235, 0.0, 0.0, 0.0], [-0.00434163073, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_906(xs):
    #Predicts Class 0
    function_dict = np.array([[0.338, 1.0, 2.0, 2.0], [-0.022392625, 0.0, 0.0, 0.0], [-0.0742499977, 3.0, 4.0, 0.0], [-0.141499996, 5.0, 6.0, 0.0], [0.0371395089, 0.0, 0.0, 0.0], [-0.576499999, 7.0, 8.0, 1.0], [-0.0394329578, 0.0, 0.0, 0.0], [0.657500029, 9.0, 10.0, 2.0], [-0.96449995, 11.0, 12.0, 3.0], [0.00453667482, 0.0, 0.0, 0.0], [0.0520796627, 0.0, 0.0, 0.0], [-0.032935299, 0.0, 0.0, 0.0], [0.00843159109, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 6, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_907(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.980499983, 3.0, 4.0, 3.0], [-0.29549998, 5.0, 6.0, 0.0], [-0.138500005, 7.0, 8.0, 0.0], [-0.236499995, 9.0, 10.0, 0.0], [0.00647541694, 0.0, 0.0, 0.0], [-0.0410992652, 0.0, 0.0, 0.0], [-0.2095, 11.0, 12.0, 0.0], [-0.0411108509, 0.0, 0.0, 0.0], [-0.00627758261, 0.0, 0.0, 0.0], [0.0464269221, 0.0, 0.0, 0.0], [0.461499989, 13.0, 14.0, 2.0], [0.0327203758, 0.0, 0.0, 0.0], [-0.0333542824, 0.0, 0.0, 0.0], [0.0109870685, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_908(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.410000026, 1.0, 2.0, 1.0], [-0.968500018, 3.0, 4.0, 4.0], [0.0311382953, 0.0, 0.0, 0.0], [-0.0299283694, 0.0, 0.0, 0.0], [-0.958500028, 5.0, 6.0, 4.0], [0.0281533971, 0.0, 0.0, 0.0], [0.728999972, 7.0, 8.0, 2.0], [-0.203500003, 9.0, 10.0, 0.0], [0.023901483, 0.0, 0.0, 0.0], [-0.0456032529, 0.0, 0.0, 0.0], [0.0108365268, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 5, 9, 10, 8, 2])
    branch_indices = np.array([0, 1, 4, 6, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_909(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.283500016, 3.0, 4.0, 0.0], [-0.0320071504, 0.0, 0.0, 0.0], [-0.284500003, 5.0, 6.0, 0.0], [-0.210500002, 7.0, 8.0, 0.0], [-0.442000002, 9.0, 10.0, 0.0], [0.0531131327, 0.0, 0.0, 0.0], [-0.0809985846, 0.0, 0.0, 0.0], [-0.2095, 11.0, 12.0, 0.0], [0.0269448701, 0.0, 0.0, 0.0], [-0.0276741926, 0.0, 0.0, 0.0], [0.0812689587, 0.0, 0.0, 0.0], [-0.654500008, 13.0, 14.0, 2.0], [-0.000649828406, 0.0, 0.0, 0.0], [0.0315205269, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 6, 7, 11, 13, 14, 2])
    branch_indices = np.array([0, 1, 3, 5, 4, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_910(xs):
    #Predicts Class 4
    function_dict = np.array([[0.157999992, 1.0, 2.0, 0.0], [0.1105, 3.0, 4.0, 0.0], [0.193500012, 5.0, 6.0, 0.0], [0.0923999995, 7.0, 8.0, 0.0], [0.075233005, 0.0, 0.0, 0.0], [-0.0982464626, 0.0, 0.0, 0.0], [0.194499999, 9.0, 10.0, 0.0], [0.0892499983, 11.0, 12.0, 0.0], [-0.0706716478, 0.0, 0.0, 0.0], [0.0562567711, 0.0, 0.0, 0.0], [0.202500001, 13.0, 14.0, 0.0], [0.0883999988, 15.0, 16.0, 0.0], [0.0719623864, 0.0, 0.0, 0.0], [-0.0451913141, 0.0, 0.0, 0.0], [0.0175576806, 0.0, 0.0, 0.0], [0.000539356144, 0.0, 0.0, 0.0], [-0.0870886073, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_911(xs):
    #Predicts Class 5
    function_dict = np.array([[0.363499999, 1.0, 2.0, 0.0], [0.273999989, 3.0, 4.0, 0.0], [0.401499987, 5.0, 6.0, 0.0], [0.263000011, 7.0, 8.0, 0.0], [-0.0761501417, 0.0, 0.0, 0.0], [0.0515111312, 0.0, 0.0, 0.0], [0.409500003, 9.0, 10.0, 0.0], [0.259499997, 11.0, 12.0, 0.0], [0.103709467, 0.0, 0.0, 0.0], [-0.0357329585, 0.0, 0.0, 0.0], [0.421999991, 13.0, 14.0, 0.0], [0.203500003, 15.0, 16.0, 0.0], [-0.0778375342, 0.0, 0.0, 0.0], [0.0572171919, 0.0, 0.0, 0.0], [0.429499984, 17.0, 18.0, 0.0], [-0.00468387781, 0.0, 0.0, 0.0], [0.0393385924, 0.0, 0.0, 0.0], [-0.0870368406, 0.0, 0.0, 0.0], [0.00600484945, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_912(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.979499996, 1.0, 2.0, 4.0], [-0.0238192417, 0.0, 0.0, 0.0], [0.398499995, 3.0, 4.0, 2.0], [0.0313986279, 0.0, 0.0, 0.0], [0.458499998, 5.0, 6.0, 2.0], [-0.994500041, 7.0, 8.0, 3.0], [-0.268999994, 9.0, 10.0, 0.0], [-0.0465074778, 0.0, 0.0, 0.0], [0.00299346424, 0.0, 0.0, 0.0], [-0.323500007, 11.0, 12.0, 0.0], [-0.946500003, 13.0, 14.0, 3.0], [0.0161902625, 0.0, 0.0, 0.0], [-0.0383983441, 0.0, 0.0, 0.0], [0.0235329829, 0.0, 0.0, 0.0], [-0.0206263233, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 7, 8, 11, 12, 13, 14])
    branch_indices = np.array([0, 2, 4, 5, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_913(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.42750001, 1.0, 2.0, 1.0], [-0.315500021, 3.0, 4.0, 0.0], [-0.0208140127, 0.0, 0.0, 0.0], [-0.689499974, 5.0, 6.0, 1.0], [-0.906499982, 7.0, 8.0, 4.0], [8.20800051e-05, 0.0, 0.0, 0.0], [0.0482745431, 0.0, 0.0, 0.0], [-0.980499983, 9.0, 10.0, 3.0], [-0.0384848937, 0.0, 0.0, 0.0], [-0.988499999, 11.0, 12.0, 3.0], [-0.96449995, 13.0, 14.0, 3.0], [0.00367349107, 0.0, 0.0, 0.0], [-0.0459046885, 0.0, 0.0, 0.0], [0.0558525212, 0.0, 0.0, 0.0], [-0.0034714879, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 11, 12, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_914(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [0.763999999, 3.0, 4.0, 2.0], [-0.281499982, 5.0, 6.0, 0.0], [0.685500026, 7.0, 8.0, 2.0], [-0.0336860269, 0.0, 0.0, 0.0], [-0.00379160256, 0.0, 0.0, 0.0], [0.0363285318, 0.0, 0.0, 0.0], [-0.186500013, 9.0, 10.0, 0.0], [0.031610541, 0.0, 0.0, 0.0], [-0.756500006, 11.0, 12.0, 1.0], [-0.142500013, 13.0, 14.0, 0.0], [0.0201356411, 0.0, 0.0, 0.0], [-0.0353528932, 0.0, 0.0, 0.0], [0.0499430373, 0.0, 0.0, 0.0], [-0.016066486, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_915(xs):
    #Predicts Class 3
    function_dict = np.array([[0.463499993, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.466499984, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [-0.0894058123, 0.0, 0.0, 0.0], [0.0963661298, 0.0, 0.0, 0.0], [0.506000042, 9.0, 10.0, 0.0], [0.424000025, 11.0, 12.0, 0.0], [0.0500735678, 0.0, 0.0, 0.0], [0.489499986, 13.0, 14.0, 0.0], [0.528499961, 15.0, 16.0, 0.0], [0.415000021, 17.0, 18.0, 0.0], [0.431500018, 19.0, 20.0, 0.0], [-0.00129635935, 0.0, 0.0, 0.0], [-0.0754927099, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.538499951, 23.0, 24.0, 0.0], [-0.000876750681, 0.0, 0.0, 0.0], [0.0513622314, 0.0, 0.0, 0.0], [-0.0932849497, 0.0, 0.0, 0.0], [0.00132301217, 0.0, 0.0, 0.0], [0.0630816892, 0.0, 0.0, 0.0], [0.0104839141, 0.0, 0.0, 0.0], [-0.0850601271, 0.0, 0.0, 0.0], [0.0121891825, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 5, 13, 14, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_916(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0850500017, 3.0, 4.0, 0.0], [0.0941499993, 5.0, 6.0, 0.0], [0.0760499984, 7.0, 8.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [-0.0828918815, 0.0, 0.0, 0.0], [0.111500002, 11.0, 12.0, 0.0], [0.03785, 13.0, 14.0, 0.0], [0.0825999975, 15.0, 16.0, 0.0], [0.0790255591, 0.0, 0.0, 0.0], [0.0256125312, 0.0, 0.0, 0.0], [0.082742691, 0.0, 0.0, 0.0], [0.190499991, 17.0, 18.0, 0.0], [0.0293500014, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.119167149, 0.0, 0.0, 0.0], [0.00335445208, 0.0, 0.0, 0.0], [-0.101115182, 0.0, 0.0, 0.0], [0.196500003, 23.0, 24.0, 0.0], [-0.000565047842, 0.0, 0.0, 0.0], [-0.128602281, 0.0, 0.0, 0.0], [0.0900453478, 0.0, 0.0, 0.0], [-0.104326934, 0.0, 0.0, 0.0], [0.041196797, 0.0, 0.0, 0.0], [-0.0352486745, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 15, 16, 9, 10, 5, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 4, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_917(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.615499973, 3.0, 4.0, 0.0], [-0.995499969, 5.0, 6.0, 1.0], [0.527999997, 7.0, 8.0, 0.0], [0.621500015, 9.0, 10.0, 0.0], [0.344999999, 11.0, 12.0, 0.0], [-0.17050001, 13.0, 14.0, 0.0], [0.506000042, 15.0, 16.0, 0.0], [0.547500014, 17.0, 18.0, 0.0], [-0.0666991174, 0.0, 0.0, 0.0], [2.18766854e-05, 0.0, 0.0, 0.0], [0.193000004, 19.0, 20.0, 0.0], [0.430999994, 21.0, 22.0, 0.0], [-0.00531842327, 0.0, 0.0, 0.0], [-0.0334551893, 0.0, 0.0, 0.0], [0.494000018, 23.0, 24.0, 0.0], [-0.0604852624, 0.0, 0.0, 0.0], [0.0434114151, 0.0, 0.0, 0.0], [0.557999969, 25.0, 26.0, 0.0], [-0.294, 27.0, 28.0, 0.0], [0.126626417, 0.0, 0.0, 0.0], [-0.0790516958, 0.0, 0.0, 0.0], [0.527500033, 29.0, 30.0, 0.0], [-0.00456348574, 0.0, 0.0, 0.0], [0.0768689662, 0.0, 0.0, 0.0], [-0.0359379798, 0.0, 0.0, 0.0], [0.0384107269, 0.0, 0.0, 0.0], [0.0564495474, 0.0, 0.0, 0.0], [-0.0663087741, 0.0, 0.0, 0.0], [0.0395157635, 0.0, 0.0, 0.0], [-0.017442327, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 16, 17, 25, 26, 9, 10, 27, 28, 20, 21, 29, 30, 13, 14])
    branch_indices = np.array([0, 1, 3, 7, 15, 8, 18, 4, 2, 5, 11, 19, 12, 22, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_918(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.794499993, 3.0, 4.0, 1.0], [0.0265866164, 0.0, 0.0, 0.0], [-0.817499995, 5.0, 6.0, 1.0], [-0.101500005, 7.0, 8.0, 0.0], [-0.847499967, 9.0, 10.0, 1.0], [0.0404095314, 0.0, 0.0, 0.0], [-0.538499951, 11.0, 12.0, 1.0], [-0.0552412607, 0.0, 0.0, 0.0], [0.0155723533, 0.0, 0.0, 0.0], [-0.0328137167, 0.0, 0.0, 0.0], [-0.166500002, 13.0, 14.0, 0.0], [-0.0276602283, 0.0, 0.0, 0.0], [-0.0109514827, 0.0, 0.0, 0.0], [0.0584454648, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 6, 13, 14, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 4, 7, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_919(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.797500014, 1.0, 2.0, 1.0], [0.382499993, 3.0, 4.0, 2.0], [-0.763499975, 5.0, 6.0, 1.0], [0.0150317457, 0.0, 0.0, 0.0], [-0.0319724642, 0.0, 0.0, 0.0], [0.0334262252, 0.0, 0.0, 0.0], [-0.734500051, 7.0, 8.0, 1.0], [-0.0342479683, 0.0, 0.0, 0.0], [-0.957499981, 9.0, 10.0, 3.0], [0.530499995, 11.0, 12.0, 2.0], [0.0319709182, 0.0, 0.0, 0.0], [-0.0376877338, 0.0, 0.0, 0.0], [0.00855573174, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 11, 12, 10])
    branch_indices = np.array([0, 1, 2, 6, 8, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_920(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.761500001, 1.0, 2.0, 1.0], [-0.0274907704, 0.0, 0.0, 0.0], [-0.949499965, 3.0, 4.0, 3.0], [-0.149500012, 5.0, 6.0, 0.0], [0.636500001, 7.0, 8.0, 2.0], [-0.24849999, 9.0, 10.0, 0.0], [-0.0117685124, 0.0, 0.0, 0.0], [-0.0297357533, 0.0, 0.0, 0.0], [0.0117027685, 0.0, 0.0, 0.0], [-0.299499989, 11.0, 12.0, 0.0], [0.529500008, 13.0, 14.0, 2.0], [0.0190532617, 0.0, 0.0, 0.0], [-0.022377003, 0.0, 0.0, 0.0], [-0.00563097047, 0.0, 0.0, 0.0], [0.0459899157, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 13, 14, 6, 7, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 10, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_921(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.00963000022, 1.0, 2.0, 0.0], [-0.0152500002, 3.0, 4.0, 0.0], [-0.00550500024, 5.0, 6.0, 0.0], [-0.0293500014, 7.0, 8.0, 0.0], [-0.133777007, 0.0, 0.0, 0.0], [0.144280717, 0.0, 0.0, 0.0], [-0.00478500035, 9.0, 10.0, 0.0], [-0.0394999981, 11.0, 12.0, 0.0], [-0.0250499994, 13.0, 14.0, 0.0], [-0.121456131, 0.0, 0.0, 0.0], [-0.00322999991, 15.0, 16.0, 0.0], [-0.042750001, 17.0, 18.0, 0.0], [-0.0307, 19.0, 20.0, 0.0], [0.15268901, 0.0, 0.0, 0.0], [-0.0164499991, 21.0, 22.0, 0.0], [0.138512269, 0.0, 0.0, 0.0], [-0.00200500013, 23.0, 24.0, 0.0], [-0.000865406066, 0.0, 0.0, 0.0], [0.112427488, 0.0, 0.0, 0.0], [-0.13041167, 0.0, 0.0, 0.0], [-0.0228231065, 0.0, 0.0, 0.0], [-0.00989194959, 0.0, 0.0, 0.0], [0.0447673313, 0.0, 0.0, 0.0], [-0.14271374, 0.0, 0.0, 0.0], [0.00351538602, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 21, 22, 4, 5, 9, 15, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 14, 2, 6, 10, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_922(xs):
    #Predicts Class 4
    function_dict = np.array([[0.192499995, 1.0, 2.0, 0.0], [0.152999997, 3.0, 4.0, 0.0], [0.195499986, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.110907316, 0.0, 0.0, 0.0], [-0.0840282366, 0.0, 0.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0912000015, 11.0, 12.0, 0.0], [-0.0819013342, 0.0, 0.0, 0.0], [0.0547825135, 0.0, 0.0, 0.0], [-0.0260746572, 0.0, 0.0, 0.0], [0.082949996, 13.0, 14.0, 0.0], [0.0739097372, 0.0, 0.0, 0.0], [-6.17108744e-05, 0.0, 0.0, 0.0], [-0.0411998965, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_923(xs):
    #Predicts Class 5
    function_dict = np.array([[0.588, 1.0, 2.0, 0.0], [0.561499953, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.549000025, 7.0, 8.0, 0.0], [-0.0537556857, 0.0, 0.0, 0.0], [0.0689084679, 0.0, 0.0, 0.0], [-0.0168405604, 0.0, 0.0, 0.0], [0.534000039, 9.0, 10.0, 0.0], [0.0544316806, 0.0, 0.0, 0.0], [0.513000011, 11.0, 12.0, 0.0], [0.539999962, 13.0, 14.0, 0.0], [-0.000102083424, 0.0, 0.0, 0.0], [0.0387922414, 0.0, 0.0, 0.0], [-0.0957347453, 0.0, 0.0, 0.0], [0.00284527289, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 8, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_924(xs):
    #Predicts Class 0
    function_dict = np.array([[0.63349998, 1.0, 2.0, 2.0], [-0.950500011, 3.0, 4.0, 3.0], [-0.259499997, 5.0, 6.0, 0.0], [-0.902500033, 7.0, 8.0, 4.0], [0.0191009641, 0.0, 0.0, 0.0], [-0.020835774, 0.0, 0.0, 0.0], [-0.174499989, 9.0, 10.0, 0.0], [-0.926499963, 11.0, 12.0, 4.0], [-0.0537801273, 0.0, 0.0, 0.0], [0.0536207445, 0.0, 0.0, 0.0], [-0.011337366, 0.0, 0.0, 0.0], [-0.202500001, 13.0, 14.0, 0.0], [0.0433780402, 0.0, 0.0, 0.0], [-0.0288876668, 0.0, 0.0, 0.0], [0.0111486539, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_925(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.946500003, 1.0, 2.0, 4.0], [-0.953500032, 3.0, 4.0, 4.0], [-0.230500013, 5.0, 6.0, 0.0], [-0.2465, 7.0, 8.0, 0.0], [0.042361211, 0.0, 0.0, 0.0], [-0.908499956, 9.0, 10.0, 4.0], [0.0131267831, 0.0, 0.0, 0.0], [-0.0320152268, 0.0, 0.0, 0.0], [0.417999983, 11.0, 12.0, 2.0], [-0.281499982, 13.0, 14.0, 0.0], [0.0108459331, 0.0, 0.0, 0.0], [-0.0276140459, 0.0, 0.0, 0.0], [-0.996500015, 15.0, 16.0, 3.0], [-0.0141861914, 0.0, 0.0, 0.0], [-0.0511702411, 0.0, 0.0, 0.0], [-0.00547128869, 0.0, 0.0, 0.0], [0.0541417487, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 15, 16, 4, 13, 14, 10, 6])
    branch_indices = np.array([0, 1, 3, 8, 12, 2, 5, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_926(xs):
    #Predicts Class 2
    function_dict = np.array([[0.673500001, 1.0, 2.0, 2.0], [-0.431500018, 3.0, 4.0, 1.0], [-0.864500046, 5.0, 6.0, 4.0], [-0.962499976, 7.0, 8.0, 4.0], [0.0356623046, 0.0, 0.0, 0.0], [-0.0369085148, 0.0, 0.0, 0.0], [0.0159556121, 0.0, 0.0, 0.0], [0.438499987, 9.0, 10.0, 2.0], [-0.934499979, 11.0, 12.0, 4.0], [0.0102445614, 0.0, 0.0, 0.0], [-0.0439902581, 0.0, 0.0, 0.0], [-0.99150002, 13.0, 14.0, 3.0], [-0.163500011, 15.0, 16.0, 0.0], [-0.00742694503, 0.0, 0.0, 0.0], [0.0548350401, 0.0, 0.0, 0.0], [-0.0286383945, 0.0, 0.0, 0.0], [0.0189229939, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 13, 14, 15, 16, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_927(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 3.0], [-0.747500002, 3.0, 4.0, 2.0], [-0.0361942947, 0.0, 0.0, 0.0], [-0.190499991, 5.0, 6.0, 0.0], [-0.654500008, 7.0, 8.0, 2.0], [-0.205500007, 9.0, 10.0, 0.0], [-0.140500009, 11.0, 12.0, 0.0], [-0.0855499953, 13.0, 14.0, 0.0], [-0.0879999995, 15.0, 16.0, 0.0], [-0.248999998, 17.0, 18.0, 0.0], [-0.191500008, 19.0, 20.0, 0.0], [-0.999500036, 21.0, 22.0, 4.0], [-0.137499988, 23.0, 24.0, 0.0], [-0.0946938768, 0.0, 0.0, 0.0], [-0.0083810715, 0.0, 0.0, 0.0], [0.0561666675, 0.0, 0.0, 0.0], [-0.0169747472, 0.0, 0.0, 0.0], [0.0216913894, 0.0, 0.0, 0.0], [-0.0554036535, 0.0, 0.0, 0.0], [0.0349102691, 0.0, 0.0, 0.0], [0.0929950476, 0.0, 0.0, 0.0], [-0.0669235364, 0.0, 0.0, 0.0], [0.0123652397, 0.0, 0.0, 0.0], [0.0614261441, 0.0, 0.0, 0.0], [-0.000780372997, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 23, 24, 13, 14, 15, 16, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 10, 6, 11, 12, 4, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_928(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0192999989, 1.0, 2.0, 0.0], [0.0101999994, 3.0, 4.0, 0.0], [0.0417999998, 5.0, 6.0, 0.0], [0.00768500008, 7.0, 8.0, 0.0], [-0.113174863, 0.0, 0.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0477499999, 11.0, 12.0, 0.0], [0.0042849998, 13.0, 14.0, 0.0], [0.0899627507, 0.0, 0.0, 0.0], [0.0237000007, 15.0, 16.0, 0.0], [-0.0993878543, 0.0, 0.0, 0.0], [-0.121456563, 0.0, 0.0, 0.0], [0.0560500026, 17.0, 18.0, 0.0], [0.00185999996, 19.0, 20.0, 0.0], [-0.0861470401, 0.0, 0.0, 0.0], [0.196835682, 0.0, 0.0, 0.0], [0.028549999, 21.0, 22.0, 0.0], [0.10864979, 0.0, 0.0, 0.0], [0.0757500008, 23.0, 24.0, 0.0], [-0.00378040806, 0.0, 0.0, 0.0], [0.124954551, 0.0, 0.0, 0.0], [-0.0529216491, 0.0, 0.0, 0.0], [0.111066222, 0.0, 0.0, 0.0], [-0.0778914616, 0.0, 0.0, 0.0], [0.0128875533, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 8, 4, 15, 21, 22, 10, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 2, 5, 9, 16, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_929(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.344999999, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.0914413333, 0.0, 0.0, 0.0], [0.0852243975, 0.0, 0.0, 0.0], [-0.972000003, 9.0, 10.0, 2.0], [0.2095, 11.0, 12.0, 0.0], [0.0561474822, 0.0, 0.0, 0.0], [0.409500003, 13.0, 14.0, 0.0], [-0.923500001, 15.0, 16.0, 2.0], [-0.644500017, 17.0, 18.0, 2.0], [-0.0795052797, 0.0, 0.0, 0.0], [0.401499987, 19.0, 20.0, 0.0], [0.431500018, 21.0, 22.0, 0.0], [0.0886837617, 0.0, 0.0, 0.0], [-0.00329733524, 0.0, 0.0, 0.0], [0.00393403647, 0.0, 0.0, 0.0], [-0.0496626645, 0.0, 0.0, 0.0], [-0.0146664036, 0.0, 0.0, 0.0], [-0.0647895113, 0.0, 0.0, 0.0], [0.0483982675, 0.0, 0.0, 0.0], [-0.00247375737, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 19, 20, 21, 22, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_930(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.970499992, 3.0, 4.0, 4.0], [0.478500009, 5.0, 6.0, 2.0], [-0.0364895575, 0.0, 0.0, 0.0], [0.00263635023, 0.0, 0.0, 0.0], [-0.995499969, 7.0, 8.0, 3.0], [0.522500038, 9.0, 10.0, 2.0], [0.00436197734, 0.0, 0.0, 0.0], [0.0412256047, 0.0, 0.0, 0.0], [-0.0250814278, 0.0, 0.0, 0.0], [-0.13350001, 11.0, 12.0, 0.0], [-0.87349999, 13.0, 14.0, 4.0], [0.0353679471, 0.0, 0.0, 0.0], [-0.0196049623, 0.0, 0.0, 0.0], [0.0201536864, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 9, 13, 14, 12])
    branch_indices = np.array([0, 1, 2, 5, 6, 10, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_931(xs):
    #Predicts Class 1
    function_dict = np.array([[0.386500001, 1.0, 2.0, 2.0], [-0.996500015, 3.0, 4.0, 3.0], [-0.315500021, 5.0, 6.0, 0.0], [-0.00867715664, 0.0, 0.0, 0.0], [0.0307158139, 0.0, 0.0, 0.0], [-0.916999996, 7.0, 8.0, 4.0], [-0.778499961, 9.0, 10.0, 1.0], [0.030702984, 0.0, 0.0, 0.0], [-0.00650926773, 0.0, 0.0, 0.0], [-0.805500031, 11.0, 12.0, 1.0], [-0.256500006, 13.0, 14.0, 0.0], [-0.00123742141, 0.0, 0.0, 0.0], [-0.0589301698, 0.0, 0.0, 0.0], [-0.0304364748, 0.0, 0.0, 0.0], [-0.936499953, 15.0, 16.0, 4.0], [-0.00887207035, 0.0, 0.0, 0.0], [0.0352557041, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 11, 12, 13, 15, 16])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_932(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.0185639169, 0.0, 0.0, 0.0], [-0.872500002, 3.0, 4.0, 4.0], [-0.983500004, 5.0, 6.0, 3.0], [-0.978999972, 7.0, 8.0, 3.0], [-0.173500001, 9.0, 10.0, 0.0], [-0.946500003, 11.0, 12.0, 4.0], [0.0242177285, 0.0, 0.0, 0.0], [-0.0352336243, 0.0, 0.0, 0.0], [-0.598500013, 13.0, 14.0, 1.0], [0.0219237823, 0.0, 0.0, 0.0], [0.00678575784, 0.0, 0.0, 0.0], [0.053780444, 0.0, 0.0, 0.0], [-0.0377404802, 0.0, 0.0, 0.0], [0.0026102257, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 13, 14, 10, 11, 12, 7, 8])
    branch_indices = np.array([0, 2, 3, 5, 9, 6, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_933(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0728500038, 1.0, 2.0, 0.0], [-0.0748500004, 3.0, 4.0, 0.0], [-0.0579499975, 5.0, 6.0, 0.0], [-0.923500001, 7.0, 8.0, 2.0], [-0.138936833, 0.0, 0.0, 0.0], [-0.066399999, 9.0, 10.0, 0.0], [-0.0491999984, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.795000017, 15.0, 16.0, 2.0], [0.00572298747, 0.0, 0.0, 0.0], [0.131734788, 0.0, 0.0, 0.0], [-0.0556499995, 17.0, 18.0, 0.0], [-0.0469499975, 19.0, 20.0, 0.0], [-0.132499993, 21.0, 22.0, 0.0], [-0.13350001, 23.0, 24.0, 0.0], [-0.11506857, 0.0, 0.0, 0.0], [-0.250499994, 25.0, 26.0, 0.0], [-0.0336099118, 0.0, 0.0, 0.0], [-0.121038713, 0.0, 0.0, 0.0], [0.185123533, 0.0, 0.0, 0.0], [-0.0455499999, 27.0, 28.0, 0.0], [0.0148662804, 0.0, 0.0, 0.0], [-0.0252471995, 0.0, 0.0, 0.0], [-0.101598546, 0.0, 0.0, 0.0], [0.127403975, 0.0, 0.0, 0.0], [-0.0780592561, 0.0, 0.0, 0.0], [0.0315376297, 0.0, 0.0, 0.0], [-0.108794607, 0.0, 0.0, 0.0], [0.00206432003, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 4, 9, 10, 17, 18, 19, 27, 28])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 2, 5, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_934(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0894500017, 1.0, 2.0, 0.0], [0.0873000026, 3.0, 4.0, 0.0], [0.0941499993, 5.0, 6.0, 0.0], [0.0854000002, 7.0, 8.0, 0.0], [0.0787372068, 0.0, 0.0, 0.0], [-0.0770544186, 0.0, 0.0, 0.0], [0.111500002, 9.0, 10.0, 0.0], [0.0825999975, 11.0, 12.0, 0.0], [-0.0939195678, 0.0, 0.0, 0.0], [0.0693234429, 0.0, 0.0, 0.0], [0.190499991, 13.0, 14.0, 0.0], [0.0760499984, 15.0, 16.0, 0.0], [0.116099574, 0.0, 0.0, 0.0], [-0.087510772, 0.0, 0.0, 0.0], [0.194499999, 17.0, 18.0, 0.0], [0.00102961052, 0.0, 0.0, 0.0], [-0.0976607352, 0.0, 0.0, 0.0], [0.0498296432, 0.0, 0.0, 0.0], [-0.0185735561, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_935(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.0378564186, 0.0, 0.0, 0.0], [-0.99150002, 3.0, 4.0, 1.0], [-0.421499997, 5.0, 6.0, 0.0], [-0.0808775574, 0.0, 0.0, 0.0], [-0.0447892547, 0.0, 0.0, 0.0], [-0.401000023, 7.0, 8.0, 0.0], [0.0604817495, 0.0, 0.0, 0.0], [-0.38349998, 9.0, 10.0, 0.0], [-0.0698755234, 0.0, 0.0, 0.0], [0.0023206831, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 7, 9, 10, 4])
    branch_indices = np.array([0, 2, 3, 6, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_936(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.847499967, 1.0, 2.0, 4.0], [0.654500008, 3.0, 4.0, 2.0], [-0.980499983, 5.0, 6.0, 3.0], [-0.782500029, 7.0, 8.0, 1.0], [0.0387529768, 0.0, 0.0, 0.0], [-0.0461397879, 0.0, 0.0, 0.0], [0.0177030414, 0.0, 0.0, 0.0], [-0.961500049, 9.0, 10.0, 4.0], [-0.932999969, 11.0, 12.0, 3.0], [-0.995499969, 13.0, 14.0, 3.0], [0.0431949534, 0.0, 0.0, 0.0], [-0.996500015, 15.0, 16.0, 3.0], [-0.0508708693, 0.0, 0.0, 0.0], [-0.0252145566, 0.0, 0.0, 0.0], [0.017112406, 0.0, 0.0, 0.0], [-0.0358634256, 0.0, 0.0, 0.0], [0.0193825345, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_937(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.334500015, 3.0, 4.0, 0.0], [-0.688500047, 5.0, 6.0, 1.0], [-0.0293992106, 0.0, 0.0, 0.0], [-0.923500001, 7.0, 8.0, 4.0], [0.00691304263, 0.0, 0.0, 0.0], [-0.0358671509, 0.0, 0.0, 0.0], [-0.734500051, 9.0, 10.0, 1.0], [0.0454171263, 0.0, 0.0, 0.0], [0.423500001, 11.0, 12.0, 2.0], [0.51849997, 13.0, 14.0, 2.0], [0.00645869598, 0.0, 0.0, 0.0], [-0.0331403762, 0.0, 0.0, 0.0], [-0.026613893, 0.0, 0.0, 0.0], [0.0340629183, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 12, 13, 14, 8, 5, 6])
    branch_indices = np.array([0, 1, 4, 7, 9, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_938(xs):
    #Predicts Class 2
    function_dict = np.array([[0.772500038, 1.0, 2.0, 2.0], [-0.4745, 3.0, 4.0, 1.0], [0.0270893965, 0.0, 0.0, 0.0], [-0.558500051, 5.0, 6.0, 1.0], [0.652500033, 7.0, 8.0, 2.0], [-0.62349999, 9.0, 10.0, 1.0], [0.0380934961, 0.0, 0.0, 0.0], [0.00208872044, 0.0, 0.0, 0.0], [-0.0476043746, 0.0, 0.0, 0.0], [-0.718500018, 11.0, 12.0, 1.0], [-0.0398586243, 0.0, 0.0, 0.0], [-0.0130429324, 0.0, 0.0, 0.0], [0.0303199198, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 10, 6, 7, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_939(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.127499998, 1.0, 2.0, 0.0], [-0.131500006, 3.0, 4.0, 0.0], [-0.125499994, 5.0, 6.0, 0.0], [-0.972000003, 7.0, 8.0, 2.0], [-0.972000003, 9.0, 10.0, 2.0], [0.0684592128, 0.0, 0.0, 0.0], [-0.120499998, 11.0, 12.0, 0.0], [-0.136500001, 13.0, 14.0, 0.0], [-0.191500008, 15.0, 16.0, 0.0], [-0.258397043, 0.0, 0.0, 0.0], [0.0903157294, 0.0, 0.0, 0.0], [-0.142034292, 0.0, 0.0, 0.0], [-0.119499996, 17.0, 18.0, 0.0], [-0.141499996, 19.0, 20.0, 0.0], [-0.134499997, 21.0, 22.0, 0.0], [-0.260500014, 23.0, 24.0, 0.0], [-0.154227346, 0.0, 0.0, 0.0], [0.150443316, 0.0, 0.0, 0.0], [-0.1175, 25.0, 26.0, 0.0], [0.00625762763, 0.0, 0.0, 0.0], [-0.0349126123, 0.0, 0.0, 0.0], [0.0811172202, 0.0, 0.0, 0.0], [-0.0154864453, 0.0, 0.0, 0.0], [-0.0639193431, 0.0, 0.0, 0.0], [0.0588374324, 0.0, 0.0, 0.0], [-0.0811409652, 0.0, 0.0, 0.0], [0.00250651082, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 21, 22, 23, 24, 16, 9, 10, 5, 11, 17, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 15, 4, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_940(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.111500002, 1.0, 2.0, 0.0], [-0.116499998, 3.0, 4.0, 0.0], [-0.105499998, 5.0, 6.0, 0.0], [-0.120499998, 7.0, 8.0, 0.0], [0.102150992, 0.0, 0.0, 0.0], [-0.107500002, 9.0, 10.0, 0.0], [-0.103500001, 11.0, 12.0, 0.0], [-0.125499994, 13.0, 14.0, 0.0], [-0.119499996, 15.0, 16.0, 0.0], [-0.0208766032, 0.0, 0.0, 0.0], [-0.0980651975, 0.0, 0.0, 0.0], [0.104134753, 0.0, 0.0, 0.0], [-0.0987499952, 17.0, 18.0, 0.0], [-0.127499998, 19.0, 20.0, 0.0], [0.146798462, 0.0, 0.0, 0.0], [-0.148924261, 0.0, 0.0, 0.0], [-0.118500002, 21.0, 22.0, 0.0], [-0.0594052598, 0.0, 0.0, 0.0], [-0.0925499946, 23.0, 24.0, 0.0], [0.00767861865, 0.0, 0.0, 0.0], [-0.0631363615, 0.0, 0.0, 0.0], [-0.00233959616, 0.0, 0.0, 0.0], [0.000954923686, 0.0, 0.0, 0.0], [0.129511461, 0.0, 0.0, 0.0], [-0.00462197419, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 15, 21, 22, 4, 9, 10, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 16, 2, 5, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_941(xs):
    #Predicts Class 5
    function_dict = np.array([[0.272000015, 1.0, 2.0, 0.0], [0.260500014, 3.0, 4.0, 0.0], [0.276499987, 5.0, 6.0, 0.0], [0.256500006, 7.0, 8.0, 0.0], [-0.0709405914, 0.0, 0.0, 0.0], [0.104735702, 0.0, 0.0, 0.0], [0.350499988, 9.0, 10.0, 0.0], [0.218499988, 11.0, 12.0, 0.0], [0.0452055521, 0.0, 0.0, 0.0], [-0.0933303013, 0.0, 0.0, 0.0], [0.407999992, 13.0, 14.0, 0.0], [-0.923500001, 15.0, 16.0, 2.0], [-0.0667721629, 0.0, 0.0, 0.0], [0.404500008, 17.0, 18.0, 0.0], [0.418500006, 19.0, 20.0, 0.0], [-0.0063970983, 0.0, 0.0, 0.0], [0.0223049913, 0.0, 0.0, 0.0], [0.00677061779, 0.0, 0.0, 0.0], [0.0786713734, 0.0, 0.0, 0.0], [-0.0821609795, 0.0, 0.0, 0.0], [0.00280611962, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_942(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.244500011, 1.0, 2.0, 0.0], [-0.987499952, 3.0, 4.0, 3.0], [-0.956499994, 5.0, 6.0, 3.0], [-0.0320034809, 0.0, 0.0, 0.0], [-0.922500014, 7.0, 8.0, 4.0], [-0.99849999, 9.0, 10.0, 3.0], [0.53550005, 11.0, 12.0, 2.0], [0.0291650537, 0.0, 0.0, 0.0], [-0.0172689687, 0.0, 0.0, 0.0], [0.0265065525, 0.0, 0.0, 0.0], [0.51849997, 13.0, 14.0, 2.0], [0.0484348983, 0.0, 0.0, 0.0], [-0.00138652523, 0.0, 0.0, 0.0], [-0.813500047, 15.0, 16.0, 1.0], [-0.201499999, 17.0, 18.0, 0.0], [0.0233767852, 0.0, 0.0, 0.0], [-0.061434783, 0.0, 0.0, 0.0], [0.050591588, 0.0, 0.0, 0.0], [-0.0201671142, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 9, 15, 16, 17, 18, 11, 12])
    branch_indices = np.array([0, 1, 4, 2, 5, 10, 13, 14, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_943(xs):
    #Predicts Class 1
    function_dict = np.array([[0.539499998, 1.0, 2.0, 2.0], [0.417500019, 3.0, 4.0, 2.0], [-0.235500008, 5.0, 6.0, 0.0], [-0.219500005, 7.0, 8.0, 0.0], [-0.270500004, 9.0, 10.0, 0.0], [-0.689499974, 11.0, 12.0, 1.0], [-0.0388531759, 0.0, 0.0, 0.0], [0.0204485059, 0.0, 0.0, 0.0], [-0.0329127684, 0.0, 0.0, 0.0], [-0.00841245521, 0.0, 0.0, 0.0], [-0.767500043, 13.0, 14.0, 1.0], [-0.0166288316, 0.0, 0.0, 0.0], [0.657500029, 15.0, 16.0, 2.0], [-0.0074334438, 0.0, 0.0, 0.0], [0.0519030318, 0.0, 0.0, 0.0], [0.036145471, 0.0, 0.0, 0.0], [-0.00516010122, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 13, 14, 11, 15, 16, 6])
    branch_indices = np.array([0, 1, 3, 4, 10, 2, 5, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_944(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [-0.864500046, 3.0, 4.0, 4.0], [-0.138500005, 5.0, 6.0, 0.0], [-0.919499993, 7.0, 8.0, 4.0], [0.0370118357, 0.0, 0.0, 0.0], [-0.0387956835, 0.0, 0.0, 0.0], [-0.675999999, 9.0, 10.0, 1.0], [-0.983500004, 11.0, 12.0, 3.0], [-0.0334382243, 0.0, 0.0, 0.0], [-0.0195125714, 0.0, 0.0, 0.0], [0.031248562, 0.0, 0.0, 0.0], [-0.217500001, 13.0, 14.0, 0.0], [0.0340689719, 0.0, 0.0, 0.0], [0.013108612, 0.0, 0.0, 0.0], [-0.0330399796, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_945(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.436500013, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.433499992, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.0826386213, 0.0, 0.0, 0.0], [0.506000042, 11.0, 12.0, 0.0], [0.429499984, 13.0, 14.0, 0.0], [-0.999500036, 15.0, 16.0, 1.0], [0.455500007, 17.0, 18.0, 0.0], [-0.00503756013, 0.0, 0.0, 0.0], [-0.0344711915, 0.0, 0.0, 0.0], [0.537500024, 19.0, 20.0, 0.0], [0.421999991, 21.0, 22.0, 0.0], [-0.0588867478, 0.0, 0.0, 0.0], [0.0952127352, 0.0, 0.0, 0.0], [-0.0182773974, 0.0, 0.0, 0.0], [-0.0179623365, 0.0, 0.0, 0.0], [-0.0718955323, 0.0, 0.0, 0.0], [0.523499966, 23.0, 24.0, 0.0], [0.556499958, 25.0, 26.0, 0.0], [-0.00286214263, 0.0, 0.0, 0.0], [0.0848079175, 0.0, 0.0, 0.0], [0.00109125115, 0.0, 0.0, 0.0], [0.0643120408, 0.0, 0.0, 0.0], [-0.030456271, 0.0, 0.0, 0.0], [0.0103886714, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 15, 16, 17, 18, 10, 5, 11, 23, 24, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 4, 9, 2, 6, 12, 19, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_946(xs):
    #Predicts Class 4
    function_dict = np.array([[0.00456999987, 1.0, 2.0, 0.0], [0.00202000001, 3.0, 4.0, 0.0], [0.0079549998, 5.0, 6.0, 0.0], [0.000549999997, 7.0, 8.0, 0.0], [-0.122581169, 0.0, 0.0, 0.0], [0.111296907, 0.0, 0.0, 0.0], [0.0104999999, 9.0, 10.0, 0.0], [-0.00200500013, 11.0, 12.0, 0.0], [0.0994376764, 0.0, 0.0, 0.0], [-0.104085572, 0.0, 0.0, 0.0], [0.0203999989, 13.0, 14.0, 0.0], [-0.00463499967, 15.0, 16.0, 0.0], [-0.000944999978, 17.0, 18.0, 0.0], [0.0921733528, 0.0, 0.0, 0.0], [0.0240500011, 19.0, 20.0, 0.0], [-0.00152998546, 0.0, 0.0, 0.0], [0.112172224, 0.0, 0.0, 0.0], [-0.145973161, 0.0, 0.0, 0.0], [0.0010364831, 0.0, 0.0, 0.0], [-0.110013798, 0.0, 0.0, 0.0], [0.0126111377, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_947(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.465499997, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.436500013, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [0.0490234196, 0.0, 0.0, 0.0], [-0.0121248327, 0.0, 0.0, 0.0], [0.433499992, 11.0, 12.0, 0.0], [0.463499993, 13.0, 14.0, 0.0], [0.49000001, 15.0, 16.0, 0.0], [-0.0985430628, 0.0, 0.0, 0.0], [0.429499984, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.455500007, 21.0, 22.0, 0.0], [0.00636137929, 0.0, 0.0, 0.0], [-0.0871495083, 0.0, 0.0, 0.0], [0.556499958, 23.0, 24.0, 0.0], [-0.000630462077, 0.0, 0.0, 0.0], [0.0639323369, 0.0, 0.0, 0.0], [-0.0918732211, 0.0, 0.0, 0.0], [0.0187017471, 0.0, 0.0, 0.0], [0.0199996196, 0.0, 0.0, 0.0], [0.0729794726, 0.0, 0.0, 0.0], [0.0264370106, 0.0, 0.0, 0.0], [-0.0401505865, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 21, 22, 14, 15, 23, 24, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 13, 4, 9, 16, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_948(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.817499995, 1.0, 2.0, 1.0], [-0.180999994, 3.0, 4.0, 0.0], [-0.179500014, 5.0, 6.0, 0.0], [0.0113559309, 0.0, 0.0, 0.0], [-0.0424983427, 0.0, 0.0, 0.0], [-0.615499973, 7.0, 8.0, 1.0], [-0.141499996, 9.0, 10.0, 0.0], [0.636500001, 11.0, 12.0, 2.0], [-0.0301192179, 0.0, 0.0, 0.0], [0.0466423035, 0.0, 0.0, 0.0], [-0.0727999955, 13.0, 14.0, 0.0], [0.559499979, 15.0, 16.0, 2.0], [0.0534107499, 0.0, 0.0, 0.0], [-0.0238351654, 0.0, 0.0, 0.0], [0.0330283903, 0.0, 0.0, 0.0], [0.00485983258, 0.0, 0.0, 0.0], [-0.0391851403, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 12, 8, 9, 13, 14])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 6, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_949(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.291500002, 1.0, 2.0, 0.0], [0.603500009, 3.0, 4.0, 2.0], [-0.828500032, 5.0, 6.0, 1.0], [0.0417702384, 0.0, 0.0, 0.0], [-0.0174951963, 0.0, 0.0, 0.0], [0.0259694606, 0.0, 0.0, 0.0], [-0.218499988, 7.0, 8.0, 0.0], [-0.986500025, 9.0, 10.0, 3.0], [-0.202500001, 11.0, 12.0, 0.0], [-0.68599999, 13.0, 14.0, 1.0], [0.00932967663, 0.0, 0.0, 0.0], [0.0300622899, 0.0, 0.0, 0.0], [0.442499995, 15.0, 16.0, 2.0], [-0.0679743737, 0.0, 0.0, 0.0], [0.00795457046, 0.0, 0.0, 0.0], [0.0122479415, 0.0, 0.0, 0.0], [-0.0267348476, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 13, 14, 10, 11, 15, 16])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_950(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [-0.196500003, 3.0, 4.0, 0.0], [-0.988499999, 5.0, 6.0, 3.0], [0.66050005, 7.0, 8.0, 2.0], [0.0401503369, 0.0, 0.0, 0.0], [0.00929939374, 0.0, 0.0, 0.0], [-0.0329275802, 0.0, 0.0, 0.0], [-0.953500032, 9.0, 10.0, 4.0], [-0.872500002, 11.0, 12.0, 4.0], [0.479499996, 13.0, 14.0, 2.0], [-0.0378929526, 0.0, 0.0, 0.0], [0.0415099747, 0.0, 0.0, 0.0], [-0.00634484226, 0.0, 0.0, 0.0], [-0.0241230391, 0.0, 0.0, 0.0], [0.0302913319, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_951(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.972000003, 1.0, 2.0, 2.0], [-0.999500036, 3.0, 4.0, 4.0], [-0.999500036, 5.0, 6.0, 4.0], [-0.120499998, 7.0, 8.0, 0.0], [-0.143999994, 9.0, 10.0, 0.0], [-0.130499989, 11.0, 12.0, 0.0], [-0.923500001, 13.0, 14.0, 2.0], [-0.132499993, 15.0, 16.0, 0.0], [-0.118500002, 17.0, 18.0, 0.0], [0.046568878, 0.0, 0.0, 0.0], [0.0145500004, 19.0, 20.0, 0.0], [-0.183158353, 0.0, 0.0, 0.0], [-0.105499998, 21.0, 22.0, 0.0], [-0.0745500028, 23.0, 24.0, 0.0], [-0.028450001, 25.0, 26.0, 0.0], [-0.140500009, 27.0, 28.0, 0.0], [-0.127499998, 29.0, 30.0, 0.0], [0.117330149, 0.0, 0.0, 0.0], [-0.107000001, 31.0, 32.0, 0.0], [-0.00337000005, 33.0, 34.0, 0.0], [0.0237413496, 0.0, 0.0, 0.0], [0.190913409, 0.0, 0.0, 0.0], [-0.00919000059, 35.0, 36.0, 0.0], [0.127556607, 0.0, 0.0, 0.0], [0.0107953781, 0.0, 0.0, 0.0], [-0.0578999966, 37.0, 38.0, 0.0], [0.000950000016, 39.0, 40.0, 0.0], [-0.00978202745, 0.0, 0.0, 0.0], [0.0309967548, 0.0, 0.0, 0.0], [-0.240414277, 0.0, 0.0, 0.0], [-0.0347753055, 0.0, 0.0, 0.0], [-0.0551585779, 0.0, 0.0, 0.0], [0.00923461746, 0.0, 0.0, 0.0], [-0.035954915, 0.0, 0.0, 0.0], [-0.211902708, 0.0, 0.0, 0.0], [-0.165207982, 0.0, 0.0, 0.0], [0.017902961, 0.0, 0.0, 0.0], [0.00108273095, 0.0, 0.0, 0.0], [-0.177607909, 0.0, 0.0, 0.0], [0.128118604, 0.0, 0.0, 0.0], [-0.00655890256, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([27, 28, 29, 30, 17, 31, 32, 9, 33, 34, 20, 11, 21, 35, 36, 23, 24, 37, 38, 39, 40])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 18, 4, 10, 19, 2, 5, 12, 22, 6, 13, 14, 25, 26])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_952(xs):
    #Predicts Class 4
    function_dict = np.array([[0.192499995, 1.0, 2.0, 0.0], [0.152999997, 3.0, 4.0, 0.0], [0.195499986, 5.0, 6.0, 0.0], [0.0945499986, 7.0, 8.0, 0.0], [0.0918500051, 0.0, 0.0, 0.0], [-0.0768546984, 0.0, 0.0, 0.0], [0.196500003, 9.0, 10.0, 0.0], [0.0892499983, 11.0, 12.0, 0.0], [-0.0708959401, 0.0, 0.0, 0.0], [0.0403266698, 0.0, 0.0, 0.0], [-0.0183658544, 0.0, 0.0, 0.0], [0.0883999988, 13.0, 14.0, 0.0], [0.0917500034, 15.0, 16.0, 0.0], [0.000635758974, 0.0, 0.0, 0.0], [-0.0856274068, 0.0, 0.0, 0.0], [0.102466896, 0.0, 0.0, 0.0], [0.00122026575, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 15, 16, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_953(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.923500001, 3.0, 4.0, 2.0], [0.348500013, 5.0, 6.0, 0.0], [-0.16049999, 7.0, 8.0, 0.0], [-0.0489180349, 0.0, 0.0, 0.0], [0.228500009, 9.0, 10.0, 0.0], [-0.99849999, 11.0, 12.0, 1.0], [-0.166500002, 13.0, 14.0, 0.0], [-0.0331500024, 15.0, 16.0, 0.0], [-0.995499969, 17.0, 18.0, 1.0], [-0.0493741632, 0.0, 0.0, 0.0], [0.437000006, 19.0, 20.0, 0.0], [0.0628615767, 0.0, 0.0, 0.0], [-0.380499989, 21.0, 22.0, 0.0], [0.0582184717, 0.0, 0.0, 0.0], [-0.149500012, 23.0, 24.0, 0.0], [-0.0123999994, 25.0, 26.0, 0.0], [-0.0386499986, 27.0, 28.0, 0.0], [-0.031646885, 0.0, 0.0, 0.0], [-0.00947928056, 0.0, 0.0, 0.0], [0.0438116789, 0.0, 0.0, 0.0], [0.0154405013, 0.0, 0.0, 0.0], [-0.045064263, 0.0, 0.0, 0.0], [-0.00528860278, 0.0, 0.0, 0.0], [-0.107011393, 0.0, 0.0, 0.0], [0.0486362875, 0.0, 0.0, 0.0], [-0.004107018, 0.0, 0.0, 0.0], [-0.0201370958, 0.0, 0.0, 0.0], [0.0989870355, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 23, 24, 25, 26, 4, 27, 28, 18, 10, 19, 20, 12])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 2, 5, 9, 17, 6, 11])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_954(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.836500049, 1.0, 2.0, 4.0], [-0.213499993, 3.0, 4.0, 0.0], [0.728999972, 5.0, 6.0, 2.0], [-0.680500031, 7.0, 8.0, 1.0], [-0.199499995, 9.0, 10.0, 0.0], [0.034694273, 0.0, 0.0, 0.0], [-0.0162963793, 0.0, 0.0, 0.0], [-0.985499978, 11.0, 12.0, 3.0], [-0.0434924103, 0.0, 0.0, 0.0], [0.0473251715, 0.0, 0.0, 0.0], [-0.953500032, 13.0, 14.0, 4.0], [0.466499984, 15.0, 16.0, 2.0], [-0.0291406605, 0.0, 0.0, 0.0], [0.449499995, 17.0, 18.0, 2.0], [-0.142500013, 19.0, 20.0, 0.0], [-0.028556319, 0.0, 0.0, 0.0], [0.0457884967, 0.0, 0.0, 0.0], [0.0399264991, 0.0, 0.0, 0.0], [-0.0144880079, 0.0, 0.0, 0.0], [-0.0509399287, 0.0, 0.0, 0.0], [0.00128073804, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 9, 17, 18, 19, 20, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 10, 13, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_955(xs):
    #Predicts Class 1
    function_dict = np.array([[0.642500043, 1.0, 2.0, 2.0], [0.570500016, 3.0, 4.0, 2.0], [-0.912500024, 5.0, 6.0, 4.0], [-0.997500002, 7.0, 8.0, 3.0], [-0.630499959, 9.0, 10.0, 1.0], [0.0312524438, 0.0, 0.0, 0.0], [-0.00622869004, 0.0, 0.0, 0.0], [-0.2245, 11.0, 12.0, 0.0], [-0.221500009, 13.0, 14.0, 0.0], [-0.0483672805, 0.0, 0.0, 0.0], [0.00305448519, 0.0, 0.0, 0.0], [-0.03802054, 0.0, 0.0, 0.0], [0.0102664568, 0.0, 0.0, 0.0], [-0.944499969, 15.0, 16.0, 4.0], [-0.189500004, 17.0, 18.0, 0.0], [0.0496296361, 0.0, 0.0, 0.0], [-0.00142596639, 0.0, 0.0, 0.0], [-0.0354101844, 0.0, 0.0, 0.0], [0.0240893532, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 15, 16, 17, 18, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 8, 13, 14, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_956(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.911499977, 1.0, 2.0, 3.0], [-0.600499988, 3.0, 4.0, 1.0], [0.022252541, 0.0, 0.0, 0.0], [-0.71449995, 5.0, 6.0, 1.0], [-0.827000022, 7.0, 8.0, 4.0], [-0.995499969, 9.0, 10.0, 3.0], [-0.995499969, 11.0, 12.0, 3.0], [-0.931499958, 13.0, 14.0, 4.0], [-0.0230110157, 0.0, 0.0, 0.0], [-0.0216054041, 0.0, 0.0, 0.0], [0.0226876866, 0.0, 0.0, 0.0], [-0.000807077391, 0.0, 0.0, 0.0], [-0.0511902869, 0.0, 0.0, 0.0], [-0.00780222472, 0.0, 0.0, 0.0], [0.0586050972, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 13, 14, 8, 2])
    branch_indices = np.array([0, 1, 3, 5, 6, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_957(xs):
    #Predicts Class 3
    function_dict = np.array([[0.00185999996, 1.0, 2.0, 0.0], [-0.00413500005, 3.0, 4.0, 0.0], [0.0042849998, 5.0, 6.0, 0.0], [-0.00496499985, 7.0, 8.0, 0.0], [-0.00163000007, 9.0, 10.0, 0.0], [-0.11238198, 0.0, 0.0, 0.0], [0.00946999993, 11.0, 12.0, 0.0], [-0.00885999948, 13.0, 14.0, 0.0], [-0.114363253, 0.0, 0.0, 0.0], [0.140805528, 0.0, 0.0, 0.0], [-0.000714999973, 15.0, 16.0, 0.0], [0.00588999968, 17.0, 18.0, 0.0], [0.0117000006, 19.0, 20.0, 0.0], [-0.0101749999, 21.0, 22.0, 0.0], [0.111932352, 0.0, 0.0, 0.0], [-0.110465132, 0.0, 0.0, 0.0], [0.10600765, 0.0, 0.0, 0.0], [-0.0152226305, 0.0, 0.0, 0.0], [0.0905688852, 0.0, 0.0, 0.0], [-0.105517872, 0.0, 0.0, 0.0], [0.0234000012, 23.0, 24.0, 0.0], [0.000823626586, 0.0, 0.0, 0.0], [-0.110687234, 0.0, 0.0, 0.0], [0.0966643766, 0.0, 0.0, 0.0], [-0.00718523236, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 14, 8, 9, 15, 16, 5, 17, 18, 19, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 4, 10, 2, 6, 11, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_958(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0234000012, 1.0, 2.0, 0.0], [0.0137499999, 3.0, 4.0, 0.0], [0.025150001, 5.0, 6.0, 0.0], [0.00974999927, 7.0, 8.0, 0.0], [-0.103195883, 0.0, 0.0, 0.0], [0.119847298, 0.0, 0.0, 0.0], [-0.822000027, 9.0, 10.0, 2.0], [0.00588999968, 11.0, 12.0, 0.0], [0.107219756, 0.0, 0.0, 0.0], [0.03785, 13.0, 14.0, 0.0], [0.0930071622, 0.0, 0.0, 0.0], [0.00325499987, 15.0, 16.0, 0.0], [-0.0901924819, 0.0, 0.0, 0.0], [0.0293500014, 17.0, 18.0, 0.0], [0.0476500019, 19.0, 20.0, 0.0], [-0.00301729608, 0.0, 0.0, 0.0], [0.0941485539, 0.0, 0.0, 0.0], [0.0177434012, 0.0, 0.0, 0.0], [-0.164468914, 0.0, 0.0, 0.0], [0.129039302, 0.0, 0.0, 0.0], [-0.00967364572, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 17, 18, 19, 20, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_959(xs):
    #Predicts Class 5
    function_dict = np.array([[0.263000011, 1.0, 2.0, 0.0], [0.259499997, 3.0, 4.0, 0.0], [0.273999989, 5.0, 6.0, 0.0], [0.203500003, 7.0, 8.0, 0.0], [-0.072987102, 0.0, 0.0, 0.0], [0.104803421, 0.0, 0.0, 0.0], [0.341000021, 9.0, 10.0, 0.0], [-0.0318999998, 11.0, 12.0, 0.0], [0.226999998, 13.0, 14.0, 0.0], [-0.0654146746, 0.0, 0.0, 0.0], [0.428499997, 15.0, 16.0, 0.0], [-0.080400005, 17.0, 18.0, 0.0], [0.198500007, 19.0, 20.0, 0.0], [0.0658781752, 0.0, 0.0, 0.0], [-0.00332565326, 0.0, 0.0, 0.0], [-0.999500036, 21.0, 22.0, 1.0], [0.432500005, 23.0, 24.0, 0.0], [-0.00338074076, 0.0, 0.0, 0.0], [0.0596401095, 0.0, 0.0, 0.0], [-0.0635475889, 0.0, 0.0, 0.0], [-0.0149225919, 0.0, 0.0, 0.0], [0.0112705128, 0.0, 0.0, 0.0], [0.101401404, 0.0, 0.0, 0.0], [-0.0857515186, 0.0, 0.0, 0.0], [0.00693792524, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 13, 14, 4, 5, 9, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 8, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_960(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.990499973, 1.0, 2.0, 3.0], [-0.272500008, 3.0, 4.0, 0.0], [0.66050005, 5.0, 6.0, 2.0], [-0.0392887481, 0.0, 0.0, 0.0], [-0.237500012, 7.0, 8.0, 0.0], [0.573500037, 9.0, 10.0, 2.0], [-0.819499969, 11.0, 12.0, 4.0], [0.0407521427, 0.0, 0.0, 0.0], [-0.99849999, 13.0, 14.0, 3.0], [-0.740499973, 15.0, 16.0, 1.0], [0.0620455779, 0.0, 0.0, 0.0], [0.00942937005, 0.0, 0.0, 0.0], [-0.0322079808, 0.0, 0.0, 0.0], [0.013433706, 0.0, 0.0, 0.0], [-0.739500046, 17.0, 18.0, 1.0], [-0.808500051, 19.0, 20.0, 1.0], [-0.0345066302, 0.0, 0.0, 0.0], [-0.0529857017, 0.0, 0.0, 0.0], [0.00833772589, 0.0, 0.0, 0.0], [-0.00383961783, 0.0, 0.0, 0.0], [0.0440975875, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 13, 17, 18, 19, 20, 16, 10, 11, 12])
    branch_indices = np.array([0, 1, 4, 8, 14, 2, 5, 9, 15, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_961(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.291500002, 1.0, 2.0, 0.0], [-0.334500015, 3.0, 4.0, 0.0], [-0.956499994, 5.0, 6.0, 4.0], [-0.011653414, 0.0, 0.0, 0.0], [-0.986500025, 7.0, 8.0, 3.0], [-0.963500023, 9.0, 10.0, 4.0], [-0.995499969, 11.0, 12.0, 3.0], [0.0523129292, 0.0, 0.0, 0.0], [-0.00154787849, 0.0, 0.0, 0.0], [-0.776499987, 13.0, 14.0, 1.0], [0.0392566286, 0.0, 0.0, 0.0], [0.0150384204, 0.0, 0.0, 0.0], [-0.984500051, 15.0, 16.0, 3.0], [-0.976500034, 17.0, 18.0, 4.0], [-0.990499973, 19.0, 20.0, 3.0], [-0.0604751669, 0.0, 0.0, 0.0], [-0.00390935875, 0.0, 0.0, 0.0], [-0.00924207084, 0.0, 0.0, 0.0], [0.0333104506, 0.0, 0.0, 0.0], [-0.0358554088, 0.0, 0.0, 0.0], [-0.00172973669, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 17, 18, 19, 20, 10, 11, 15, 16])
    branch_indices = np.array([0, 1, 4, 2, 5, 9, 13, 14, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_962(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.266499996, 1.0, 2.0, 0.0], [-0.436500013, 3.0, 4.0, 1.0], [0.667500019, 5.0, 6.0, 2.0], [0.00917902496, 0.0, 0.0, 0.0], [-0.03583242, 0.0, 0.0, 0.0], [-0.2315, 7.0, 8.0, 0.0], [-0.174499989, 9.0, 10.0, 0.0], [0.0610765852, 0.0, 0.0, 0.0], [-0.67050004, 11.0, 12.0, 1.0], [-0.0375267453, 0.0, 0.0, 0.0], [0.0210441779, 0.0, 0.0, 0.0], [-0.179500014, 13.0, 14.0, 0.0], [-0.0274037309, 0.0, 0.0, 0.0], [0.0411407538, 0.0, 0.0, 0.0], [-0.022822585, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 13, 14, 12, 9, 10])
    branch_indices = np.array([0, 1, 2, 5, 8, 11, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_963(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.1175, 1.0, 2.0, 0.0], [-0.119499996, 3.0, 4.0, 0.0], [-0.115500003, 5.0, 6.0, 0.0], [-0.120499998, 7.0, 8.0, 0.0], [-0.0810329914, 0.0, 0.0, 0.0], [0.123929881, 0.0, 0.0, 0.0], [-0.1065, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [0.0545601211, 0.0, 0.0, 0.0], [-0.110525668, 0.0, 0.0, 0.0], [-0.105499998, 13.0, 14.0, 0.0], [-0.137499988, 15.0, 16.0, 0.0], [-0.260500014, 17.0, 18.0, 0.0], [0.0665016994, 0.0, 0.0, 0.0], [-0.103500001, 19.0, 20.0, 0.0], [0.00196596282, 0.0, 0.0, 0.0], [-0.0395886116, 0.0, 0.0, 0.0], [-0.0447398946, 0.0, 0.0, 0.0], [0.0713388473, 0.0, 0.0, 0.0], [-0.0802877173, 0.0, 0.0, 0.0], [0.00256118854, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 5, 9, 13, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_964(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.885499954, 3.0, 4.0, 2.0], [-0.41049999, 5.0, 6.0, 0.0], [-0.057099998, 7.0, 8.0, 0.0], [0.00118999998, 9.0, 10.0, 0.0], [0.0502229445, 0.0, 0.0, 0.0], [-0.249500006, 11.0, 12.0, 0.0], [-0.0721499994, 13.0, 14.0, 0.0], [-0.0496499985, 15.0, 16.0, 0.0], [-0.0701999962, 17.0, 18.0, 0.0], [0.107859395, 0.0, 0.0, 0.0], [-0.0818538889, 0.0, 0.0, 0.0], [-0.1505, 19.0, 20.0, 0.0], [-0.0770500004, 21.0, 22.0, 0.0], [-0.999500036, 23.0, 24.0, 4.0], [-0.195965216, 0.0, 0.0, 0.0], [-0.999500036, 25.0, 26.0, 4.0], [0.0844084099, 0.0, 0.0, 0.0], [-0.00574500021, 27.0, 28.0, 0.0], [0.0514410324, 0.0, 0.0, 0.0], [-0.607499957, 29.0, 30.0, 2.0], [0.00467936648, 0.0, 0.0, 0.0], [-0.115299329, 0.0, 0.0, 0.0], [0.180198431, 0.0, 0.0, 0.0], [0.0303932559, 0.0, 0.0, 0.0], [-0.0090784803, 0.0, 0.0, 0.0], [0.0702794865, 0.0, 0.0, 0.0], [-0.114758894, 0.0, 0.0, 0.0], [-0.0215273071, 0.0, 0.0, 0.0], [-0.068640925, 0.0, 0.0, 0.0], [0.0202982053, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 23, 24, 15, 25, 26, 17, 27, 28, 10, 5, 11, 19, 29, 30])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 8, 16, 4, 9, 18, 2, 6, 12, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_965(xs):
    #Predicts Class 5
    function_dict = np.array([[0.618499994, 1.0, 2.0, 0.0], [0.585000038, 3.0, 4.0, 0.0], [0.0320715979, 0.0, 0.0, 0.0], [0.549000025, 5.0, 6.0, 0.0], [-0.0617082454, 0.0, 0.0, 0.0], [0.487500012, 7.0, 8.0, 0.0], [0.561499953, 9.0, 10.0, 0.0], [0.46450001, 11.0, 12.0, 0.0], [0.513000011, 13.0, 14.0, 0.0], [0.0502987057, 0.0, 0.0, 0.0], [0.0143179018, 0.0, 0.0, 0.0], [-0.00132804352, 0.0, 0.0, 0.0], [0.0650040433, 0.0, 0.0, 0.0], [-0.0623130873, 0.0, 0.0, 0.0], [-0.0102365604, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 13, 14, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_966(xs):
    #Predicts Class 0
    function_dict = np.array([[0.338, 1.0, 2.0, 2.0], [-0.0217344575, 0.0, 0.0, 0.0], [-0.797500014, 3.0, 4.0, 1.0], [-0.823500037, 5.0, 6.0, 1.0], [-0.971500039, 7.0, 8.0, 4.0], [-0.00230182917, 0.0, 0.0, 0.0], [0.0393662415, 0.0, 0.0, 0.0], [-0.0327554382, 0.0, 0.0, 0.0], [-0.931499958, 9.0, 10.0, 3.0], [-0.987499952, 11.0, 12.0, 3.0], [-0.0191798322, 0.0, 0.0, 0.0], [-0.00776310405, 0.0, 0.0, 0.0], [0.028823182, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 6, 7, 11, 12, 10])
    branch_indices = np.array([0, 2, 3, 4, 8, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_967(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.809499979, 1.0, 2.0, 1.0], [-0.96449995, 3.0, 4.0, 4.0], [-0.315500021, 5.0, 6.0, 0.0], [0.00757440366, 0.0, 0.0, 0.0], [-0.0355601832, 0.0, 0.0, 0.0], [0.0286096558, 0.0, 0.0, 0.0], [-0.5995, 7.0, 8.0, 1.0], [-0.971500039, 9.0, 10.0, 4.0], [-0.458000004, 11.0, 12.0, 1.0], [0.0321706682, 0.0, 0.0, 0.0], [-0.950500011, 13.0, 14.0, 4.0], [-0.0398501121, 0.0, 0.0, 0.0], [-0.000621607702, 0.0, 0.0, 0.0], [-0.0285454039, 0.0, 0.0, 0.0], [0.0160076171, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 13, 14, 11, 12])
    branch_indices = np.array([0, 1, 2, 6, 7, 10, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_968(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.691499949, 1.0, 2.0, 1.0], [-0.961500049, 3.0, 4.0, 4.0], [0.598500013, 5.0, 6.0, 2.0], [0.00173670112, 0.0, 0.0, 0.0], [-0.036034517, 0.0, 0.0, 0.0], [-0.203000009, 7.0, 8.0, 0.0], [-0.166500002, 9.0, 10.0, 0.0], [0.000910000526, 0.0, 0.0, 0.0], [0.0406975746, 0.0, 0.0, 0.0], [-0.526499987, 11.0, 12.0, 1.0], [-0.039070081, 0.0, 0.0, 0.0], [0.046960704, 0.0, 0.0, 0.0], [-0.257499993, 13.0, 14.0, 0.0], [0.0275146626, 0.0, 0.0, 0.0], [-0.0464983359, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 11, 13, 14, 10])
    branch_indices = np.array([0, 1, 2, 5, 6, 9, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_969(xs):
    #Predicts Class 3
    function_dict = np.array([[0.445500016, 1.0, 2.0, 0.0], [0.432500005, 3.0, 4.0, 0.0], [0.46450001, 5.0, 6.0, 0.0], [0.428499997, 7.0, 8.0, 0.0], [0.434499979, 9.0, 10.0, 0.0], [0.446500003, 11.0, 12.0, 0.0], [0.479499996, 13.0, 14.0, 0.0], [0.42049998, 15.0, 16.0, 0.0], [0.0696479231, 0.0, 0.0, 0.0], [-0.0736475065, 0.0, 0.0, 0.0], [-0.010277533, 0.0, 0.0, 0.0], [0.008465169, 0.0, 0.0, 0.0], [0.07364133, 0.0, 0.0, 0.0], [-0.0553835966, 0.0, 0.0, 0.0], [0.513000011, 17.0, 18.0, 0.0], [0.415000021, 19.0, 20.0, 0.0], [-0.0839025602, 0.0, 0.0, 0.0], [0.0441598445, 0.0, 0.0, 0.0], [0.523499966, 21.0, 22.0, 0.0], [-0.00174728432, 0.0, 0.0, 0.0], [0.0670736581, 0.0, 0.0, 0.0], [-0.0413358621, 0.0, 0.0, 0.0], [0.0127879661, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 16, 8, 9, 10, 11, 12, 13, 17, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 6, 14, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_970(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.432500005, 1.0, 2.0, 2.0], [-0.99849999, 3.0, 4.0, 1.0], [-0.0493230671, 0.0, 0.0, 0.0], [-0.408500016, 5.0, 6.0, 0.0], [-0.0225000009, 7.0, 8.0, 0.0], [-0.099222593, 0.0, 0.0, 0.0], [-0.38349998, 9.0, 10.0, 0.0], [-0.689499974, 11.0, 12.0, 2.0], [-0.0243663806, 0.0, 0.0, 0.0], [0.054221075, 0.0, 0.0, 0.0], [0.00456999987, 13.0, 14.0, 0.0], [-0.0015540052, 0.0, 0.0, 0.0], [0.100724474, 0.0, 0.0, 0.0], [-0.00402726466, 0.0, 0.0, 0.0], [0.0103781093, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 9, 13, 14, 11, 12, 8, 2])
    branch_indices = np.array([0, 1, 3, 6, 10, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_971(xs):
    #Predicts Class 5
    function_dict = np.array([[0.2755, 1.0, 2.0, 0.0], [0.264499992, 3.0, 4.0, 0.0], [0.344999999, 5.0, 6.0, 0.0], [0.253499985, 7.0, 8.0, 0.0], [-0.0877850577, 0.0, 0.0, 0.0], [0.0950659662, 0.0, 0.0, 0.0], [0.397499979, 9.0, 10.0, 0.0], [0.2095, 11.0, 12.0, 0.0], [0.050438039, 0.0, 0.0, 0.0], [-0.0522850566, 0.0, 0.0, 0.0], [0.415000021, 13.0, 14.0, 0.0], [-0.161500007, 15.0, 16.0, 0.0], [-0.0711752698, 0.0, 0.0, 0.0], [0.406499982, 17.0, 18.0, 0.0], [0.42049998, 19.0, 20.0, 0.0], [-0.0110553177, 0.0, 0.0, 0.0], [0.010126288, 0.0, 0.0, 0.0], [0.0107187778, 0.0, 0.0, 0.0], [0.089742355, 0.0, 0.0, 0.0], [-0.0648833737, 0.0, 0.0, 0.0], [0.00409794273, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 17, 18, 19, 20])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 13, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_972(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.892500043, 1.0, 2.0, 3.0], [-0.538499951, 3.0, 4.0, 1.0], [0.0234926622, 0.0, 0.0, 0.0], [-0.847000003, 5.0, 6.0, 4.0], [-0.0313839689, 0.0, 0.0, 0.0], [-0.914499998, 7.0, 8.0, 4.0], [-0.0254437011, 0.0, 0.0, 0.0], [-0.847499967, 9.0, 10.0, 1.0], [-0.705500007, 11.0, 12.0, 1.0], [0.0252405386, 0.0, 0.0, 0.0], [-0.00985063333, 0.0, 0.0, 0.0], [0.00535624195, 0.0, 0.0, 0.0], [0.0458360538, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([9, 10, 11, 12, 6, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_973(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [-0.979499996, 3.0, 4.0, 4.0], [-0.0177877322, 0.0, 0.0, 0.0], [0.0408574976, 0.0, 0.0, 0.0], [-0.966500044, 5.0, 6.0, 4.0], [-0.0289216749, 0.0, 0.0, 0.0], [-0.987499952, 7.0, 8.0, 3.0], [-0.921499968, 9.0, 10.0, 4.0], [-0.698000014, 11.0, 12.0, 1.0], [0.0447825901, 0.0, 0.0, 0.0], [-0.0153228901, 0.0, 0.0, 0.0], [0.0128310407, 0.0, 0.0, 0.0], [-0.0309430901, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 5, 9, 10, 11, 12, 2])
    branch_indices = np.array([0, 1, 4, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_974(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.461499989, 1.0, 2.0, 1.0], [-0.206499994, 3.0, 4.0, 0.0], [-0.281499982, 5.0, 6.0, 0.0], [-0.940500021, 7.0, 8.0, 4.0], [-0.946500003, 9.0, 10.0, 4.0], [-0.00512253027, 0.0, 0.0, 0.0], [0.0410759151, 0.0, 0.0, 0.0], [-0.661499977, 11.0, 12.0, 1.0], [-0.0440362841, 0.0, 0.0, 0.0], [-0.0177180246, 0.0, 0.0, 0.0], [-0.891499996, 13.0, 14.0, 4.0], [-0.0193429329, 0.0, 0.0, 0.0], [0.0248325765, 0.0, 0.0, 0.0], [0.0459356308, 0.0, 0.0, 0.0], [-0.011285821, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 9, 13, 14, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 10, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_975(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.0968500003, 1.0, 2.0, 0.0], [-0.100500003, 3.0, 4.0, 0.0], [-0.0914499983, 5.0, 6.0, 0.0], [-0.104499996, 7.0, 8.0, 0.0], [-0.103612468, 0.0, 0.0, 0.0], [0.140284017, 0.0, 0.0, 0.0], [-0.0907500014, 9.0, 10.0, 0.0], [-0.1105, 11.0, 12.0, 0.0], [-0.102499999, 13.0, 14.0, 0.0], [-0.0760171637, 0.0, 0.0, 0.0], [-0.0579499975, 15.0, 16.0, 0.0], [-0.1175, 17.0, 18.0, 0.0], [-0.0792695582, 0.0, 0.0, 0.0], [0.113792196, 0.0, 0.0, 0.0], [-0.101500005, 19.0, 20.0, 0.0], [-0.066399999, 21.0, 22.0, 0.0], [-0.0491999984, 23.0, 24.0, 0.0], [-0.00536184711, 0.0, 0.0, 0.0], [0.0686915666, 0.0, 0.0, 0.0], [-0.0383663103, 0.0, 0.0, 0.0], [0.00122504577, 0.0, 0.0, 0.0], [-0.0131437117, 0.0, 0.0, 0.0], [0.120304137, 0.0, 0.0, 0.0], [-0.0948946178, 0.0, 0.0, 0.0], [0.0025407616, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 13, 19, 20, 4, 5, 9, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 2, 6, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_976(xs):
    #Predicts Class 4
    function_dict = np.array([[0.202500001, 1.0, 2.0, 0.0], [0.157999992, 3.0, 4.0, 0.0], [0.0367246047, 0.0, 0.0, 0.0], [0.1105, 5.0, 6.0, 0.0], [0.193500012, 7.0, 8.0, 0.0], [0.0923999995, 9.0, 10.0, 0.0], [0.0946897641, 0.0, 0.0, 0.0], [-0.0986614451, 0.0, 0.0, 0.0], [0.194499999, 11.0, 12.0, 0.0], [0.0912000015, 13.0, 14.0, 0.0], [-0.0746625215, 0.0, 0.0, 0.0], [0.0578970946, 0.0, 0.0, 0.0], [-0.0493174978, 0.0, 0.0, 0.0], [-0.00133370445, 0.0, 0.0, 0.0], [0.0798395872, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_977(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.164499998, 3.0, 4.0, 0.0], [0.0356065556, 0.0, 0.0, 0.0], [-0.999500036, 5.0, 6.0, 4.0], [-0.155499995, 7.0, 8.0, 0.0], [-0.1655, 9.0, 10.0, 0.0], [0.0572254695, 0.0, 0.0, 0.0], [-0.0850471631, 0.0, 0.0, 0.0], [-0.0802000016, 11.0, 12.0, 0.0], [-0.380499989, 13.0, 14.0, 0.0], [0.0526590906, 0.0, 0.0, 0.0], [-0.1505, 15.0, 16.0, 0.0], [-0.0331000015, 17.0, 18.0, 0.0], [0.0226711798, 0.0, 0.0, 0.0], [-0.0525063723, 0.0, 0.0, 0.0], [0.0164036676, 0.0, 0.0, 0.0], [0.0529117808, 0.0, 0.0, 0.0], [-0.0796754137, 0.0, 0.0, 0.0], [-0.000334327924, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 6, 7, 15, 16, 17, 18, 2])
    branch_indices = np.array([0, 1, 3, 5, 9, 4, 8, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_978(xs):
    #Predicts Class 0
    function_dict = np.array([[0.702499986, 1.0, 2.0, 2.0], [-0.961500049, 3.0, 4.0, 4.0], [0.737499952, 5.0, 6.0, 2.0], [-0.180500001, 7.0, 8.0, 0.0], [-0.109499998, 9.0, 10.0, 0.0], [-0.0367256813, 0.0, 0.0, 0.0], [0.0101256864, 0.0, 0.0, 0.0], [-0.759500027, 11.0, 12.0, 1.0], [-0.0314592794, 0.0, 0.0, 0.0], [-0.990499973, 13.0, 14.0, 3.0], [-0.028575616, 0.0, 0.0, 0.0], [0.0282768644, 0.0, 0.0, 0.0], [-0.0236498117, 0.0, 0.0, 0.0], [-0.899500012, 15.0, 16.0, 4.0], [-0.234499991, 17.0, 18.0, 0.0], [0.0186512116, 0.0, 0.0, 0.0], [-0.0296588019, 0.0, 0.0, 0.0], [0.00845638197, 0.0, 0.0, 0.0], [0.0573341697, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([11, 12, 8, 15, 16, 17, 18, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 4, 9, 13, 14, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_979(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.729499996, 1.0, 2.0, 1.0], [-0.993499994, 3.0, 4.0, 3.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.956499994, 7.0, 8.0, 4.0], [-0.975499988, 9.0, 10.0, 3.0], [-0.0140475892, 0.0, 0.0, 0.0], [-0.651499987, 11.0, 12.0, 1.0], [-0.976500034, 13.0, 14.0, 4.0], [-0.0446230844, 0.0, 0.0, 0.0], [0.0278302245, 0.0, 0.0, 0.0], [-0.0211560987, 0.0, 0.0, 0.0], [0.0454774313, 0.0, 0.0, 0.0], [-0.309499979, 15.0, 16.0, 0.0], [-0.0299499836, 0.0, 0.0, 0.0], [0.0306244735, 0.0, 0.0, 0.0], [0.0245279912, 0.0, 0.0, 0.0], [-0.513000011, 17.0, 18.0, 1.0], [-0.045941487, 0.0, 0.0, 0.0], [0.00959300995, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 9, 10, 5, 11, 15, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 4, 2, 6, 12, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_980(xs):
    #Predicts Class 2
    function_dict = np.array([[0.772500038, 1.0, 2.0, 2.0], [-0.24849999, 3.0, 4.0, 0.0], [0.0206484683, 0.0, 0.0, 0.0], [0.652500033, 5.0, 6.0, 2.0], [-0.149500012, 7.0, 8.0, 0.0], [0.00372045022, 0.0, 0.0, 0.0], [-0.0497922376, 0.0, 0.0, 0.0], [-0.965499997, 9.0, 10.0, 4.0], [-0.989500046, 11.0, 12.0, 3.0], [-0.0238109324, 0.0, 0.0, 0.0], [-0.934499979, 13.0, 14.0, 4.0], [0.00773909176, 0.0, 0.0, 0.0], [-0.0393677428, 0.0, 0.0, 0.0], [0.0511259399, 0.0, 0.0, 0.0], [0.00598529866, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([5, 6, 9, 13, 14, 11, 12, 2])
    branch_indices = np.array([0, 1, 3, 4, 7, 10, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_981(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.296499997, 1.0, 2.0, 0.0], [-0.393000007, 3.0, 4.0, 0.0], [-0.274500012, 5.0, 6.0, 0.0], [-0.00721520511, 0.0, 0.0, 0.0], [0.0443533286, 0.0, 0.0, 0.0], [-0.0431133769, 0.0, 0.0, 0.0], [-0.249500006, 7.0, 8.0, 0.0], [0.0726680607, 0.0, 0.0, 0.0], [-0.51699996, 9.0, 10.0, 2.0], [-0.73150003, 11.0, 12.0, 2.0], [-0.0489642359, 0.0, 0.0, 0.0], [-0.00100081332, 0.0, 0.0, 0.0], [0.0292805228, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 7, 11, 12, 10])
    branch_indices = np.array([0, 1, 2, 6, 8, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_982(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.407499999, 1.0, 2.0, 0.0], [-0.432500005, 3.0, 4.0, 0.0], [-0.372500002, 5.0, 6.0, 0.0], [-0.0118378419, 0.0, 0.0, 0.0], [0.0707634836, 0.0, 0.0, 0.0], [-0.0627221763, 0.0, 0.0, 0.0], [-0.274500012, 7.0, 8.0, 0.0], [-0.292500019, 9.0, 10.0, 0.0], [-0.249500006, 11.0, 12.0, 0.0], [-0.0121584237, 0.0, 0.0, 0.0], [0.0443728045, 0.0, 0.0, 0.0], [-0.0665483102, 0.0, 0.0, 0.0], [-0.997500002, 13.0, 14.0, 1.0], [0.000892103475, 0.0, 0.0, 0.0], [-0.0376423411, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 9, 10, 11, 13, 14])
    branch_indices = np.array([0, 1, 2, 6, 7, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_983(xs):
    #Predicts Class 5
    function_dict = np.array([[0.272000015, 1.0, 2.0, 0.0], [0.260500014, 3.0, 4.0, 0.0], [0.276499987, 5.0, 6.0, 0.0], [0.253499985, 7.0, 8.0, 0.0], [-0.0633375645, 0.0, 0.0, 0.0], [0.0944904834, 0.0, 0.0, 0.0], [0.350499988, 9.0, 10.0, 0.0], [0.2095, 11.0, 12.0, 0.0], [0.0369536132, 0.0, 0.0, 0.0], [-0.076138109, 0.0, 0.0, 0.0], [0.394500017, 13.0, 14.0, 0.0], [-0.16049999, 15.0, 16.0, 0.0], [-0.056115821, 0.0, 0.0, 0.0], [0.0594090261, 0.0, 0.0, 0.0], [0.404500008, 17.0, 18.0, 0.0], [0.0103828087, 0.0, 0.0, 0.0], [-0.0109691881, 0.0, 0.0, 0.0], [-0.0451681167, 0.0, 0.0, 0.0], [0.00695320684, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 5, 9, 13, 17, 18])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_984(xs):
    #Predicts Class 0
    function_dict = np.array([[0.426499993, 1.0, 2.0, 2.0], [-0.801499963, 3.0, 4.0, 1.0], [-0.892500043, 5.0, 6.0, 4.0], [0.00195018866, 0.0, 0.0, 0.0], [-0.0307607874, 0.0, 0.0, 0.0], [-0.919499993, 7.0, 8.0, 4.0], [-0.182500005, 9.0, 10.0, 0.0], [-0.656499982, 11.0, 12.0, 1.0], [0.0393081084, 0.0, 0.0, 0.0], [0.667999983, 13.0, 14.0, 2.0], [0.0256270524, 0.0, 0.0, 0.0], [-0.172499999, 15.0, 16.0, 0.0], [-0.0313711837, 0.0, 0.0, 0.0], [-0.0577999614, 0.0, 0.0, 0.0], [0.00708600553, 0.0, 0.0, 0.0], [0.0294386707, 0.0, 0.0, 0.0], [-0.0236582831, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 15, 16, 12, 8, 13, 14, 10])
    branch_indices = np.array([0, 1, 2, 5, 7, 11, 6, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_985(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.169499993, 1.0, 2.0, 0.0], [0.657500029, 3.0, 4.0, 2.0], [-0.0177427512, 0.0, 0.0, 0.0], [-0.658499956, 5.0, 6.0, 1.0], [-0.0230934769, 0.0, 0.0, 0.0], [0.407499999, 7.0, 8.0, 2.0], [-0.506500006, 9.0, 10.0, 1.0], [0.0327855982, 0.0, 0.0, 0.0], [-0.221500009, 11.0, 12.0, 0.0], [0.0758763775, 0.0, 0.0, 0.0], [-0.0135211814, 0.0, 0.0, 0.0], [0.00417407369, 0.0, 0.0, 0.0], [-0.0523880906, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 11, 12, 9, 10, 4, 2])
    branch_indices = np.array([0, 1, 3, 5, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_986(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.456499994, 1.0, 2.0, 1.0], [-0.568500042, 3.0, 4.0, 1.0], [-0.281499982, 5.0, 6.0, 0.0], [-0.234499991, 7.0, 8.0, 0.0], [-0.237000003, 9.0, 10.0, 0.0], [-0.00252894079, 0.0, 0.0, 0.0], [0.034317866, 0.0, 0.0, 0.0], [-0.0364086963, 0.0, 0.0, 0.0], [0.605499983, 11.0, 12.0, 2.0], [0.0185749289, 0.0, 0.0, 0.0], [-0.0463885255, 0.0, 0.0, 0.0], [0.534500003, 13.0, 14.0, 2.0], [0.046397116, 0.0, 0.0, 0.0], [0.0099357767, 0.0, 0.0, 0.0], [-0.0295759011, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 13, 14, 12, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 8, 11, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_987(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.283500016, 1.0, 2.0, 0.0], [-0.284500003, 3.0, 4.0, 0.0], [-0.212500006, 5.0, 6.0, 0.0], [-0.37349999, 7.0, 8.0, 0.0], [0.0557448119, 0.0, 0.0, 0.0], [-0.074387528, 0.0, 0.0, 0.0], [-0.2095, 9.0, 10.0, 0.0], [0.0285981819, 0.0, 0.0, 0.0], [-0.0329107158, 0.0, 0.0, 0.0], [0.0661716759, 0.0, 0.0, 0.0], [-0.186500013, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.185499996, 15.0, 16.0, 0.0], [-0.057174895, 0.0, 0.0, 0.0], [0.0531993918, 0.0, 0.0, 0.0], [0.108996756, 0.0, 0.0, 0.0], [-0.000599289022, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 4, 5, 9, 13, 14, 15, 16])
    branch_indices = np.array([0, 1, 3, 2, 6, 10, 11, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_988(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.395500004, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.282499999, 5.0, 6.0, 0.0], [-0.0158130713, 0.0, 0.0, 0.0], [0.0613007843, 0.0, 0.0, 0.0], [-0.297500014, 7.0, 8.0, 0.0], [-0.212500006, 9.0, 10.0, 0.0], [0.00290698814, 0.0, 0.0, 0.0], [-0.0495108888, 0.0, 0.0, 0.0], [0.0802555904, 0.0, 0.0, 0.0], [-0.2095, 11.0, 12.0, 0.0], [-0.0664655715, 0.0, 0.0, 0.0], [-0.194499999, 13.0, 14.0, 0.0], [0.0350523777, 0.0, 0.0, 0.0], [-0.00114370428, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 8, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 2, 5, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_989(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.161500007, 1.0, 2.0, 0.0], [-0.168500006, 3.0, 4.0, 0.0], [-0.153499991, 5.0, 6.0, 0.0], [-0.296499997, 7.0, 8.0, 0.0], [-0.999500036, 9.0, 10.0, 4.0], [-0.158500001, 11.0, 12.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.393000007, 15.0, 16.0, 0.0], [0.0379414521, 0.0, 0.0, 0.0], [-0.0769976899, 0.0, 0.0, 0.0], [0.0268491544, 0.0, 0.0, 0.0], [0.0538048819, 0.0, 0.0, 0.0], [0.0202503465, 0.0, 0.0, 0.0], [-0.0331500024, 17.0, 18.0, 0.0], [-0.923500001, 19.0, 20.0, 2.0], [-0.420000017, 21.0, 22.0, 0.0], [-0.0684542581, 0.0, 0.0, 0.0], [-0.0842708498, 0.0, 0.0, 0.0], [-0.0123999994, 23.0, 24.0, 0.0], [0.0734909102, 0.0, 0.0, 0.0], [-0.997500002, 25.0, 26.0, 1.0], [-0.0278545748, 0.0, 0.0, 0.0], [0.0475205556, 0.0, 0.0, 0.0], [0.0612865351, 0.0, 0.0, 0.0], [-0.00215244642, 0.0, 0.0, 0.0], [-0.0427612774, 0.0, 0.0, 0.0], [0.05130684, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([21, 22, 16, 8, 9, 10, 11, 12, 17, 23, 24, 19, 25, 26])
    branch_indices = np.array([0, 1, 3, 7, 15, 4, 2, 5, 6, 13, 18, 14, 20])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_990(xs):
    #Predicts Class 0
    function_dict = np.array([[0.702499986, 1.0, 2.0, 2.0], [-0.854499996, 3.0, 4.0, 4.0], [-0.984500051, 5.0, 6.0, 3.0], [0.576499999, 7.0, 8.0, 2.0], [0.0357202515, 0.0, 0.0, 0.0], [0.00976671651, 0.0, 0.0, 0.0], [-0.0348282643, 0.0, 0.0, 0.0], [-0.950500011, 9.0, 10.0, 3.0], [-0.989500046, 11.0, 12.0, 3.0], [-0.918500006, 13.0, 14.0, 4.0], [0.0212502964, 0.0, 0.0, 0.0], [0.0301987994, 0.0, 0.0, 0.0], [-0.00688632019, 0.0, 0.0, 0.0], [-0.00585720874, 0.0, 0.0, 0.0], [-0.0568435602, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 11, 12, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_991(xs):
    #Predicts Class 1
    function_dict = np.array([[0.361499995, 1.0, 2.0, 2.0], [0.286500007, 3.0, 4.0, 2.0], [-0.950500011, 5.0, 6.0, 3.0], [-0.00296947407, 0.0, 0.0, 0.0], [-0.0235606711, 0.0, 0.0, 0.0], [0.476500005, 7.0, 8.0, 2.0], [-0.019738093, 0.0, 0.0, 0.0], [-0.797500014, 9.0, 10.0, 1.0], [0.530499995, 11.0, 12.0, 2.0], [-0.012042718, 0.0, 0.0, 0.0], [0.054590974, 0.0, 0.0, 0.0], [-0.0333718807, 0.0, 0.0, 0.0], [-0.995499969, 13.0, 14.0, 3.0], [-0.0115088681, 0.0, 0.0, 0.0], [0.0260369536, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 9, 10, 11, 13, 14, 6])
    branch_indices = np.array([0, 1, 2, 5, 7, 8, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_992(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.930500031, 1.0, 2.0, 4.0], [0.612499952, 3.0, 4.0, 2.0], [-0.157499999, 5.0, 6.0, 0.0], [0.546499968, 7.0, 8.0, 2.0], [-0.038218908, 0.0, 0.0, 0.0], [-0.455500007, 9.0, 10.0, 1.0], [0.0367932022, 0.0, 0.0, 0.0], [0.457499981, 11.0, 12.0, 2.0], [0.0339540169, 0.0, 0.0, 0.0], [-0.972499967, 13.0, 14.0, 3.0], [0.0324496217, 0.0, 0.0, 0.0], [-0.995499969, 15.0, 16.0, 3.0], [-0.0281792693, 0.0, 0.0, 0.0], [-0.000958685298, 0.0, 0.0, 0.0], [-0.0455160327, 0.0, 0.0, 0.0], [0.00820866786, 0.0, 0.0, 0.0], [-0.00134587986, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 12, 8, 4, 13, 14, 10, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 5, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_993(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.770500004, 1.0, 2.0, 2.0], [-0.995499969, 3.0, 4.0, 1.0], [0.101500005, 5.0, 6.0, 0.0], [-0.99849999, 7.0, 8.0, 1.0], [0.0543396734, 0.0, 0.0, 0.0], [-0.0433499999, 9.0, 10.0, 0.0], [0.0284454394, 0.0, 0.0, 0.0], [0.564499974, 11.0, 12.0, 0.0], [-0.0398942381, 0.0, 0.0, 0.0], [-0.113499999, 13.0, 14.0, 0.0], [-0.662999988, 15.0, 16.0, 2.0], [0.549000025, 17.0, 18.0, 0.0], [0.618499994, 19.0, 20.0, 0.0], [-0.208499998, 21.0, 22.0, 0.0], [0.0868688077, 0.0, 0.0, 0.0], [-0.0990347341, 0.0, 0.0, 0.0], [-0.026821008, 0.0, 0.0, 0.0], [0.00104495347, 0.0, 0.0, 0.0], [-0.0377072468, 0.0, 0.0, 0.0], [0.0586722977, 0.0, 0.0, 0.0], [-0.00679373695, 0.0, 0.0, 0.0], [0.020496469, 0.0, 0.0, 0.0], [-0.0938036144, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 4, 21, 22, 14, 15, 16, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 5, 9, 13, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_994(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.395500004, 1.0, 2.0, 0.0], [-0.424499989, 3.0, 4.0, 0.0], [-0.378499985, 5.0, 6.0, 0.0], [-0.0168763846, 0.0, 0.0, 0.0], [0.0553336106, 0.0, 0.0, 0.0], [-0.0690240487, 0.0, 0.0, 0.0], [-0.456, 7.0, 8.0, 2.0], [-0.885499954, 9.0, 10.0, 2.0], [-0.0462832488, 0.0, 0.0, 0.0], [-0.0601500012, 11.0, 12.0, 0.0], [0.0691, 13.0, 14.0, 0.0], [0.00365398987, 0.0, 0.0, 0.0], [-0.00853524636, 0.0, 0.0, 0.0], [0.00671825232, 0.0, 0.0, 0.0], [0.0961939469, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 11, 12, 13, 14, 8])
    branch_indices = np.array([0, 1, 2, 6, 7, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_995(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.521499991, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.466499984, 7.0, 8.0, 0.0], [0.528499961, 9.0, 10.0, 0.0], [0.0476762131, 0.0, 0.0, 0.0], [-0.0126881069, 0.0, 0.0, 0.0], [0.463499993, 11.0, 12.0, 0.0], [0.503000021, 13.0, 14.0, 0.0], [0.5255, 15.0, 16.0, 0.0], [0.538499951, 17.0, 18.0, 0.0], [0.2755, 19.0, 20.0, 0.0], [-0.0825109929, 0.0, 0.0, 0.0], [0.0825317726, 0.0, 0.0, 0.0], [0.00207309634, 0.0, 0.0, 0.0], [-0.0195538867, 0.0, 0.0, 0.0], [-0.0692027882, 0.0, 0.0, 0.0], [0.0780031309, 0.0, 0.0, 0.0], [0.541499972, 21.0, 22.0, 0.0], [-0.00506539969, 0.0, 0.0, 0.0], [0.0167775061, 0.0, 0.0, 0.0], [-0.0566028319, 0.0, 0.0, 0.0], [-0.0045127729, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 14, 15, 16, 17, 21, 22, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 4, 9, 10, 18, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_996(xs):
    #Predicts Class 0
    function_dict = np.array([[0.338, 1.0, 2.0, 2.0], [-0.0191304628, 0.0, 0.0, 0.0], [-0.0936499983, 3.0, 4.0, 0.0], [-0.80250001, 5.0, 6.0, 1.0], [0.0280781705, 0.0, 0.0, 0.0], [-0.0278485995, 0.0, 0.0, 0.0], [-0.569499969, 7.0, 8.0, 1.0], [-0.674499989, 9.0, 10.0, 1.0], [-0.21450001, 11.0, 12.0, 0.0], [0.000366316002, 0.0, 0.0, 0.0], [0.0379605219, 0.0, 0.0, 0.0], [0.00291622779, 0.0, 0.0, 0.0], [-0.0366745591, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 5, 9, 10, 11, 12, 4])
    branch_indices = np.array([0, 2, 3, 6, 7, 8])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_997(xs):
    #Predicts Class 1
    function_dict = np.array([[0.483500004, 1.0, 2.0, 2.0], [-0.980499983, 3.0, 4.0, 3.0], [-0.675500035, 5.0, 6.0, 1.0], [-0.995499969, 7.0, 8.0, 3.0], [0.0127814924, 0.0, 0.0, 0.0], [-0.940500021, 9.0, 10.0, 4.0], [-0.62349999, 11.0, 12.0, 1.0], [-0.794499993, 13.0, 14.0, 1.0], [-0.0442321002, 0.0, 0.0, 0.0], [0.0492020473, 0.0, 0.0, 0.0], [-0.0103518236, 0.0, 0.0, 0.0], [-0.0444094986, 0.0, 0.0, 0.0], [-0.953500032, 15.0, 16.0, 4.0], [-0.01441589, 0.0, 0.0, 0.0], [0.0180436429, 0.0, 0.0, 0.0], [-0.0101693291, 0.0, 0.0, 0.0], [0.0249268413, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 8, 4, 9, 10, 11, 15, 16])
    branch_indices = np.array([0, 1, 3, 7, 2, 5, 6, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_998(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.266499996, 1.0, 2.0, 0.0], [-0.436500013, 3.0, 4.0, 1.0], [-0.997500002, 5.0, 6.0, 3.0], [0.00633476954, 0.0, 0.0, 0.0], [-0.031314645, 0.0, 0.0, 0.0], [-0.0163909458, 0.0, 0.0, 0.0], [-0.149500012, 7.0, 8.0, 0.0], [0.667500019, 9.0, 10.0, 2.0], [-0.0161748081, 0.0, 0.0, 0.0], [-0.960500002, 11.0, 12.0, 4.0], [-0.0103016132, 0.0, 0.0, 0.0], [0.00358422869, 0.0, 0.0, 0.0], [0.0674274415, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 5, 11, 12, 10, 8])
    branch_indices = np.array([0, 1, 2, 6, 7, 9])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_999(xs):
    #Predicts Class 3
    function_dict = np.array([[0.273999989, 1.0, 2.0, 0.0], [0.201499999, 3.0, 4.0, 0.0], [0.392499983, 5.0, 6.0, 0.0], [0.0894500017, 7.0, 8.0, 0.0], [0.212500006, 9.0, 10.0, 0.0], [-0.999500036, 11.0, 12.0, 1.0], [0.401499987, 13.0, 14.0, 0.0], [0.0850500017, 15.0, 16.0, 0.0], [0.190499991, 17.0, 18.0, 0.0], [-0.0886783674, 0.0, 0.0, 0.0], [0.263000011, 19.0, 20.0, 0.0], [0.136908039, 0.0, 0.0, 0.0], [-0.027693022, 0.0, 0.0, 0.0], [0.394500017, 21.0, 22.0, 0.0], [0.409500003, 23.0, 24.0, 0.0], [0.0776499957, 25.0, 26.0, 0.0], [0.0883999988, 27.0, 28.0, 0.0], [0.111500002, 29.0, 30.0, 0.0], [0.194499999, 31.0, 32.0, 0.0], [-0.999500036, 33.0, 34.0, 1.0], [-0.0975139365, 0.0, 0.0, 0.0], [-0.0548404306, 0.0, 0.0, 0.0], [-0.0153063415, 0.0, 0.0, 0.0], [0.0420631766, 0.0, 0.0, 0.0], [0.419499993, 35.0, 36.0, 0.0], [-0.000234638734, 0.0, 0.0, 0.0], [0.0885812119, 0.0, 0.0, 0.0], [-0.0772207007, 0.0, 0.0, 0.0], [-0.021731507, 0.0, 0.0, 0.0], [0.0163489543, 0.0, 0.0, 0.0], [0.0949552134, 0.0, 0.0, 0.0], [-0.0523062311, 0.0, 0.0, 0.0], [0.0295415614, 0.0, 0.0, 0.0], [0.0823931545, 0.0, 0.0, 0.0], [-0.0403480679, 0.0, 0.0, 0.0], [-0.0685244799, 0.0, 0.0, 0.0], [0.00790755078, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([25, 26, 27, 28, 29, 30, 31, 32, 9, 33, 34, 20, 11, 12, 21, 22, 23, 35, 36])
    branch_indices = np.array([0, 1, 3, 7, 15, 16, 8, 17, 18, 4, 10, 19, 2, 5, 6, 13, 14, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1000(xs):
    #Predicts Class 4
    function_dict = np.array([[0.0850500017, 1.0, 2.0, 0.0], [0.0776499957, 3.0, 4.0, 0.0], [-0.999500036, 5.0, 6.0, 4.0], [0.0757500008, 7.0, 8.0, 0.0], [-0.0874939635, 0.0, 0.0, 0.0], [0.0883999988, 9.0, 10.0, 0.0], [0.102509066, 0.0, 0.0, 0.0], [0.0476500019, 11.0, 12.0, 0.0], [0.118780613, 0.0, 0.0, 0.0], [0.0593616404, 0.0, 0.0, 0.0], [0.0892499983, 13.0, 14.0, 0.0], [0.03785, 15.0, 16.0, 0.0], [-0.972000003, 17.0, 18.0, 2.0], [-0.178994283, 0.0, 0.0, 0.0], [0.0917500034, 19.0, 20.0, 0.0], [-0.00152167294, 0.0, 0.0, 0.0], [0.0957685858, 0.0, 0.0, 0.0], [-0.108271688, 0.0, 0.0, 0.0], [0.0266561825, 0.0, 0.0, 0.0], [0.085157074, 0.0, 0.0, 0.0], [-0.000174640445, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 17, 18, 8, 4, 9, 13, 19, 20, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 2, 5, 10, 14])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1001(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.16049999, 1.0, 2.0, 0.0], [-0.972000003, 3.0, 4.0, 2.0], [-0.1505, 5.0, 6.0, 0.0], [-0.169499993, 7.0, 8.0, 0.0], [-0.398499995, 9.0, 10.0, 0.0], [-0.0362473428, 0.0, 0.0, 0.0], [-0.0802500024, 11.0, 12.0, 0.0], [-0.401000023, 13.0, 14.0, 0.0], [-0.1655, 15.0, 16.0, 0.0], [0.0207769219, 0.0, 0.0, 0.0], [-0.0668299198, 0.0, 0.0, 0.0], [0.0581032634, 0.0, 0.0, 0.0], [-0.032850001, 17.0, 18.0, 0.0], [-0.4375, 19.0, 20.0, 0.0], [-0.0435972773, 0.0, 0.0, 0.0], [-0.168500006, 21.0, 22.0, 0.0], [0.0785395354, 0.0, 0.0, 0.0], [-0.0610052496, 0.0, 0.0, 0.0], [-0.999500036, 23.0, 24.0, 1.0], [-0.0270445552, 0.0, 0.0, 0.0], [0.053090699, 0.0, 0.0, 0.0], [0.0624152385, 0.0, 0.0, 0.0], [-0.0184411388, 0.0, 0.0, 0.0], [-0.00339569594, 0.0, 0.0, 0.0], [0.0190205071, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 14, 21, 22, 16, 9, 10, 5, 11, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 4, 2, 6, 12, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1002(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.684499979, 1.0, 2.0, 1.0], [-0.71449995, 3.0, 4.0, 1.0], [-0.597499967, 5.0, 6.0, 1.0], [0.449499995, 7.0, 8.0, 2.0], [0.0306657515, 0.0, 0.0, 0.0], [-0.928499997, 9.0, 10.0, 4.0], [-0.538499951, 11.0, 12.0, 1.0], [-0.215499997, 13.0, 14.0, 0.0], [-0.215499997, 15.0, 16.0, 0.0], [0.00360615482, 0.0, 0.0, 0.0], [-0.0467257611, 0.0, 0.0, 0.0], [0.0297631975, 0.0, 0.0, 0.0], [-0.0120311389, 0.0, 0.0, 0.0], [-0.0207669251, 0.0, 0.0, 0.0], [0.0352919661, 0.0, 0.0, 0.0], [0.536499977, 17.0, 18.0, 2.0], [-0.0366738103, 0.0, 0.0, 0.0], [0.0291155726, 0.0, 0.0, 0.0], [-0.0119632417, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 17, 18, 16, 4, 9, 10, 11, 12])
    branch_indices = np.array([0, 1, 3, 7, 8, 15, 2, 5, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1003(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.975499988, 1.0, 2.0, 4.0], [-0.0176514462, 0.0, 0.0, 0.0], [-0.968500018, 3.0, 4.0, 4.0], [0.0282767992, 0.0, 0.0, 0.0], [-0.218499988, 5.0, 6.0, 0.0], [0.554499984, 7.0, 8.0, 2.0], [-0.186500013, 9.0, 10.0, 0.0], [-0.253499985, 11.0, 12.0, 0.0], [-0.296499997, 13.0, 14.0, 0.0], [0.0402229019, 0.0, 0.0, 0.0], [-0.0197213404, 0.0, 0.0, 0.0], [0.00220098044, 0.0, 0.0, 0.0], [-0.0617940277, 0.0, 0.0, 0.0], [-0.0112757189, 0.0, 0.0, 0.0], [0.0348685123, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 3, 11, 12, 13, 14, 9, 10])
    branch_indices = np.array([0, 2, 4, 5, 7, 8, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1004(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.762500048, 1.0, 2.0, 1.0], [-0.0190614611, 0.0, 0.0, 0.0], [-0.976500034, 3.0, 4.0, 3.0], [-0.996500015, 5.0, 6.0, 3.0], [-0.872500002, 7.0, 8.0, 4.0], [-0.590999961, 9.0, 10.0, 1.0], [-0.582000017, 11.0, 12.0, 1.0], [-0.926499963, 13.0, 14.0, 4.0], [-0.0117283026, 0.0, 0.0, 0.0], [0.0358020626, 0.0, 0.0, 0.0], [-0.0159336086, 0.0, 0.0, 0.0], [-0.0378275551, 0.0, 0.0, 0.0], [0.00726149138, 0.0, 0.0, 0.0], [0.00648639398, 0.0, 0.0, 0.0], [0.051007811, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 11, 12, 13, 14, 8])
    branch_indices = np.array([0, 2, 3, 5, 6, 4, 7])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1005(xs):
    #Predicts Class 3
    function_dict = np.array([[-0.274500012, 1.0, 2.0, 0.0], [-0.443499982, 3.0, 4.0, 0.0], [-0.249500006, 5.0, 6.0, 0.0], [0.0153298574, 0.0, 0.0, 0.0], [-0.296499997, 7.0, 8.0, 0.0], [0.0742398873, 0.0, 0.0, 0.0], [-0.205500007, 9.0, 10.0, 0.0], [-0.010390698, 0.0, 0.0, 0.0], [-0.037044201, 0.0, 0.0, 0.0], [-0.0411525406, 0.0, 0.0, 0.0], [-0.20449999, 11.0, 12.0, 0.0], [0.0751770958, 0.0, 0.0, 0.0], [-0.644500017, 13.0, 14.0, 2.0], [0.000192819629, 0.0, 0.0, 0.0], [-0.0521158539, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 7, 8, 5, 9, 11, 13, 14])
    branch_indices = np.array([0, 1, 4, 2, 6, 10, 12])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1006(xs):
    #Predicts Class 4
    function_dict = np.array([[0.082949996, 1.0, 2.0, 0.0], [0.0757500008, 3.0, 4.0, 0.0], [0.0867500007, 5.0, 6.0, 0.0], [0.0368999988, 7.0, 8.0, 0.0], [0.131285533, 0.0, 0.0, 0.0], [-0.109393194, 0.0, 0.0, 0.0], [0.0894500017, 9.0, 10.0, 0.0], [0.028549999, 11.0, 12.0, 0.0], [0.0447499976, 13.0, 14.0, 0.0], [0.0873000026, 15.0, 16.0, 0.0], [0.0941499993, 17.0, 18.0, 0.0], [0.025150001, 19.0, 20.0, 0.0], [0.127877831, 0.0, 0.0, 0.0], [-0.126779437, 0.0, 0.0, 0.0], [0.0506500006, 21.0, 22.0, 0.0], [-0.0189269297, 0.0, 0.0, 0.0], [0.083557561, 0.0, 0.0, 0.0], [-0.0782111213, 0.0, 0.0, 0.0], [0.157999992, 23.0, 24.0, 0.0], [0.000741520722, 0.0, 0.0, 0.0], [-0.0724535361, 0.0, 0.0, 0.0], [0.09250433, 0.0, 0.0, 0.0], [-0.0533671752, 0.0, 0.0, 0.0], [0.0586679429, 0.0, 0.0, 0.0], [-0.0164058656, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([19, 20, 12, 13, 21, 22, 4, 5, 15, 16, 17, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 11, 8, 14, 2, 6, 9, 10, 18])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1007(xs):
    #Predicts Class 5
    function_dict = np.array([[0.565500021, 1.0, 2.0, 0.0], [0.556499958, 3.0, 4.0, 0.0], [0.620499969, 5.0, 6.0, 0.0], [0.539999962, 7.0, 8.0, 0.0], [0.557999969, 9.0, 10.0, 0.0], [0.0488476753, 0.0, 0.0, 0.0], [-0.00844094343, 0.0, 0.0, 0.0], [0.534000039, 11.0, 12.0, 0.0], [0.0378265195, 0.0, 0.0, 0.0], [-0.0425333008, 0.0, 0.0, 0.0], [-0.00579853216, 0.0, 0.0, 0.0], [0.522500038, 13.0, 14.0, 0.0], [-0.0840200484, 0.0, 0.0, 0.0], [-0.000552794489, 0.0, 0.0, 0.0], [0.0399524271, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 9, 10, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 4, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1008(xs):
    #Predicts Class 0
    function_dict = np.array([[0.343500018, 1.0, 2.0, 2.0], [-0.0226890724, 0.0, 0.0, 0.0], [0.702499986, 3.0, 4.0, 2.0], [-0.961500049, 5.0, 6.0, 4.0], [0.737499952, 7.0, 8.0, 2.0], [-0.180500001, 9.0, 10.0, 0.0], [-0.119499996, 11.0, 12.0, 0.0], [-0.0303146504, 0.0, 0.0, 0.0], [0.006779816, 0.0, 0.0, 0.0], [0.013260006, 0.0, 0.0, 0.0], [-0.0452572219, 0.0, 0.0, 0.0], [-0.995499969, 13.0, 14.0, 3.0], [-0.0146244364, 0.0, 0.0, 0.0], [-0.010455492, 0.0, 0.0, 0.0], [0.0384582989, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 9, 10, 13, 14, 12, 7, 8])
    branch_indices = np.array([0, 2, 3, 5, 6, 11, 4])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1009(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.906499982, 1.0, 2.0, 4.0], [-0.95449996, 3.0, 4.0, 3.0], [0.612499952, 5.0, 6.0, 2.0], [-0.776499987, 7.0, 8.0, 1.0], [0.0269272774, 0.0, 0.0, 0.0], [-0.0334008075, 0.0, 0.0, 0.0], [0.00900189858, 0.0, 0.0, 0.0], [-0.804499984, 9.0, 10.0, 1.0], [0.557500005, 11.0, 12.0, 2.0], [-0.965499997, 13.0, 14.0, 4.0], [0.0474518314, 0.0, 0.0, 0.0], [-0.995499969, 15.0, 16.0, 3.0], [0.608500004, 17.0, 18.0, 2.0], [-0.0322767422, 0.0, 0.0, 0.0], [0.0128653264, 0.0, 0.0, 0.0], [0.00652937079, 0.0, 0.0, 0.0], [-0.0569550954, 0.0, 0.0, 0.0], [0.04181315, 0.0, 0.0, 0.0], [-0.0128471972, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 10, 15, 16, 17, 18, 4, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 9, 8, 11, 12, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1010(xs):
    #Predicts Class 2
    function_dict = np.array([[0.66050005, 1.0, 2.0, 2.0], [-0.889500022, 3.0, 4.0, 4.0], [0.715499997, 5.0, 6.0, 2.0], [-0.167499989, 7.0, 8.0, 0.0], [-0.0394316949, 0.0, 0.0, 0.0], [0.0363605246, 0.0, 0.0, 0.0], [0.772500038, 9.0, 10.0, 2.0], [-0.985499978, 11.0, 12.0, 3.0], [0.031677559, 0.0, 0.0, 0.0], [-0.0339018404, 0.0, 0.0, 0.0], [0.0223095864, 0.0, 0.0, 0.0], [-0.963500023, 13.0, 14.0, 4.0], [0.0134946024, 0.0, 0.0, 0.0], [0.00379190198, 0.0, 0.0, 0.0], [-0.0442509204, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([13, 14, 12, 8, 4, 5, 9, 10])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1011(xs):
    #Predicts Class 3
    function_dict = np.array([[0.465499997, 1.0, 2.0, 0.0], [0.455500007, 3.0, 4.0, 0.0], [0.489499986, 5.0, 6.0, 0.0], [0.445500016, 7.0, 8.0, 0.0], [0.463499993, 9.0, 10.0, 0.0], [0.0652283281, 0.0, 0.0, 0.0], [0.521499991, 11.0, 12.0, 0.0], [0.424000025, 13.0, 14.0, 0.0], [0.0446100347, 0.0, 0.0, 0.0], [-0.0543677919, 0.0, 0.0, 0.0], [-0.00759788789, 0.0, 0.0, 0.0], [-0.0398479439, 0.0, 0.0, 0.0], [0.537500024, 15.0, 16.0, 0.0], [0.419499993, 17.0, 18.0, 0.0], [-0.999500036, 19.0, 20.0, 1.0], [0.523499966, 21.0, 22.0, 0.0], [0.543500006, 23.0, 24.0, 0.0], [-0.00123182603, 0.0, 0.0, 0.0], [0.0635218471, 0.0, 0.0, 0.0], [-0.0569726676, 0.0, 0.0, 0.0], [0.0332783759, 0.0, 0.0, 0.0], [0.0163071509, 0.0, 0.0, 0.0], [0.058488097, 0.0, 0.0, 0.0], [-0.0546369404, 0.0, 0.0, 0.0], [0.00937258918, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 9, 10, 5, 11, 21, 22, 23, 24])
    branch_indices = np.array([0, 1, 3, 7, 13, 14, 4, 2, 6, 12, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1012(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.99849999, 1.0, 2.0, 4.0], [-0.0297999997, 3.0, 4.0, 0.0], [-0.0536499992, 5.0, 6.0, 0.0], [-0.0382499993, 7.0, 8.0, 0.0], [-0.0154499998, 9.0, 10.0, 0.0], [0.0133298533, 0.0, 0.0, 0.0], [-0.0768688396, 0.0, 0.0, 0.0], [-0.0437000021, 11.0, 12.0, 0.0], [-0.142518699, 0.0, 0.0, 0.0], [-0.972000003, 13.0, 14.0, 2.0], [-0.00894000009, 15.0, 16.0, 0.0], [-0.0460999981, 17.0, 18.0, 0.0], [-0.0416000001, 19.0, 20.0, 0.0], [0.162510067, 0.0, 0.0, 0.0], [0.0226212479, 0.0, 0.0, 0.0], [-0.0143499998, 21.0, 22.0, 0.0], [-0.0052199997, 23.0, 24.0, 0.0], [0.000223398863, 0.0, 0.0, 0.0], [-0.104409263, 0.0, 0.0, 0.0], [0.124546893, 0.0, 0.0, 0.0], [0.0204719976, 0.0, 0.0, 0.0], [-0.0126861641, 0.0, 0.0, 0.0], [-0.124320865, 0.0, 0.0, 0.0], [0.17926982, 0.0, 0.0, 0.0], [-0.00317267422, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 19, 20, 8, 13, 14, 21, 22, 23, 24, 5, 6])
    branch_indices = np.array([0, 1, 3, 7, 11, 12, 4, 9, 10, 15, 16, 2])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1013(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.46450001, 1.0, 2.0, 0.0], [0.0360616483, 0.0, 0.0, 0.0], [-0.99150002, 3.0, 4.0, 1.0], [-0.0315500014, 5.0, 6.0, 0.0], [-0.0766549855, 0.0, 0.0, 0.0], [-0.0807500035, 7.0, 8.0, 0.0], [0.203500003, 9.0, 10.0, 0.0], [-0.972000003, 11.0, 12.0, 2.0], [-0.0742499977, 13.0, 14.0, 0.0], [0.172499999, 15.0, 16.0, 0.0], [0.228500009, 17.0, 18.0, 0.0], [0.0156349, 0.0, 0.0, 0.0], [-0.0687737316, 0.0, 0.0, 0.0], [0.0831972137, 0.0, 0.0, 0.0], [0.0216308199, 0.0, 0.0, 0.0], [-0.0671203732, 0.0, 0.0, 0.0], [-0.0254981425, 0.0, 0.0, 0.0], [0.103457041, 0.0, 0.0, 0.0], [0.00017122741, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([1, 11, 12, 13, 14, 15, 16, 17, 18, 4])
    branch_indices = np.array([0, 2, 3, 5, 7, 8, 6, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1014(xs):
    #Predicts Class 0
    function_dict = np.array([[-0.179500014, 1.0, 2.0, 0.0], [0.442499995, 3.0, 4.0, 2.0], [0.437999994, 5.0, 6.0, 2.0], [0.0204061642, 0.0, 0.0, 0.0], [-0.216499999, 7.0, 8.0, 0.0], [-0.0197529867, 0.0, 0.0, 0.0], [0.667999983, 9.0, 10.0, 2.0], [-0.946500003, 11.0, 12.0, 4.0], [-0.938500047, 13.0, 14.0, 4.0], [0.0408090018, 0.0, 0.0, 0.0], [-0.00580566796, 0.0, 0.0, 0.0], [-0.0240980852, 0.0, 0.0, 0.0], [-0.315500021, 15.0, 16.0, 0.0], [-0.00913322438, 0.0, 0.0, 0.0], [-0.0562086105, 0.0, 0.0, 0.0], [-0.0164940804, 0.0, 0.0, 0.0], [0.0285561457, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 11, 15, 16, 13, 14, 5, 9, 10])
    branch_indices = np.array([0, 1, 4, 7, 12, 8, 2, 6])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1015(xs):
    #Predicts Class 1
    function_dict = np.array([[-0.75849998, 1.0, 2.0, 1.0], [-0.225499988, 3.0, 4.0, 0.0], [0.570500016, 5.0, 6.0, 2.0], [-0.255500019, 7.0, 8.0, 0.0], [0.387000024, 9.0, 10.0, 2.0], [-0.245999992, 11.0, 12.0, 0.0], [-0.2465, 13.0, 14.0, 0.0], [-0.00972064957, 0.0, 0.0, 0.0], [0.0329631716, 0.0, 0.0, 0.0], [0.00371119543, 0.0, 0.0, 0.0], [-0.0496102087, 0.0, 0.0, 0.0], [-0.00342331571, 0.0, 0.0, 0.0], [-0.211499989, 15.0, 16.0, 0.0], [-0.987499952, 17.0, 18.0, 3.0], [-0.030686209, 0.0, 0.0, 0.0], [0.0535048321, 0.0, 0.0, 0.0], [0.00166708941, 0.0, 0.0, 0.0], [0.0370706692, 0.0, 0.0, 0.0], [-0.0201077741, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([7, 8, 9, 10, 11, 15, 16, 17, 18, 14])
    branch_indices = np.array([0, 1, 3, 4, 2, 5, 12, 6, 13])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1016(xs):
    #Predicts Class 2
    function_dict = np.array([[-0.718500018, 1.0, 2.0, 1.0], [-0.756500006, 3.0, 4.0, 1.0], [-0.13350001, 5.0, 6.0, 0.0], [0.00401583267, 0.0, 0.0, 0.0], [-0.0348297916, 0.0, 0.0, 0.0], [-0.630499959, 7.0, 8.0, 1.0], [-0.0263245013, 0.0, 0.0, 0.0], [0.0468368232, 0.0, 0.0, 0.0], [0.66050005, 9.0, 10.0, 2.0], [0.573500037, 11.0, 12.0, 2.0], [-0.240500003, 13.0, 14.0, 0.0], [-0.00136566907, 0.0, 0.0, 0.0], [-0.0380467288, 0.0, 0.0, 0.0], [-0.00312731834, 0.0, 0.0, 0.0], [0.0363128409, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([3, 4, 7, 11, 12, 13, 14, 6])
    branch_indices = np.array([0, 1, 2, 5, 8, 9, 10])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1017(xs):
    #Predicts Class 3
    function_dict = np.array([[0.00456999987, 1.0, 2.0, 0.0], [0.00202000001, 3.0, 4.0, 0.0], [0.0079549998, 5.0, 6.0, 0.0], [0.000549999997, 7.0, 8.0, 0.0], [0.123542666, 0.0, 0.0, 0.0], [-0.132870585, 0.0, 0.0, 0.0], [0.0192999989, 9.0, 10.0, 0.0], [-0.00102999993, 11.0, 12.0, 0.0], [-0.09473373, 0.0, 0.0, 0.0], [0.0101999994, 13.0, 14.0, 0.0], [0.02685, 15.0, 16.0, 0.0], [-0.00209000008, 17.0, 18.0, 0.0], [0.0937147811, 0.0, 0.0, 0.0], [0.00177118159, 0.0, 0.0, 0.0], [0.13009125, 0.0, 0.0, 0.0], [0.0240500011, 19.0, 20.0, 0.0], [0.0353999995, 21.0, 22.0, 0.0], [0.00190523267, 0.0, 0.0, 0.0], [-0.084659569, 0.0, 0.0, 0.0], [-0.0149037167, 0.0, 0.0, 0.0], [-0.118829869, 0.0, 0.0, 0.0], [0.0904591978, 0.0, 0.0, 0.0], [-0.00161792955, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([17, 18, 12, 8, 4, 5, 13, 14, 19, 20, 21, 22])
    branch_indices = np.array([0, 1, 3, 7, 11, 2, 6, 9, 10, 15, 16])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1018(xs):
    #Predicts Class 4
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [0.1105, 3.0, 4.0, 0.0], [-0.407499999, 5.0, 6.0, 0.0], [0.0854000002, 7.0, 8.0, 0.0], [0.192499995, 9.0, 10.0, 0.0], [0.0332511254, 0.0, 0.0, 0.0], [-0.188499987, 11.0, 12.0, 0.0], [0.0824999958, 13.0, 14.0, 0.0], [0.0892499983, 15.0, 16.0, 0.0], [0.0927396864, 0.0, 0.0, 0.0], [0.195499986, 17.0, 18.0, 0.0], [-0.747500002, 19.0, 20.0, 2.0], [-0.73150003, 21.0, 22.0, 2.0], [0.0760499984, 23.0, 24.0, 0.0], [0.12330731, 0.0, 0.0, 0.0], [0.0883999988, 25.0, 26.0, 0.0], [0.0923999995, 27.0, 28.0, 0.0], [-0.0629053861, 0.0, 0.0, 0.0], [0.196500003, 29.0, 30.0, 0.0], [-0.0966736227, 0.0, 0.0, 0.0], [0.000982900965, 0.0, 0.0, 0.0], [0.0525853895, 0.0, 0.0, 0.0], [-0.997500002, 31.0, 32.0, 1.0], [0.0024617475, 0.0, 0.0, 0.0], [-0.125958532, 0.0, 0.0, 0.0], [-0.0310747679, 0.0, 0.0, 0.0], [-0.123270638, 0.0, 0.0, 0.0], [0.0567959137, 0.0, 0.0, 0.0], [-0.0911397412, 0.0, 0.0, 0.0], [0.0621217638, 0.0, 0.0, 0.0], [-0.0122810407, 0.0, 0.0, 0.0], [0.0053209723, 0.0, 0.0, 0.0], [-0.0965814888, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([23, 24, 14, 25, 26, 27, 28, 9, 17, 29, 30, 5, 19, 20, 21, 31, 32])
    branch_indices = np.array([0, 1, 3, 7, 13, 8, 15, 16, 4, 10, 18, 2, 6, 11, 12, 22])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def booster_1019(xs):
    #Predicts Class 5
    function_dict = np.array([[-0.999500036, 1.0, 2.0, 1.0], [-0.162, 3.0, 4.0, 0.0], [-0.29549998, 5.0, 6.0, 0.0], [-0.380499989, 7.0, 8.0, 0.0], [-0.0745999962, 9.0, 10.0, 0.0], [-0.997500002, 11.0, 12.0, 1.0], [0.00518500013, 13.0, 14.0, 0.0], [-0.406000018, 15.0, 16.0, 0.0], [-0.999500036, 17.0, 18.0, 4.0], [-0.155499995, 19.0, 20.0, 0.0], [-0.0127000008, 21.0, 22.0, 0.0], [0.0617171228, 0.0, 0.0, 0.0], [0.00916323066, 0.0, 0.0, 0.0], [-0.0488520265, 0.0, 0.0, 0.0], [0.428499997, 23.0, 24.0, 0.0], [-0.0384342484, 0.0, 0.0, 0.0], [0.0503977835, 0.0, 0.0, 0.0], [-0.168500006, 25.0, 26.0, 0.0], [0.00806180015, 0.0, 0.0, 0.0], [0.00989675988, 0.0, 0.0, 0.0], [-0.154500008, 27.0, 28.0, 0.0], [-0.0913155526, 0.0, 0.0, 0.0], [-0.0123999994, 29.0, 30.0, 0.0], [0.253000021, 31.0, 32.0, 0.0], [0.43599999, 33.0, 34.0, 0.0], [0.0011666948, 0.0, 0.0, 0.0], [-0.0747916847, 0.0, 0.0, 0.0], [0.0473651886, 0.0, 0.0, 0.0], [0.0221918412, 0.0, 0.0, 0.0], [0.0650212169, 0.0, 0.0, 0.0], [-0.00477752835, 0.0, 0.0, 0.0], [0.00221123034, 0.0, 0.0, 0.0], [0.0741445497, 0.0, 0.0, 0.0], [-0.0441193432, 0.0, 0.0, 0.0], [0.0316999555, 0.0, 0.0, 0.0], [-1.0, -1.0, -1.0, -1.0]])
    leaf_indices = np.array([15, 16, 25, 26, 18, 19, 27, 28, 21, 29, 30, 11, 12, 13, 31, 32, 33, 34])
    branch_indices = np.array([0, 1, 3, 7, 8, 17, 4, 9, 20, 10, 22, 2, 5, 6, 14, 23, 24])
    pointers = np.zeros(xs.shape[0]).astype('int')
    values = np.zeros(xs.shape[0])
    dones = np.zeros(xs.shape[0])
    while True:
        pointed_at_leaf_rowindices = np.argwhere(np.isin(pointers,leaf_indices).reshape(-1)).reshape(-1)
        if pointed_at_leaf_rowindices.shape[0]>0:
            leaf_pointers = pointers[pointed_at_leaf_rowindices]
            dones[pointed_at_leaf_rowindices] = np.ones(pointed_at_leaf_rowindices.shape[0])
            values[pointed_at_leaf_rowindices] = function_dict[leaf_pointers,0].reshape(-1)
        pointed_at_branch_rowindices = np.argwhere(np.isin(pointers, branch_indices)).reshape(-1)
        if pointed_at_branch_rowindices.shape[0]>0:
            features_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 3].reshape(-1).astype('int')
            branching_rows = xs[pointed_at_branch_rowindices, :].reshape(pointed_at_branch_rowindices.shape[0],-1)
            no_pointed_at = function_dict[:-1][pointers, 2].reshape(-1).astype('int')
            yes_pointed_at = function_dict[:-1][pointers, 1].reshape(-1).astype('int')
            thres_pointed_at = function_dict[:-1][pointers[pointed_at_branch_rowindices], 0].reshape(-1).astype('float64')
            feature_val_for_each_row = branching_rows[np.arange(len(branching_rows)),features_pointed_at].reshape(-1).astype('float64')
            yes_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row < thres_pointed_at).reshape(-1)]
            pointers[yes_indices] = yes_pointed_at[yes_indices]
            no_indices = pointed_at_branch_rowindices[np.argwhere(feature_val_for_each_row >= thres_pointed_at).reshape(-1)]
            pointers[no_indices] = no_pointed_at[no_indices]
        if pointed_at_leaf_rowindices.shape[0]>0:
            pointers[pointed_at_leaf_rowindices] = -1 * np.ones(pointed_at_leaf_rowindices.shape[0])
        if (dones==1).all() or (pointers == -1).all():
            break
    return values
def logit_class_0(xs):
    sum_of_leaf_values = np.zeros(xs.shape[0])
    for booster_index in range(0,1020,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_1(xs):
    sum_of_leaf_values = np.zeros(xs.shape[0])
    for booster_index in range(1,1020,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_2(xs):
    sum_of_leaf_values = np.zeros(xs.shape[0])
    for booster_index in range(2,1020,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_3(xs):
    sum_of_leaf_values = np.zeros(xs.shape[0])
    for booster_index in range(3,1020,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_4(xs):
    sum_of_leaf_values = np.zeros(xs.shape[0])
    for booster_index in range(4,1020,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def logit_class_5(xs):
    sum_of_leaf_values = np.zeros(xs.shape[0])
    for booster_index in range(5,1020,6):
            sum_of_leaf_values += eval('booster_' + str(booster_index) + '(xs)')
    return sum_of_leaf_values


def classify(rows, return_probabilities=False):
    logits = []
    logits.append(logit_class_0)
    logits.append(logit_class_1)
    logits.append(logit_class_2)
    logits.append(logit_class_3)
    logits.append(logit_class_4)
    logits.append(logit_class_5)
    o = np.array([logits[class_index](rows) for class_index in range(6)]).T
    if not return_probabilities:
        return np.argmax(o,axis=1)
    else:
        exps = np.exp(o)
        Z = np.sum(exps, axis=1).reshape(-1, 1)
        return exps/Z





def Validate(cleanarr):
    #validation
    outputs = classify(cleanarr[:, :-1])
    #metrics
    count, correct_count = 0, 0
    numeachclass = {}
    for k, o in enumerate(outputs):
        if int(o) == int(float(cleanarr[k, -1])):
            correct_count += 1
        if int(float(cleanarr[k, -1])) in numeachclass.keys():
            numeachclass[int(float(cleanarr[k, -1]))] += 1
        else:
            numeachclass[int(float(cleanarr[k, -1]))] = 1
        count += 1
    return count, correct_count, numeachclass, outputs


def Predict(arr,headerless,csvfile, get_key, classmapping):
    with open(csvfile, 'r') as csvinput:
        #readers and writers
        reader = csv.reader(csvinput)

        #print original header
        if (not headerless):
            print(','.join(next(reader, None) + ["Prediction"]))
        
        outputs = classify(arr)
        for i, row in enumerate(reader):
            #use the transformed array as input to predictor
            pred = str(get_key(int(outputs[i]), classmapping))
            #use original untransformed line to write out
            row.append(pred)
            print(','.join(['"' + field + '"' if ',' in field else field for field in row]))



# Main method
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on '+TRAINFILE)
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-cleanfile', action='store_true', help='Use this flag to save prediction time if the csvfile you are passing has already been preprocessed. Implies headerless.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    parser.add_argument('-json', action="store_true", default=False, help="report measurements as json")
    parser.add_argument('-trim', action="store_true", help="If true, the prediction will not output ignored columns.")
    args = parser.parse_args()
    faulthandler.enable()
    global pool
    if args.validate:
        args.trim = True
    
    #clean if not already clean
    if not args.cleanfile:
        tempdir = tempfile.gettempdir()
        cleanfile = tempfile.NamedTemporaryFile().name
        preprocessedfile = tempfile.NamedTemporaryFile().name
        output = preprocess(args.csvfile,preprocessedfile,args.headerless,(not args.validate), trim=args.trim)
        get_key, classmapping = clean(preprocessedfile if output!=-1 else args.csvfile, cleanfile, -1, args.headerless, (not args.validate), trim=args.trim)
    else:
        cleanfile=args.csvfile
        preprocessedfile=args.csvfile
        get_key = lambda x, y: x
        classmapping = {}
        output=None


    #load file
    cleanarr = np.loadtxt(cleanfile, delimiter=',', dtype='float64')
    if not args.trim and ignorecolumns != []:
        cleanarr = cleanarr[:, important_idxs]


    #Predict
    if not args.validate:
        Predict(cleanarr, args.headerless, preprocessedfile if output!=-1 else args.csvfile, get_key, classmapping)


    #Validate
    else:
        classifier_type = 'RF'
        count, correct_count, numeachclass, preds = Validate(cleanarr)
        #Correct Labels
        true_labels = cleanarr[:, -1]

        #Report Metrics
        model_cap=13
        if args.json:
            import json
        if n_classes == 2:
            #Base metrics
            FN = float(num_FN) * 100.0 / float(count)
            FP = float(num_FP) * 100.0 / float(count)
            TN = float(num_TN) * 100.0 / float(count)
            TP = float(num_TP) * 100.0 / float(count)
            num_correct = correct_count

            #Calculated Metrics
            if int(num_TP + num_FN) != 0:
                TPR = num_TP / (num_TP + num_FN) # Sensitivity, Recall
            if int(num_TN + num_FP) != 0:
                TNR = num_TN / (num_TN + num_FP) # Specificity
            if int(num_TP + num_FP) != 0:
                PPV = num_TP / (num_TP + num_FP) # Recall
            if int(num_FN + num_TP) != 0:
                FNR = num_FN / (num_FN + num_TP) # Miss rate
            if int(2 * num_TP + num_FP + num_FN) != 0:
                FONE = 2 * num_TP / (2 * num_TP + num_FP + num_FN) # F1 Score
            if int(num_TP + num_FN + num_FP) != 0:
                TS = num_TP / (num_TP + num_FN + num_FP) # Critical Success Index
            #Best Guess Accuracy
            randguess = int(float(10000.0 * max(num_class_1, num_class_0)) / count) / 100.0
            #Model Accuracy
            classbalance = [float(num_class_0)/count, float(num_class_1)/count]
            H = float(-1.0 * sum([classbalance[i] * math.log(classbalance[i]) / math.log(2) for i in range(len(classbalance))]))

            modelacc = int(float(num_correct * 10000) / count) / 100.0
            #Report
            json_dict = {'instance_count':                        count ,
                         'classifier_type':                        classifier_type,
                         'classes':                            2 ,
                         'false_negative_instances':    num_FN ,
                         'false_positive_instances':    num_FP ,
                         'true_positive_instances':    num_TP ,
                         'true_negative_instances':    num_TN,
                         'false_negatives':                        FN ,
                         'false_positives':                        FP ,
                         'true_negatives':                        TN ,
                         'true_positives':                        TP ,
                         'number_correct':                        num_correct ,
                         'accuracy': {
                             'best_guess': randguess,
                             'improvement': modelacc-randguess,
                             'model_accuracy': modelacc,
                         },
                         'model_capacity':                        model_cap ,
                         'generalization_ratio':                int(float(num_correct * 100) / model_cap) * H/ 100.0,
                         'model_efficiency':                    int(100 * (modelacc - randguess) / model_cap) / 100.0,
                        'shannon_entropy_of_labels':           H,
                        'classbalance':                        classbalance}
            if args.json:
                pass
            else:
                if classifier_type == 'NN':
                    print("Classifier Type:                    Neural Network")
                elif classifier_type == 'RF':
                    print("Classifier Type:                    Random Forest")
                else:
                    print("Classifier Type:                    Decision Tree")
                print("System Type:                        Binary classifier")
                print("Best-guess accuracy:                {:.2f}%".format(randguess))
                print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
                print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
                print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
                print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0 * H) + " bits/bit")
                print("Model efficiency:                   {:.2f}%/parameter".format(int(100 * (modelacc - randguess) / model_cap) / 100.0))
                print("System behavior")
                print("True Negatives:                     {:.2f}%".format(TN) + " (" + str(int(num_TN)) + "/" + str(count) + ")")
                print("True Positives:                     {:.2f}%".format(TP) + " (" + str(int(num_TP)) + "/" + str(count) + ")")
                print("False Negatives:                    {:.2f}%".format(FN) + " (" + str(int(num_FN)) + "/" + str(count) + ")")
                print("False Positives:                    {:.2f}%".format(FP) + " (" + str(int(num_FP)) + "/" + str(count) + ")")
                if int(num_TP + num_FN) != 0:
                    print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
                if int(num_TN + num_FP) != 0:
                    print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
                if int(num_TP + num_FP) != 0:
                    print("Precision:                          {:.2f}".format(PPV))
                if int(2 * num_TP + num_FP + num_FN) != 0:
                    print("F-1 Measure:                        {:.2f}".format(FONE))
                if int(num_TP + num_FN) != 0:
                    print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
                if int(num_TP + num_FN + num_FP) != 0:
                    print("Critical Success Index:             {:.2f}".format(TS))
        #Multiclass
        else:
            num_correct = correct_count
            modelacc = int(float(num_correct * 10000) / count) / 100.0
            randguess = round(max(numeachclass.values()) / sum(numeachclass.values()) * 100, 2)
            classbalance = [float(numofcertainclass) / count for numofcertainclass in numeachclass.values()]
            H = float(-1.0 * sum([classbalance[i] * math.log(classbalance[i]) / math.log(2) for i in range(len(classbalance))]))

            if args.json:
                json_dict = {'instance_count':                        count,
                            'classifier_type':                        classifier_type,
                            'classes':                            n_classes,
                             'number_correct': num_correct,
                             'accuracy': {
                                 'best_guess': randguess,
                                 'improvement': modelacc - randguess,
                                 'model_accuracy': modelacc,
                             },
                             'model_capacity': model_cap,
                            'generalization_ratio':                int(float(num_correct * 100) / model_cap) / 100.0 * H,
                            'model_efficiency':                    int(100 * (modelacc - randguess) / model_cap) / 100.0,
                        'shannon_entropy_of_labels':           H,
                        'classbalance':                        classbalance}
            else:
                if classifier_type == 'NN':
                    print("Classifier Type:                    Neural Network")
                elif classifier_type == 'RF':
                    print("Classifier Type:                    Random Forest")
                else:
                    print("Classifier Type:                    Decision Tree")
                print("System Type:                        " + str(n_classes) + "-way classifier")
                print("Best-guess accuracy:                {:.2f}%".format(randguess))
                print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
                print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
                print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
                print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0 * H) + " bits/bit")
                print("Model efficiency:                   {:.2f}%/parameter".format(int(100 * (modelacc - randguess) / model_cap) / 100.0))

        try:
            import numpy as np # For numpy see: http://numpy.org
            from numpy import array
        except:
            print("Note: If you install numpy (https://www.numpy.org) and scipy (https://www.scipy.org) this predictor generates a confusion matrix")

        def confusion_matrix(y_true, y_pred, json, labels=None, sample_weight=None, normalize=None):
            stats = {}
            if labels is None:
                labels = np.array(list(set(list(y_true.astype('int')))))
            else:
                labels = np.asarray(labels)
                if np.all([l not in y_true for l in labels]):
                    raise ValueError("At least one label specified must be in y_true")
            n_labels = labels.size

            for class_i in range(n_labels):
                stats[class_i] = {'TP':{},'FP':{},'FN':{},'TN':{}}
                class_i_indices = np.argwhere(y_true==class_i)
                not_class_i_indices = np.argwhere(y_true!=class_i)
                stats[int(class_i)]['TP'] = int(np.sum(y_pred[class_i_indices]==y_true[class_i_indices]))
                stats[int(class_i)]['FP'] = int(np.sum(y_pred[class_i_indices]!=y_true[class_i_indices]))
                stats[int(class_i)]['TN'] = int(np.sum(y_pred[not_class_i_indices]==y_true[not_class_i_indices]))
                stats[int(class_i)]['FN'] = int(np.sum(y_pred[not_class_i_indices]!=y_true[not_class_i_indices]))
            #check for numpy/scipy is imported
            try:
                from scipy.sparse import coo_matrix #required for multiclass metrics
            except:
                if not json:
                    print("Note: If you install scipy (https://www.scipy.org) this predictor generates a confusion matrix")
                    sys.exit()
                else:
                    return np.array([]), stats
                

            # Compute confusion matrix to evaluate the accuracy of a classification.
            # By definition a confusion matrix :math:C is such that :math:C_{i, j}
            # is equal to the number of observations known to be in group :math:i and
            # predicted to be in group :math:j.
            # Thus in binary classification, the count of true negatives is
            # :math:C_{0,0}, false negatives is :math:C_{1,0}, true positives is
            # :math:C_{1,1} and false positives is :math:C_{0,1}.
            # Read more in the :ref:User Guide <confusion_matrix>.
            # Parameters
            # ----------
            # y_true : array-like of shape (n_samples,)
            # Ground truth (correct) target values.
            # y_pred : array-like of shape (n_samples,)
            # Estimated targets as returned by a classifier.
            # labels : array-like of shape (n_classes), default=None
            # List of labels to index the matrix. This may be used to reorder
            # or select a subset of labels.
            # If None is given, those that appear at least once
            # in y_true or y_pred are used in sorted order.
            # sample_weight : array-like of shape (n_samples,), default=None
            # Sample weights.
            # normalize : {'true', 'pred', 'all'}, default=None
            # Normalizes confusion matrix over the true (rows), predicted (columns)
            # conditions or all the population. If None, confusion matrix will not be
            # normalized.
            # Returns
            # -------
            # C : ndarray of shape (n_classes, n_classes)
            # Confusion matrix.
            # References
            # ----------



            if sample_weight is None:
                sample_weight = np.ones(y_true.shape[0], dtype=np.int64)
            else:
                sample_weight = np.asarray(sample_weight)
            if y_true.shape[0]!=y_pred.shape[0]:
                raise ValueError("y_true and y_pred must be of the same length")

            if normalize not in ['true', 'pred', 'all', None]:
                raise ValueError("normalize must be one of {'true', 'pred', 'all', None}")


            label_to_ind = {y: x for x, y in enumerate(labels)}
            # convert yt, yp into index
            y_pred = np.array([label_to_ind.get(x, n_labels + 1) for x in y_pred])
            y_true = np.array([label_to_ind.get(x, n_labels + 1) for x in y_true])
            # intersect y_pred, y_true with labels, eliminate items not in labels
            ind = np.logical_and(y_pred < n_labels, y_true < n_labels)
            y_pred = y_pred[ind]
            y_true = y_true[ind]

            # also eliminate weights of eliminated items
            sample_weight = sample_weight[ind]
            # Choose the accumulator dtype to always have high precision
            if sample_weight.dtype.kind in {'i', 'u', 'b'}:
                dtype = np.int64
            else:
                dtype = np.float64
            cm = coo_matrix((sample_weight, (y_true, y_pred)), shape=(n_labels, n_labels), dtype=dtype,).toarray()


            with np.errstate(all='ignore'):
                if normalize == 'true':
                    cm = cm / cm.sum(axis=1, keepdims=True)
                elif normalize == 'pred':
                    cm = cm / cm.sum(axis=0, keepdims=True)
                elif normalize == 'all':
                    cm = cm / cm.sum()
                cm = np.nan_to_num(cm)
            return cm, stats
        mtrx, stats = confusion_matrix(np.array(true_labels).reshape(-1), np.array(preds).reshape(-1), args.json)
        if args.json:
            json_dict['confusion_matrix'] = mtrx.tolist()
            json_dict['multiclass_stats'] = stats
            print(json.dumps(json_dict))
        else:
            mtrx = mtrx / np.sum(mtrx) * 100.0
            print("Confusion Matrix:")
            print(' ' + np.array2string(mtrx, formatter={'float': (lambda x: '{:.2f}%'.format(round(float(x), 2)))})[1:-1])

    #Clean Up
    if not args.cleanfile:
        os.remove(cleanfile)
        if output!=-1:
            os.remove(preprocessedfile)
